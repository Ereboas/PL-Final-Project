DIGEST 2b0c109a93a8a0912e4ded8b9e1a684c
FVST.floyd.compare_lemmas
R15:29 VST.floyd.base2 <> <> lib
R47:69 VST.floyd.client_lemmas <> <> lib
prf 125:142 <> typed_true_nullptr
binder 153:153 <> v:1
binder 155:156 <> t0:2
binder 158:158 <> t:3
binder 160:161 <> t':4
R243:249 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R251:251 Coq.Init.Logic <> ::type_scope:x_'='_x not
R250:250 VST.floyd.compare_lemmas <> v:1 var
R252:258 VST.veric.base <> nullval def
R167:176 VST.veric.SeparationLogic <> typed_true def
R182:190 VST.veric.val_lemmas <> force_val def
R193:199 VST.veric.Clight_Cop2 <> sem_cmp def
R227:230 compcert.common.Values <> Vint constr
R232:239 compcert.lib.Integers Int zero def
R224:224 VST.floyd.compare_lemmas <> v:1 var
R215:218 compcert.exportclight.Clightdefs <> tptr def
R220:221 VST.floyd.compare_lemmas <> t':4 var
R206:209 compcert.exportclight.Clightdefs <> tptr def
R211:211 VST.floyd.compare_lemmas <> t:3 var
R201:203 compcert.lib.Integers <> Ceq constr
R178:179 VST.floyd.compare_lemmas <> t0:2 var
R299:310 Coq.Bool.Bool <> andb_false_r thm
R299:310 Coq.Bool.Bool <> andb_false_r thm
R299:310 Coq.Bool.Bool <> andb_false_r thm
R299:310 Coq.Bool.Bool <> andb_false_r thm
R299:310 Coq.Bool.Bool <> andb_false_r thm
R338:347 VST.veric.SeparationLogic <> typed_true def
R350:358 VST.veric.val_lemmas <> force_val def
R361:370 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R373:387 VST.veric.mpred <> strict_bool_val def
R390:396 VST.veric.base <> nullval def
R414:424 compcert.x86_32.Archi <> ptr64 def
R467:476 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R479:493 VST.veric.mpred <> strict_bool_val def
R549:559 compcert.lib.Integers Int eq_spec thm
R563:570 compcert.lib.Integers Int zero def
R585:590 compcert.lib.Integers Int eq def
R594:601 compcert.lib.Integers Int zero def
R414:424 compcert.x86_32.Archi <> ptr64 def
R549:559 compcert.lib.Integers Int eq_spec thm
R563:570 compcert.lib.Integers Int zero def
R549:559 compcert.lib.Integers Int eq_spec thm
R563:570 compcert.lib.Integers Int zero def
R549:559 compcert.lib.Integers Int eq_spec thm
R563:570 compcert.lib.Integers Int zero def
R549:559 compcert.lib.Integers Int eq_spec thm
R563:570 compcert.lib.Integers Int zero def
R549:559 compcert.lib.Integers Int eq_spec thm
R563:570 compcert.lib.Integers Int zero def
R549:559 compcert.lib.Integers Int eq_spec thm
R563:570 compcert.lib.Integers Int zero def
R549:559 compcert.lib.Integers Int eq_spec thm
R563:570 compcert.lib.Integers Int zero def
R549:559 compcert.lib.Integers Int eq_spec thm
R563:570 compcert.lib.Integers Int zero def
R549:559 compcert.lib.Integers Int eq_spec thm
R563:570 compcert.lib.Integers Int zero def
R585:590 compcert.lib.Integers Int eq def
R594:601 compcert.lib.Integers Int zero def
R585:590 compcert.lib.Integers Int eq def
R594:601 compcert.lib.Integers Int zero def
R585:590 compcert.lib.Integers Int eq def
R594:601 compcert.lib.Integers Int zero def
R585:590 compcert.lib.Integers Int eq def
R594:601 compcert.lib.Integers Int zero def
R585:590 compcert.lib.Integers Int eq def
R594:601 compcert.lib.Integers Int zero def
R585:590 compcert.lib.Integers Int eq def
R594:601 compcert.lib.Integers Int zero def
R585:590 compcert.lib.Integers Int eq def
R594:601 compcert.lib.Integers Int zero def
R585:590 compcert.lib.Integers Int eq def
R594:601 compcert.lib.Integers Int zero def
R585:590 compcert.lib.Integers Int eq def
R594:601 compcert.lib.Integers Int zero def
prf 632:650 <> typed_true_nullptr'
R668:676 VST.veric.mpred <> compspecs class
binder 664:665 <> cs:5
binder 679:680 <> t0:6
binder 683:683 <> t:7
binder 685:686 <> t':8
binder 688:688 <> v:9
R758:761 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R763:763 Coq.Init.Logic <> ::type_scope:x_'='_x not
R762:762 VST.floyd.compare_lemmas <> v:9 var
R764:770 VST.veric.base <> nullval def
R695:704 VST.veric.SeparationLogic <> typed_true def
R710:719 VST.veric.expr <> eval_binop def
R750:756 VST.veric.base <> nullval def
R748:748 VST.floyd.compare_lemmas <> v:9 var
R739:742 compcert.exportclight.Clightdefs <> tptr def
R744:745 VST.floyd.compare_lemmas <> t':8 var
R730:733 compcert.exportclight.Clightdefs <> tptr def
R735:735 VST.floyd.compare_lemmas <> t:7 var
R721:727 compcert.cfrontend.Cop <> Oeq constr
R706:707 VST.floyd.compare_lemmas <> t0:6 var
R809:829 VST.veric.Clight_Cop2 <> sem_binary_operation' def
R845:848 compcert.exportclight.Clightdefs <> tptr def
R851:860 VST.veric.SeparationLogic <> typed_true def
R863:871 VST.veric.val_lemmas <> force_val def
R874:880 VST.veric.Clight_Cop2 <> sem_cmp def
R883:898 compcert.cfrontend.Cop <> classify_cmp def
R901:910 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R917:924 compcert.cfrontend.Ctypes <> typeconv def
R927:943 compcert.cfrontend.Ctypes <> remove_attributes def
R946:962 compcert.cfrontend.Ctypes <> change_attributes def
R965:979 VST.veric.mpred <> strict_bool_val def
R982:988 VST.veric.base <> nullval def
R991:1001 compcert.common.Values Val of_bool def
R1021:1025 Coq.Init.Logic <> proj2 thm
R1028:1041 VST.veric.Cop2 <> eqb_type_false thm
R1063:1077 VST.veric.Cop2 <> int_or_ptr_type def
R1044:1051 compcert.cfrontend.Ctypes <> Tpointer constr
R1055:1060 compcert.cfrontend.Ctypes <> noattr def
R1021:1025 Coq.Init.Logic <> proj2 thm
R1028:1041 VST.veric.Cop2 <> eqb_type_false thm
R1063:1077 VST.veric.Cop2 <> int_or_ptr_type def
R1044:1051 compcert.cfrontend.Ctypes <> Tpointer constr
R1055:1060 compcert.cfrontend.Ctypes <> noattr def
R1021:1025 Coq.Init.Logic <> proj2 thm
R1028:1041 VST.veric.Cop2 <> eqb_type_false thm
R1063:1077 VST.veric.Cop2 <> int_or_ptr_type def
R1044:1051 compcert.cfrontend.Ctypes <> Tpointer constr
R1055:1060 compcert.cfrontend.Ctypes <> noattr def
R1126:1130 Coq.Init.Logic <> proj2 thm
R1133:1146 VST.veric.Cop2 <> eqb_type_false thm
R1169:1183 VST.veric.Cop2 <> int_or_ptr_type def
R1149:1156 compcert.cfrontend.Ctypes <> Tpointer constr
R1161:1166 compcert.cfrontend.Ctypes <> noattr def
R1126:1130 Coq.Init.Logic <> proj2 thm
R1133:1146 VST.veric.Cop2 <> eqb_type_false thm
R1169:1183 VST.veric.Cop2 <> int_or_ptr_type def
R1149:1156 compcert.cfrontend.Ctypes <> Tpointer constr
R1161:1166 compcert.cfrontend.Ctypes <> noattr def
R1126:1130 Coq.Init.Logic <> proj2 thm
R1133:1146 VST.veric.Cop2 <> eqb_type_false thm
R1169:1183 VST.veric.Cop2 <> int_or_ptr_type def
R1149:1156 compcert.cfrontend.Ctypes <> Tpointer constr
R1161:1166 compcert.cfrontend.Ctypes <> noattr def
R1245:1255 compcert.x86_32.Archi <> ptr64 def
R1245:1255 compcert.x86_32.Archi <> ptr64 def
R1360:1372 compcert.lib.Integers Int64 eq_spec thm
R1377:1386 compcert.lib.Integers Int64 zero def
R1401:1408 compcert.lib.Integers Int64 eq def
R1413:1422 compcert.lib.Integers Int64 zero def
R1360:1372 compcert.lib.Integers Int64 eq_spec thm
R1377:1386 compcert.lib.Integers Int64 zero def
R1401:1408 compcert.lib.Integers Int64 eq def
R1413:1422 compcert.lib.Integers Int64 zero def
R1453:1463 compcert.lib.Integers Int eq_spec thm
R1468:1475 compcert.lib.Integers Int zero def
R1490:1495 compcert.lib.Integers Int eq def
R1500:1507 compcert.lib.Integers Int zero def
R1453:1463 compcert.lib.Integers Int eq_spec thm
R1468:1475 compcert.lib.Integers Int zero def
R1490:1495 compcert.lib.Integers Int eq def
R1500:1507 compcert.lib.Integers Int zero def
prf 1537:1558 <> typed_true_Oeq_nullval
R1575:1583 VST.veric.mpred <> compspecs class
binder 1571:1572 <> cs:10
binder 1587:1587 <> v:11
binder 1589:1589 <> t:12
binder 1591:1592 <> t':13
R1680:1687 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R1598:1602 VST.veric.SeparationLogic <> local def
R1605:1606 VST.veric.lift LiftNotation :::'`('_x_')' not
R1622:1678 VST.veric.lift LiftNotation :::'`('_x_')' not
R1607:1616 VST.veric.SeparationLogic <> typed_true def
R1618:1621 compcert.exportclight.Clightdefs <> tint def
R1625:1626 VST.veric.lift LiftNotation :::'`('_x_')' not
R1664:1677 VST.veric.lift LiftNotation :::'`('_x_')' not
R1627:1636 VST.veric.expr <> eval_binop def
R1656:1659 compcert.exportclight.Clightdefs <> tptr def
R1661:1662 VST.floyd.compare_lemmas <> t':13 var
R1647:1650 compcert.exportclight.Clightdefs <> tptr def
R1652:1652 VST.floyd.compare_lemmas <> t:12 var
R1638:1644 compcert.cfrontend.Cop <> Oeq constr
R1668:1669 VST.veric.lift LiftNotation :::'`('_x_')' not
R1677:1677 VST.veric.lift LiftNotation :::'`('_x_')' not
R1670:1676 VST.veric.base <> nullval def
R1666:1666 VST.floyd.compare_lemmas <> v:11 var
R1688:1692 VST.veric.SeparationLogic <> local def
R1695:1696 VST.veric.lift LiftNotation :::'`('_x_')' not
R1707:1709 VST.veric.lift LiftNotation :::'`('_x_')' not
R1697:1698 Coq.Init.Logic <> eq ind
R1700:1706 VST.veric.base <> nullval def
R1709:1709 VST.floyd.compare_lemmas <> v:11 var
R1747:1751 VST.veric.SeparationLogic <> local def
R1754:1758 VST.veric.mpred <> lift1 def
R1781:1792 VST.msl.log_normalize <> prop_derives thm
R1781:1792 VST.msl.log_normalize <> prop_derives thm
R1810:1813 compcert.exportclight.Clightdefs <> tptr def
R1840:1860 VST.veric.Clight_Cop2 <> sem_binary_operation' def
R1890:1901 Coq.Bool.Bool <> andb_false_r thm
R1890:1901 Coq.Bool.Bool <> andb_false_r thm
R1890:1901 Coq.Bool.Bool <> andb_false_r thm
R1890:1901 Coq.Bool.Bool <> andb_false_r thm
R1890:1901 Coq.Bool.Bool <> andb_false_r thm
R1943:1952 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R1955:1969 VST.veric.mpred <> strict_bool_val def
R1972:1978 VST.veric.base <> nullval def
R1996:2006 compcert.x86_32.Archi <> ptr64 def
R2075:2087 compcert.lib.Integers Int64 eq_spec thm
R2091:2100 compcert.lib.Integers Int64 zero def
R2130:2137 compcert.lib.Integers Int64 eq def
R2141:2150 compcert.lib.Integers Int64 zero def
R2193:2203 compcert.lib.Integers Int eq_spec thm
R2207:2214 compcert.lib.Integers Int zero def
R2244:2249 compcert.lib.Integers Int eq def
R2253:2260 compcert.lib.Integers Int zero def
R1996:2006 compcert.x86_32.Archi <> ptr64 def
R2075:2087 compcert.lib.Integers Int64 eq_spec thm
R2091:2100 compcert.lib.Integers Int64 zero def
R2193:2203 compcert.lib.Integers Int eq_spec thm
R2207:2214 compcert.lib.Integers Int zero def
R2244:2249 compcert.lib.Integers Int eq def
R2253:2260 compcert.lib.Integers Int zero def
def 2297:2326 <> binary_operation_to_comparison
R2333:2352 compcert.cfrontend.Cop <> binary_operation ind
binder 2329:2330 <> op:14
R2365:2366 VST.floyd.compare_lemmas <> op:14 var
R2376:2382 compcert.cfrontend.Cop <> Oeq constr
R2387:2390 Coq.Init.Datatypes <> Some constr
R2394:2395 Coq.Init.Logic <> eq ind
R2397:2397 Coq.Numbers.BinNums <> Z ind
R2403:2409 compcert.cfrontend.Cop <> One constr
R2414:2417 Coq.Init.Datatypes <> Some constr
R2419:2421 Coq.ZArith.BinInt <> Zne def
R2426:2432 compcert.cfrontend.Cop <> Olt constr
R2437:2440 Coq.Init.Datatypes <> Some constr
R2442:2445 Coq.ZArith.BinInt Z lt def
R2450:2456 compcert.cfrontend.Cop <> Ole constr
R2461:2464 Coq.Init.Datatypes <> Some constr
R2466:2469 Coq.ZArith.BinInt Z le def
R2474:2480 compcert.cfrontend.Cop <> Ogt constr
R2485:2488 Coq.Init.Datatypes <> Some constr
R2490:2493 Coq.ZArith.BinInt Z gt def
R2498:2504 compcert.cfrontend.Cop <> Oge constr
R2509:2512 Coq.Init.Datatypes <> Some constr
R2514:2517 Coq.ZArith.BinInt Z ge def
R2527:2530 Coq.Init.Datatypes <> None constr
def 4895:4928 <> binary_operation_to_opp_comparison
R4935:4954 compcert.cfrontend.Cop <> binary_operation ind
binder 4931:4932 <> op:16
R4967:4968 VST.floyd.compare_lemmas <> op:16 var
R4978:4984 compcert.cfrontend.Cop <> Oeq constr
R4989:4992 Coq.Init.Datatypes <> Some constr
R4994:4996 Coq.ZArith.BinInt <> Zne def
R5001:5007 compcert.cfrontend.Cop <> One constr
R5012:5015 Coq.Init.Datatypes <> Some constr
R5019:5020 Coq.Init.Logic <> eq ind
R5022:5022 Coq.Numbers.BinNums <> Z ind
R5028:5034 compcert.cfrontend.Cop <> Olt constr
R5039:5042 Coq.Init.Datatypes <> Some constr
R5044:5047 Coq.ZArith.BinInt Z ge def
R5052:5058 compcert.cfrontend.Cop <> Ole constr
R5063:5066 Coq.Init.Datatypes <> Some constr
R5068:5071 Coq.ZArith.BinInt Z gt def
R5076:5082 compcert.cfrontend.Cop <> Ogt constr
R5087:5090 Coq.Init.Datatypes <> Some constr
R5092:5095 Coq.ZArith.BinInt Z le def
R5100:5106 compcert.cfrontend.Cop <> Oge constr
R5111:5114 Coq.Init.Datatypes <> Some constr
R5116:5119 Coq.ZArith.BinInt Z lt def
R5129:5132 Coq.Init.Datatypes <> None constr
prf 7623:7645 <> typed_false_One_nullval
R7662:7670 VST.veric.mpred <> compspecs class
binder 7658:7659 <> cs:18
binder 7674:7674 <> v:19
binder 7676:7676 <> t:20
binder 7678:7679 <> t':21
R7768:7776 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R7685:7689 VST.veric.SeparationLogic <> local def
R7692:7693 VST.veric.lift LiftNotation :::'`('_x_')' not
R7710:7766 VST.veric.lift LiftNotation :::'`('_x_')' not
R7694:7704 VST.veric.SeparationLogic <> typed_false def
R7706:7709 compcert.exportclight.Clightdefs <> tint def
R7713:7714 VST.veric.lift LiftNotation :::'`('_x_')' not
R7752:7765 VST.veric.lift LiftNotation :::'`('_x_')' not
R7715:7724 VST.veric.expr <> eval_binop def
R7744:7747 compcert.exportclight.Clightdefs <> tptr def
R7749:7750 VST.floyd.compare_lemmas <> t':21 var
R7735:7738 compcert.exportclight.Clightdefs <> tptr def
R7740:7740 VST.floyd.compare_lemmas <> t:20 var
R7726:7732 compcert.cfrontend.Cop <> One constr
R7756:7757 VST.veric.lift LiftNotation :::'`('_x_')' not
R7765:7765 VST.veric.lift LiftNotation :::'`('_x_')' not
R7758:7764 VST.veric.base <> nullval def
R7754:7754 VST.floyd.compare_lemmas <> v:19 var
R7777:7781 VST.veric.SeparationLogic <> local def
R7784:7785 VST.veric.lift LiftNotation :::'`('_x_')' not
R7796:7798 VST.veric.lift LiftNotation :::'`('_x_')' not
R7786:7787 Coq.Init.Logic <> eq ind
R7789:7795 VST.veric.base <> nullval def
R7798:7798 VST.floyd.compare_lemmas <> v:19 var
R7836:7840 VST.veric.SeparationLogic <> local def
R7843:7847 VST.veric.mpred <> lift1 def
R7870:7881 VST.msl.log_normalize <> prop_derives thm
R7870:7881 VST.msl.log_normalize <> prop_derives thm
R7911:7931 VST.veric.Clight_Cop2 <> sem_binary_operation' def
R7961:7972 Coq.Bool.Bool <> andb_false_r thm
R7961:7972 Coq.Bool.Bool <> andb_false_r thm
R7961:7972 Coq.Bool.Bool <> andb_false_r thm
R7961:7972 Coq.Bool.Bool <> andb_false_r thm
R7961:7972 Coq.Bool.Bool <> andb_false_r thm
R7988:7997 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R8000:8006 VST.veric.base <> nullval def
R8024:8034 compcert.x86_32.Archi <> ptr64 def
R8024:8034 compcert.x86_32.Archi <> ptr64 def
R8083:8095 compcert.lib.Integers Int64 eq_spec thm
R8099:8108 compcert.lib.Integers Int64 zero def
R8083:8095 compcert.lib.Integers Int64 eq_spec thm
R8099:8108 compcert.lib.Integers Int64 zero def
R8123:8130 compcert.lib.Integers Int64 eq def
R8134:8143 compcert.lib.Integers Int64 zero def
R8123:8130 compcert.lib.Integers Int64 eq def
R8134:8143 compcert.lib.Integers Int64 zero def
R8182:8192 compcert.lib.Integers Int eq_spec thm
R8196:8203 compcert.lib.Integers Int zero def
R8182:8192 compcert.lib.Integers Int eq_spec thm
R8196:8203 compcert.lib.Integers Int zero def
R8218:8223 compcert.lib.Integers Int eq def
R8227:8234 compcert.lib.Integers Int zero def
R8218:8223 compcert.lib.Integers Int eq def
R8227:8234 compcert.lib.Integers Int zero def
prf 8272:8293 <> typed_true_One_nullval
R8310:8318 VST.veric.mpred <> compspecs class
binder 8306:8307 <> cs:22
binder 8322:8322 <> v:23
binder 8324:8324 <> t:24
binder 8326:8327 <> t':25
R8415:8422 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R8333:8337 VST.veric.SeparationLogic <> local def
R8340:8341 VST.veric.lift LiftNotation :::'`('_x_')' not
R8357:8413 VST.veric.lift LiftNotation :::'`('_x_')' not
R8342:8351 VST.veric.SeparationLogic <> typed_true def
R8353:8356 compcert.exportclight.Clightdefs <> tint def
R8360:8361 VST.veric.lift LiftNotation :::'`('_x_')' not
R8399:8412 VST.veric.lift LiftNotation :::'`('_x_')' not
R8362:8371 VST.veric.expr <> eval_binop def
R8391:8394 compcert.exportclight.Clightdefs <> tptr def
R8396:8397 VST.floyd.compare_lemmas <> t':25 var
R8382:8385 compcert.exportclight.Clightdefs <> tptr def
R8387:8387 VST.floyd.compare_lemmas <> t:24 var
R8373:8379 compcert.cfrontend.Cop <> One constr
R8403:8404 VST.veric.lift LiftNotation :::'`('_x_')' not
R8412:8412 VST.veric.lift LiftNotation :::'`('_x_')' not
R8405:8411 VST.veric.base <> nullval def
R8401:8401 VST.floyd.compare_lemmas <> v:23 var
R8423:8427 VST.veric.SeparationLogic <> local def
R8430:8431 VST.veric.lift LiftNotation :::'`('_x_')' not
R8447:8449 VST.veric.lift LiftNotation :::'`('_x_')' not
R8432:8438 VST.floyd.functional_base <> ptr_neq def
R8440:8446 VST.veric.base <> nullval def
R8449:8449 VST.floyd.compare_lemmas <> v:23 var
R8487:8491 VST.veric.SeparationLogic <> local def
R8494:8498 VST.veric.mpred <> lift1 def
R8521:8532 VST.msl.log_normalize <> prop_derives thm
R8521:8532 VST.msl.log_normalize <> prop_derives thm
R8562:8582 VST.veric.Clight_Cop2 <> sem_binary_operation' def
R8612:8623 Coq.Bool.Bool <> andb_false_r thm
R8612:8623 Coq.Bool.Bool <> andb_false_r thm
R8612:8623 Coq.Bool.Bool <> andb_false_r thm
R8612:8623 Coq.Bool.Bool <> andb_false_r thm
R8612:8623 Coq.Bool.Bool <> andb_false_r thm
R8639:8648 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R8651:8657 VST.floyd.functional_base <> ptr_neq def
R8660:8665 VST.floyd.functional_base <> ptr_eq def
R8668:8674 VST.veric.base <> nullval def
R8755:8764 VST.veric.SeparationLogic <> typed_true def
R8767:8775 VST.veric.val_lemmas <> force_val def
R8778:8792 VST.veric.mpred <> strict_bool_val def
R8810:8820 compcert.x86_32.Archi <> ptr64 def
R8810:8820 compcert.x86_32.Archi <> ptr64 def
R8883:8895 compcert.lib.Integers Int64 eq_spec thm
R8897:8906 compcert.lib.Integers Int64 zero def
R8933:8943 compcert.lib.Integers Int eq_spec thm
R8945:8952 compcert.lib.Integers Int zero def
R8883:8895 compcert.lib.Integers Int64 eq_spec thm
R8897:8906 compcert.lib.Integers Int64 zero def
R8933:8943 compcert.lib.Integers Int eq_spec thm
R8945:8952 compcert.lib.Integers Int zero def
prf 9007:9029 <> typed_false_Oeq_nullval
R9046:9054 VST.veric.mpred <> compspecs class
binder 9042:9043 <> cs:26
binder 9057:9057 <> v:27
binder 9059:9059 <> t:28
binder 9061:9062 <> t':29
R9151:9158 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R9068:9072 VST.veric.SeparationLogic <> local def
R9075:9076 VST.veric.lift LiftNotation :::'`('_x_')' not
R9093:9149 VST.veric.lift LiftNotation :::'`('_x_')' not
R9077:9087 VST.veric.SeparationLogic <> typed_false def
R9089:9092 compcert.exportclight.Clightdefs <> tint def
R9096:9097 VST.veric.lift LiftNotation :::'`('_x_')' not
R9135:9148 VST.veric.lift LiftNotation :::'`('_x_')' not
R9098:9107 VST.veric.expr <> eval_binop def
R9127:9130 compcert.exportclight.Clightdefs <> tptr def
R9132:9133 VST.floyd.compare_lemmas <> t':29 var
R9118:9121 compcert.exportclight.Clightdefs <> tptr def
R9123:9123 VST.floyd.compare_lemmas <> t:28 var
R9109:9115 compcert.cfrontend.Cop <> Oeq constr
R9139:9140 VST.veric.lift LiftNotation :::'`('_x_')' not
R9148:9148 VST.veric.lift LiftNotation :::'`('_x_')' not
R9141:9147 VST.veric.base <> nullval def
R9137:9137 VST.floyd.compare_lemmas <> v:27 var
R9159:9163 VST.veric.SeparationLogic <> local def
R9166:9167 VST.veric.lift LiftNotation :::'`('_x_')' not
R9183:9185 VST.veric.lift LiftNotation :::'`('_x_')' not
R9168:9174 VST.floyd.functional_base <> ptr_neq def
R9176:9182 VST.veric.base <> nullval def
R9185:9185 VST.floyd.compare_lemmas <> v:27 var
R9244:9248 VST.veric.SeparationLogic <> local def
R9251:9255 VST.veric.mpred <> lift1 def
R9264:9275 VST.msl.log_normalize <> prop_derives thm
R9264:9275 VST.msl.log_normalize <> prop_derives thm
R9305:9325 VST.veric.Clight_Cop2 <> sem_binary_operation' def
R9355:9366 Coq.Bool.Bool <> andb_false_r thm
R9355:9366 Coq.Bool.Bool <> andb_false_r thm
R9355:9366 Coq.Bool.Bool <> andb_false_r thm
R9355:9366 Coq.Bool.Bool <> andb_false_r thm
R9355:9366 Coq.Bool.Bool <> andb_false_r thm
R9388:9395 VST.floyd.functional_base <> ptr_eq_e thm
R9388:9395 VST.floyd.functional_base <> ptr_eq_e thm
prf 9444:9458 <> local_entail_at
binder 9470:9470 <> n:30
binder 9472:9472 <> S:31
binder 9474:9474 <> T:32
R9503:9507 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R9480:9484 VST.veric.SeparationLogic <> local def
R9487:9499 VST.floyd.canon <> locald_denote def
R9501:9501 VST.floyd.compare_lemmas <> S:31 var
R9508:9512 VST.veric.SeparationLogic <> local def
R9515:9527 VST.floyd.canon <> locald_denote def
R9529:9529 VST.floyd.compare_lemmas <> T:32 var
binder 9477:9477 <> H:33
binder 9537:9537 <> P:34
binder 9539:9539 <> Q:35
binder 9541:9541 <> R:36
R9570:9577 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9605:9613 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R9578:9582 VST.floyd.canon <> PROPx def
R9587:9592 VST.floyd.canon <> LOCALx def
R9597:9600 VST.floyd.canon <> SEPx def
R9602:9602 VST.floyd.compare_lemmas <> R:36 var
R9594:9594 VST.floyd.compare_lemmas <> Q:35 var
R9584:9584 VST.floyd.compare_lemmas <> P:34 var
R9614:9618 VST.floyd.canon <> PROPx def
R9623:9628 VST.floyd.canon <> LOCALx def
R9651:9654 VST.floyd.canon <> SEPx def
R9656:9656 VST.floyd.compare_lemmas <> R:36 var
R9631:9641 VST.floyd.canon <> replace_nth def
R9647:9647 VST.floyd.compare_lemmas <> T:32 var
R9645:9645 VST.floyd.compare_lemmas <> Q:35 var
R9643:9643 VST.floyd.compare_lemmas <> n:30 var
R9620:9620 VST.floyd.compare_lemmas <> P:34 var
R9561:9563 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9548:9556 Coq.Lists.List <> nth_error def
R9560:9560 VST.floyd.compare_lemmas <> n:30 var
R9558:9558 VST.floyd.compare_lemmas <> Q:35 var
R9564:9567 Coq.Init.Datatypes <> Some constr
R9569:9569 VST.floyd.compare_lemmas <> S:31 var
R9685:9689 VST.floyd.canon <> PROPx def
R9692:9697 VST.floyd.canon <> LOCALx def
R9725:9736 VST.msl.log_normalize <> andp_derives thm
R9725:9736 VST.msl.log_normalize <> andp_derives thm
R9752:9763 VST.msl.log_normalize <> andp_derives thm
R9752:9763 VST.msl.log_normalize <> andp_derives thm
R9780:9784 VST.veric.SeparationLogic <> local def
R9787:9791 VST.veric.mpred <> lift1 def
R9822:9826 VST.veric.SeparationLogic <> local def
R9828:9832 VST.veric.mpred <> lift1 def
R9931:9938 VST.msl.log_normalize <> prop_and thm
R9931:9938 VST.msl.log_normalize <> prop_and thm
R9931:9938 VST.msl.log_normalize <> prop_and thm
R9931:9938 VST.msl.log_normalize <> prop_and thm
R9931:9938 VST.msl.log_normalize <> prop_and thm
R9931:9938 VST.msl.log_normalize <> prop_and thm
R9948:9959 VST.msl.log_normalize <> andp_derives thm
R9948:9959 VST.msl.log_normalize <> andp_derives thm
R9998:10005 VST.msl.log_normalize <> prop_and thm
R9998:10005 VST.msl.log_normalize <> prop_and thm
R9998:10005 VST.msl.log_normalize <> prop_and thm
R9998:10005 VST.msl.log_normalize <> prop_and thm
R9998:10005 VST.msl.log_normalize <> prop_and thm
R9998:10005 VST.msl.log_normalize <> prop_and thm
R10015:10026 VST.msl.log_normalize <> andp_derives thm
R10015:10026 VST.msl.log_normalize <> andp_derives thm
prf 10047:10069 <> local_entail_at_semax_0
binder 10081:10085 <> Espec:37
R10092:10100 VST.veric.mpred <> compspecs class
binder 10088:10089 <> cs:38
binder 10102:10106 <> Delta:39
binder 10108:10108 <> P:40
binder 10110:10111 <> Q1:41
binder 10113:10115 <> Q1':42
binder 10117:10117 <> Q:43
binder 10119:10119 <> R:44
binder 10121:10121 <> c:45
binder 10123:10126 <> Post:46
R10186:10192 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10258:10265 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10267:10271 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R10326:10329 VST.floyd.compare_lemmas <> Post:46 var
R10324:10324 VST.floyd.compare_lemmas <> c:45 var
R10289:10293 VST.floyd.canon <> PROPx def
R10298:10303 VST.floyd.canon <> LOCALx def
R10314:10317 VST.floyd.canon <> SEPx def
R10319:10319 VST.floyd.compare_lemmas <> R:44 var
R10308:10309 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10306:10307 VST.floyd.compare_lemmas <> Q1:41 var
R10310:10310 VST.floyd.compare_lemmas <> Q:43 var
R10295:10295 VST.floyd.compare_lemmas <> P:40 var
R10282:10286 VST.floyd.compare_lemmas <> Delta:39 var
R10276:10280 VST.floyd.compare_lemmas <> Espec:37 var
R10273:10274 VST.floyd.compare_lemmas <> cs:38 var
R10194:10198 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R10254:10257 VST.floyd.compare_lemmas <> Post:46 var
R10252:10252 VST.floyd.compare_lemmas <> c:45 var
R10216:10220 VST.floyd.canon <> PROPx def
R10225:10230 VST.floyd.canon <> LOCALx def
R10242:10245 VST.floyd.canon <> SEPx def
R10247:10247 VST.floyd.compare_lemmas <> R:44 var
R10236:10237 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10233:10235 VST.floyd.compare_lemmas <> Q1':42 var
R10238:10238 VST.floyd.compare_lemmas <> Q:43 var
R10222:10222 VST.floyd.compare_lemmas <> P:40 var
R10209:10213 VST.floyd.compare_lemmas <> Delta:39 var
R10203:10207 VST.floyd.compare_lemmas <> Espec:37 var
R10200:10201 VST.floyd.compare_lemmas <> cs:38 var
R10156:10160 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R10132:10136 VST.veric.SeparationLogic <> local def
R10139:10151 VST.floyd.canon <> locald_denote def
R10153:10154 VST.floyd.compare_lemmas <> Q1:41 var
R10161:10165 VST.veric.SeparationLogic <> local def
R10168:10180 VST.floyd.canon <> locald_denote def
R10182:10184 VST.floyd.compare_lemmas <> Q1':42 var
R10354:10363 VST.floyd.canon <> semax_pre0 thm
R10354:10363 VST.floyd.canon <> semax_pre0 thm
R10374:10388 VST.floyd.compare_lemmas <> local_entail_at thm
R10374:10388 VST.floyd.compare_lemmas <> local_entail_at thm
def 10439:10448 <> compare_pp
binder 10450:10451 <> op:47
binder 10453:10453 <> p:48
binder 10455:10455 <> q:49
R10469:10469 VST.floyd.compare_lemmas <> p:48 var
R10490:10493 compcert.common.Values <> Vptr constr
R10523:10523 VST.floyd.compare_lemmas <> q:49 var
R10547:10550 compcert.common.Values <> Vptr constr
R10564:10571 compcert.common.Values <> eq_block def
R10705:10710 compcert.common.Values <> Vundef constr
R10613:10616 compcert.common.Values <> Vint constr
R10622:10632 compcert.lib.Integers Ptrofs cmpu def
R10634:10635 VST.floyd.compare_lemmas <> op:47 var
R10660:10667 compcert.lib.Integers Int zero def
R10647:10653 compcert.lib.Integers Int one def
R10734:10739 compcert.common.Values <> Vundef constr
R10780:10785 compcert.common.Values <> Vundef constr
prf 10802:10817 <> force_sem_cmp_pp
binder 10829:10830 <> op:52
binder 10832:10832 <> p:53
binder 10834:10834 <> q:54
R10846:10849 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10857:10862 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10892:10897 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10863:10871 VST.veric.val_lemmas <> force_val def
R10874:10883 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R10890:10890 VST.floyd.compare_lemmas <> q:54 var
R10888:10888 VST.floyd.compare_lemmas <> p:53 var
R10885:10886 VST.floyd.compare_lemmas <> op:52 var
R10904:10905 VST.floyd.compare_lemmas <> op:52 var
R10917:10919 compcert.lib.Integers <> Ceq constr
R10924:10927 compcert.common.Values <> Vint constr
R10933:10938 VST.msl.eq_dec <> eq_dec def
R10942:10942 VST.floyd.compare_lemmas <> q:54 var
R10940:10940 VST.floyd.compare_lemmas <> p:53 var
R10962:10969 compcert.lib.Integers Int zero def
R10949:10955 compcert.lib.Integers Int one def
R10977:10979 compcert.lib.Integers <> Cne constr
R10984:10987 compcert.common.Values <> Vint constr
R10993:10998 VST.msl.eq_dec <> eq_dec def
R11002:11002 VST.floyd.compare_lemmas <> q:54 var
R11000:11000 VST.floyd.compare_lemmas <> p:53 var
R11023:11029 compcert.lib.Integers Int one def
R11009:11016 compcert.lib.Integers Int zero def
R11042:11051 VST.floyd.compare_lemmas <> compare_pp def
R11058:11058 VST.floyd.compare_lemmas <> q:54 var
R11056:11056 VST.floyd.compare_lemmas <> p:53 var
R11053:11054 VST.floyd.compare_lemmas <> op:52 var
R10850:10854 VST.veric.val_lemmas <> isptr def
R10856:10856 VST.floyd.compare_lemmas <> q:54 var
R10839:10843 VST.veric.val_lemmas <> isptr def
R10845:10845 VST.floyd.compare_lemmas <> p:53 var
R11159:11168 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R11171:11180 VST.floyd.compare_lemmas <> compare_pp def
R11183:11193 compcert.lib.Integers Ptrofs cmpu def
R11196:11209 compcert.common.Values Val cmplu_bool def
R11221:11231 compcert.x86_32.Archi <> ptr64 def
R11221:11231 compcert.x86_32.Archi <> ptr64 def
R11299:11312 compcert.lib.Integers Ptrofs eq_true thm
R11299:11312 compcert.lib.Integers Ptrofs eq_true thm
R11299:11312 compcert.lib.Integers Ptrofs eq_true thm
R11336:11350 compcert.lib.Integers Ptrofs eq_false thm
R11336:11350 compcert.lib.Integers Ptrofs eq_false thm
R11336:11350 compcert.lib.Integers Ptrofs eq_false thm
R11445:11458 compcert.lib.Integers Ptrofs eq_true thm
R11445:11458 compcert.lib.Integers Ptrofs eq_true thm
R11445:11458 compcert.lib.Integers Ptrofs eq_true thm
R11490:11504 compcert.lib.Integers Ptrofs eq_false thm
R11490:11504 compcert.lib.Integers Ptrofs eq_false thm
R11490:11504 compcert.lib.Integers Ptrofs eq_false thm
R11542:11549 VST.msl.Coqlib2 <> if_false thm
R11542:11549 VST.msl.Coqlib2 <> if_false thm
R11542:11549 VST.msl.Coqlib2 <> if_false thm
R11598:11607 compcert.lib.Integers Ptrofs ltu def
R11598:11607 compcert.lib.Integers Ptrofs ltu def
R11663:11672 compcert.lib.Integers Ptrofs ltu def
R11663:11672 compcert.lib.Integers Ptrofs ltu def
R11728:11737 compcert.lib.Integers Ptrofs ltu def
R11728:11737 compcert.lib.Integers Ptrofs ltu def
R11793:11802 compcert.lib.Integers Ptrofs ltu def
R11793:11802 compcert.lib.Integers Ptrofs ltu def
R11909:11922 compcert.lib.Integers Ptrofs eq_true thm
R11909:11922 compcert.lib.Integers Ptrofs eq_true thm
R11909:11922 compcert.lib.Integers Ptrofs eq_true thm
R11946:11960 compcert.lib.Integers Ptrofs eq_false thm
R11946:11960 compcert.lib.Integers Ptrofs eq_false thm
R11946:11960 compcert.lib.Integers Ptrofs eq_false thm
R12055:12068 compcert.lib.Integers Ptrofs eq_true thm
R12055:12068 compcert.lib.Integers Ptrofs eq_true thm
R12055:12068 compcert.lib.Integers Ptrofs eq_true thm
R12100:12114 compcert.lib.Integers Ptrofs eq_false thm
R12100:12114 compcert.lib.Integers Ptrofs eq_false thm
R12100:12114 compcert.lib.Integers Ptrofs eq_false thm
R12152:12159 VST.msl.Coqlib2 <> if_false thm
R12152:12159 VST.msl.Coqlib2 <> if_false thm
R12152:12159 VST.msl.Coqlib2 <> if_false thm
R12208:12217 compcert.lib.Integers Ptrofs ltu def
R12208:12217 compcert.lib.Integers Ptrofs ltu def
R12273:12282 compcert.lib.Integers Ptrofs ltu def
R12273:12282 compcert.lib.Integers Ptrofs ltu def
R12338:12347 compcert.lib.Integers Ptrofs ltu def
R12338:12347 compcert.lib.Integers Ptrofs ltu def
R12403:12412 compcert.lib.Integers Ptrofs ltu def
R12403:12412 compcert.lib.Integers Ptrofs ltu def
R12468:12483 VST.floyd.compare_lemmas <> force_sem_cmp_pp thm
