DIGEST aef51a77d7eac02fa3e145cb2af8587f
FVST.floyd.VSU
R15:33 VST.floyd.proofauto <> <> lib
R51:80 VST.veric.Clight_initial_world <> <> lib
R98:117 VST.floyd.assoclists <> <> lib
prf 127:148 <> semax_body_subsumespec
binder 151:152 <> cs:1
binder 155:155 <> V:2
binder 157:158 <> V':3
binder 160:160 <> F:4
binder 162:163 <> F':5
binder 165:165 <> f:6
binder 167:170 <> iphi:7
R178:187 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R198:201 VST.floyd.VSU <> iphi:7 var
R196:196 VST.floyd.VSU <> f:6 var
R193:194 VST.floyd.VSU <> cs:1 var
R191:191 VST.floyd.VSU <> F:4 var
R189:189 VST.floyd.VSU <> V:2 var
binder 173:174 <> SB:8
R224:231 Coq.Numbers.BinNums <> positive ind
binder 220:220 <> i:9
R240:249 VST.veric.tycontext <> sub_option def
R278:278 compcert.lib.Maps <> :::x_'!'_x not
R301:304 compcert.lib.Maps <> :::x_'!'_x not
R305:305 VST.floyd.VSU <> i:9 var
R279:294 VST.veric.seplog <> make_tycontext_g def
R299:300 VST.floyd.VSU <> F':5 var
R296:297 VST.floyd.VSU <> V':3 var
R251:251 compcert.lib.Maps <> :::x_'!'_x not
R272:275 compcert.lib.Maps <> :::x_'!'_x not
R276:276 VST.floyd.VSU <> i:9 var
R252:267 VST.veric.seplog <> make_tycontext_g def
R271:271 VST.floyd.VSU <> F:4 var
R269:269 VST.floyd.VSU <> V:2 var
binder 207:209 <> HVF:10
R327:331 compcert.common.AST <> ident def
binder 323:323 <> i:11
R334:344 VST.veric.expr <> subsumespec def
R361:367 VST.veric.initial_world <> find_id def
R371:372 VST.floyd.VSU <> F':5 var
R369:369 VST.floyd.VSU <> i:11 var
R347:353 VST.veric.initial_world <> find_id def
R357:357 VST.floyd.VSU <> F:4 var
R355:355 VST.floyd.VSU <> i:11 var
binder 311:312 <> HF:12
R381:390 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R403:406 VST.floyd.VSU <> iphi:7 var
R401:401 VST.floyd.VSU <> f:6 var
R398:399 VST.floyd.VSU <> cs:1 var
R395:396 VST.floyd.VSU <> F':5 var
R392:393 VST.floyd.VSU <> V':3 var
R423:444 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_body_subsumption prfax
R423:444 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_body_subsumption prfax
R532:532 compcert.lib.Maps <> :::x_'!'_x not
R576:579 compcert.lib.Maps <> :::x_'!'_x not
R533:548 VST.veric.seplog <> make_tycontext_t def
R565:572 compcert.cfrontend.Clight <> fn_temps proj
R551:559 compcert.cfrontend.Clight <> fn_params proj
R532:532 compcert.lib.Maps <> :::x_'!'_x not
R576:579 compcert.lib.Maps <> :::x_'!'_x not
R533:548 VST.veric.seplog <> make_tycontext_t def
R565:572 compcert.cfrontend.Clight <> fn_temps proj
R551:559 compcert.cfrontend.Clight <> fn_params proj
R609:632 VST.veric.initial_world <> make_tycontext_s_find_id thm
R609:632 VST.veric.initial_world <> make_tycontext_s_find_id thm
R609:632 VST.veric.initial_world <> make_tycontext_s_find_id thm
R609:632 VST.veric.initial_world <> make_tycontext_s_find_id thm
R658:669 compcert.lib.Maps PTree gempty thm
R658:669 compcert.lib.Maps PTree gempty thm
R658:669 compcert.lib.Maps PTree gempty thm
prf 700:729 <> semax_body_binaryintersection'
R746:753 VST.veric.mpred <> varspecs def
binder 742:742 <> V:13
R761:768 VST.veric.mpred <> funspecs def
binder 757:757 <> G:14
R777:785 VST.veric.mpred <> compspecs class
binder 772:773 <> cs:15
R793:800 compcert.cfrontend.Clight <> function rec
binder 789:789 <> f:16
R819:821 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R814:818 compcert.common.AST <> ident def
R822:828 VST.veric.mpred <> funspec ind
binder 804:806 <> sp1:17
binder 808:810 <> sp2:18
binder 855:856 <> sg:19
binder 858:859 <> cc:20
binder 861:862 <> A1:21
binder 864:865 <> P1:22
binder 867:868 <> Q1:23
binder 870:873 <> Pne1:24
binder 875:878 <> Qne1:25
binder 880:881 <> A2:26
binder 883:884 <> P2:27
binder 886:887 <> Q2:28
binder 889:892 <> Pne2:29
binder 894:897 <> Qne2:30
R922:927 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R948:951 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R973:975 Coq.Init.Logic <> ::type_scope:x_'='_x not
R966:968 Coq.Init.Datatypes <> snd def
R970:972 VST.floyd.VSU <> sp1:17 var
R976:985 VST.veric.mpred <> mk_funspec constr
R1007:1010 VST.floyd.VSU <> Qne1:25 var
R1002:1005 VST.floyd.VSU <> Pne1:24 var
R999:1000 VST.floyd.VSU <> Q1:23 var
R996:997 VST.floyd.VSU <> P1:22 var
R993:994 VST.floyd.VSU <> A1:21 var
R990:991 VST.floyd.VSU <> cc:20 var
R987:988 VST.floyd.VSU <> sg:19 var
binder 962:963 <> W1:31
R1027:1029 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1020:1022 Coq.Init.Datatypes <> snd def
R1024:1026 VST.floyd.VSU <> sp2:18 var
R1030:1039 VST.veric.mpred <> mk_funspec constr
R1061:1064 VST.floyd.VSU <> Qne2:30 var
R1056:1059 VST.floyd.VSU <> Pne2:29 var
R1053:1054 VST.floyd.VSU <> Q2:28 var
R1050:1051 VST.floyd.VSU <> P2:27 var
R1047:1048 VST.floyd.VSU <> A2:26 var
R1044:1045 VST.floyd.VSU <> cc:20 var
R1041:1042 VST.floyd.VSU <> sg:19 var
binder 1016:1017 <> W2:32
R1070:1079 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R1087:1087 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1095:1096 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1143:1143 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1088:1090 Coq.Init.Datatypes <> fst def
R1092:1094 VST.floyd.VSU <> sp1:17 var
R1097:1116 VST.veric.seplog <> binary_intersection' def
R1141:1142 VST.floyd.VSU <> W2:32 var
R1138:1139 VST.floyd.VSU <> W1:31 var
R1129:1131 Coq.Init.Datatypes <> snd def
R1133:1135 VST.floyd.VSU <> sp2:18 var
R1119:1121 Coq.Init.Datatypes <> snd def
R1123:1125 VST.floyd.VSU <> sp1:17 var
R1085:1085 VST.floyd.VSU <> f:16 var
R1083:1083 VST.floyd.VSU <> G:14 var
R1081:1081 VST.floyd.VSU <> V:13 var
R928:937 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R945:947 VST.floyd.VSU <> sp2:18 var
R943:943 VST.floyd.VSU <> f:16 var
R941:941 VST.floyd.VSU <> G:14 var
R939:939 VST.floyd.VSU <> V:13 var
R902:911 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R919:921 VST.floyd.VSU <> sp1:17 var
R917:917 VST.floyd.VSU <> f:16 var
R915:915 VST.floyd.VSU <> G:14 var
R913:913 VST.floyd.VSU <> V:13 var
R1168:1196 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_body_binaryintersection prfax
R1168:1196 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_body_binaryintersection prfax
R1226:1251 VST.veric.seplog <> binary_intersection'_sound thm
R1226:1251 VST.veric.seplog <> binary_intersection'_sound thm
prf 1266:1296 <> semax_body_binaryintersection''
R1313:1320 VST.veric.mpred <> varspecs def
binder 1309:1309 <> V:33
R1328:1335 VST.veric.mpred <> funspecs def
binder 1324:1324 <> G:34
R1344:1352 VST.veric.mpred <> compspecs class
binder 1339:1340 <> cs:35
R1360:1367 compcert.cfrontend.Clight <> function rec
binder 1356:1356 <> f:36
binder 1370:1370 <> i:37
R1383:1389 VST.veric.mpred <> funspec ind
binder 1373:1375 <> sp1:38
binder 1377:1379 <> sp2:39
binder 1416:1417 <> sg:40
binder 1419:1420 <> cc:41
binder 1422:1423 <> A1:42
binder 1425:1426 <> P1:43
binder 1428:1429 <> Q1:44
binder 1431:1434 <> Pne1:45
binder 1436:1439 <> Qne1:46
binder 1441:1442 <> A2:47
binder 1444:1445 <> P2:48
binder 1447:1448 <> Q2:49
binder 1450:1453 <> Pne2:50
binder 1455:1458 <> Qne2:51
R1487:1492 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1517:1520 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1538:1540 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1535:1537 VST.floyd.VSU <> sp1:38 var
R1541:1550 VST.veric.mpred <> mk_funspec constr
R1572:1575 VST.floyd.VSU <> Qne1:46 var
R1567:1570 VST.floyd.VSU <> Pne1:45 var
R1564:1565 VST.floyd.VSU <> Q1:44 var
R1561:1562 VST.floyd.VSU <> P1:43 var
R1558:1559 VST.floyd.VSU <> A1:42 var
R1555:1556 VST.floyd.VSU <> cc:41 var
R1552:1553 VST.floyd.VSU <> sg:40 var
binder 1531:1532 <> W1:52
R1588:1590 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1585:1587 VST.floyd.VSU <> sp2:39 var
R1591:1600 VST.veric.mpred <> mk_funspec constr
R1622:1625 VST.floyd.VSU <> Qne2:51 var
R1617:1620 VST.floyd.VSU <> Pne2:50 var
R1614:1615 VST.floyd.VSU <> Q2:49 var
R1611:1612 VST.floyd.VSU <> P2:48 var
R1608:1609 VST.floyd.VSU <> A2:47 var
R1605:1606 VST.floyd.VSU <> cc:41 var
R1602:1603 VST.floyd.VSU <> sg:40 var
binder 1581:1582 <> W2:53
R1631:1640 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R1648:1648 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1650:1651 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1686:1686 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1649:1649 VST.floyd.VSU <> i:37 var
R1652:1671 VST.veric.seplog <> binary_intersection' def
R1684:1685 VST.floyd.VSU <> W2:53 var
R1681:1682 VST.floyd.VSU <> W1:52 var
R1677:1679 VST.floyd.VSU <> sp2:39 var
R1673:1675 VST.floyd.VSU <> sp1:38 var
R1646:1646 VST.floyd.VSU <> f:36 var
R1644:1644 VST.floyd.VSU <> G:34 var
R1642:1642 VST.floyd.VSU <> V:33 var
R1493:1502 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R1510:1510 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1512:1512 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1516:1516 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1511:1511 VST.floyd.VSU <> i:37 var
R1513:1515 VST.floyd.VSU <> sp2:39 var
R1508:1508 VST.floyd.VSU <> f:36 var
R1506:1506 VST.floyd.VSU <> G:34 var
R1504:1504 VST.floyd.VSU <> V:33 var
R1463:1472 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R1480:1480 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1482:1482 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1486:1486 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1481:1481 VST.floyd.VSU <> i:37 var
R1483:1485 VST.floyd.VSU <> sp1:38 var
R1478:1478 VST.floyd.VSU <> f:36 var
R1476:1476 VST.floyd.VSU <> G:34 var
R1474:1474 VST.floyd.VSU <> V:33 var
R1711:1740 VST.floyd.VSU <> semax_body_binaryintersection' thm
R1711:1740 VST.floyd.VSU <> semax_body_binaryintersection' thm
prf 1823:1853 <> semax_body_subsumespec_GprogNil
R1860:1867 VST.veric.mpred <> varspecs def
binder 1856:1856 <> V:54
binder 1870:1870 <> F:55
R1876:1884 VST.veric.mpred <> compspecs class
binder 1873:1874 <> cs:56
binder 1887:1887 <> f:57
binder 1889:1892 <> iphi:58
R1925:1928 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1966:1976 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1977:1986 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R1994:1997 VST.floyd.VSU <> iphi:58 var
R1992:1992 VST.floyd.VSU <> f:57 var
R1990:1990 VST.floyd.VSU <> F:55 var
R1988:1988 VST.floyd.VSU <> V:54 var
R1929:1940 compcert.lib.Coqlib <> list_norepet ind
R1952:1955 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R1943:1945 Coq.Lists.List <> map def
R1951:1951 VST.floyd.VSU <> V:54 var
R1947:1949 Coq.Init.Datatypes <> fst def
R1956:1958 Coq.Lists.List <> map def
R1964:1964 VST.floyd.VSU <> F:55 var
R1960:1962 Coq.Init.Datatypes <> fst def
R1902:1911 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R1921:1924 VST.floyd.VSU <> iphi:58 var
R1919:1919 VST.floyd.VSU <> f:57 var
R1915:1917 Coq.Init.Datatypes <> nil constr
R1913:1913 VST.floyd.VSU <> V:54 var
R2024:2049 VST.floyd.VSU <> semax_body_subsumespec thm
R2024:2049 VST.floyd.VSU <> semax_body_subsumespec thm
R2098:2127 VST.veric.semax_prog <> make_context_g_char thm
R2098:2127 VST.veric.semax_prog <> make_context_g_char thm
R2098:2127 VST.veric.semax_prog <> make_context_g_char thm
R2098:2127 VST.veric.semax_prog <> make_context_g_char thm
R2098:2127 VST.veric.semax_prog <> make_context_g_char thm
R2098:2127 VST.veric.semax_prog <> make_context_g_char thm
R2155:2192 VST.veric.initial_world <> make_tycontext_s_find_id thm
R2155:2192 VST.veric.initial_world <> make_tycontext_s_find_id thm
R2155:2192 VST.veric.initial_world <> make_tycontext_s_find_id thm
R2155:2192 VST.veric.initial_world <> make_tycontext_s_find_id thm
R2219:2239 VST.veric.initial_world <> find_id def
R2219:2239 VST.veric.initial_world <> find_id def
R2305:2350 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R2305:2350 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R2305:2350 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R2392:2400 Coq.Lists.List <> app_nil_r thm
R2392:2400 Coq.Lists.List <> app_nil_r thm
R2392:2400 Coq.Lists.List <> app_nil_r thm
R2409:2432 compcert.lib.Coqlib <> list_norepet_append_left thm
R2409:2432 compcert.lib.Coqlib <> list_norepet_append_left thm
prf 2501:2525 <> binary_intersection'_sub1
R2542:2563 VST.veric.compcert_rmaps <> typesig def
binder 2538:2538 <> f:59
R2571:2588 compcert.common.AST <> calling_convention rec
binder 2567:2567 <> c:60
R2597:2610 VST.veric.rmaps <> TypeTree ind
binder 2592:2593 <> A1:61
R2635:2638 Coq.Init.Datatypes <> list ind
binder 2630:2631 <> ts:62
R2656:2690 VST.msl.functors MixVariantFunctor _functor proj
R2742:2746 VST.veric.mpred <> mpred def
R2693:2724 VST.veric.rmaps <> dependent_type_functor_rec def
R2730:2735 VST.veric.mpred <> ArgsTT def
R2737:2738 VST.floyd.VSU <> A1:61 var
R2726:2727 VST.floyd.VSU <> ts:62 var
binder 2618:2619 <> P1:63
R2771:2774 Coq.Init.Datatypes <> list ind
binder 2766:2767 <> ts:64
R2792:2826 VST.msl.functors MixVariantFunctor _functor proj
R2892:2896 VST.veric.mpred <> mpred def
R2829:2860 VST.veric.rmaps <> dependent_type_functor_rec def
R2866:2873 VST.veric.mpred <> AssertTT def
R2875:2876 VST.floyd.VSU <> A1:61 var
R2862:2863 VST.floyd.VSU <> ts:64 var
binder 2754:2755 <> Q1:65
R2908:2931 VST.veric.mpred <> args_super_non_expansive def
R2933:2934 VST.floyd.VSU <> P1:63 var
binder 2900:2904 <> P1_ne:66
R2946:2964 VST.veric.mpred <> super_non_expansive def
R2966:2967 VST.floyd.VSU <> Q1:65 var
binder 2938:2942 <> Q1_ne:67
R2980:2993 VST.veric.rmaps <> TypeTree ind
binder 2975:2976 <> A2:68
R3018:3021 Coq.Init.Datatypes <> list ind
binder 3013:3014 <> ts:69
R3039:3073 VST.msl.functors MixVariantFunctor _functor proj
R3125:3129 VST.veric.mpred <> mpred def
R3076:3107 VST.veric.rmaps <> dependent_type_functor_rec def
R3113:3118 VST.veric.mpred <> ArgsTT def
R3120:3121 VST.floyd.VSU <> A2:68 var
R3109:3110 VST.floyd.VSU <> ts:69 var
binder 3001:3002 <> P2:70
R3154:3157 Coq.Init.Datatypes <> list ind
binder 3149:3150 <> ts:71
R3175:3209 VST.msl.functors MixVariantFunctor _functor proj
R3275:3279 VST.veric.mpred <> mpred def
R3212:3243 VST.veric.rmaps <> dependent_type_functor_rec def
R3249:3256 VST.veric.mpred <> AssertTT def
R3258:3259 VST.floyd.VSU <> A2:68 var
R3245:3246 VST.floyd.VSU <> ts:71 var
binder 3137:3138 <> Q2:72
R3291:3314 VST.veric.mpred <> args_super_non_expansive def
R3316:3317 VST.floyd.VSU <> P2:70 var
binder 3283:3287 <> P2_ne:73
R3329:3347 VST.veric.mpred <> super_non_expansive def
R3349:3350 VST.floyd.VSU <> Q2:72 var
binder 3321:3325 <> Q2_ne:74
R3368:3374 VST.veric.mpred <> funspec ind
binder 3358:3360 <> phi:75
binder 3362:3364 <> psi:76
R3388:3390 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3385:3387 VST.floyd.VSU <> phi:75 var
R3391:3400 VST.veric.mpred <> mk_funspec constr
R3421:3425 VST.floyd.VSU <> Q1_ne:67 var
R3415:3419 VST.floyd.VSU <> P1_ne:66 var
R3412:3413 VST.floyd.VSU <> Q1:65 var
R3409:3410 VST.floyd.VSU <> P1:63 var
R3406:3407 VST.floyd.VSU <> A1:61 var
R3404:3404 VST.floyd.VSU <> c:60 var
R3402:3402 VST.floyd.VSU <> f:59 var
binder 3378:3381 <> Hphi:77
R3443:3445 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3440:3442 VST.floyd.VSU <> psi:76 var
R3446:3455 VST.veric.mpred <> mk_funspec constr
R3476:3480 VST.floyd.VSU <> Q2_ne:74 var
R3470:3474 VST.floyd.VSU <> P2_ne:73 var
R3467:3468 VST.floyd.VSU <> Q2:72 var
R3464:3465 VST.floyd.VSU <> P2:70 var
R3461:3462 VST.floyd.VSU <> A2:68 var
R3459:3459 VST.floyd.VSU <> c:60 var
R3457:3457 VST.floyd.VSU <> f:59 var
binder 3433:3436 <> Hpsi:78
R3486:3503 VST.veric.seplog <> funspec_sub def
R3546:3548 VST.floyd.VSU <> phi:75 var
R3506:3525 VST.veric.seplog <> binary_intersection' def
R3540:3543 VST.floyd.VSU <> Hpsi:78 var
R3535:3538 VST.floyd.VSU <> Hphi:77 var
R3531:3533 VST.floyd.VSU <> psi:76 var
R3527:3529 VST.floyd.VSU <> phi:75 var
R3572:3595 VST.veric.seplog <> binary_intersection'_sub thm
R3572:3595 VST.veric.seplog <> binary_intersection'_sub thm
prf 3610:3634 <> binary_intersection'_sub2
R3651:3672 VST.veric.compcert_rmaps <> typesig def
binder 3647:3647 <> f:79
R3680:3697 compcert.common.AST <> calling_convention rec
binder 3676:3676 <> c:80
R3706:3719 VST.veric.rmaps <> TypeTree ind
binder 3701:3702 <> A1:81
R3744:3747 Coq.Init.Datatypes <> list ind
binder 3739:3740 <> ts:82
R3765:3799 VST.msl.functors MixVariantFunctor _functor proj
R3851:3855 VST.veric.mpred <> mpred def
R3802:3833 VST.veric.rmaps <> dependent_type_functor_rec def
R3839:3844 VST.veric.mpred <> ArgsTT def
R3846:3847 VST.floyd.VSU <> A1:81 var
R3835:3836 VST.floyd.VSU <> ts:82 var
binder 3727:3728 <> P1:83
R3880:3883 Coq.Init.Datatypes <> list ind
binder 3875:3876 <> ts:84
R3901:3935 VST.msl.functors MixVariantFunctor _functor proj
R4001:4005 VST.veric.mpred <> mpred def
R3938:3969 VST.veric.rmaps <> dependent_type_functor_rec def
R3975:3982 VST.veric.mpred <> AssertTT def
R3984:3985 VST.floyd.VSU <> A1:81 var
R3971:3972 VST.floyd.VSU <> ts:84 var
binder 3863:3864 <> Q1:85
R4017:4040 VST.veric.mpred <> args_super_non_expansive def
R4042:4043 VST.floyd.VSU <> P1:83 var
binder 4009:4013 <> P1_ne:86
R4055:4073 VST.veric.mpred <> super_non_expansive def
R4075:4076 VST.floyd.VSU <> Q1:85 var
binder 4047:4051 <> Q1_ne:87
R4089:4102 VST.veric.rmaps <> TypeTree ind
binder 4084:4085 <> A2:88
R4127:4130 Coq.Init.Datatypes <> list ind
binder 4122:4123 <> ts:89
R4148:4182 VST.msl.functors MixVariantFunctor _functor proj
R4234:4238 VST.veric.mpred <> mpred def
R4185:4216 VST.veric.rmaps <> dependent_type_functor_rec def
R4222:4227 VST.veric.mpred <> ArgsTT def
R4229:4230 VST.floyd.VSU <> A2:88 var
R4218:4219 VST.floyd.VSU <> ts:89 var
binder 4110:4111 <> P2:90
R4263:4266 Coq.Init.Datatypes <> list ind
binder 4258:4259 <> ts:91
R4284:4318 VST.msl.functors MixVariantFunctor _functor proj
R4384:4388 VST.veric.mpred <> mpred def
R4321:4352 VST.veric.rmaps <> dependent_type_functor_rec def
R4358:4365 VST.veric.mpred <> AssertTT def
R4367:4368 VST.floyd.VSU <> A2:88 var
R4354:4355 VST.floyd.VSU <> ts:91 var
binder 4246:4247 <> Q2:92
R4400:4423 VST.veric.mpred <> args_super_non_expansive def
R4425:4426 VST.floyd.VSU <> P2:90 var
binder 4392:4396 <> P2_ne:93
R4438:4456 VST.veric.mpred <> super_non_expansive def
R4458:4459 VST.floyd.VSU <> Q2:92 var
binder 4430:4434 <> Q2_ne:94
R4477:4483 VST.veric.mpred <> funspec ind
binder 4467:4469 <> phi:95
binder 4471:4473 <> psi:96
R4497:4499 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4494:4496 VST.floyd.VSU <> phi:95 var
R4500:4509 VST.veric.mpred <> mk_funspec constr
R4530:4534 VST.floyd.VSU <> Q1_ne:87 var
R4524:4528 VST.floyd.VSU <> P1_ne:86 var
R4521:4522 VST.floyd.VSU <> Q1:85 var
R4518:4519 VST.floyd.VSU <> P1:83 var
R4515:4516 VST.floyd.VSU <> A1:81 var
R4513:4513 VST.floyd.VSU <> c:80 var
R4511:4511 VST.floyd.VSU <> f:79 var
binder 4487:4490 <> Hphi:97
R4552:4554 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4549:4551 VST.floyd.VSU <> psi:96 var
R4555:4564 VST.veric.mpred <> mk_funspec constr
R4585:4589 VST.floyd.VSU <> Q2_ne:94 var
R4579:4583 VST.floyd.VSU <> P2_ne:93 var
R4576:4577 VST.floyd.VSU <> Q2:92 var
R4573:4574 VST.floyd.VSU <> P2:90 var
R4570:4571 VST.floyd.VSU <> A2:88 var
R4568:4568 VST.floyd.VSU <> c:80 var
R4566:4566 VST.floyd.VSU <> f:79 var
binder 4542:4545 <> Hpsi:98
R4595:4612 VST.veric.seplog <> funspec_sub def
R4655:4657 VST.floyd.VSU <> psi:96 var
R4615:4634 VST.veric.seplog <> binary_intersection' def
R4649:4652 VST.floyd.VSU <> Hpsi:98 var
R4644:4647 VST.floyd.VSU <> Hphi:97 var
R4640:4642 VST.floyd.VSU <> psi:96 var
R4636:4638 VST.floyd.VSU <> phi:95 var
R4681:4704 VST.veric.seplog <> binary_intersection'_sub thm
R4681:4704 VST.veric.seplog <> binary_intersection'_sub thm
prf 4720:4743 <> binary_intersection'_sub
binder 4747:4747 <> f:99
binder 4749:4749 <> c:100
binder 4751:4752 <> A1:101
binder 4754:4755 <> P1:102
binder 4757:4758 <> Q1:103
binder 4760:4764 <> P1_ne:104
binder 4766:4770 <> Q1_ne:105
binder 4772:4773 <> A2:106
binder 4775:4776 <> P2:107
binder 4778:4779 <> Q2:108
binder 4781:4785 <> P2_ne:109
binder 4787:4791 <> Q2_ne:110
R4803:4809 VST.veric.mpred <> funspec ind
binder 4795:4797 <> phi:111
binder 4799:4801 <> psi:112
binder 4812:4815 <> Hphi:113
binder 4817:4820 <> Hpsi:114
R4928:4933 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4825:4835 VST.veric.SeparationLogic <> funspec_sub def
R4925:4927 VST.floyd.VSU <> phi:111 var
R4839:4858 VST.veric.seplog <> binary_intersection' def
R4919:4922 VST.floyd.VSU <> Hpsi:114 var
R4914:4917 VST.floyd.VSU <> Hphi:113 var
R4910:4912 VST.floyd.VSU <> psi:112 var
R4906:4908 VST.floyd.VSU <> phi:111 var
R4900:4904 VST.floyd.VSU <> Q2_ne:110 var
R4894:4898 VST.floyd.VSU <> P2_ne:109 var
R4891:4892 VST.floyd.VSU <> Q2:108 var
R4888:4889 VST.floyd.VSU <> P2:107 var
R4885:4886 VST.floyd.VSU <> A2:106 var
R4879:4883 VST.floyd.VSU <> Q1_ne:105 var
R4873:4877 VST.floyd.VSU <> P1_ne:104 var
R4870:4871 VST.floyd.VSU <> Q1:103 var
R4867:4868 VST.floyd.VSU <> P1:102 var
R4864:4865 VST.floyd.VSU <> A1:101 var
R4862:4862 VST.floyd.VSU <> c:100 var
R4860:4860 VST.floyd.VSU <> f:99 var
R4934:4944 VST.veric.SeparationLogic <> funspec_sub def
R5034:5036 VST.floyd.VSU <> psi:112 var
R4948:4967 VST.veric.seplog <> binary_intersection' def
R5028:5031 VST.floyd.VSU <> Hpsi:114 var
R5023:5026 VST.floyd.VSU <> Hphi:113 var
R5019:5021 VST.floyd.VSU <> psi:112 var
R5015:5017 VST.floyd.VSU <> phi:111 var
R5009:5013 VST.floyd.VSU <> Q2_ne:110 var
R5003:5007 VST.floyd.VSU <> P2_ne:109 var
R5000:5001 VST.floyd.VSU <> Q2:108 var
R4997:4998 VST.floyd.VSU <> P2:107 var
R4994:4995 VST.floyd.VSU <> A2:106 var
R4988:4992 VST.floyd.VSU <> Q1_ne:105 var
R4982:4986 VST.floyd.VSU <> P1_ne:104 var
R4979:4980 VST.floyd.VSU <> Q1:103 var
R4976:4977 VST.floyd.VSU <> P1:102 var
R4973:4974 VST.floyd.VSU <> A1:101 var
R4971:4971 VST.floyd.VSU <> c:100 var
R4969:4969 VST.floyd.VSU <> f:99 var
R5052:5075 VST.veric.seplog <> binary_intersection'_sub thm
R5052:5075 VST.veric.seplog <> binary_intersection'_sub thm
prf 5128:5152 <> binary_intersection'_sub'
binder 5156:5156 <> f:115
binder 5158:5158 <> c:116
binder 5160:5161 <> A1:117
binder 5163:5164 <> P1:118
binder 5166:5167 <> Q1:119
binder 5169:5173 <> P1_ne:120
binder 5175:5179 <> Q1_ne:121
binder 5181:5182 <> A2:122
binder 5184:5185 <> P2:123
binder 5187:5188 <> Q2:124
binder 5190:5194 <> P2_ne:125
binder 5196:5200 <> Q2_ne:126
R5212:5218 VST.veric.mpred <> funspec ind
binder 5204:5206 <> phi:127
binder 5208:5210 <> psi:128
binder 5221:5224 <> Hphi:129
binder 5226:5229 <> Hpsi:130
binder 5231:5233 <> tau:131
R5244:5246 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5241:5243 VST.floyd.VSU <> tau:131 var
R5248:5267 VST.veric.seplog <> binary_intersection' def
R5328:5331 VST.floyd.VSU <> Hpsi:130 var
R5323:5326 VST.floyd.VSU <> Hphi:129 var
R5319:5321 VST.floyd.VSU <> psi:128 var
R5315:5317 VST.floyd.VSU <> phi:127 var
R5309:5313 VST.floyd.VSU <> Q2_ne:126 var
R5303:5307 VST.floyd.VSU <> P2_ne:125 var
R5300:5301 VST.floyd.VSU <> Q2:124 var
R5297:5298 VST.floyd.VSU <> P2:123 var
R5294:5295 VST.floyd.VSU <> A2:122 var
R5288:5292 VST.floyd.VSU <> Q1_ne:121 var
R5282:5286 VST.floyd.VSU <> P1_ne:120 var
R5279:5280 VST.floyd.VSU <> Q1:119 var
R5276:5277 VST.floyd.VSU <> P1:118 var
R5273:5274 VST.floyd.VSU <> A1:117 var
R5271:5271 VST.floyd.VSU <> c:116 var
R5269:5269 VST.floyd.VSU <> f:115 var
binder 5238:5238 <> X:132
R5356:5359 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5337:5347 VST.veric.SeparationLogic <> funspec_sub def
R5353:5355 VST.floyd.VSU <> phi:127 var
R5349:5351 VST.floyd.VSU <> tau:131 var
R5360:5370 VST.veric.SeparationLogic <> funspec_sub def
R5376:5378 VST.floyd.VSU <> psi:128 var
R5372:5374 VST.floyd.VSU <> tau:131 var
R5401:5424 VST.floyd.VSU <> binary_intersection'_sub thm
R5401:5424 VST.floyd.VSU <> binary_intersection'_sub thm
prf 5439:5465 <> mapsto_zeros_mapsto_nullval
binder 5467:5468 <> sh:133
binder 5470:5470 <> b:134
binder 5472:5472 <> z:135
binder 5474:5474 <> t:136
R5497:5503 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5551:5557 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5558:5558 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R5636:5644 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R5559:5590 VST.veric.mapsto_memory_block <> mapsto_zeros def
R5627:5630 compcert.common.Values <> Vptr constr
R5634:5634 VST.floyd.VSU <> z:135 var
R5632:5632 VST.floyd.VSU <> b:134 var
R5623:5624 VST.floyd.VSU <> sh:133 var
R5606:5615 compcert.common.Memdata <> size_chunk def
R5617:5620 compcert.common.AST <> Mptr def
R5645:5645 VST.msl.seplog <> ::logic:x_'&&'_x not
R5815:5850 VST.msl.seplog <> ::logic:x_'&&'_x not
R5915:5915 VST.msl.seplog <> ::logic:x_'&&'_x not
R5646:5649 VST.msl.seplog <> ::logic:'!!'_x not
R5814:5814 VST.msl.seplog <> ::logic:'!!'_x not
R5650:5652 Coq.Init.Logic <> and ind
R5703:5706 Coq.ZArith.BinInt Z lt def
R5799:5812 compcert.lib.Integers Ptrofs modulus def
R5730:5734 Coq.ZArith.BinInt Z add def
R5779:5793 compcert.lib.Integers Ptrofs unsigned def
R5795:5795 VST.floyd.VSU <> z:135 var
R5737:5746 compcert.common.Memdata <> size_chunk def
R5748:5751 compcert.common.AST <> Mptr def
R5655:5658 Coq.ZArith.BinInt Z le def
R5664:5678 compcert.lib.Integers Ptrofs unsigned def
R5680:5680 VST.floyd.VSU <> z:135 var
R5660:5661 Coq.Numbers.BinNums <> Z0 constr
R5851:5856 VST.veric.SeparationLogic <> mapsto def
R5908:5914 VST.veric.base <> nullval def
R5898:5901 compcert.common.Values <> Vptr constr
R5905:5905 VST.floyd.VSU <> z:135 var
R5903:5903 VST.floyd.VSU <> b:134 var
R5878:5885 compcert.cfrontend.Ctypes <> Tpointer constr
R5889:5894 compcert.cfrontend.Ctypes <> noattr def
R5887:5887 VST.floyd.VSU <> t:136 var
R5858:5859 VST.floyd.VSU <> sh:133 var
R5504:5511 Coq.ZArith.BinInt Z divide def
R5533:5547 compcert.lib.Integers Ptrofs unsigned def
R5549:5549 VST.floyd.VSU <> z:135 var
R5514:5524 compcert.common.Memdata <> align_chunk def
R5526:5529 compcert.common.AST <> Mptr def
R5480:5493 VST.veric.shares <> readable_share def
R5495:5496 VST.floyd.VSU <> sh:133 var
R5939:5985 VST.veric.mapsto_memory_block <> mapsto_zeros_mapsto_nullval thm
R5939:5985 VST.veric.mapsto_memory_block <> mapsto_zeros_mapsto_nullval thm
def 6014:6027 <> genv_find_func
R6033:6038 compcert.common.Globalenvs Genv t rec
R6054:6057 compcert.cfrontend.Ctypes <> type ind
R6040:6052 compcert.cfrontend.Clight <> fundef def
binder 6030:6031 <> ge:137
binder 6060:6060 <> i:138
binder 6062:6062 <> f:139
R6069:6075 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R6077:6078 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 6076:6076 <> b:140
R6109:6120 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6100:6102 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6079:6094 compcert.common.Globalenvs Genv find_symbol def
R6099:6099 VST.floyd.VSU <> i:138 var
R6096:6097 VST.floyd.VSU <> ge:137 var
R6103:6106 Coq.Init.Datatypes <> Some constr
R6108:6108 VST.floyd.VSU <> b:140 var
R6145:6147 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6121:6139 compcert.common.Globalenvs Genv find_funct_ptr def
R6144:6144 VST.floyd.VSU <> b:140 var
R6141:6142 VST.floyd.VSU <> ge:137 var
R6148:6151 Coq.Init.Datatypes <> Some constr
R6153:6153 VST.floyd.VSU <> f:139 var
prf 6165:6177 <> progfunct_GFF
binder 6180:6180 <> p:141
binder 6182:6182 <> i:142
binder 6184:6185 <> fd:143
R6225:6236 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6271:6274 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6275:6288 VST.floyd.VSU <> genv_find_func def
R6311:6312 VST.floyd.VSU <> fd:143 var
R6309:6309 VST.floyd.VSU <> i:142 var
R6291:6304 compcert.common.Globalenvs Genv globalenv def
R6306:6306 VST.floyd.VSU <> p:141 var
R6261:6263 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6237:6243 VST.veric.initial_world <> find_id def
R6248:6257 VST.veric.Clight_initial_world <> prog_funct syndef
R6259:6259 VST.floyd.VSU <> p:141 var
R6245:6245 VST.floyd.VSU <> i:142 var
R6264:6267 Coq.Init.Datatypes <> Some constr
R6269:6270 VST.floyd.VSU <> fd:143 var
R6189:6200 compcert.lib.Coqlib <> list_norepet ind
R6203:6205 Coq.Lists.List <> map def
R6212:6220 compcert.cfrontend.Ctypes <> prog_defs proj
R6222:6222 VST.floyd.VSU <> p:141 var
R6207:6209 Coq.Init.Datatypes <> fst def
R6338:6346 VST.veric.initial_world <> find_id_e thm
R6338:6346 VST.veric.initial_world <> find_id_e thm
R6366:6397 VST.veric.semax_prog <> find_funct_ptr_exists thm
R6366:6397 VST.veric.semax_prog <> find_funct_ptr_exists thm
R6420:6456 VST.veric.semax_prog <> in_prog_funct_in_prog_defs thm
R6420:6456 VST.veric.semax_prog <> in_prog_funct_in_prog_defs thm
prf 6484:6497 <> funspec_sub_cc
binder 6499:6501 <> phi:144
binder 6503:6505 <> psi:145
R6527:6536 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6569:6571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6537:6564 VST.veric.seplog <> callingconvention_of_funspec def
R6566:6568 VST.floyd.VSU <> phi:144 var
R6572:6599 VST.veric.seplog <> callingconvention_of_funspec def
R6601:6603 VST.floyd.VSU <> psi:145 var
R6508:6518 VST.veric.SeparationLogic <> funspec_sub def
R6524:6526 VST.floyd.VSU <> psi:145 var
R6520:6522 VST.floyd.VSU <> phi:144 var
def 6692:6713 <> semaxfunc_InternalInfo
binder 6715:6715 <> C:146
binder 6717:6717 <> V:147
binder 6719:6719 <> G:148
R6727:6732 compcert.common.Globalenvs Genv t rec
R6748:6751 compcert.cfrontend.Ctypes <> type ind
R6734:6746 compcert.cfrontend.Clight <> fundef def
binder 6722:6723 <> ge:149
binder 6754:6755 <> id:150
binder 6757:6757 <> f:151
binder 6759:6761 <> phi:152
R6834:6839 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6827:6829 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6795:6798 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R6770:6779 VST.veric.base <> id_in_list def
R6785:6787 Coq.Lists.List <> map def
R6793:6793 VST.floyd.VSU <> G:148 var
R6789:6791 Coq.Init.Datatypes <> fst def
R6781:6782 VST.floyd.VSU <> id:150 var
R6799:6818 VST.veric.SeparationLogic <> semax_body_params_ok def
R6820:6820 VST.floyd.VSU <> f:151 var
R6830:6833 Coq.Init.Datatypes <> true constr
R6927:6932 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6840:6845 Coq.Lists.List <> Forall ind
R6917:6923 compcert.cfrontend.Clight <> fn_vars proj
R6925:6925 VST.floyd.VSU <> f:151 var
R6862:6864 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6857:6861 compcert.common.AST <> ident def
R6865:6868 compcert.cfrontend.Ctypes <> type ind
binder 6852:6853 <> it:153
R6907:6909 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6873:6885 compcert.cfrontend.Ctypes <> complete_type def
R6900:6902 Coq.Init.Datatypes <> snd def
R6904:6905 VST.floyd.VSU <> it:153 var
R6889:6895 VST.veric.mpred <> cenv_cs meth
R6897:6897 VST.floyd.VSU <> C:146 var
R6910:6913 Coq.Init.Datatypes <> true constr
R6969:6974 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6933:6944 VST.veric.SeparationLogic <> var_sizes_ok def
R6959:6965 compcert.cfrontend.Clight <> fn_vars proj
R6967:6967 VST.floyd.VSU <> f:151 var
R7023:7027 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6988:6990 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6975:6985 compcert.cfrontend.Clight <> fn_callconv proj
R6987:6987 VST.floyd.VSU <> f:151 var
R6991:7018 VST.veric.seplog <> callingconvention_of_funspec def
R7020:7022 VST.floyd.VSU <> phi:152 var
R7054:7059 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7028:7037 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R7045:7045 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7048:7049 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7053:7053 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7046:7047 VST.floyd.VSU <> id:150 var
R7050:7052 VST.floyd.VSU <> phi:152 var
R7043:7043 VST.floyd.VSU <> f:151 var
R7041:7041 VST.floyd.VSU <> G:148 var
R7039:7039 VST.floyd.VSU <> V:147 var
R7060:7073 VST.floyd.VSU <> genv_find_func def
R7082:7089 compcert.cfrontend.Ctypes <> Internal constr
R7091:7091 VST.floyd.VSU <> f:151 var
R7078:7079 VST.floyd.VSU <> id:150 var
R7075:7076 VST.floyd.VSU <> ge:149 var
def 7107:7128 <> semaxfunc_ExternalInfo
binder 7130:7134 <> Espec:154
R7142:7147 compcert.common.Globalenvs Genv t rec
R7163:7166 compcert.cfrontend.Ctypes <> type ind
R7149:7161 compcert.cfrontend.Clight <> fundef def
binder 7137:7138 <> ge:155
R7175:7179 compcert.common.AST <> ident def
binder 7170:7171 <> id:156
R7192:7208 compcert.common.AST <> external_function ind
binder 7187:7188 <> ef:157
R7221:7228 compcert.cfrontend.Ctypes <> typelist ind
binder 7212:7217 <> argsig:158
R7241:7244 compcert.cfrontend.Ctypes <> type ind
binder 7232:7237 <> retsig:159
R7253:7270 compcert.common.AST <> calling_convention rec
binder 7248:7249 <> cc:160
binder 7273:7275 <> phi:161
R7289:7291 VST.floyd.VSU <> phi:161 var
R7298:7307 VST.veric.mpred <> mk_funspec constr
R7309:7309 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7317:7318 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7326:7326 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7368:7371 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7358:7360 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7352:7357 VST.floyd.VSU <> retsig:159 var
R7378:7383 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7374:7374 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7372:7373 VST.floyd.VSU <> cc:160 var
R7414:7419 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7391:7393 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7394:7406 VST.veric.mpred <> typelist2list def
R7408:7413 VST.floyd.VSU <> argsig:158 var
R7500:7505 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7429:7431 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7420:7425 compcert.common.AST <> ef_sig def
R7427:7428 VST.floyd.VSU <> ef:157 var
R7432:7442 compcert.common.AST <> mksignature constr
R7498:7499 VST.floyd.VSU <> cc:160 var
R7474:7488 compcert.cfrontend.Ctypes <> rettype_of_type def
R7490:7495 VST.floyd.VSU <> retsig:159 var
R7445:7463 compcert.cfrontend.Ctypes <> typlist_of_typelist def
R7465:7470 VST.floyd.VSU <> argsig:158 var
R7506:7506 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7547:7553 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7527:7530 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R7519:7521 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7507:7515 compcert.common.AST <> ef_inline def
R7517:7518 VST.floyd.VSU <> ef:157 var
R7522:7526 Coq.Init.Datatypes <> false constr
R7531:7544 VST.veric.SeparationLogic <> withtype_empty def
R7554:7554 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7771:7777 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7568:7575 VST.veric.mpred <> genviron def
binder 7563:7564 <> gx:163
R7584:7587 Coq.Init.Datatypes <> list ind
binder 7579:7580 <> ts:164
binder 7595:7595 <> x:165
R7604:7609 Coq.Init.Datatypes <> option ind
R7611:7613 compcert.common.Values <> val ind
binder 7598:7600 <> ret:166
R7739:7743 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R7674:7677 VST.msl.seplog <> ::logic:x_'&&'_x not
R7628:7640 VST.veric.SeparationLogic <> make_ext_rval def
R7670:7672 VST.floyd.VSU <> ret:166 var
R7646:7660 compcert.cfrontend.Ctypes <> rettype_of_type def
R7662:7667 VST.floyd.VSU <> retsig:159 var
R7642:7643 VST.floyd.VSU <> gx:163 var
R7625:7625 VST.floyd.VSU <> x:165 var
R7622:7623 VST.floyd.VSU <> ts:164 var
R7678:7680 VST.msl.seplog <> ::logic:'!!'_x not
R7681:7709 compcert.common.Builtins0 <> val_opt_has_rettype def
R7716:7730 compcert.cfrontend.Ctypes <> rettype_of_type def
R7732:7737 VST.floyd.VSU <> retsig:159 var
R7711:7713 VST.floyd.VSU <> ret:166 var
R7744:7746 VST.msl.seplog <> ::logic:'!!'_x not
R7747:7759 VST.veric.SeparationLogic <> tc_option_val def
R7768:7770 VST.floyd.VSU <> ret:166 var
R7761:7766 VST.floyd.VSU <> retsig:159 var
R7808:7813 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7779:7792 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax_external defax
R7800:7801 VST.floyd.VSU <> ef:157 var
R7794:7798 VST.floyd.VSU <> Espec:154 var
R7814:7827 VST.floyd.VSU <> genv_find_func def
R7836:7843 compcert.cfrontend.Ctypes <> External constr
R7862:7863 VST.floyd.VSU <> cc:160 var
R7855:7860 VST.floyd.VSU <> retsig:159 var
R7848:7853 VST.floyd.VSU <> argsig:158 var
R7845:7846 VST.floyd.VSU <> ef:157 var
R7832:7833 VST.floyd.VSU <> id:156 var
R7829:7830 VST.floyd.VSU <> ge:155 var
prf 7880:7903 <> InternalInfo_subsumption
binder 7906:7907 <> ge:167
binder 7909:7910 <> cs:168
binder 7912:7912 <> V:169
binder 7914:7915 <> V':170
binder 7917:7917 <> F:171
binder 7919:7920 <> F':172
binder 7922:7922 <> i:173
binder 7924:7924 <> f:174
binder 7926:7928 <> phi:175
binder 7947:7947 <> i:176
R7951:7960 VST.veric.tycontext <> sub_option def
R7962:7962 compcert.lib.Maps <> :::x_'!'_x not
R7983:7986 compcert.lib.Maps <> :::x_'!'_x not
R7987:7987 VST.floyd.VSU <> i:176 var
R7963:7978 VST.veric.seplog <> make_tycontext_g def
R7982:7982 VST.floyd.VSU <> F:171 var
R7980:7980 VST.floyd.VSU <> V:169 var
R7991:7991 compcert.lib.Maps <> :::x_'!'_x not
R8014:8017 compcert.lib.Maps <> :::x_'!'_x not
R8018:8018 VST.floyd.VSU <> i:176 var
R7992:8007 VST.veric.seplog <> make_tycontext_g def
R8012:8013 VST.floyd.VSU <> F':172 var
R8009:8010 VST.floyd.VSU <> V':170 var
binder 7934:7936 <> HVF:177
binder 8037:8037 <> i:178
R8040:8050 VST.veric.expr <> subsumespec def
R8067:8073 VST.veric.initial_world <> find_id def
R8077:8078 VST.floyd.VSU <> F':172 var
R8075:8075 VST.floyd.VSU <> i:178 var
R8053:8059 VST.veric.initial_world <> find_id def
R8063:8063 VST.floyd.VSU <> F:171 var
R8061:8061 VST.floyd.VSU <> i:178 var
binder 8025:8026 <> HF:179
R8092:8103 compcert.lib.Coqlib <> list_norepet ind
R8106:8108 Coq.Lists.List <> map def
R8114:8114 VST.floyd.VSU <> F:171 var
R8110:8112 Coq.Init.Datatypes <> fst def
binder 8085:8088 <> LNRF:180
R8125:8146 VST.floyd.VSU <> semaxfunc_InternalInfo def
R8162:8164 VST.floyd.VSU <> phi:175 var
R8160:8160 VST.floyd.VSU <> f:174 var
R8158:8158 VST.floyd.VSU <> i:173 var
R8155:8156 VST.floyd.VSU <> ge:167 var
R8153:8153 VST.floyd.VSU <> F:171 var
R8151:8151 VST.floyd.VSU <> V:169 var
R8148:8149 VST.floyd.VSU <> cs:168 var
binder 8121:8121 <> H:181
R8170:8191 VST.floyd.VSU <> semaxfunc_InternalInfo def
R8209:8211 VST.floyd.VSU <> phi:175 var
R8207:8207 VST.floyd.VSU <> f:174 var
R8205:8205 VST.floyd.VSU <> i:173 var
R8202:8203 VST.floyd.VSU <> ge:167 var
R8199:8200 VST.floyd.VSU <> F':172 var
R8196:8197 VST.floyd.VSU <> V':170 var
R8193:8194 VST.floyd.VSU <> cs:168 var
R8307:8319 Coq.Bool.Bool <> andb_true_iff thm
R8363:8373 Coq.Bool.Bool <> andb_true_r thm
R8307:8319 Coq.Bool.Bool <> andb_true_iff thm
R8363:8373 Coq.Bool.Bool <> andb_true_r thm
R8363:8373 Coq.Bool.Bool <> andb_true_r thm
R8405:8421 VST.floyd.assoclists <> id_in_list_true_i thm
R8405:8421 VST.floyd.assoclists <> id_in_list_true_i thm
R8430:8444 VST.floyd.fieldlist <> id_in_list_true thm
R8430:8444 VST.floyd.fieldlist <> id_in_list_true thm
R8462:8479 VST.floyd.assoclists <> In_map_fst_find_id thm
R8462:8479 VST.floyd.assoclists <> In_map_fst_find_id thm
R8607:8624 VST.veric.initial_world <> find_id_In_map_fst thm
R8607:8624 VST.veric.initial_world <> find_id_In_map_fst thm
R8655:8676 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_body_subsumption prfax
R8655:8676 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_body_subsumption prfax
R8773:8773 compcert.lib.Maps <> :::x_'!'_x not
R8817:8820 compcert.lib.Maps <> :::x_'!'_x not
R8774:8789 VST.veric.seplog <> make_tycontext_t def
R8806:8813 compcert.cfrontend.Clight <> fn_temps proj
R8792:8800 compcert.cfrontend.Clight <> fn_params proj
R8773:8773 compcert.lib.Maps <> :::x_'!'_x not
R8817:8820 compcert.lib.Maps <> :::x_'!'_x not
R8774:8789 VST.veric.seplog <> make_tycontext_t def
R8806:8813 compcert.cfrontend.Clight <> fn_temps proj
R8792:8800 compcert.cfrontend.Clight <> fn_params proj
R8850:8873 VST.veric.initial_world <> make_tycontext_s_find_id thm
R8850:8873 VST.veric.initial_world <> make_tycontext_s_find_id thm
R8850:8873 VST.veric.initial_world <> make_tycontext_s_find_id thm
R8850:8873 VST.veric.initial_world <> make_tycontext_s_find_id thm
R8899:8910 compcert.lib.Maps PTree gempty thm
R8899:8910 compcert.lib.Maps PTree gempty thm
R8899:8910 compcert.lib.Maps PTree gempty thm
prf 9955:9975 <> InternalInfo_envs_sub
binder 9978:9979 <> CS:182
binder 9981:9983 <> CS':183
R9993:10002 VST.veric.expr <> cspecs_sub def
R10007:10009 VST.floyd.VSU <> CS':183 var
R10004:10005 VST.floyd.VSU <> CS:182 var
binder 9987:9990 <> CSUB:184
binder 10012:10013 <> ge:185
binder 10015:10017 <> ge':186
binder 10116:10116 <> V:187
binder 10118:10118 <> G:188
binder 10121:10121 <> i:189
binder 10123:10123 <> f:190
binder 10125:10127 <> phi:191
R10134:10155 VST.floyd.VSU <> semaxfunc_InternalInfo def
R10171:10173 VST.floyd.VSU <> phi:191 var
R10169:10169 VST.floyd.VSU <> f:190 var
R10167:10167 VST.floyd.VSU <> i:189 var
R10164:10165 VST.floyd.VSU <> ge:185 var
R10162:10162 VST.floyd.VSU <> G:188 var
R10160:10160 VST.floyd.VSU <> V:187 var
R10157:10158 VST.floyd.VSU <> CS:182 var
binder 10130:10130 <> H:192
R10184:10197 VST.floyd.VSU <> genv_find_func def
R10206:10213 compcert.cfrontend.Ctypes <> Internal constr
R10215:10215 VST.floyd.VSU <> f:190 var
R10203:10203 VST.floyd.VSU <> i:189 var
R10199:10201 VST.floyd.VSU <> ge':186 var
binder 10177:10181 <> FFunc:193
R10220:10241 VST.floyd.VSU <> semaxfunc_InternalInfo def
R10259:10261 VST.floyd.VSU <> phi:191 var
R10257:10257 VST.floyd.VSU <> f:190 var
R10255:10255 VST.floyd.VSU <> i:189 var
R10251:10253 VST.floyd.VSU <> ge':186 var
R10249:10249 VST.floyd.VSU <> G:188 var
R10247:10247 VST.floyd.VSU <> V:187 var
R10243:10245 VST.floyd.VSU <> CS':183 var
R10466:10493 VST.veric.semax <> complete_type_cenv_sub thm
R10466:10493 VST.veric.semax <> complete_type_cenv_sub thm
R10567:10578 VST.veric.SeparationLogic <> var_sizes_ok def
R10657:10662 VST.veric.expr <> sizeof def
R10679:10706 VST.veric.expr_lemmas4 <> cenv_sub_sizeof thm
R10679:10706 VST.veric.expr_lemmas4 <> cenv_sub_sizeof thm
R10679:10706 VST.veric.expr_lemmas4 <> cenv_sub_sizeof thm
R10679:10706 VST.veric.expr_lemmas4 <> cenv_sub_sizeof thm
R10738:10756 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_body_cenv_sub prfax
R10738:10756 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_body_cenv_sub prfax
prf 10786:10809 <> InternalInfo_funspec_sub
binder 10812:10813 <> cs:194
binder 10815:10815 <> V:195
binder 10817:10817 <> G:196
binder 10819:10820 <> ge:197
binder 10822:10822 <> i:198
binder 10824:10824 <> f:199
binder 10826:10828 <> phi:200
R10842:10863 VST.floyd.VSU <> semaxfunc_InternalInfo def
R10879:10881 VST.floyd.VSU <> phi:200 var
R10877:10877 VST.floyd.VSU <> f:199 var
R10875:10875 VST.floyd.VSU <> i:198 var
R10872:10873 VST.floyd.VSU <> ge:197 var
R10870:10870 VST.floyd.VSU <> G:196 var
R10868:10868 VST.floyd.VSU <> V:195 var
R10865:10866 VST.floyd.VSU <> cs:194 var
binder 10837:10839 <> SFI:201
R10897:10903 VST.veric.mpred <> funspec ind
binder 10890:10893 <> phi':202
R10914:10924 VST.veric.SeparationLogic <> funspec_sub def
R10930:10933 VST.floyd.VSU <> phi':202 var
R10926:10928 VST.floyd.VSU <> phi:200 var
binder 10907:10910 <> Fsub:203
R10937:10958 VST.floyd.VSU <> semaxfunc_InternalInfo def
R10974:10977 VST.floyd.VSU <> phi':202 var
R10972:10972 VST.floyd.VSU <> f:199 var
R10970:10970 VST.floyd.VSU <> i:198 var
R10967:10968 VST.floyd.VSU <> ge:197 var
R10965:10965 VST.floyd.VSU <> G:196 var
R10963:10963 VST.floyd.VSU <> V:195 var
R10960:10961 VST.floyd.VSU <> cs:194 var
R11039:11052 VST.floyd.VSU <> funspec_sub_cc thm
R11039:11052 VST.floyd.VSU <> funspec_sub_cc thm
R11039:11052 VST.floyd.VSU <> funspec_sub_cc thm
R11100:11121 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_body_funspec_sub prfax
R11100:11121 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_body_funspec_sub prfax
R11154:11166 Coq.Bool.Bool <> andb_true_iff thm
R11154:11166 Coq.Bool.Bool <> andb_true_iff thm
R11204:11216 Coq.Bool.Bool <> andb_true_iff thm
R11204:11216 Coq.Bool.Bool <> andb_true_iff thm
R11253:11274 VST.veric.base <> compute_list_norepet_e thm
R11253:11274 VST.veric.base <> compute_list_norepet_e thm
prf 11298:11318 <> ExternalInfo_envs_sub
binder 11320:11324 <> Espec:204
binder 11326:11327 <> ge:205
binder 11329:11331 <> ge':206
binder 11465:11465 <> i:207
binder 11467:11468 <> ef:208
binder 11470:11475 <> argsig:209
binder 11477:11482 <> retsig:210
binder 11484:11485 <> cc:211
binder 11487:11489 <> phi:212
R11498:11519 VST.floyd.VSU <> semaxfunc_ExternalInfo def
R11552:11554 VST.floyd.VSU <> phi:212 var
R11549:11550 VST.floyd.VSU <> cc:211 var
R11542:11547 VST.floyd.VSU <> retsig:210 var
R11535:11540 VST.floyd.VSU <> argsig:209 var
R11532:11533 VST.floyd.VSU <> ef:208 var
R11530:11530 VST.floyd.VSU <> i:207 var
R11527:11528 VST.floyd.VSU <> ge:205 var
R11521:11525 VST.floyd.VSU <> Espec:204 var
binder 11494:11494 <> H:213
R11568:11581 VST.floyd.VSU <> genv_find_func def
R11590:11597 compcert.cfrontend.Ctypes <> External constr
R11617:11618 VST.floyd.VSU <> cc:211 var
R11609:11614 VST.floyd.VSU <> retsig:210 var
R11602:11607 VST.floyd.VSU <> argsig:209 var
R11599:11600 VST.floyd.VSU <> ef:208 var
R11587:11587 VST.floyd.VSU <> i:207 var
R11583:11585 VST.floyd.VSU <> ge':206 var
binder 11561:11565 <> FFunc:214
R11623:11644 VST.floyd.VSU <> semaxfunc_ExternalInfo def
R11678:11680 VST.floyd.VSU <> phi:212 var
R11675:11676 VST.floyd.VSU <> cc:211 var
R11668:11673 VST.floyd.VSU <> retsig:210 var
R11661:11666 VST.floyd.VSU <> argsig:209 var
R11658:11659 VST.floyd.VSU <> ef:208 var
R11656:11656 VST.floyd.VSU <> i:207 var
R11652:11654 VST.floyd.VSU <> ge':206 var
R11646:11650 VST.floyd.VSU <> Espec:204 var
prf 11839:11842 <> TTL7
binder 11852:11852 <> l:215
binder 11854:11855 <> l':216
R11883:11885 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11860:11880 VST.veric.mpred <> typelist_of_type_list def
R11882:11882 VST.floyd.VSU <> l:215 var
R11886:11906 VST.veric.mpred <> typelist_of_type_list def
R11908:11909 VST.floyd.VSU <> l':216 var
binder 11858:11858 <> L:217
R11914:11914 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11913:11913 VST.floyd.VSU <> l:215 var
R11915:11916 VST.floyd.VSU <> l':216 var
prf 12010:12033 <> ExternalInfo_funspec_sub
binder 12036:12040 <> Espec:218
binder 12042:12043 <> ge:219
binder 12045:12045 <> i:220
binder 12047:12047 <> e:221
binder 12049:12050 <> ts:222
binder 12052:12052 <> t:223
binder 12054:12054 <> c:224
binder 12056:12058 <> phi:225
R12067:12088 VST.floyd.VSU <> semaxfunc_ExternalInfo def
R12110:12112 VST.floyd.VSU <> phi:225 var
R12108:12108 VST.floyd.VSU <> c:224 var
R12106:12106 VST.floyd.VSU <> t:223 var
R12103:12104 VST.floyd.VSU <> ts:222 var
R12101:12101 VST.floyd.VSU <> e:221 var
R12099:12099 VST.floyd.VSU <> i:220 var
R12096:12097 VST.floyd.VSU <> ge:219 var
R12090:12094 VST.floyd.VSU <> Espec:218 var
binder 12062:12064 <> SFE:226
R12123:12129 VST.veric.mpred <> funspec ind
binder 12116:12119 <> phi':227
R12140:12150 VST.veric.SeparationLogic <> funspec_sub def
R12156:12159 VST.floyd.VSU <> phi':227 var
R12152:12154 VST.floyd.VSU <> phi:225 var
binder 12133:12136 <> Fsub:228
R12163:12184 VST.floyd.VSU <> semaxfunc_ExternalInfo def
R12206:12209 VST.floyd.VSU <> phi':227 var
R12204:12204 VST.floyd.VSU <> c:224 var
R12202:12202 VST.floyd.VSU <> t:223 var
R12199:12200 VST.floyd.VSU <> ts:222 var
R12197:12197 VST.floyd.VSU <> e:221 var
R12195:12195 VST.floyd.VSU <> i:220 var
R12192:12193 VST.floyd.VSU <> ge:219 var
R12186:12190 VST.floyd.VSU <> Espec:218 var
R12233:12251 VST.veric.SeparationLogic <> type_of_funspec_sub thm
R12233:12251 VST.veric.SeparationLogic <> type_of_funspec_sub thm
R12278:12291 VST.floyd.VSU <> funspec_sub_cc thm
R12278:12291 VST.floyd.VSU <> funspec_sub_cc thm
R12408:12411 VST.floyd.VSU <> TTL7 thm
R12408:12411 VST.floyd.VSU <> TTL7 thm
R12455:12480 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_external_funspec_sub prfax
R12455:12480 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_external_funspec_sub prfax
prf 13337:13351 <> InternalInfo_cc
binder 13354:13355 <> cs:229
binder 13357:13357 <> V:230
binder 13359:13359 <> G:231
binder 13361:13362 <> ge:232
binder 13364:13364 <> i:233
binder 13366:13366 <> f:234
binder 13368:13370 <> phi:235
R13379:13400 VST.floyd.VSU <> semaxfunc_InternalInfo def
R13416:13418 VST.floyd.VSU <> phi:235 var
R13414:13414 VST.floyd.VSU <> f:234 var
R13412:13412 VST.floyd.VSU <> i:233 var
R13409:13410 VST.floyd.VSU <> ge:232 var
R13407:13407 VST.floyd.VSU <> G:231 var
R13405:13405 VST.floyd.VSU <> V:230 var
R13402:13403 VST.floyd.VSU <> cs:229 var
binder 13374:13375 <> SF:236
R13437:13439 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13424:13434 compcert.cfrontend.Clight <> fn_callconv proj
R13436:13436 VST.floyd.VSU <> f:234 var
R13440:13467 VST.veric.seplog <> callingconvention_of_funspec def
R13469:13471 VST.floyd.VSU <> phi:235 var
prf 13544:13558 <> ExternalInfo_cc
binder 13561:13565 <> Espec:237
binder 13567:13568 <> ge:238
binder 13570:13570 <> i:239
binder 13572:13573 <> ef:240
binder 13575:13577 <> tys:241
binder 13579:13580 <> rt:242
binder 13582:13583 <> cc:243
binder 13585:13587 <> phi:244
R13596:13617 VST.floyd.VSU <> semaxfunc_ExternalInfo def
R13643:13645 VST.floyd.VSU <> phi:244 var
R13640:13641 VST.floyd.VSU <> cc:243 var
R13637:13638 VST.floyd.VSU <> rt:242 var
R13633:13635 VST.floyd.VSU <> tys:241 var
R13630:13631 VST.floyd.VSU <> ef:240 var
R13628:13628 VST.floyd.VSU <> i:239 var
R13625:13626 VST.floyd.VSU <> ge:238 var
R13619:13623 VST.floyd.VSU <> Espec:237 var
binder 13591:13592 <> SF:245
R13653:13655 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13651:13652 VST.floyd.VSU <> cc:243 var
R13656:13683 VST.veric.seplog <> callingconvention_of_funspec def
R13685:13687 VST.floyd.VSU <> phi:244 var
prf 13777:13808 <> internalInfo_binary_intersection
binder 13811:13812 <> cs:246
binder 13814:13814 <> V:247
binder 13816:13816 <> G:248
binder 13818:13819 <> ge:249
binder 13821:13821 <> i:250
binder 13823:13823 <> f:251
binder 13825:13828 <> phi1:252
binder 13830:13833 <> phi2:253
binder 13835:13837 <> phi:254
R13861:13882 VST.floyd.VSU <> semaxfunc_InternalInfo def
R13898:13901 VST.floyd.VSU <> phi1:252 var
R13896:13896 VST.floyd.VSU <> f:251 var
R13894:13894 VST.floyd.VSU <> i:250 var
R13891:13892 VST.floyd.VSU <> ge:249 var
R13889:13889 VST.floyd.VSU <> G:248 var
R13887:13887 VST.floyd.VSU <> V:247 var
R13884:13885 VST.floyd.VSU <> cs:246 var
binder 13847:13857 <> F1_internal:255
R13925:13946 VST.floyd.VSU <> semaxfunc_InternalInfo def
R13962:13965 VST.floyd.VSU <> phi2:253 var
R13960:13960 VST.floyd.VSU <> f:251 var
R13958:13958 VST.floyd.VSU <> i:250 var
R13955:13956 VST.floyd.VSU <> ge:249 var
R13953:13953 VST.floyd.VSU <> G:248 var
R13951:13951 VST.floyd.VSU <> V:247 var
R13948:13949 VST.floyd.VSU <> cs:246 var
binder 13911:13921 <> F2_internal:256
R14009:14011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13980:13998 VST.veric.seplog <> binary_intersection def
R14005:14008 VST.floyd.VSU <> phi2:253 var
R14000:14003 VST.floyd.VSU <> phi1:252 var
R14012:14015 Coq.Init.Datatypes <> Some constr
R14017:14019 VST.floyd.VSU <> phi:254 var
binder 13975:13976 <> BI:257
R14026:14047 VST.floyd.VSU <> semaxfunc_InternalInfo def
R14063:14065 VST.floyd.VSU <> phi:254 var
R14061:14061 VST.floyd.VSU <> f:251 var
R14059:14059 VST.floyd.VSU <> i:250 var
R14056:14057 VST.floyd.VSU <> ge:249 var
R14054:14054 VST.floyd.VSU <> G:248 var
R14052:14052 VST.floyd.VSU <> V:247 var
R14049:14050 VST.floyd.VSU <> cs:246 var
R14269:14299 VST.veric.seplog <> callconv_of_binary_intersection thm
R14269:14299 VST.veric.seplog <> callconv_of_binary_intersection thm
R14376:14378 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14379:14381 Coq.Init.Datatypes <> fst def
R14383:14383 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14385:14386 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14391:14391 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14376:14378 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14379:14381 Coq.Init.Datatypes <> fst def
R14383:14383 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14385:14386 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14391:14391 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14454:14482 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_body_binaryintersection prfax
R14495:14495 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14497:14498 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14503:14503 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14486:14486 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14488:14488 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14493:14493 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14454:14482 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_body_binaryintersection prfax
R14495:14495 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14497:14498 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14503:14503 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14486:14486 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14488:14488 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14493:14493 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
prf 14528:14546 <> length_of_typelist2
binder 14556:14556 <> l:258
R14583:14585 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14559:14564 Coq.Lists.List <> length syndef
R14567:14579 VST.veric.mpred <> typelist2list def
R14581:14581 VST.floyd.VSU <> l:258 var
R14586:14591 Coq.Lists.List <> length syndef
R14594:14612 compcert.cfrontend.Ctypes <> typlist_of_typelist def
R14614:14614 VST.floyd.VSU <> l:258 var
prf 14688:14719 <> externalInfo_binary_intersection
binder 14722:14726 <> Espec:259
binder 14728:14729 <> ge:260
binder 14731:14731 <> i:261
binder 14733:14734 <> ef:262
binder 14736:14741 <> argsig:263
binder 14743:14748 <> retsig:264
binder 14750:14751 <> cc:265
binder 14753:14756 <> phi1:266
binder 14758:14761 <> phi2:267
binder 14763:14765 <> phi:268
R14789:14810 VST.floyd.VSU <> semaxfunc_ExternalInfo def
R14843:14846 VST.floyd.VSU <> phi1:266 var
R14840:14841 VST.floyd.VSU <> cc:265 var
R14833:14838 VST.floyd.VSU <> retsig:264 var
R14826:14831 VST.floyd.VSU <> argsig:263 var
R14823:14824 VST.floyd.VSU <> ef:262 var
R14821:14821 VST.floyd.VSU <> i:261 var
R14818:14819 VST.floyd.VSU <> ge:260 var
R14812:14816 VST.floyd.VSU <> Espec:259 var
binder 14775:14785 <> F1_external:269
R14870:14891 VST.floyd.VSU <> semaxfunc_ExternalInfo def
R14924:14927 VST.floyd.VSU <> phi2:267 var
R14921:14922 VST.floyd.VSU <> cc:265 var
R14914:14919 VST.floyd.VSU <> retsig:264 var
R14907:14912 VST.floyd.VSU <> argsig:263 var
R14904:14905 VST.floyd.VSU <> ef:262 var
R14902:14902 VST.floyd.VSU <> i:261 var
R14899:14900 VST.floyd.VSU <> ge:260 var
R14893:14897 VST.floyd.VSU <> Espec:259 var
binder 14856:14866 <> F2_external:270
R14971:14973 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14942:14960 VST.veric.seplog <> binary_intersection def
R14967:14970 VST.floyd.VSU <> phi2:267 var
R14962:14965 VST.floyd.VSU <> phi1:266 var
R14974:14977 Coq.Init.Datatypes <> Some constr
R14979:14981 VST.floyd.VSU <> phi:268 var
binder 14937:14938 <> BI:271
R14987:15008 VST.floyd.VSU <> semaxfunc_ExternalInfo def
R15041:15043 VST.floyd.VSU <> phi:268 var
R15038:15039 VST.floyd.VSU <> cc:265 var
R15031:15036 VST.floyd.VSU <> retsig:264 var
R15024:15029 VST.floyd.VSU <> argsig:263 var
R15021:15022 VST.floyd.VSU <> ef:262 var
R15019:15019 VST.floyd.VSU <> i:261 var
R15016:15017 VST.floyd.VSU <> ge:260 var
R15010:15014 VST.floyd.VSU <> Espec:259 var
R15065:15095 VST.veric.seplog <> callconv_of_binary_intersection thm
R15065:15095 VST.veric.seplog <> callconv_of_binary_intersection thm
R15679:15706 VST.veric.seplog <> binary_intersection_typesigs thm
R15679:15706 VST.veric.seplog <> binary_intersection_typesigs thm
R16363:16381 VST.veric.seplog <> binary_intersection def
R16400:16406 VST.msl.Coqlib2 <> if_true thm
R16400:16406 VST.msl.Coqlib2 <> if_true thm
R16400:16406 VST.msl.Coqlib2 <> if_true thm
R16400:16406 VST.msl.Coqlib2 <> if_true thm
R16444:16452 VST.msl.Extensionality EqdepTh inj_pair2 thm
R16444:16452 VST.msl.Extensionality EqdepTh inj_pair2 thm
R16476:16484 VST.msl.Extensionality EqdepTh inj_pair2 thm
R16476:16484 VST.msl.Extensionality EqdepTh inj_pair2 thm
R16555:16563 compcert.common.AST <> ef_inline def
R16555:16563 compcert.common.AST <> ef_inline def
R16760:16778 VST.veric.seplog <> binary_intersection def
R16797:16803 VST.msl.Coqlib2 <> if_true thm
R16797:16803 VST.msl.Coqlib2 <> if_true thm
R16797:16803 VST.msl.Coqlib2 <> if_true thm
R16797:16803 VST.msl.Coqlib2 <> if_true thm
R16841:16849 VST.msl.Extensionality EqdepTh inj_pair2 thm
R16841:16849 VST.msl.Extensionality EqdepTh inj_pair2 thm
R16873:16881 VST.msl.Extensionality EqdepTh inj_pair2 thm
R16873:16881 VST.msl.Extensionality EqdepTh inj_pair2 thm
R17045:17077 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_external_binaryintersection prfax
R17045:17077 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_external_binaryintersection prfax
R17155:17173 VST.floyd.VSU <> length_of_typelist2 thm
R17155:17173 VST.floyd.VSU <> length_of_typelist2 thm
R17155:17173 VST.floyd.VSU <> length_of_typelist2 thm
prf 17198:17213 <> find_funspec_sub
binder 17223:17228 <> specs':272
binder 17230:17234 <> specs:273
R17264:17266 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17250:17252 Coq.Lists.List <> map def
R17258:17263 VST.floyd.VSU <> specs':272 var
R17254:17256 Coq.Init.Datatypes <> fst def
R17267:17269 Coq.Lists.List <> map def
R17275:17279 VST.floyd.VSU <> specs:273 var
R17271:17273 Coq.Init.Datatypes <> fst def
binder 17244:17246 <> HE1:274
R17295:17301 Coq.Lists.List <> Forall2 ind
R17332:17334 Coq.Lists.List <> map def
R17340:17345 VST.floyd.VSU <> specs':272 var
R17336:17338 Coq.Init.Datatypes <> snd def
R17316:17318 Coq.Lists.List <> map def
R17324:17328 VST.floyd.VSU <> specs:273 var
R17320:17322 Coq.Init.Datatypes <> snd def
R17303:17313 VST.veric.SeparationLogic <> funspec_sub def
binder 17289:17291 <> HE2:275
binder 17355:17355 <> i:276
binder 17357:17360 <> phi':277
R17383:17385 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17367:17373 VST.veric.initial_world <> find_id def
R17377:17382 VST.floyd.VSU <> specs':272 var
R17375:17375 VST.floyd.VSU <> i:276 var
R17386:17389 Coq.Init.Datatypes <> Some constr
R17391:17394 VST.floyd.VSU <> phi':277 var
binder 17363:17363 <> F:278
R17401:17407 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R17421:17422 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R17414:17420 VST.veric.mpred <> funspec ind
binder 17408:17410 <> phi:279
R17449:17452 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17438:17440 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17423:17429 VST.veric.initial_world <> find_id def
R17433:17437 VST.floyd.VSU <> specs:273 var
R17431:17431 VST.floyd.VSU <> i:276 var
R17441:17444 Coq.Init.Datatypes <> Some constr
R17446:17448 VST.floyd.VSU <> phi:279 var
R17453:17463 VST.veric.SeparationLogic <> funspec_sub def
R17469:17472 VST.floyd.VSU <> phi':277 var
R17465:17467 VST.floyd.VSU <> phi:279 var
prf 18232:18246 <> subsumespec_app
binder 18248:18249 <> l1:280
binder 18251:18252 <> l2:281
binder 18254:18255 <> k1:282
binder 18257:18258 <> k2:283
binder 18260:18260 <> i:284
R18279:18289 VST.veric.expr <> subsumespec def
R18307:18313 VST.veric.initial_world <> find_id def
R18317:18318 VST.floyd.VSU <> k1:282 var
R18315:18315 VST.floyd.VSU <> i:284 var
R18292:18298 VST.veric.initial_world <> find_id def
R18302:18303 VST.floyd.VSU <> l1:280 var
R18300:18300 VST.floyd.VSU <> i:284 var
binder 18273:18276 <> L1K1:285
R18340:18350 VST.veric.expr <> subsumespec def
R18368:18374 VST.veric.initial_world <> find_id def
R18378:18379 VST.floyd.VSU <> k2:283 var
R18376:18376 VST.floyd.VSU <> i:284 var
R18353:18359 VST.veric.initial_world <> find_id def
R18363:18364 VST.floyd.VSU <> l2:281 var
R18361:18361 VST.floyd.VSU <> i:284 var
binder 18334:18337 <> L2K2:286
R18396:18408 compcert.lib.Coqlib <> list_disjoint def
R18424:18426 Coq.Lists.List <> map def
R18432:18433 VST.floyd.VSU <> k1:282 var
R18428:18430 Coq.Init.Datatypes <> fst def
R18411:18413 Coq.Lists.List <> map def
R18419:18420 VST.floyd.VSU <> l2:281 var
R18415:18417 Coq.Init.Datatypes <> fst def
binder 18394:18394 <> D:287
R18444:18454 VST.veric.expr <> subsumespec def
R18478:18484 VST.veric.initial_world <> find_id def
R18491:18492 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18489:18490 VST.floyd.VSU <> k1:282 var
R18493:18494 VST.floyd.VSU <> k2:283 var
R18486:18486 VST.floyd.VSU <> i:284 var
R18457:18463 VST.veric.initial_world <> find_id def
R18470:18471 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18468:18469 VST.floyd.VSU <> l1:280 var
R18472:18473 VST.floyd.VSU <> l2:281 var
R18465:18465 VST.floyd.VSU <> i:284 var
R18523:18538 VST.floyd.assoclists <> find_id_app_char thm
R18523:18538 VST.floyd.assoclists <> find_id_app_char thm
R18523:18538 VST.floyd.assoclists <> find_id_app_char thm
R18523:18538 VST.floyd.assoclists <> find_id_app_char thm
R18523:18538 VST.floyd.assoclists <> find_id_app_char thm
R18600:18606 VST.veric.initial_world <> find_id def
R18600:18606 VST.veric.initial_world <> find_id def
R18750:18756 VST.veric.initial_world <> find_id def
R18750:18756 VST.veric.initial_world <> find_id def
R18867:18896 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R18867:18896 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R18867:18896 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
prf 18957:18982 <> subsumespec_app_right_left
binder 18984:18984 <> l:288
binder 18986:18987 <> k1:289
binder 18989:18990 <> k2:290
binder 18992:18992 <> i:291
R19009:19019 VST.veric.expr <> subsumespec def
R19036:19042 VST.veric.initial_world <> find_id def
R19046:19047 VST.floyd.VSU <> k1:289 var
R19044:19044 VST.floyd.VSU <> i:291 var
R19022:19028 VST.veric.initial_world <> find_id def
R19032:19032 VST.floyd.VSU <> l:288 var
R19030:19030 VST.floyd.VSU <> i:291 var
binder 19005:19006 <> LK:292
R19058:19068 VST.veric.expr <> subsumespec def
R19085:19091 VST.veric.initial_world <> find_id def
R19098:19099 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19096:19097 VST.floyd.VSU <> k1:289 var
R19100:19101 VST.floyd.VSU <> k2:290 var
R19093:19093 VST.floyd.VSU <> i:291 var
R19071:19077 VST.veric.initial_world <> find_id def
R19081:19081 VST.floyd.VSU <> l:288 var
R19079:19079 VST.floyd.VSU <> i:291 var
R19130:19145 VST.floyd.assoclists <> find_id_app_char thm
R19130:19145 VST.floyd.assoclists <> find_id_app_char thm
R19130:19145 VST.floyd.assoclists <> find_id_app_char thm
R19130:19145 VST.floyd.assoclists <> find_id_app_char thm
R19182:19188 VST.veric.initial_world <> find_id def
R19182:19188 VST.veric.initial_world <> find_id def
prf 19287:19313 <> subsumespec_app_right_right
binder 19315:19315 <> l:293
binder 19317:19318 <> k1:294
binder 19320:19321 <> k2:295
binder 19323:19323 <> i:296
R19340:19350 VST.veric.expr <> subsumespec def
R19367:19373 VST.veric.initial_world <> find_id def
R19377:19378 VST.floyd.VSU <> k2:295 var
R19375:19375 VST.floyd.VSU <> i:296 var
R19353:19359 VST.veric.initial_world <> find_id def
R19363:19363 VST.floyd.VSU <> l:293 var
R19361:19361 VST.floyd.VSU <> i:296 var
binder 19336:19337 <> LK:297
R19409:19410 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19397:19403 VST.veric.initial_world <> find_id def
R19407:19408 VST.floyd.VSU <> k1:294 var
R19405:19405 VST.floyd.VSU <> i:296 var
R19411:19414 Coq.Init.Datatypes <> None constr
binder 19393:19394 <> Hi:298
R19424:19434 VST.veric.expr <> subsumespec def
R19451:19457 VST.veric.initial_world <> find_id def
R19464:19465 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19462:19463 VST.floyd.VSU <> k1:294 var
R19466:19467 VST.floyd.VSU <> k2:295 var
R19459:19459 VST.floyd.VSU <> i:296 var
R19437:19443 VST.veric.initial_world <> find_id def
R19447:19447 VST.floyd.VSU <> l:293 var
R19445:19445 VST.floyd.VSU <> i:296 var
R19496:19511 VST.floyd.assoclists <> find_id_app_char thm
R19496:19511 VST.floyd.assoclists <> find_id_app_char thm
R19496:19511 VST.floyd.assoclists <> find_id_app_char thm
R19496:19511 VST.floyd.assoclists <> find_id_app_char thm
R19552:19558 VST.veric.initial_world <> find_id def
R19552:19558 VST.veric.initial_world <> find_id def
prf 19587:19606 <> subsumespec_app_left
binder 19608:19609 <> l1:299
binder 19611:19612 <> l2:300
binder 19614:19614 <> k:301
binder 19616:19616 <> i:302
R19634:19644 VST.veric.expr <> subsumespec def
R19662:19668 VST.veric.initial_world <> find_id def
R19672:19672 VST.floyd.VSU <> k:301 var
R19670:19670 VST.floyd.VSU <> i:302 var
R19647:19653 VST.veric.initial_world <> find_id def
R19657:19658 VST.floyd.VSU <> l1:299 var
R19655:19655 VST.floyd.VSU <> i:302 var
binder 19629:19631 <> LK1:303
R19712:19715 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19716:19726 VST.veric.expr <> subsumespec def
R19744:19750 VST.veric.initial_world <> find_id def
R19754:19754 VST.floyd.VSU <> k:301 var
R19752:19752 VST.floyd.VSU <> i:302 var
R19729:19735 VST.veric.initial_world <> find_id def
R19739:19740 VST.floyd.VSU <> l2:300 var
R19737:19737 VST.floyd.VSU <> i:302 var
R19705:19707 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19693:19699 VST.veric.initial_world <> find_id def
R19703:19704 VST.floyd.VSU <> l1:299 var
R19701:19701 VST.floyd.VSU <> i:302 var
R19708:19711 Coq.Init.Datatypes <> None constr
binder 19688:19690 <> LK2:304
R19765:19775 VST.veric.expr <> subsumespec def
R19799:19805 VST.veric.initial_world <> find_id def
R19809:19809 VST.floyd.VSU <> k:301 var
R19807:19807 VST.floyd.VSU <> i:302 var
R19778:19784 VST.veric.initial_world <> find_id def
R19791:19792 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19789:19790 VST.floyd.VSU <> l1:299 var
R19793:19794 VST.floyd.VSU <> l2:300 var
R19786:19786 VST.floyd.VSU <> i:302 var
R19837:19852 VST.floyd.assoclists <> find_id_app_char thm
R19837:19852 VST.floyd.assoclists <> find_id_app_char thm
R19837:19852 VST.floyd.assoclists <> find_id_app_char thm
R19837:19852 VST.floyd.assoclists <> find_id_app_char thm
R19912:19918 VST.veric.initial_world <> find_id def
R19912:19918 VST.veric.initial_world <> find_id def
R19965:19971 Coq.Init.Logic <> eq_refl constr
R19965:19971 Coq.Init.Logic <> eq_refl constr
R19990:19996 VST.veric.initial_world <> find_id def
R19990:19996 VST.veric.initial_world <> find_id def
def 20031:20040 <> isInternal
R20046:20052 compcert.common.AST <> globdef ind
R20086:20089 compcert.cfrontend.Ctypes <> type ind
R20055:20067 compcert.cfrontend.Ctypes <> fundef ind
R20069:20083 compcert.cfrontend.Clight <> function rec
binder 20043:20044 <> fd:305
R20104:20105 VST.floyd.VSU <> fd:305 var
R20112:20115 compcert.common.AST <> Gfun constr
R20118:20125 compcert.cfrontend.Ctypes <> Internal constr
R20133:20136 Coq.Init.Datatypes <> true constr
R20145:20149 Coq.Init.Datatypes <> false constr
def 20168:20173 <> IntIDs
R20179:20192 compcert.cfrontend.Ctypes <> program rec
R20194:20201 compcert.cfrontend.Clight <> function rec
binder 20176:20176 <> p:307
R20205:20208 Coq.Init.Datatypes <> list ind
R20210:20214 compcert.common.AST <> ident def
R20222:20224 Coq.Lists.List <> map def
R20232:20237 Coq.Lists.List <> filter def
binder 20244:20244 <> x:308
R20249:20258 VST.floyd.VSU <> isInternal def
R20261:20263 Coq.Init.Datatypes <> snd def
R20265:20265 VST.floyd.VSU <> x:308 var
R20271:20279 compcert.cfrontend.Ctypes <> prog_defs proj
R20281:20281 VST.floyd.VSU <> p:307 var
R20226:20228 Coq.Init.Datatypes <> fst def
prf 20293:20303 <> IntIDs_elim
binder 20306:20306 <> i:309
binder 20308:20308 <> p:310
R20327:20330 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20331:20337 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R20339:20340 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 20338:20338 <> f:311
R20341:20342 Coq.Lists.List <> In def
R20368:20376 compcert.cfrontend.Ctypes <> prog_defs proj
R20378:20378 VST.floyd.VSU <> p:310 var
R20344:20344 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20346:20347 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20365:20365 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20345:20345 VST.floyd.VSU <> i:309 var
R20348:20351 compcert.common.AST <> Gfun constr
R20354:20361 compcert.cfrontend.Ctypes <> Internal constr
R20363:20363 VST.floyd.VSU <> f:311 var
R20312:20313 Coq.Lists.List <> In def
R20318:20323 VST.floyd.VSU <> IntIDs def
R20325:20325 VST.floyd.VSU <> p:310 var
R20315:20315 VST.floyd.VSU <> i:309 var
R20396:20401 VST.floyd.VSU <> IntIDs def
R20412:20420 compcert.cfrontend.Ctypes <> prog_defs proj
R20412:20420 compcert.cfrontend.Ctypes <> prog_defs proj
prf 20792:20799 <> IntIDs_e
binder 20802:20802 <> i:312
binder 20804:20804 <> p:313
R20823:20826 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20863:20872 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20873:20879 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R20881:20882 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 20880:20880 <> f:314
R20906:20908 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20883:20889 VST.veric.initial_world <> find_id def
R20894:20902 compcert.cfrontend.Ctypes <> prog_defs proj
R20904:20904 VST.floyd.VSU <> p:313 var
R20891:20891 VST.floyd.VSU <> i:312 var
R20909:20912 Coq.Init.Datatypes <> Some constr
R20916:20919 compcert.common.AST <> Gfun constr
R20922:20929 compcert.cfrontend.Ctypes <> Internal constr
R20931:20931 VST.floyd.VSU <> f:314 var
R20827:20838 compcert.lib.Coqlib <> list_norepet ind
R20841:20843 Coq.Lists.List <> map def
R20850:20858 compcert.cfrontend.Ctypes <> prog_defs proj
R20860:20860 VST.floyd.VSU <> p:313 var
R20845:20847 Coq.Init.Datatypes <> fst def
R20808:20809 Coq.Lists.List <> In def
R20814:20819 VST.floyd.VSU <> IntIDs def
R20821:20821 VST.floyd.VSU <> p:313 var
R20811:20811 VST.floyd.VSU <> i:312 var
R20957:20967 VST.floyd.VSU <> IntIDs_elim thm
R20957:20967 VST.floyd.VSU <> IntIDs_elim thm
R21003:21011 VST.veric.initial_world <> find_id_i thm
R21003:21011 VST.veric.initial_world <> find_id_i thm
prf 21035:21046 <> IntIDs_intro
binder 21049:21049 <> i:315
binder 21051:21051 <> p:316
binder 21053:21053 <> f:317
R21096:21099 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21100:21101 Coq.Lists.List <> In def
R21106:21111 VST.floyd.VSU <> IntIDs def
R21113:21113 VST.floyd.VSU <> p:316 var
R21103:21103 VST.floyd.VSU <> i:315 var
R21057:21058 Coq.Lists.List <> In def
R21084:21092 compcert.cfrontend.Ctypes <> prog_defs proj
R21094:21094 VST.floyd.VSU <> p:316 var
R21060:21060 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21062:21063 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21081:21081 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21061:21061 VST.floyd.VSU <> i:315 var
R21064:21067 compcert.common.AST <> Gfun constr
R21070:21077 compcert.cfrontend.Ctypes <> Internal constr
R21079:21079 VST.floyd.VSU <> f:317 var
R21131:21136 VST.floyd.VSU <> IntIDs def
R21147:21155 compcert.cfrontend.Ctypes <> prog_defs proj
R21147:21155 compcert.cfrontend.Ctypes <> prog_defs proj
prf 21437:21444 <> IntIDs_i
binder 21447:21447 <> i:318
binder 21449:21449 <> p:319
binder 21451:21451 <> f:320
R21505:21508 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21509:21510 Coq.Lists.List <> In def
R21515:21520 VST.floyd.VSU <> IntIDs def
R21522:21522 VST.floyd.VSU <> p:319 var
R21512:21512 VST.floyd.VSU <> i:318 var
R21478:21480 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21455:21461 VST.veric.initial_world <> find_id def
R21466:21474 compcert.cfrontend.Ctypes <> prog_defs proj
R21476:21476 VST.floyd.VSU <> p:319 var
R21463:21463 VST.floyd.VSU <> i:318 var
R21481:21484 Coq.Init.Datatypes <> Some constr
R21487:21490 compcert.common.AST <> Gfun constr
R21493:21500 compcert.cfrontend.Ctypes <> Internal constr
R21502:21502 VST.floyd.VSU <> f:320 var
R21547:21555 VST.veric.initial_world <> find_id_e thm
R21547:21555 VST.veric.initial_world <> find_id_e thm
R21570:21581 VST.floyd.VSU <> IntIDs_intro thm
R21570:21581 VST.floyd.VSU <> IntIDs_intro thm
prf 21609:21622 <> Fundef_of_Gfun
binder 21625:21625 <> i:321
binder 21627:21627 <> p:322
binder 21629:21629 <> f:323
R21672:21681 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21706:21708 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21682:21688 VST.veric.initial_world <> find_id def
R21693:21702 VST.veric.Clight_initial_world <> prog_funct syndef
R21704:21704 VST.floyd.VSU <> p:322 var
R21690:21690 VST.floyd.VSU <> i:321 var
R21709:21712 Coq.Init.Datatypes <> Some constr
R21714:21714 VST.floyd.VSU <> f:323 var
R21656:21658 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21633:21639 VST.veric.initial_world <> find_id def
R21644:21652 compcert.cfrontend.Ctypes <> prog_defs proj
R21654:21654 VST.floyd.VSU <> p:322 var
R21641:21641 VST.floyd.VSU <> i:321 var
R21659:21662 Coq.Init.Datatypes <> Some constr
R21665:21668 compcert.common.AST <> Gfun constr
R21670:21670 VST.floyd.VSU <> f:323 var
R21753:21761 compcert.cfrontend.Ctypes <> prog_defs proj
R21753:21761 compcert.cfrontend.Ctypes <> prog_defs proj
prf 21917:21938 <> in_map_fst_prog_funct'
binder 21941:21941 <> F:324
binder 21943:21943 <> V:325
binder 21945:21945 <> i:326
binder 21947:21947 <> l:327
R21986:21996 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21997:21998 Coq.Lists.List <> In def
R22003:22005 Coq.Lists.List <> map def
R22011:22011 VST.floyd.VSU <> l:327 var
R22007:22009 Coq.Init.Datatypes <> fst def
R22000:22000 VST.floyd.VSU <> i:326 var
R21951:21952 Coq.Lists.List <> In def
R21957:21959 Coq.Lists.List <> map def
R21967:21977 VST.veric.initial_world <> prog_funct' def
R21983:21983 VST.floyd.VSU <> l:327 var
R21981:21981 VST.floyd.VSU <> V:325 var
R21979:21979 VST.floyd.VSU <> F:324 var
R21961:21963 Coq.Init.Datatypes <> fst def
R21954:21954 VST.floyd.VSU <> i:326 var
prf 22173:22190 <> in_map_fst_fundefs
binder 22193:22193 <> i:328
binder 22195:22195 <> p:329
R22228:22231 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22232:22233 Coq.Lists.List <> In def
R22238:22240 Coq.Lists.List <> map def
R22247:22255 compcert.cfrontend.Ctypes <> prog_defs proj
R22257:22257 VST.floyd.VSU <> p:329 var
R22242:22244 Coq.Init.Datatypes <> fst def
R22235:22235 VST.floyd.VSU <> i:328 var
R22199:22200 Coq.Lists.List <> In def
R22205:22207 Coq.Lists.List <> map def
R22214:22223 VST.veric.Clight_initial_world <> prog_funct syndef
R22225:22225 VST.floyd.VSU <> p:329 var
R22209:22211 Coq.Init.Datatypes <> fst def
R22202:22202 VST.floyd.VSU <> i:328 var
R22275:22296 VST.floyd.VSU <> in_map_fst_prog_funct' thm
R22275:22296 VST.floyd.VSU <> in_map_fst_prog_funct' thm
prf 22311:22324 <> Gfun_of_Fundef
binder 22327:22327 <> i:330
binder 22329:22329 <> p:331
binder 22331:22332 <> fd:332
R22377:22380 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22417:22426 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22450:22452 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22427:22433 VST.veric.initial_world <> find_id def
R22438:22446 compcert.cfrontend.Ctypes <> prog_defs proj
R22448:22448 VST.floyd.VSU <> p:331 var
R22435:22435 VST.floyd.VSU <> i:330 var
R22453:22456 Coq.Init.Datatypes <> Some constr
R22459:22462 compcert.common.AST <> Gfun constr
R22464:22465 VST.floyd.VSU <> fd:332 var
R22381:22392 compcert.lib.Coqlib <> list_norepet ind
R22395:22397 Coq.Lists.List <> map def
R22404:22412 compcert.cfrontend.Ctypes <> prog_defs proj
R22414:22414 VST.floyd.VSU <> p:331 var
R22399:22401 Coq.Init.Datatypes <> fst def
R22367:22369 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22343:22349 VST.veric.initial_world <> find_id def
R22354:22363 VST.veric.Clight_initial_world <> prog_funct syndef
R22365:22365 VST.floyd.VSU <> p:331 var
R22351:22351 VST.floyd.VSU <> i:330 var
R22370:22373 Coq.Init.Datatypes <> Some constr
R22375:22376 VST.floyd.VSU <> fd:332 var
R22503:22511 compcert.cfrontend.Ctypes <> prog_defs proj
R22503:22511 compcert.cfrontend.Ctypes <> prog_defs proj
R22661:22668 VST.msl.Coqlib2 <> if_false thm
R22661:22668 VST.msl.Coqlib2 <> if_false thm
R22661:22668 VST.msl.Coqlib2 <> if_false thm
R22661:22668 VST.msl.Coqlib2 <> if_false thm
R22706:22723 VST.veric.initial_world <> find_id_In_map_fst thm
R22706:22723 VST.veric.initial_world <> find_id_In_map_fst thm
prf 22759:22772 <> Fundef_of_Gvar
binder 22775:22775 <> i:333
binder 22777:22777 <> p:334
binder 22779:22779 <> v:335
R22822:22832 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22869:22872 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22897:22899 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22873:22879 VST.veric.initial_world <> find_id def
R22884:22893 VST.veric.Clight_initial_world <> prog_funct syndef
R22895:22895 VST.floyd.VSU <> p:334 var
R22881:22881 VST.floyd.VSU <> i:333 var
R22900:22903 Coq.Init.Datatypes <> None constr
R22833:22844 compcert.lib.Coqlib <> list_norepet ind
R22847:22849 Coq.Lists.List <> map def
R22856:22864 compcert.cfrontend.Ctypes <> prog_defs proj
R22866:22866 VST.floyd.VSU <> p:334 var
R22851:22853 Coq.Init.Datatypes <> fst def
R22806:22808 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22783:22789 VST.veric.initial_world <> find_id def
R22794:22802 compcert.cfrontend.Ctypes <> prog_defs proj
R22804:22804 VST.floyd.VSU <> p:334 var
R22791:22791 VST.floyd.VSU <> i:333 var
R22809:22812 Coq.Init.Datatypes <> Some constr
R22815:22818 compcert.common.AST <> Gvar constr
R22820:22820 VST.floyd.VSU <> v:335 var
R22942:22950 compcert.cfrontend.Ctypes <> prog_defs proj
R22942:22950 compcert.cfrontend.Ctypes <> prog_defs proj
R23139:23154 VST.floyd.assoclists <> find_id_None_iff thm
R23139:23154 VST.floyd.assoclists <> find_id_None_iff thm
R23177:23198 VST.floyd.VSU <> in_map_fst_prog_funct' thm
R23177:23198 VST.floyd.VSU <> in_map_fst_prog_funct' thm
def 23235:23236 <> SF
binder 23239:23243 <> Espec:336
binder 23245:23246 <> cs:337
binder 23248:23248 <> V:338
binder 23250:23251 <> ge:339
binder 23254:23254 <> G:340
R23259:23263 compcert.common.AST <> ident def
binder 23257:23257 <> i:341
R23270:23282 compcert.cfrontend.Clight <> fundef def
binder 23267:23268 <> fd:342
R23290:23296 VST.veric.mpred <> funspec ind
binder 23286:23288 <> phi:343
R23310:23311 VST.floyd.VSU <> fd:342 var
R23322:23329 compcert.cfrontend.Ctypes <> Internal constr
R23336:23357 VST.floyd.VSU <> semaxfunc_InternalInfo def
R23373:23375 VST.floyd.VSU <> phi:343 var
R23369:23369 VST.floyd.VSU <> i:341 var
R23366:23367 VST.floyd.VSU <> ge:339 var
R23364:23364 VST.floyd.VSU <> G:340 var
R23362:23362 VST.floyd.VSU <> V:338 var
R23359:23360 VST.floyd.VSU <> cs:337 var
R23381:23388 compcert.cfrontend.Ctypes <> External constr
R23413:23434 VST.floyd.VSU <> semaxfunc_ExternalInfo def
R23467:23469 VST.floyd.VSU <> phi:343 var
R23445:23445 VST.floyd.VSU <> i:341 var
R23442:23443 VST.floyd.VSU <> ge:339 var
R23436:23440 VST.floyd.VSU <> Espec:336 var
def 23490:23495 <> isGvar
R23506:23508 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R23501:23505 compcert.common.AST <> ident def
R23509:23515 compcert.common.AST <> globdef ind
R23535:23538 compcert.cfrontend.Ctypes <> type ind
R23518:23523 compcert.cfrontend.Ctypes <> fundef ind
R23525:23532 compcert.cfrontend.Clight <> function rec
binder 23498:23498 <> x:345
R23563:23565 Coq.Init.Datatypes <> snd def
R23567:23567 VST.floyd.VSU <> x:345 var
R23575:23578 compcert.common.AST <> Gvar constr
R23585:23588 Coq.Init.Datatypes <> true constr
R23597:23601 Coq.Init.Datatypes <> false constr
def 23620:23626 <> Vardefs
R23632:23645 compcert.cfrontend.Clight <> program def
binder 23629:23629 <> p:346
R23651:23656 Coq.Lists.List <> filter def
R23666:23674 compcert.cfrontend.Ctypes <> prog_defs proj
R23676:23676 VST.floyd.VSU <> p:346 var
R23658:23663 VST.floyd.VSU <> isGvar def
def 24276:24285 <> globs2pred
R24293:24299 VST.veric.SeparationLogic <> globals def
binder 24288:24290 <> gv1:347
R24311:24313 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R24306:24310 compcert.common.AST <> ident def
R24314:24320 compcert.common.AST <> globdef ind
R24340:24343 compcert.cfrontend.Ctypes <> type ind
R24323:24328 compcert.cfrontend.Ctypes <> fundef ind
R24330:24337 compcert.cfrontend.Clight <> function rec
binder 24303:24303 <> x:348
R24352:24358 VST.veric.SeparationLogic <> globals def
binder 24347:24349 <> gv2:349
R24362:24366 VST.veric.mpred <> mpred def
R24379:24379 VST.floyd.VSU <> x:348 var
R24386:24386 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24388:24389 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24391:24391 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24436:24439 compcert.common.AST <> Gfun constr
R24446:24448 VST.msl.seplog <> emp meth
R24477:24480 compcert.common.AST <> Gvar constr
R24506:24509 VST.msl.seplog <> ::logic:x_'&&'_x not
R24487:24489 VST.msl.seplog <> ::logic:'!!'_x not
R24505:24505 VST.msl.seplog <> ::logic:'!!'_x not
R24490:24496 VST.floyd.val_lemmas <> headptr def
R24499:24501 VST.floyd.VSU <> gv2:349 var
R24510:24535 VST.veric.initialize <> gv_globvar2pred def
R24547:24549 VST.floyd.VSU <> gv2:349 var
R24541:24541 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24543:24543 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24545:24545 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24537:24539 VST.floyd.VSU <> gv1:347 var
def 24599:24607 <> InitGPred
R24612:24615 Coq.Init.Datatypes <> list ind
R24623:24625 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R24618:24622 compcert.common.AST <> ident def
R24626:24632 compcert.common.AST <> globdef ind
R24652:24655 compcert.cfrontend.Ctypes <> type ind
R24635:24640 compcert.cfrontend.Ctypes <> fundef ind
R24642:24649 compcert.cfrontend.Clight <> function rec
binder 24610:24610 <> V:352
R24664:24670 VST.veric.SeparationLogic <> globals def
binder 24660:24661 <> gv:353
R24674:24678 VST.veric.mpred <> mpred def
R24687:24696 Coq.Lists.List <> fold_right def
R24733:24734 VST.floyd.VSU <> gv:353 var
R24710:24712 Coq.Lists.List <> map def
R24730:24730 VST.floyd.VSU <> V:352 var
R24715:24724 VST.floyd.VSU <> globs2pred def
R24726:24727 VST.floyd.VSU <> gv:353 var
R24705:24707 VST.msl.seplog <> emp meth
R24698:24703 VST.msl.seplog <> sepcon meth
rec 25102:25110 <> Component
proj 25271:25291 <> Comp_Imports_external
proj 25437:25446 <> Comp_p_LNR
proj 25490:25512 <> Comp_ExternsImports_LNR
proj 25555:25570 <> Comp_Exports_LNR
proj 25662:25673 <> Comp_Externs
proj 25804:25813 <> Comp_G_dom
proj 25881:25890 <> Comp_G_LNR
proj 25921:25928 <> Comp_G_E
proj 25991:26006 <> Comp_G_justified
proj 26212:26225 <> Comp_G_Exports
proj 26399:26413 <> Comp_MkInitPred
R25119:25128 VST.veric.juicy_extspec <> OracleKind class
binder 25113:25117 <> Espec:354
R25134:25141 VST.veric.mpred <> varspecs def
binder 25132:25132 <> V:355
R25148:25156 VST.veric.mpred <> compspecs class
binder 25145:25146 <> cs:356
R25177:25184 VST.veric.mpred <> funspecs def
binder 25166:25166 <> E:357
binder 25168:25174 <> Imports:358
R25191:25204 compcert.cfrontend.Clight <> program def
binder 25188:25188 <> p:359
R25217:25224 VST.veric.mpred <> funspecs def
binder 25208:25214 <> Exports:360
R25239:25242 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25243:25247 VST.veric.mpred <> mpred def
R25232:25238 VST.veric.SeparationLogic <> globals def
binder 25228:25229 <> GP:361
R25254:25261 VST.veric.mpred <> funspecs def
binder 25251:25251 <> G:362
binder 25301:25301 <> i:364
R25326:25355 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25356:25362 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25372:25373 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 25363:25363 <> f:365
binder 25365:25366 <> ts:366
binder 25368:25368 <> t:367
binder 25370:25371 <> cc:368
R25397:25399 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25374:25380 VST.veric.initial_world <> find_id def
R25385:25393 compcert.cfrontend.Ctypes <> prog_defs proj
R25395:25395 VST.floyd.VSU <> p:359 var
R25382:25382 VST.floyd.VSU <> i:364 var
R25400:25403 Coq.Init.Datatypes <> Some constr
R25406:25409 compcert.common.AST <> Gfun constr
R25412:25419 compcert.cfrontend.Ctypes <> External constr
R25428:25429 VST.floyd.VSU <> cc:368 var
R25426:25426 VST.floyd.VSU <> t:367 var
R25423:25424 VST.floyd.VSU <> ts:366 var
R25421:25421 VST.floyd.VSU <> f:365 var
R25304:25305 Coq.Lists.List <> In def
R25310:25312 Coq.Lists.List <> map def
R25318:25324 VST.floyd.VSU <> Imports:358 var
R25314:25316 Coq.Init.Datatypes <> fst def
R25307:25307 VST.floyd.VSU <> i:364 var
R25449:25460 compcert.lib.Coqlib <> list_norepet ind
R25463:25465 Coq.Lists.List <> map def
R25472:25480 compcert.cfrontend.Ctypes <> prog_defs proj
R25482:25482 VST.floyd.VSU <> p:359 var
R25467:25469 Coq.Init.Datatypes <> fst def
R25515:25526 compcert.lib.Coqlib <> list_norepet ind
R25529:25531 Coq.Lists.List <> map def
R25539:25540 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25538:25538 VST.floyd.VSU <> E:357 var
R25541:25547 VST.floyd.VSU <> Imports:358 var
R25533:25535 Coq.Init.Datatypes <> fst def
R25573:25584 compcert.lib.Coqlib <> list_norepet ind
R25587:25589 Coq.Lists.List <> map def
R25595:25601 VST.floyd.VSU <> Exports:360 var
R25591:25593 Coq.Init.Datatypes <> fst def
binder 25683:25683 <> i:373
R25702:25722 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25723:25729 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25739:25740 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 25730:25730 <> f:374
binder 25732:25733 <> ts:375
binder 25735:25735 <> t:376
binder 25737:25738 <> cc:377
R25764:25766 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25741:25747 VST.veric.initial_world <> find_id def
R25752:25760 compcert.cfrontend.Ctypes <> prog_defs proj
R25762:25762 VST.floyd.VSU <> p:359 var
R25749:25749 VST.floyd.VSU <> i:373 var
R25767:25770 Coq.Init.Datatypes <> Some constr
R25773:25776 compcert.common.AST <> Gfun constr
R25779:25786 compcert.cfrontend.Ctypes <> External constr
R25795:25796 VST.floyd.VSU <> cc:377 var
R25793:25793 VST.floyd.VSU <> t:376 var
R25790:25791 VST.floyd.VSU <> ts:375 var
R25788:25788 VST.floyd.VSU <> f:374 var
R25686:25687 Coq.Lists.List <> In def
R25692:25694 Coq.Lists.List <> map def
R25700:25700 VST.floyd.VSU <> E:357 var
R25696:25698 Coq.Init.Datatypes <> fst def
R25689:25689 VST.floyd.VSU <> i:373 var
binder 25823:25823 <> i:379
R25856:25860 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R25826:25827 Coq.Lists.List <> In def
R25840:25844 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25854:25854 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R25832:25837 VST.floyd.VSU <> IntIDs def
R25839:25839 VST.floyd.VSU <> p:359 var
R25845:25847 Coq.Lists.List <> map def
R25853:25853 VST.floyd.VSU <> E:357 var
R25849:25851 Coq.Init.Datatypes <> fst def
R25829:25829 VST.floyd.VSU <> i:379 var
R25861:25862 Coq.Lists.List <> In def
R25867:25869 Coq.Lists.List <> map def
R25875:25875 VST.floyd.VSU <> G:362 var
R25871:25873 Coq.Init.Datatypes <> fst def
R25864:25864 VST.floyd.VSU <> i:379 var
R25893:25904 compcert.lib.Coqlib <> list_norepet ind
R25907:25909 Coq.Lists.List <> map def
R25915:25915 VST.floyd.VSU <> G:362 var
R25911:25913 Coq.Init.Datatypes <> fst def
binder 25938:25938 <> i:382
R25957:25960 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25972:25974 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25961:25967 VST.veric.initial_world <> find_id def
R25971:25971 VST.floyd.VSU <> E:357 var
R25969:25969 VST.floyd.VSU <> i:382 var
R25975:25981 VST.veric.initial_world <> find_id def
R25985:25985 VST.floyd.VSU <> G:362 var
R25983:25983 VST.floyd.VSU <> i:382 var
R25941:25942 Coq.Lists.List <> In def
R25947:25949 Coq.Lists.List <> map def
R25955:25955 VST.floyd.VSU <> E:357 var
R25951:25953 Coq.Init.Datatypes <> fst def
R25944:25944 VST.floyd.VSU <> i:382 var
binder 26016:26016 <> i:384
binder 26018:26020 <> phi:385
binder 26022:26023 <> fd:386
R26080:26103 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26126:26149 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26151:26152 VST.floyd.VSU <> SF def
R26204:26206 VST.floyd.VSU <> phi:385 var
R26201:26202 VST.floyd.VSU <> fd:386 var
R26199:26199 VST.floyd.VSU <> i:384 var
R26192:26195 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R26185:26191 VST.floyd.VSU <> Imports:358 var
R26196:26196 VST.floyd.VSU <> G:362 var
R26166:26179 compcert.common.Globalenvs Genv globalenv def
R26181:26181 VST.floyd.VSU <> p:359 var
R26163:26163 VST.floyd.VSU <> V:355 var
R26160:26161 VST.floyd.VSU <> cs:356 var
R26154:26158 VST.floyd.VSU <> Espec:354 var
R26115:26117 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26104:26110 VST.veric.initial_world <> find_id def
R26114:26114 VST.floyd.VSU <> G:362 var
R26112:26112 VST.floyd.VSU <> i:384 var
R26118:26121 Coq.Init.Datatypes <> Some constr
R26123:26125 VST.floyd.VSU <> phi:385 var
R26070:26072 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26046:26052 VST.veric.initial_world <> find_id def
R26057:26066 VST.veric.Clight_initial_world <> prog_funct syndef
R26068:26068 VST.floyd.VSU <> p:359 var
R26054:26054 VST.floyd.VSU <> i:384 var
R26073:26076 Coq.Init.Datatypes <> Some constr
R26078:26079 VST.floyd.VSU <> fd:386 var
binder 26235:26235 <> i:388
binder 26237:26239 <> phi:389
R26262:26264 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26245:26251 VST.veric.initial_world <> find_id def
R26255:26261 VST.floyd.VSU <> Exports:360 var
R26253:26253 VST.floyd.VSU <> i:388 var
R26265:26268 Coq.Init.Datatypes <> Some constr
R26270:26272 VST.floyd.VSU <> phi:389 var
binder 26242:26242 <> E:390
R26295:26301 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R26306:26307 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 26302:26305 <> phi':391
R26331:26334 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R26319:26321 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26308:26314 VST.veric.initial_world <> find_id def
R26318:26318 VST.floyd.VSU <> G:362 var
R26316:26316 VST.floyd.VSU <> i:388 var
R26322:26325 Coq.Init.Datatypes <> Some constr
R26327:26330 VST.floyd.VSU <> phi':391 var
R26335:26345 VST.veric.SeparationLogic <> funspec_sub def
R26352:26354 VST.floyd.VSU <> phi:389 var
R26347:26350 VST.floyd.VSU <> phi':391 var
binder 26423:26424 <> gv:393
R26451:26472 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R26427:26435 VST.floyd.VSU <> InitGPred def
R26449:26450 VST.floyd.VSU <> gv:393 var
R26438:26444 VST.floyd.VSU <> Vardefs def
R26446:26446 VST.floyd.VSU <> p:359 var
R26474:26475 VST.floyd.VSU <> GP:361 var
R26477:26478 VST.floyd.VSU <> gv:393 var
def 26511:26516 <> Comp_G
binder 26519:26523 <> Espec:395
binder 26525:26525 <> V:396
binder 26527:26528 <> cs:397
binder 26530:26530 <> E:398
binder 26532:26538 <> Imports:399
binder 26540:26540 <> p:400
binder 26542:26548 <> Exports:401
binder 26550:26551 <> GP:402
binder 26553:26553 <> G:403
R26560:26568 VST.floyd.VSU <> Component rec
R26604:26604 VST.floyd.VSU <> G:403 var
R26601:26602 VST.floyd.VSU <> GP:402 var
R26593:26599 VST.floyd.VSU <> Exports:401 var
R26591:26591 VST.floyd.VSU <> p:400 var
R26583:26589 VST.floyd.VSU <> Imports:399 var
R26581:26581 VST.floyd.VSU <> E:398 var
R26578:26579 VST.floyd.VSU <> cs:397 var
R26576:26576 VST.floyd.VSU <> V:396 var
R26570:26574 VST.floyd.VSU <> Espec:395 var
binder 26557:26557 <> c:404
R26609:26609 VST.floyd.VSU <> G:403 var
def 26624:26626 <> VSU
binder 26629:26633 <> Espec:405
binder 26635:26635 <> V:406
binder 26637:26638 <> cs:407
binder 26641:26641 <> E:408
binder 26643:26649 <> Imports:409
binder 26651:26651 <> p:410
binder 26653:26659 <> Exports:411
binder 26661:26662 <> GP:412
R26668:26671 Coq.Init.Specif <> sigT ind
binder 26678:26678 <> G:413
R26684:26692 VST.floyd.VSU <> Component rec
R26728:26728 VST.floyd.VSU <> G:413 var
R26725:26726 VST.floyd.VSU <> GP:412 var
R26717:26723 VST.floyd.VSU <> Exports:411 var
R26715:26715 VST.floyd.VSU <> p:410 var
R26707:26713 VST.floyd.VSU <> Imports:409 var
R26705:26705 VST.floyd.VSU <> E:408 var
R26702:26703 VST.floyd.VSU <> cs:407 var
R26700:26700 VST.floyd.VSU <> V:406 var
R26694:26698 VST.floyd.VSU <> Espec:405 var
R26743:26763 VST.floyd.VSU <> Comp_Imports_external proj
R26743:26763 VST.floyd.VSU <> Comp_Imports_external proj
R26816:26825 VST.floyd.VSU <> Comp_p_LNR proj
R26816:26825 VST.floyd.VSU <> Comp_p_LNR proj
R26878:26900 VST.floyd.VSU <> Comp_ExternsImports_LNR proj
R26878:26900 VST.floyd.VSU <> Comp_ExternsImports_LNR proj
R26953:26968 VST.floyd.VSU <> Comp_Exports_LNR proj
R26953:26968 VST.floyd.VSU <> Comp_Exports_LNR proj
R27021:27032 VST.floyd.VSU <> Comp_Externs proj
R27021:27032 VST.floyd.VSU <> Comp_Externs proj
R27142:27151 VST.floyd.VSU <> Comp_G_dom proj
R27142:27151 VST.floyd.VSU <> Comp_G_dom proj
R27204:27213 VST.floyd.VSU <> Comp_G_LNR proj
R27204:27213 VST.floyd.VSU <> Comp_G_LNR proj
R27266:27281 VST.floyd.VSU <> Comp_G_justified proj
R27266:27281 VST.floyd.VSU <> Comp_G_justified proj
R27334:27347 VST.floyd.VSU <> Comp_G_Exports proj
R27334:27347 VST.floyd.VSU <> Comp_G_Exports proj
R27400:27407 VST.floyd.VSU <> Comp_G_E proj
R27400:27407 VST.floyd.VSU <> Comp_G_E proj
R27529:27543 VST.floyd.VSU <> Comp_MkInitPred proj
R27529:27543 VST.floyd.VSU <> Comp_MkInitPred proj
sec 27595:27603 <> Component
var 27615:27619 Component Espec
R27622:27631 VST.veric.juicy_extspec <> OracleKind class
var 27643:27643 Component V
R27646:27653 VST.veric.mpred <> varspecs def
var 27665:27666 Component cs
R27669:27677 VST.veric.mpred <> compspecs class
var 27689:27689 Component E
var 27691:27697 Component Imports
R27700:27707 VST.veric.mpred <> funspecs def
var 27719:27719 Component p
R27722:27735 compcert.cfrontend.Clight <> program def
var 27747:27753 Component Exports
R27756:27763 VST.veric.mpred <> funspecs def
var 27775:27776 Component GP
R27786:27789 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27790:27794 VST.veric.mpred <> mpred def
R27779:27785 VST.veric.SeparationLogic <> globals def
var 27806:27806 Component G
R27809:27816 VST.veric.mpred <> funspecs def
var 27829:27829 Component c
R27833:27841 VST.floyd.VSU <> Component rec
R27877:27877 VST.floyd.VSU <> Component.G var
R27874:27875 VST.floyd.VSU <> Component.GP var
R27866:27872 VST.floyd.VSU <> Component.Exports var
R27864:27864 VST.floyd.VSU <> Component.p var
R27856:27862 VST.floyd.VSU <> Component.Imports var
R27854:27854 VST.floyd.VSU <> Component.E var
R27851:27852 VST.floyd.VSU <> Component.cs var
R27849:27849 VST.floyd.VSU <> Component.V var
R27843:27847 VST.floyd.VSU <> Component.Espec var
prf 27887:27902 <> Comp_Imports_LNR
R27905:27916 compcert.lib.Coqlib <> list_norepet ind
R27919:27921 Coq.Lists.List <> map def
R27927:27933 VST.floyd.VSU <> Component.Imports var
R27923:27925 Coq.Init.Datatypes <> fst def
R27958:27980 VST.floyd.VSU <> Comp_ExternsImports_LNR proj
R27982:27982 VST.floyd.VSU <> Component.c var
R27958:27980 VST.floyd.VSU <> Comp_ExternsImports_LNR proj
R27982:27982 VST.floyd.VSU <> Component.c var
R27994:28000 Coq.Lists.List <> map_app thm
R27994:28000 Coq.Lists.List <> map_app thm
R27994:28000 Coq.Lists.List <> map_app thm
R28011:28035 compcert.lib.Coqlib <> list_norepet_append_right thm
R28011:28035 compcert.lib.Coqlib <> list_norepet_append_right thm
prf 28051:28066 <> Comp_Externs_LNR
R28069:28080 compcert.lib.Coqlib <> list_norepet ind
R28083:28085 Coq.Lists.List <> map def
R28091:28091 VST.floyd.VSU <> Component.E var
R28087:28089 Coq.Init.Datatypes <> fst def
R28116:28138 VST.floyd.VSU <> Comp_ExternsImports_LNR proj
R28140:28140 VST.floyd.VSU <> Component.c var
R28116:28138 VST.floyd.VSU <> Comp_ExternsImports_LNR proj
R28140:28140 VST.floyd.VSU <> Component.c var
R28152:28158 Coq.Lists.List <> map_app thm
R28152:28158 Coq.Lists.List <> map_app thm
R28152:28158 Coq.Lists.List <> map_app thm
R28169:28192 compcert.lib.Coqlib <> list_norepet_append_left thm
R28169:28192 compcert.lib.Coqlib <> list_norepet_append_left thm
prf 28207:28222 <> Comp_E_in_G_find
binder 28232:28232 <> i:424
binder 28234:28236 <> phi:425
R28261:28264 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28285:28287 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28265:28271 VST.veric.initial_world <> find_id def
R28276:28281 VST.floyd.VSU <> Comp_G def
R28283:28283 VST.floyd.VSU <> Component.c var
R28273:28273 VST.floyd.VSU <> i:424 var
R28288:28291 Coq.Init.Datatypes <> Some constr
R28293:28295 VST.floyd.VSU <> phi:425 var
R28250:28252 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28239:28245 VST.veric.initial_world <> find_id def
R28249:28249 VST.floyd.VSU <> Component.E var
R28247:28247 VST.floyd.VSU <> i:424 var
R28253:28256 Coq.Init.Datatypes <> Some constr
R28258:28260 VST.floyd.VSU <> phi:425 var
R28325:28332 VST.floyd.VSU <> Comp_G_E proj
R28334:28334 VST.floyd.VSU <> Component.c var
R28325:28332 VST.floyd.VSU <> Comp_G_E proj
R28334:28334 VST.floyd.VSU <> Component.c var
R28325:28332 VST.floyd.VSU <> Comp_G_E proj
R28334:28334 VST.floyd.VSU <> Component.c var
R28325:28332 VST.floyd.VSU <> Comp_G_E proj
R28334:28334 VST.floyd.VSU <> Component.c var
R28353:28370 VST.veric.initial_world <> find_id_In_map_fst thm
R28353:28370 VST.veric.initial_world <> find_id_In_map_fst thm
prf 28399:28409 <> Comp_E_in_G
binder 28420:28420 <> i:426
R28440:28443 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28444:28445 Coq.Lists.List <> In def
R28450:28452 Coq.Lists.List <> map def
R28459:28464 VST.floyd.VSU <> Comp_G def
R28466:28466 VST.floyd.VSU <> Component.c var
R28454:28456 Coq.Init.Datatypes <> fst def
R28447:28447 VST.floyd.VSU <> i:426 var
R28424:28425 Coq.Lists.List <> In def
R28430:28432 Coq.Lists.List <> map def
R28438:28438 VST.floyd.VSU <> Component.E var
R28434:28436 Coq.Init.Datatypes <> fst def
R28427:28427 VST.floyd.VSU <> i:426 var
R28492:28509 VST.floyd.assoclists <> In_map_fst_find_id thm
R28492:28509 VST.floyd.assoclists <> In_map_fst_find_id thm
R28537:28552 VST.floyd.VSU <> Comp_E_in_G_find thm
R28537:28552 VST.floyd.VSU <> Comp_E_in_G_find thm
R28566:28583 VST.veric.initial_world <> find_id_In_map_fst thm
R28566:28583 VST.veric.initial_world <> find_id_In_map_fst thm
R28606:28621 VST.floyd.VSU <> Comp_Externs_LNR thm
R28606:28621 VST.floyd.VSU <> Comp_Externs_LNR thm
prf 28637:28652 <> Comp_LNR_Interns
R28655:28666 compcert.lib.Coqlib <> list_norepet ind
R28669:28674 VST.floyd.VSU <> IntIDs def
R28676:28676 VST.floyd.VSU <> Component.p var
R28696:28710 VST.veric.coqlib4 <> sublist_norepet thm
R28696:28710 VST.veric.coqlib4 <> sublist_norepet thm
R28723:28732 VST.floyd.VSU <> Comp_p_LNR proj
R28734:28734 VST.floyd.VSU <> Component.c var
R28723:28732 VST.floyd.VSU <> Comp_p_LNR proj
R28734:28734 VST.floyd.VSU <> Component.c var
R28745:28750 VST.floyd.VSU <> IntIDs def
R28765:28773 compcert.cfrontend.Ctypes <> prog_defs proj
R28775:28775 VST.floyd.VSU <> Component.p var
R28765:28773 compcert.cfrontend.Ctypes <> prog_defs proj
R28775:28775 VST.floyd.VSU <> Component.p var
prf 28921:28941 <> LNR_Internals_Externs
R28944:28955 compcert.lib.Coqlib <> list_norepet ind
R28966:28969 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28958:28963 VST.floyd.VSU <> IntIDs def
R28965:28965 VST.floyd.VSU <> Component.p var
R28970:28972 Coq.Lists.List <> map def
R28978:28978 VST.floyd.VSU <> Component.E var
R28974:28976 Coq.Init.Datatypes <> fst def
R29003:29012 VST.floyd.VSU <> Comp_p_LNR proj
R29014:29014 VST.floyd.VSU <> Component.c var
R29029:29044 VST.floyd.VSU <> Comp_Externs_LNR thm
R29058:29073 VST.floyd.VSU <> Comp_LNR_Interns thm
R29003:29012 VST.floyd.VSU <> Comp_p_LNR proj
R29014:29014 VST.floyd.VSU <> Component.c var
R29029:29044 VST.floyd.VSU <> Comp_Externs_LNR thm
R29058:29073 VST.floyd.VSU <> Comp_LNR_Interns thm
R29092:29107 compcert.lib.Coqlib <> list_norepet_app thm
R29092:29107 compcert.lib.Coqlib <> list_norepet_app thm
R29160:29171 VST.floyd.VSU <> Comp_Externs proj
R29173:29173 VST.floyd.VSU <> Component.c var
R29160:29171 VST.floyd.VSU <> Comp_Externs proj
R29173:29173 VST.floyd.VSU <> Component.c var
R29231:29238 VST.floyd.VSU <> IntIDs_e thm
R29231:29238 VST.floyd.VSU <> IntIDs_e thm
prf 29296:29308 <> Comp_G_intern
binder 29311:29311 <> i:427
R29319:29320 Coq.Lists.List <> In def
R29325:29327 Coq.Lists.List <> map def
R29334:29339 VST.floyd.VSU <> Comp_G def
R29341:29341 VST.floyd.VSU <> Component.c var
R29329:29331 Coq.Init.Datatypes <> fst def
R29322:29322 VST.floyd.VSU <> i:427 var
binder 29315:29316 <> Hi:428
R29353:29354 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R29373:29386 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R29447:29448 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R29355:29356 Coq.Init.Logic <> ::type_scope:'~'_x not
R29357:29358 Coq.Lists.List <> In def
R29363:29365 Coq.Lists.List <> map def
R29371:29371 VST.floyd.VSU <> Component.E var
R29367:29369 Coq.Init.Datatypes <> fst def
R29360:29360 VST.floyd.VSU <> i:427 var
R29387:29393 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R29395:29396 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 29394:29394 <> f:429
R29420:29422 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29397:29403 VST.veric.initial_world <> find_id def
R29408:29416 compcert.cfrontend.Ctypes <> prog_defs proj
R29418:29418 VST.floyd.VSU <> Component.p var
R29405:29405 VST.floyd.VSU <> i:427 var
R29423:29426 Coq.Init.Datatypes <> Some constr
R29429:29432 compcert.common.AST <> Gfun constr
R29435:29442 compcert.cfrontend.Ctypes <> Internal constr
R29444:29444 VST.floyd.VSU <> f:429 var
R29467:29481 compcert.lib.Coqlib <> list_in_map_inv thm
R29467:29481 compcert.lib.Coqlib <> list_in_map_inv thm
R29554:29563 VST.veric.initial_world <> in_map_fst thm
R29554:29563 VST.veric.initial_world <> in_map_fst thm
R29584:29593 VST.floyd.VSU <> Comp_G_dom proj
R29595:29595 VST.floyd.VSU <> Component.c var
R29584:29593 VST.floyd.VSU <> Comp_G_dom proj
R29595:29595 VST.floyd.VSU <> Component.c var
R29584:29593 VST.floyd.VSU <> Comp_G_dom proj
R29595:29595 VST.floyd.VSU <> Component.c var
R29613:29621 Coq.Lists.List <> in_app_or thm
R29613:29621 Coq.Lists.List <> in_app_or thm
R29670:29677 VST.floyd.VSU <> IntIDs_e thm
R29706:29706 VST.floyd.VSU <> Component.c var
R29670:29677 VST.floyd.VSU <> IntIDs_e thm
R29706:29706 VST.floyd.VSU <> Component.c var
R29782:29802 VST.floyd.VSU <> LNR_Internals_Externs thm
R29782:29802 VST.floyd.VSU <> LNR_Internals_Externs thm
R29817:29832 compcert.lib.Coqlib <> list_norepet_app thm
R29817:29832 compcert.lib.Coqlib <> list_norepet_app thm
R29817:29832 compcert.lib.Coqlib <> list_norepet_app thm
R29941:29952 VST.floyd.VSU <> Comp_Externs proj
R29954:29954 VST.floyd.VSU <> Component.c var
R29941:29952 VST.floyd.VSU <> Comp_Externs proj
R29954:29954 VST.floyd.VSU <> Component.c var
prf 30020:30032 <> Comp_G_extern
binder 30035:30035 <> i:430
R30043:30044 Coq.Lists.List <> In def
R30049:30051 Coq.Lists.List <> map def
R30058:30063 VST.floyd.VSU <> Comp_G def
R30065:30065 VST.floyd.VSU <> Component.c var
R30053:30055 Coq.Init.Datatypes <> fst def
R30046:30046 VST.floyd.VSU <> i:430 var
binder 30039:30040 <> Hi:431
R30077:30077 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R30094:30105 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R30078:30079 Coq.Lists.List <> In def
R30084:30086 Coq.Lists.List <> map def
R30092:30092 VST.floyd.VSU <> Component.E var
R30088:30090 Coq.Init.Datatypes <> fst def
R30081:30081 VST.floyd.VSU <> i:430 var
R30106:30112 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R30125:30126 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 30113:30114 <> ef:432
binder 30116:30118 <> tys:433
binder 30120:30121 <> rt:434
binder 30123:30124 <> cc:435
R30150:30152 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30127:30133 VST.veric.initial_world <> find_id def
R30138:30146 compcert.cfrontend.Ctypes <> prog_defs proj
R30148:30148 VST.floyd.VSU <> Component.p var
R30135:30135 VST.floyd.VSU <> i:430 var
R30153:30156 Coq.Init.Datatypes <> Some constr
R30159:30162 compcert.common.AST <> Gfun constr
R30165:30172 compcert.cfrontend.Ctypes <> External constr
R30184:30185 VST.floyd.VSU <> cc:435 var
R30181:30182 VST.floyd.VSU <> rt:434 var
R30177:30179 VST.floyd.VSU <> tys:433 var
R30174:30175 VST.floyd.VSU <> ef:432 var
R30206:30220 compcert.lib.Coqlib <> list_in_map_inv thm
R30206:30220 compcert.lib.Coqlib <> list_in_map_inv thm
R30293:30302 VST.veric.initial_world <> in_map_fst thm
R30293:30302 VST.veric.initial_world <> in_map_fst thm
R30323:30332 VST.floyd.VSU <> Comp_G_dom proj
R30334:30334 VST.floyd.VSU <> Component.c var
R30323:30332 VST.floyd.VSU <> Comp_G_dom proj
R30334:30334 VST.floyd.VSU <> Component.c var
R30323:30332 VST.floyd.VSU <> Comp_G_dom proj
R30334:30334 VST.floyd.VSU <> Component.c var
R30352:30360 Coq.Lists.List <> in_app_or thm
R30352:30360 Coq.Lists.List <> in_app_or thm
R30414:30434 VST.floyd.VSU <> LNR_Internals_Externs thm
R30414:30434 VST.floyd.VSU <> LNR_Internals_Externs thm
R30449:30464 compcert.lib.Coqlib <> list_norepet_app thm
R30449:30464 compcert.lib.Coqlib <> list_norepet_app thm
R30449:30464 compcert.lib.Coqlib <> list_norepet_app thm
R30518:30525 VST.floyd.VSU <> IntIDs_e thm
R30553:30553 VST.floyd.VSU <> Component.c var
R30518:30525 VST.floyd.VSU <> IntIDs_e thm
R30553:30553 VST.floyd.VSU <> Component.c var
R30643:30643 VST.floyd.VSU <> Component.c var
R30643:30643 VST.floyd.VSU <> Component.c var
prf 30672:30682 <> Comp_G_elim
binder 30685:30685 <> i:436
R30693:30694 Coq.Lists.List <> In def
R30699:30701 Coq.Lists.List <> map def
R30708:30713 VST.floyd.VSU <> Comp_G def
R30715:30715 VST.floyd.VSU <> Component.c var
R30703:30705 Coq.Init.Datatypes <> fst def
R30696:30696 VST.floyd.VSU <> i:436 var
binder 30689:30690 <> Hi:437
R30727:30727 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R30830:30839 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R30942:30942 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R30744:30747 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R30728:30729 Coq.Lists.List <> In def
R30734:30736 Coq.Lists.List <> map def
R30742:30742 VST.floyd.VSU <> Component.E var
R30738:30740 Coq.Init.Datatypes <> fst def
R30731:30731 VST.floyd.VSU <> i:436 var
R30748:30754 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R30767:30768 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 30755:30756 <> ef:438
binder 30758:30760 <> tys:439
binder 30762:30763 <> rt:440
binder 30765:30766 <> cc:441
R30792:30794 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30769:30775 VST.veric.initial_world <> find_id def
R30780:30788 compcert.cfrontend.Ctypes <> prog_defs proj
R30790:30790 VST.floyd.VSU <> Component.p var
R30777:30777 VST.floyd.VSU <> i:436 var
R30795:30798 Coq.Init.Datatypes <> Some constr
R30801:30804 compcert.common.AST <> Gfun constr
R30807:30814 compcert.cfrontend.Ctypes <> External constr
R30826:30827 VST.floyd.VSU <> cc:441 var
R30823:30824 VST.floyd.VSU <> rt:440 var
R30819:30821 VST.floyd.VSU <> tys:439 var
R30816:30817 VST.floyd.VSU <> ef:438 var
R30840:30840 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R30858:30862 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R30841:30841 Coq.Init.Logic <> ::type_scope:'~'_x not
R30842:30843 Coq.Lists.List <> In def
R30848:30850 Coq.Lists.List <> map def
R30856:30856 VST.floyd.VSU <> Component.E var
R30852:30854 Coq.Init.Datatypes <> fst def
R30845:30845 VST.floyd.VSU <> i:436 var
R30878:30881 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R30863:30864 Coq.Lists.List <> In def
R30869:30874 VST.floyd.VSU <> IntIDs def
R30876:30876 VST.floyd.VSU <> Component.p var
R30866:30866 VST.floyd.VSU <> i:436 var
R30882:30888 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R30890:30891 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 30889:30889 <> f:442
R30915:30917 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30892:30898 VST.veric.initial_world <> find_id def
R30903:30911 compcert.cfrontend.Ctypes <> prog_defs proj
R30913:30913 VST.floyd.VSU <> Component.p var
R30900:30900 VST.floyd.VSU <> i:436 var
R30918:30921 Coq.Init.Datatypes <> Some constr
R30924:30927 compcert.common.AST <> Gfun constr
R30930:30937 compcert.cfrontend.Ctypes <> Internal constr
R30939:30939 VST.floyd.VSU <> f:442 var
R30964:30969 Coq.Lists.List <> in_dec thm
R30983:30985 Coq.Lists.List <> map def
R30991:30991 VST.floyd.VSU <> Component.E var
R30987:30989 Coq.Init.Datatypes <> fst def
R30971:30978 compcert.common.AST <> ident_eq def
R30964:30969 Coq.Lists.List <> in_dec thm
R30983:30985 Coq.Lists.List <> map def
R30991:30991 VST.floyd.VSU <> Component.E var
R30987:30989 Coq.Init.Datatypes <> fst def
R30971:30978 compcert.common.AST <> ident_eq def
R31027:31039 VST.floyd.VSU <> Comp_G_extern thm
R31027:31039 VST.floyd.VSU <> Comp_G_extern thm
R31087:31099 VST.floyd.VSU <> Comp_G_intern thm
R31087:31099 VST.floyd.VSU <> Comp_G_intern thm
R31147:31154 VST.floyd.VSU <> IntIDs_i thm
R31147:31154 VST.floyd.VSU <> IntIDs_i thm
prf 31183:31199 <> Comp_G_in_Fundefs
binder 31202:31202 <> i:443
R31210:31211 Coq.Lists.List <> In def
R31216:31218 Coq.Lists.List <> map def
R31225:31230 VST.floyd.VSU <> Comp_G def
R31232:31232 VST.floyd.VSU <> Component.c var
R31220:31222 Coq.Init.Datatypes <> fst def
R31213:31213 VST.floyd.VSU <> i:443 var
binder 31206:31207 <> Hi:444
R31244:31250 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R31253:31254 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 31251:31252 <> fd:445
R31279:31281 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31255:31261 VST.veric.initial_world <> find_id def
R31266:31275 VST.veric.Clight_initial_world <> prog_funct syndef
R31277:31277 VST.floyd.VSU <> Component.p var
R31263:31263 VST.floyd.VSU <> i:443 var
R31282:31285 Coq.Init.Datatypes <> Some constr
R31287:31288 VST.floyd.VSU <> fd:445 var
R31311:31316 Coq.Lists.List <> in_dec thm
R31331:31333 Coq.Lists.List <> map def
R31339:31339 VST.floyd.VSU <> Component.E var
R31335:31337 Coq.Init.Datatypes <> fst def
R31318:31325 compcert.common.AST <> ident_eq def
R31311:31316 Coq.Lists.List <> in_dec thm
R31331:31333 Coq.Lists.List <> map def
R31339:31339 VST.floyd.VSU <> Component.E var
R31335:31337 Coq.Init.Datatypes <> fst def
R31318:31325 compcert.common.AST <> ident_eq def
R31353:31365 VST.floyd.VSU <> Comp_G_extern thm
R31353:31365 VST.floyd.VSU <> Comp_G_extern thm
R31427:31440 VST.floyd.VSU <> Fundef_of_Gfun thm
R31427:31440 VST.floyd.VSU <> Fundef_of_Gfun thm
R31494:31506 VST.floyd.VSU <> Comp_G_intern thm
R31494:31506 VST.floyd.VSU <> Comp_G_intern thm
R31548:31561 VST.floyd.VSU <> Fundef_of_Gfun thm
R31548:31561 VST.floyd.VSU <> Fundef_of_Gfun thm
prf 31616:31634 <> Comp_G_in_progdefs'
binder 31637:31637 <> i:446
binder 31639:31641 <> phi:447
R31669:31671 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31649:31655 VST.veric.initial_world <> find_id def
R31660:31665 VST.floyd.VSU <> Comp_G def
R31667:31667 VST.floyd.VSU <> Component.c var
R31657:31657 VST.floyd.VSU <> i:446 var
R31672:31675 Coq.Init.Datatypes <> Some constr
R31677:31679 VST.floyd.VSU <> phi:447 var
binder 31645:31646 <> Hi:448
R31689:31695 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R31698:31699 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 31696:31697 <> fd:449
R31723:31725 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31700:31706 VST.veric.initial_world <> find_id def
R31711:31719 compcert.cfrontend.Ctypes <> prog_defs proj
R31721:31721 VST.floyd.VSU <> Component.p var
R31708:31708 VST.floyd.VSU <> i:446 var
R31726:31729 Coq.Init.Datatypes <> Some constr
R31732:31735 compcert.common.AST <> Gfun constr
R31737:31738 VST.floyd.VSU <> fd:449 var
R31755:31772 VST.veric.initial_world <> find_id_In_map_fst thm
R31755:31772 VST.veric.initial_world <> find_id_In_map_fst thm
R31790:31806 VST.floyd.VSU <> Comp_G_in_Fundefs thm
R31790:31806 VST.floyd.VSU <> Comp_G_in_Fundefs thm
R31836:31849 VST.floyd.VSU <> Gfun_of_Fundef thm
R31836:31849 VST.floyd.VSU <> Gfun_of_Fundef thm
R31883:31883 VST.floyd.VSU <> Component.c var
R31883:31883 VST.floyd.VSU <> Component.c var
prf 31898:31915 <> Comp_G_in_Fundefs'
binder 31918:31918 <> i:450
binder 31920:31922 <> phi:451
R31950:31952 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31930:31936 VST.veric.initial_world <> find_id def
R31941:31946 VST.floyd.VSU <> Comp_G def
R31948:31948 VST.floyd.VSU <> Component.c var
R31938:31938 VST.floyd.VSU <> i:450 var
R31953:31956 Coq.Init.Datatypes <> Some constr
R31958:31960 VST.floyd.VSU <> phi:451 var
binder 31926:31927 <> Hi:452
R31970:31976 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R31979:31980 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 31977:31978 <> fd:453
R32005:32007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31981:31987 VST.veric.initial_world <> find_id def
R31992:32001 VST.veric.Clight_initial_world <> prog_funct syndef
R32003:32003 VST.floyd.VSU <> Component.p var
R31989:31989 VST.floyd.VSU <> i:450 var
R32008:32011 Coq.Init.Datatypes <> Some constr
R32013:32014 VST.floyd.VSU <> fd:453 var
R32030:32047 VST.veric.initial_world <> find_id_In_map_fst thm
R32030:32047 VST.veric.initial_world <> find_id_In_map_fst thm
R32062:32078 VST.floyd.VSU <> Comp_G_in_Fundefs thm
R32062:32078 VST.floyd.VSU <> Comp_G_in_Fundefs thm
prf 32102:32119 <> Comp_G_in_progdefs
binder 32122:32122 <> i:454
R32130:32131 Coq.Lists.List <> In def
R32136:32138 Coq.Lists.List <> map def
R32145:32150 VST.floyd.VSU <> Comp_G def
R32152:32152 VST.floyd.VSU <> Component.c var
R32140:32142 Coq.Init.Datatypes <> fst def
R32133:32133 VST.floyd.VSU <> i:454 var
binder 32126:32127 <> Hi:455
R32164:32170 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R32173:32174 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 32171:32172 <> fd:456
R32198:32200 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32175:32181 VST.veric.initial_world <> find_id def
R32186:32194 compcert.cfrontend.Ctypes <> prog_defs proj
R32196:32196 VST.floyd.VSU <> Component.p var
R32183:32183 VST.floyd.VSU <> i:454 var
R32201:32204 Coq.Init.Datatypes <> Some constr
R32207:32210 compcert.common.AST <> Gfun constr
R32212:32213 VST.floyd.VSU <> fd:456 var
R32232:32242 VST.floyd.VSU <> Comp_G_elim thm
R32232:32242 VST.floyd.VSU <> Comp_G_elim thm
prf 32363:32385 <> Comp_Imports_in_Fundefs
binder 32388:32388 <> i:457
binder 32390:32392 <> phi:458
R32424:32433 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32434:32440 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R32442:32444 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 32441:32441 <> f:459
R32469:32471 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32445:32451 VST.veric.initial_world <> find_id def
R32456:32465 VST.veric.Clight_initial_world <> prog_funct syndef
R32467:32467 VST.floyd.VSU <> Component.p var
R32453:32453 VST.floyd.VSU <> i:457 var
R32472:32475 Coq.Init.Datatypes <> Some constr
R32477:32477 VST.floyd.VSU <> f:459 var
R32413:32415 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32396:32402 VST.veric.initial_world <> find_id def
R32406:32412 VST.floyd.VSU <> Component.Imports var
R32404:32404 VST.floyd.VSU <> i:457 var
R32416:32419 Coq.Init.Datatypes <> Some constr
R32421:32423 VST.floyd.VSU <> phi:458 var
R32501:32521 VST.floyd.VSU <> Comp_Imports_external proj
R32523:32523 VST.floyd.VSU <> Component.c var
R32501:32521 VST.floyd.VSU <> Comp_Imports_external proj
R32523:32523 VST.floyd.VSU <> Component.c var
R32541:32549 VST.veric.initial_world <> find_id_e thm
R32541:32549 VST.veric.initial_world <> find_id_e thm
R32564:32573 VST.veric.initial_world <> in_map_fst thm
R32564:32573 VST.veric.initial_world <> in_map_fst thm
R32652:32665 VST.floyd.VSU <> Fundef_of_Gfun thm
R32652:32665 VST.floyd.VSU <> Fundef_of_Gfun thm
prf 32684:32706 <> Comp_Exports_in_Fundefs
binder 32709:32709 <> i:460
binder 32711:32713 <> phi:461
R32745:32754 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32755:32761 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R32763:32765 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 32762:32762 <> f:462
R32790:32792 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32766:32772 VST.veric.initial_world <> find_id def
R32777:32786 VST.veric.Clight_initial_world <> prog_funct syndef
R32788:32788 VST.floyd.VSU <> Component.p var
R32774:32774 VST.floyd.VSU <> i:460 var
R32793:32796 Coq.Init.Datatypes <> Some constr
R32798:32798 VST.floyd.VSU <> f:462 var
R32734:32736 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32717:32723 VST.veric.initial_world <> find_id def
R32727:32733 VST.floyd.VSU <> Component.Exports var
R32725:32725 VST.floyd.VSU <> i:460 var
R32737:32740 Coq.Init.Datatypes <> Some constr
R32742:32744 VST.floyd.VSU <> phi:461 var
R32825:32838 VST.floyd.VSU <> Comp_G_Exports proj
R32840:32840 VST.floyd.VSU <> Component.c var
R32825:32838 VST.floyd.VSU <> Comp_G_Exports proj
R32840:32840 VST.floyd.VSU <> Component.c var
R32884:32901 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
R32884:32901 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
prf 32930:32953 <> Comp_Imports_in_progdefs
binder 32956:32956 <> i:463
R32983:32986 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32987:32988 Coq.Lists.List <> In def
R32993:32995 Coq.Lists.List <> map def
R33002:33010 compcert.cfrontend.Ctypes <> prog_defs proj
R33012:33012 VST.floyd.VSU <> Component.p var
R32997:32999 Coq.Init.Datatypes <> fst def
R32990:32990 VST.floyd.VSU <> i:463 var
R32960:32961 Coq.Lists.List <> In def
R32966:32968 Coq.Lists.List <> map def
R32974:32980 VST.floyd.VSU <> Component.Imports var
R32970:32972 Coq.Init.Datatypes <> fst def
R32963:32963 VST.floyd.VSU <> i:463 var
R33038:33058 VST.floyd.VSU <> Comp_Imports_external proj
R33060:33060 VST.floyd.VSU <> Component.c var
R33038:33058 VST.floyd.VSU <> Comp_Imports_external proj
R33060:33060 VST.floyd.VSU <> Component.c var
R33134:33151 VST.veric.initial_world <> find_id_In_map_fst thm
R33134:33151 VST.veric.initial_world <> find_id_In_map_fst thm
prf 33181:33204 <> Comp_Exports_in_progdefs
binder 33207:33207 <> i:464
R33234:33237 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33238:33239 Coq.Lists.List <> In def
R33244:33246 Coq.Lists.List <> map def
R33253:33261 compcert.cfrontend.Ctypes <> prog_defs proj
R33263:33263 VST.floyd.VSU <> Component.p var
R33248:33250 Coq.Init.Datatypes <> fst def
R33241:33241 VST.floyd.VSU <> i:464 var
R33211:33212 Coq.Lists.List <> In def
R33217:33219 Coq.Lists.List <> map def
R33225:33231 VST.floyd.VSU <> Component.Exports var
R33221:33223 Coq.Init.Datatypes <> fst def
R33214:33214 VST.floyd.VSU <> i:464 var
R33291:33308 VST.floyd.assoclists <> In_map_fst_find_id thm
R33337:33337 VST.floyd.VSU <> Component.c var
R33291:33308 VST.floyd.assoclists <> In_map_fst_find_id thm
R33337:33337 VST.floyd.VSU <> Component.c var
R33349:33371 VST.floyd.VSU <> Comp_Exports_in_Fundefs thm
R33349:33371 VST.floyd.VSU <> Comp_Exports_in_Fundefs thm
R33399:33416 VST.veric.initial_world <> find_id_In_map_fst thm
R33399:33416 VST.veric.initial_world <> find_id_In_map_fst thm
R33430:33447 VST.floyd.VSU <> in_map_fst_fundefs thm
R33430:33447 VST.floyd.VSU <> in_map_fst_fundefs thm
prf 33471:33498 <> Comp_Imports_ExternalFundefs
binder 33501:33501 <> i:465
binder 33503:33505 <> phi:466
R33537:33546 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33547:33553 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R33566:33567 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 33554:33555 <> ef:467
binder 33557:33559 <> tys:468
binder 33561:33562 <> rt:469
binder 33564:33565 <> cc:470
R33591:33593 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33568:33574 VST.veric.initial_world <> find_id def
R33579:33587 compcert.cfrontend.Ctypes <> prog_defs proj
R33589:33589 VST.floyd.VSU <> Component.p var
R33576:33576 VST.floyd.VSU <> i:465 var
R33594:33597 Coq.Init.Datatypes <> Some constr
R33600:33603 compcert.common.AST <> Gfun constr
R33606:33613 compcert.cfrontend.Ctypes <> External constr
R33625:33626 VST.floyd.VSU <> cc:470 var
R33622:33623 VST.floyd.VSU <> rt:469 var
R33618:33620 VST.floyd.VSU <> tys:468 var
R33615:33616 VST.floyd.VSU <> ef:467 var
R33526:33528 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33509:33515 VST.veric.initial_world <> find_id def
R33519:33525 VST.floyd.VSU <> Component.Imports var
R33517:33517 VST.floyd.VSU <> i:465 var
R33529:33532 Coq.Init.Datatypes <> Some constr
R33534:33536 VST.floyd.VSU <> phi:466 var
R33652:33672 VST.floyd.VSU <> Comp_Imports_external proj
R33674:33674 VST.floyd.VSU <> Component.c var
R33652:33672 VST.floyd.VSU <> Comp_Imports_external proj
R33674:33674 VST.floyd.VSU <> Component.c var
R33692:33709 VST.veric.initial_world <> find_id_In_map_fst thm
R33692:33709 VST.veric.initial_world <> find_id_In_map_fst thm
prf 33846:33879 <> Comp_Interns_disjoint_from_Imports
R33882:33894 compcert.lib.Coqlib <> list_disjoint def
R33908:33910 Coq.Lists.List <> map def
R33916:33922 VST.floyd.VSU <> Component.Imports var
R33912:33914 Coq.Init.Datatypes <> fst def
R33897:33902 VST.floyd.VSU <> IntIDs def
R33904:33904 VST.floyd.VSU <> Component.p var
R33960:33980 VST.floyd.VSU <> Comp_Imports_external proj
R33982:33982 VST.floyd.VSU <> Component.c var
R33960:33980 VST.floyd.VSU <> Comp_Imports_external proj
R33982:33982 VST.floyd.VSU <> Component.c var
R34035:34049 compcert.lib.Coqlib <> list_in_map_inv thm
R34035:34049 compcert.lib.Coqlib <> list_in_map_inv thm
R34117:34125 Coq.Lists.List <> filter_In thm
R34117:34125 Coq.Lists.List <> filter_In thm
R34168:34177 VST.floyd.VSU <> isInternal def
R34194:34202 VST.veric.initial_world <> find_id_i thm
R34194:34202 VST.veric.initial_world <> find_id_i thm
R34271:34271 VST.floyd.VSU <> Component.c var
R34271:34271 VST.floyd.VSU <> Component.c var
prf 34287:34314 <> Comp_ExternsImports_disjoint
R34317:34329 compcert.lib.Coqlib <> list_disjoint def
R34344:34346 Coq.Lists.List <> map def
R34352:34358 VST.floyd.VSU <> Component.Imports var
R34348:34350 Coq.Init.Datatypes <> fst def
R34332:34334 Coq.Lists.List <> map def
R34340:34340 VST.floyd.VSU <> Component.E var
R34336:34338 Coq.Init.Datatypes <> fst def
R34381:34403 VST.floyd.VSU <> Comp_ExternsImports_LNR proj
R34405:34405 VST.floyd.VSU <> Component.c var
R34381:34403 VST.floyd.VSU <> Comp_ExternsImports_LNR proj
R34405:34405 VST.floyd.VSU <> Component.c var
R34417:34423 Coq.Lists.List <> map_app thm
R34426:34441 compcert.lib.Coqlib <> list_norepet_app thm
R34417:34423 Coq.Lists.List <> map_app thm
R34417:34423 Coq.Lists.List <> map_app thm
R34426:34441 compcert.lib.Coqlib <> list_norepet_app thm
R34426:34441 compcert.lib.Coqlib <> list_norepet_app thm
prf 34475:34502 <> Comp_G_disjoint_from_Imports
R34505:34517 compcert.lib.Coqlib <> list_disjoint def
R34538:34540 Coq.Lists.List <> map def
R34547:34552 VST.floyd.VSU <> Comp_G def
R34554:34554 VST.floyd.VSU <> Component.c var
R34542:34544 Coq.Init.Datatypes <> fst def
R34520:34522 Coq.Lists.List <> map def
R34528:34534 VST.floyd.VSU <> Component.Imports var
R34524:34526 Coq.Init.Datatypes <> fst def
R34602:34611 VST.floyd.VSU <> Comp_G_dom proj
R34613:34613 VST.floyd.VSU <> Component.c var
R34602:34611 VST.floyd.VSU <> Comp_G_dom proj
R34613:34613 VST.floyd.VSU <> Component.c var
R34602:34611 VST.floyd.VSU <> Comp_G_dom proj
R34613:34613 VST.floyd.VSU <> Component.c var
R34629:34637 Coq.Lists.List <> in_app_or thm
R34629:34637 Coq.Lists.List <> in_app_or thm
R34668:34686 compcert.lib.Coqlib <> list_disjoint_notin thm
R34690:34723 VST.floyd.VSU <> Comp_Interns_disjoint_from_Imports thm
R34668:34686 compcert.lib.Coqlib <> list_disjoint_notin thm
R34690:34723 VST.floyd.VSU <> Comp_Interns_disjoint_from_Imports thm
R34757:34775 compcert.lib.Coqlib <> list_disjoint_notin thm
R34779:34806 VST.floyd.VSU <> Comp_ExternsImports_disjoint thm
R34757:34775 compcert.lib.Coqlib <> list_disjoint_notin thm
R34779:34806 VST.floyd.VSU <> Comp_ExternsImports_disjoint thm
prf 34844:34855 <> Comp_ctx_LNR
R34858:34869 compcert.lib.Coqlib <> list_norepet ind
R34872:34874 Coq.Lists.List <> map def
R34887:34890 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R34880:34886 VST.floyd.VSU <> Component.Imports var
R34891:34896 VST.floyd.VSU <> Comp_G def
R34898:34898 VST.floyd.VSU <> Component.c var
R34876:34878 Coq.Init.Datatypes <> fst def
R34920:34926 Coq.Lists.List <> map_app thm
R34920:34926 Coq.Lists.List <> map_app thm
R34920:34926 Coq.Lists.List <> map_app thm
R34935:34953 compcert.lib.Coqlib <> list_norepet_append thm
R34935:34953 compcert.lib.Coqlib <> list_norepet_append thm
R34964:34979 VST.floyd.VSU <> Comp_Imports_LNR thm
R34964:34979 VST.floyd.VSU <> Comp_Imports_LNR thm
R34991:35000 VST.floyd.VSU <> Comp_G_LNR proj
R35002:35002 VST.floyd.VSU <> Component.c var
R34991:35000 VST.floyd.VSU <> Comp_G_LNR proj
R35002:35002 VST.floyd.VSU <> Component.c var
R35014:35041 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R35014:35041 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
prf 35614:35649 <> Comp_G_disjoint_from_Imports_find_id
binder 35652:35652 <> i:471
binder 35654:35656 <> phi:472
R35681:35683 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35664:35670 VST.veric.initial_world <> find_id def
R35674:35680 VST.floyd.VSU <> Component.Imports var
R35672:35672 VST.floyd.VSU <> i:471 var
R35684:35687 Coq.Init.Datatypes <> Some constr
R35689:35691 VST.floyd.VSU <> phi:472 var
binder 35660:35661 <> Hi:473
R35722:35724 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35702:35708 VST.veric.initial_world <> find_id def
R35713:35718 VST.floyd.VSU <> Comp_G def
R35720:35720 VST.floyd.VSU <> Component.c var
R35710:35710 VST.floyd.VSU <> i:471 var
R35725:35728 Coq.Init.Datatypes <> None constr
R35745:35774 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R35776:35803 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R35745:35774 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R35776:35803 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
prf 35826:35836 <> Comp_entail
binder 35839:35841 <> GP':474
binder 35855:35856 <> gv:475
R35864:35868 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R35859:35860 VST.floyd.VSU <> Component.GP var
R35862:35863 VST.floyd.VSU <> gv:475 var
R35869:35871 VST.floyd.VSU <> GP':474 var
R35873:35874 VST.floyd.VSU <> gv:475 var
binder 35845:35845 <> H:476
R35885:35893 VST.floyd.VSU <> Component rec
R35930:35930 VST.floyd.VSU <> Component.G var
R35926:35928 VST.floyd.VSU <> GP':474 var
R35918:35924 VST.floyd.VSU <> Component.Exports var
R35916:35916 VST.floyd.VSU <> Component.p var
R35908:35914 VST.floyd.VSU <> Component.Imports var
R35906:35906 VST.floyd.VSU <> Component.E var
R35903:35904 VST.floyd.VSU <> Component.cs var
R35901:35901 VST.floyd.VSU <> Component.V var
R35895:35899 VST.floyd.VSU <> Component.Espec var
R35957:35957 VST.floyd.VSU <> Component.c var
R35999:36011 VST.msl.seplog <> derives_trans meth
R35999:36011 VST.msl.seplog <> derives_trans meth
prf 36058:36075 <> Comp_entail_starTT
R36085:36093 VST.floyd.VSU <> Component rec
R36142:36142 VST.floyd.VSU <> Component.G var
R36129:36131 VST.msl.seplog <> ::logic:x_'*'_x not
R36127:36128 VST.floyd.VSU <> Component.GP var
R36132:36133 VST.msl.seplog <> TT meth
R36118:36124 VST.floyd.VSU <> Component.Exports var
R36116:36116 VST.floyd.VSU <> Component.p var
R36108:36114 VST.floyd.VSU <> Component.Imports var
R36106:36106 VST.floyd.VSU <> Component.E var
R36103:36104 VST.floyd.VSU <> Component.cs var
R36101:36101 VST.floyd.VSU <> Component.V var
R36095:36099 VST.floyd.VSU <> Component.Espec var
R36166:36176 VST.floyd.VSU <> Comp_entail thm
R36166:36176 VST.floyd.VSU <> Comp_entail thm
R36200:36208 VST.msl.log_normalize <> sepcon_TT thm
R36200:36208 VST.msl.log_normalize <> sepcon_TT thm
prf 36223:36236 <> Comp_entail_TT
R36246:36254 VST.floyd.VSU <> Component rec
R36290:36290 VST.floyd.VSU <> Component.G var
R36287:36288 VST.msl.seplog <> TT meth
R36279:36285 VST.floyd.VSU <> Component.Exports var
R36277:36277 VST.floyd.VSU <> Component.p var
R36269:36275 VST.floyd.VSU <> Component.Imports var
R36267:36267 VST.floyd.VSU <> Component.E var
R36264:36265 VST.floyd.VSU <> Component.cs var
R36262:36262 VST.floyd.VSU <> Component.V var
R36256:36260 VST.floyd.VSU <> Component.Espec var
R36315:36325 VST.floyd.VSU <> Comp_entail thm
R36315:36325 VST.floyd.VSU <> Comp_entail thm
R36349:36356 VST.msl.log_normalize <> TT_right thm
R36349:36356 VST.msl.log_normalize <> TT_right thm
prf 36371:36387 <> Comp_entail_split
binder 36390:36392 <> GP1:477
binder 36394:36396 <> GP2:478
binder 36410:36411 <> gv:479
R36419:36423 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R36414:36415 VST.floyd.VSU <> Component.GP var
R36417:36418 VST.floyd.VSU <> gv:479 var
R36431:36433 VST.msl.seplog <> ::logic:x_'*'_x not
R36425:36427 VST.floyd.VSU <> GP1:477 var
R36429:36430 VST.floyd.VSU <> gv:479 var
R36434:36436 VST.floyd.VSU <> GP2:478 var
R36438:36439 VST.floyd.VSU <> gv:479 var
binder 36400:36400 <> H:480
R36457:36465 VST.floyd.VSU <> Component rec
R36528:36528 VST.floyd.VSU <> Component.G var
binder 36503:36504 <> gv:481
R36515:36517 VST.msl.seplog <> ::logic:x_'*'_x not
R36509:36511 VST.floyd.VSU <> GP1:477 var
R36513:36514 VST.floyd.VSU <> gv:481 var
R36518:36519 VST.msl.seplog <> TT meth
R36490:36496 VST.floyd.VSU <> Component.Exports var
R36488:36488 VST.floyd.VSU <> Component.p var
R36480:36486 VST.floyd.VSU <> Component.Imports var
R36478:36478 VST.floyd.VSU <> Component.E var
R36475:36476 VST.floyd.VSU <> Component.cs var
R36473:36473 VST.floyd.VSU <> Component.V var
R36467:36471 VST.floyd.VSU <> Component.Espec var
R36553:36563 VST.floyd.VSU <> Comp_entail thm
R36553:36563 VST.floyd.VSU <> Comp_entail thm
R36590:36602 VST.msl.seplog <> derives_trans meth
R36590:36602 VST.msl.seplog <> derives_trans meth
prf 36634:36649 <> Comp_Imports_sub
binder 36651:36658 <> Imports':482
R36682:36684 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36666:36668 Coq.Lists.List <> map def
R36674:36681 VST.floyd.VSU <> Imports':482 var
R36670:36672 Coq.Init.Datatypes <> fst def
R36685:36687 Coq.Lists.List <> map def
R36693:36699 VST.floyd.VSU <> Component.Imports var
R36689:36691 Coq.Init.Datatypes <> fst def
binder 36661:36663 <> HI1:483
R36714:36720 Coq.Lists.List <> Forall2 ind
R36754:36756 Coq.Lists.List <> map def
R36762:36768 VST.floyd.VSU <> Component.Imports var
R36758:36760 Coq.Init.Datatypes <> snd def
R36735:36737 Coq.Lists.List <> map def
R36743:36750 VST.floyd.VSU <> Imports':482 var
R36739:36741 Coq.Init.Datatypes <> snd def
R36722:36732 VST.veric.SeparationLogic <> funspec_sub def
binder 36709:36711 <> HI2:484
R36781:36789 VST.floyd.VSU <> Component rec
R36826:36826 VST.floyd.VSU <> Component.G var
R36823:36824 VST.floyd.VSU <> Component.GP var
R36815:36821 VST.floyd.VSU <> Component.Exports var
R36813:36813 VST.floyd.VSU <> Component.p var
R36804:36811 VST.floyd.VSU <> Imports':482 var
R36802:36802 VST.floyd.VSU <> Component.E var
R36799:36800 VST.floyd.VSU <> Component.cs var
R36797:36797 VST.floyd.VSU <> Component.V var
R36791:36795 VST.floyd.VSU <> Component.Espec var
binder 36859:36859 <> i:485
R36862:36872 VST.veric.expr <> subsumespec def
R36950:36956 VST.veric.initial_world <> find_id def
R36969:36972 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R36973:36978 VST.floyd.VSU <> Comp_G def
R36980:36980 VST.floyd.VSU <> Component.c var
R36958:36958 VST.floyd.VSU <> i:485 var
R36876:36882 VST.veric.initial_world <> find_id def
R36894:36897 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R36887:36893 VST.floyd.VSU <> Component.Imports var
R36898:36903 VST.floyd.VSU <> Comp_G def
R36905:36905 VST.floyd.VSU <> Component.c var
R36884:36884 VST.floyd.VSU <> i:485 var
binder 36859:36859 <> i:486
R36862:36872 VST.veric.expr <> subsumespec def
R36950:36956 VST.veric.initial_world <> find_id def
R36969:36972 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R36973:36978 VST.floyd.VSU <> Comp_G def
R36980:36980 VST.floyd.VSU <> Component.c var
R36958:36958 VST.floyd.VSU <> i:486 var
R36876:36882 VST.veric.initial_world <> find_id def
R36894:36897 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R36887:36893 VST.floyd.VSU <> Component.Imports var
R36898:36903 VST.floyd.VSU <> Comp_G def
R36905:36905 VST.floyd.VSU <> Component.c var
R36884:36884 VST.floyd.VSU <> i:486 var
R37013:37019 VST.veric.initial_world <> find_id def
R37031:37034 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37024:37030 VST.floyd.VSU <> Component.Imports var
R37035:37040 VST.floyd.VSU <> Comp_G def
R37042:37042 VST.floyd.VSU <> Component.c var
R37013:37019 VST.veric.initial_world <> find_id def
R37031:37034 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37024:37030 VST.floyd.VSU <> Component.Imports var
R37035:37040 VST.floyd.VSU <> Comp_G def
R37042:37042 VST.floyd.VSU <> Component.c var
R37127:37137 VST.veric.initial_world <> find_id_app thm
R37127:37137 VST.veric.initial_world <> find_id_app thm
R37177:37183 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R37188:37189 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 37184:37187 <> phi':487
R37220:37223 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R37208:37210 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37190:37196 VST.veric.initial_world <> find_id def
R37211:37214 Coq.Init.Datatypes <> Some constr
R37216:37219 VST.floyd.VSU <> phi':487 var
R37224:37234 VST.veric.SeparationLogic <> funspec_sub def
R37236:37239 VST.floyd.VSU <> phi':487 var
R37177:37183 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R37188:37189 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 37184:37187 <> phi':488
R37220:37223 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R37208:37210 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37190:37196 VST.veric.initial_world <> find_id def
R37211:37214 Coq.Init.Datatypes <> Some constr
R37216:37219 VST.floyd.VSU <> phi':488 var
R37224:37234 VST.veric.SeparationLogic <> funspec_sub def
R37236:37239 VST.floyd.VSU <> phi':488 var
R37298:37313 VST.floyd.VSU <> find_funspec_sub thm
R37298:37313 VST.floyd.VSU <> find_funspec_sub thm
R37384:37395 VST.veric.initial_world <> find_id_app1 thm
R37384:37395 VST.veric.initial_world <> find_id_app1 thm
R37384:37395 VST.veric.initial_world <> find_id_app1 thm
R37384:37395 VST.veric.initial_world <> find_id_app1 thm
R37434:37451 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R37434:37451 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R37510:37521 VST.veric.initial_world <> find_id_app2 thm
R37510:37521 VST.veric.initial_world <> find_id_app2 thm
R37510:37521 VST.veric.initial_world <> find_id_app2 thm
R37510:37521 VST.veric.initial_world <> find_id_app2 thm
R37510:37521 VST.veric.initial_world <> find_id_app2 thm
R37592:37610 VST.veric.seplog <> funspec_sub_si_refl thm
R37592:37610 VST.veric.seplog <> funspec_sub_si_refl thm
R37643:37654 VST.floyd.VSU <> Comp_ctx_LNR thm
R37643:37654 VST.floyd.VSU <> Comp_ctx_LNR thm
R37674:37680 Coq.Lists.List <> map_app thm
R37674:37680 Coq.Lists.List <> map_app thm
R37674:37680 Coq.Lists.List <> map_app thm
R37674:37680 Coq.Lists.List <> map_app thm
R37674:37680 Coq.Lists.List <> map_app thm
binder 37722:37722 <> i:489
R37725:37734 VST.veric.tycontext <> sub_option def
R37823:37823 compcert.lib.Maps <> :::x_'!'_x not
R37865:37868 compcert.lib.Maps <> :::x_'!'_x not
R37869:37869 VST.floyd.VSU <> i:489 var
R37824:37839 VST.veric.seplog <> make_tycontext_g def
R37852:37855 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37856:37861 VST.floyd.VSU <> Comp_G def
R37863:37863 VST.floyd.VSU <> Component.c var
R37841:37841 VST.floyd.VSU <> Component.V var
R37737:37737 compcert.lib.Maps <> :::x_'!'_x not
R37778:37781 compcert.lib.Maps <> :::x_'!'_x not
R37782:37782 VST.floyd.VSU <> i:489 var
R37738:37753 VST.veric.seplog <> make_tycontext_g def
R37765:37768 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37758:37764 VST.floyd.VSU <> Component.Imports var
R37769:37774 VST.floyd.VSU <> Comp_G def
R37776:37776 VST.floyd.VSU <> Component.c var
R37755:37755 VST.floyd.VSU <> Component.V var
binder 37722:37722 <> i:490
R37725:37734 VST.veric.tycontext <> sub_option def
R37823:37823 compcert.lib.Maps <> :::x_'!'_x not
R37865:37868 compcert.lib.Maps <> :::x_'!'_x not
R37869:37869 VST.floyd.VSU <> i:490 var
R37824:37839 VST.veric.seplog <> make_tycontext_g def
R37852:37855 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37856:37861 VST.floyd.VSU <> Comp_G def
R37863:37863 VST.floyd.VSU <> Component.c var
R37841:37841 VST.floyd.VSU <> Component.V var
R37737:37737 compcert.lib.Maps <> :::x_'!'_x not
R37778:37781 compcert.lib.Maps <> :::x_'!'_x not
R37782:37782 VST.floyd.VSU <> i:490 var
R37738:37753 VST.veric.seplog <> make_tycontext_g def
R37765:37768 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37758:37764 VST.floyd.VSU <> Component.Imports var
R37769:37774 VST.floyd.VSU <> Comp_G def
R37776:37776 VST.floyd.VSU <> Component.c var
R37755:37755 VST.floyd.VSU <> Component.V var
R37921:37921 compcert.lib.Maps <> :::x_'!'_x not
R37962:37965 compcert.lib.Maps <> :::x_'!'_x not
R37922:37937 VST.veric.seplog <> make_tycontext_g def
R37949:37952 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37942:37948 VST.floyd.VSU <> Component.Imports var
R37953:37958 VST.floyd.VSU <> Comp_G def
R37960:37960 VST.floyd.VSU <> Component.c var
R37939:37939 VST.floyd.VSU <> Component.V var
R37921:37921 compcert.lib.Maps <> :::x_'!'_x not
R37962:37965 compcert.lib.Maps <> :::x_'!'_x not
R37922:37937 VST.veric.seplog <> make_tycontext_g def
R37949:37952 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R37942:37948 VST.floyd.VSU <> Component.Imports var
R37953:37958 VST.floyd.VSU <> Comp_G def
R37960:37960 VST.floyd.VSU <> Component.c var
R37939:37939 VST.floyd.VSU <> Component.V var
R38035:38041 VST.veric.initial_world <> find_id def
R38053:38056 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R38046:38052 VST.floyd.VSU <> Component.Imports var
R38057:38062 VST.floyd.VSU <> Comp_G def
R38064:38064 VST.floyd.VSU <> Component.c var
R38035:38041 VST.veric.initial_world <> find_id def
R38053:38056 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R38046:38052 VST.floyd.VSU <> Component.Imports var
R38057:38062 VST.floyd.VSU <> Comp_G def
R38064:38064 VST.floyd.VSU <> Component.c var
R38168:38196 VST.veric.semax_prog <> make_tycontext_s_g thm
R38168:38196 VST.veric.semax_prog <> make_tycontext_s_g thm
R38168:38196 VST.veric.semax_prog <> make_tycontext_s_g thm
R38168:38196 VST.veric.semax_prog <> make_tycontext_s_g thm
R38290:38318 VST.veric.semax_prog <> make_tycontext_s_g thm
R38290:38318 VST.veric.semax_prog <> make_tycontext_s_g thm
R38290:38318 VST.veric.semax_prog <> make_tycontext_s_g thm
R38290:38318 VST.veric.semax_prog <> make_tycontext_s_g thm
R38341:38364 VST.veric.initial_world <> make_tycontext_s_find_id thm
R38341:38364 VST.veric.initial_world <> make_tycontext_s_find_id thm
R38341:38364 VST.veric.initial_world <> make_tycontext_s_find_id thm
R38412:38440 VST.veric.compcert_rmaps RML empty_rmap def
R38412:38440 VST.veric.compcert_rmaps RML empty_rmap def
R38512:38533 VST.veric.SeparationLogic <> type_of_funspec_sub_si thm
R38512:38533 VST.veric.SeparationLogic <> type_of_funspec_sub_si thm
R38561:38584 VST.veric.initial_world <> make_tycontext_s_find_id thm
R38561:38584 VST.veric.initial_world <> make_tycontext_s_find_id thm
R38561:38584 VST.veric.initial_world <> make_tycontext_s_find_id thm
R38614:38647 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R38614:38647 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R38614:38647 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R38683:38716 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R38683:38716 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R38683:38716 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R38683:38716 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R38740:38755 VST.floyd.assoclists <> find_id_None_iff thm
R38740:38755 VST.floyd.assoclists <> find_id_None_iff thm
R38764:38779 VST.floyd.assoclists <> find_id_None_iff thm
R38764:38779 VST.floyd.assoclists <> find_id_None_iff thm
R38826:38832 Coq.Lists.List <> map_app thm
R38826:38832 Coq.Lists.List <> map_app thm
R38826:38832 Coq.Lists.List <> map_app thm
R38879:38893 VST.floyd.VSU <> Build_Component constr
R38940:38940 VST.floyd.VSU <> Component.c var
R38879:38893 VST.floyd.VSU <> Build_Component constr
R38940:38940 VST.floyd.VSU <> Component.c var
R38940:38940 VST.floyd.VSU <> Component.c var
R38940:38940 VST.floyd.VSU <> Component.c var
R38940:38940 VST.floyd.VSU <> Component.c var
R38940:38940 VST.floyd.VSU <> Component.c var
R38940:38940 VST.floyd.VSU <> Component.c var
R38940:38940 VST.floyd.VSU <> Component.c var
R38940:38940 VST.floyd.VSU <> Component.c var
R38940:38940 VST.floyd.VSU <> Component.c var
R38940:38940 VST.floyd.VSU <> Component.c var
R38940:38940 VST.floyd.VSU <> Component.c var
R38965:38965 VST.floyd.VSU <> Component.c var
R38965:38965 VST.floyd.VSU <> Component.c var
R38979:38985 Coq.Lists.List <> map_app thm
R38996:39002 Coq.Lists.List <> map_app thm
R39011:39011 VST.floyd.VSU <> Component.c var
R38979:38985 Coq.Lists.List <> map_app thm
R38979:38985 Coq.Lists.List <> map_app thm
R38996:39002 Coq.Lists.List <> map_app thm
R38996:39002 Coq.Lists.List <> map_app thm
R39011:39011 VST.floyd.VSU <> Component.c var
R39036:39051 VST.floyd.VSU <> Comp_G_justified proj
R39053:39053 VST.floyd.VSU <> Component.c var
R39036:39051 VST.floyd.VSU <> Comp_G_justified proj
R39053:39053 VST.floyd.VSU <> Component.c var
R39100:39123 VST.floyd.VSU <> InternalInfo_subsumption thm
R39100:39123 VST.floyd.VSU <> InternalInfo_subsumption thm
R39156:39167 VST.floyd.VSU <> Comp_ctx_LNR thm
R39156:39167 VST.floyd.VSU <> Comp_ctx_LNR thm
prf 39619:39635 <> Comp_Exports_sub1
binder 39637:39644 <> Exports':491
R39668:39670 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39652:39654 Coq.Lists.List <> map def
R39660:39667 VST.floyd.VSU <> Exports':491 var
R39656:39658 Coq.Init.Datatypes <> fst def
R39671:39673 Coq.Lists.List <> map def
R39679:39685 VST.floyd.VSU <> Component.Exports var
R39675:39677 Coq.Init.Datatypes <> fst def
binder 39647:39649 <> HE1:492
R39700:39706 Coq.Lists.List <> Forall2 ind
R39739:39741 Coq.Lists.List <> map def
R39747:39754 VST.floyd.VSU <> Exports':491 var
R39743:39745 Coq.Init.Datatypes <> snd def
R39721:39723 Coq.Lists.List <> map def
R39729:39735 VST.floyd.VSU <> Component.Exports var
R39725:39727 Coq.Init.Datatypes <> snd def
R39708:39718 VST.veric.SeparationLogic <> funspec_sub def
binder 39695:39697 <> HE2:493
R39766:39774 VST.floyd.VSU <> Component rec
R39811:39811 VST.floyd.VSU <> Component.G var
R39808:39809 VST.floyd.VSU <> Component.GP var
R39799:39806 VST.floyd.VSU <> Exports':491 var
R39797:39797 VST.floyd.VSU <> Component.p var
R39789:39795 VST.floyd.VSU <> Component.Imports var
R39787:39787 VST.floyd.VSU <> Component.E var
R39784:39785 VST.floyd.VSU <> Component.cs var
R39782:39782 VST.floyd.VSU <> Component.V var
R39776:39780 VST.floyd.VSU <> Component.Espec var
R39830:39844 VST.floyd.VSU <> Build_Component constr
R39877:39877 VST.floyd.VSU <> Component.c var
R39830:39844 VST.floyd.VSU <> Build_Component constr
R39877:39877 VST.floyd.VSU <> Component.c var
R39877:39877 VST.floyd.VSU <> Component.c var
R39877:39877 VST.floyd.VSU <> Component.c var
R39877:39877 VST.floyd.VSU <> Component.c var
R39877:39877 VST.floyd.VSU <> Component.c var
R39877:39877 VST.floyd.VSU <> Component.c var
R39877:39877 VST.floyd.VSU <> Component.c var
R39877:39877 VST.floyd.VSU <> Component.c var
R39877:39877 VST.floyd.VSU <> Component.c var
R39877:39877 VST.floyd.VSU <> Component.c var
R39877:39877 VST.floyd.VSU <> Component.c var
R39901:39901 VST.floyd.VSU <> Component.c var
R39901:39901 VST.floyd.VSU <> Component.c var
R39959:39965 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R39969:39970 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 39966:39968 <> phi:494
R39999:40002 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R39988:39990 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39971:39977 VST.veric.initial_world <> find_id def
R39981:39987 VST.floyd.VSU <> Component.Exports var
R39991:39994 Coq.Init.Datatypes <> Some constr
R39996:39998 VST.floyd.VSU <> phi:494 var
R40003:40013 VST.veric.SeparationLogic <> funspec_sub def
R40015:40017 VST.floyd.VSU <> phi:494 var
R39959:39965 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R39969:39970 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 39966:39968 <> phi:495
R39999:40002 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R39988:39990 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39971:39977 VST.veric.initial_world <> find_id def
R39981:39987 VST.floyd.VSU <> Component.Exports var
R39991:39994 Coq.Init.Datatypes <> Some constr
R39996:39998 VST.floyd.VSU <> phi:495 var
R40003:40013 VST.veric.SeparationLogic <> funspec_sub def
R40015:40017 VST.floyd.VSU <> phi:495 var
R40057:40072 VST.floyd.VSU <> find_funspec_sub thm
R40057:40072 VST.floyd.VSU <> find_funspec_sub thm
R40135:40148 VST.floyd.VSU <> Comp_G_Exports proj
R40150:40150 VST.floyd.VSU <> Component.c var
R40135:40148 VST.floyd.VSU <> Comp_G_Exports proj
R40150:40150 VST.floyd.VSU <> Component.c var
R40221:40237 VST.veric.seplog <> funspec_sub_trans thm
R40221:40237 VST.veric.seplog <> funspec_sub_trans thm
prf 40267:40283 <> Comp_Exports_sub2
binder 40285:40292 <> Exports':496
R40300:40311 compcert.lib.Coqlib <> list_norepet ind
R40314:40316 Coq.Lists.List <> map def
R40322:40329 VST.floyd.VSU <> Exports':496 var
R40318:40320 Coq.Init.Datatypes <> fst def
binder 40295:40297 <> LNR:497
binder 40352:40352 <> i:498
R40355:40364 VST.veric.tycontext <> sub_option def
R40388:40394 VST.veric.initial_world <> find_id def
R40398:40404 VST.floyd.VSU <> Component.Exports var
R40396:40396 VST.floyd.VSU <> i:498 var
R40367:40373 VST.veric.initial_world <> find_id def
R40377:40384 VST.floyd.VSU <> Exports':496 var
R40375:40375 VST.floyd.VSU <> i:498 var
binder 40340:40342 <> HE2:499
R40416:40424 VST.floyd.VSU <> Component rec
R40461:40461 VST.floyd.VSU <> Component.G var
R40458:40459 VST.floyd.VSU <> Component.GP var
R40449:40456 VST.floyd.VSU <> Exports':496 var
R40447:40447 VST.floyd.VSU <> Component.p var
R40439:40445 VST.floyd.VSU <> Component.Imports var
R40437:40437 VST.floyd.VSU <> Component.E var
R40434:40435 VST.floyd.VSU <> Component.cs var
R40432:40432 VST.floyd.VSU <> Component.V var
R40426:40430 VST.floyd.VSU <> Component.Espec var
R40480:40494 VST.floyd.VSU <> Build_Component constr
R40527:40527 VST.floyd.VSU <> Component.c var
R40480:40494 VST.floyd.VSU <> Build_Component constr
R40527:40527 VST.floyd.VSU <> Component.c var
R40527:40527 VST.floyd.VSU <> Component.c var
R40527:40527 VST.floyd.VSU <> Component.c var
R40527:40527 VST.floyd.VSU <> Component.c var
R40527:40527 VST.floyd.VSU <> Component.c var
R40527:40527 VST.floyd.VSU <> Component.c var
R40527:40527 VST.floyd.VSU <> Component.c var
R40527:40527 VST.floyd.VSU <> Component.c var
R40527:40527 VST.floyd.VSU <> Component.c var
R40527:40527 VST.floyd.VSU <> Component.c var
R40527:40527 VST.floyd.VSU <> Component.c var
R40620:40620 VST.floyd.VSU <> Component.c var
R40620:40620 VST.floyd.VSU <> Component.c var
def 40649:40662 <> funspecs_sqsub
binder 40664:40666 <> Exp:500
binder 40668:40671 <> Exp':501
binder 40685:40685 <> i:502
binder 40687:40690 <> phi':503
R40719:40731 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40732:40738 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R40742:40743 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 40739:40741 <> phi:504
R40768:40771 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R40757:40759 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40744:40750 VST.veric.initial_world <> find_id def
R40754:40756 VST.floyd.VSU <> Exp:500 var
R40752:40752 VST.floyd.VSU <> i:502 var
R40760:40763 Coq.Init.Datatypes <> Some constr
R40765:40767 VST.floyd.VSU <> phi:504 var
R40772:40782 VST.veric.SeparationLogic <> funspec_sub def
R40788:40791 VST.floyd.VSU <> phi':503 var
R40784:40786 VST.floyd.VSU <> phi:504 var
R40707:40709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40693:40699 VST.veric.initial_world <> find_id def
R40703:40706 VST.floyd.VSU <> Exp':501 var
R40701:40701 VST.floyd.VSU <> i:502 var
R40710:40713 Coq.Init.Datatypes <> Some constr
R40715:40718 VST.floyd.VSU <> phi':503 var
prf 40801:40816 <> Comp_Exports_sub
binder 40818:40825 <> Exports':505
R40833:40844 compcert.lib.Coqlib <> list_norepet ind
R40847:40849 Coq.Lists.List <> map def
R40855:40862 VST.floyd.VSU <> Exports':505 var
R40851:40853 Coq.Init.Datatypes <> fst def
binder 40828:40830 <> LNR:506
R40878:40891 VST.floyd.VSU <> funspecs_sqsub def
R40901:40908 VST.floyd.VSU <> Exports':505 var
R40893:40899 VST.floyd.VSU <> Component.Exports var
binder 40873:40875 <> HE2:507
R40919:40927 VST.floyd.VSU <> Component rec
R40964:40964 VST.floyd.VSU <> Component.G var
R40961:40962 VST.floyd.VSU <> Component.GP var
R40952:40959 VST.floyd.VSU <> Exports':505 var
R40950:40950 VST.floyd.VSU <> Component.p var
R40942:40948 VST.floyd.VSU <> Component.Imports var
R40940:40940 VST.floyd.VSU <> Component.E var
R40937:40938 VST.floyd.VSU <> Component.cs var
R40935:40935 VST.floyd.VSU <> Component.V var
R40929:40933 VST.floyd.VSU <> Component.Espec var
R40983:40997 VST.floyd.VSU <> Build_Component constr
R41030:41030 VST.floyd.VSU <> Component.c var
R40983:40997 VST.floyd.VSU <> Build_Component constr
R41030:41030 VST.floyd.VSU <> Component.c var
R41030:41030 VST.floyd.VSU <> Component.c var
R41030:41030 VST.floyd.VSU <> Component.c var
R41030:41030 VST.floyd.VSU <> Component.c var
R41030:41030 VST.floyd.VSU <> Component.c var
R41030:41030 VST.floyd.VSU <> Component.c var
R41030:41030 VST.floyd.VSU <> Component.c var
R41030:41030 VST.floyd.VSU <> Component.c var
R41030:41030 VST.floyd.VSU <> Component.c var
R41030:41030 VST.floyd.VSU <> Component.c var
R41030:41030 VST.floyd.VSU <> Component.c var
R41111:41124 VST.floyd.VSU <> Comp_G_Exports proj
R41126:41126 VST.floyd.VSU <> Component.c var
R41111:41124 VST.floyd.VSU <> Comp_G_Exports proj
R41126:41126 VST.floyd.VSU <> Component.c var
R41203:41219 VST.veric.seplog <> funspec_sub_trans thm
R41203:41219 VST.veric.seplog <> funspec_sub_trans thm
R41245:41253 VST.floyd.VSU Component <> sec
R41267:41276 VST.floyd.VSU <> Comp_G_LNR proj
R41267:41276 VST.floyd.VSU <> Comp_G_LNR proj
R41329:41344 VST.floyd.VSU <> Comp_LNR_Interns thm
R41329:41344 VST.floyd.VSU <> Comp_LNR_Interns thm
R41397:41408 VST.floyd.VSU <> Comp_ctx_LNR thm
R41397:41408 VST.floyd.VSU <> Comp_ctx_LNR thm
R41461:41488 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R41461:41488 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R41541:41576 VST.floyd.VSU <> Comp_G_disjoint_from_Imports_find_id thm
R41541:41576 VST.floyd.VSU <> Comp_G_disjoint_from_Imports_find_id thm
R41629:41662 VST.floyd.VSU <> Comp_Interns_disjoint_from_Imports thm
R41629:41662 VST.floyd.VSU <> Comp_Interns_disjoint_from_Imports thm
R41715:41738 VST.floyd.VSU <> Comp_Exports_in_progdefs thm
R41715:41738 VST.floyd.VSU <> Comp_Exports_in_progdefs thm
R41792:41807 VST.floyd.VSU <> Comp_Externs_LNR thm
R41792:41807 VST.floyd.VSU <> Comp_Externs_LNR thm
R41860:41882 VST.floyd.VSU <> Comp_Imports_in_Fundefs thm
R41860:41882 VST.floyd.VSU <> Comp_Imports_in_Fundefs thm
R41935:41957 VST.floyd.VSU <> Comp_Exports_in_Fundefs thm
R41935:41957 VST.floyd.VSU <> Comp_Exports_in_Fundefs thm
R42010:42033 VST.floyd.VSU <> Comp_Imports_in_progdefs thm
R42010:42033 VST.floyd.VSU <> Comp_Imports_in_progdefs thm
R42086:42109 VST.floyd.VSU <> Comp_Exports_in_progdefs thm
R42086:42109 VST.floyd.VSU <> Comp_Exports_in_progdefs thm
R42163:42175 VST.floyd.VSU <> Comp_G_intern thm
R42163:42175 VST.floyd.VSU <> Comp_G_intern thm
R42228:42240 VST.floyd.VSU <> Comp_G_extern thm
R42228:42240 VST.floyd.VSU <> Comp_G_extern thm
R42386:42401 VST.floyd.VSU <> Comp_Imports_LNR thm
R42386:42401 VST.floyd.VSU <> Comp_Imports_LNR thm
R42454:42474 VST.floyd.VSU <> LNR_Internals_Externs thm
R42454:42474 VST.floyd.VSU <> LNR_Internals_Externs thm
R42527:42543 VST.floyd.VSU <> Comp_G_in_Fundefs thm
R42527:42543 VST.floyd.VSU <> Comp_G_in_Fundefs thm
R42596:42613 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
R42596:42613 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
R42666:42676 VST.floyd.VSU <> Comp_E_in_G thm
R42666:42676 VST.floyd.VSU <> Comp_E_in_G thm
R42729:42744 VST.floyd.VSU <> Comp_E_in_G_find thm
R42729:42744 VST.floyd.VSU <> Comp_E_in_G_find thm
R42797:42807 VST.floyd.VSU <> Comp_G_elim thm
R42797:42807 VST.floyd.VSU <> Comp_G_elim thm
R42860:42877 VST.floyd.VSU <> Comp_G_in_progdefs thm
R42860:42877 VST.floyd.VSU <> Comp_G_in_progdefs thm
R42930:42948 VST.floyd.VSU <> Comp_G_in_progdefs' thm
R42930:42948 VST.floyd.VSU <> Comp_G_in_progdefs' thm
R43001:43016 VST.floyd.VSU <> Comp_Imports_sub thm
R43001:43016 VST.floyd.VSU <> Comp_Imports_sub thm
R43069:43084 VST.floyd.VSU <> Comp_Exports_sub thm
R43069:43084 VST.floyd.VSU <> Comp_Exports_sub thm
R43137:43147 VST.floyd.VSU <> Comp_entail thm
R43137:43147 VST.floyd.VSU <> Comp_entail thm
sec 43199:43207 <> VSU_rules
var 43219:43223 VSU_rules Espec
R43226:43235 VST.veric.juicy_extspec <> OracleKind class
var 43247:43247 VSU_rules V
R43250:43257 VST.veric.mpred <> varspecs def
var 43269:43270 VSU_rules cs
R43273:43281 VST.veric.mpred <> compspecs class
var 43293:43293 VSU_rules E
var 43295:43301 VSU_rules Imports
R43304:43311 VST.veric.mpred <> funspecs def
var 43323:43323 VSU_rules p
R43326:43339 compcert.cfrontend.Clight <> program def
var 43351:43357 VSU_rules Exports
R43360:43367 VST.veric.mpred <> funspecs def
var 43379:43380 VSU_rules GP
R43390:43393 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43394:43398 VST.veric.mpred <> mpred def
R43383:43389 VST.veric.SeparationLogic <> globals def
var 43410:43412 VSU_rules vsu
R43416:43418 VST.floyd.VSU <> VSU def
R43451:43452 VST.floyd.VSU <> VSU_rules.GP var
R43443:43449 VST.floyd.VSU <> VSU_rules.Exports var
R43441:43441 VST.floyd.VSU <> VSU_rules.p var
R43433:43439 VST.floyd.VSU <> VSU_rules.Imports var
R43431:43431 VST.floyd.VSU <> VSU_rules.E var
R43428:43429 VST.floyd.VSU <> VSU_rules.cs var
R43426:43426 VST.floyd.VSU <> VSU_rules.V var
R43420:43424 VST.floyd.VSU <> VSU_rules.Espec var
prf 43462:43476 <> VSU_Imports_sub
binder 43478:43485 <> Imports':517
R43509:43511 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43493:43495 Coq.Lists.List <> map def
R43501:43508 VST.floyd.VSU <> Imports':517 var
R43497:43499 Coq.Init.Datatypes <> fst def
R43512:43514 Coq.Lists.List <> map def
R43520:43526 VST.floyd.VSU <> VSU_rules.Imports var
R43516:43518 Coq.Init.Datatypes <> fst def
binder 43488:43490 <> HI1:518
R43541:43547 Coq.Lists.List <> Forall2 ind
R43581:43583 Coq.Lists.List <> map def
R43589:43595 VST.floyd.VSU <> VSU_rules.Imports var
R43585:43587 Coq.Init.Datatypes <> snd def
R43562:43564 Coq.Lists.List <> map def
R43570:43577 VST.floyd.VSU <> Imports':517 var
R43566:43568 Coq.Init.Datatypes <> snd def
R43549:43559 VST.veric.SeparationLogic <> funspec_sub def
binder 43536:43538 <> HI2:519
R43608:43610 VST.floyd.VSU <> VSU def
R43644:43645 VST.floyd.VSU <> VSU_rules.GP var
R43636:43642 VST.floyd.VSU <> VSU_rules.Exports var
R43634:43634 VST.floyd.VSU <> VSU_rules.p var
R43625:43632 VST.floyd.VSU <> Imports':517 var
R43623:43623 VST.floyd.VSU <> VSU_rules.E var
R43620:43621 VST.floyd.VSU <> VSU_rules.cs var
R43618:43618 VST.floyd.VSU <> VSU_rules.V var
R43612:43616 VST.floyd.VSU <> VSU_rules.Espec var
R43664:43666 VST.floyd.VSU <> VSU_rules.vsu var
R43695:43710 VST.floyd.VSU <> Comp_Imports_sub thm
R43695:43710 VST.floyd.VSU <> Comp_Imports_sub thm
prf 43738:43753 <> VSU_Exports_sub1
binder 43755:43762 <> Exports':520
R43786:43788 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43770:43772 Coq.Lists.List <> map def
R43778:43785 VST.floyd.VSU <> Exports':520 var
R43774:43776 Coq.Init.Datatypes <> fst def
R43789:43791 Coq.Lists.List <> map def
R43797:43803 VST.floyd.VSU <> VSU_rules.Exports var
R43793:43795 Coq.Init.Datatypes <> fst def
binder 43765:43767 <> HE1:521
R43818:43824 Coq.Lists.List <> Forall2 ind
R43857:43859 Coq.Lists.List <> map def
R43865:43872 VST.floyd.VSU <> Exports':520 var
R43861:43863 Coq.Init.Datatypes <> snd def
R43839:43841 Coq.Lists.List <> map def
R43847:43853 VST.floyd.VSU <> VSU_rules.Exports var
R43843:43845 Coq.Init.Datatypes <> snd def
R43826:43836 VST.veric.SeparationLogic <> funspec_sub def
binder 43813:43815 <> HE2:522
R43884:43886 VST.floyd.VSU <> VSU def
R43920:43921 VST.floyd.VSU <> VSU_rules.GP var
R43911:43918 VST.floyd.VSU <> Exports':520 var
R43909:43909 VST.floyd.VSU <> VSU_rules.p var
R43901:43907 VST.floyd.VSU <> VSU_rules.Imports var
R43899:43899 VST.floyd.VSU <> VSU_rules.E var
R43896:43897 VST.floyd.VSU <> VSU_rules.cs var
R43894:43894 VST.floyd.VSU <> VSU_rules.V var
R43888:43892 VST.floyd.VSU <> VSU_rules.Espec var
R43940:43942 VST.floyd.VSU <> VSU_rules.vsu var
R43971:43987 VST.floyd.VSU <> Comp_Exports_sub1 thm
R43971:43987 VST.floyd.VSU <> Comp_Exports_sub1 thm
prf 44015:44029 <> VSU_Exports_sub
binder 44031:44038 <> Exports':523
R44046:44057 compcert.lib.Coqlib <> list_norepet ind
R44060:44062 Coq.Lists.List <> map def
R44068:44075 VST.floyd.VSU <> Exports':523 var
R44064:44066 Coq.Init.Datatypes <> fst def
binder 44041:44043 <> LNR:524
R44091:44104 VST.floyd.VSU <> funspecs_sqsub def
R44114:44121 VST.floyd.VSU <> Exports':523 var
R44106:44112 VST.floyd.VSU <> VSU_rules.Exports var
binder 44086:44088 <> HE2:525
R44132:44134 VST.floyd.VSU <> VSU def
R44168:44169 VST.floyd.VSU <> VSU_rules.GP var
R44159:44166 VST.floyd.VSU <> Exports':523 var
R44157:44157 VST.floyd.VSU <> VSU_rules.p var
R44149:44155 VST.floyd.VSU <> VSU_rules.Imports var
R44147:44147 VST.floyd.VSU <> VSU_rules.E var
R44144:44145 VST.floyd.VSU <> VSU_rules.cs var
R44142:44142 VST.floyd.VSU <> VSU_rules.V var
R44136:44140 VST.floyd.VSU <> VSU_rules.Espec var
R44188:44190 VST.floyd.VSU <> VSU_rules.vsu var
R44219:44234 VST.floyd.VSU <> Comp_Exports_sub thm
R44219:44234 VST.floyd.VSU <> Comp_Exports_sub thm
prf 44262:44271 <> VSU_entail
binder 44274:44276 <> GP':526
R44281:44281 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44309:44320 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44322:44324 VST.floyd.VSU <> VSU def
R44357:44359 VST.floyd.VSU <> GP':526 var
R44349:44355 VST.floyd.VSU <> VSU_rules.Exports var
R44347:44347 VST.floyd.VSU <> VSU_rules.p var
R44339:44345 VST.floyd.VSU <> VSU_rules.Imports var
R44337:44337 VST.floyd.VSU <> VSU_rules.E var
R44334:44335 VST.floyd.VSU <> VSU_rules.cs var
R44332:44332 VST.floyd.VSU <> VSU_rules.V var
R44326:44330 VST.floyd.VSU <> VSU_rules.Espec var
binder 44289:44290 <> gv:527
R44298:44302 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R44293:44294 VST.floyd.VSU <> VSU_rules.GP var
R44296:44297 VST.floyd.VSU <> gv:527 var
R44303:44305 VST.floyd.VSU <> GP':526 var
R44307:44308 VST.floyd.VSU <> gv:527 var
R44386:44388 VST.floyd.VSU <> VSU_rules.vsu var
R44419:44429 VST.floyd.VSU <> Comp_entail thm
R44419:44429 VST.floyd.VSU <> Comp_entail thm
R44449:44457 VST.floyd.VSU VSU_rules <> sec
def 44472:44482 <> merge_specs
R44490:44496 VST.veric.mpred <> funspec ind
binder 44485:44488 <> phi1:528
R44505:44510 Coq.Init.Datatypes <> option ind
R44512:44518 VST.veric.mpred <> funspec ind
binder 44500:44502 <> sp2:529
R44522:44528 VST.veric.mpred <> funspec ind
R44541:44543 VST.floyd.VSU <> sp2:529 var
R44555:44558 Coq.Init.Datatypes <> Some constr
R44574:44592 VST.veric.seplog <> binary_intersection def
R44594:44597 VST.floyd.VSU <> phi1:528 var
R44643:44646 Coq.Init.Datatypes <> Some constr
R44693:44696 Coq.Init.Datatypes <> None constr
R44710:44713 VST.floyd.VSU <> phi1:528 var
R44751:44754 Coq.Init.Datatypes <> None constr
R44759:44762 VST.floyd.VSU <> phi1:528 var
prf 45548:45566 <> merge_specs_succeed
binder 45569:45572 <> phi1:531
binder 45574:45577 <> phi2:532
R45636:45645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45715:45720 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45750:45752 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45721:45739 VST.veric.seplog <> binary_intersection def
R45746:45749 VST.floyd.VSU <> phi2:532 var
R45741:45744 VST.floyd.VSU <> phi1:531 var
R45753:45756 Coq.Init.Datatypes <> Some constr
R45759:45769 VST.floyd.VSU <> merge_specs def
R45777:45780 Coq.Init.Datatypes <> Some constr
R45782:45785 VST.floyd.VSU <> phi2:532 var
R45771:45774 VST.floyd.VSU <> phi1:531 var
R45679:45681 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45646:45673 VST.veric.seplog <> callingconvention_of_funspec def
R45675:45678 VST.floyd.VSU <> phi1:531 var
R45682:45709 VST.veric.seplog <> callingconvention_of_funspec def
R45711:45714 VST.floyd.VSU <> phi2:532 var
R45610:45612 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45587:45604 VST.veric.seplog <> typesig_of_funspec def
R45606:45609 VST.floyd.VSU <> phi1:531 var
R45613:45630 VST.veric.seplog <> typesig_of_funspec def
R45632:45635 VST.floyd.VSU <> phi2:532 var
R45890:45896 VST.msl.Coqlib2 <> if_true thm
R45890:45896 VST.msl.Coqlib2 <> if_true thm
R45890:45896 VST.msl.Coqlib2 <> if_true thm
R45890:45896 VST.msl.Coqlib2 <> if_true thm
R45890:45896 VST.msl.Coqlib2 <> if_true thm
R45890:45896 VST.msl.Coqlib2 <> if_true thm
R45890:45896 VST.msl.Coqlib2 <> if_true thm
def 45925:45935 <> G_merge_aux
binder 45938:45938 <> f:533
R45950:45953 Coq.Init.Datatypes <> list ind
R45961:45963 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45956:45960 compcert.common.AST <> ident def
R45964:45970 VST.veric.mpred <> funspec ind
binder 45942:45943 <> l1:534
binder 45945:45946 <> l2:535
R45976:45979 Coq.Init.Datatypes <> list ind
R45987:45989 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45982:45986 compcert.common.AST <> ident def
R45990:45996 VST.veric.mpred <> funspec ind
R46003:46005 Coq.Lists.List <> map def
R46113:46114 VST.floyd.VSU <> l1:534 var
binder 46012:46012 <> x:536
R46023:46023 VST.floyd.VSU <> x:536 var
R46030:46030 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46032:46032 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46037:46037 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46062:46062 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46064:46065 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46087:46087 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46066:46066 VST.floyd.VSU <> f:533 var
R46074:46080 VST.veric.initial_world <> find_id def
R46084:46085 VST.floyd.VSU <> l2:535 var
prf 46124:46143 <> G_merge_aux_find_id1
binder 46146:46146 <> f:538
binder 46158:46159 <> l1:539
binder 46161:46162 <> l2:540
binder 46164:46164 <> i:541
binder 46166:46169 <> phi1:542
R46189:46191 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46177:46183 VST.veric.initial_world <> find_id def
R46187:46188 VST.floyd.VSU <> l1:539 var
R46185:46185 VST.floyd.VSU <> i:541 var
R46192:46195 Coq.Init.Datatypes <> Some constr
R46197:46200 VST.floyd.VSU <> phi1:542 var
binder 46173:46174 <> Hi:543
R46238:46240 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46206:46212 VST.veric.initial_world <> find_id def
R46218:46228 VST.floyd.VSU <> G_merge_aux def
R46235:46236 VST.floyd.VSU <> l2:540 var
R46232:46233 VST.floyd.VSU <> l1:539 var
R46230:46230 VST.floyd.VSU <> f:538 var
R46214:46214 VST.floyd.VSU <> i:541 var
R46241:46244 Coq.Init.Datatypes <> Some constr
R46247:46247 VST.floyd.VSU <> f:538 var
R46255:46261 VST.veric.initial_world <> find_id def
R46265:46266 VST.floyd.VSU <> l2:540 var
R46263:46263 VST.floyd.VSU <> i:541 var
R46249:46252 VST.floyd.VSU <> phi1:542 var
prf 46389:46408 <> G_merge_aux_find_id2
binder 46411:46411 <> f:544
binder 46423:46424 <> l1:545
binder 46426:46427 <> l2:546
binder 46429:46429 <> i:547
binder 46431:46433 <> phi:548
R46473:46475 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46441:46447 VST.veric.initial_world <> find_id def
R46453:46463 VST.floyd.VSU <> G_merge_aux def
R46470:46471 VST.floyd.VSU <> l2:546 var
R46467:46468 VST.floyd.VSU <> l1:545 var
R46465:46465 VST.floyd.VSU <> f:544 var
R46449:46449 VST.floyd.VSU <> i:547 var
R46476:46479 Coq.Init.Datatypes <> Some constr
R46481:46483 VST.floyd.VSU <> phi:548 var
binder 46437:46438 <> Hi:549
R46489:46495 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R46500:46501 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 46496:46499 <> phi1:550
R46526:46529 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R46514:46516 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46502:46508 VST.veric.initial_world <> find_id def
R46512:46513 VST.floyd.VSU <> l1:545 var
R46510:46510 VST.floyd.VSU <> i:547 var
R46517:46520 Coq.Init.Datatypes <> Some constr
R46522:46525 VST.floyd.VSU <> phi1:550 var
R46533:46535 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46530:46532 VST.floyd.VSU <> phi:548 var
R46536:46536 VST.floyd.VSU <> f:544 var
R46544:46550 VST.veric.initial_world <> find_id def
R46554:46555 VST.floyd.VSU <> l2:546 var
R46552:46552 VST.floyd.VSU <> i:547 var
R46538:46541 VST.floyd.VSU <> phi1:550 var
prf 46695:46714 <> G_merge_aux_find_id3
binder 46717:46717 <> f:551
binder 46729:46730 <> l1:552
binder 46732:46733 <> l2:553
binder 46735:46735 <> i:554
R46758:46762 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R46751:46753 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46739:46745 VST.veric.initial_world <> find_id def
R46749:46750 VST.floyd.VSU <> l1:552 var
R46747:46747 VST.floyd.VSU <> i:554 var
R46754:46757 Coq.Init.Datatypes <> None constr
R46795:46797 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46763:46769 VST.veric.initial_world <> find_id def
R46775:46785 VST.floyd.VSU <> G_merge_aux def
R46792:46793 VST.floyd.VSU <> l2:553 var
R46789:46790 VST.floyd.VSU <> l1:552 var
R46787:46787 VST.floyd.VSU <> f:551 var
R46771:46771 VST.floyd.VSU <> i:554 var
R46798:46801 Coq.Init.Datatypes <> None constr
prf 46949:46963 <> G_merge_aux_dom
binder 46966:46966 <> f:555
binder 46978:46979 <> l1:556
binder 46981:46982 <> l2:557
R47016:47018 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46986:46988 Coq.Lists.List <> map def
R46996:47006 VST.floyd.VSU <> G_merge_aux def
R47013:47014 VST.floyd.VSU <> l2:557 var
R47010:47011 VST.floyd.VSU <> l1:556 var
R47008:47008 VST.floyd.VSU <> f:555 var
R46990:46992 Coq.Init.Datatypes <> fst def
R47019:47021 Coq.Lists.List <> map def
R47027:47028 VST.floyd.VSU <> l1:556 var
R47023:47025 Coq.Init.Datatypes <> fst def
prf 47136:47152 <> G_merge_aux_consR
binder 47155:47155 <> f:558
binder 47167:47168 <> l1:559
binder 47170:47171 <> l2:560
binder 47173:47173 <> i:561
R47192:47194 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47180:47186 VST.veric.initial_world <> find_id def
R47190:47191 VST.floyd.VSU <> l1:559 var
R47188:47188 VST.floyd.VSU <> i:561 var
R47195:47198 Coq.Init.Datatypes <> None constr
binder 47177:47178 <> Hi:562
binder 47201:47204 <> phi2:563
R47245:47247 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47214:47224 VST.floyd.VSU <> G_merge_aux def
R47240:47241 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R47232:47232 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47234:47234 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47239:47239 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47233:47233 VST.floyd.VSU <> i:561 var
R47235:47238 VST.floyd.VSU <> phi2:563 var
R47242:47243 VST.floyd.VSU <> l2:560 var
R47228:47229 VST.floyd.VSU <> l1:559 var
R47226:47226 VST.floyd.VSU <> f:558 var
R47249:47259 VST.floyd.VSU <> G_merge_aux def
R47266:47267 VST.floyd.VSU <> l2:560 var
R47263:47264 VST.floyd.VSU <> l1:559 var
R47261:47261 VST.floyd.VSU <> f:558 var
R47361:47378 VST.veric.Memory <> EqDec_ident inst
R47361:47378 VST.veric.Memory <> EqDec_ident inst
R47414:47420 VST.msl.Coqlib2 <> if_true thm
R47414:47420 VST.msl.Coqlib2 <> if_true thm
R47414:47420 VST.msl.Coqlib2 <> if_true thm
R47414:47420 VST.msl.Coqlib2 <> if_true thm
R47466:47473 VST.msl.Coqlib2 <> if_false thm
R47466:47473 VST.msl.Coqlib2 <> if_false thm
R47466:47473 VST.msl.Coqlib2 <> if_false thm
R47466:47473 VST.msl.Coqlib2 <> if_false thm
prf 47549:47566 <> G_merge_aux_length
binder 47569:47569 <> f:564
binder 47581:47582 <> l1:565
binder 47584:47585 <> l2:566
R47618:47620 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47589:47594 Coq.Lists.List <> length syndef
R47598:47608 VST.floyd.VSU <> G_merge_aux def
R47615:47616 VST.floyd.VSU <> l2:566 var
R47612:47613 VST.floyd.VSU <> l1:565 var
R47610:47610 VST.floyd.VSU <> f:564 var
R47621:47626 Coq.Lists.List <> length syndef
R47628:47629 VST.floyd.VSU <> l1:565 var
prf 47737:47753 <> G_merge_aux_InDom
binder 47756:47756 <> f:567
binder 47760:47761 <> l1:568
binder 47763:47764 <> l2:569
binder 47766:47766 <> i:570
R47807:47811 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R47770:47771 Coq.Lists.List <> In def
R47776:47778 Coq.Lists.List <> map def
R47786:47796 VST.floyd.VSU <> G_merge_aux def
R47803:47804 VST.floyd.VSU <> l2:569 var
R47800:47801 VST.floyd.VSU <> l1:568 var
R47798:47798 VST.floyd.VSU <> f:567 var
R47780:47782 Coq.Init.Datatypes <> fst def
R47773:47773 VST.floyd.VSU <> i:570 var
R47812:47813 Coq.Lists.List <> In def
R47818:47820 Coq.Lists.List <> map def
R47826:47827 VST.floyd.VSU <> l1:568 var
R47822:47824 Coq.Init.Datatypes <> fst def
R47815:47815 VST.floyd.VSU <> i:570 var
R47853:47867 VST.floyd.VSU <> G_merge_aux_dom thm
R47853:47867 VST.floyd.VSU <> G_merge_aux_dom thm
R47853:47867 VST.floyd.VSU <> G_merge_aux_dom thm
def 47903:47909 <> G_merge
R47920:47923 Coq.Init.Datatypes <> list ind
R47931:47933 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R47926:47930 compcert.common.AST <> ident def
R47934:47940 VST.veric.mpred <> funspec ind
binder 47912:47913 <> l1:571
binder 47915:47916 <> l2:572
R47978:47984 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R47949:47959 VST.floyd.VSU <> G_merge_aux def
R47976:47977 VST.floyd.VSU <> l2:572 var
R47973:47974 VST.floyd.VSU <> l1:571 var
R47961:47971 VST.floyd.VSU <> merge_specs def
R47985:47990 Coq.Lists.List <> filter def
R48140:48141 VST.floyd.VSU <> l2:572 var
binder 47997:47997 <> x:573
R48008:48008 VST.floyd.VSU <> x:573 var
R48015:48015 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48017:48017 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48019:48019 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48030:48036 VST.veric.initial_world <> find_id def
R48040:48041 VST.floyd.VSU <> l1:571 var
R48098:48101 Coq.Init.Datatypes <> Some constr
R48110:48114 Coq.Init.Datatypes <> false constr
R48118:48121 Coq.Init.Datatypes <> None constr
R48126:48129 Coq.Init.Datatypes <> true constr
prf 48151:48174 <> G_merge_find_id_SomeSome
binder 48177:48178 <> l1:575
binder 48180:48181 <> l2:576
binder 48183:48183 <> i:577
binder 48185:48188 <> phi1:578
binder 48190:48193 <> phi2:579
R48229:48231 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48217:48223 VST.veric.initial_world <> find_id def
R48227:48228 VST.floyd.VSU <> l1:575 var
R48225:48225 VST.floyd.VSU <> i:577 var
R48232:48235 Coq.Init.Datatypes <> Some constr
R48237:48240 VST.floyd.VSU <> phi1:578 var
binder 48212:48214 <> Hi1:580
R48261:48263 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48249:48255 VST.veric.initial_world <> find_id def
R48259:48260 VST.floyd.VSU <> l2:576 var
R48257:48257 VST.floyd.VSU <> i:577 var
R48264:48267 Coq.Init.Datatypes <> Some constr
R48269:48272 VST.floyd.VSU <> phi2:579 var
binder 48244:48246 <> Hi2:581
R48489:48491 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48466:48483 VST.veric.seplog <> typesig_of_funspec def
R48485:48488 VST.floyd.VSU <> phi1:578 var
R48492:48509 VST.veric.seplog <> typesig_of_funspec def
R48511:48514 VST.floyd.VSU <> phi2:579 var
binder 48460:48463 <> Sigs:582
R48569:48571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48536:48563 VST.veric.seplog <> callingconvention_of_funspec def
R48565:48568 VST.floyd.VSU <> phi1:578 var
R48572:48599 VST.veric.seplog <> callingconvention_of_funspec def
R48601:48604 VST.floyd.VSU <> phi2:579 var
binder 48531:48533 <> CCs:583
R48614:48620 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R48624:48625 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 48621:48623 <> phi:584
R48666:48687 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R48655:48657 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48626:48644 VST.veric.seplog <> binary_intersection def
R48651:48654 VST.floyd.VSU <> phi2:579 var
R48646:48649 VST.floyd.VSU <> phi1:578 var
R48658:48661 Coq.Init.Datatypes <> Some constr
R48663:48665 VST.floyd.VSU <> phi:584 var
R48713:48715 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48688:48694 VST.veric.initial_world <> find_id def
R48699:48705 VST.floyd.VSU <> G_merge def
R48710:48711 VST.floyd.VSU <> l2:576 var
R48707:48708 VST.floyd.VSU <> l1:575 var
R48696:48696 VST.floyd.VSU <> i:577 var
R48716:48719 Coq.Init.Datatypes <> Some constr
R48721:48723 VST.floyd.VSU <> phi:584 var
R48757:48763 VST.floyd.VSU <> G_merge def
R48774:48789 VST.floyd.assoclists <> find_id_app_char thm
R48793:48812 VST.floyd.VSU <> G_merge_aux_find_id1 thm
R48774:48789 VST.floyd.assoclists <> find_id_app_char thm
R48774:48789 VST.floyd.assoclists <> find_id_app_char thm
R48793:48812 VST.floyd.VSU <> G_merge_aux_find_id1 thm
R48793:48812 VST.floyd.VSU <> G_merge_aux_find_id1 thm
R48836:48854 VST.floyd.VSU <> merge_specs_succeed thm
R48836:48854 VST.floyd.VSU <> merge_specs_succeed thm
R48836:48854 VST.floyd.VSU <> merge_specs_succeed thm
prf 48908:48931 <> G_merge_find_id_SomeNone
binder 48934:48935 <> l1:585
binder 48937:48938 <> l2:586
binder 48940:48940 <> i:587
binder 48942:48945 <> phi1:588
R48980:48982 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48968:48974 VST.veric.initial_world <> find_id def
R48978:48979 VST.floyd.VSU <> l1:585 var
R48976:48976 VST.floyd.VSU <> i:587 var
R48983:48986 Coq.Init.Datatypes <> Some constr
R48988:48991 VST.floyd.VSU <> phi1:588 var
binder 48963:48965 <> Hi1:589
R49012:49014 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49000:49006 VST.veric.initial_world <> find_id def
R49010:49011 VST.floyd.VSU <> l2:586 var
R49008:49008 VST.floyd.VSU <> i:587 var
R49015:49018 Coq.Init.Datatypes <> None constr
binder 48995:48997 <> Hi2:590
R49053:49055 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49028:49034 VST.veric.initial_world <> find_id def
R49039:49045 VST.floyd.VSU <> G_merge def
R49050:49051 VST.floyd.VSU <> l2:586 var
R49047:49048 VST.floyd.VSU <> l1:585 var
R49036:49036 VST.floyd.VSU <> i:587 var
R49056:49059 Coq.Init.Datatypes <> Some constr
R49061:49064 VST.floyd.VSU <> phi1:588 var
R49099:49105 VST.floyd.VSU <> G_merge def
R49116:49131 VST.floyd.assoclists <> find_id_app_char thm
R49135:49154 VST.floyd.VSU <> G_merge_aux_find_id1 thm
R49116:49131 VST.floyd.assoclists <> find_id_app_char thm
R49116:49131 VST.floyd.assoclists <> find_id_app_char thm
R49135:49154 VST.floyd.VSU <> G_merge_aux_find_id1 thm
R49135:49154 VST.floyd.VSU <> G_merge_aux_find_id1 thm
prf 49192:49215 <> G_merge_find_id_NoneSome
binder 49218:49219 <> l1:591
binder 49221:49222 <> l2:592
binder 49224:49224 <> i:593
binder 49226:49229 <> phi2:594
R49264:49266 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49252:49258 VST.veric.initial_world <> find_id def
R49262:49263 VST.floyd.VSU <> l1:591 var
R49260:49260 VST.floyd.VSU <> i:593 var
R49267:49270 Coq.Init.Datatypes <> None constr
binder 49247:49249 <> Hi1:595
R49291:49293 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49279:49285 VST.veric.initial_world <> find_id def
R49289:49290 VST.floyd.VSU <> l2:592 var
R49287:49287 VST.floyd.VSU <> i:593 var
R49294:49297 Coq.Init.Datatypes <> Some constr
R49299:49302 VST.floyd.VSU <> phi2:594 var
binder 49274:49276 <> Hi2:596
R49325:49336 compcert.lib.Coqlib <> list_norepet ind
R49339:49341 Coq.Lists.List <> map def
R49347:49348 VST.floyd.VSU <> l2:592 var
R49343:49345 Coq.Init.Datatypes <> fst def
binder 49319:49322 <> LNR2:597
R49384:49386 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49359:49365 VST.veric.initial_world <> find_id def
R49370:49376 VST.floyd.VSU <> G_merge def
R49381:49382 VST.floyd.VSU <> l2:592 var
R49378:49379 VST.floyd.VSU <> l1:591 var
R49367:49367 VST.floyd.VSU <> i:593 var
R49387:49390 Coq.Init.Datatypes <> Some constr
R49392:49395 VST.floyd.VSU <> phi2:594 var
R49433:49452 VST.floyd.VSU <> G_merge_aux_find_id3 thm
R49454:49464 VST.floyd.VSU <> merge_specs def
R49433:49452 VST.floyd.VSU <> G_merge_aux_find_id3 thm
R49454:49464 VST.floyd.VSU <> merge_specs def
R49494:49500 VST.floyd.VSU <> G_merge def
R49511:49526 VST.floyd.assoclists <> find_id_app_char thm
R49538:49556 VST.floyd.assoclists <> find_id_filter_char thm
R49511:49526 VST.floyd.assoclists <> find_id_app_char thm
R49511:49526 VST.floyd.assoclists <> find_id_app_char thm
R49538:49556 VST.floyd.assoclists <> find_id_filter_char thm
R49538:49556 VST.floyd.assoclists <> find_id_filter_char thm
R49538:49556 VST.floyd.assoclists <> find_id_filter_char thm
prf 49590:49613 <> G_merge_find_id_NoneNone
binder 49616:49617 <> l1:598
binder 49619:49620 <> l2:599
binder 49622:49622 <> i:600
R49657:49659 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49645:49651 VST.veric.initial_world <> find_id def
R49655:49656 VST.floyd.VSU <> l1:598 var
R49653:49653 VST.floyd.VSU <> i:600 var
R49660:49663 Coq.Init.Datatypes <> None constr
binder 49640:49642 <> Hi1:601
R49684:49686 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49672:49678 VST.veric.initial_world <> find_id def
R49682:49683 VST.floyd.VSU <> l2:599 var
R49680:49680 VST.floyd.VSU <> i:600 var
R49687:49690 Coq.Init.Datatypes <> None constr
binder 49667:49669 <> Hi2:602
R49713:49724 compcert.lib.Coqlib <> list_norepet ind
R49727:49729 Coq.Lists.List <> map def
R49735:49736 VST.floyd.VSU <> l2:599 var
R49731:49733 Coq.Init.Datatypes <> fst def
binder 49707:49710 <> LNR2:603
R49772:49774 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49747:49753 VST.veric.initial_world <> find_id def
R49758:49764 VST.floyd.VSU <> G_merge def
R49769:49770 VST.floyd.VSU <> l2:599 var
R49766:49767 VST.floyd.VSU <> l1:598 var
R49755:49755 VST.floyd.VSU <> i:600 var
R49775:49778 Coq.Init.Datatypes <> None constr
R49816:49835 VST.floyd.VSU <> G_merge_aux_find_id3 thm
R49837:49847 VST.floyd.VSU <> merge_specs def
R49816:49835 VST.floyd.VSU <> G_merge_aux_find_id3 thm
R49837:49847 VST.floyd.VSU <> merge_specs def
R49877:49883 VST.floyd.VSU <> G_merge def
R49894:49909 VST.floyd.assoclists <> find_id_app_char thm
R49921:49939 VST.floyd.assoclists <> find_id_filter_char thm
R49894:49909 VST.floyd.assoclists <> find_id_app_char thm
R49894:49909 VST.floyd.assoclists <> find_id_app_char thm
R49921:49939 VST.floyd.assoclists <> find_id_filter_char thm
R49921:49939 VST.floyd.assoclists <> find_id_filter_char thm
R49921:49939 VST.floyd.assoclists <> find_id_filter_char thm
prf 49968:49987 <> G_merge_find_id_None
binder 49990:49991 <> l1:604
binder 49993:49994 <> l2:605
binder 49996:49996 <> i:606
R50029:50031 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50004:50010 VST.veric.initial_world <> find_id def
R50015:50021 VST.floyd.VSU <> G_merge def
R50026:50027 VST.floyd.VSU <> l2:605 var
R50023:50024 VST.floyd.VSU <> l1:604 var
R50012:50012 VST.floyd.VSU <> i:606 var
R50032:50035 Coq.Init.Datatypes <> None constr
binder 50000:50001 <> Hi:607
R50057:50068 compcert.lib.Coqlib <> list_norepet ind
R50071:50073 Coq.Lists.List <> map def
R50079:50080 VST.floyd.VSU <> l2:605 var
R50075:50077 Coq.Init.Datatypes <> fst def
binder 50051:50054 <> LNR2:608
R50111:50117 VST.veric.initial_world <> find_id def
R50121:50122 VST.floyd.VSU <> l2:605 var
R50119:50119 VST.floyd.VSU <> i:606 var
R50097:50103 VST.veric.initial_world <> find_id def
R50107:50108 VST.floyd.VSU <> l1:604 var
R50105:50105 VST.floyd.VSU <> i:606 var
R50137:50140 Coq.Init.Datatypes <> None constr
R50143:50146 Coq.Init.Datatypes <> None constr
R50151:50154 Coq.Init.Logic <> True ind
R50164:50167 Coq.Init.Datatypes <> Some constr
R50175:50178 Coq.Init.Datatypes <> Some constr
R50188:50190 Coq.Init.Logic <> ::type_scope:'~'_x not
R50347:50347 Coq.Init.Logic <> ::type_scope:'~'_x not
R50240:50277 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R50214:50216 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50191:50208 VST.veric.seplog <> typesig_of_funspec def
R50217:50234 VST.veric.seplog <> typesig_of_funspec def
R50311:50313 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50278:50305 VST.veric.seplog <> callingconvention_of_funspec def
R50314:50341 VST.veric.seplog <> callingconvention_of_funspec def
R50365:50369 Coq.Init.Logic <> False ind
R50423:50429 VST.floyd.VSU <> G_merge def
R50446:50461 VST.floyd.assoclists <> find_id_app_char thm
R50446:50461 VST.floyd.assoclists <> find_id_app_char thm
R50446:50461 VST.floyd.assoclists <> find_id_app_char thm
R50483:50489 VST.veric.initial_world <> find_id def
R50483:50489 VST.veric.initial_world <> find_id def
R50558:50577 VST.floyd.VSU <> G_merge_aux_find_id1 thm
R50558:50577 VST.floyd.VSU <> G_merge_aux_find_id1 thm
R50558:50577 VST.floyd.VSU <> G_merge_aux_find_id1 thm
R50618:50637 VST.floyd.VSU <> G_merge_aux_find_id3 thm
R50639:50649 VST.floyd.VSU <> merge_specs def
R50618:50637 VST.floyd.VSU <> G_merge_aux_find_id3 thm
R50639:50649 VST.floyd.VSU <> merge_specs def
R50690:50708 VST.floyd.assoclists <> find_id_filter_char thm
R50690:50708 VST.floyd.assoclists <> find_id_filter_char thm
R50690:50708 VST.floyd.assoclists <> find_id_filter_char thm
R50746:50752 VST.veric.initial_world <> find_id def
R50746:50752 VST.veric.initial_world <> find_id def
prf 50798:50808 <> G_merge_dom
binder 50819:50820 <> l1:609
binder 50822:50823 <> l2:610
R50850:50859 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50827:50829 Coq.Lists.List <> map def
R50836:50842 VST.floyd.VSU <> G_merge def
R50847:50848 VST.floyd.VSU <> l2:610 var
R50844:50845 VST.floyd.VSU <> l1:609 var
R50831:50833 Coq.Init.Datatypes <> fst def
R50860:50862 Coq.Lists.List <> map def
R50871:50874 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R50869:50870 VST.floyd.VSU <> l1:609 var
R50875:50880 Coq.Lists.List <> filter def
R51030:51031 VST.floyd.VSU <> l2:610 var
binder 50887:50887 <> x:611
R50898:50898 VST.floyd.VSU <> x:611 var
R50905:50905 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50907:50907 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50909:50909 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50920:50926 VST.veric.initial_world <> find_id def
R50930:50931 VST.floyd.VSU <> l1:609 var
R50988:50991 Coq.Init.Datatypes <> Some constr
R51000:51004 Coq.Init.Datatypes <> false constr
R51008:51011 Coq.Init.Datatypes <> None constr
R51016:51019 Coq.Init.Datatypes <> true constr
R50864:50866 Coq.Init.Datatypes <> fst def
R51058:51064 VST.floyd.VSU <> G_merge def
R51085:51091 Coq.Lists.List <> map_app thm
R51085:51091 Coq.Lists.List <> map_app thm
R51085:51091 Coq.Lists.List <> map_app thm
R51085:51091 Coq.Lists.List <> map_app thm
R51102:51116 VST.floyd.VSU <> G_merge_aux_dom thm
R51102:51116 VST.floyd.VSU <> G_merge_aux_dom thm
R51102:51116 VST.floyd.VSU <> G_merge_aux_dom thm
prf 51140:51152 <> G_merge_InDom
binder 51155:51156 <> l1:613
binder 51158:51159 <> l2:614
binder 51161:51161 <> i:615
R51170:51181 compcert.lib.Coqlib <> list_norepet ind
R51184:51186 Coq.Lists.List <> map def
R51192:51193 VST.floyd.VSU <> l1:613 var
R51188:51190 Coq.Init.Datatypes <> fst def
binder 51165:51168 <> LNR1:616
R51235:51246 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R51205:51206 Coq.Lists.List <> In def
R51211:51213 Coq.Lists.List <> map def
R51220:51226 VST.floyd.VSU <> G_merge def
R51231:51232 VST.floyd.VSU <> l2:614 var
R51228:51229 VST.floyd.VSU <> l1:613 var
R51215:51217 Coq.Init.Datatypes <> fst def
R51208:51208 VST.floyd.VSU <> i:615 var
R51264:51268 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R51311:51311 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R51247:51248 Coq.Lists.List <> In def
R51253:51255 Coq.Lists.List <> map def
R51261:51262 VST.floyd.VSU <> l1:613 var
R51257:51259 Coq.Init.Datatypes <> fst def
R51250:51250 VST.floyd.VSU <> i:615 var
R51290:51293 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R51269:51271 Coq.Init.Logic <> ::type_scope:'~'_x not
R51289:51289 Coq.Init.Logic <> ::type_scope:'~'_x not
R51272:51273 Coq.Lists.List <> In def
R51278:51280 Coq.Lists.List <> map def
R51286:51287 VST.floyd.VSU <> l1:613 var
R51282:51284 Coq.Init.Datatypes <> fst def
R51275:51275 VST.floyd.VSU <> i:615 var
R51294:51295 Coq.Lists.List <> In def
R51300:51302 Coq.Lists.List <> map def
R51308:51309 VST.floyd.VSU <> l2:614 var
R51304:51306 Coq.Init.Datatypes <> fst def
R51297:51297 VST.floyd.VSU <> i:615 var
R51343:51353 VST.floyd.VSU <> G_merge_dom thm
R51343:51353 VST.floyd.VSU <> G_merge_dom thm
R51343:51353 VST.floyd.VSU <> G_merge_dom thm
R51366:51372 Coq.Lists.List <> map_app thm
R51366:51372 Coq.Lists.List <> map_app thm
R51366:51372 Coq.Lists.List <> map_app thm
R51398:51406 Coq.Lists.List <> in_app_or thm
R51398:51406 Coq.Lists.List <> in_app_or thm
R51457:51471 compcert.lib.Coqlib <> list_in_map_inv thm
R51457:51471 compcert.lib.Coqlib <> list_in_map_inv thm
R51537:51545 Coq.Lists.List <> filter_In thm
R51537:51545 Coq.Lists.List <> filter_In thm
R51592:51609 VST.floyd.assoclists <> In_map_fst_find_id thm
R51592:51609 VST.floyd.assoclists <> In_map_fst_find_id thm
R51681:51690 VST.veric.initial_world <> in_map_fst thm
R51681:51690 VST.veric.initial_world <> in_map_fst thm
R51715:51723 Coq.Lists.List <> in_or_app thm
R51715:51723 Coq.Lists.List <> in_or_app thm
R51789:51803 compcert.lib.Coqlib <> list_in_map_inv thm
R51789:51803 compcert.lib.Coqlib <> list_in_map_inv thm
R51872:51881 VST.veric.initial_world <> in_map_fst thm
R51872:51881 VST.veric.initial_world <> in_map_fst thm
R51890:51898 Coq.Lists.List <> filter_In thm
R51890:51898 Coq.Lists.List <> filter_In thm
R51933:51939 VST.veric.initial_world <> find_id def
R51933:51939 VST.veric.initial_world <> find_id def
R52015:52032 VST.veric.initial_world <> find_id_In_map_fst thm
R52015:52032 VST.veric.initial_world <> find_id_In_map_fst thm
prf 52071:52090 <> G_merge_find_id_Some
binder 52101:52102 <> l1:617
binder 52104:52105 <> l2:618
binder 52107:52107 <> i:619
binder 52109:52111 <> phi:620
R52144:52146 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52119:52125 VST.veric.initial_world <> find_id def
R52130:52136 VST.floyd.VSU <> G_merge def
R52141:52142 VST.floyd.VSU <> l2:618 var
R52138:52139 VST.floyd.VSU <> l1:617 var
R52127:52127 VST.floyd.VSU <> i:619 var
R52147:52150 Coq.Init.Datatypes <> Some constr
R52152:52154 VST.floyd.VSU <> phi:620 var
binder 52115:52116 <> Hi:621
R52165:52176 compcert.lib.Coqlib <> list_norepet ind
R52179:52181 Coq.Lists.List <> map def
R52187:52188 VST.floyd.VSU <> l2:618 var
R52183:52185 Coq.Init.Datatypes <> fst def
binder 52159:52162 <> LNR2:622
R52201:52207 VST.veric.initial_world <> find_id def
R52211:52212 VST.floyd.VSU <> l1:617 var
R52209:52209 VST.floyd.VSU <> i:619 var
R52224:52227 Coq.Init.Datatypes <> Some constr
R52240:52242 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52237:52239 VST.floyd.VSU <> phi:620 var
R52243:52253 VST.floyd.VSU <> merge_specs def
R52261:52267 VST.veric.initial_world <> find_id def
R52271:52272 VST.floyd.VSU <> l2:618 var
R52269:52269 VST.floyd.VSU <> i:619 var
R52279:52282 Coq.Init.Datatypes <> None constr
R52299:52301 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52287:52293 VST.veric.initial_world <> find_id def
R52297:52298 VST.floyd.VSU <> l2:618 var
R52295:52295 VST.floyd.VSU <> i:619 var
R52302:52305 Coq.Init.Datatypes <> Some constr
R52307:52309 VST.floyd.VSU <> phi:620 var
R52342:52348 VST.floyd.VSU <> G_merge def
R52365:52380 VST.floyd.assoclists <> find_id_app_char thm
R52383:52401 VST.floyd.assoclists <> find_id_filter_char thm
R52365:52380 VST.floyd.assoclists <> find_id_app_char thm
R52365:52380 VST.floyd.assoclists <> find_id_app_char thm
R52383:52401 VST.floyd.assoclists <> find_id_filter_char thm
R52383:52401 VST.floyd.assoclists <> find_id_filter_char thm
R52383:52401 VST.floyd.assoclists <> find_id_filter_char thm
R52431:52437 VST.veric.initial_world <> find_id def
R52442:52452 VST.floyd.VSU <> G_merge_aux def
R52431:52437 VST.veric.initial_world <> find_id def
R52442:52452 VST.floyd.VSU <> G_merge_aux def
R52514:52533 VST.floyd.VSU <> G_merge_aux_find_id2 thm
R52514:52533 VST.floyd.VSU <> G_merge_aux_find_id2 thm
R52605:52624 VST.floyd.VSU <> G_merge_aux_find_id3 thm
R52605:52624 VST.floyd.VSU <> G_merge_aux_find_id3 thm
R52681:52687 VST.veric.initial_world <> find_id def
R52681:52687 VST.veric.initial_world <> find_id def
prf 52742:52754 <> G_merge_nil_l
binder 52757:52757 <> G:623
R52774:52776 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52761:52767 VST.floyd.VSU <> G_merge def
R52773:52773 VST.floyd.VSU <> G:623 var
R52769:52771 Coq.Init.Datatypes <> nil constr
R52777:52777 VST.floyd.VSU <> G:623 var
R52848:52854 VST.floyd.VSU <> G_merge def
prf 52908:52920 <> G_merge_nil_r
binder 52923:52923 <> G:624
R52940:52942 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52927:52933 VST.floyd.VSU <> G_merge def
R52937:52939 Coq.Init.Datatypes <> nil constr
R52935:52935 VST.floyd.VSU <> G:624 var
R52943:52943 VST.floyd.VSU <> G:624 var
R53014:53020 VST.floyd.VSU <> G_merge def
prf 53074:53092 <> G_merge_cons_l_None
binder 53095:53095 <> i:625
binder 53097:53100 <> phi1:626
binder 53102:53103 <> l1:627
binder 53105:53106 <> l2:628
R53115:53126 compcert.lib.Coqlib <> list_norepet ind
R53129:53131 Coq.Lists.List <> map def
R53146:53147 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R53138:53138 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53140:53140 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53145:53145 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53139:53139 VST.floyd.VSU <> i:625 var
R53141:53144 VST.floyd.VSU <> phi1:626 var
R53148:53149 VST.floyd.VSU <> l1:627 var
R53133:53135 Coq.Init.Datatypes <> fst def
binder 53110:53112 <> LNR:629
R53177:53179 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53165:53171 VST.veric.initial_world <> find_id def
R53175:53176 VST.floyd.VSU <> l2:628 var
R53173:53173 VST.floyd.VSU <> i:625 var
R53180:53183 Coq.Init.Datatypes <> None constr
binder 53161:53162 <> Hi:630
R53218:53226 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53193:53199 VST.floyd.VSU <> G_merge def
R53216:53217 VST.floyd.VSU <> l2:628 var
R53210:53211 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R53202:53202 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53204:53204 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53209:53209 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53203:53203 VST.floyd.VSU <> i:625 var
R53205:53208 VST.floyd.VSU <> phi1:626 var
R53212:53213 VST.floyd.VSU <> l1:627 var
R53235:53238 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R53227:53227 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53229:53229 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53234:53234 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53228:53228 VST.floyd.VSU <> i:625 var
R53230:53233 VST.floyd.VSU <> phi1:626 var
R53239:53245 VST.floyd.VSU <> G_merge def
R53251:53256 Coq.Lists.List <> filter def
R53295:53296 VST.floyd.VSU <> l2:628 var
binder 53263:53263 <> x:631
R53268:53271 Coq.Init.Datatypes <> negb def
R53274:53281 compcert.common.AST <> ident_eq def
R53286:53288 Coq.Init.Datatypes <> fst def
R53290:53290 VST.floyd.VSU <> x:631 var
R53283:53283 VST.floyd.VSU <> i:625 var
R53247:53248 VST.floyd.VSU <> l1:627 var
R53325:53331 VST.floyd.VSU <> G_merge def
R53353:53365 VST.floyd.assoclists <> filter_filter thm
R53353:53365 VST.floyd.assoclists <> filter_filter thm
R53353:53365 VST.floyd.assoclists <> filter_filter thm
R53475:53482 compcert.common.AST <> ident_eq def
R53475:53482 compcert.common.AST <> ident_eq def
R53518:53524 VST.msl.Coqlib2 <> if_true thm
R53518:53524 VST.msl.Coqlib2 <> if_true thm
R53518:53524 VST.msl.Coqlib2 <> if_true thm
R53518:53524 VST.msl.Coqlib2 <> if_true thm
R53572:53579 VST.msl.Coqlib2 <> if_false thm
R53572:53579 VST.msl.Coqlib2 <> if_false thm
R53572:53579 VST.msl.Coqlib2 <> if_false thm
R53705:53712 compcert.common.AST <> ident_eq def
R53705:53712 compcert.common.AST <> ident_eq def
R53746:53761 VST.floyd.assoclists <> find_id_None_iff thm
R53746:53761 VST.floyd.assoclists <> find_id_None_iff thm
R53782:53788 VST.msl.Coqlib2 <> if_true thm
R53782:53788 VST.msl.Coqlib2 <> if_true thm
R53782:53788 VST.msl.Coqlib2 <> if_true thm
R53782:53788 VST.msl.Coqlib2 <> if_true thm
R53814:53821 VST.msl.Coqlib2 <> if_false thm
R53824:53834 Coq.Bool.Bool <> andb_true_r thm
R53814:53821 VST.msl.Coqlib2 <> if_false thm
R53814:53821 VST.msl.Coqlib2 <> if_false thm
R53814:53821 VST.msl.Coqlib2 <> if_false thm
R53824:53834 Coq.Bool.Bool <> andb_true_r thm
R53824:53834 Coq.Bool.Bool <> andb_true_r thm
prf 53892:53910 <> G_merge_cons_l_Some
binder 53913:53913 <> i:632
binder 53915:53918 <> phi1:633
binder 53920:53921 <> l2:634
binder 53923:53926 <> phi2:635
binder 53929:53930 <> l1:636
R53949:53951 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53937:53943 VST.veric.initial_world <> find_id def
R53947:53948 VST.floyd.VSU <> l2:634 var
R53945:53945 VST.floyd.VSU <> i:632 var
R53952:53955 Coq.Init.Datatypes <> Some constr
R53957:53960 VST.floyd.VSU <> phi2:635 var
binder 53933:53934 <> Hi:637
R53998:54000 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53975:53992 VST.veric.seplog <> typesig_of_funspec def
R53994:53997 VST.floyd.VSU <> phi1:633 var
R54001:54018 VST.veric.seplog <> typesig_of_funspec def
R54020:54023 VST.floyd.VSU <> phi2:635 var
binder 53970:53972 <> SIG:638
R54165:54167 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54132:54159 VST.veric.seplog <> callingconvention_of_funspec def
R54161:54164 VST.floyd.VSU <> phi1:633 var
R54168:54195 VST.veric.seplog <> callingconvention_of_funspec def
R54197:54200 VST.floyd.VSU <> phi2:635 var
binder 54128:54129 <> CC:639
R54215:54226 compcert.lib.Coqlib <> list_norepet ind
R54229:54231 Coq.Lists.List <> map def
R54246:54247 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R54238:54238 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54240:54240 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54245:54245 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54239:54239 VST.floyd.VSU <> i:632 var
R54241:54244 VST.floyd.VSU <> phi1:633 var
R54248:54249 VST.floyd.VSU <> l1:636 var
R54233:54235 Coq.Init.Datatypes <> fst def
binder 54210:54212 <> LNR:640
R54267:54278 compcert.lib.Coqlib <> list_norepet ind
R54281:54283 Coq.Lists.List <> map def
R54289:54290 VST.floyd.VSU <> l2:634 var
R54285:54287 Coq.Init.Datatypes <> fst def
binder 54261:54264 <> LNR2:641
R54301:54307 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R54311:54312 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 54308:54310 <> phi:642
R54353:54362 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R54342:54344 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54313:54331 VST.veric.seplog <> binary_intersection def
R54338:54341 VST.floyd.VSU <> phi2:635 var
R54333:54336 VST.floyd.VSU <> phi1:633 var
R54345:54348 Coq.Init.Datatypes <> Some constr
R54350:54352 VST.floyd.VSU <> phi:642 var
R54388:54396 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54363:54369 VST.floyd.VSU <> G_merge def
R54386:54387 VST.floyd.VSU <> l2:634 var
R54380:54381 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R54372:54372 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54374:54374 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54379:54379 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54373:54373 VST.floyd.VSU <> i:632 var
R54375:54378 VST.floyd.VSU <> phi1:633 var
R54382:54383 VST.floyd.VSU <> l1:636 var
R54404:54407 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R54397:54397 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54399:54399 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54403:54403 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54398:54398 VST.floyd.VSU <> i:632 var
R54400:54402 VST.floyd.VSU <> phi:642 var
R54408:54414 VST.floyd.VSU <> G_merge def
R54420:54425 Coq.Lists.List <> filter def
R54464:54465 VST.floyd.VSU <> l2:634 var
binder 54432:54432 <> x:643
R54437:54440 Coq.Init.Datatypes <> negb def
R54443:54450 compcert.common.AST <> ident_eq def
R54455:54457 Coq.Init.Datatypes <> fst def
R54459:54459 VST.floyd.VSU <> x:643 var
R54452:54452 VST.floyd.VSU <> i:632 var
R54416:54417 VST.floyd.VSU <> l1:636 var
R54491:54509 VST.floyd.VSU <> merge_specs_succeed thm
R54491:54509 VST.floyd.VSU <> merge_specs_succeed thm
R54586:54592 VST.floyd.VSU <> G_merge def
R54617:54629 VST.floyd.assoclists <> filter_filter thm
R54617:54629 VST.floyd.assoclists <> filter_filter thm
R54617:54629 VST.floyd.assoclists <> filter_filter thm
R54739:54746 compcert.common.AST <> ident_eq def
R54739:54746 compcert.common.AST <> ident_eq def
R54782:54788 VST.msl.Coqlib2 <> if_true thm
R54782:54788 VST.msl.Coqlib2 <> if_true thm
R54782:54788 VST.msl.Coqlib2 <> if_true thm
R54782:54788 VST.msl.Coqlib2 <> if_true thm
R54810:54817 compcert.common.AST <> ident_eq def
R54810:54817 compcert.common.AST <> ident_eq def
R54861:54868 VST.msl.Coqlib2 <> if_false thm
R54861:54868 VST.msl.Coqlib2 <> if_false thm
R54861:54868 VST.msl.Coqlib2 <> if_false thm
R54892:54899 compcert.common.AST <> ident_eq def
R54892:54899 compcert.common.AST <> ident_eq def
R54995:55002 compcert.common.AST <> ident_eq def
R54995:55002 compcert.common.AST <> ident_eq def
R55059:55065 VST.veric.initial_world <> find_id def
R55059:55065 VST.veric.initial_world <> find_id def
R55121:55138 VST.veric.initial_world <> find_id_In_map_fst thm
R55121:55138 VST.veric.initial_world <> find_id_In_map_fst thm
R55214:55229 VST.floyd.assoclists <> find_id_None_iff thm
R55214:55229 VST.floyd.assoclists <> find_id_None_iff thm
R55295:55308 VST.floyd.assoclists <> app_inj_length thm
R55295:55308 VST.floyd.assoclists <> app_inj_length thm
R55350:55367 VST.floyd.VSU <> G_merge_aux_length thm
R55350:55367 VST.floyd.VSU <> G_merge_aux_length thm
R55350:55367 VST.floyd.VSU <> G_merge_aux_length thm
R55350:55367 VST.floyd.VSU <> G_merge_aux_length thm
R55391:55409 VST.floyd.assoclists <> find_id_filter_char thm
R55391:55409 VST.floyd.assoclists <> find_id_filter_char thm
R55391:55409 VST.floyd.assoclists <> find_id_filter_char thm
R55459:55465 VST.veric.initial_world <> find_id def
R55459:55465 VST.veric.initial_world <> find_id def
R55545:55552 compcert.common.AST <> ident_eq def
R55545:55552 compcert.common.AST <> ident_eq def
R55643:55658 VST.floyd.assoclists <> find_id_in_split thm
R55643:55658 VST.floyd.assoclists <> find_id_in_split thm
R55738:55747 VST.floyd.assoclists <> filter_app thm
R55738:55747 VST.floyd.assoclists <> filter_app thm
R55738:55747 VST.floyd.assoclists <> filter_app thm
R55738:55747 VST.floyd.assoclists <> filter_app thm
R55738:55747 VST.floyd.assoclists <> filter_app thm
R55772:55781 VST.floyd.assoclists <> filter_app thm
R55772:55781 VST.floyd.assoclists <> filter_app thm
R55772:55781 VST.floyd.assoclists <> filter_app thm
R55772:55781 VST.floyd.assoclists <> filter_app thm
R55772:55781 VST.floyd.assoclists <> filter_app thm
R55817:55823 VST.msl.Coqlib2 <> if_true thm
R55817:55823 VST.msl.Coqlib2 <> if_true thm
R55817:55823 VST.msl.Coqlib2 <> if_true thm
R55817:55823 VST.msl.Coqlib2 <> if_true thm
R55855:55872 VST.veric.Memory <> EqDec_ident inst
R55889:55896 compcert.common.AST <> ident_eq def
R55889:55896 compcert.common.AST <> ident_eq def
R55951:55958 compcert.common.AST <> ident_eq def
R55951:55958 compcert.common.AST <> ident_eq def
R56096:56103 compcert.common.AST <> ident_eq def
R56096:56103 compcert.common.AST <> ident_eq def
R56151:56158 VST.msl.Coqlib2 <> if_false thm
R56151:56158 VST.msl.Coqlib2 <> if_false thm
R56151:56158 VST.msl.Coqlib2 <> if_false thm
R56151:56158 VST.msl.Coqlib2 <> if_false thm
R56194:56201 compcert.common.AST <> ident_eq def
R56194:56201 compcert.common.AST <> ident_eq def
R56256:56263 compcert.common.AST <> ident_eq def
R56256:56263 compcert.common.AST <> ident_eq def
R56298:56305 compcert.common.AST <> ident_eq def
R56298:56305 compcert.common.AST <> ident_eq def
R56346:56356 Coq.Bool.Bool <> andb_true_r thm
R56346:56356 Coq.Bool.Bool <> andb_true_r thm
R56346:56356 Coq.Bool.Bool <> andb_true_r thm
R56446:56463 VST.floyd.assoclists <> negb_ident_eq_symm thm
R56446:56463 VST.floyd.assoclists <> negb_ident_eq_symm thm
R56446:56463 VST.floyd.assoclists <> negb_ident_eq_symm thm
R56482:56489 compcert.common.AST <> ident_eq def
R56482:56489 compcert.common.AST <> ident_eq def
R56527:56534 VST.msl.Coqlib2 <> if_false thm
R56527:56534 VST.msl.Coqlib2 <> if_false thm
R56527:56534 VST.msl.Coqlib2 <> if_false thm
R56527:56534 VST.msl.Coqlib2 <> if_false thm
R56585:56595 Coq.Bool.Bool <> andb_true_r thm
R56585:56595 Coq.Bool.Bool <> andb_true_r thm
R56585:56595 Coq.Bool.Bool <> andb_true_r thm
prf 56619:56639 <> subsumespec_G_merge_l
binder 56641:56642 <> l1:644
binder 56644:56645 <> l2:645
binder 56647:56647 <> i:646
binder 56667:56670 <> phi1:647
binder 56672:56675 <> phi2:648
R56702:56705 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56730:56737 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56787:56873 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R56761:56763 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56738:56755 VST.veric.seplog <> typesig_of_funspec def
R56757:56760 VST.floyd.VSU <> phi1:647 var
R56764:56781 VST.veric.seplog <> typesig_of_funspec def
R56783:56786 VST.floyd.VSU <> phi2:648 var
R56907:56909 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56874:56901 VST.veric.seplog <> callingconvention_of_funspec def
R56903:56906 VST.floyd.VSU <> phi1:647 var
R56910:56937 VST.veric.seplog <> callingconvention_of_funspec def
R56939:56942 VST.floyd.VSU <> phi2:648 var
R56718:56720 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56706:56712 VST.veric.initial_world <> find_id def
R56716:56717 VST.floyd.VSU <> l2:645 var
R56714:56714 VST.floyd.VSU <> i:646 var
R56721:56724 Coq.Init.Datatypes <> Some constr
R56726:56729 VST.floyd.VSU <> phi2:648 var
R56690:56692 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56678:56684 VST.veric.initial_world <> find_id def
R56688:56689 VST.floyd.VSU <> l1:644 var
R56686:56686 VST.floyd.VSU <> i:646 var
R56693:56696 Coq.Init.Datatypes <> Some constr
R56698:56701 VST.floyd.VSU <> phi1:647 var
binder 56652:56657 <> SigsCC:649
R56988:56998 VST.veric.expr <> subsumespec def
R57016:57022 VST.veric.initial_world <> find_id def
R57027:57033 VST.floyd.VSU <> G_merge def
R57038:57039 VST.floyd.VSU <> l2:645 var
R57035:57036 VST.floyd.VSU <> l1:644 var
R57024:57024 VST.floyd.VSU <> i:646 var
R57001:57007 VST.veric.initial_world <> find_id def
R57011:57012 VST.floyd.VSU <> l1:644 var
R57009:57009 VST.floyd.VSU <> i:646 var
R57068:57074 VST.veric.initial_world <> find_id def
R57068:57074 VST.veric.initial_world <> find_id def
R57118:57124 VST.veric.initial_world <> find_id def
R57118:57124 VST.veric.initial_world <> find_id def
R57231:57254 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R57231:57254 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R57382:57399 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R57382:57399 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R57408:57429 VST.veric.seplog <> binaryintersection_sub thm
R57408:57429 VST.veric.seplog <> binaryintersection_sub thm
R57459:57482 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R57459:57482 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R57459:57482 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R57535:57553 VST.veric.seplog <> funspec_sub_si_refl thm
R57535:57553 VST.veric.seplog <> funspec_sub_si_refl thm
prf 57568:57588 <> subsumespec_G_merge_r
binder 57590:57591 <> l1:650
binder 57593:57594 <> l2:651
binder 57596:57596 <> i:652
binder 57616:57619 <> phi1:653
binder 57621:57624 <> phi2:654
R57651:57654 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57679:57686 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57736:57743 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R57710:57712 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57687:57704 VST.veric.seplog <> typesig_of_funspec def
R57706:57709 VST.floyd.VSU <> phi1:653 var
R57713:57730 VST.veric.seplog <> typesig_of_funspec def
R57732:57735 VST.floyd.VSU <> phi2:654 var
R57777:57779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57744:57771 VST.veric.seplog <> callingconvention_of_funspec def
R57773:57776 VST.floyd.VSU <> phi1:653 var
R57780:57807 VST.veric.seplog <> callingconvention_of_funspec def
R57809:57812 VST.floyd.VSU <> phi2:654 var
R57667:57669 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57655:57661 VST.veric.initial_world <> find_id def
R57665:57666 VST.floyd.VSU <> l2:651 var
R57663:57663 VST.floyd.VSU <> i:652 var
R57670:57673 Coq.Init.Datatypes <> Some constr
R57675:57678 VST.floyd.VSU <> phi2:654 var
R57639:57641 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57627:57633 VST.veric.initial_world <> find_id def
R57637:57638 VST.floyd.VSU <> l1:650 var
R57635:57635 VST.floyd.VSU <> i:652 var
R57642:57645 Coq.Init.Datatypes <> Some constr
R57647:57650 VST.floyd.VSU <> phi1:653 var
binder 57601:57606 <> SigsCC:655
R57823:57834 compcert.lib.Coqlib <> list_norepet ind
R57837:57839 Coq.Lists.List <> map def
R57845:57846 VST.floyd.VSU <> l2:651 var
R57841:57843 Coq.Init.Datatypes <> fst def
binder 57818:57820 <> LNR:656
R57852:57862 VST.veric.expr <> subsumespec def
R57880:57886 VST.veric.initial_world <> find_id def
R57891:57897 VST.floyd.VSU <> G_merge def
R57902:57903 VST.floyd.VSU <> l2:651 var
R57899:57900 VST.floyd.VSU <> l1:650 var
R57888:57888 VST.floyd.VSU <> i:652 var
R57865:57871 VST.veric.initial_world <> find_id def
R57875:57876 VST.floyd.VSU <> l2:651 var
R57873:57873 VST.floyd.VSU <> i:652 var
R57932:57938 VST.veric.initial_world <> find_id def
R57932:57938 VST.veric.initial_world <> find_id def
R57982:57988 VST.veric.initial_world <> find_id def
R57982:57988 VST.veric.initial_world <> find_id def
R58095:58118 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R58095:58118 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R58244:58261 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R58244:58261 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R58270:58291 VST.veric.seplog <> binaryintersection_sub thm
R58270:58291 VST.veric.seplog <> binaryintersection_sub thm
R58321:58344 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R58321:58344 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R58321:58344 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R58406:58424 VST.veric.seplog <> funspec_sub_si_refl thm
R58406:58424 VST.veric.seplog <> funspec_sub_si_refl thm
prf 58441:58454 <> G_merge_None_l
binder 58456:58457 <> l1:657
binder 58459:58460 <> l2:658
binder 58462:58462 <> i:659
R58484:58487 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58513:58516 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58542:58544 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58517:58523 VST.veric.initial_world <> find_id def
R58528:58534 VST.floyd.VSU <> G_merge def
R58539:58540 VST.floyd.VSU <> l2:658 var
R58536:58537 VST.floyd.VSU <> l1:657 var
R58525:58525 VST.floyd.VSU <> i:659 var
R58545:58551 VST.veric.initial_world <> find_id def
R58555:58556 VST.floyd.VSU <> l2:658 var
R58553:58553 VST.floyd.VSU <> i:659 var
R58488:58499 compcert.lib.Coqlib <> list_norepet ind
R58502:58504 Coq.Lists.List <> map def
R58510:58511 VST.floyd.VSU <> l2:658 var
R58506:58508 Coq.Init.Datatypes <> fst def
R58477:58479 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58465:58471 VST.veric.initial_world <> find_id def
R58475:58476 VST.floyd.VSU <> l1:657 var
R58473:58473 VST.floyd.VSU <> i:659 var
R58480:58483 Coq.Init.Datatypes <> None constr
R58586:58592 VST.veric.initial_world <> find_id def
R58586:58592 VST.veric.initial_world <> find_id def
R58642:58665 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R58642:58665 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R58642:58665 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R58642:58665 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R58696:58719 VST.floyd.VSU <> G_merge_find_id_NoneNone thm
R58696:58719 VST.floyd.VSU <> G_merge_find_id_NoneNone thm
R58696:58719 VST.floyd.VSU <> G_merge_find_id_NoneNone thm
R58696:58719 VST.floyd.VSU <> G_merge_find_id_NoneNone thm
prf 58751:58764 <> G_merge_None_r
binder 58766:58767 <> l1:660
binder 58769:58770 <> l2:661
binder 58772:58772 <> i:662
R58794:58797 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58823:58826 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58852:58854 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58827:58833 VST.veric.initial_world <> find_id def
R58838:58844 VST.floyd.VSU <> G_merge def
R58849:58850 VST.floyd.VSU <> l2:661 var
R58846:58847 VST.floyd.VSU <> l1:660 var
R58835:58835 VST.floyd.VSU <> i:662 var
R58855:58861 VST.veric.initial_world <> find_id def
R58865:58866 VST.floyd.VSU <> l1:660 var
R58863:58863 VST.floyd.VSU <> i:662 var
R58798:58809 compcert.lib.Coqlib <> list_norepet ind
R58812:58814 Coq.Lists.List <> map def
R58820:58821 VST.floyd.VSU <> l2:661 var
R58816:58818 Coq.Init.Datatypes <> fst def
R58787:58789 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58775:58781 VST.veric.initial_world <> find_id def
R58785:58786 VST.floyd.VSU <> l2:661 var
R58783:58783 VST.floyd.VSU <> i:662 var
R58790:58793 Coq.Init.Datatypes <> None constr
R58896:58902 VST.veric.initial_world <> find_id def
R58896:58902 VST.veric.initial_world <> find_id def
R58952:58975 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R58952:58975 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R58952:58975 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R59006:59029 VST.floyd.VSU <> G_merge_find_id_NoneNone thm
R59006:59029 VST.floyd.VSU <> G_merge_find_id_NoneNone thm
R59006:59029 VST.floyd.VSU <> G_merge_find_id_NoneNone thm
R59006:59029 VST.floyd.VSU <> G_merge_find_id_NoneNone thm
def 59066:59084 <> signature_of_fundef
R59091:59103 compcert.cfrontend.Ctypes <> fundef ind
R59105:59112 compcert.cfrontend.Clight <> function rec
binder 59087:59088 <> fd:663
R59115:59123 compcert.common.AST <> signature rec
R59134:59135 VST.floyd.VSU <> fd:663 var
R59146:59153 compcert.cfrontend.Ctypes <> Internal constr
R59163:59170 compcert.common.AST <> sig_args proj
R59163:59170 compcert.common.AST <> sig_args proj
R59237:59243 compcert.common.AST <> sig_res proj
R59300:59305 compcert.common.AST <> sig_cc proj
R59310:59320 compcert.cfrontend.Clight <> fn_callconv proj
R59248:59262 compcert.cfrontend.Ctypes <> rettype_of_type def
R59265:59273 compcert.cfrontend.Clight <> fn_return proj
R59175:59177 Coq.Lists.List <> map def
R59192:59194 Coq.Lists.List <> map def
R59201:59209 compcert.cfrontend.Clight <> fn_params proj
R59196:59198 Coq.Init.Datatypes <> snd def
R59179:59189 compcert.cfrontend.Ctypes <> typ_of_type def
R59331:59338 compcert.cfrontend.Ctypes <> External constr
R59356:59372 compcert.cfrontend.Ctypes <> signature_of_type def
def 59402:59414 <> Fundefs_match
binder 59416:59417 <> p1:665
binder 59419:59420 <> p2:666
R59441:59448 VST.veric.mpred <> funspecs def
binder 59423:59430 <> Imports1:667
binder 59432:59439 <> Imports2:668
binder 59473:59473 <> i:669
binder 59475:59477 <> fd1:670
binder 59479:59481 <> fd2:671
R59545:59573 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59610:59638 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59650:59652 VST.floyd.VSU <> fd2:671 var
R59645:59647 VST.floyd.VSU <> fd1:670 var
R59686:59693 compcert.cfrontend.Ctypes <> Internal constr
R59698:59705 compcert.cfrontend.Ctypes <> Internal constr
R59715:59715 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59712:59714 VST.floyd.VSU <> fd1:670 var
R59716:59718 VST.floyd.VSU <> fd2:671 var
R59747:59754 compcert.cfrontend.Ctypes <> Internal constr
R59759:59766 compcert.cfrontend.Ctypes <> External constr
R59828:59890 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R59802:59804 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59779:59797 VST.floyd.VSU <> signature_of_fundef def
R59799:59801 VST.floyd.VSU <> fd1:670 var
R59805:59823 VST.floyd.VSU <> signature_of_fundef def
R59825:59827 VST.floyd.VSU <> fd2:671 var
R59891:59897 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R59902:59903 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 59898:59901 <> phi2:674
R59922:59924 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59904:59910 VST.veric.initial_world <> find_id def
R59914:59921 VST.floyd.VSU <> Imports2:668 var
R59912:59912 VST.floyd.VSU <> i:669 var
R59925:59928 Coq.Init.Datatypes <> Some constr
R59930:59933 VST.floyd.VSU <> phi2:674 var
R59962:59969 compcert.cfrontend.Ctypes <> External constr
R59980:59987 compcert.cfrontend.Ctypes <> Internal constr
R60043:60105 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R60017:60019 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59994:60012 VST.floyd.VSU <> signature_of_fundef def
R60014:60016 VST.floyd.VSU <> fd1:670 var
R60020:60038 VST.floyd.VSU <> signature_of_fundef def
R60040:60042 VST.floyd.VSU <> fd2:671 var
R60106:60112 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R60117:60118 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 60113:60116 <> phi1:675
R60137:60139 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60119:60125 VST.veric.initial_world <> find_id def
R60129:60136 VST.floyd.VSU <> Imports1:667 var
R60127:60127 VST.floyd.VSU <> i:669 var
R60140:60143 Coq.Init.Datatypes <> Some constr
R60145:60148 VST.floyd.VSU <> phi1:675 var
R60177:60184 compcert.cfrontend.Ctypes <> External constr
R60196:60203 compcert.cfrontend.Ctypes <> External constr
R60220:60220 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60217:60219 VST.floyd.VSU <> fd1:670 var
R60221:60223 VST.floyd.VSU <> fd2:671 var
R59599:59601 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59574:59580 VST.veric.initial_world <> find_id def
R59585:59594 VST.veric.Clight_initial_world <> prog_funct syndef
R59596:59597 VST.floyd.VSU <> p2:666 var
R59582:59582 VST.floyd.VSU <> i:669 var
R59602:59605 Coq.Init.Datatypes <> Some constr
R59607:59609 VST.floyd.VSU <> fd2:671 var
R59534:59536 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59509:59515 VST.veric.initial_world <> find_id def
R59520:59529 VST.veric.Clight_initial_world <> prog_funct syndef
R59531:59532 VST.floyd.VSU <> p1:665 var
R59517:59517 VST.floyd.VSU <> i:669 var
R59537:59540 Coq.Init.Datatypes <> Some constr
R59542:59544 VST.floyd.VSU <> fd1:670 var
prf 60262:60283 <> G_merge_find_id_Some_D
binder 60285:60285 <> i:676
binder 60287:60288 <> l1:677
binder 60290:60291 <> l2:678
binder 60293:60295 <> phi:679
R60334:60336 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R60362:60371 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R60372:60378 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R60382:60383 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 60379:60381 <> psi:680
R60407:60410 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R60396:60398 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60384:60390 VST.veric.initial_world <> find_id def
R60394:60395 VST.floyd.VSU <> l1:677 var
R60392:60392 VST.floyd.VSU <> i:676 var
R60399:60402 Coq.Init.Datatypes <> Some constr
R60404:60406 VST.floyd.VSU <> psi:680 var
R60423:60425 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60411:60417 VST.veric.initial_world <> find_id def
R60421:60422 VST.floyd.VSU <> l2:678 var
R60419:60419 VST.floyd.VSU <> i:676 var
R60426:60429 Coq.Init.Datatypes <> Some constr
R60431:60433 VST.floyd.VSU <> psi:680 var
R60337:60348 compcert.lib.Coqlib <> list_norepet ind
R60351:60353 Coq.Lists.List <> map def
R60359:60360 VST.floyd.VSU <> l2:678 var
R60355:60357 Coq.Init.Datatypes <> fst def
R60323:60325 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60298:60304 VST.veric.initial_world <> find_id def
R60309:60315 VST.floyd.VSU <> G_merge def
R60320:60321 VST.floyd.VSU <> l2:678 var
R60317:60318 VST.floyd.VSU <> l1:677 var
R60306:60306 VST.floyd.VSU <> i:676 var
R60326:60329 Coq.Init.Datatypes <> Some constr
R60331:60333 VST.floyd.VSU <> phi:679 var
R60458:60477 VST.floyd.VSU <> G_merge_find_id_Some thm
R60458:60477 VST.floyd.VSU <> G_merge_find_id_Some thm
R60505:60511 VST.veric.initial_world <> find_id def
R60505:60511 VST.veric.initial_world <> find_id def
prf 60583:60597 <> G_merge_aux_LNR
binder 60599:60599 <> f:681
binder 60601:60602 <> l1:682
R60609:60620 compcert.lib.Coqlib <> list_norepet ind
R60623:60625 Coq.Lists.List <> map def
R60631:60632 VST.floyd.VSU <> l1:682 var
R60627:60629 Coq.Init.Datatypes <> fst def
binder 60605:60606 <> L1:683
binder 60636:60637 <> l2:684
R60646:60657 compcert.lib.Coqlib <> list_norepet ind
R60660:60662 Coq.Lists.List <> map def
R60670:60680 VST.floyd.VSU <> G_merge_aux def
R60687:60688 VST.floyd.VSU <> l2:684 var
R60684:60685 VST.floyd.VSU <> l1:682 var
R60682:60682 VST.floyd.VSU <> f:681 var
R60664:60666 Coq.Init.Datatypes <> fst def
R60708:60722 VST.floyd.VSU <> G_merge_aux_dom thm
R60708:60722 VST.floyd.VSU <> G_merge_aux_dom thm
R60708:60722 VST.floyd.VSU <> G_merge_aux_dom thm
prf 60746:60756 <> G_merge_LNR
binder 60766:60767 <> l1:685
R60774:60785 compcert.lib.Coqlib <> list_norepet ind
R60788:60790 Coq.Lists.List <> map def
R60796:60797 VST.floyd.VSU <> l1:685 var
R60792:60794 Coq.Init.Datatypes <> fst def
binder 60770:60771 <> L1:686
binder 60801:60802 <> l2:687
R60809:60820 compcert.lib.Coqlib <> list_norepet ind
R60823:60825 Coq.Lists.List <> map def
R60831:60832 VST.floyd.VSU <> l2:687 var
R60827:60829 Coq.Init.Datatypes <> fst def
binder 60805:60806 <> L2:688
R60844:60855 compcert.lib.Coqlib <> list_norepet ind
R60858:60860 Coq.Lists.List <> map def
R60867:60873 VST.floyd.VSU <> G_merge def
R60878:60879 VST.floyd.VSU <> l2:687 var
R60875:60876 VST.floyd.VSU <> l1:685 var
R60862:60864 Coq.Init.Datatypes <> fst def
R60908:60914 VST.floyd.VSU <> G_merge def
R60925:60931 Coq.Lists.List <> map_app thm
R60934:60949 compcert.lib.Coqlib <> list_norepet_app thm
R60925:60931 Coq.Lists.List <> map_app thm
R60925:60931 Coq.Lists.List <> map_app thm
R60934:60949 compcert.lib.Coqlib <> list_norepet_app thm
R60934:60949 compcert.lib.Coqlib <> list_norepet_app thm
R60966:60980 VST.floyd.VSU <> G_merge_aux_LNR thm
R60966:60980 VST.floyd.VSU <> G_merge_aux_LNR thm
R61000:61026 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R61000:61026 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R61048:61062 VST.floyd.VSU <> G_merge_aux_dom thm
R61048:61062 VST.floyd.VSU <> G_merge_aux_dom thm
R61048:61062 VST.floyd.VSU <> G_merge_aux_dom thm
R61095:61104 Coq.Lists.List <> in_map_iff thm
R61095:61104 Coq.Lists.List <> in_map_iff thm
R61168:61176 Coq.Lists.List <> filter_In thm
R61168:61176 Coq.Lists.List <> filter_In thm
R61206:61223 VST.floyd.assoclists <> In_map_fst_find_id thm
R61206:61223 VST.floyd.assoclists <> In_map_fst_find_id thm
prf 61289:61302 <> G_merge_sqsub1
binder 61304:61305 <> l1:689
binder 61307:61308 <> l2:690
binder 61323:61323 <> i:691
binder 61325:61328 <> phi1:692
binder 61330:61333 <> phi2:693
R61360:61363 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61388:61397 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61447:61456 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R61421:61423 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61398:61415 VST.veric.seplog <> typesig_of_funspec def
R61417:61420 VST.floyd.VSU <> phi1:692 var
R61424:61441 VST.veric.seplog <> typesig_of_funspec def
R61443:61446 VST.floyd.VSU <> phi2:693 var
R61490:61492 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61457:61484 VST.veric.seplog <> callingconvention_of_funspec def
R61486:61489 VST.floyd.VSU <> phi1:692 var
R61493:61520 VST.veric.seplog <> callingconvention_of_funspec def
R61522:61525 VST.floyd.VSU <> phi2:693 var
R61376:61378 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61364:61370 VST.veric.initial_world <> find_id def
R61374:61375 VST.floyd.VSU <> l2:690 var
R61372:61372 VST.floyd.VSU <> i:691 var
R61379:61382 Coq.Init.Datatypes <> Some constr
R61384:61387 VST.floyd.VSU <> phi2:693 var
R61348:61350 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61336:61342 VST.veric.initial_world <> find_id def
R61346:61347 VST.floyd.VSU <> l1:689 var
R61344:61344 VST.floyd.VSU <> i:691 var
R61351:61354 Coq.Init.Datatypes <> Some constr
R61356:61359 VST.floyd.VSU <> phi1:692 var
binder 61313:61313 <> H:694
R61530:61543 VST.floyd.VSU <> funspecs_sqsub def
R61561:61562 VST.floyd.VSU <> l1:689 var
R61546:61552 VST.floyd.VSU <> G_merge def
R61557:61558 VST.floyd.VSU <> l2:690 var
R61554:61555 VST.floyd.VSU <> l1:689 var
R61603:61609 VST.veric.initial_world <> find_id def
R61603:61609 VST.veric.initial_world <> find_id def
R61716:61739 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R61716:61739 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R61787:61808 VST.veric.seplog <> binaryintersection_sub thm
R61787:61808 VST.veric.seplog <> binaryintersection_sub thm
R61887:61910 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R61887:61910 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R61928:61943 VST.veric.seplog <> funspec_sub_refl thm
R61928:61943 VST.veric.seplog <> funspec_sub_refl thm
prf 61958:61971 <> G_merge_sqsub2
binder 61973:61974 <> l1:695
binder 61976:61977 <> l2:696
R61985:61996 compcert.lib.Coqlib <> list_norepet ind
R61999:62001 Coq.Lists.List <> map def
R62007:62008 VST.floyd.VSU <> l2:696 var
R62003:62005 Coq.Init.Datatypes <> fst def
binder 61980:61982 <> LNR:697
binder 62025:62025 <> i:698
binder 62027:62030 <> phi1:699
binder 62032:62035 <> phi2:700
R62062:62065 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62090:62099 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62149:62158 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R62123:62125 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62100:62117 VST.veric.seplog <> typesig_of_funspec def
R62119:62122 VST.floyd.VSU <> phi1:699 var
R62126:62143 VST.veric.seplog <> typesig_of_funspec def
R62145:62148 VST.floyd.VSU <> phi2:700 var
R62192:62194 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62159:62186 VST.veric.seplog <> callingconvention_of_funspec def
R62188:62191 VST.floyd.VSU <> phi1:699 var
R62195:62222 VST.veric.seplog <> callingconvention_of_funspec def
R62224:62227 VST.floyd.VSU <> phi2:700 var
R62078:62080 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62066:62072 VST.veric.initial_world <> find_id def
R62076:62077 VST.floyd.VSU <> l2:696 var
R62074:62074 VST.floyd.VSU <> i:698 var
R62081:62084 Coq.Init.Datatypes <> Some constr
R62086:62089 VST.floyd.VSU <> phi2:700 var
R62050:62052 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62038:62044 VST.veric.initial_world <> find_id def
R62048:62049 VST.floyd.VSU <> l1:695 var
R62046:62046 VST.floyd.VSU <> i:698 var
R62053:62056 Coq.Init.Datatypes <> Some constr
R62058:62061 VST.floyd.VSU <> phi1:699 var
binder 62015:62015 <> H:701
R62232:62245 VST.floyd.VSU <> funspecs_sqsub def
R62263:62264 VST.floyd.VSU <> l2:696 var
R62248:62254 VST.floyd.VSU <> G_merge def
R62259:62260 VST.floyd.VSU <> l2:696 var
R62256:62257 VST.floyd.VSU <> l1:695 var
R62305:62311 VST.veric.initial_world <> find_id def
R62305:62311 VST.veric.initial_world <> find_id def
R62418:62441 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R62418:62441 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R62489:62510 VST.veric.seplog <> binaryintersection_sub thm
R62489:62510 VST.veric.seplog <> binaryintersection_sub thm
R62589:62612 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R62589:62612 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R62630:62645 VST.veric.seplog <> funspec_sub_refl thm
R62630:62645 VST.veric.seplog <> funspec_sub_refl thm
prf 62660:62673 <> G_merge_sqsub3
binder 62675:62676 <> l1:702
binder 62678:62679 <> l2:703
binder 62681:62681 <> l:704
R62690:62701 compcert.lib.Coqlib <> list_norepet ind
R62704:62706 Coq.Lists.List <> map def
R62712:62713 VST.floyd.VSU <> l2:703 var
R62708:62710 Coq.Init.Datatypes <> fst def
binder 62684:62687 <> LNR2:705
binder 62730:62730 <> i:706
binder 62732:62735 <> phi1:707
binder 62737:62740 <> phi2:708
R62767:62770 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62795:62804 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62854:62863 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R62828:62830 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62805:62822 VST.veric.seplog <> typesig_of_funspec def
R62824:62827 VST.floyd.VSU <> phi1:707 var
R62831:62848 VST.veric.seplog <> typesig_of_funspec def
R62850:62853 VST.floyd.VSU <> phi2:708 var
R62897:62899 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62864:62891 VST.veric.seplog <> callingconvention_of_funspec def
R62893:62896 VST.floyd.VSU <> phi1:707 var
R62900:62927 VST.veric.seplog <> callingconvention_of_funspec def
R62929:62932 VST.floyd.VSU <> phi2:708 var
R62783:62785 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62771:62777 VST.veric.initial_world <> find_id def
R62781:62782 VST.floyd.VSU <> l2:703 var
R62779:62779 VST.floyd.VSU <> i:706 var
R62786:62789 Coq.Init.Datatypes <> Some constr
R62791:62794 VST.floyd.VSU <> phi2:708 var
R62755:62757 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62743:62749 VST.veric.initial_world <> find_id def
R62753:62754 VST.floyd.VSU <> l1:702 var
R62751:62751 VST.floyd.VSU <> i:706 var
R62758:62761 Coq.Init.Datatypes <> Some constr
R62763:62766 VST.floyd.VSU <> phi1:707 var
binder 62720:62720 <> H:709
R62946:62959 VST.floyd.VSU <> funspecs_sqsub def
R62963:62964 VST.floyd.VSU <> l1:702 var
R62961:62961 VST.floyd.VSU <> l:704 var
binder 62942:62943 <> H1:710
R62972:62985 VST.floyd.VSU <> funspecs_sqsub def
R62989:62990 VST.floyd.VSU <> l2:703 var
R62987:62987 VST.floyd.VSU <> l:704 var
binder 62968:62969 <> H2:711
R62994:63007 VST.floyd.VSU <> funspecs_sqsub def
R63012:63018 VST.floyd.VSU <> G_merge def
R63023:63024 VST.floyd.VSU <> l2:703 var
R63020:63021 VST.floyd.VSU <> l1:702 var
R63009:63009 VST.floyd.VSU <> l:704 var
R63123:63142 VST.floyd.VSU <> G_merge_find_id_Some thm
R63123:63142 VST.floyd.VSU <> G_merge_find_id_Some thm
R63174:63180 VST.veric.initial_world <> find_id def
R63174:63180 VST.veric.initial_world <> find_id def
R63257:63263 Coq.Init.Logic <> eq_refl constr
R63257:63263 Coq.Init.Logic <> eq_refl constr
R63312:63318 VST.veric.initial_world <> find_id def
R63312:63318 VST.veric.initial_world <> find_id def
R63397:63403 Coq.Init.Logic <> eq_refl constr
R63397:63403 Coq.Init.Logic <> eq_refl constr
R63561:63579 VST.floyd.VSU <> merge_specs_succeed thm
R63561:63579 VST.floyd.VSU <> merge_specs_succeed thm
R63611:63634 VST.veric.seplog <> BINARY_intersection_sub3 thm
R63611:63634 VST.veric.seplog <> BINARY_intersection_sub3 thm
prf 63723:63736 <> SF_subsumespec
binder 63739:63743 <> Espec:712
binder 63745:63746 <> cs:713
binder 63748:63748 <> V:714
binder 63750:63751 <> ge:715
binder 63753:63753 <> G:716
binder 63755:63755 <> i:717
binder 63757:63758 <> fd:718
binder 63760:63762 <> phi:719
R63778:63779 VST.floyd.VSU <> SF def
R63802:63804 VST.floyd.VSU <> phi:719 var
R63799:63800 VST.floyd.VSU <> fd:718 var
R63797:63797 VST.floyd.VSU <> i:717 var
R63795:63795 VST.floyd.VSU <> G:716 var
R63792:63793 VST.floyd.VSU <> ge:715 var
R63790:63790 VST.floyd.VSU <> V:714 var
R63787:63788 VST.floyd.VSU <> cs:713 var
R63781:63785 VST.floyd.VSU <> Espec:712 var
binder 63772:63774 <> HSF:720
binder 63807:63808 <> G':721
binder 63810:63811 <> V':722
binder 63830:63830 <> j:723
R63833:63843 VST.veric.expr <> subsumespec def
R63860:63866 VST.veric.initial_world <> find_id def
R63870:63871 VST.floyd.VSU <> G':721 var
R63868:63868 VST.floyd.VSU <> j:723 var
R63846:63852 VST.veric.initial_world <> find_id def
R63856:63856 VST.floyd.VSU <> G:716 var
R63854:63854 VST.floyd.VSU <> j:723 var
binder 63820:63820 <> H:724
binder 63893:63893 <> j:725
binder 63895:63895 <> t:726
R63918:63921 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63934:63936 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63922:63928 VST.veric.initial_world <> find_id def
R63932:63933 VST.floyd.VSU <> V':722 var
R63930:63930 VST.floyd.VSU <> j:725 var
R63937:63940 Coq.Init.Datatypes <> Some constr
R63942:63942 VST.floyd.VSU <> t:726 var
R63909:63911 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63898:63904 VST.veric.initial_world <> find_id def
R63908:63908 VST.floyd.VSU <> V:714 var
R63906:63906 VST.floyd.VSU <> j:725 var
R63912:63915 Coq.Init.Datatypes <> Some constr
R63917:63917 VST.floyd.VSU <> t:726 var
binder 63882:63883 <> HV:727
binder 63962:63962 <> j:728
binder 63964:63964 <> t:729
R63987:63990 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R64003:64005 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63991:63997 VST.veric.initial_world <> find_id def
R64001:64002 VST.floyd.VSU <> G':721 var
R63999:63999 VST.floyd.VSU <> j:728 var
R64006:64009 Coq.Init.Datatypes <> None constr
R63978:63980 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63967:63973 VST.veric.initial_world <> find_id def
R63977:63977 VST.floyd.VSU <> V:714 var
R63975:63975 VST.floyd.VSU <> j:728 var
R63981:63984 Coq.Init.Datatypes <> Some constr
R63986:63986 VST.floyd.VSU <> t:729 var
binder 63952:63952 <> D:730
R64024:64035 compcert.lib.Coqlib <> list_norepet ind
R64038:64040 Coq.Lists.List <> map def
R64046:64046 VST.floyd.VSU <> G:716 var
R64042:64044 Coq.Init.Datatypes <> fst def
binder 64019:64021 <> LNR:731
R64058:64059 VST.floyd.VSU <> SF def
R64084:64086 VST.floyd.VSU <> phi:719 var
R64081:64082 VST.floyd.VSU <> fd:718 var
R64079:64079 VST.floyd.VSU <> i:717 var
R64076:64077 VST.floyd.VSU <> G':721 var
R64073:64074 VST.floyd.VSU <> ge:715 var
R64070:64071 VST.floyd.VSU <> V':722 var
R64067:64068 VST.floyd.VSU <> cs:713 var
R64061:64065 VST.floyd.VSU <> Espec:712 var
R64125:64148 VST.floyd.VSU <> InternalInfo_subsumption thm
R64125:64148 VST.floyd.VSU <> InternalInfo_subsumption thm
R64248:64254 VST.veric.initial_world <> find_id def
R64248:64254 VST.veric.initial_world <> find_id def
R64360:64388 VST.veric.semax_prog <> make_tycontext_s_g thm
R64410:64443 VST.veric.semax_prog <> find_id_maketycontext_s thm
R64360:64388 VST.veric.semax_prog <> make_tycontext_s_g thm
R64360:64388 VST.veric.semax_prog <> make_tycontext_s_g thm
R64360:64388 VST.veric.semax_prog <> make_tycontext_s_g thm
R64360:64388 VST.veric.semax_prog <> make_tycontext_s_g thm
R64360:64388 VST.veric.semax_prog <> make_tycontext_s_g thm
R64410:64443 VST.veric.semax_prog <> find_id_maketycontext_s thm
R64410:64443 VST.veric.semax_prog <> find_id_maketycontext_s thm
R64410:64443 VST.veric.semax_prog <> find_id_maketycontext_s thm
R64410:64443 VST.veric.semax_prog <> find_id_maketycontext_s thm
R64410:64443 VST.veric.semax_prog <> find_id_maketycontext_s thm
R64493:64521 VST.veric.compcert_rmaps RML empty_rmap def
R64493:64521 VST.veric.compcert_rmaps RML empty_rmap def
R64538:64559 VST.veric.SeparationLogic <> type_of_funspec_sub_si thm
R64538:64559 VST.veric.SeparationLogic <> type_of_funspec_sub_si thm
R64650:64683 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R64650:64683 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R64650:64683 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R64650:64683 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R64709:64715 VST.veric.initial_world <> find_id def
R64709:64715 VST.veric.initial_world <> find_id def
R64808:64841 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R64808:64841 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R64808:64841 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R64808:64841 VST.veric.semax_prog <> make_tycontext_g_G_None thm
def 64881:64899 <> Functions_preserved
R64911:64924 compcert.cfrontend.Clight <> program def
binder 64902:64903 <> p1:732
binder 64905:64906 <> p2:733
binder 64908:64908 <> p:734
binder 64927:64927 <> i:735
R64973:64979 VST.veric.initial_world <> find_id def
R64984:64993 VST.veric.Clight_initial_world <> prog_funct syndef
R64995:64996 VST.floyd.VSU <> p2:733 var
R64981:64981 VST.floyd.VSU <> i:735 var
R64946:64952 VST.veric.initial_world <> find_id def
R64957:64966 VST.veric.Clight_initial_world <> prog_funct syndef
R64968:64969 VST.floyd.VSU <> p1:732 var
R64954:64954 VST.floyd.VSU <> i:735 var
R65015:65018 Coq.Init.Datatypes <> Some constr
R65021:65028 compcert.cfrontend.Ctypes <> Internal constr
R65064:65066 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65040:65046 VST.veric.initial_world <> find_id def
R65051:65060 VST.veric.Clight_initial_world <> prog_funct syndef
R65062:65062 VST.floyd.VSU <> p:734 var
R65048:65048 VST.floyd.VSU <> i:735 var
R65067:65070 Coq.Init.Datatypes <> Some constr
R65073:65080 compcert.cfrontend.Ctypes <> Internal constr
R65100:65103 Coq.Init.Datatypes <> Some constr
R65106:65113 compcert.cfrontend.Ctypes <> Internal constr
R65146:65148 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65122:65128 VST.veric.initial_world <> find_id def
R65133:65142 VST.veric.Clight_initial_world <> prog_funct syndef
R65144:65144 VST.floyd.VSU <> p:734 var
R65130:65130 VST.floyd.VSU <> i:735 var
R65149:65152 Coq.Init.Datatypes <> Some constr
R65155:65162 compcert.cfrontend.Ctypes <> Internal constr
R65179:65182 Coq.Init.Datatypes <> Some constr
R65185:65192 compcert.cfrontend.Ctypes <> External constr
R65257:65259 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65233:65239 VST.veric.initial_world <> find_id def
R65244:65253 VST.veric.Clight_initial_world <> prog_funct syndef
R65255:65255 VST.floyd.VSU <> p:734 var
R65241:65241 VST.floyd.VSU <> i:735 var
R65260:65263 Coq.Init.Datatypes <> Some constr
R65266:65273 compcert.cfrontend.Ctypes <> External constr
R65307:65310 Coq.Init.Datatypes <> Some constr
R65313:65320 compcert.cfrontend.Ctypes <> External constr
R65382:65384 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65358:65364 VST.veric.initial_world <> find_id def
R65369:65378 VST.veric.Clight_initial_world <> prog_funct syndef
R65380:65380 VST.floyd.VSU <> p:734 var
R65366:65366 VST.floyd.VSU <> i:735 var
R65385:65388 Coq.Init.Datatypes <> Some constr
R65391:65398 compcert.cfrontend.Ctypes <> External constr
R65429:65432 Coq.Init.Datatypes <> None constr
R65435:65438 Coq.Init.Datatypes <> None constr
R65467:65469 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65443:65449 VST.veric.initial_world <> find_id def
R65454:65463 VST.veric.Clight_initial_world <> prog_funct syndef
R65465:65465 VST.floyd.VSU <> p:734 var
R65451:65451 VST.floyd.VSU <> i:735 var
R65470:65473 Coq.Init.Datatypes <> None constr
prf 65813:65821 <> HContexts
binder 65824:65828 <> Espec:736
binder 65830:65831 <> V1:737
binder 65833:65834 <> V2:738
binder 65836:65838 <> cs1:739
binder 65840:65842 <> cs2:740
binder 65851:65852 <> E1:741
binder 65854:65861 <> Imports1:742
binder 65863:65870 <> Exports1:743
binder 65872:65873 <> E2:744
binder 65875:65882 <> Imports2:745
binder 65884:65891 <> Exports2:746
binder 65893:65894 <> p1:747
binder 65896:65897 <> p2:748
binder 65899:65901 <> GP1:749
binder 65903:65905 <> GP2:750
binder 65907:65908 <> G1:751
binder 65910:65911 <> G2:752
R65926:65934 VST.floyd.VSU <> Component rec
R65977:65978 VST.floyd.VSU <> G1:751 var
R65973:65975 VST.floyd.VSU <> GP1:749 var
R65964:65971 VST.floyd.VSU <> Exports1:743 var
R65961:65962 VST.floyd.VSU <> p1:747 var
R65952:65959 VST.floyd.VSU <> Imports1:742 var
R65949:65950 VST.floyd.VSU <> E1:741 var
R65945:65947 VST.floyd.VSU <> cs1:739 var
R65942:65943 VST.floyd.VSU <> V1:737 var
R65936:65940 VST.floyd.VSU <> Espec:736 var
binder 65921:65922 <> c1:753
R65993:66001 VST.floyd.VSU <> Component rec
R66045:66046 VST.floyd.VSU <> G2:752 var
R66040:66042 VST.floyd.VSU <> GP2:750 var
R66031:66038 VST.floyd.VSU <> Exports2:746 var
R66028:66029 VST.floyd.VSU <> p2:748 var
R66019:66026 VST.floyd.VSU <> Imports2:745 var
R66016:66017 VST.floyd.VSU <> E2:744 var
R66012:66014 VST.floyd.VSU <> cs2:740 var
R66009:66010 VST.floyd.VSU <> V2:738 var
R66003:66007 VST.floyd.VSU <> Espec:736 var
binder 65988:65989 <> c2:754
R66060:66072 VST.floyd.VSU <> Fundefs_match def
R66089:66096 VST.floyd.VSU <> Imports2:745 var
R66080:66087 VST.floyd.VSU <> Imports1:742 var
R66077:66078 VST.floyd.VSU <> p2:748 var
R66074:66075 VST.floyd.VSU <> p1:747 var
binder 66056:66057 <> FM:755
binder 66113:66113 <> i:756
binder 66115:66118 <> phi1:757
binder 66120:66123 <> phi2:758
R66163:66179 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R66204:66308 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R66332:66334 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66309:66326 VST.veric.seplog <> typesig_of_funspec def
R66328:66331 VST.floyd.VSU <> phi1:757 var
R66335:66352 VST.veric.seplog <> typesig_of_funspec def
R66354:66357 VST.floyd.VSU <> phi2:758 var
R66192:66194 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66180:66186 VST.veric.initial_world <> find_id def
R66190:66191 VST.floyd.VSU <> G2:752 var
R66188:66188 VST.floyd.VSU <> i:756 var
R66195:66198 Coq.Init.Datatypes <> Some constr
R66200:66203 VST.floyd.VSU <> phi2:758 var
R66151:66153 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66139:66145 VST.veric.initial_world <> find_id def
R66149:66150 VST.floyd.VSU <> G1:751 var
R66147:66147 VST.floyd.VSU <> i:756 var
R66154:66157 Coq.Init.Datatypes <> Some constr
R66159:66162 VST.floyd.VSU <> phi1:757 var
R66408:66425 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
R66408:66425 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
R66465:66482 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
R66465:66482 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
R66523:66538 VST.floyd.VSU <> Comp_G_justified proj
R66523:66538 VST.floyd.VSU <> Comp_G_justified proj
R66583:66598 VST.floyd.VSU <> Comp_G_justified proj
R66583:66598 VST.floyd.VSU <> Comp_G_justified proj
R66687:66693 Coq.Init.Logic <> eq_refl constr
R66675:66681 Coq.Init.Logic <> eq_refl constr
R66687:66693 Coq.Init.Logic <> eq_refl constr
R66675:66681 Coq.Init.Logic <> eq_refl constr
R67272:67307 VST.floyd.VSU <> Comp_G_disjoint_from_Imports_find_id thm
R67329:67334 VST.floyd.VSU <> Comp_G def
R67272:67307 VST.floyd.VSU <> Comp_G_disjoint_from_Imports_find_id thm
R67401:67436 VST.floyd.VSU <> Comp_G_disjoint_from_Imports_find_id thm
R67458:67463 VST.floyd.VSU <> Comp_G def
R67401:67436 VST.floyd.VSU <> Comp_G_disjoint_from_Imports_find_id thm
sec 67717:67729 <> ComponentJoin
var 67741:67745 ComponentJoin Espec
R67748:67757 VST.veric.juicy_extspec <> OracleKind class
var 67769:67770 ComponentJoin V1
var 67772:67773 ComponentJoin V2
R67776:67783 VST.veric.mpred <> varspecs def
var 67795:67797 ComponentJoin cs1
var 67799:67801 ComponentJoin cs2
var 67803:67804 ComponentJoin cs
R67807:67815 VST.veric.mpred <> compspecs class
var 67828:67829 ComponentJoin E1
var 67831:67838 ComponentJoin Imports1
var 67840:67847 ComponentJoin Exports1
var 67849:67850 ComponentJoin G1
var 67852:67853 ComponentJoin E2
var 67855:67862 ComponentJoin Imports2
var 67864:67871 ComponentJoin Exports2
var 67873:67874 ComponentJoin G2
var 67876:67876 ComponentJoin E
var 67878:67884 ComponentJoin Imports
var 67886:67892 ComponentJoin Exports
R67895:67902 VST.veric.mpred <> funspecs def
var 67914:67915 ComponentJoin p1
var 67917:67918 ComponentJoin p2
var 67920:67920 ComponentJoin p
R67923:67936 compcert.cfrontend.Clight <> program def
var 67948:67950 ComponentJoin GP1
var 67952:67954 ComponentJoin GP2
R67964:67967 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R67968:67972 VST.veric.mpred <> mpred def
R67957:67963 VST.veric.SeparationLogic <> globals def
var 67984:67985 ComponentJoin c1
R67989:67997 VST.floyd.VSU <> Component rec
R68040:68041 VST.floyd.VSU <> ComponentJoin.G1 var
R68036:68038 VST.floyd.VSU <> ComponentJoin.GP1 var
R68027:68034 VST.floyd.VSU <> ComponentJoin.Exports1 var
R68024:68025 VST.floyd.VSU <> ComponentJoin.p1 var
R68015:68022 VST.floyd.VSU <> ComponentJoin.Imports1 var
R68012:68013 VST.floyd.VSU <> ComponentJoin.E1 var
R68008:68010 VST.floyd.VSU <> ComponentJoin.cs1 var
R68005:68006 VST.floyd.VSU <> ComponentJoin.V1 var
R67999:68003 VST.floyd.VSU <> ComponentJoin.Espec var
var 68053:68054 ComponentJoin c2
R68058:68066 VST.floyd.VSU <> Component rec
R68109:68110 VST.floyd.VSU <> ComponentJoin.G2 var
R68105:68107 VST.floyd.VSU <> ComponentJoin.GP2 var
R68096:68103 VST.floyd.VSU <> ComponentJoin.Exports2 var
R68093:68094 VST.floyd.VSU <> ComponentJoin.p2 var
R68084:68091 VST.floyd.VSU <> ComponentJoin.Imports2 var
R68081:68082 VST.floyd.VSU <> ComponentJoin.E2 var
R68077:68079 VST.floyd.VSU <> ComponentJoin.cs2 var
R68074:68075 VST.floyd.VSU <> ComponentJoin.V2 var
R68068:68072 VST.floyd.VSU <> ComponentJoin.Espec var
var 68123:68138 ComponentJoin DisjointVarspecs
R68141:68153 compcert.lib.Coqlib <> list_disjoint def
R68169:68171 Coq.Lists.List <> map def
R68177:68178 VST.floyd.VSU <> ComponentJoin.V2 var
R68173:68175 Coq.Init.Datatypes <> fst def
R68156:68158 Coq.Lists.List <> map def
R68164:68165 VST.floyd.VSU <> ComponentJoin.V1 var
R68160:68162 Coq.Init.Datatypes <> fst def
var 68191:68195 ComponentJoin HV1p1
R68198:68210 compcert.lib.Coqlib <> list_disjoint def
R68226:68228 Coq.Lists.List <> map def
R68235:68244 VST.veric.Clight_initial_world <> prog_funct syndef
R68246:68247 VST.floyd.VSU <> ComponentJoin.p1 var
R68230:68232 Coq.Init.Datatypes <> fst def
R68213:68215 Coq.Lists.List <> map def
R68221:68222 VST.floyd.VSU <> ComponentJoin.V1 var
R68217:68219 Coq.Init.Datatypes <> fst def
var 68261:68265 ComponentJoin HV1p2
R68268:68280 compcert.lib.Coqlib <> list_disjoint def
R68296:68298 Coq.Lists.List <> map def
R68305:68314 VST.veric.Clight_initial_world <> prog_funct syndef
R68316:68317 VST.floyd.VSU <> ComponentJoin.p2 var
R68300:68302 Coq.Init.Datatypes <> fst def
R68283:68285 Coq.Lists.List <> map def
R68291:68292 VST.floyd.VSU <> ComponentJoin.V1 var
R68287:68289 Coq.Init.Datatypes <> fst def
var 68331:68335 ComponentJoin HV2p1
R68338:68350 compcert.lib.Coqlib <> list_disjoint def
R68366:68368 Coq.Lists.List <> map def
R68375:68384 VST.veric.Clight_initial_world <> prog_funct syndef
R68386:68387 VST.floyd.VSU <> ComponentJoin.p1 var
R68370:68372 Coq.Init.Datatypes <> fst def
R68353:68355 Coq.Lists.List <> map def
R68361:68362 VST.floyd.VSU <> ComponentJoin.V2 var
R68357:68359 Coq.Init.Datatypes <> fst def
var 68401:68405 ComponentJoin HV2p2
R68408:68420 compcert.lib.Coqlib <> list_disjoint def
R68436:68438 Coq.Lists.List <> map def
R68445:68454 VST.veric.Clight_initial_world <> prog_funct syndef
R68456:68457 VST.floyd.VSU <> ComponentJoin.p2 var
R68440:68442 Coq.Init.Datatypes <> fst def
R68423:68425 Coq.Lists.List <> map def
R68431:68432 VST.floyd.VSU <> ComponentJoin.V2 var
R68427:68429 Coq.Init.Datatypes <> fst def
var 68471:68476 ComponentJoin LNR_V1
R68479:68490 compcert.lib.Coqlib <> list_norepet ind
R68493:68495 Coq.Lists.List <> map def
R68501:68502 VST.floyd.VSU <> ComponentJoin.V1 var
R68497:68499 Coq.Init.Datatypes <> fst def
var 68515:68520 ComponentJoin LNR_V2
R68523:68534 compcert.lib.Coqlib <> list_norepet ind
R68537:68539 Coq.Lists.List <> map def
R68545:68546 VST.floyd.VSU <> ComponentJoin.V2 var
R68541:68543 Coq.Init.Datatypes <> fst def
var 68559:68561 ComponentJoin CS1
R68564:68573 VST.veric.expr <> cspecs_sub def
R68579:68580 VST.floyd.VSU <> ComponentJoin.cs var
R68575:68577 VST.floyd.VSU <> ComponentJoin.cs1 var
var 68592:68594 ComponentJoin CS2
R68597:68606 VST.veric.expr <> cspecs_sub def
R68612:68613 VST.floyd.VSU <> ComponentJoin.cs var
R68608:68610 VST.floyd.VSU <> ComponentJoin.cs2 var
var 68626:68626 ComponentJoin V
R68629:68636 VST.veric.mpred <> varspecs def
var 68648:68650 ComponentJoin HV1
binder 68660:68660 <> i:793
binder 68662:68664 <> phi:794
R68690:68693 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68705:68707 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68694:68700 VST.veric.initial_world <> find_id def
R68704:68704 VST.floyd.VSU <> ComponentJoin.V var
R68702:68702 VST.floyd.VSU <> i:793 var
R68708:68711 Coq.Init.Datatypes <> Some constr
R68713:68715 VST.floyd.VSU <> phi:794 var
R68679:68681 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68667:68673 VST.veric.initial_world <> find_id def
R68677:68678 VST.floyd.VSU <> ComponentJoin.V1 var
R68675:68675 VST.floyd.VSU <> i:793 var
R68682:68685 Coq.Init.Datatypes <> Some constr
R68687:68689 VST.floyd.VSU <> phi:794 var
var 68727:68729 ComponentJoin HV2
binder 68739:68739 <> i:796
binder 68741:68743 <> phi:797
R68769:68772 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68784:68786 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68773:68779 VST.veric.initial_world <> find_id def
R68783:68783 VST.floyd.VSU <> ComponentJoin.V var
R68781:68781 VST.floyd.VSU <> i:796 var
R68787:68790 Coq.Init.Datatypes <> Some constr
R68792:68794 VST.floyd.VSU <> phi:797 var
R68758:68760 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68746:68752 VST.veric.initial_world <> find_id def
R68756:68757 VST.floyd.VSU <> ComponentJoin.V2 var
R68754:68754 VST.floyd.VSU <> i:796 var
R68761:68764 Coq.Init.Datatypes <> Some constr
R68766:68768 VST.floyd.VSU <> phi:797 var
var 68807:68818 ComponentJoin FundefsMatch
R68821:68833 VST.floyd.VSU <> Fundefs_match def
R68850:68857 VST.floyd.VSU <> ComponentJoin.Imports2 var
R68841:68848 VST.floyd.VSU <> ComponentJoin.Imports1 var
R68838:68839 VST.floyd.VSU <> ComponentJoin.p2 var
R68835:68836 VST.floyd.VSU <> ComponentJoin.p1 var
var 68870:68871 ComponentJoin FP
binder 68881:68881 <> i:800
R68884:68902 VST.floyd.VSU <> Functions_preserved def
R68912:68912 VST.floyd.VSU <> i:800 var
R68910:68910 VST.floyd.VSU <> ComponentJoin.p var
R68907:68908 VST.floyd.VSU <> ComponentJoin.p2 var
R68904:68905 VST.floyd.VSU <> ComponentJoin.p1 var
def 68927:68928 <> HC
R68933:68941 VST.floyd.VSU <> HContexts thm
R68949:68960 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R68946:68947 VST.floyd.VSU <> ComponentJoin.c2 var
R68943:68944 VST.floyd.VSU <> ComponentJoin.c1 var
var 69038:69049 ComponentJoin Externs1_Hyp
R69052:69064 compcert.lib.Coqlib <> list_disjoint def
R69080:69085 VST.floyd.VSU <> IntIDs def
R69087:69088 VST.floyd.VSU <> ComponentJoin.p2 var
R69067:69069 Coq.Lists.List <> map def
R69075:69076 VST.floyd.VSU <> ComponentJoin.E1 var
R69071:69073 Coq.Init.Datatypes <> fst def
var 69101:69112 ComponentJoin Externs2_Hyp
R69115:69127 compcert.lib.Coqlib <> list_disjoint def
R69143:69148 VST.floyd.VSU <> IntIDs def
R69150:69151 VST.floyd.VSU <> ComponentJoin.p1 var
R69130:69132 Coq.Lists.List <> map def
R69138:69139 VST.floyd.VSU <> ComponentJoin.E2 var
R69134:69136 Coq.Init.Datatypes <> fst def
var 69165:69174 ComponentJoin ExternsHyp
R69178:69180 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69177:69177 VST.floyd.VSU <> ComponentJoin.E var
R69181:69187 VST.floyd.VSU <> G_merge def
R69192:69193 VST.floyd.VSU <> ComponentJoin.E2 var
R69189:69190 VST.floyd.VSU <> ComponentJoin.E1 var
var 69580:69582 ComponentJoin SC1
binder 69592:69592 <> i:805
binder 69594:69597 <> phiI:806
R69630:69633 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69664:69681 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69682:69688 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R69693:69694 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 69689:69692 <> phiE:807
R69725:69728 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R69713:69715 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69695:69701 VST.veric.initial_world <> find_id def
R69705:69712 VST.floyd.VSU <> ComponentJoin.Exports1 var
R69703:69703 VST.floyd.VSU <> i:805 var
R69716:69719 Coq.Init.Datatypes <> Some constr
R69721:69724 VST.floyd.VSU <> phiE:807 var
R69729:69739 VST.veric.SeparationLogic <> funspec_sub def
R69746:69749 VST.floyd.VSU <> phiI:806 var
R69741:69744 VST.floyd.VSU <> phiE:807 var
R69634:69635 Coq.Lists.List <> In def
R69650:69653 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R69640:69642 Coq.Lists.List <> map def
R69648:69649 VST.floyd.VSU <> ComponentJoin.E1 var
R69644:69646 Coq.Init.Datatypes <> fst def
R69654:69659 VST.floyd.VSU <> IntIDs def
R69661:69662 VST.floyd.VSU <> ComponentJoin.p1 var
R69637:69637 VST.floyd.VSU <> i:805 var
R69618:69620 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69600:69606 VST.veric.initial_world <> find_id def
R69610:69617 VST.floyd.VSU <> ComponentJoin.Imports2 var
R69608:69608 VST.floyd.VSU <> i:805 var
R69621:69624 Coq.Init.Datatypes <> Some constr
R69626:69629 VST.floyd.VSU <> phiI:806 var
var 69784:69786 ComponentJoin SC2
binder 69796:69796 <> i:809
binder 69798:69801 <> phiI:810
R69834:69837 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69868:69897 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69898:69904 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R69909:69910 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 69905:69908 <> phiE:811
R69941:69944 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R69929:69931 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69911:69917 VST.veric.initial_world <> find_id def
R69921:69928 VST.floyd.VSU <> ComponentJoin.Exports2 var
R69919:69919 VST.floyd.VSU <> i:809 var
R69932:69935 Coq.Init.Datatypes <> Some constr
R69937:69940 VST.floyd.VSU <> phiE:811 var
R69945:69955 VST.veric.SeparationLogic <> funspec_sub def
R69962:69965 VST.floyd.VSU <> phiI:810 var
R69957:69960 VST.floyd.VSU <> phiE:811 var
R69838:69839 Coq.Lists.List <> In def
R69854:69857 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R69844:69846 Coq.Lists.List <> map def
R69852:69853 VST.floyd.VSU <> ComponentJoin.E2 var
R69848:69850 Coq.Init.Datatypes <> fst def
R69858:69863 VST.floyd.VSU <> IntIDs def
R69865:69866 VST.floyd.VSU <> ComponentJoin.p2 var
R69841:69841 VST.floyd.VSU <> i:809 var
R69822:69824 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69804:69810 VST.veric.initial_world <> find_id def
R69814:69821 VST.floyd.VSU <> ComponentJoin.Imports1 var
R69812:69812 VST.floyd.VSU <> i:809 var
R69825:69828 Coq.Init.Datatypes <> Some constr
R69830:69833 VST.floyd.VSU <> phiI:810 var
var 69978:69985 ComponentJoin HImports
binder 69995:69995 <> i:813
binder 69997:70000 <> phi1:814
binder 70002:70005 <> phi2:815
R70038:70041 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70072:70075 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70080:70080 Coq.Init.Logic <> ::type_scope:x_'='_x not
R70076:70079 VST.floyd.VSU <> phi1:814 var
R70081:70084 VST.floyd.VSU <> phi2:815 var
R70060:70062 Coq.Init.Logic <> ::type_scope:x_'='_x not
R70042:70048 VST.veric.initial_world <> find_id def
R70052:70059 VST.floyd.VSU <> ComponentJoin.Imports2 var
R70050:70050 VST.floyd.VSU <> i:813 var
R70063:70066 Coq.Init.Datatypes <> Some constr
R70068:70071 VST.floyd.VSU <> phi2:815 var
R70026:70028 Coq.Init.Logic <> ::type_scope:x_'='_x not
R70008:70014 VST.veric.initial_world <> find_id def
R70018:70025 VST.floyd.VSU <> ComponentJoin.Imports1 var
R70016:70016 VST.floyd.VSU <> i:813 var
R70029:70032 Coq.Init.Datatypes <> Some constr
R70034:70037 VST.floyd.VSU <> phi1:814 var
var 70097:70106 ComponentJoin ImportsDef
R70116:70140 Coq.Init.Logic <> ::type_scope:x_'='_x not
R70109:70115 VST.floyd.VSU <> ComponentJoin.Imports var
R70224:70248 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R70141:70146 Coq.Lists.List <> filter def
R70216:70223 VST.floyd.VSU <> ComponentJoin.Imports1 var
binder 70153:70153 <> x:817
R70158:70161 Coq.Init.Datatypes <> negb def
R70164:70169 Coq.Lists.List <> in_dec thm
R70199:70202 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R70189:70191 Coq.Lists.List <> map def
R70197:70198 VST.floyd.VSU <> ComponentJoin.E2 var
R70193:70195 Coq.Init.Datatypes <> fst def
R70203:70208 VST.floyd.VSU <> IntIDs def
R70210:70211 VST.floyd.VSU <> ComponentJoin.p2 var
R70181:70183 Coq.Init.Datatypes <> fst def
R70185:70185 VST.floyd.VSU <> x:817 var
R70171:70178 compcert.common.AST <> ident_eq def
R70249:70254 Coq.Lists.List <> filter def
R70344:70351 VST.floyd.VSU <> ComponentJoin.Imports2 var
binder 70261:70261 <> x:818
R70266:70269 Coq.Init.Datatypes <> negb def
R70272:70277 Coq.Lists.List <> in_dec thm
R70307:70310 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R70297:70299 Coq.Lists.List <> map def
R70305:70306 VST.floyd.VSU <> ComponentJoin.E1 var
R70301:70303 Coq.Init.Datatypes <> fst def
R70320:70323 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R70311:70316 VST.floyd.VSU <> IntIDs def
R70318:70319 VST.floyd.VSU <> ComponentJoin.p1 var
R70324:70326 Coq.Lists.List <> map def
R70332:70339 VST.floyd.VSU <> ComponentJoin.Imports1 var
R70328:70330 Coq.Init.Datatypes <> fst def
R70289:70291 Coq.Init.Datatypes <> fst def
R70293:70293 VST.floyd.VSU <> x:818 var
R70279:70286 compcert.common.AST <> ident_eq def
var 70364:70373 ComponentJoin ExportsDef
R70383:70385 Coq.Init.Logic <> ::type_scope:x_'='_x not
R70376:70382 VST.floyd.VSU <> ComponentJoin.Exports var
R70386:70392 VST.floyd.VSU <> G_merge def
R70403:70410 VST.floyd.VSU <> ComponentJoin.Exports2 var
R70394:70401 VST.floyd.VSU <> ComponentJoin.Exports1 var
var 70423:70426 ComponentJoin LNRp
R70429:70440 compcert.lib.Coqlib <> list_norepet ind
R70443:70445 Coq.Lists.List <> map def
R70452:70460 compcert.cfrontend.Ctypes <> prog_defs proj
R70462:70462 VST.floyd.VSU <> ComponentJoin.p var
R70447:70449 Coq.Init.Datatypes <> fst def
prf 70474:70484 <> LNR_Imports
R70487:70498 compcert.lib.Coqlib <> list_norepet ind
R70501:70503 Coq.Lists.List <> map def
R70509:70515 VST.floyd.VSU <> ComponentJoin.Imports var
R70505:70507 Coq.Init.Datatypes <> fst def
R70556:70562 Coq.Lists.List <> map_app thm
R70565:70580 compcert.lib.Coqlib <> list_norepet_app thm
R70556:70562 Coq.Lists.List <> map_app thm
R70556:70562 Coq.Lists.List <> map_app thm
R70565:70580 compcert.lib.Coqlib <> list_norepet_app thm
R70565:70580 compcert.lib.Coqlib <> list_norepet_app thm
R70609:70624 VST.floyd.VSU <> Comp_Imports_LNR thm
R70626:70627 VST.floyd.VSU <> ComponentJoin.c1 var
R70609:70624 VST.floyd.VSU <> Comp_Imports_LNR thm
R70626:70627 VST.floyd.VSU <> ComponentJoin.c1 var
R70644:70670 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R70644:70670 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R70691:70706 VST.floyd.VSU <> Comp_Imports_LNR thm
R70708:70709 VST.floyd.VSU <> ComponentJoin.c2 var
R70691:70706 VST.floyd.VSU <> Comp_Imports_LNR thm
R70708:70709 VST.floyd.VSU <> ComponentJoin.c2 var
R70726:70752 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R70726:70752 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R70800:70814 compcert.lib.Coqlib <> list_in_map_inv thm
R70800:70814 compcert.lib.Coqlib <> list_in_map_inv thm
R70892:70906 compcert.lib.Coqlib <> list_in_map_inv thm
R70892:70906 compcert.lib.Coqlib <> list_in_map_inv thm
R70984:70992 Coq.Lists.List <> filter_In thm
R70984:70992 Coq.Lists.List <> filter_In thm
R71038:71046 Coq.Lists.List <> filter_In thm
R71038:71046 Coq.Lists.List <> filter_In thm
R71130:71135 Coq.Lists.List <> in_dec thm
R71160:71162 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R71150:71152 Coq.Lists.List <> map def
R71158:71159 VST.floyd.VSU <> ComponentJoin.E2 var
R71154:71156 Coq.Init.Datatypes <> fst def
R71163:71168 VST.floyd.VSU <> IntIDs def
R71170:71171 VST.floyd.VSU <> ComponentJoin.p2 var
R71137:71144 compcert.common.AST <> ident_eq def
R71130:71135 Coq.Lists.List <> in_dec thm
R71160:71162 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R71150:71152 Coq.Lists.List <> map def
R71158:71159 VST.floyd.VSU <> ComponentJoin.E2 var
R71154:71156 Coq.Init.Datatypes <> fst def
R71163:71168 VST.floyd.VSU <> IntIDs def
R71170:71171 VST.floyd.VSU <> ComponentJoin.p2 var
R71137:71144 compcert.common.AST <> ident_eq def
R71214:71219 Coq.Lists.List <> in_dec thm
R71244:71247 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R71234:71236 Coq.Lists.List <> map def
R71242:71243 VST.floyd.VSU <> ComponentJoin.E1 var
R71238:71240 Coq.Init.Datatypes <> fst def
R71257:71260 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R71248:71253 VST.floyd.VSU <> IntIDs def
R71255:71256 VST.floyd.VSU <> ComponentJoin.p1 var
R71261:71263 Coq.Lists.List <> map def
R71269:71276 VST.floyd.VSU <> ComponentJoin.Imports1 var
R71265:71267 Coq.Init.Datatypes <> fst def
R71221:71228 compcert.common.AST <> ident_eq def
R71214:71219 Coq.Lists.List <> in_dec thm
R71244:71247 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R71234:71236 Coq.Lists.List <> map def
R71242:71243 VST.floyd.VSU <> ComponentJoin.E1 var
R71238:71240 Coq.Init.Datatypes <> fst def
R71257:71260 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R71248:71253 VST.floyd.VSU <> IntIDs def
R71255:71256 VST.floyd.VSU <> ComponentJoin.p1 var
R71261:71263 Coq.Lists.List <> map def
R71269:71276 VST.floyd.VSU <> ComponentJoin.Imports1 var
R71265:71267 Coq.Init.Datatypes <> fst def
R71221:71228 compcert.common.AST <> ident_eq def
R71324:71332 Coq.Lists.List <> in_or_app thm
R71324:71332 Coq.Lists.List <> in_or_app thm
R71348:71356 Coq.Lists.List <> in_or_app thm
R71348:71356 Coq.Lists.List <> in_or_app thm
R71373:71382 VST.veric.initial_world <> in_map_fst thm
R71373:71382 VST.veric.initial_world <> in_map_fst thm
prf 71407:71417 <> LNR_Exports
R71420:71431 compcert.lib.Coqlib <> list_norepet ind
R71434:71436 Coq.Lists.List <> map def
R71442:71448 VST.floyd.VSU <> ComponentJoin.Exports var
R71438:71440 Coq.Init.Datatypes <> fst def
R71489:71499 VST.floyd.VSU <> G_merge_dom thm
R71502:71508 Coq.Lists.List <> map_app thm
R71511:71526 compcert.lib.Coqlib <> list_norepet_app thm
R71489:71499 VST.floyd.VSU <> G_merge_dom thm
R71489:71499 VST.floyd.VSU <> G_merge_dom thm
R71502:71508 Coq.Lists.List <> map_app thm
R71502:71508 Coq.Lists.List <> map_app thm
R71511:71526 compcert.lib.Coqlib <> list_norepet_app thm
R71511:71526 compcert.lib.Coqlib <> list_norepet_app thm
R71549:71550 VST.floyd.VSU <> ComponentJoin.c1 var
R71549:71550 VST.floyd.VSU <> ComponentJoin.c1 var
R71566:71580 VST.veric.coqlib4 <> sublist_norepet thm
R71566:71580 VST.veric.coqlib4 <> sublist_norepet thm
R71589:71603 VST.floyd.assoclists <> sublist_map_fst thm
R71589:71603 VST.floyd.assoclists <> sublist_map_fst thm
R71612:71625 VST.floyd.assoclists <> sublist_filter thm
R71612:71625 VST.floyd.assoclists <> sublist_filter thm
R71634:71635 VST.floyd.VSU <> ComponentJoin.c2 var
R71634:71635 VST.floyd.VSU <> ComponentJoin.c2 var
R71696:71710 compcert.lib.Coqlib <> list_in_map_inv thm
R71696:71710 compcert.lib.Coqlib <> list_in_map_inv thm
R71788:71802 compcert.lib.Coqlib <> list_in_map_inv thm
R71788:71802 compcert.lib.Coqlib <> list_in_map_inv thm
R71880:71888 Coq.Lists.List <> filter_In thm
R71880:71888 Coq.Lists.List <> filter_In thm
R71933:71941 VST.veric.initial_world <> find_id_i thm
R71933:71941 VST.veric.initial_world <> find_id_i thm
R71986:71987 VST.floyd.VSU <> ComponentJoin.c1 var
R71986:71987 VST.floyd.VSU <> ComponentJoin.c1 var
prf 72002:72008 <> LNR3_V1
R72011:72022 compcert.lib.Coqlib <> list_norepet ind
R72035:72038 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R72025:72027 Coq.Lists.List <> map def
R72033:72034 VST.floyd.VSU <> ComponentJoin.V1 var
R72029:72031 Coq.Init.Datatypes <> fst def
R72039:72041 Coq.Lists.List <> map def
R72056:72060 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R72070:72070 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R72048:72055 VST.floyd.VSU <> ComponentJoin.Imports1 var
R72061:72066 VST.floyd.VSU <> Comp_G def
R72068:72069 VST.floyd.VSU <> ComponentJoin.c1 var
R72043:72045 Coq.Init.Datatypes <> fst def
R72090:72108 compcert.lib.Coqlib <> list_norepet_append thm
R72090:72108 compcert.lib.Coqlib <> list_norepet_append thm
R72126:72137 VST.floyd.VSU <> Comp_ctx_LNR thm
R72126:72137 VST.floyd.VSU <> Comp_ctx_LNR thm
R72151:72157 Coq.Lists.List <> map_app thm
R72151:72157 Coq.Lists.List <> map_app thm
R72151:72157 Coq.Lists.List <> map_app thm
R72166:72184 VST.floyd.assoclists <> list_disjoint_app_R thm
R72166:72184 VST.floyd.assoclists <> list_disjoint_app_R thm
R72198:72215 VST.floyd.assoclists <> list_disjoint_mono thm
R72198:72215 VST.floyd.assoclists <> list_disjoint_mono thm
R72224:72228 VST.floyd.VSU <> ComponentJoin.HV1p1 var
R72224:72228 VST.floyd.VSU <> ComponentJoin.HV1p1 var
R72262:72276 compcert.lib.Coqlib <> list_in_map_inv thm
R72262:72276 compcert.lib.Coqlib <> list_in_map_inv thm
R72352:72360 VST.veric.initial_world <> find_id_i thm
R72352:72360 VST.veric.initial_world <> find_id_i thm
R72380:72402 VST.floyd.VSU <> Comp_Imports_in_Fundefs thm
R72404:72405 VST.floyd.VSU <> ComponentJoin.c1 var
R72380:72402 VST.floyd.VSU <> Comp_Imports_in_Fundefs thm
R72404:72405 VST.floyd.VSU <> ComponentJoin.c1 var
R72436:72444 VST.veric.initial_world <> find_id_e thm
R72436:72444 VST.veric.initial_world <> find_id_e thm
R72459:72468 VST.veric.initial_world <> in_map_fst thm
R72459:72468 VST.veric.initial_world <> in_map_fst thm
R72487:72502 VST.floyd.VSU <> Comp_Imports_LNR thm
R72504:72505 VST.floyd.VSU <> ComponentJoin.c1 var
R72487:72502 VST.floyd.VSU <> Comp_Imports_LNR thm
R72504:72505 VST.floyd.VSU <> ComponentJoin.c1 var
R72520:72537 VST.floyd.assoclists <> list_disjoint_mono thm
R72520:72537 VST.floyd.assoclists <> list_disjoint_mono thm
R72546:72550 VST.floyd.VSU <> ComponentJoin.HV1p1 var
R72546:72550 VST.floyd.VSU <> ComponentJoin.HV1p1 var
R72584:72598 compcert.lib.Coqlib <> list_in_map_inv thm
R72584:72598 compcert.lib.Coqlib <> list_in_map_inv thm
R72674:72682 VST.veric.initial_world <> find_id_i thm
R72703:72712 VST.floyd.VSU <> Comp_G_LNR proj
R72714:72715 VST.floyd.VSU <> ComponentJoin.c1 var
R72674:72682 VST.veric.initial_world <> find_id_i thm
R72703:72712 VST.floyd.VSU <> Comp_G_LNR proj
R72714:72715 VST.floyd.VSU <> ComponentJoin.c1 var
R72736:72753 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
R72773:72774 VST.floyd.VSU <> ComponentJoin.c1 var
R72736:72753 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
R72773:72774 VST.floyd.VSU <> ComponentJoin.c1 var
R72802:72819 VST.veric.initial_world <> find_id_In_map_fst thm
R72802:72819 VST.veric.initial_world <> find_id_In_map_fst thm
prf 72848:72854 <> LNR3_V2
R72857:72868 compcert.lib.Coqlib <> list_norepet ind
R72881:72884 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R72871:72873 Coq.Lists.List <> map def
R72879:72880 VST.floyd.VSU <> ComponentJoin.V2 var
R72875:72877 Coq.Init.Datatypes <> fst def
R72885:72887 Coq.Lists.List <> map def
R72902:72906 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R72916:72916 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R72894:72901 VST.floyd.VSU <> ComponentJoin.Imports2 var
R72907:72912 VST.floyd.VSU <> Comp_G def
R72914:72915 VST.floyd.VSU <> ComponentJoin.c2 var
R72889:72891 Coq.Init.Datatypes <> fst def
R72936:72954 compcert.lib.Coqlib <> list_norepet_append thm
R72936:72954 compcert.lib.Coqlib <> list_norepet_append thm
R72972:72983 VST.floyd.VSU <> Comp_ctx_LNR thm
R72972:72983 VST.floyd.VSU <> Comp_ctx_LNR thm
R72997:73003 Coq.Lists.List <> map_app thm
R72997:73003 Coq.Lists.List <> map_app thm
R72997:73003 Coq.Lists.List <> map_app thm
R73012:73030 VST.floyd.assoclists <> list_disjoint_app_R thm
R73012:73030 VST.floyd.assoclists <> list_disjoint_app_R thm
R73044:73061 VST.floyd.assoclists <> list_disjoint_mono thm
R73044:73061 VST.floyd.assoclists <> list_disjoint_mono thm
R73070:73074 VST.floyd.VSU <> ComponentJoin.HV2p2 var
R73070:73074 VST.floyd.VSU <> ComponentJoin.HV2p2 var
R73108:73122 compcert.lib.Coqlib <> list_in_map_inv thm
R73108:73122 compcert.lib.Coqlib <> list_in_map_inv thm
R73198:73206 VST.veric.initial_world <> find_id_i thm
R73198:73206 VST.veric.initial_world <> find_id_i thm
R73226:73248 VST.floyd.VSU <> Comp_Imports_in_Fundefs thm
R73250:73251 VST.floyd.VSU <> ComponentJoin.c2 var
R73226:73248 VST.floyd.VSU <> Comp_Imports_in_Fundefs thm
R73250:73251 VST.floyd.VSU <> ComponentJoin.c2 var
R73282:73290 VST.veric.initial_world <> find_id_e thm
R73282:73290 VST.veric.initial_world <> find_id_e thm
R73305:73314 VST.veric.initial_world <> in_map_fst thm
R73305:73314 VST.veric.initial_world <> in_map_fst thm
R73333:73348 VST.floyd.VSU <> Comp_Imports_LNR thm
R73350:73351 VST.floyd.VSU <> ComponentJoin.c2 var
R73333:73348 VST.floyd.VSU <> Comp_Imports_LNR thm
R73350:73351 VST.floyd.VSU <> ComponentJoin.c2 var
R73366:73383 VST.floyd.assoclists <> list_disjoint_mono thm
R73366:73383 VST.floyd.assoclists <> list_disjoint_mono thm
R73392:73396 VST.floyd.VSU <> ComponentJoin.HV2p2 var
R73392:73396 VST.floyd.VSU <> ComponentJoin.HV2p2 var
R73430:73444 compcert.lib.Coqlib <> list_in_map_inv thm
R73430:73444 compcert.lib.Coqlib <> list_in_map_inv thm
R73520:73528 VST.veric.initial_world <> find_id_i thm
R73549:73558 VST.floyd.VSU <> Comp_G_LNR proj
R73560:73561 VST.floyd.VSU <> ComponentJoin.c2 var
R73520:73528 VST.veric.initial_world <> find_id_i thm
R73549:73558 VST.floyd.VSU <> Comp_G_LNR proj
R73560:73561 VST.floyd.VSU <> ComponentJoin.c2 var
R73581:73598 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
R73600:73601 VST.floyd.VSU <> ComponentJoin.c2 var
R73581:73598 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
R73600:73601 VST.floyd.VSU <> ComponentJoin.c2 var
R73628:73645 VST.veric.initial_world <> find_id_In_map_fst thm
R73628:73645 VST.veric.initial_world <> find_id_In_map_fst thm
prf 73674:73691 <> Imports_in_Fundefs
binder 73701:73701 <> x:822
R73726:73735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73736:73737 Coq.Lists.List <> In def
R73765:73768 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R73742:73744 Coq.Lists.List <> map def
R73751:73760 VST.veric.Clight_initial_world <> prog_funct syndef
R73762:73763 VST.floyd.VSU <> ComponentJoin.p1 var
R73746:73748 Coq.Init.Datatypes <> fst def
R73769:73771 Coq.Lists.List <> map def
R73778:73787 VST.veric.Clight_initial_world <> prog_funct syndef
R73789:73790 VST.floyd.VSU <> ComponentJoin.p2 var
R73773:73775 Coq.Init.Datatypes <> fst def
R73739:73739 VST.floyd.VSU <> x:822 var
R73704:73705 Coq.Lists.List <> In def
R73710:73712 Coq.Lists.List <> map def
R73718:73724 VST.floyd.VSU <> ComponentJoin.Imports var
R73714:73716 Coq.Init.Datatypes <> fst def
R73707:73707 VST.floyd.VSU <> x:822 var
R73863:73885 VST.floyd.VSU <> Comp_Imports_in_Fundefs thm
R73887:73888 VST.floyd.VSU <> ComponentJoin.c1 var
R73863:73885 VST.floyd.VSU <> Comp_Imports_in_Fundefs thm
R73887:73888 VST.floyd.VSU <> ComponentJoin.c1 var
R73928:73950 VST.floyd.VSU <> Comp_Imports_in_Fundefs thm
R73952:73953 VST.floyd.VSU <> ComponentJoin.c2 var
R73928:73950 VST.floyd.VSU <> Comp_Imports_in_Fundefs thm
R73952:73953 VST.floyd.VSU <> ComponentJoin.c2 var
R73989:73995 Coq.Lists.List <> map_app thm
R73989:73995 Coq.Lists.List <> map_app thm
R73989:73995 Coq.Lists.List <> map_app thm
R74019:74027 Coq.Lists.List <> in_or_app thm
R74019:74027 Coq.Lists.List <> in_or_app thm
R74036:74044 Coq.Lists.List <> in_app_or thm
R74036:74044 Coq.Lists.List <> in_app_or thm
R74082:74096 compcert.lib.Coqlib <> list_in_map_inv thm
R74082:74096 compcert.lib.Coqlib <> list_in_map_inv thm
R74180:74188 Coq.Lists.List <> filter_In thm
R74180:74188 Coq.Lists.List <> filter_In thm
R74232:74240 VST.veric.initial_world <> find_id_i thm
R74259:74274 VST.floyd.VSU <> Comp_Imports_LNR thm
R74276:74277 VST.floyd.VSU <> ComponentJoin.c1 var
R74232:74240 VST.veric.initial_world <> find_id_i thm
R74259:74274 VST.floyd.VSU <> Comp_Imports_LNR thm
R74276:74277 VST.floyd.VSU <> ComponentJoin.c1 var
R74351:74359 VST.veric.initial_world <> find_id_e thm
R74351:74359 VST.veric.initial_world <> find_id_e thm
R74374:74383 VST.veric.initial_world <> in_map_fst thm
R74374:74383 VST.veric.initial_world <> in_map_fst thm
R74419:74433 compcert.lib.Coqlib <> list_in_map_inv thm
R74419:74433 compcert.lib.Coqlib <> list_in_map_inv thm
R74517:74525 Coq.Lists.List <> filter_In thm
R74517:74525 Coq.Lists.List <> filter_In thm
R74569:74577 VST.veric.initial_world <> find_id_i thm
R74596:74611 VST.floyd.VSU <> Comp_Imports_LNR thm
R74613:74614 VST.floyd.VSU <> ComponentJoin.c2 var
R74569:74577 VST.veric.initial_world <> find_id_i thm
R74596:74611 VST.floyd.VSU <> Comp_Imports_LNR thm
R74613:74614 VST.floyd.VSU <> ComponentJoin.c2 var
R74686:74692 VST.veric.initial_world <> find_id def
R74697:74706 VST.veric.Clight_initial_world <> prog_funct syndef
R74708:74709 VST.floyd.VSU <> ComponentJoin.p1 var
R74686:74692 VST.veric.initial_world <> find_id def
R74697:74706 VST.veric.Clight_initial_world <> prog_funct syndef
R74708:74709 VST.floyd.VSU <> ComponentJoin.p1 var
R74776:74784 VST.veric.initial_world <> find_id_e thm
R74776:74784 VST.veric.initial_world <> find_id_e thm
R74801:74810 VST.veric.initial_world <> in_map_fst thm
R74801:74810 VST.veric.initial_world <> in_map_fst thm
R74858:74875 VST.veric.initial_world <> find_id_In_map_fst thm
R74858:74875 VST.veric.initial_world <> find_id_In_map_fst thm
var 74909:74913 ComponentJoin V_LNR
R74916:74927 compcert.lib.Coqlib <> list_norepet ind
R74930:74932 Coq.Lists.List <> map def
R74938:74938 VST.floyd.VSU <> ComponentJoin.V var
R74934:74936 Coq.Init.Datatypes <> fst def
var 74951:74954 ComponentJoin domV
binder 74964:74964 <> i:824
R74983:74986 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75004:75007 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R74987:74988 Coq.Lists.List <> In def
R74993:74995 Coq.Lists.List <> map def
R75001:75002 VST.floyd.VSU <> ComponentJoin.V1 var
R74997:74999 Coq.Init.Datatypes <> fst def
R74990:74990 VST.floyd.VSU <> i:824 var
R75008:75009 Coq.Lists.List <> In def
R75014:75016 Coq.Lists.List <> map def
R75022:75023 VST.floyd.VSU <> ComponentJoin.V2 var
R75018:75020 Coq.Init.Datatypes <> fst def
R75011:75011 VST.floyd.VSU <> i:824 var
R74967:74968 Coq.Lists.List <> In def
R74973:74975 Coq.Lists.List <> map def
R74981:74981 VST.floyd.VSU <> ComponentJoin.V var
R74977:74979 Coq.Init.Datatypes <> fst def
R74970:74970 VST.floyd.VSU <> i:824 var
prf 75034:75058 <> Calling_conventions_match
binder 75061:75061 <> i:826
binder 75063:75066 <> psi1:827
binder 75068:75071 <> psi2:828
R75109:75111 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75088:75094 VST.veric.initial_world <> find_id def
R75099:75104 VST.floyd.VSU <> Comp_G def
R75106:75107 VST.floyd.VSU <> ComponentJoin.c1 var
R75096:75096 VST.floyd.VSU <> i:826 var
R75112:75115 Coq.Init.Datatypes <> Some constr
R75117:75120 VST.floyd.VSU <> psi1:827 var
binder 75081:75085 <> Hpsi1:829
R75159:75161 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75138:75144 VST.veric.initial_world <> find_id def
R75149:75154 VST.floyd.VSU <> Comp_G def
R75156:75157 VST.floyd.VSU <> ComponentJoin.c2 var
R75146:75146 VST.floyd.VSU <> i:826 var
R75162:75165 Coq.Init.Datatypes <> Some constr
R75167:75170 VST.floyd.VSU <> psi2:828 var
binder 75130:75134 <> Hpsi2:830
R75207:75209 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75174:75201 VST.veric.seplog <> callingconvention_of_funspec def
R75203:75206 VST.floyd.VSU <> psi1:827 var
R75210:75237 VST.veric.seplog <> callingconvention_of_funspec def
R75239:75242 VST.floyd.VSU <> psi2:828 var
R75307:75318 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R75307:75318 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R75336:75346 VST.floyd.VSU <> Comp_G_elim thm
R75348:75349 VST.floyd.VSU <> ComponentJoin.c1 var
R75336:75346 VST.floyd.VSU <> Comp_G_elim thm
R75348:75349 VST.floyd.VSU <> ComponentJoin.c1 var
R75365:75382 VST.veric.initial_world <> find_id_In_map_fst thm
R75365:75382 VST.veric.initial_world <> find_id_In_map_fst thm
R75463:75476 VST.floyd.VSU <> Fundef_of_Gfun thm
R75463:75476 VST.floyd.VSU <> Fundef_of_Gfun thm
R75520:75530 VST.floyd.VSU <> Comp_G_elim thm
R75532:75533 VST.floyd.VSU <> ComponentJoin.c2 var
R75520:75530 VST.floyd.VSU <> Comp_G_elim thm
R75532:75533 VST.floyd.VSU <> ComponentJoin.c2 var
R75551:75568 VST.veric.initial_world <> find_id_In_map_fst thm
R75551:75568 VST.veric.initial_world <> find_id_In_map_fst thm
R75652:75665 VST.floyd.VSU <> Fundef_of_Gfun thm
R75652:75665 VST.floyd.VSU <> Fundef_of_Gfun thm
R75715:75726 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R75745:75751 Coq.Init.Logic <> eq_refl constr
R75733:75739 Coq.Init.Logic <> eq_refl constr
R75715:75726 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R75745:75751 Coq.Init.Logic <> eq_refl constr
R75733:75739 Coq.Init.Logic <> eq_refl constr
R75791:75802 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R75823:75838 VST.floyd.VSU <> Comp_G_justified proj
R75840:75841 VST.floyd.VSU <> ComponentJoin.c1 var
R75823:75838 VST.floyd.VSU <> Comp_G_justified proj
R75840:75841 VST.floyd.VSU <> ComponentJoin.c1 var
R75887:75901 VST.floyd.VSU <> ExternalInfo_cc thm
R75887:75901 VST.floyd.VSU <> ExternalInfo_cc thm
R75943:75958 VST.floyd.VSU <> Comp_G_justified proj
R75960:75961 VST.floyd.VSU <> ComponentJoin.c2 var
R75943:75958 VST.floyd.VSU <> Comp_G_justified proj
R75960:75961 VST.floyd.VSU <> ComponentJoin.c2 var
R76007:76021 VST.floyd.VSU <> ExternalInfo_cc thm
R76007:76021 VST.floyd.VSU <> ExternalInfo_cc thm
R76097:76110 VST.floyd.VSU <> Fundef_of_Gfun thm
R76097:76110 VST.floyd.VSU <> Fundef_of_Gfun thm
R76160:76171 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R76190:76196 Coq.Init.Logic <> eq_refl constr
R76178:76184 Coq.Init.Logic <> eq_refl constr
R76160:76171 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R76190:76196 Coq.Init.Logic <> eq_refl constr
R76178:76184 Coq.Init.Logic <> eq_refl constr
R76241:76252 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R76274:76290 compcert.cfrontend.Ctypes <> signature_of_type def
R76341:76356 VST.floyd.VSU <> Comp_G_justified proj
R76358:76359 VST.floyd.VSU <> ComponentJoin.c1 var
R76341:76356 VST.floyd.VSU <> Comp_G_justified proj
R76358:76359 VST.floyd.VSU <> ComponentJoin.c1 var
R76405:76419 VST.floyd.VSU <> ExternalInfo_cc thm
R76405:76419 VST.floyd.VSU <> ExternalInfo_cc thm
R76461:76476 VST.floyd.VSU <> Comp_G_justified proj
R76478:76479 VST.floyd.VSU <> ComponentJoin.c2 var
R76461:76476 VST.floyd.VSU <> Comp_G_justified proj
R76478:76479 VST.floyd.VSU <> ComponentJoin.c2 var
R76525:76539 VST.floyd.VSU <> InternalInfo_cc thm
R76525:76539 VST.floyd.VSU <> InternalInfo_cc thm
R76611:76624 VST.floyd.VSU <> Fundef_of_Gfun thm
R76611:76624 VST.floyd.VSU <> Fundef_of_Gfun thm
R76668:76678 VST.floyd.VSU <> Comp_G_elim thm
R76680:76681 VST.floyd.VSU <> ComponentJoin.c2 var
R76668:76678 VST.floyd.VSU <> Comp_G_elim thm
R76680:76681 VST.floyd.VSU <> ComponentJoin.c2 var
R76699:76716 VST.veric.initial_world <> find_id_In_map_fst thm
R76699:76716 VST.veric.initial_world <> find_id_In_map_fst thm
R76800:76813 VST.floyd.VSU <> Fundef_of_Gfun thm
R76800:76813 VST.floyd.VSU <> Fundef_of_Gfun thm
R76863:76874 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R76893:76899 Coq.Init.Logic <> eq_refl constr
R76881:76887 Coq.Init.Logic <> eq_refl constr
R76863:76874 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R76893:76899 Coq.Init.Logic <> eq_refl constr
R76881:76887 Coq.Init.Logic <> eq_refl constr
R76944:76955 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R76977:76993 compcert.cfrontend.Ctypes <> signature_of_type def
R77044:77059 VST.floyd.VSU <> Comp_G_justified proj
R77061:77062 VST.floyd.VSU <> ComponentJoin.c1 var
R77044:77059 VST.floyd.VSU <> Comp_G_justified proj
R77061:77062 VST.floyd.VSU <> ComponentJoin.c1 var
R77108:77122 VST.floyd.VSU <> InternalInfo_cc thm
R77108:77122 VST.floyd.VSU <> InternalInfo_cc thm
R77164:77179 VST.floyd.VSU <> Comp_G_justified proj
R77181:77182 VST.floyd.VSU <> ComponentJoin.c2 var
R77164:77179 VST.floyd.VSU <> Comp_G_justified proj
R77181:77182 VST.floyd.VSU <> ComponentJoin.c2 var
R77228:77242 VST.floyd.VSU <> ExternalInfo_cc thm
R77228:77242 VST.floyd.VSU <> ExternalInfo_cc thm
R77317:77330 VST.floyd.VSU <> Fundef_of_Gfun thm
R77317:77330 VST.floyd.VSU <> Fundef_of_Gfun thm
R77380:77391 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R77410:77416 Coq.Init.Logic <> eq_refl constr
R77398:77404 Coq.Init.Logic <> eq_refl constr
R77380:77391 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R77410:77416 Coq.Init.Logic <> eq_refl constr
R77398:77404 Coq.Init.Logic <> eq_refl constr
R77456:77467 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R77488:77503 VST.floyd.VSU <> Comp_G_justified proj
R77505:77506 VST.floyd.VSU <> ComponentJoin.c1 var
R77488:77503 VST.floyd.VSU <> Comp_G_justified proj
R77505:77506 VST.floyd.VSU <> ComponentJoin.c1 var
R77552:77566 VST.floyd.VSU <> InternalInfo_cc thm
R77552:77566 VST.floyd.VSU <> InternalInfo_cc thm
R77608:77623 VST.floyd.VSU <> Comp_G_justified proj
R77625:77626 VST.floyd.VSU <> ComponentJoin.c2 var
R77608:77623 VST.floyd.VSU <> Comp_G_justified proj
R77625:77626 VST.floyd.VSU <> ComponentJoin.c2 var
R77672:77686 VST.floyd.VSU <> InternalInfo_cc thm
R77672:77686 VST.floyd.VSU <> InternalInfo_cc thm
prf 77731:77744 <> Exports_sqsub1
R77747:77760 VST.floyd.VSU <> funspecs_sqsub def
R77770:77777 VST.floyd.VSU <> ComponentJoin.Exports1 var
R77762:77768 VST.floyd.VSU <> ComponentJoin.Exports var
R77857:77870 VST.floyd.VSU <> G_merge_sqsub1 thm
R77857:77870 VST.floyd.VSU <> G_merge_sqsub1 thm
R77896:77897 VST.floyd.VSU <> ComponentJoin.c1 var
R77896:77897 VST.floyd.VSU <> ComponentJoin.c1 var
R77949:77950 VST.floyd.VSU <> ComponentJoin.c2 var
R77949:77950 VST.floyd.VSU <> ComponentJoin.c2 var
R78011:78012 VST.floyd.VSU <> HC def
R78011:78012 VST.floyd.VSU <> HC def
R78372:78373 VST.floyd.VSU <> ComponentJoin.c1 var
R78372:78373 VST.floyd.VSU <> ComponentJoin.c1 var
R78425:78426 VST.floyd.VSU <> ComponentJoin.c2 var
R78425:78426 VST.floyd.VSU <> ComponentJoin.c2 var
R78479:78492 VST.floyd.VSU <> funspec_sub_cc thm
R78479:78492 VST.floyd.VSU <> funspec_sub_cc thm
R78511:78524 VST.floyd.VSU <> funspec_sub_cc thm
R78511:78524 VST.floyd.VSU <> funspec_sub_cc thm
R78590:78614 VST.floyd.VSU <> Calling_conventions_match thm
R78590:78614 VST.floyd.VSU <> Calling_conventions_match thm
prf 78642:78655 <> Exports_sqsub2
R78658:78671 VST.floyd.VSU <> funspecs_sqsub def
R78681:78688 VST.floyd.VSU <> ComponentJoin.Exports2 var
R78673:78679 VST.floyd.VSU <> ComponentJoin.Exports var
R78768:78781 VST.floyd.VSU <> G_merge_sqsub2 thm
R78793:78808 VST.floyd.VSU <> Comp_Exports_LNR proj
R78810:78811 VST.floyd.VSU <> ComponentJoin.c2 var
R78768:78781 VST.floyd.VSU <> G_merge_sqsub2 thm
R78793:78808 VST.floyd.VSU <> Comp_Exports_LNR proj
R78810:78811 VST.floyd.VSU <> ComponentJoin.c2 var
R78841:78842 VST.floyd.VSU <> ComponentJoin.c1 var
R78841:78842 VST.floyd.VSU <> ComponentJoin.c1 var
R78894:78895 VST.floyd.VSU <> ComponentJoin.c2 var
R78894:78895 VST.floyd.VSU <> ComponentJoin.c2 var
R78955:78956 VST.floyd.VSU <> HC def
R78955:78956 VST.floyd.VSU <> HC def
R79317:79318 VST.floyd.VSU <> ComponentJoin.c1 var
R79317:79318 VST.floyd.VSU <> ComponentJoin.c1 var
R79370:79371 VST.floyd.VSU <> ComponentJoin.c2 var
R79370:79371 VST.floyd.VSU <> ComponentJoin.c2 var
R79424:79437 VST.floyd.VSU <> funspec_sub_cc thm
R79424:79437 VST.floyd.VSU <> funspec_sub_cc thm
R79456:79469 VST.floyd.VSU <> funspec_sub_cc thm
R79456:79469 VST.floyd.VSU <> funspec_sub_cc thm
R79535:79559 VST.floyd.VSU <> Calling_conventions_match thm
R79535:79559 VST.floyd.VSU <> Calling_conventions_match thm
prf 79587:79600 <> Exports_sqsub3
binder 79602:79602 <> X:831
R79615:79628 VST.floyd.VSU <> funspecs_sqsub def
R79632:79639 VST.floyd.VSU <> ComponentJoin.Exports1 var
R79630:79630 VST.floyd.VSU <> X:831 var
binder 79611:79612 <> H1:832
R79647:79660 VST.floyd.VSU <> funspecs_sqsub def
R79664:79671 VST.floyd.VSU <> ComponentJoin.Exports2 var
R79662:79662 VST.floyd.VSU <> X:831 var
binder 79643:79644 <> H2:833
R79675:79688 VST.floyd.VSU <> funspecs_sqsub def
R79692:79698 VST.floyd.VSU <> ComponentJoin.Exports var
R79690:79690 VST.floyd.VSU <> X:831 var
R79790:79803 VST.floyd.VSU <> G_merge_sqsub3 thm
R79790:79803 VST.floyd.VSU <> G_merge_sqsub3 thm
R79825:79840 VST.floyd.VSU <> Comp_Exports_LNR proj
R79842:79843 VST.floyd.VSU <> ComponentJoin.c2 var
R79825:79840 VST.floyd.VSU <> Comp_Exports_LNR proj
R79842:79843 VST.floyd.VSU <> ComponentJoin.c2 var
R79874:79875 VST.floyd.VSU <> ComponentJoin.c1 var
R79874:79875 VST.floyd.VSU <> ComponentJoin.c1 var
R79929:79930 VST.floyd.VSU <> ComponentJoin.c2 var
R79929:79930 VST.floyd.VSU <> ComponentJoin.c2 var
R79992:79993 VST.floyd.VSU <> HC def
R79992:79993 VST.floyd.VSU <> HC def
R80370:80371 VST.floyd.VSU <> ComponentJoin.c1 var
R80370:80371 VST.floyd.VSU <> ComponentJoin.c1 var
R80425:80426 VST.floyd.VSU <> ComponentJoin.c2 var
R80425:80426 VST.floyd.VSU <> ComponentJoin.c2 var
R80481:80494 VST.floyd.VSU <> funspec_sub_cc thm
R80481:80494 VST.floyd.VSU <> funspec_sub_cc thm
R80515:80528 VST.floyd.VSU <> funspec_sub_cc thm
R80515:80528 VST.floyd.VSU <> funspec_sub_cc thm
R80598:80622 VST.floyd.VSU <> Calling_conventions_match thm
R80598:80622 VST.floyd.VSU <> Calling_conventions_match thm
prf 80650:80663 <> InitGPred_nilD
binder 80665:80666 <> gv:834
R80685:80687 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80669:80677 VST.floyd.VSU <> InitGPred def
R80683:80684 VST.floyd.VSU <> gv:834 var
R80679:80681 Coq.Init.Datatypes <> nil constr
R80688:80690 VST.msl.seplog <> emp meth
prf 80732:80746 <> InitGPred_consD
binder 80748:80748 <> X:835
binder 80750:80750 <> a:836
binder 80752:80753 <> gv:837
R80783:80785 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80762:80770 VST.floyd.VSU <> InitGPred def
R80781:80782 VST.floyd.VSU <> gv:837 var
R80774:80777 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R80773:80773 VST.floyd.VSU <> a:836 var
R80778:80778 VST.floyd.VSU <> X:835 var
R80805:80807 VST.msl.seplog <> ::logic:x_'*'_x not
R80787:80796 VST.floyd.VSU <> globs2pred def
R80803:80804 VST.floyd.VSU <> gv:837 var
R80801:80801 VST.floyd.VSU <> a:836 var
R80798:80799 VST.floyd.VSU <> gv:837 var
R80808:80816 VST.floyd.VSU <> InitGPred def
R80820:80821 VST.floyd.VSU <> gv:837 var
R80818:80818 VST.floyd.VSU <> X:835 var
prf 80870:80886 <> InitGPred_middleD
binder 80888:80888 <> Y:838
binder 80890:80890 <> a:839
binder 80892:80893 <> gv:840
binder 80903:80903 <> X:841
R80938:80940 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80912:80920 VST.floyd.VSU <> InitGPred def
R80936:80937 VST.floyd.VSU <> gv:840 var
R80924:80927 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R80923:80923 VST.floyd.VSU <> Y:838 var
R80929:80932 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R80928:80928 VST.floyd.VSU <> a:839 var
R80933:80933 VST.floyd.VSU <> X:841 var
R80977:80979 VST.msl.seplog <> ::logic:x_'*'_x not
R80960:80962 VST.msl.seplog <> ::logic:x_'*'_x not
R80942:80951 VST.floyd.VSU <> globs2pred def
R80958:80959 VST.floyd.VSU <> gv:840 var
R80956:80956 VST.floyd.VSU <> a:839 var
R80953:80954 VST.floyd.VSU <> gv:840 var
R80963:80971 VST.floyd.VSU <> InitGPred def
R80975:80976 VST.floyd.VSU <> gv:840 var
R80973:80973 VST.floyd.VSU <> Y:838 var
R80980:80988 VST.floyd.VSU <> InitGPred def
R80992:80993 VST.floyd.VSU <> gv:840 var
R80990:80990 VST.floyd.VSU <> X:841 var
R81057:81071 VST.floyd.VSU <> InitGPred_consD thm
R81074:81087 VST.floyd.VSU <> InitGPred_nilD thm
R81090:81099 VST.msl.seplog <> sepcon_emp meth
R81057:81071 VST.floyd.VSU <> InitGPred_consD thm
R81057:81071 VST.floyd.VSU <> InitGPred_consD thm
R81074:81087 VST.floyd.VSU <> InitGPred_nilD thm
R81074:81087 VST.floyd.VSU <> InitGPred_nilD thm
R81090:81099 VST.msl.seplog <> sepcon_emp meth
R81090:81099 VST.msl.seplog <> sepcon_emp meth
R81125:81139 VST.floyd.VSU <> InitGPred_consD thm
R81147:81161 VST.floyd.VSU <> InitGPred_consD thm
R81125:81139 VST.floyd.VSU <> InitGPred_consD thm
R81125:81139 VST.floyd.VSU <> InitGPred_consD thm
R81147:81161 VST.floyd.VSU <> InitGPred_consD thm
R81147:81161 VST.floyd.VSU <> InitGPred_consD thm
R81170:81177 VST.msl.seplog <> pred_ext meth
R81170:81177 VST.msl.seplog <> pred_ext meth
prf 81200:81212 <> InitGPred_app
binder 81214:81215 <> gv:842
binder 81225:81225 <> X:843
binder 81227:81227 <> Y:844
R81258:81260 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81237:81245 VST.floyd.VSU <> InitGPred def
R81256:81257 VST.floyd.VSU <> gv:842 var
R81249:81252 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R81248:81248 VST.floyd.VSU <> X:843 var
R81253:81253 VST.floyd.VSU <> Y:844 var
R81276:81278 VST.msl.seplog <> ::logic:x_'*'_x not
R81262:81270 VST.floyd.VSU <> InitGPred def
R81274:81275 VST.floyd.VSU <> gv:842 var
R81272:81272 VST.floyd.VSU <> X:843 var
R81279:81287 VST.floyd.VSU <> InitGPred def
R81291:81292 VST.floyd.VSU <> gv:842 var
R81289:81289 VST.floyd.VSU <> Y:844 var
R81354:81367 VST.floyd.VSU <> InitGPred_nilD thm
R81370:81379 VST.msl.log_normalize <> emp_sepcon thm
R81354:81367 VST.floyd.VSU <> InitGPred_nilD thm
R81354:81367 VST.floyd.VSU <> InitGPred_nilD thm
R81370:81379 VST.msl.log_normalize <> emp_sepcon thm
R81370:81379 VST.msl.log_normalize <> emp_sepcon thm
R81403:81417 VST.floyd.VSU <> InitGPred_consD thm
R81425:81436 VST.msl.seplog <> sepcon_assoc meth
R81403:81417 VST.floyd.VSU <> InitGPred_consD thm
R81403:81417 VST.floyd.VSU <> InitGPred_consD thm
R81403:81417 VST.floyd.VSU <> InitGPred_consD thm
R81403:81417 VST.floyd.VSU <> InitGPred_consD thm
R81425:81436 VST.msl.seplog <> sepcon_assoc meth
R81425:81436 VST.msl.seplog <> sepcon_assoc meth
prf 81460:81475 <> globs2predD_true
binder 81477:81477 <> a:845
binder 81479:81480 <> gv:846
R81498:81507 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R81526:81528 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81508:81517 VST.floyd.VSU <> globs2pred def
R81524:81525 VST.floyd.VSU <> gv:846 var
R81522:81522 VST.floyd.VSU <> a:845 var
R81519:81520 VST.floyd.VSU <> gv:846 var
R81529:81531 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R81535:81536 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 81532:81532 <> i:847
binder 81534:81534 <> v:848
R81572:81575 VST.msl.seplog <> ::logic:x_'&&'_x not
R81537:81540 VST.msl.seplog <> ::logic:'!!'_x not
R81571:81571 VST.msl.seplog <> ::logic:'!!'_x not
R81553:81556 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R81542:81542 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81541:81541 VST.floyd.VSU <> a:845 var
R81543:81543 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R81545:81545 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R81552:81552 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R81544:81544 VST.floyd.VSU <> i:847 var
R81546:81549 compcert.common.AST <> Gvar constr
R81551:81551 VST.floyd.VSU <> v:848 var
R81557:81563 VST.floyd.val_lemmas <> headptr def
R81566:81567 VST.floyd.VSU <> gv:846 var
R81569:81569 VST.floyd.VSU <> i:847 var
R81576:81601 VST.veric.initialize <> gv_globvar2pred def
R81613:81614 VST.floyd.VSU <> gv:846 var
R81606:81606 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R81608:81609 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R81611:81611 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R81607:81607 VST.floyd.VSU <> i:847 var
R81610:81610 VST.floyd.VSU <> v:848 var
R81603:81604 VST.floyd.VSU <> gv:846 var
R81487:81489 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81483:81486 Coq.Init.Datatypes <> true constr
R81490:81495 VST.floyd.VSU <> isGvar def
R81497:81497 VST.floyd.VSU <> a:845 var
R81638:81647 VST.floyd.VSU <> globs2pred def
R81669:81674 VST.floyd.VSU <> isGvar def
R81725:81732 VST.msl.seplog <> pred_ext meth
R81725:81732 VST.msl.seplog <> pred_ext meth
prf 81812:81828 <> globs2predD_false
binder 81830:81830 <> a:849
binder 81832:81833 <> gv:850
R81852:81861 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R81880:81882 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81862:81871 VST.floyd.VSU <> globs2pred def
R81878:81879 VST.floyd.VSU <> gv:850 var
R81876:81876 VST.floyd.VSU <> a:849 var
R81873:81874 VST.floyd.VSU <> gv:850 var
R81883:81885 VST.msl.seplog <> emp meth
R81841:81843 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81836:81840 Coq.Init.Datatypes <> false constr
R81844:81849 VST.floyd.VSU <> isGvar def
R81851:81851 VST.floyd.VSU <> a:849 var
R81909:81918 VST.floyd.VSU <> globs2pred def
R81940:81945 VST.floyd.VSU <> isGvar def
prf 82002:82022 <> list_disjoint_app_inv
binder 82025:82025 <> A:851
R82038:82041 Coq.Init.Datatypes <> list ind
R82043:82043 VST.floyd.VSU <> A:851 var
binder 82029:82030 <> l1:852
binder 82032:82033 <> l2:853
binder 82035:82035 <> l:854
R82078:82081 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R82100:82103 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R82082:82094 compcert.lib.Coqlib <> list_disjoint def
R82099:82099 VST.floyd.VSU <> l:854 var
R82096:82097 VST.floyd.VSU <> l1:852 var
R82104:82116 compcert.lib.Coqlib <> list_disjoint def
R82121:82121 VST.floyd.VSU <> l:854 var
R82118:82119 VST.floyd.VSU <> l2:853 var
R82054:82066 compcert.lib.Coqlib <> list_disjoint def
R82077:82077 VST.floyd.VSU <> l:854 var
R82071:82072 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R82069:82070 VST.floyd.VSU <> l1:852 var
R82073:82074 VST.floyd.VSU <> l2:853 var
R82196:82204 Coq.Lists.List <> in_or_app thm
R82196:82204 Coq.Lists.List <> in_or_app thm
R82251:82259 Coq.Lists.List <> in_or_app thm
R82251:82259 Coq.Lists.List <> in_or_app thm
prf 82294:82312 <> list_disjoint_consD
binder 82315:82315 <> A:855
R82321:82321 VST.floyd.VSU <> A:855 var
binder 82319:82319 <> a:856
binder 82324:82325 <> l1:857
binder 82327:82327 <> l:858
R82360:82363 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R82364:82364 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R82373:82377 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R82365:82366 Coq.Init.Logic <> ::type_scope:'~'_x not
R82367:82368 Coq.Lists.List <> In def
R82372:82372 VST.floyd.VSU <> l:858 var
R82370:82370 VST.floyd.VSU <> a:856 var
R82378:82390 compcert.lib.Coqlib <> list_disjoint def
R82395:82395 VST.floyd.VSU <> l:858 var
R82392:82393 VST.floyd.VSU <> l1:857 var
R82337:82349 compcert.lib.Coqlib <> list_disjoint def
R82359:82359 VST.floyd.VSU <> l:858 var
R82353:82354 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R82352:82352 VST.floyd.VSU <> a:856 var
R82355:82356 VST.floyd.VSU <> l1:857 var
prf 82543:82563 <> list_disjoint_middleD
binder 82566:82566 <> A:859
R82572:82572 VST.floyd.VSU <> A:859 var
binder 82570:82570 <> a:860
binder 82575:82576 <> l1:861
binder 82578:82579 <> l2:862
binder 82581:82581 <> l:863
R82618:82621 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R82622:82622 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R82631:82635 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R82623:82624 Coq.Init.Logic <> ::type_scope:'~'_x not
R82625:82626 Coq.Lists.List <> In def
R82630:82630 VST.floyd.VSU <> l:863 var
R82628:82628 VST.floyd.VSU <> a:860 var
R82636:82648 compcert.lib.Coqlib <> list_disjoint def
R82659:82659 VST.floyd.VSU <> l:863 var
R82653:82654 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R82651:82652 VST.floyd.VSU <> l1:861 var
R82655:82656 VST.floyd.VSU <> l2:862 var
R82591:82603 compcert.lib.Coqlib <> list_disjoint def
R82617:82617 VST.floyd.VSU <> l:863 var
R82608:82609 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R82606:82607 VST.floyd.VSU <> l1:861 var
R82611:82612 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R82610:82610 VST.floyd.VSU <> a:860 var
R82613:82614 VST.floyd.VSU <> l2:862 var
R82690:82710 VST.floyd.VSU <> list_disjoint_app_inv thm
R82690:82710 VST.floyd.VSU <> list_disjoint_app_inv thm
R82738:82756 VST.floyd.VSU <> list_disjoint_consD thm
R82738:82756 VST.floyd.VSU <> list_disjoint_consD thm
R82802:82820 VST.floyd.assoclists <> list_disjoint_app_L thm
R82802:82820 VST.floyd.assoclists <> list_disjoint_app_L thm
prf 82844:82863 <> list_norepet_middleD
binder 82866:82866 <> A:864
R82872:82872 VST.floyd.VSU <> A:864 var
binder 82870:82870 <> a:865
binder 82875:82876 <> l1:866
binder 82878:82879 <> l2:867
R82913:82916 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R82917:82917 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R82933:82937 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R82918:82919 Coq.Init.Logic <> ::type_scope:'~'_x not
R82920:82921 Coq.Lists.List <> In def
R82928:82929 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R82926:82927 VST.floyd.VSU <> l1:866 var
R82930:82931 VST.floyd.VSU <> l2:867 var
R82923:82923 VST.floyd.VSU <> a:865 var
R82938:82949 compcert.lib.Coqlib <> list_norepet ind
R82954:82955 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R82952:82953 VST.floyd.VSU <> l1:866 var
R82956:82957 VST.floyd.VSU <> l2:867 var
R82889:82900 compcert.lib.Coqlib <> list_norepet ind
R82905:82906 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R82903:82904 VST.floyd.VSU <> l1:866 var
R82908:82909 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R82907:82907 VST.floyd.VSU <> a:865 var
R82910:82911 VST.floyd.VSU <> l2:867 var
R82989:83004 compcert.lib.Coqlib <> list_norepet_app thm
R82989:83004 compcert.lib.Coqlib <> list_norepet_app thm
R83068:83076 Coq.Lists.List <> in_app_or thm
R83068:83076 Coq.Lists.List <> in_app_or thm
R83160:83183 compcert.lib.Coqlib <> list_disjoint_cons_right thm
R83160:83183 compcert.lib.Coqlib <> list_disjoint_cons_right thm
R83198:83213 compcert.lib.Coqlib <> list_norepet_app thm
R83198:83213 compcert.lib.Coqlib <> list_norepet_app thm
prf 83425:83444 <> list_norepet_app_inv
binder 83447:83447 <> A:868
binder 83458:83459 <> l1:869
binder 83461:83462 <> m1:870
binder 83464:83465 <> l2:871
binder 83467:83468 <> m2:872
R83473:83473 VST.floyd.VSU <> A:868 var
binder 83471:83471 <> a:873
R83512:83515 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R83533:83542 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R83566:83569 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R83578:83580 Coq.Init.Logic <> ::type_scope:x_'='_x not
R83572:83575 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R83570:83571 VST.floyd.VSU <> m1:870 var
R83576:83577 VST.floyd.VSU <> m2:872 var
R83583:83586 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R83581:83582 VST.floyd.VSU <> l1:869 var
R83587:83588 VST.floyd.VSU <> l2:871 var
R83543:83554 compcert.lib.Coqlib <> list_norepet ind
R83559:83562 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R83557:83558 VST.floyd.VSU <> l1:869 var
R83563:83564 VST.floyd.VSU <> l2:871 var
R83516:83517 Coq.Init.Logic <> ::type_scope:'~'_x not
R83518:83519 Coq.Lists.List <> In def
R83526:83529 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R83524:83525 VST.floyd.VSU <> l1:869 var
R83530:83531 VST.floyd.VSU <> l2:871 var
R83521:83521 VST.floyd.VSU <> a:873 var
R83496:83498 Coq.Init.Logic <> ::type_scope:x_'='_x not
R83485:83488 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R83483:83484 VST.floyd.VSU <> m1:870 var
R83490:83493 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R83489:83489 VST.floyd.VSU <> a:873 var
R83494:83495 VST.floyd.VSU <> m2:872 var
R83501:83504 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R83499:83500 VST.floyd.VSU <> l1:869 var
R83506:83509 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R83505:83505 VST.floyd.VSU <> a:873 var
R83510:83511 VST.floyd.VSU <> l2:871 var
R83687:83695 Coq.Lists.List <> in_or_app thm
R83687:83695 Coq.Lists.List <> in_or_app thm
prf 83886:83896 <> map_app_inv
binder 83899:83899 <> A:874
binder 83901:83901 <> B:875
binder 83903:83903 <> C:876
R83922:83925 Coq.Init.Datatypes <> list ind
R83929:83929 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R83928:83928 VST.floyd.VSU <> A:874 var
R83930:83930 VST.floyd.VSU <> B:875 var
binder 83915:83916 <> l1:877
binder 83918:83919 <> l2:878
R83938:83941 Coq.Init.Datatypes <> list ind
R83945:83945 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R83944:83944 VST.floyd.VSU <> A:874 var
R83946:83946 VST.floyd.VSU <> C:876 var
binder 83935:83935 <> m:879
R83987:83996 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R83997:84003 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R84009:84010 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 84004:84005 <> m1:880
binder 84007:84008 <> m2:881
R84034:84037 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R84021:84023 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84011:84013 Coq.Lists.List <> map def
R84019:84020 VST.floyd.VSU <> l1:877 var
R84015:84017 Coq.Init.Datatypes <> fst def
R84024:84026 Coq.Lists.List <> map def
R84032:84033 VST.floyd.VSU <> m1:880 var
R84028:84030 Coq.Init.Datatypes <> fst def
R84061:84064 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R84048:84050 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84038:84040 Coq.Lists.List <> map def
R84046:84047 VST.floyd.VSU <> l2:878 var
R84042:84044 Coq.Init.Datatypes <> fst def
R84051:84053 Coq.Lists.List <> map def
R84059:84060 VST.floyd.VSU <> m2:881 var
R84055:84057 Coq.Init.Datatypes <> fst def
R84066:84066 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84065:84065 VST.floyd.VSU <> m:879 var
R84069:84070 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R84067:84068 VST.floyd.VSU <> m1:880 var
R84071:84072 VST.floyd.VSU <> m2:881 var
R83975:83977 Coq.Init.Logic <> ::type_scope:x_'='_x not
R83957:83959 Coq.Lists.List <> map def
R83968:83971 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R83966:83967 VST.floyd.VSU <> l1:877 var
R83972:83973 VST.floyd.VSU <> l2:878 var
R83961:83963 Coq.Init.Datatypes <> fst def
R83978:83980 Coq.Lists.List <> map def
R83986:83986 VST.floyd.VSU <> m:879 var
R83982:83984 Coq.Init.Datatypes <> fst def
R84129:84131 Coq.Init.Datatypes <> nil constr
R84129:84131 Coq.Init.Datatypes <> nil constr
R84261:84262 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R84260:84260 VST.floyd.VSU <> ComponentJoin.p var
R84261:84262 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R84260:84260 VST.floyd.VSU <> ComponentJoin.p var
prf 84329:84345 <> filter_involutive
binder 84348:84348 <> A:882
binder 84350:84350 <> f:883
R84357:84360 Coq.Init.Datatypes <> list ind
R84362:84362 VST.floyd.VSU <> A:882 var
binder 84354:84354 <> l:884
R84387:84389 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84366:84371 Coq.Lists.List <> filter def
R84376:84381 Coq.Lists.List <> filter def
R84385:84385 VST.floyd.VSU <> l:884 var
R84383:84383 VST.floyd.VSU <> f:883 var
R84373:84373 VST.floyd.VSU <> f:883 var
R84390:84395 Coq.Lists.List <> filter def
R84399:84399 VST.floyd.VSU <> l:884 var
R84397:84397 VST.floyd.VSU <> f:883 var
R84424:84436 VST.floyd.assoclists <> filter_filter thm
R84424:84436 VST.floyd.assoclists <> filter_filter thm
R84424:84436 VST.floyd.assoclists <> filter_filter thm
prf 84526:84541 <> filter_redundant
binder 84544:84544 <> A:885
binder 84546:84546 <> f:886
binder 84548:84548 <> l:887
R84552:84552 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R84587:84591 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R84602:84604 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84592:84597 Coq.Lists.List <> filter def
R84601:84601 VST.floyd.VSU <> l:887 var
R84599:84599 VST.floyd.VSU <> f:886 var
R84605:84605 VST.floyd.VSU <> l:887 var
R84563:84563 VST.floyd.VSU <> A:885 var
binder 84561:84561 <> a:888
R84573:84576 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R84580:84582 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84577:84577 VST.floyd.VSU <> f:886 var
R84579:84579 VST.floyd.VSU <> a:888 var
R84583:84586 Coq.Init.Datatypes <> true constr
R84567:84568 Coq.Lists.List <> In def
R84572:84572 VST.floyd.VSU <> l:887 var
R84570:84570 VST.floyd.VSU <> a:888 var
prf 84755:84768 <> InitGPred_join
binder 84771:84772 <> gv:889
binder 84775:84778 <> VDp1:890
binder 84780:84783 <> VDp2:891
binder 84785:84787 <> VDp:892
R84828:84830 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84800:84802 Coq.Lists.List <> map def
R84809:84814 Coq.Lists.List <> filter def
R84823:84826 VST.floyd.VSU <> VDp1:890 var
R84816:84821 VST.floyd.VSU <> isGvar def
R84804:84806 Coq.Init.Datatypes <> fst def
R84831:84833 Coq.Lists.List <> map def
R84839:84840 VST.floyd.VSU <> ComponentJoin.V1 var
R84835:84837 Coq.Init.Datatypes <> fst def
binder 84795:84797 <> VD1:893
R84882:84884 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84854:84856 Coq.Lists.List <> map def
R84863:84868 Coq.Lists.List <> filter def
R84877:84880 VST.floyd.VSU <> VDp2:891 var
R84870:84875 VST.floyd.VSU <> isGvar def
R84858:84860 Coq.Init.Datatypes <> fst def
R84885:84887 Coq.Lists.List <> map def
R84893:84894 VST.floyd.VSU <> ComponentJoin.V2 var
R84889:84891 Coq.Init.Datatypes <> fst def
binder 84849:84851 <> VD2:894
R84934:84936 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84907:84909 Coq.Lists.List <> map def
R84916:84921 Coq.Lists.List <> filter def
R84930:84932 VST.floyd.VSU <> VDp:892 var
R84923:84928 VST.floyd.VSU <> isGvar def
R84911:84913 Coq.Init.Datatypes <> fst def
R84937:84939 Coq.Lists.List <> map def
R84945:84945 VST.floyd.VSU <> ComponentJoin.V var
R84941:84943 Coq.Init.Datatypes <> fst def
binder 84903:84904 <> VD:895
binder 84973:84973 <> i:896
binder 84975:84975 <> d:897
R85017:85020 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R85050:85052 Coq.Init.Logic <> ::type_scope:x_'='_x not
R85021:85027 VST.veric.initial_world <> find_id def
R85032:85037 Coq.Lists.List <> filter def
R85046:85048 VST.floyd.VSU <> VDp:892 var
R85039:85044 VST.floyd.VSU <> isGvar def
R85029:85029 VST.floyd.VSU <> i:896 var
R85053:85056 Coq.Init.Datatypes <> Some constr
R85058:85058 VST.floyd.VSU <> d:897 var
R85008:85010 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84978:84984 VST.veric.initial_world <> find_id def
R84989:84994 Coq.Lists.List <> filter def
R85003:85006 VST.floyd.VSU <> VDp1:890 var
R84996:85001 VST.floyd.VSU <> isGvar def
R84986:84986 VST.floyd.VSU <> i:896 var
R85011:85014 Coq.Init.Datatypes <> Some constr
R85016:85016 VST.floyd.VSU <> d:897 var
binder 84955:84963 <> HVardefs1:898
binder 85085:85085 <> i:899
binder 85087:85087 <> d:900
R85129:85132 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R85162:85164 Coq.Init.Logic <> ::type_scope:x_'='_x not
R85133:85139 VST.veric.initial_world <> find_id def
R85144:85149 Coq.Lists.List <> filter def
R85158:85160 VST.floyd.VSU <> VDp:892 var
R85151:85156 VST.floyd.VSU <> isGvar def
R85141:85141 VST.floyd.VSU <> i:899 var
R85165:85168 Coq.Init.Datatypes <> Some constr
R85170:85170 VST.floyd.VSU <> d:900 var
R85120:85122 Coq.Init.Logic <> ::type_scope:x_'='_x not
R85090:85096 VST.veric.initial_world <> find_id def
R85101:85106 Coq.Lists.List <> filter def
R85115:85118 VST.floyd.VSU <> VDp2:891 var
R85108:85113 VST.floyd.VSU <> isGvar def
R85098:85098 VST.floyd.VSU <> i:899 var
R85123:85126 Coq.Init.Datatypes <> Some constr
R85128:85128 VST.floyd.VSU <> d:900 var
binder 85067:85075 <> HVardefs2:901
R85212:85220 Coq.Init.Logic <> ::type_scope:x_'='_x not
R85180:85188 VST.floyd.VSU <> InitGPred def
R85210:85211 VST.floyd.VSU <> gv:889 var
R85191:85196 Coq.Lists.List <> filter def
R85205:85207 VST.floyd.VSU <> VDp:892 var
R85198:85203 VST.floyd.VSU <> isGvar def
R85255:85257 VST.msl.seplog <> ::logic:x_'*'_x not
R85222:85230 VST.floyd.VSU <> InitGPred def
R85253:85254 VST.floyd.VSU <> gv:889 var
R85233:85238 Coq.Lists.List <> filter def
R85247:85250 VST.floyd.VSU <> VDp1:890 var
R85240:85245 VST.floyd.VSU <> isGvar def
R85258:85266 VST.floyd.VSU <> InitGPred def
R85289:85290 VST.floyd.VSU <> gv:889 var
R85269:85274 Coq.Lists.List <> filter def
R85283:85286 VST.floyd.VSU <> VDp2:891 var
R85276:85281 VST.floyd.VSU <> isGvar def
R85785:85786 VST.floyd.VSU <> ComponentJoin.V2 var
R85785:85786 VST.floyd.VSU <> ComponentJoin.V2 var
R85810:85811 VST.floyd.VSU <> ComponentJoin.V1 var
R85810:85811 VST.floyd.VSU <> ComponentJoin.V1 var
R85837:85837 VST.floyd.VSU <> ComponentJoin.V var
R85837:85837 VST.floyd.VSU <> ComponentJoin.V var
R85959:85968 Coq.Lists.List <> map_eq_nil thm
R85959:85968 Coq.Lists.List <> map_eq_nil thm
R86000:86002 Coq.Init.Logic <> ::type_scope:x_'='_x not
R85998:85999 VST.floyd.VSU <> ComponentJoin.V1 var
R86003:86005 Coq.Init.Datatypes <> nil constr
R86000:86002 Coq.Init.Logic <> ::type_scope:x_'='_x not
R85998:85999 VST.floyd.VSU <> ComponentJoin.V1 var
R86003:86005 Coq.Init.Datatypes <> nil constr
R86037:86038 VST.floyd.VSU <> ComponentJoin.V1 var
R86059:86059 VST.floyd.VSU <> ComponentJoin.p var
R86074:86076 VST.floyd.VSU <> ComponentJoin.HV1 var
R86074:86076 VST.floyd.VSU <> ComponentJoin.HV1 var
R86112:86118 VST.msl.Coqlib2 <> if_true thm
R86112:86118 VST.msl.Coqlib2 <> if_true thm
R86112:86118 VST.msl.Coqlib2 <> if_true thm
R86151:86153 VST.floyd.VSU <> ComponentJoin.HV1 var
R86156:86162 Coq.Init.Logic <> eq_refl constr
R86151:86153 VST.floyd.VSU <> ComponentJoin.HV1 var
R86156:86162 Coq.Init.Logic <> eq_refl constr
R86205:86214 Coq.Lists.List <> map_eq_nil thm
R86205:86214 Coq.Lists.List <> map_eq_nil thm
R86262:86264 Coq.Init.Logic <> ::type_scope:x_'='_x not
R86260:86261 VST.floyd.VSU <> ComponentJoin.V2 var
R86265:86267 Coq.Init.Datatypes <> nil constr
R86262:86264 Coq.Init.Logic <> ::type_scope:x_'='_x not
R86260:86261 VST.floyd.VSU <> ComponentJoin.V2 var
R86265:86267 Coq.Init.Datatypes <> nil constr
R86299:86300 VST.floyd.VSU <> ComponentJoin.V2 var
R86321:86321 VST.floyd.VSU <> ComponentJoin.p var
R86336:86338 VST.floyd.VSU <> ComponentJoin.HV2 var
R86336:86338 VST.floyd.VSU <> ComponentJoin.HV2 var
R86374:86380 VST.msl.Coqlib2 <> if_true thm
R86374:86380 VST.msl.Coqlib2 <> if_true thm
R86374:86380 VST.msl.Coqlib2 <> if_true thm
R86413:86415 VST.floyd.VSU <> ComponentJoin.HV2 var
R86418:86424 Coq.Init.Logic <> eq_refl constr
R86413:86415 VST.floyd.VSU <> ComponentJoin.HV2 var
R86418:86424 Coq.Init.Logic <> eq_refl constr
R86467:86476 Coq.Lists.List <> map_eq_nil thm
R86467:86476 Coq.Lists.List <> map_eq_nil thm
R86521:86529 VST.floyd.VSU <> InitGPred def
R86558:86567 VST.msl.log_normalize <> emp_sepcon thm
R86558:86567 VST.msl.log_normalize <> emp_sepcon thm
R86558:86567 VST.msl.log_normalize <> emp_sepcon thm
R86593:86598 VST.floyd.VSU <> isGvar def
R86661:86662 VST.floyd.VSU <> ComponentJoin.V2 var
R86658:86659 VST.floyd.VSU <> ComponentJoin.V1 var
R86656:86656 VST.floyd.VSU <> ComponentJoin.V var
R86593:86598 VST.floyd.VSU <> isGvar def
R86661:86662 VST.floyd.VSU <> ComponentJoin.V2 var
R86658:86659 VST.floyd.VSU <> ComponentJoin.V1 var
R86656:86656 VST.floyd.VSU <> ComponentJoin.V var
R86703:86703 VST.floyd.VSU <> ComponentJoin.V var
R86751:86755 VST.floyd.VSU <> ComponentJoin.V_LNR var
R86766:86780 VST.floyd.VSU <> InitGPred_consD thm
R86766:86780 VST.floyd.VSU <> InitGPred_consD thm
R86766:86780 VST.floyd.VSU <> InitGPred_consD thm
R86799:86802 VST.floyd.VSU <> ComponentJoin.domV var
R86805:86807 Coq.Init.Datatypes <> fst def
R86799:86802 VST.floyd.VSU <> ComponentJoin.domV var
R86805:86807 Coq.Init.Datatypes <> fst def
R86962:86979 VST.floyd.assoclists <> In_map_fst_find_id thm
R86962:86979 VST.floyd.assoclists <> In_map_fst_find_id thm
R87142:87148 VST.msl.Coqlib2 <> if_true thm
R87142:87148 VST.msl.Coqlib2 <> if_true thm
R87142:87148 VST.msl.Coqlib2 <> if_true thm
R87281:87295 compcert.lib.Coqlib <> list_in_map_inv thm
R87281:87295 compcert.lib.Coqlib <> list_in_map_inv thm
R87368:87375 Coq.Lists.List <> in_split thm
R87368:87375 Coq.Lists.List <> in_split thm
R87450:87452 Coq.Init.Logic <> ::type_scope:x_'='_x not
R87450:87452 Coq.Init.Logic <> ::type_scope:x_'='_x not
R87482:87497 VST.floyd.assoclists <> find_id_app_char thm
R87482:87497 VST.floyd.assoclists <> find_id_app_char thm
R87482:87497 VST.floyd.assoclists <> find_id_app_char thm
R87515:87521 VST.veric.initial_world <> find_id def
R87515:87521 VST.veric.initial_world <> find_id def
R87580:87588 VST.veric.initial_world <> find_id_e thm
R87580:87588 VST.veric.initial_world <> find_id_e thm
R87605:87612 Coq.Lists.List <> in_split thm
R87605:87612 Coq.Lists.List <> in_split thm
R87749:87755 Coq.Lists.List <> map_app thm
R87749:87755 Coq.Lists.List <> map_app thm
R87749:87755 Coq.Lists.List <> map_app thm
R87749:87755 Coq.Lists.List <> map_app thm
R87749:87755 Coq.Lists.List <> map_app thm
R87791:87810 VST.floyd.VSU <> list_norepet_middleD thm
R87791:87810 VST.floyd.VSU <> list_norepet_middleD thm
R87832:87837 VST.floyd.VSU <> ComponentJoin.LNR_V1 var
R87881:87889 Coq.Lists.List <> in_or_app thm
R87881:87889 Coq.Lists.List <> in_or_app thm
R87904:87912 Coq.Lists.List <> in_or_app thm
R87904:87912 Coq.Lists.List <> in_or_app thm
R87970:87976 VST.msl.Coqlib2 <> if_true thm
R87970:87976 VST.msl.Coqlib2 <> if_true thm
R87970:87976 VST.msl.Coqlib2 <> if_true thm
R88049:88065 VST.floyd.VSU <> InitGPred_middleD thm
R88049:88065 VST.floyd.VSU <> InitGPred_middleD thm
R88049:88065 VST.floyd.VSU <> InitGPred_middleD thm
R88089:88100 VST.msl.seplog <> sepcon_assoc meth
R88089:88100 VST.msl.seplog <> sepcon_assoc meth
R88089:88100 VST.msl.seplog <> sepcon_assoc meth
R88089:88100 VST.msl.seplog <> sepcon_assoc meth
R88089:88100 VST.msl.seplog <> sepcon_assoc meth
R88163:88165 Coq.Init.Logic <> ::type_scope:x_'='_x not
R88129:88134 Coq.Lists.List <> filter def
R88144:88149 Coq.Lists.List <> filter def
R88151:88156 VST.floyd.VSU <> isGvar def
R88136:88141 VST.floyd.VSU <> isGvar def
R88166:88171 Coq.Lists.List <> filter def
R88184:88187 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88194:88197 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R88188:88188 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88190:88191 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88193:88193 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88173:88178 VST.floyd.VSU <> isGvar def
R88163:88165 Coq.Init.Logic <> ::type_scope:x_'='_x not
R88129:88134 Coq.Lists.List <> filter def
R88144:88149 Coq.Lists.List <> filter def
R88151:88156 VST.floyd.VSU <> isGvar def
R88136:88141 VST.floyd.VSU <> isGvar def
R88166:88171 Coq.Lists.List <> filter def
R88184:88187 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88194:88197 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R88188:88188 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88190:88191 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88193:88193 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88173:88178 VST.floyd.VSU <> isGvar def
R88258:88274 VST.floyd.VSU <> filter_involutive thm
R88277:88286 VST.floyd.assoclists <> filter_app thm
R88258:88274 VST.floyd.VSU <> filter_involutive thm
R88258:88274 VST.floyd.VSU <> filter_involutive thm
R88277:88286 VST.floyd.assoclists <> filter_app thm
R88277:88286 VST.floyd.assoclists <> filter_app thm
R88334:88344 VST.floyd.VSU <> map_app_inv thm
R88334:88344 VST.floyd.VSU <> map_app_inv thm
R88714:88715 VST.floyd.VSU <> ComponentJoin.V2 var
R88707:88708 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88688:88689 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88714:88715 VST.floyd.VSU <> ComponentJoin.V2 var
R88707:88708 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88688:88689 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88714:88715 VST.floyd.VSU <> ComponentJoin.V2 var
R88707:88708 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88688:88689 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88714:88715 VST.floyd.VSU <> ComponentJoin.V2 var
R88707:88708 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88688:88689 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88714:88715 VST.floyd.VSU <> ComponentJoin.V2 var
R88707:88708 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88688:88689 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88714:88715 VST.floyd.VSU <> ComponentJoin.V2 var
R88707:88708 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88688:88689 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88714:88715 VST.floyd.VSU <> ComponentJoin.V2 var
R88707:88708 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88688:88689 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88714:88715 VST.floyd.VSU <> ComponentJoin.V2 var
R88707:88708 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88688:88689 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88714:88715 VST.floyd.VSU <> ComponentJoin.V2 var
R88707:88708 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88688:88689 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88714:88715 VST.floyd.VSU <> ComponentJoin.V2 var
R88707:88708 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88688:88689 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88714:88715 VST.floyd.VSU <> ComponentJoin.V2 var
R88707:88708 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88688:88689 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88714:88715 VST.floyd.VSU <> ComponentJoin.V2 var
R88707:88708 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88688:88689 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88714:88715 VST.floyd.VSU <> ComponentJoin.V2 var
R88707:88708 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88688:88689 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88714:88715 VST.floyd.VSU <> ComponentJoin.V2 var
R88707:88708 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88688:88689 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88714:88715 VST.floyd.VSU <> ComponentJoin.V2 var
R88707:88708 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88688:88689 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R88820:88829 VST.floyd.assoclists <> filter_app thm
R88832:88844 VST.floyd.VSU <> InitGPred_app thm
R88852:88863 VST.msl.seplog <> sepcon_assoc meth
R88820:88829 VST.floyd.assoclists <> filter_app thm
R88820:88829 VST.floyd.assoclists <> filter_app thm
R88832:88844 VST.floyd.VSU <> InitGPred_app thm
R88832:88844 VST.floyd.VSU <> InitGPred_app thm
R88852:88863 VST.msl.seplog <> sepcon_assoc meth
R88852:88863 VST.msl.seplog <> sepcon_assoc meth
R88852:88863 VST.msl.seplog <> sepcon_assoc meth
R88898:88913 VST.floyd.VSU <> filter_redundant thm
R88898:88913 VST.floyd.VSU <> filter_redundant thm
R88898:88913 VST.floyd.VSU <> filter_redundant thm
R88898:88913 VST.floyd.VSU <> filter_redundant thm
R88898:88913 VST.floyd.VSU <> filter_redundant thm
R88898:88913 VST.floyd.VSU <> filter_redundant thm
R88954:88962 Coq.Lists.List <> filter_In thm
R88954:88962 Coq.Lists.List <> filter_In thm
R88995:89003 Coq.Lists.List <> in_or_app thm
R88995:89003 Coq.Lists.List <> in_or_app thm
R89058:89066 Coq.Lists.List <> filter_In thm
R89058:89066 Coq.Lists.List <> filter_In thm
R89099:89107 Coq.Lists.List <> in_or_app thm
R89099:89107 Coq.Lists.List <> in_or_app thm
R89222:89225 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R89222:89225 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R89330:89347 VST.veric.initial_world <> find_id_In_map_fst thm
R89330:89347 VST.veric.initial_world <> find_id_In_map_fst thm
R89364:89373 VST.floyd.assoclists <> filter_app thm
R89376:89382 Coq.Lists.List <> map_app thm
R89364:89373 VST.floyd.assoclists <> filter_app thm
R89364:89373 VST.floyd.assoclists <> filter_app thm
R89376:89382 Coq.Lists.List <> map_app thm
R89376:89382 Coq.Lists.List <> map_app thm
R89423:89429 Coq.Lists.List <> map_app thm
R89423:89429 Coq.Lists.List <> map_app thm
R89423:89429 Coq.Lists.List <> map_app thm
R89480:89499 VST.floyd.VSU <> list_norepet_middleD thm
R89480:89499 VST.floyd.VSU <> list_norepet_middleD thm
R89521:89526 VST.floyd.VSU <> ComponentJoin.LNR_V1 var
R89609:89617 Coq.Lists.List <> in_or_app thm
R89626:89634 Coq.Lists.List <> in_app_or thm
R89609:89617 Coq.Lists.List <> in_or_app thm
R89626:89634 Coq.Lists.List <> in_app_or thm
R89685:89694 Coq.Lists.List <> in_map_iff thm
R89685:89694 Coq.Lists.List <> in_map_iff thm
R89740:89748 Coq.Lists.List <> filter_In thm
R89740:89748 Coq.Lists.List <> filter_In thm
R89793:89802 Coq.Lists.List <> in_map_iff thm
R89793:89802 Coq.Lists.List <> in_map_iff thm
R89861:89870 Coq.Lists.List <> in_map_iff thm
R89861:89870 Coq.Lists.List <> in_map_iff thm
R89916:89924 Coq.Lists.List <> filter_In thm
R89916:89924 Coq.Lists.List <> filter_In thm
R89969:89978 Coq.Lists.List <> in_map_iff thm
R89969:89978 Coq.Lists.List <> in_map_iff thm
R90030:90037 VST.msl.Coqlib2 <> if_false thm
R90030:90037 VST.msl.Coqlib2 <> if_false thm
R90030:90037 VST.msl.Coqlib2 <> if_false thm
R90127:90142 VST.floyd.assoclists <> find_id_app_char thm
R90127:90142 VST.floyd.assoclists <> find_id_app_char thm
R90127:90142 VST.floyd.assoclists <> find_id_app_char thm
R90160:90169 VST.floyd.assoclists <> filter_app thm
R90172:90187 VST.floyd.assoclists <> find_id_app_char thm
R90160:90169 VST.floyd.assoclists <> filter_app thm
R90160:90169 VST.floyd.assoclists <> filter_app thm
R90172:90187 VST.floyd.assoclists <> find_id_app_char thm
R90172:90187 VST.floyd.assoclists <> find_id_app_char thm
R90204:90211 VST.msl.Coqlib2 <> if_false thm
R90204:90211 VST.msl.Coqlib2 <> if_false thm
R90204:90211 VST.msl.Coqlib2 <> if_false thm
R90204:90211 VST.msl.Coqlib2 <> if_false thm
R90281:90288 VST.msl.Coqlib2 <> if_false thm
R90281:90288 VST.msl.Coqlib2 <> if_false thm
R90281:90288 VST.msl.Coqlib2 <> if_false thm
R90281:90288 VST.msl.Coqlib2 <> if_false thm
R90368:90374 Coq.Lists.List <> map_app thm
R90368:90374 Coq.Lists.List <> map_app thm
R90368:90374 Coq.Lists.List <> map_app thm
R90418:90435 VST.veric.initial_world <> find_id_In_map_fst thm
R90418:90435 VST.veric.initial_world <> find_id_In_map_fst thm
R90465:90480 VST.floyd.VSU <> ComponentJoin.DisjointVarspecs var
R90465:90480 VST.floyd.VSU <> ComponentJoin.DisjointVarspecs var
R90503:90511 Coq.Lists.List <> in_or_app thm
R90503:90511 Coq.Lists.List <> in_or_app thm
R90555:90561 Coq.Lists.List <> map_app thm
R90555:90561 Coq.Lists.List <> map_app thm
R90555:90561 Coq.Lists.List <> map_app thm
R90592:90625 VST.veric.semax_prog <> list_norepet_cut_middle thm
R90592:90625 VST.veric.semax_prog <> list_norepet_cut_middle thm
R90678:90680 VST.floyd.VSU <> ComponentJoin.HV2 var
R90678:90680 VST.floyd.VSU <> ComponentJoin.HV2 var
R90699:90706 VST.msl.Coqlib2 <> if_false thm
R90699:90706 VST.msl.Coqlib2 <> if_false thm
R90699:90706 VST.msl.Coqlib2 <> if_false thm
R90699:90706 VST.msl.Coqlib2 <> if_false thm
R90772:90778 Coq.Lists.List <> map_app thm
R90772:90778 Coq.Lists.List <> map_app thm
R90772:90778 Coq.Lists.List <> map_app thm
R90822:90839 VST.veric.initial_world <> find_id_In_map_fst thm
R90822:90839 VST.veric.initial_world <> find_id_In_map_fst thm
R90869:90884 VST.floyd.VSU <> ComponentJoin.DisjointVarspecs var
R90869:90884 VST.floyd.VSU <> ComponentJoin.DisjointVarspecs var
R90907:90915 Coq.Lists.List <> in_or_app thm
R90907:90915 Coq.Lists.List <> in_or_app thm
R90986:90989 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R90986:90989 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R91017:91023 Coq.Lists.List <> map_app thm
R91017:91023 Coq.Lists.List <> map_app thm
R91017:91023 Coq.Lists.List <> map_app thm
R91074:91093 VST.floyd.VSU <> list_norepet_middleD thm
R91074:91093 VST.floyd.VSU <> list_norepet_middleD thm
R91163:91168 VST.floyd.VSU <> ComponentJoin.LNR_V1 var
R91163:91168 VST.floyd.VSU <> ComponentJoin.LNR_V1 var
R91177:91194 VST.veric.initial_world <> find_id_In_map_fst thm
R91177:91194 VST.veric.initial_world <> find_id_In_map_fst thm
R91211:91217 Coq.Lists.List <> map_app thm
R91211:91217 Coq.Lists.List <> map_app thm
R91211:91217 Coq.Lists.List <> map_app thm
R91262:91264 VST.floyd.VSU <> ComponentJoin.HV1 var
R91262:91264 VST.floyd.VSU <> ComponentJoin.HV1 var
R91282:91289 VST.msl.Coqlib2 <> if_false thm
R91282:91289 VST.msl.Coqlib2 <> if_false thm
R91282:91289 VST.msl.Coqlib2 <> if_false thm
R91329:91331 VST.floyd.VSU <> ComponentJoin.HV1 var
R91329:91331 VST.floyd.VSU <> ComponentJoin.HV1 var
R91342:91357 VST.floyd.assoclists <> find_id_app_char thm
R91342:91357 VST.floyd.assoclists <> find_id_app_char thm
R91342:91357 VST.floyd.assoclists <> find_id_app_char thm
R91375:91381 VST.veric.initial_world <> find_id def
R91375:91381 VST.veric.initial_world <> find_id def
R91428:91435 VST.msl.Coqlib2 <> if_false thm
R91428:91435 VST.msl.Coqlib2 <> if_false thm
R91428:91435 VST.msl.Coqlib2 <> if_false thm
R91428:91435 VST.msl.Coqlib2 <> if_false thm
R91466:91472 Coq.Lists.List <> map_app thm
R91493:91502 VST.floyd.assoclists <> filter_app thm
R91505:91511 Coq.Lists.List <> map_app thm
R91466:91472 Coq.Lists.List <> map_app thm
R91466:91472 Coq.Lists.List <> map_app thm
R91493:91502 VST.floyd.assoclists <> filter_app thm
R91493:91502 VST.floyd.assoclists <> filter_app thm
R91505:91511 Coq.Lists.List <> map_app thm
R91505:91511 Coq.Lists.List <> map_app thm
R91552:91567 VST.floyd.VSU <> filter_redundant thm
R91552:91567 VST.floyd.VSU <> filter_redundant thm
R91552:91567 VST.floyd.VSU <> filter_redundant thm
R91552:91567 VST.floyd.VSU <> filter_redundant thm
R91552:91567 VST.floyd.VSU <> filter_redundant thm
R91552:91567 VST.floyd.VSU <> filter_redundant thm
R91608:91616 Coq.Lists.List <> filter_In thm
R91608:91616 Coq.Lists.List <> filter_In thm
R91649:91657 Coq.Lists.List <> in_or_app thm
R91649:91657 Coq.Lists.List <> in_or_app thm
R91712:91720 Coq.Lists.List <> filter_In thm
R91712:91720 Coq.Lists.List <> filter_In thm
R91753:91761 Coq.Lists.List <> in_or_app thm
R91753:91761 Coq.Lists.List <> in_or_app thm
R91798:91804 Coq.Lists.List <> map_app thm
R91798:91804 Coq.Lists.List <> map_app thm
R91798:91804 Coq.Lists.List <> map_app thm
R91862:91868 Coq.Lists.List <> map_app thm
R91862:91868 Coq.Lists.List <> map_app thm
R91862:91868 Coq.Lists.List <> map_app thm
R91890:91910 VST.floyd.VSU <> list_disjoint_middleD thm
R91890:91910 VST.floyd.VSU <> list_disjoint_middleD thm
R91940:91955 VST.floyd.VSU <> ComponentJoin.DisjointVarspecs var
R91940:91955 VST.floyd.VSU <> ComponentJoin.DisjointVarspecs var
R91986:91987 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R91986:91987 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R92014:92020 Coq.Lists.List <> map_app thm
R92014:92020 Coq.Lists.List <> map_app thm
R92014:92020 Coq.Lists.List <> map_app thm
R92063:92066 VST.floyd.VSU <> ComponentJoin.domV var
R92063:92066 VST.floyd.VSU <> ComponentJoin.domV var
R92123:92129 Coq.Lists.List <> map_app thm
R92123:92129 Coq.Lists.List <> map_app thm
R92123:92129 Coq.Lists.List <> map_app thm
R92171:92179 Coq.Lists.List <> in_app_or thm
R92171:92179 Coq.Lists.List <> in_app_or thm
R92213:92221 Coq.Lists.List <> in_or_app thm
R92213:92221 Coq.Lists.List <> in_or_app thm
R92285:92293 Coq.Lists.List <> in_or_app thm
R92285:92293 Coq.Lists.List <> in_or_app thm
R92664:92681 VST.floyd.assoclists <> In_map_fst_find_id thm
R92664:92681 VST.floyd.assoclists <> In_map_fst_find_id thm
R92844:92850 VST.msl.Coqlib2 <> if_true thm
R92844:92850 VST.msl.Coqlib2 <> if_true thm
R92844:92850 VST.msl.Coqlib2 <> if_true thm
R92901:92915 compcert.lib.Coqlib <> list_in_map_inv thm
R92901:92915 compcert.lib.Coqlib <> list_in_map_inv thm
R92988:92995 Coq.Lists.List <> in_split thm
R92988:92995 Coq.Lists.List <> in_split thm
R93070:93072 Coq.Init.Logic <> ::type_scope:x_'='_x not
R93070:93072 Coq.Init.Logic <> ::type_scope:x_'='_x not
R93102:93117 VST.floyd.assoclists <> find_id_app_char thm
R93102:93117 VST.floyd.assoclists <> find_id_app_char thm
R93102:93117 VST.floyd.assoclists <> find_id_app_char thm
R93135:93141 VST.veric.initial_world <> find_id def
R93135:93141 VST.veric.initial_world <> find_id def
R93200:93208 VST.veric.initial_world <> find_id_e thm
R93200:93208 VST.veric.initial_world <> find_id_e thm
R93225:93232 Coq.Lists.List <> in_split thm
R93225:93232 Coq.Lists.List <> in_split thm
R93369:93375 Coq.Lists.List <> map_app thm
R93369:93375 Coq.Lists.List <> map_app thm
R93369:93375 Coq.Lists.List <> map_app thm
R93369:93375 Coq.Lists.List <> map_app thm
R93369:93375 Coq.Lists.List <> map_app thm
R93411:93430 VST.floyd.VSU <> list_norepet_middleD thm
R93411:93430 VST.floyd.VSU <> list_norepet_middleD thm
R93452:93457 VST.floyd.VSU <> ComponentJoin.LNR_V2 var
R93501:93509 Coq.Lists.List <> in_or_app thm
R93501:93509 Coq.Lists.List <> in_or_app thm
R93524:93532 Coq.Lists.List <> in_or_app thm
R93524:93532 Coq.Lists.List <> in_or_app thm
R93590:93596 VST.msl.Coqlib2 <> if_true thm
R93590:93596 VST.msl.Coqlib2 <> if_true thm
R93590:93596 VST.msl.Coqlib2 <> if_true thm
R93669:93685 VST.floyd.VSU <> InitGPred_middleD thm
R93669:93685 VST.floyd.VSU <> InitGPred_middleD thm
R93669:93685 VST.floyd.VSU <> InitGPred_middleD thm
R93710:93721 VST.msl.seplog <> sepcon_assoc meth
R93710:93721 VST.msl.seplog <> sepcon_assoc meth
R93710:93721 VST.msl.seplog <> sepcon_assoc meth
R93710:93721 VST.msl.seplog <> sepcon_assoc meth
R93751:93761 VST.msl.seplog <> sepcon_comm meth
R93764:93772 VST.floyd.VSU <> InitGPred def
R93775:93780 Coq.Lists.List <> filter def
R93782:93787 VST.floyd.VSU <> isGvar def
R93751:93761 VST.msl.seplog <> sepcon_comm meth
R93764:93772 VST.floyd.VSU <> InitGPred def
R93775:93780 Coq.Lists.List <> filter def
R93782:93787 VST.floyd.VSU <> isGvar def
R93751:93761 VST.msl.seplog <> sepcon_comm meth
R93764:93772 VST.floyd.VSU <> InitGPred def
R93775:93780 Coq.Lists.List <> filter def
R93782:93787 VST.floyd.VSU <> isGvar def
R93828:93839 VST.msl.seplog <> sepcon_assoc meth
R93828:93839 VST.msl.seplog <> sepcon_assoc meth
R93828:93839 VST.msl.seplog <> sepcon_assoc meth
R93828:93839 VST.msl.seplog <> sepcon_assoc meth
R93828:93839 VST.msl.seplog <> sepcon_assoc meth
R93902:93904 Coq.Init.Logic <> ::type_scope:x_'='_x not
R93868:93873 Coq.Lists.List <> filter def
R93883:93888 Coq.Lists.List <> filter def
R93890:93895 VST.floyd.VSU <> isGvar def
R93875:93880 VST.floyd.VSU <> isGvar def
R93905:93910 Coq.Lists.List <> filter def
R93923:93926 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R93933:93936 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R93927:93927 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R93929:93930 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R93932:93932 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R93912:93917 VST.floyd.VSU <> isGvar def
R93902:93904 Coq.Init.Logic <> ::type_scope:x_'='_x not
R93868:93873 Coq.Lists.List <> filter def
R93883:93888 Coq.Lists.List <> filter def
R93890:93895 VST.floyd.VSU <> isGvar def
R93875:93880 VST.floyd.VSU <> isGvar def
R93905:93910 Coq.Lists.List <> filter def
R93923:93926 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R93933:93936 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R93927:93927 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R93929:93930 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R93932:93932 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R93912:93917 VST.floyd.VSU <> isGvar def
R93997:94013 VST.floyd.VSU <> filter_involutive thm
R94016:94025 VST.floyd.assoclists <> filter_app thm
R93997:94013 VST.floyd.VSU <> filter_involutive thm
R93997:94013 VST.floyd.VSU <> filter_involutive thm
R94016:94025 VST.floyd.assoclists <> filter_app thm
R94016:94025 VST.floyd.assoclists <> filter_app thm
R94073:94083 VST.floyd.VSU <> map_app_inv thm
R94073:94083 VST.floyd.VSU <> map_app_inv thm
R94507:94508 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94500:94501 VST.floyd.VSU <> ComponentJoin.V1 var
R94489:94490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94507:94508 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94500:94501 VST.floyd.VSU <> ComponentJoin.V1 var
R94489:94490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94507:94508 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94500:94501 VST.floyd.VSU <> ComponentJoin.V1 var
R94489:94490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94507:94508 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94500:94501 VST.floyd.VSU <> ComponentJoin.V1 var
R94489:94490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94507:94508 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94500:94501 VST.floyd.VSU <> ComponentJoin.V1 var
R94489:94490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94507:94508 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94500:94501 VST.floyd.VSU <> ComponentJoin.V1 var
R94489:94490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94507:94508 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94500:94501 VST.floyd.VSU <> ComponentJoin.V1 var
R94489:94490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94507:94508 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94500:94501 VST.floyd.VSU <> ComponentJoin.V1 var
R94489:94490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94507:94508 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94500:94501 VST.floyd.VSU <> ComponentJoin.V1 var
R94489:94490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94507:94508 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94500:94501 VST.floyd.VSU <> ComponentJoin.V1 var
R94489:94490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94507:94508 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94500:94501 VST.floyd.VSU <> ComponentJoin.V1 var
R94489:94490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94507:94508 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94500:94501 VST.floyd.VSU <> ComponentJoin.V1 var
R94489:94490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94507:94508 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94500:94501 VST.floyd.VSU <> ComponentJoin.V1 var
R94489:94490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94507:94508 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94500:94501 VST.floyd.VSU <> ComponentJoin.V1 var
R94489:94490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94507:94508 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94500:94501 VST.floyd.VSU <> ComponentJoin.V1 var
R94489:94490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R94558:94568 VST.msl.seplog <> sepcon_comm meth
R94571:94580 VST.floyd.assoclists <> filter_app thm
R94583:94595 VST.floyd.VSU <> InitGPred_app thm
R94603:94614 VST.msl.seplog <> sepcon_assoc meth
R94558:94568 VST.msl.seplog <> sepcon_comm meth
R94558:94568 VST.msl.seplog <> sepcon_comm meth
R94571:94580 VST.floyd.assoclists <> filter_app thm
R94571:94580 VST.floyd.assoclists <> filter_app thm
R94583:94595 VST.floyd.VSU <> InitGPred_app thm
R94583:94595 VST.floyd.VSU <> InitGPred_app thm
R94603:94614 VST.msl.seplog <> sepcon_assoc meth
R94603:94614 VST.msl.seplog <> sepcon_assoc meth
R94603:94614 VST.msl.seplog <> sepcon_assoc meth
R94649:94664 VST.floyd.VSU <> filter_redundant thm
R94649:94664 VST.floyd.VSU <> filter_redundant thm
R94649:94664 VST.floyd.VSU <> filter_redundant thm
R94649:94664 VST.floyd.VSU <> filter_redundant thm
R94649:94664 VST.floyd.VSU <> filter_redundant thm
R94649:94664 VST.floyd.VSU <> filter_redundant thm
R94705:94713 Coq.Lists.List <> filter_In thm
R94705:94713 Coq.Lists.List <> filter_In thm
R94746:94754 Coq.Lists.List <> in_or_app thm
R94746:94754 Coq.Lists.List <> in_or_app thm
R94809:94817 Coq.Lists.List <> filter_In thm
R94809:94817 Coq.Lists.List <> filter_In thm
R94850:94858 Coq.Lists.List <> in_or_app thm
R94850:94858 Coq.Lists.List <> in_or_app thm
R94934:94941 VST.msl.Coqlib2 <> if_false thm
R94934:94941 VST.msl.Coqlib2 <> if_false thm
R94934:94941 VST.msl.Coqlib2 <> if_false thm
R94934:94941 VST.msl.Coqlib2 <> if_false thm
R95021:95027 Coq.Lists.List <> map_app thm
R95021:95027 Coq.Lists.List <> map_app thm
R95021:95027 Coq.Lists.List <> map_app thm
R95071:95088 VST.veric.initial_world <> find_id_In_map_fst thm
R95071:95088 VST.veric.initial_world <> find_id_In_map_fst thm
R95118:95133 VST.floyd.VSU <> ComponentJoin.DisjointVarspecs var
R95118:95133 VST.floyd.VSU <> ComponentJoin.DisjointVarspecs var
R95156:95164 Coq.Lists.List <> in_or_app thm
R95156:95164 Coq.Lists.List <> in_or_app thm
R95286:95289 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R95286:95289 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R95394:95411 VST.veric.initial_world <> find_id_In_map_fst thm
R95394:95411 VST.veric.initial_world <> find_id_In_map_fst thm
R95428:95437 VST.floyd.assoclists <> filter_app thm
R95440:95446 Coq.Lists.List <> map_app thm
R95428:95437 VST.floyd.assoclists <> filter_app thm
R95428:95437 VST.floyd.assoclists <> filter_app thm
R95440:95446 Coq.Lists.List <> map_app thm
R95440:95446 Coq.Lists.List <> map_app thm
R95487:95493 Coq.Lists.List <> map_app thm
R95487:95493 Coq.Lists.List <> map_app thm
R95487:95493 Coq.Lists.List <> map_app thm
R95544:95563 VST.floyd.VSU <> list_norepet_middleD thm
R95544:95563 VST.floyd.VSU <> list_norepet_middleD thm
R95585:95590 VST.floyd.VSU <> ComponentJoin.LNR_V2 var
R95673:95681 Coq.Lists.List <> in_or_app thm
R95690:95698 Coq.Lists.List <> in_app_or thm
R95673:95681 Coq.Lists.List <> in_or_app thm
R95690:95698 Coq.Lists.List <> in_app_or thm
R95749:95758 Coq.Lists.List <> in_map_iff thm
R95749:95758 Coq.Lists.List <> in_map_iff thm
R95804:95812 Coq.Lists.List <> filter_In thm
R95804:95812 Coq.Lists.List <> filter_In thm
R95857:95866 Coq.Lists.List <> in_map_iff thm
R95857:95866 Coq.Lists.List <> in_map_iff thm
R95925:95934 Coq.Lists.List <> in_map_iff thm
R95925:95934 Coq.Lists.List <> in_map_iff thm
R95980:95988 Coq.Lists.List <> filter_In thm
R95980:95988 Coq.Lists.List <> filter_In thm
R96033:96042 Coq.Lists.List <> in_map_iff thm
R96033:96042 Coq.Lists.List <> in_map_iff thm
R96094:96101 VST.msl.Coqlib2 <> if_false thm
R96094:96101 VST.msl.Coqlib2 <> if_false thm
R96094:96101 VST.msl.Coqlib2 <> if_false thm
R96191:96206 VST.floyd.assoclists <> find_id_app_char thm
R96191:96206 VST.floyd.assoclists <> find_id_app_char thm
R96191:96206 VST.floyd.assoclists <> find_id_app_char thm
R96224:96233 VST.floyd.assoclists <> filter_app thm
R96236:96251 VST.floyd.assoclists <> find_id_app_char thm
R96224:96233 VST.floyd.assoclists <> filter_app thm
R96224:96233 VST.floyd.assoclists <> filter_app thm
R96236:96251 VST.floyd.assoclists <> find_id_app_char thm
R96236:96251 VST.floyd.assoclists <> find_id_app_char thm
R96268:96275 VST.msl.Coqlib2 <> if_false thm
R96268:96275 VST.msl.Coqlib2 <> if_false thm
R96268:96275 VST.msl.Coqlib2 <> if_false thm
R96268:96275 VST.msl.Coqlib2 <> if_false thm
R96312:96318 Coq.Lists.List <> map_app thm
R96312:96318 Coq.Lists.List <> map_app thm
R96312:96318 Coq.Lists.List <> map_app thm
R96349:96382 VST.veric.semax_prog <> list_norepet_cut_middle thm
R96349:96382 VST.veric.semax_prog <> list_norepet_cut_middle thm
R96450:96453 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R96450:96453 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R96481:96487 Coq.Lists.List <> map_app thm
R96481:96487 Coq.Lists.List <> map_app thm
R96481:96487 Coq.Lists.List <> map_app thm
R96538:96557 VST.floyd.VSU <> list_norepet_middleD thm
R96538:96557 VST.floyd.VSU <> list_norepet_middleD thm
R96627:96632 VST.floyd.VSU <> ComponentJoin.LNR_V2 var
R96627:96632 VST.floyd.VSU <> ComponentJoin.LNR_V2 var
R96641:96658 VST.veric.initial_world <> find_id_In_map_fst thm
R96641:96658 VST.veric.initial_world <> find_id_In_map_fst thm
R96675:96681 Coq.Lists.List <> map_app thm
R96675:96681 Coq.Lists.List <> map_app thm
R96675:96681 Coq.Lists.List <> map_app thm
R96726:96728 VST.floyd.VSU <> ComponentJoin.HV2 var
R96726:96728 VST.floyd.VSU <> ComponentJoin.HV2 var
R96746:96753 VST.msl.Coqlib2 <> if_false thm
R96746:96753 VST.msl.Coqlib2 <> if_false thm
R96746:96753 VST.msl.Coqlib2 <> if_false thm
R96793:96795 VST.floyd.VSU <> ComponentJoin.HV2 var
R96793:96795 VST.floyd.VSU <> ComponentJoin.HV2 var
R96806:96821 VST.floyd.assoclists <> find_id_app_char thm
R96806:96821 VST.floyd.assoclists <> find_id_app_char thm
R96806:96821 VST.floyd.assoclists <> find_id_app_char thm
R96839:96845 VST.veric.initial_world <> find_id def
R96839:96845 VST.veric.initial_world <> find_id def
R96892:96899 VST.msl.Coqlib2 <> if_false thm
R96892:96899 VST.msl.Coqlib2 <> if_false thm
R96892:96899 VST.msl.Coqlib2 <> if_false thm
R96892:96899 VST.msl.Coqlib2 <> if_false thm
R96942:96944 VST.floyd.VSU <> ComponentJoin.HV1 var
R96942:96944 VST.floyd.VSU <> ComponentJoin.HV1 var
R96963:96970 VST.msl.Coqlib2 <> if_false thm
R96963:96970 VST.msl.Coqlib2 <> if_false thm
R96963:96970 VST.msl.Coqlib2 <> if_false thm
R96963:96970 VST.msl.Coqlib2 <> if_false thm
R97036:97042 Coq.Lists.List <> map_app thm
R97036:97042 Coq.Lists.List <> map_app thm
R97036:97042 Coq.Lists.List <> map_app thm
R97086:97103 VST.veric.initial_world <> find_id_In_map_fst thm
R97086:97103 VST.veric.initial_world <> find_id_In_map_fst thm
R97133:97148 VST.floyd.VSU <> ComponentJoin.DisjointVarspecs var
R97133:97148 VST.floyd.VSU <> ComponentJoin.DisjointVarspecs var
R97171:97179 Coq.Lists.List <> in_or_app thm
R97171:97179 Coq.Lists.List <> in_or_app thm
R97223:97229 Coq.Lists.List <> map_app thm
R97250:97259 VST.floyd.assoclists <> filter_app thm
R97262:97268 Coq.Lists.List <> map_app thm
R97223:97229 Coq.Lists.List <> map_app thm
R97223:97229 Coq.Lists.List <> map_app thm
R97250:97259 VST.floyd.assoclists <> filter_app thm
R97250:97259 VST.floyd.assoclists <> filter_app thm
R97262:97268 Coq.Lists.List <> map_app thm
R97262:97268 Coq.Lists.List <> map_app thm
R97309:97324 VST.floyd.VSU <> filter_redundant thm
R97309:97324 VST.floyd.VSU <> filter_redundant thm
R97309:97324 VST.floyd.VSU <> filter_redundant thm
R97309:97324 VST.floyd.VSU <> filter_redundant thm
R97309:97324 VST.floyd.VSU <> filter_redundant thm
R97309:97324 VST.floyd.VSU <> filter_redundant thm
R97365:97373 Coq.Lists.List <> filter_In thm
R97365:97373 Coq.Lists.List <> filter_In thm
R97406:97414 Coq.Lists.List <> in_or_app thm
R97406:97414 Coq.Lists.List <> in_or_app thm
R97469:97477 Coq.Lists.List <> filter_In thm
R97469:97477 Coq.Lists.List <> filter_In thm
R97510:97518 Coq.Lists.List <> in_or_app thm
R97510:97518 Coq.Lists.List <> in_or_app thm
R97555:97561 Coq.Lists.List <> map_app thm
R97555:97561 Coq.Lists.List <> map_app thm
R97555:97561 Coq.Lists.List <> map_app thm
R97619:97625 Coq.Lists.List <> map_app thm
R97619:97625 Coq.Lists.List <> map_app thm
R97619:97625 Coq.Lists.List <> map_app thm
R97647:97663 compcert.lib.Coqlib <> list_disjoint_sym thm
R97647:97663 compcert.lib.Coqlib <> list_disjoint_sym thm
R97692:97708 compcert.lib.Coqlib <> list_disjoint_sym thm
R97692:97708 compcert.lib.Coqlib <> list_disjoint_sym thm
R97730:97750 VST.floyd.VSU <> list_disjoint_middleD thm
R97730:97750 VST.floyd.VSU <> list_disjoint_middleD thm
R97780:97795 VST.floyd.VSU <> ComponentJoin.DisjointVarspecs var
R97780:97795 VST.floyd.VSU <> ComponentJoin.DisjointVarspecs var
R97826:97827 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R97826:97827 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R97854:97860 Coq.Lists.List <> map_app thm
R97854:97860 Coq.Lists.List <> map_app thm
R97854:97860 Coq.Lists.List <> map_app thm
R97903:97906 VST.floyd.VSU <> ComponentJoin.domV var
R97903:97906 VST.floyd.VSU <> ComponentJoin.domV var
R97991:97997 Coq.Lists.List <> map_app thm
R97991:97997 Coq.Lists.List <> map_app thm
R97991:97997 Coq.Lists.List <> map_app thm
R98039:98047 Coq.Lists.List <> in_app_or thm
R98039:98047 Coq.Lists.List <> in_app_or thm
R98082:98090 Coq.Lists.List <> in_or_app thm
R98082:98090 Coq.Lists.List <> in_or_app thm
R98155:98163 Coq.Lists.List <> in_or_app thm
R98155:98163 Coq.Lists.List <> in_or_app thm
var 98461:98463 ComponentJoin VD1
R98486:98488 Coq.Init.Logic <> ::type_scope:x_'='_x not
R98466:98468 Coq.Lists.List <> map def
R98475:98481 VST.floyd.VSU <> Vardefs def
R98483:98484 VST.floyd.VSU <> ComponentJoin.p1 var
R98470:98472 Coq.Init.Datatypes <> fst def
R98489:98491 Coq.Lists.List <> map def
R98497:98498 VST.floyd.VSU <> ComponentJoin.V1 var
R98493:98495 Coq.Init.Datatypes <> fst def
var 98510:98512 ComponentJoin VD2
R98535:98537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R98515:98517 Coq.Lists.List <> map def
R98524:98530 VST.floyd.VSU <> Vardefs def
R98532:98533 VST.floyd.VSU <> ComponentJoin.p2 var
R98519:98521 Coq.Init.Datatypes <> fst def
R98538:98540 Coq.Lists.List <> map def
R98546:98547 VST.floyd.VSU <> ComponentJoin.V2 var
R98542:98544 Coq.Init.Datatypes <> fst def
var 98559:98560 ComponentJoin VD
R98582:98584 Coq.Init.Logic <> ::type_scope:x_'='_x not
R98563:98565 Coq.Lists.List <> map def
R98572:98578 VST.floyd.VSU <> Vardefs def
R98580:98580 VST.floyd.VSU <> ComponentJoin.p var
R98567:98569 Coq.Init.Datatypes <> fst def
R98585:98587 Coq.Lists.List <> map def
R98593:98593 VST.floyd.VSU <> ComponentJoin.V var
R98589:98591 Coq.Init.Datatypes <> fst def
var 98606:98614 ComponentJoin HVardefs1
binder 98624:98624 <> i:905
binder 98626:98626 <> d:906
R98660:98663 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R98685:98687 Coq.Init.Logic <> ::type_scope:x_'='_x not
R98664:98670 VST.veric.initial_world <> find_id def
R98675:98681 VST.floyd.VSU <> Vardefs def
R98683:98683 VST.floyd.VSU <> ComponentJoin.p var
R98672:98672 VST.floyd.VSU <> i:905 var
R98688:98691 Coq.Init.Datatypes <> Some constr
R98693:98693 VST.floyd.VSU <> d:906 var
R98651:98653 Coq.Init.Logic <> ::type_scope:x_'='_x not
R98629:98635 VST.veric.initial_world <> find_id def
R98640:98646 VST.floyd.VSU <> Vardefs def
R98648:98649 VST.floyd.VSU <> ComponentJoin.p1 var
R98637:98637 VST.floyd.VSU <> i:905 var
R98654:98657 Coq.Init.Datatypes <> Some constr
R98659:98659 VST.floyd.VSU <> d:906 var
var 98705:98713 ComponentJoin HVardefs2
binder 98723:98723 <> i:908
binder 98725:98725 <> d:909
R98759:98762 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R98784:98786 Coq.Init.Logic <> ::type_scope:x_'='_x not
R98763:98769 VST.veric.initial_world <> find_id def
R98774:98780 VST.floyd.VSU <> Vardefs def
R98782:98782 VST.floyd.VSU <> ComponentJoin.p var
R98771:98771 VST.floyd.VSU <> i:908 var
R98787:98790 Coq.Init.Datatypes <> Some constr
R98792:98792 VST.floyd.VSU <> d:909 var
R98750:98752 Coq.Init.Logic <> ::type_scope:x_'='_x not
R98728:98734 VST.veric.initial_world <> find_id def
R98739:98745 VST.floyd.VSU <> Vardefs def
R98747:98748 VST.floyd.VSU <> ComponentJoin.p2 var
R98736:98736 VST.floyd.VSU <> i:908 var
R98753:98756 Coq.Init.Datatypes <> Some constr
R98758:98758 VST.floyd.VSU <> d:909 var
prf 98802:98814 <> ComponentJoin
R98821:98829 VST.floyd.VSU <> Component rec
R98911:98917 VST.floyd.VSU <> G_merge def
R98932:98937 VST.floyd.VSU <> Comp_G def
R98939:98940 VST.floyd.VSU <> ComponentJoin.c2 var
R98920:98925 VST.floyd.VSU <> Comp_G def
R98927:98928 VST.floyd.VSU <> ComponentJoin.c1 var
binder 98880:98881 <> gv:911
R98892:98894 VST.msl.seplog <> ::logic:x_'*'_x not
R98886:98888 VST.floyd.VSU <> ComponentJoin.GP1 var
R98890:98891 VST.floyd.VSU <> gv:911 var
R98895:98897 VST.floyd.VSU <> ComponentJoin.GP2 var
R98899:98900 VST.floyd.VSU <> gv:911 var
R98866:98872 VST.floyd.VSU <> ComponentJoin.Exports var
R98864:98864 VST.floyd.VSU <> ComponentJoin.p var
R98856:98862 VST.floyd.VSU <> ComponentJoin.Imports var
R98854:98854 VST.floyd.VSU <> ComponentJoin.E var
R98851:98852 VST.floyd.VSU <> ComponentJoin.cs var
R98849:98849 VST.floyd.VSU <> ComponentJoin.V var
R98831:98835 VST.floyd.VSU <> ComponentJoin.Espec var
R98966:98993 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R98995:98996 VST.floyd.VSU <> ComponentJoin.c1 var
R98966:98993 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R98995:98996 VST.floyd.VSU <> ComponentJoin.c1 var
R99030:99057 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R99059:99060 VST.floyd.VSU <> ComponentJoin.c2 var
R99030:99057 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R99059:99060 VST.floyd.VSU <> ComponentJoin.c2 var
R99094:99127 VST.floyd.VSU <> Comp_Interns_disjoint_from_Imports thm
R99129:99130 VST.floyd.VSU <> ComponentJoin.c1 var
R99094:99127 VST.floyd.VSU <> Comp_Interns_disjoint_from_Imports thm
R99129:99130 VST.floyd.VSU <> ComponentJoin.c1 var
R99166:99199 VST.floyd.VSU <> Comp_Interns_disjoint_from_Imports thm
R99201:99202 VST.floyd.VSU <> ComponentJoin.c2 var
R99166:99199 VST.floyd.VSU <> Comp_Interns_disjoint_from_Imports thm
R99201:99202 VST.floyd.VSU <> ComponentJoin.c2 var
R99238:99247 VST.floyd.VSU <> Comp_G_LNR proj
R99249:99250 VST.floyd.VSU <> ComponentJoin.c1 var
R99238:99247 VST.floyd.VSU <> Comp_G_LNR proj
R99249:99250 VST.floyd.VSU <> ComponentJoin.c1 var
R99283:99292 VST.floyd.VSU <> Comp_G_LNR proj
R99294:99295 VST.floyd.VSU <> ComponentJoin.c2 var
R99283:99292 VST.floyd.VSU <> Comp_G_LNR proj
R99294:99295 VST.floyd.VSU <> ComponentJoin.c2 var
R99337:99352 VST.floyd.VSU <> Comp_LNR_Interns thm
R99354:99355 VST.floyd.VSU <> ComponentJoin.c2 var
R99337:99352 VST.floyd.VSU <> Comp_LNR_Interns thm
R99354:99355 VST.floyd.VSU <> ComponentJoin.c2 var
R99382:99397 VST.floyd.VSU <> Comp_LNR_Interns thm
R99399:99400 VST.floyd.VSU <> ComponentJoin.c1 var
R99382:99397 VST.floyd.VSU <> Comp_LNR_Interns thm
R99399:99400 VST.floyd.VSU <> ComponentJoin.c1 var
R99425:99435 VST.floyd.VSU <> LNR_Imports thm
R99425:99435 VST.floyd.VSU <> LNR_Imports thm
R99459:99469 VST.floyd.VSU <> LNR_Exports thm
R99459:99469 VST.floyd.VSU <> LNR_Exports thm
R99486:99492 VST.floyd.VSU <> G_merge def
R99507:99512 VST.floyd.VSU <> Comp_G def
R99514:99515 VST.floyd.VSU <> ComponentJoin.c2 var
R99495:99500 VST.floyd.VSU <> Comp_G def
R99502:99503 VST.floyd.VSU <> ComponentJoin.c1 var
R99486:99492 VST.floyd.VSU <> G_merge def
R99507:99512 VST.floyd.VSU <> Comp_G def
R99514:99515 VST.floyd.VSU <> ComponentJoin.c2 var
R99495:99500 VST.floyd.VSU <> Comp_G def
R99502:99503 VST.floyd.VSU <> ComponentJoin.c1 var
binder 99550:99550 <> i:912
R99569:99582 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R99583:99584 Coq.Lists.List <> In def
R99589:99591 Coq.Lists.List <> map def
R99607:99610 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R99598:99603 VST.floyd.VSU <> Comp_G def
R99605:99606 VST.floyd.VSU <> ComponentJoin.c1 var
R99611:99616 VST.floyd.VSU <> Comp_G def
R99618:99619 VST.floyd.VSU <> ComponentJoin.c2 var
R99593:99595 Coq.Init.Datatypes <> fst def
R99586:99586 VST.floyd.VSU <> i:912 var
R99553:99554 Coq.Lists.List <> In def
R99559:99561 Coq.Lists.List <> map def
R99563:99565 Coq.Init.Datatypes <> fst def
R99556:99556 VST.floyd.VSU <> i:912 var
binder 99550:99550 <> i:913
R99569:99582 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R99583:99584 Coq.Lists.List <> In def
R99589:99591 Coq.Lists.List <> map def
R99607:99610 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R99598:99603 VST.floyd.VSU <> Comp_G def
R99605:99606 VST.floyd.VSU <> ComponentJoin.c1 var
R99611:99616 VST.floyd.VSU <> Comp_G def
R99618:99619 VST.floyd.VSU <> ComponentJoin.c2 var
R99593:99595 Coq.Init.Datatypes <> fst def
R99586:99586 VST.floyd.VSU <> i:913 var
R99553:99554 Coq.Lists.List <> In def
R99559:99561 Coq.Lists.List <> map def
R99563:99565 Coq.Init.Datatypes <> fst def
R99556:99556 VST.floyd.VSU <> i:913 var
R99654:99664 VST.floyd.VSU <> G_merge_dom thm
R99667:99673 Coq.Lists.List <> map_app thm
R99654:99664 VST.floyd.VSU <> G_merge_dom thm
R99654:99664 VST.floyd.VSU <> G_merge_dom thm
R99667:99673 Coq.Lists.List <> map_app thm
R99667:99673 Coq.Lists.List <> map_app thm
R99693:99699 Coq.Lists.List <> map_app thm
R99693:99699 Coq.Lists.List <> map_app thm
R99693:99699 Coq.Lists.List <> map_app thm
R99708:99716 Coq.Lists.List <> in_app_or thm
R99708:99716 Coq.Lists.List <> in_app_or thm
R99730:99738 Coq.Lists.List <> in_or_app thm
R99730:99738 Coq.Lists.List <> in_or_app thm
R99791:99805 compcert.lib.Coqlib <> list_in_map_inv thm
R99791:99805 compcert.lib.Coqlib <> list_in_map_inv thm
R99879:99887 Coq.Lists.List <> filter_In thm
R99879:99887 Coq.Lists.List <> filter_In thm
R99925:99930 VST.floyd.fieldlist <> in_map def
R99932:99934 Coq.Init.Datatypes <> fst def
R99925:99930 VST.floyd.fieldlist <> in_map def
R99932:99934 Coq.Init.Datatypes <> fst def
binder 99995:99995 <> i:914
R100025:100038 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R100039:100040 Coq.Lists.List <> In def
R100068:100071 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R100045:100047 Coq.Lists.List <> map def
R100054:100063 VST.veric.Clight_initial_world <> prog_funct syndef
R100065:100066 VST.floyd.VSU <> ComponentJoin.p1 var
R100049:100051 Coq.Init.Datatypes <> fst def
R100072:100074 Coq.Lists.List <> map def
R100081:100090 VST.veric.Clight_initial_world <> prog_funct syndef
R100092:100093 VST.floyd.VSU <> ComponentJoin.p2 var
R100076:100078 Coq.Init.Datatypes <> fst def
R100042:100042 VST.floyd.VSU <> i:914 var
R100009:100010 Coq.Lists.List <> In def
R100015:100017 Coq.Lists.List <> map def
R100019:100021 Coq.Init.Datatypes <> fst def
R100012:100012 VST.floyd.VSU <> i:914 var
binder 99995:99995 <> i:915
R100025:100038 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R100039:100040 Coq.Lists.List <> In def
R100068:100071 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R100045:100047 Coq.Lists.List <> map def
R100054:100063 VST.veric.Clight_initial_world <> prog_funct syndef
R100065:100066 VST.floyd.VSU <> ComponentJoin.p1 var
R100049:100051 Coq.Init.Datatypes <> fst def
R100072:100074 Coq.Lists.List <> map def
R100081:100090 VST.veric.Clight_initial_world <> prog_funct syndef
R100092:100093 VST.floyd.VSU <> ComponentJoin.p2 var
R100076:100078 Coq.Init.Datatypes <> fst def
R100042:100042 VST.floyd.VSU <> i:915 var
R100009:100010 Coq.Lists.List <> In def
R100015:100017 Coq.Lists.List <> map def
R100019:100021 Coq.Init.Datatypes <> fst def
R100012:100012 VST.floyd.VSU <> i:915 var
R100141:100153 VST.floyd.VSU <> G_merge_InDom thm
R100169:100177 Coq.Lists.List <> in_or_app thm
R100188:100197 VST.floyd.VSU <> Comp_G_LNR proj
R100199:100200 VST.floyd.VSU <> ComponentJoin.c1 var
R100141:100153 VST.floyd.VSU <> G_merge_InDom thm
R100169:100177 Coq.Lists.List <> in_or_app thm
R100188:100197 VST.floyd.VSU <> Comp_G_LNR proj
R100199:100200 VST.floyd.VSU <> ComponentJoin.c1 var
R100242:100258 VST.floyd.VSU <> Comp_G_in_Fundefs thm
R100289:100306 VST.veric.initial_world <> find_id_In_map_fst thm
R100242:100258 VST.floyd.VSU <> Comp_G_in_Fundefs thm
R100242:100258 VST.floyd.VSU <> Comp_G_in_Fundefs thm
R100289:100306 VST.veric.initial_world <> find_id_In_map_fst thm
R100289:100306 VST.veric.initial_world <> find_id_In_map_fst thm
R100348:100359 compcert.lib.Coqlib <> list_norepet ind
R100362:100364 Coq.Lists.List <> map def
R100372:100375 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R100371:100371 VST.floyd.VSU <> ComponentJoin.E var
R100376:100382 VST.floyd.VSU <> ComponentJoin.Imports var
R100366:100368 Coq.Init.Datatypes <> fst def
R100348:100359 compcert.lib.Coqlib <> list_norepet ind
R100362:100364 Coq.Lists.List <> map def
R100372:100375 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R100371:100371 VST.floyd.VSU <> ComponentJoin.E var
R100376:100382 VST.floyd.VSU <> ComponentJoin.Imports var
R100366:100368 Coq.Init.Datatypes <> fst def
R100421:100427 Coq.Lists.List <> map_app thm
R100430:100445 compcert.lib.Coqlib <> list_norepet_app thm
R100421:100427 Coq.Lists.List <> map_app thm
R100421:100427 Coq.Lists.List <> map_app thm
R100430:100445 compcert.lib.Coqlib <> list_norepet_app thm
R100430:100445 compcert.lib.Coqlib <> list_norepet_app thm
R100478:100484 VST.floyd.VSU <> G_merge def
R100495:100501 Coq.Lists.List <> map_app thm
R100504:100519 compcert.lib.Coqlib <> list_norepet_app thm
R100495:100501 Coq.Lists.List <> map_app thm
R100495:100501 Coq.Lists.List <> map_app thm
R100504:100519 compcert.lib.Coqlib <> list_norepet_app thm
R100504:100519 compcert.lib.Coqlib <> list_norepet_app thm
R100547:100561 VST.floyd.VSU <> G_merge_aux_dom thm
R100547:100561 VST.floyd.VSU <> G_merge_aux_dom thm
R100547:100561 VST.floyd.VSU <> G_merge_aux_dom thm
R100571:100586 VST.floyd.VSU <> Comp_Externs_LNR thm
R100588:100589 VST.floyd.VSU <> ComponentJoin.c1 var
R100571:100586 VST.floyd.VSU <> Comp_Externs_LNR thm
R100588:100589 VST.floyd.VSU <> ComponentJoin.c1 var
R100607:100633 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R100607:100633 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R100643:100658 VST.floyd.VSU <> Comp_Externs_LNR thm
R100660:100661 VST.floyd.VSU <> ComponentJoin.c2 var
R100643:100658 VST.floyd.VSU <> Comp_Externs_LNR thm
R100660:100661 VST.floyd.VSU <> ComponentJoin.c2 var
R100681:100695 VST.floyd.VSU <> G_merge_aux_dom thm
R100681:100695 VST.floyd.VSU <> G_merge_aux_dom thm
R100681:100695 VST.floyd.VSU <> G_merge_aux_dom thm
R100752:100766 compcert.lib.Coqlib <> list_in_map_inv thm
R100752:100766 compcert.lib.Coqlib <> list_in_map_inv thm
R100845:100853 Coq.Lists.List <> filter_In thm
R100845:100853 Coq.Lists.List <> filter_In thm
R100891:100908 VST.floyd.assoclists <> In_map_fst_find_id thm
R100891:100908 VST.floyd.assoclists <> In_map_fst_find_id thm
R100989:101004 VST.floyd.VSU <> Comp_Externs_LNR thm
R101006:101007 VST.floyd.VSU <> ComponentJoin.c1 var
R100989:101004 VST.floyd.VSU <> Comp_Externs_LNR thm
R101006:101007 VST.floyd.VSU <> ComponentJoin.c1 var
R101024:101030 VST.floyd.VSU <> G_merge def
R101043:101049 Coq.Lists.List <> map_app thm
R101043:101049 Coq.Lists.List <> map_app thm
R101043:101049 Coq.Lists.List <> map_app thm
R101043:101049 Coq.Lists.List <> map_app thm
R101058:101076 VST.floyd.assoclists <> list_disjoint_app_R thm
R101085:101103 VST.floyd.assoclists <> list_disjoint_app_L thm
R101058:101076 VST.floyd.assoclists <> list_disjoint_app_R thm
R101085:101103 VST.floyd.assoclists <> list_disjoint_app_L thm
R101085:101103 VST.floyd.assoclists <> list_disjoint_app_L thm
R101141:101155 VST.floyd.VSU <> G_merge_aux_dom thm
R101141:101155 VST.floyd.VSU <> G_merge_aux_dom thm
R101141:101155 VST.floyd.VSU <> G_merge_aux_dom thm
R101170:101192 VST.floyd.VSU <> Comp_ExternsImports_LNR proj
R101194:101195 VST.floyd.VSU <> ComponentJoin.c1 var
R101170:101192 VST.floyd.VSU <> Comp_ExternsImports_LNR proj
R101194:101195 VST.floyd.VSU <> ComponentJoin.c1 var
R101207:101213 Coq.Lists.List <> map_app thm
R101216:101231 compcert.lib.Coqlib <> list_norepet_app thm
R101207:101213 Coq.Lists.List <> map_app thm
R101207:101213 Coq.Lists.List <> map_app thm
R101216:101231 compcert.lib.Coqlib <> list_norepet_app thm
R101216:101231 compcert.lib.Coqlib <> list_norepet_app thm
R101267:101284 VST.floyd.assoclists <> list_disjoint_mono thm
R101267:101284 VST.floyd.assoclists <> list_disjoint_mono thm
R101340:101349 Coq.Lists.List <> in_map_iff thm
R101340:101349 Coq.Lists.List <> in_map_iff thm
R101358:101367 Coq.Lists.List <> in_map_iff thm
R101358:101367 Coq.Lists.List <> in_map_iff thm
R101442:101450 Coq.Lists.List <> filter_In thm
R101442:101450 Coq.Lists.List <> filter_In thm
R101481:101481 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101483:101483 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101487:101487 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101481:101481 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101483:101483 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101487:101487 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101550:101559 Coq.Lists.List <> in_map_iff thm
R101550:101559 Coq.Lists.List <> in_map_iff thm
R101634:101643 Coq.Lists.List <> in_map_iff thm
R101634:101643 Coq.Lists.List <> in_map_iff thm
R101719:101727 Coq.Lists.List <> filter_In thm
R101719:101727 Coq.Lists.List <> filter_In thm
R101772:101780 Coq.Lists.List <> filter_In thm
R101772:101780 Coq.Lists.List <> filter_In thm
R101850:101855 Coq.Lists.List <> in_dec thm
R101879:101881 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R101869:101871 Coq.Lists.List <> map def
R101877:101878 VST.floyd.VSU <> ComponentJoin.E2 var
R101873:101875 Coq.Init.Datatypes <> fst def
R101882:101887 VST.floyd.VSU <> IntIDs def
R101889:101890 VST.floyd.VSU <> ComponentJoin.p2 var
R101857:101864 compcert.common.AST <> ident_eq def
R101850:101855 Coq.Lists.List <> in_dec thm
R101879:101881 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R101869:101871 Coq.Lists.List <> map def
R101877:101878 VST.floyd.VSU <> ComponentJoin.E2 var
R101873:101875 Coq.Init.Datatypes <> fst def
R101882:101887 VST.floyd.VSU <> IntIDs def
R101889:101890 VST.floyd.VSU <> ComponentJoin.p2 var
R101857:101864 compcert.common.AST <> ident_eq def
R101945:101950 VST.floyd.fieldlist <> in_map def
R101952:101954 Coq.Init.Datatypes <> fst def
R101945:101950 VST.floyd.fieldlist <> in_map def
R101952:101954 Coq.Init.Datatypes <> fst def
R101972:101980 Coq.Lists.List <> in_or_app thm
R101972:101980 Coq.Lists.List <> in_or_app thm
R102025:102039 VST.floyd.VSU <> G_merge_aux_dom thm
R102025:102039 VST.floyd.VSU <> G_merge_aux_dom thm
R102025:102039 VST.floyd.VSU <> G_merge_aux_dom thm
R102078:102087 Coq.Lists.List <> in_map_iff thm
R102078:102087 Coq.Lists.List <> in_map_iff thm
R102164:102172 Coq.Lists.List <> filter_In thm
R102164:102172 Coq.Lists.List <> filter_In thm
R102216:102228 Coq.Bool.Bool <> negb_true_iff thm
R102216:102228 Coq.Bool.Bool <> negb_true_iff thm
R102257:102262 Coq.Lists.List <> in_dec thm
R102286:102289 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R102276:102278 Coq.Lists.List <> map def
R102284:102285 VST.floyd.VSU <> ComponentJoin.E1 var
R102280:102282 Coq.Init.Datatypes <> fst def
R102299:102302 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R102290:102295 VST.floyd.VSU <> IntIDs def
R102297:102298 VST.floyd.VSU <> ComponentJoin.p1 var
R102303:102305 Coq.Lists.List <> map def
R102311:102318 VST.floyd.VSU <> ComponentJoin.Imports1 var
R102307:102309 Coq.Init.Datatypes <> fst def
R102264:102271 compcert.common.AST <> ident_eq def
R102257:102262 Coq.Lists.List <> in_dec thm
R102286:102289 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R102276:102278 Coq.Lists.List <> map def
R102284:102285 VST.floyd.VSU <> ComponentJoin.E1 var
R102280:102282 Coq.Init.Datatypes <> fst def
R102299:102302 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R102290:102295 VST.floyd.VSU <> IntIDs def
R102297:102298 VST.floyd.VSU <> ComponentJoin.p1 var
R102303:102305 Coq.Lists.List <> map def
R102311:102318 VST.floyd.VSU <> ComponentJoin.Imports1 var
R102307:102309 Coq.Init.Datatypes <> fst def
R102264:102271 compcert.common.AST <> ident_eq def
R102374:102382 Coq.Lists.List <> in_or_app thm
R102374:102382 Coq.Lists.List <> in_or_app thm
R102432:102454 VST.floyd.VSU <> Comp_ExternsImports_LNR proj
R102456:102457 VST.floyd.VSU <> ComponentJoin.c2 var
R102432:102454 VST.floyd.VSU <> Comp_ExternsImports_LNR proj
R102456:102457 VST.floyd.VSU <> ComponentJoin.c2 var
R102469:102475 Coq.Lists.List <> map_app thm
R102478:102493 compcert.lib.Coqlib <> list_norepet_app thm
R102469:102475 Coq.Lists.List <> map_app thm
R102469:102475 Coq.Lists.List <> map_app thm
R102478:102493 compcert.lib.Coqlib <> list_norepet_app thm
R102478:102493 compcert.lib.Coqlib <> list_norepet_app thm
R102530:102547 VST.floyd.assoclists <> list_disjoint_mono thm
R102530:102547 VST.floyd.assoclists <> list_disjoint_mono thm
R102591:102600 Coq.Lists.List <> in_map_iff thm
R102591:102600 Coq.Lists.List <> in_map_iff thm
R102609:102618 Coq.Lists.List <> in_map_iff thm
R102609:102618 Coq.Lists.List <> in_map_iff thm
R102694:102702 Coq.Lists.List <> filter_In thm
R102694:102702 Coq.Lists.List <> filter_In thm
R102733:102733 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102735:102735 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102739:102739 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102733:102733 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102735:102735 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102739:102739 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102789:102798 Coq.Lists.List <> in_map_iff thm
R102789:102798 Coq.Lists.List <> in_map_iff thm
R102807:102816 Coq.Lists.List <> in_map_iff thm
R102807:102816 Coq.Lists.List <> in_map_iff thm
R102892:102900 Coq.Lists.List <> filter_In thm
R102892:102900 Coq.Lists.List <> filter_In thm
R102931:102931 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102933:102933 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102937:102937 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102931:102931 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102933:102933 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102937:102937 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102976:102987 compcert.lib.Coqlib <> list_norepet ind
R102990:102992 Coq.Lists.List <> map def
R102994:102996 Coq.Init.Datatypes <> fst def
R102976:102987 compcert.lib.Coqlib <> list_norepet ind
R102990:102992 Coq.Lists.List <> map def
R102994:102996 Coq.Init.Datatypes <> fst def
R103075:103085 VST.floyd.VSU <> G_merge_LNR thm
R103097:103106 VST.floyd.VSU <> Comp_G_LNR proj
R103108:103109 VST.floyd.VSU <> ComponentJoin.c1 var
R103121:103130 VST.floyd.VSU <> Comp_G_LNR proj
R103132:103133 VST.floyd.VSU <> ComponentJoin.c2 var
R103075:103085 VST.floyd.VSU <> G_merge_LNR thm
R103097:103106 VST.floyd.VSU <> Comp_G_LNR proj
R103108:103109 VST.floyd.VSU <> ComponentJoin.c1 var
R103121:103130 VST.floyd.VSU <> Comp_G_LNR proj
R103132:103133 VST.floyd.VSU <> ComponentJoin.c2 var
R103158:103170 compcert.lib.Coqlib <> list_disjoint def
R103186:103188 Coq.Lists.List <> map def
R103202:103205 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R103195:103201 VST.floyd.VSU <> ComponentJoin.Imports var
R103190:103192 Coq.Init.Datatypes <> fst def
R103173:103175 Coq.Lists.List <> map def
R103181:103182 VST.floyd.VSU <> ComponentJoin.V1 var
R103177:103179 Coq.Init.Datatypes <> fst def
R103158:103170 compcert.lib.Coqlib <> list_disjoint def
R103186:103188 Coq.Lists.List <> map def
R103202:103205 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R103195:103201 VST.floyd.VSU <> ComponentJoin.Imports var
R103190:103192 Coq.Init.Datatypes <> fst def
R103173:103175 Coq.Lists.List <> map def
R103181:103182 VST.floyd.VSU <> ComponentJoin.V1 var
R103177:103179 Coq.Init.Datatypes <> fst def
R103278:103281 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R103255:103257 Coq.Lists.List <> map def
R103264:103273 VST.veric.Clight_initial_world <> prog_funct syndef
R103275:103276 VST.floyd.VSU <> ComponentJoin.p1 var
R103259:103261 Coq.Init.Datatypes <> fst def
R103282:103284 Coq.Lists.List <> map def
R103291:103300 VST.veric.Clight_initial_world <> prog_funct syndef
R103302:103303 VST.floyd.VSU <> ComponentJoin.p2 var
R103286:103288 Coq.Init.Datatypes <> fst def
R103319:103321 Coq.Lists.List <> map def
R103327:103328 VST.floyd.VSU <> ComponentJoin.V1 var
R103323:103325 Coq.Init.Datatypes <> fst def
R103223:103240 VST.floyd.assoclists <> list_disjoint_mono thm
R103278:103281 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R103255:103257 Coq.Lists.List <> map def
R103264:103273 VST.veric.Clight_initial_world <> prog_funct syndef
R103275:103276 VST.floyd.VSU <> ComponentJoin.p1 var
R103259:103261 Coq.Init.Datatypes <> fst def
R103282:103284 Coq.Lists.List <> map def
R103291:103300 VST.veric.Clight_initial_world <> prog_funct syndef
R103302:103303 VST.floyd.VSU <> ComponentJoin.p2 var
R103286:103288 Coq.Init.Datatypes <> fst def
R103319:103321 Coq.Lists.List <> map def
R103327:103328 VST.floyd.VSU <> ComponentJoin.V1 var
R103323:103325 Coq.Init.Datatypes <> fst def
R103223:103240 VST.floyd.assoclists <> list_disjoint_mono thm
R103375:103383 Coq.Lists.List <> in_app_or thm
R103375:103383 Coq.Lists.List <> in_app_or thm
R103418:103422 VST.floyd.VSU <> ComponentJoin.HV1p1 var
R103418:103422 VST.floyd.VSU <> ComponentJoin.HV1p1 var
R103447:103451 VST.floyd.VSU <> ComponentJoin.HV1p2 var
R103447:103451 VST.floyd.VSU <> ComponentJoin.HV1p2 var
R103490:103496 Coq.Lists.List <> map_app thm
R103490:103496 Coq.Lists.List <> map_app thm
R103490:103496 Coq.Lists.List <> map_app thm
R103510:103518 Coq.Lists.List <> in_app_or thm
R103510:103518 Coq.Lists.List <> in_app_or thm
R103550:103567 VST.floyd.VSU <> Imports_in_Fundefs thm
R103550:103567 VST.floyd.VSU <> Imports_in_Fundefs thm
R103628:103640 compcert.lib.Coqlib <> list_disjoint def
R103656:103658 Coq.Lists.List <> map def
R103672:103675 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R103665:103671 VST.floyd.VSU <> ComponentJoin.Imports var
R103660:103662 Coq.Init.Datatypes <> fst def
R103643:103645 Coq.Lists.List <> map def
R103651:103652 VST.floyd.VSU <> ComponentJoin.V2 var
R103647:103649 Coq.Init.Datatypes <> fst def
R103628:103640 compcert.lib.Coqlib <> list_disjoint def
R103656:103658 Coq.Lists.List <> map def
R103672:103675 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R103665:103671 VST.floyd.VSU <> ComponentJoin.Imports var
R103660:103662 Coq.Init.Datatypes <> fst def
R103643:103645 Coq.Lists.List <> map def
R103651:103652 VST.floyd.VSU <> ComponentJoin.V2 var
R103647:103649 Coq.Init.Datatypes <> fst def
R103748:103751 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R103725:103727 Coq.Lists.List <> map def
R103734:103743 VST.veric.Clight_initial_world <> prog_funct syndef
R103745:103746 VST.floyd.VSU <> ComponentJoin.p1 var
R103729:103731 Coq.Init.Datatypes <> fst def
R103752:103754 Coq.Lists.List <> map def
R103761:103770 VST.veric.Clight_initial_world <> prog_funct syndef
R103772:103773 VST.floyd.VSU <> ComponentJoin.p2 var
R103756:103758 Coq.Init.Datatypes <> fst def
R103789:103791 Coq.Lists.List <> map def
R103797:103798 VST.floyd.VSU <> ComponentJoin.V2 var
R103793:103795 Coq.Init.Datatypes <> fst def
R103693:103710 VST.floyd.assoclists <> list_disjoint_mono thm
R103748:103751 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R103725:103727 Coq.Lists.List <> map def
R103734:103743 VST.veric.Clight_initial_world <> prog_funct syndef
R103745:103746 VST.floyd.VSU <> ComponentJoin.p1 var
R103729:103731 Coq.Init.Datatypes <> fst def
R103752:103754 Coq.Lists.List <> map def
R103761:103770 VST.veric.Clight_initial_world <> prog_funct syndef
R103772:103773 VST.floyd.VSU <> ComponentJoin.p2 var
R103756:103758 Coq.Init.Datatypes <> fst def
R103789:103791 Coq.Lists.List <> map def
R103797:103798 VST.floyd.VSU <> ComponentJoin.V2 var
R103793:103795 Coq.Init.Datatypes <> fst def
R103693:103710 VST.floyd.assoclists <> list_disjoint_mono thm
R103845:103853 Coq.Lists.List <> in_app_or thm
R103845:103853 Coq.Lists.List <> in_app_or thm
R103888:103892 VST.floyd.VSU <> ComponentJoin.HV2p1 var
R103888:103892 VST.floyd.VSU <> ComponentJoin.HV2p1 var
R103917:103921 VST.floyd.VSU <> ComponentJoin.HV2p2 var
R103917:103921 VST.floyd.VSU <> ComponentJoin.HV2p2 var
R103960:103966 Coq.Lists.List <> map_app thm
R103960:103966 Coq.Lists.List <> map_app thm
R103960:103966 Coq.Lists.List <> map_app thm
R103980:103988 Coq.Lists.List <> in_app_or thm
R103980:103988 Coq.Lists.List <> in_app_or thm
R104020:104037 VST.floyd.VSU <> Imports_in_Fundefs thm
R104020:104037 VST.floyd.VSU <> Imports_in_Fundefs thm
R104111:104123 compcert.lib.Coqlib <> list_disjoint def
R104144:104146 Coq.Lists.List <> map def
R104148:104150 Coq.Init.Datatypes <> fst def
R104126:104128 Coq.Lists.List <> map def
R104134:104140 VST.floyd.VSU <> ComponentJoin.Imports var
R104130:104132 Coq.Init.Datatypes <> fst def
R104111:104123 compcert.lib.Coqlib <> list_disjoint def
R104144:104146 Coq.Lists.List <> map def
R104148:104150 Coq.Init.Datatypes <> fst def
R104126:104128 Coq.Lists.List <> map def
R104134:104140 VST.floyd.VSU <> ComponentJoin.Imports var
R104130:104132 Coq.Init.Datatypes <> fst def
R104267:104281 compcert.lib.Coqlib <> list_in_map_inv thm
R104267:104281 compcert.lib.Coqlib <> list_in_map_inv thm
R104356:104368 VST.floyd.VSU <> G_merge_InDom thm
R104397:104406 VST.floyd.VSU <> Comp_G_LNR proj
R104408:104409 VST.floyd.VSU <> ComponentJoin.c1 var
R104383:104388 VST.floyd.VSU <> Comp_G def
R104390:104391 VST.floyd.VSU <> ComponentJoin.c2 var
R104371:104376 VST.floyd.VSU <> Comp_G def
R104378:104379 VST.floyd.VSU <> ComponentJoin.c1 var
R104356:104368 VST.floyd.VSU <> G_merge_InDom thm
R104397:104406 VST.floyd.VSU <> Comp_G_LNR proj
R104408:104409 VST.floyd.VSU <> ComponentJoin.c1 var
R104383:104388 VST.floyd.VSU <> Comp_G def
R104390:104391 VST.floyd.VSU <> ComponentJoin.c2 var
R104371:104376 VST.floyd.VSU <> Comp_G def
R104378:104379 VST.floyd.VSU <> ComponentJoin.c1 var
R104433:104441 Coq.Lists.List <> in_app_or thm
R104482:104490 Coq.Lists.List <> filter_In thm
R104433:104441 Coq.Lists.List <> in_app_or thm
R104482:104490 Coq.Lists.List <> filter_In thm
R104482:104490 Coq.Lists.List <> filter_In thm
R104539:104548 VST.veric.initial_world <> in_map_fst thm
R104539:104548 VST.veric.initial_world <> in_map_fst thm
R104571:104589 compcert.lib.Coqlib <> list_disjoint_notin thm
R104571:104589 compcert.lib.Coqlib <> list_disjoint_notin thm
R104681:104686 Coq.Lists.List <> in_dec thm
R104710:104713 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R104700:104702 Coq.Lists.List <> map def
R104708:104709 VST.floyd.VSU <> ComponentJoin.E2 var
R104704:104706 Coq.Init.Datatypes <> fst def
R104714:104719 VST.floyd.VSU <> IntIDs def
R104721:104722 VST.floyd.VSU <> ComponentJoin.p2 var
R104688:104695 compcert.common.AST <> ident_eq def
R104681:104686 Coq.Lists.List <> in_dec thm
R104710:104713 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R104700:104702 Coq.Lists.List <> map def
R104708:104709 VST.floyd.VSU <> ComponentJoin.E2 var
R104704:104706 Coq.Init.Datatypes <> fst def
R104714:104719 VST.floyd.VSU <> IntIDs def
R104721:104722 VST.floyd.VSU <> ComponentJoin.p2 var
R104688:104695 compcert.common.AST <> ident_eq def
R104790:104798 Coq.Lists.List <> in_or_app thm
R104790:104798 Coq.Lists.List <> in_or_app thm
R104815:104825 VST.floyd.VSU <> Comp_G_elim thm
R104815:104825 VST.floyd.VSU <> Comp_G_elim thm
R104913:104918 Coq.Lists.List <> in_dec thm
R104942:104945 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R104932:104934 Coq.Lists.List <> map def
R104940:104941 VST.floyd.VSU <> ComponentJoin.E1 var
R104936:104938 Coq.Init.Datatypes <> fst def
R104955:104958 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R104946:104951 VST.floyd.VSU <> IntIDs def
R104953:104954 VST.floyd.VSU <> ComponentJoin.p1 var
R104959:104961 Coq.Lists.List <> map def
R104967:104974 VST.floyd.VSU <> ComponentJoin.Imports1 var
R104963:104965 Coq.Init.Datatypes <> fst def
R104920:104927 compcert.common.AST <> ident_eq def
R104913:104918 Coq.Lists.List <> in_dec thm
R104942:104945 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R104932:104934 Coq.Lists.List <> map def
R104940:104941 VST.floyd.VSU <> ComponentJoin.E1 var
R104936:104938 Coq.Init.Datatypes <> fst def
R104955:104958 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R104946:104951 VST.floyd.VSU <> IntIDs def
R104953:104954 VST.floyd.VSU <> ComponentJoin.p1 var
R104959:104961 Coq.Lists.List <> map def
R104967:104974 VST.floyd.VSU <> ComponentJoin.Imports1 var
R104963:104965 Coq.Init.Datatypes <> fst def
R104920:104927 compcert.common.AST <> ident_eq def
R105029:105037 Coq.Lists.List <> in_or_app thm
R105029:105037 Coq.Lists.List <> in_or_app thm
R105088:105098 VST.floyd.VSU <> Comp_G_elim thm
R105088:105098 VST.floyd.VSU <> Comp_G_elim thm
R105192:105200 Coq.Lists.List <> in_or_app thm
R105192:105200 Coq.Lists.List <> in_or_app thm
R105234:105243 VST.veric.initial_world <> in_map_fst thm
R105234:105243 VST.veric.initial_world <> in_map_fst thm
R105302:105313 compcert.lib.Coqlib <> list_norepet ind
R105326:105329 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R105316:105318 Coq.Lists.List <> map def
R105324:105325 VST.floyd.VSU <> ComponentJoin.V1 var
R105320:105322 Coq.Init.Datatypes <> fst def
R105330:105332 Coq.Lists.List <> map def
R105346:105349 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R105339:105345 VST.floyd.VSU <> ComponentJoin.Imports var
R105334:105336 Coq.Init.Datatypes <> fst def
R105302:105313 compcert.lib.Coqlib <> list_norepet ind
R105326:105329 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R105316:105318 Coq.Lists.List <> map def
R105324:105325 VST.floyd.VSU <> ComponentJoin.V1 var
R105320:105322 Coq.Init.Datatypes <> fst def
R105330:105332 Coq.Lists.List <> map def
R105346:105349 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R105339:105345 VST.floyd.VSU <> ComponentJoin.Imports var
R105334:105336 Coq.Init.Datatypes <> fst def
R105382:105397 compcert.lib.Coqlib <> list_norepet_app thm
R105382:105397 compcert.lib.Coqlib <> list_norepet_app thm
R105382:105397 compcert.lib.Coqlib <> list_norepet_app thm
R105429:105435 Coq.Lists.List <> map_app thm
R105438:105453 compcert.lib.Coqlib <> list_norepet_app thm
R105429:105435 Coq.Lists.List <> map_app thm
R105429:105435 Coq.Lists.List <> map_app thm
R105438:105453 compcert.lib.Coqlib <> list_norepet_app thm
R105438:105453 compcert.lib.Coqlib <> list_norepet_app thm
R105496:105507 compcert.lib.Coqlib <> list_norepet ind
R105520:105523 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R105510:105512 Coq.Lists.List <> map def
R105518:105519 VST.floyd.VSU <> ComponentJoin.V2 var
R105514:105516 Coq.Init.Datatypes <> fst def
R105524:105526 Coq.Lists.List <> map def
R105540:105543 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R105533:105539 VST.floyd.VSU <> ComponentJoin.Imports var
R105528:105530 Coq.Init.Datatypes <> fst def
R105496:105507 compcert.lib.Coqlib <> list_norepet ind
R105520:105523 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R105510:105512 Coq.Lists.List <> map def
R105518:105519 VST.floyd.VSU <> ComponentJoin.V2 var
R105514:105516 Coq.Init.Datatypes <> fst def
R105524:105526 Coq.Lists.List <> map def
R105540:105543 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R105533:105539 VST.floyd.VSU <> ComponentJoin.Imports var
R105528:105530 Coq.Init.Datatypes <> fst def
R105572:105587 compcert.lib.Coqlib <> list_norepet_app thm
R105572:105587 compcert.lib.Coqlib <> list_norepet_app thm
R105572:105587 compcert.lib.Coqlib <> list_norepet_app thm
R105620:105626 Coq.Lists.List <> map_app thm
R105629:105644 compcert.lib.Coqlib <> list_norepet_app thm
R105620:105626 Coq.Lists.List <> map_app thm
R105620:105626 Coq.Lists.List <> map_app thm
R105629:105644 compcert.lib.Coqlib <> list_norepet_app thm
R105629:105644 compcert.lib.Coqlib <> list_norepet_app thm
R105683:105694 compcert.lib.Coqlib <> list_norepet ind
R105706:105709 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R105697:105699 Coq.Lists.List <> map def
R105705:105705 VST.floyd.VSU <> ComponentJoin.V var
R105701:105703 Coq.Init.Datatypes <> fst def
R105710:105712 Coq.Lists.List <> map def
R105726:105730 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R105762:105762 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R105719:105725 VST.floyd.VSU <> ComponentJoin.Imports var
R105731:105737 VST.floyd.VSU <> G_merge def
R105752:105757 VST.floyd.VSU <> Comp_G def
R105759:105760 VST.floyd.VSU <> ComponentJoin.c2 var
R105740:105745 VST.floyd.VSU <> Comp_G def
R105747:105748 VST.floyd.VSU <> ComponentJoin.c1 var
R105714:105716 Coq.Init.Datatypes <> fst def
R105683:105694 compcert.lib.Coqlib <> list_norepet ind
R105706:105709 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R105697:105699 Coq.Lists.List <> map def
R105705:105705 VST.floyd.VSU <> ComponentJoin.V var
R105701:105703 Coq.Init.Datatypes <> fst def
R105710:105712 Coq.Lists.List <> map def
R105726:105730 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R105762:105762 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R105719:105725 VST.floyd.VSU <> ComponentJoin.Imports var
R105731:105737 VST.floyd.VSU <> G_merge def
R105752:105757 VST.floyd.VSU <> Comp_G def
R105759:105760 VST.floyd.VSU <> ComponentJoin.c2 var
R105740:105745 VST.floyd.VSU <> Comp_G def
R105747:105748 VST.floyd.VSU <> ComponentJoin.c1 var
R105714:105716 Coq.Init.Datatypes <> fst def
R105789:105795 VST.floyd.VSU <> G_merge def
R105810:105815 VST.floyd.VSU <> Comp_G def
R105817:105818 VST.floyd.VSU <> ComponentJoin.c2 var
R105798:105803 VST.floyd.VSU <> Comp_G def
R105805:105806 VST.floyd.VSU <> ComponentJoin.c1 var
R105789:105795 VST.floyd.VSU <> G_merge def
R105810:105815 VST.floyd.VSU <> Comp_G def
R105817:105818 VST.floyd.VSU <> ComponentJoin.c2 var
R105798:105803 VST.floyd.VSU <> Comp_G def
R105805:105806 VST.floyd.VSU <> ComponentJoin.c1 var
R105878:105896 compcert.lib.Coqlib <> list_norepet_append thm
R105917:105941 compcert.lib.Coqlib <> list_norepet_append_right thm
R105878:105896 compcert.lib.Coqlib <> list_norepet_append thm
R105917:105941 compcert.lib.Coqlib <> list_norepet_append_right thm
R105992:105995 VST.floyd.VSU <> ComponentJoin.domV var
R105992:105995 VST.floyd.VSU <> ComponentJoin.domV var
R106094:106109 VST.floyd.VSU <> Comp_G_justified proj
R106111:106112 VST.floyd.VSU <> ComponentJoin.c2 var
R106094:106109 VST.floyd.VSU <> Comp_G_justified proj
R106111:106112 VST.floyd.VSU <> ComponentJoin.c2 var
R106142:106157 VST.floyd.VSU <> Comp_G_justified proj
R106159:106160 VST.floyd.VSU <> ComponentJoin.c1 var
R106142:106157 VST.floyd.VSU <> Comp_G_justified proj
R106159:106160 VST.floyd.VSU <> ComponentJoin.c1 var
binder 106206:106206 <> i:916
R106231:106242 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R106243:106250 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R106325:106335 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R106255:106271 compcert.common.AST <> external_function ind
binder 106251:106251 <> f:917
R106280:106287 compcert.cfrontend.Ctypes <> typelist ind
binder 106275:106276 <> ts:918
R106295:106298 compcert.cfrontend.Ctypes <> type ind
binder 106291:106291 <> t:919
R106307:106324 compcert.common.AST <> calling_convention rec
binder 106302:106303 <> cc:920
R106359:106361 Coq.Init.Logic <> ::type_scope:x_'='_x not
R106336:106342 VST.veric.initial_world <> find_id def
R106347:106355 compcert.cfrontend.Ctypes <> prog_defs proj
R106357:106357 VST.floyd.VSU <> ComponentJoin.p var
R106344:106344 VST.floyd.VSU <> i:916 var
R106362:106365 Coq.Init.Datatypes <> Some constr
R106368:106371 compcert.common.AST <> Gfun constr
R106374:106381 compcert.cfrontend.Ctypes <> External constr
R106390:106391 VST.floyd.VSU <> cc:920 var
R106388:106388 VST.floyd.VSU <> t:919 var
R106385:106386 VST.floyd.VSU <> ts:918 var
R106383:106383 VST.floyd.VSU <> f:917 var
R106209:106210 Coq.Lists.List <> In def
R106215:106217 Coq.Lists.List <> map def
R106223:106229 VST.floyd.VSU <> ComponentJoin.Imports var
R106219:106221 Coq.Init.Datatypes <> fst def
R106212:106212 VST.floyd.VSU <> i:916 var
binder 106206:106206 <> i:921
R106231:106242 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R106243:106250 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R106325:106335 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R106255:106271 compcert.common.AST <> external_function ind
binder 106251:106251 <> f:922
R106280:106287 compcert.cfrontend.Ctypes <> typelist ind
binder 106275:106276 <> ts:923
R106295:106298 compcert.cfrontend.Ctypes <> type ind
binder 106291:106291 <> t:924
R106307:106324 compcert.common.AST <> calling_convention rec
binder 106302:106303 <> cc:925
R106359:106361 Coq.Init.Logic <> ::type_scope:x_'='_x not
R106336:106342 VST.veric.initial_world <> find_id def
R106347:106355 compcert.cfrontend.Ctypes <> prog_defs proj
R106357:106357 VST.floyd.VSU <> ComponentJoin.p var
R106344:106344 VST.floyd.VSU <> i:921 var
R106362:106365 Coq.Init.Datatypes <> Some constr
R106368:106371 compcert.common.AST <> Gfun constr
R106374:106381 compcert.cfrontend.Ctypes <> External constr
R106390:106391 VST.floyd.VSU <> cc:925 var
R106388:106388 VST.floyd.VSU <> t:924 var
R106385:106386 VST.floyd.VSU <> ts:923 var
R106383:106383 VST.floyd.VSU <> f:922 var
R106209:106210 Coq.Lists.List <> In def
R106215:106217 Coq.Lists.List <> map def
R106223:106229 VST.floyd.VSU <> ComponentJoin.Imports var
R106219:106221 Coq.Init.Datatypes <> fst def
R106212:106212 VST.floyd.VSU <> i:921 var
R106454:106460 Coq.Lists.List <> map_app thm
R106454:106460 Coq.Lists.List <> map_app thm
R106454:106460 Coq.Lists.List <> map_app thm
R106474:106482 Coq.Lists.List <> in_app_or thm
R106474:106482 Coq.Lists.List <> in_app_or thm
R106543:106544 VST.floyd.VSU <> ComponentJoin.FP var
R106543:106544 VST.floyd.VSU <> ComponentJoin.FP var
R106560:106574 compcert.lib.Coqlib <> list_in_map_inv thm
R106560:106574 compcert.lib.Coqlib <> list_in_map_inv thm
R106644:106652 Coq.Lists.List <> filter_In thm
R106644:106652 Coq.Lists.List <> filter_In thm
R106711:106731 VST.floyd.VSU <> Comp_Imports_external proj
R106733:106734 VST.floyd.VSU <> ComponentJoin.c1 var
R106711:106731 VST.floyd.VSU <> Comp_Imports_external proj
R106733:106734 VST.floyd.VSU <> ComponentJoin.c1 var
R106779:106784 VST.floyd.fieldlist <> in_map def
R106786:106788 Coq.Init.Datatypes <> fst def
R106779:106784 VST.floyd.fieldlist <> in_map def
R106786:106788 Coq.Init.Datatypes <> fst def
R106825:106838 VST.floyd.VSU <> Fundef_of_Gfun thm
R106825:106838 VST.floyd.VSU <> Fundef_of_Gfun thm
R106893:106899 VST.veric.initial_world <> find_id def
R106904:106913 VST.veric.Clight_initial_world <> prog_funct syndef
R106915:106916 VST.floyd.VSU <> ComponentJoin.p2 var
R106893:106899 VST.veric.initial_world <> find_id def
R106904:106913 VST.veric.Clight_initial_world <> prog_funct syndef
R106915:106916 VST.floyd.VSU <> ComponentJoin.p2 var
R106968:106981 VST.floyd.VSU <> Gfun_of_Fundef thm
R106968:106981 VST.floyd.VSU <> Gfun_of_Fundef thm
R107001:107002 VST.floyd.VSU <> ComponentJoin.c2 var
R107001:107002 VST.floyd.VSU <> ComponentJoin.c2 var
R107042:107047 Coq.Lists.List <> in_dec thm
R107071:107074 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R107061:107063 Coq.Lists.List <> map def
R107069:107070 VST.floyd.VSU <> ComponentJoin.E2 var
R107065:107067 Coq.Init.Datatypes <> fst def
R107075:107080 VST.floyd.VSU <> IntIDs def
R107082:107083 VST.floyd.VSU <> ComponentJoin.p2 var
R107049:107056 compcert.common.AST <> ident_eq def
R107042:107047 Coq.Lists.List <> in_dec thm
R107071:107074 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R107061:107063 Coq.Lists.List <> map def
R107069:107070 VST.floyd.VSU <> ComponentJoin.E2 var
R107065:107067 Coq.Init.Datatypes <> fst def
R107075:107080 VST.floyd.VSU <> IntIDs def
R107082:107083 VST.floyd.VSU <> ComponentJoin.p2 var
R107049:107056 compcert.common.AST <> ident_eq def
R107120:107128 Coq.Lists.List <> in_or_app thm
R107120:107128 Coq.Lists.List <> in_or_app thm
R107144:107153 Coq.Lists.List <> in_map_iff thm
R107144:107153 Coq.Lists.List <> in_map_iff thm
R107172:107172 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107174:107175 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107193:107193 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107176:107179 compcert.common.AST <> Gfun constr
R107182:107189 compcert.cfrontend.Ctypes <> Internal constr
R107172:107172 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107174:107175 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107193:107193 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107176:107179 compcert.common.AST <> Gfun constr
R107182:107189 compcert.cfrontend.Ctypes <> Internal constr
R107237:107245 Coq.Lists.List <> filter_In thm
R107237:107245 Coq.Lists.List <> filter_In thm
R107237:107245 Coq.Lists.List <> filter_In thm
R107277:107285 VST.veric.initial_world <> find_id_e thm
R107277:107285 VST.veric.initial_world <> find_id_e thm
R107312:107325 VST.floyd.VSU <> Gfun_of_Fundef thm
R107312:107325 VST.floyd.VSU <> Gfun_of_Fundef thm
R107367:107370 VST.floyd.VSU <> ComponentJoin.LNRp var
R107367:107370 VST.floyd.VSU <> ComponentJoin.LNRp var
R107385:107398 VST.floyd.VSU <> Gfun_of_Fundef thm
R107385:107398 VST.floyd.VSU <> Gfun_of_Fundef thm
R107440:107443 VST.floyd.VSU <> ComponentJoin.LNRp var
R107440:107443 VST.floyd.VSU <> ComponentJoin.LNRp var
R107463:107464 VST.floyd.VSU <> ComponentJoin.FP var
R107463:107464 VST.floyd.VSU <> ComponentJoin.FP var
R107480:107494 compcert.lib.Coqlib <> list_in_map_inv thm
R107480:107494 compcert.lib.Coqlib <> list_in_map_inv thm
R107564:107572 Coq.Lists.List <> filter_In thm
R107564:107572 Coq.Lists.List <> filter_In thm
R107631:107651 VST.floyd.VSU <> Comp_Imports_external proj
R107653:107654 VST.floyd.VSU <> ComponentJoin.c2 var
R107631:107651 VST.floyd.VSU <> Comp_Imports_external proj
R107653:107654 VST.floyd.VSU <> ComponentJoin.c2 var
R107699:107704 VST.floyd.fieldlist <> in_map def
R107706:107708 Coq.Init.Datatypes <> fst def
R107699:107704 VST.floyd.fieldlist <> in_map def
R107706:107708 Coq.Init.Datatypes <> fst def
R107745:107758 VST.floyd.VSU <> Fundef_of_Gfun thm
R107745:107758 VST.floyd.VSU <> Fundef_of_Gfun thm
R107812:107818 VST.veric.initial_world <> find_id def
R107823:107832 VST.veric.Clight_initial_world <> prog_funct syndef
R107834:107835 VST.floyd.VSU <> ComponentJoin.p1 var
R107812:107818 VST.veric.initial_world <> find_id def
R107823:107832 VST.veric.Clight_initial_world <> prog_funct syndef
R107834:107835 VST.floyd.VSU <> ComponentJoin.p1 var
R107887:107900 VST.floyd.VSU <> Gfun_of_Fundef thm
R107887:107900 VST.floyd.VSU <> Gfun_of_Fundef thm
R107920:107921 VST.floyd.VSU <> ComponentJoin.c1 var
R107920:107921 VST.floyd.VSU <> ComponentJoin.c1 var
R107961:107966 Coq.Lists.List <> in_dec thm
R107990:107993 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R107980:107982 Coq.Lists.List <> map def
R107988:107989 VST.floyd.VSU <> ComponentJoin.E1 var
R107984:107986 Coq.Init.Datatypes <> fst def
R108003:108006 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R107994:107999 VST.floyd.VSU <> IntIDs def
R108001:108002 VST.floyd.VSU <> ComponentJoin.p1 var
R108007:108009 Coq.Lists.List <> map def
R108015:108022 VST.floyd.VSU <> ComponentJoin.Imports1 var
R108011:108013 Coq.Init.Datatypes <> fst def
R107968:107975 compcert.common.AST <> ident_eq def
R107961:107966 Coq.Lists.List <> in_dec thm
R107990:107993 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R107980:107982 Coq.Lists.List <> map def
R107988:107989 VST.floyd.VSU <> ComponentJoin.E1 var
R107984:107986 Coq.Init.Datatypes <> fst def
R108003:108006 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R107994:107999 VST.floyd.VSU <> IntIDs def
R108001:108002 VST.floyd.VSU <> ComponentJoin.p1 var
R108007:108009 Coq.Lists.List <> map def
R108015:108022 VST.floyd.VSU <> ComponentJoin.Imports1 var
R108011:108013 Coq.Init.Datatypes <> fst def
R107968:107975 compcert.common.AST <> ident_eq def
R108059:108067 Coq.Lists.List <> in_or_app thm
R108059:108067 Coq.Lists.List <> in_or_app thm
R108083:108091 Coq.Lists.List <> in_or_app thm
R108083:108091 Coq.Lists.List <> in_or_app thm
R108106:108115 Coq.Lists.List <> in_map_iff thm
R108106:108115 Coq.Lists.List <> in_map_iff thm
R108134:108134 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108136:108137 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108155:108155 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108138:108141 compcert.common.AST <> Gfun constr
R108144:108151 compcert.cfrontend.Ctypes <> Internal constr
R108134:108134 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108136:108137 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108155:108155 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108138:108141 compcert.common.AST <> Gfun constr
R108144:108151 compcert.cfrontend.Ctypes <> Internal constr
R108199:108207 Coq.Lists.List <> filter_In thm
R108199:108207 Coq.Lists.List <> filter_In thm
R108199:108207 Coq.Lists.List <> filter_In thm
R108239:108247 VST.veric.initial_world <> find_id_e thm
R108239:108247 VST.veric.initial_world <> find_id_e thm
R108274:108287 VST.floyd.VSU <> Gfun_of_Fundef thm
R108274:108287 VST.floyd.VSU <> Gfun_of_Fundef thm
R108329:108332 VST.floyd.VSU <> ComponentJoin.LNRp var
R108329:108332 VST.floyd.VSU <> ComponentJoin.LNRp var
R108347:108360 VST.floyd.VSU <> Gfun_of_Fundef thm
R108347:108360 VST.floyd.VSU <> Gfun_of_Fundef thm
R108402:108405 VST.floyd.VSU <> ComponentJoin.LNRp var
R108402:108405 VST.floyd.VSU <> ComponentJoin.LNRp var
R108442:108446 compcert.common.AST <> ident def
binder 108438:108438 <> i:926
R108465:108476 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R108477:108483 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R108494:108495 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 108484:108485 <> ef:927
binder 108487:108488 <> ts:928
binder 108490:108490 <> t:929
binder 108492:108493 <> cc:930
R108519:108521 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108496:108502 VST.veric.initial_world <> find_id def
R108507:108515 compcert.cfrontend.Ctypes <> prog_defs proj
R108517:108517 VST.floyd.VSU <> ComponentJoin.p var
R108504:108504 VST.floyd.VSU <> i:926 var
R108522:108525 Coq.Init.Datatypes <> Some constr
R108528:108531 compcert.common.AST <> Gfun constr
R108534:108541 compcert.cfrontend.Ctypes <> External constr
R108551:108552 VST.floyd.VSU <> cc:930 var
R108549:108549 VST.floyd.VSU <> t:929 var
R108546:108547 VST.floyd.VSU <> ts:928 var
R108543:108544 VST.floyd.VSU <> ef:927 var
R108449:108450 Coq.Lists.List <> In def
R108455:108457 Coq.Lists.List <> map def
R108463:108463 VST.floyd.VSU <> ComponentJoin.E var
R108459:108461 Coq.Init.Datatypes <> fst def
R108452:108452 VST.floyd.VSU <> i:926 var
R108442:108446 compcert.common.AST <> ident def
binder 108438:108438 <> i:931
R108465:108476 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R108477:108483 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R108494:108495 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 108484:108485 <> ef:932
binder 108487:108488 <> ts:933
binder 108490:108490 <> t:934
binder 108492:108493 <> cc:935
R108519:108521 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108496:108502 VST.veric.initial_world <> find_id def
R108507:108515 compcert.cfrontend.Ctypes <> prog_defs proj
R108517:108517 VST.floyd.VSU <> ComponentJoin.p var
R108504:108504 VST.floyd.VSU <> i:931 var
R108522:108525 Coq.Init.Datatypes <> Some constr
R108528:108531 compcert.common.AST <> Gfun constr
R108534:108541 compcert.cfrontend.Ctypes <> External constr
R108551:108552 VST.floyd.VSU <> cc:935 var
R108549:108549 VST.floyd.VSU <> t:934 var
R108546:108547 VST.floyd.VSU <> ts:933 var
R108543:108544 VST.floyd.VSU <> ef:932 var
R108449:108450 Coq.Lists.List <> In def
R108455:108457 Coq.Lists.List <> map def
R108463:108463 VST.floyd.VSU <> ComponentJoin.E var
R108459:108461 Coq.Init.Datatypes <> fst def
R108452:108452 VST.floyd.VSU <> i:931 var
R108589:108590 VST.floyd.VSU <> ComponentJoin.FP var
R108589:108590 VST.floyd.VSU <> ComponentJoin.FP var
R108613:108625 VST.floyd.VSU <> G_merge_InDom thm
R108613:108625 VST.floyd.VSU <> G_merge_InDom thm
R108677:108688 VST.floyd.VSU <> Comp_Externs proj
R108690:108691 VST.floyd.VSU <> ComponentJoin.c1 var
R108677:108688 VST.floyd.VSU <> Comp_Externs proj
R108690:108691 VST.floyd.VSU <> ComponentJoin.c1 var
R108806:108819 VST.floyd.VSU <> Fundef_of_Gfun thm
R108806:108819 VST.floyd.VSU <> Fundef_of_Gfun thm
R108873:108879 VST.veric.initial_world <> find_id def
R108884:108893 VST.veric.Clight_initial_world <> prog_funct syndef
R108895:108896 VST.floyd.VSU <> ComponentJoin.p2 var
R108873:108879 VST.veric.initial_world <> find_id def
R108884:108893 VST.veric.Clight_initial_world <> prog_funct syndef
R108895:108896 VST.floyd.VSU <> ComponentJoin.p2 var
R108969:108982 VST.floyd.VSU <> Gfun_of_Fundef thm
R108969:108982 VST.floyd.VSU <> Gfun_of_Fundef thm
R109002:109003 VST.floyd.VSU <> ComponentJoin.c2 var
R109002:109003 VST.floyd.VSU <> ComponentJoin.c2 var
R109021:109028 VST.floyd.VSU <> IntIDs_i thm
R109021:109028 VST.floyd.VSU <> IntIDs_i thm
R109054:109065 VST.floyd.VSU <> ComponentJoin.Externs1_Hyp var
R109054:109065 VST.floyd.VSU <> ComponentJoin.Externs1_Hyp var
R109097:109110 VST.floyd.VSU <> Gfun_of_Fundef thm
R109097:109110 VST.floyd.VSU <> Gfun_of_Fundef thm
R109141:109154 VST.floyd.VSU <> Gfun_of_Fundef thm
R109141:109154 VST.floyd.VSU <> Gfun_of_Fundef thm
R109187:109198 VST.floyd.VSU <> Comp_Externs proj
R109200:109201 VST.floyd.VSU <> ComponentJoin.c2 var
R109187:109198 VST.floyd.VSU <> Comp_Externs proj
R109200:109201 VST.floyd.VSU <> ComponentJoin.c2 var
R109351:109362 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R109351:109362 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R109378:109391 VST.floyd.VSU <> Fundef_of_Gfun thm
R109378:109391 VST.floyd.VSU <> Fundef_of_Gfun thm
R109434:109440 VST.veric.initial_world <> find_id def
R109445:109454 VST.veric.Clight_initial_world <> prog_funct syndef
R109456:109457 VST.floyd.VSU <> ComponentJoin.p1 var
R109434:109440 VST.veric.initial_world <> find_id def
R109445:109454 VST.veric.Clight_initial_world <> prog_funct syndef
R109456:109457 VST.floyd.VSU <> ComponentJoin.p1 var
R109530:109543 VST.floyd.VSU <> Gfun_of_Fundef thm
R109530:109543 VST.floyd.VSU <> Gfun_of_Fundef thm
R109563:109564 VST.floyd.VSU <> ComponentJoin.c1 var
R109563:109564 VST.floyd.VSU <> ComponentJoin.c1 var
R109612:109619 VST.floyd.VSU <> IntIDs_i thm
R109612:109619 VST.floyd.VSU <> IntIDs_i thm
R109645:109656 VST.floyd.VSU <> ComponentJoin.Externs2_Hyp var
R109645:109656 VST.floyd.VSU <> ComponentJoin.Externs2_Hyp var
R109694:109705 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R109724:109730 Coq.Init.Logic <> eq_refl constr
R109712:109718 Coq.Init.Logic <> eq_refl constr
R109694:109705 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R109724:109730 Coq.Init.Logic <> eq_refl constr
R109712:109718 Coq.Init.Logic <> eq_refl constr
R109741:109752 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R109770:109783 VST.floyd.VSU <> Gfun_of_Fundef thm
R109770:109783 VST.floyd.VSU <> Gfun_of_Fundef thm
R109814:109827 VST.floyd.VSU <> Gfun_of_Fundef thm
R109814:109827 VST.floyd.VSU <> Gfun_of_Fundef thm
R109856:109871 VST.floyd.VSU <> Comp_Externs_LNR thm
R109873:109874 VST.floyd.VSU <> ComponentJoin.c1 var
R109856:109871 VST.floyd.VSU <> Comp_Externs_LNR thm
R109873:109874 VST.floyd.VSU <> ComponentJoin.c1 var
R109912:109916 compcert.common.AST <> ident def
binder 109908:109908 <> i:936
R109930:109940 VST.veric.expr <> subsumespec def
R109979:109985 VST.veric.initial_world <> find_id def
R109997:110000 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R109990:109996 VST.floyd.VSU <> ComponentJoin.Imports var
R109987:109987 VST.floyd.VSU <> i:936 var
R109943:109949 VST.veric.initial_world <> find_id def
R109962:109965 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R109954:109961 VST.floyd.VSU <> ComponentJoin.Imports1 var
R109966:109971 VST.floyd.VSU <> Comp_G def
R109973:109974 VST.floyd.VSU <> ComponentJoin.c1 var
R109951:109951 VST.floyd.VSU <> i:936 var
R109912:109916 compcert.common.AST <> ident def
binder 109908:109908 <> i:937
R109930:109940 VST.veric.expr <> subsumespec def
R109979:109985 VST.veric.initial_world <> find_id def
R109997:110000 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R109990:109996 VST.floyd.VSU <> ComponentJoin.Imports var
R109987:109987 VST.floyd.VSU <> i:937 var
R109943:109949 VST.veric.initial_world <> find_id def
R109962:109965 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R109954:109961 VST.floyd.VSU <> ComponentJoin.Imports1 var
R109966:109971 VST.floyd.VSU <> Comp_G def
R109973:109974 VST.floyd.VSU <> ComponentJoin.c1 var
R109951:109951 VST.floyd.VSU <> i:937 var
R110049:110073 VST.floyd.VSU <> Calling_conventions_match thm
R110049:110073 VST.floyd.VSU <> Calling_conventions_match thm
R110096:110097 VST.floyd.VSU <> HC def
R110096:110097 VST.floyd.VSU <> HC def
R110235:110254 VST.floyd.VSU <> subsumespec_app_left thm
R110235:110254 VST.floyd.VSU <> subsumespec_app_left thm
R110288:110303 VST.floyd.assoclists <> find_id_app_char thm
R110288:110303 VST.floyd.assoclists <> find_id_app_char thm
R110288:110303 VST.floyd.assoclists <> find_id_app_char thm
R110288:110303 VST.floyd.assoclists <> find_id_app_char thm
R110288:110303 VST.floyd.assoclists <> find_id_app_char thm
R110330:110336 VST.veric.initial_world <> find_id def
R110340:110347 VST.floyd.VSU <> ComponentJoin.Imports1 var
R110330:110336 VST.veric.initial_world <> find_id def
R110340:110347 VST.floyd.VSU <> ComponentJoin.Imports1 var
R110562:110591 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R110594:110621 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R110623:110624 VST.floyd.VSU <> ComponentJoin.c1 var
R110562:110591 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R110594:110621 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R110623:110624 VST.floyd.VSU <> ComponentJoin.c1 var
R110668:110681 VST.floyd.VSU <> G_merge_None_l thm
R110668:110681 VST.floyd.VSU <> G_merge_None_l thm
R110668:110681 VST.floyd.VSU <> G_merge_None_l thm
R110668:110681 VST.floyd.VSU <> G_merge_None_l thm
R110668:110681 VST.floyd.VSU <> G_merge_None_l thm
R110702:110703 VST.floyd.VSU <> ComponentJoin.c2 var
R110702:110703 VST.floyd.VSU <> ComponentJoin.c2 var
R110764:110779 VST.floyd.VSU <> Comp_Imports_LNR thm
R110781:110782 VST.floyd.VSU <> ComponentJoin.c1 var
R110727:110745 VST.floyd.assoclists <> find_id_filter_char thm
R110727:110745 VST.floyd.assoclists <> find_id_filter_char thm
R110764:110779 VST.floyd.VSU <> Comp_Imports_LNR thm
R110781:110782 VST.floyd.VSU <> ComponentJoin.c1 var
R110727:110745 VST.floyd.assoclists <> find_id_filter_char thm
R110816:110821 Coq.Lists.List <> in_dec thm
R110845:110848 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R110835:110837 Coq.Lists.List <> map def
R110843:110844 VST.floyd.VSU <> ComponentJoin.E2 var
R110839:110841 Coq.Init.Datatypes <> fst def
R110849:110854 VST.floyd.VSU <> IntIDs def
R110856:110857 VST.floyd.VSU <> ComponentJoin.p2 var
R110823:110830 compcert.common.AST <> ident_eq def
R110816:110821 Coq.Lists.List <> in_dec thm
R110845:110848 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R110835:110837 Coq.Lists.List <> map def
R110843:110844 VST.floyd.VSU <> ComponentJoin.E2 var
R110839:110841 Coq.Init.Datatypes <> fst def
R110849:110854 VST.floyd.VSU <> IntIDs def
R110856:110857 VST.floyd.VSU <> ComponentJoin.p2 var
R110823:110830 compcert.common.AST <> ident_eq def
R110927:110945 VST.veric.seplog <> funspec_sub_si_refl thm
R110927:110945 VST.veric.seplog <> funspec_sub_si_refl thm
R111009:111024 VST.floyd.VSU <> Comp_Imports_LNR thm
R111026:111027 VST.floyd.VSU <> ComponentJoin.c2 var
R110979:110997 VST.floyd.assoclists <> find_id_filter_char thm
R110979:110997 VST.floyd.assoclists <> find_id_filter_char thm
R111009:111024 VST.floyd.VSU <> Comp_Imports_LNR thm
R111026:111027 VST.floyd.VSU <> ComponentJoin.c2 var
R110979:110997 VST.floyd.assoclists <> find_id_filter_char thm
R111061:111066 Coq.Lists.List <> in_dec thm
R111090:111093 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R111080:111082 Coq.Lists.List <> map def
R111088:111089 VST.floyd.VSU <> ComponentJoin.E1 var
R111084:111086 Coq.Init.Datatypes <> fst def
R111103:111106 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R111094:111099 VST.floyd.VSU <> IntIDs def
R111101:111102 VST.floyd.VSU <> ComponentJoin.p1 var
R111107:111109 Coq.Lists.List <> map def
R111115:111122 VST.floyd.VSU <> ComponentJoin.Imports1 var
R111111:111113 Coq.Init.Datatypes <> fst def
R111068:111075 compcert.common.AST <> ident_eq def
R111061:111066 Coq.Lists.List <> in_dec thm
R111090:111093 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R111080:111082 Coq.Lists.List <> map def
R111088:111089 VST.floyd.VSU <> ComponentJoin.E1 var
R111084:111086 Coq.Init.Datatypes <> fst def
R111103:111106 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R111094:111099 VST.floyd.VSU <> IntIDs def
R111101:111102 VST.floyd.VSU <> ComponentJoin.p1 var
R111107:111109 Coq.Lists.List <> map def
R111115:111122 VST.floyd.VSU <> ComponentJoin.Imports1 var
R111111:111113 Coq.Init.Datatypes <> fst def
R111068:111075 compcert.common.AST <> ident_eq def
R111155:111170 VST.floyd.assoclists <> find_id_None_iff thm
R111155:111170 VST.floyd.assoclists <> find_id_None_iff thm
R111203:111209 VST.veric.initial_world <> find_id def
R111214:111219 VST.floyd.VSU <> Comp_G def
R111221:111222 VST.floyd.VSU <> ComponentJoin.c2 var
R111203:111209 VST.veric.initial_world <> find_id def
R111214:111219 VST.floyd.VSU <> Comp_G def
R111221:111222 VST.floyd.VSU <> ComponentJoin.c2 var
R111324:111330 VST.veric.initial_world <> find_id def
R111334:111341 VST.floyd.VSU <> ComponentJoin.Imports2 var
R111324:111330 VST.veric.initial_world <> find_id def
R111334:111341 VST.floyd.VSU <> ComponentJoin.Imports2 var
R111381:111383 VST.floyd.VSU <> ComponentJoin.SC2 var
R111381:111383 VST.floyd.VSU <> ComponentJoin.SC2 var
R111447:111464 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R111447:111464 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R111474:111490 VST.veric.seplog <> funspec_sub_trans thm
R111474:111490 VST.veric.seplog <> funspec_sub_trans thm
R111539:111552 VST.floyd.VSU <> Comp_G_Exports proj
R111554:111555 VST.floyd.VSU <> ComponentJoin.c2 var
R111539:111552 VST.floyd.VSU <> Comp_G_Exports proj
R111554:111555 VST.floyd.VSU <> ComponentJoin.c2 var
R111617:111622 VST.floyd.VSU <> Comp_G def
R111705:111707 VST.floyd.VSU <> ComponentJoin.SC2 var
R111705:111707 VST.floyd.VSU <> ComponentJoin.SC2 var
R111772:111785 VST.floyd.VSU <> Comp_G_Exports proj
R111787:111788 VST.floyd.VSU <> ComponentJoin.c2 var
R111772:111785 VST.floyd.VSU <> Comp_G_Exports proj
R111787:111788 VST.floyd.VSU <> ComponentJoin.c2 var
R111867:111872 VST.floyd.VSU <> Comp_G def
R111921:111923 VST.floyd.VSU <> ComponentJoin.SC2 var
R111921:111923 VST.floyd.VSU <> ComponentJoin.SC2 var
R111986:111999 VST.floyd.VSU <> Comp_G_Exports proj
R112001:112002 VST.floyd.VSU <> ComponentJoin.c2 var
R112043:112048 VST.floyd.VSU <> Comp_G def
R111986:111999 VST.floyd.VSU <> Comp_G_Exports proj
R112001:112002 VST.floyd.VSU <> ComponentJoin.c2 var
R112093:112120 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R112122:112123 VST.floyd.VSU <> ComponentJoin.c2 var
R112093:112120 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R112122:112123 VST.floyd.VSU <> ComponentJoin.c2 var
R112159:112188 VST.floyd.assoclists <> list_disjoint_map_fst_find_id2 thm
R112191:112218 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R112220:112221 VST.floyd.VSU <> ComponentJoin.c2 var
R112159:112188 VST.floyd.assoclists <> list_disjoint_map_fst_find_id2 thm
R112191:112218 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R112220:112221 VST.floyd.VSU <> ComponentJoin.c2 var
R112159:112188 VST.floyd.assoclists <> list_disjoint_map_fst_find_id2 thm
R112191:112218 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R112220:112221 VST.floyd.VSU <> ComponentJoin.c2 var
R112287:112304 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R112287:112304 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R112314:112330 VST.veric.seplog <> funspec_sub_trans thm
R112314:112330 VST.veric.seplog <> funspec_sub_trans thm
R112377:112383 VST.veric.initial_world <> find_id def
R112388:112393 VST.floyd.VSU <> Comp_G def
R112395:112396 VST.floyd.VSU <> ComponentJoin.c1 var
R112377:112383 VST.veric.initial_world <> find_id def
R112388:112393 VST.floyd.VSU <> Comp_G def
R112395:112396 VST.floyd.VSU <> ComponentJoin.c1 var
R112489:112504 VST.floyd.assoclists <> find_id_app_char thm
R112507:112527 VST.floyd.assoclists <> find_id_filter_None_I thm
R112551:112566 VST.floyd.VSU <> Comp_Imports_LNR thm
R112568:112569 VST.floyd.VSU <> ComponentJoin.c1 var
R112489:112504 VST.floyd.assoclists <> find_id_app_char thm
R112489:112504 VST.floyd.assoclists <> find_id_app_char thm
R112489:112504 VST.floyd.assoclists <> find_id_app_char thm
R112489:112504 VST.floyd.assoclists <> find_id_app_char thm
R112507:112527 VST.floyd.assoclists <> find_id_filter_None_I thm
R112507:112527 VST.floyd.assoclists <> find_id_filter_None_I thm
R112507:112527 VST.floyd.assoclists <> find_id_filter_None_I thm
R112507:112527 VST.floyd.assoclists <> find_id_filter_None_I thm
R112551:112566 VST.floyd.VSU <> Comp_Imports_LNR thm
R112568:112569 VST.floyd.VSU <> ComponentJoin.c1 var
R112628:112643 VST.floyd.VSU <> Comp_Imports_LNR thm
R112645:112646 VST.floyd.VSU <> ComponentJoin.c2 var
R112598:112616 VST.floyd.assoclists <> find_id_filter_char thm
R112598:112616 VST.floyd.assoclists <> find_id_filter_char thm
R112628:112643 VST.floyd.VSU <> Comp_Imports_LNR thm
R112645:112646 VST.floyd.VSU <> ComponentJoin.c2 var
R112598:112616 VST.floyd.assoclists <> find_id_filter_char thm
R112781:112787 VST.veric.initial_world <> find_id def
R112791:112798 VST.floyd.VSU <> ComponentJoin.Imports2 var
R112781:112787 VST.veric.initial_world <> find_id def
R112791:112798 VST.floyd.VSU <> ComponentJoin.Imports2 var
R112886:112891 Coq.Lists.List <> in_dec thm
R112915:112918 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R112905:112907 Coq.Lists.List <> map def
R112913:112914 VST.floyd.VSU <> ComponentJoin.E1 var
R112909:112911 Coq.Init.Datatypes <> fst def
R112928:112931 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R112919:112924 VST.floyd.VSU <> IntIDs def
R112926:112927 VST.floyd.VSU <> ComponentJoin.p1 var
R112932:112934 Coq.Lists.List <> map def
R112940:112947 VST.floyd.VSU <> ComponentJoin.Imports1 var
R112936:112938 Coq.Init.Datatypes <> fst def
R112893:112900 compcert.common.AST <> ident_eq def
R112886:112891 Coq.Lists.List <> in_dec thm
R112915:112918 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R112905:112907 Coq.Lists.List <> map def
R112913:112914 VST.floyd.VSU <> ComponentJoin.E1 var
R112909:112911 Coq.Init.Datatypes <> fst def
R112928:112931 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R112919:112924 VST.floyd.VSU <> IntIDs def
R112926:112927 VST.floyd.VSU <> ComponentJoin.p1 var
R112932:112934 Coq.Lists.List <> map def
R112940:112947 VST.floyd.VSU <> ComponentJoin.Imports1 var
R112936:112938 Coq.Init.Datatypes <> fst def
R112893:112900 compcert.common.AST <> ident_eq def
R112987:113010 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R113018:113047 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R113050:113077 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R113079:113080 VST.floyd.VSU <> ComponentJoin.c2 var
R112987:113010 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R113018:113047 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R113050:113077 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R113079:113080 VST.floyd.VSU <> ComponentJoin.c2 var
R112987:113010 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R113018:113047 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R113050:113077 VST.floyd.VSU <> Comp_G_disjoint_from_Imports thm
R113079:113080 VST.floyd.VSU <> ComponentJoin.c2 var
R113150:113168 VST.veric.seplog <> funspec_sub_si_refl thm
R113150:113168 VST.veric.seplog <> funspec_sub_si_refl thm
R113205:113222 VST.veric.initial_world <> find_id_In_map_fst thm
R113205:113222 VST.veric.initial_world <> find_id_In_map_fst thm
R113240:113249 VST.floyd.VSU <> Comp_G_dom proj
R113251:113252 VST.floyd.VSU <> ComponentJoin.c1 var
R113240:113249 VST.floyd.VSU <> Comp_G_dom proj
R113251:113252 VST.floyd.VSU <> ComponentJoin.c1 var
R113313:113321 Coq.Lists.List <> app_assoc thm
R113313:113321 Coq.Lists.List <> app_assoc thm
R113313:113321 Coq.Lists.List <> app_assoc thm
R113330:113338 Coq.Lists.List <> in_or_app thm
R113330:113338 Coq.Lists.List <> in_or_app thm
R113353:113361 Coq.Lists.List <> in_app_or thm
R113378:113386 Coq.Lists.List <> in_or_app thm
R113353:113361 Coq.Lists.List <> in_app_or thm
R113378:113386 Coq.Lists.List <> in_or_app thm
R113437:113443 VST.veric.initial_world <> find_id def
R113448:113453 VST.floyd.VSU <> Comp_G def
R113455:113456 VST.floyd.VSU <> ComponentJoin.c2 var
R113437:113443 VST.veric.initial_world <> find_id def
R113448:113453 VST.floyd.VSU <> Comp_G def
R113455:113456 VST.floyd.VSU <> ComponentJoin.c2 var
R113556:113579 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R113556:113579 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R113751:113772 VST.veric.seplog <> binaryintersection_sub thm
R113751:113772 VST.veric.seplog <> binaryintersection_sub thm
R113787:113804 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R113787:113804 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R113864:113877 VST.floyd.VSU <> G_merge_None_r thm
R113864:113877 VST.floyd.VSU <> G_merge_None_r thm
R113864:113877 VST.floyd.VSU <> G_merge_None_r thm
R113864:113877 VST.floyd.VSU <> G_merge_None_r thm
R113864:113877 VST.floyd.VSU <> G_merge_None_r thm
R113930:113948 VST.veric.seplog <> funspec_sub_si_refl thm
R113930:113948 VST.veric.seplog <> funspec_sub_si_refl thm
R113986:113995 VST.floyd.VSU <> Comp_G_LNR proj
R113997:113998 VST.floyd.VSU <> ComponentJoin.c2 var
R113986:113995 VST.floyd.VSU <> Comp_G_LNR proj
R113997:113998 VST.floyd.VSU <> ComponentJoin.c2 var
R114038:114042 compcert.common.AST <> ident def
binder 114034:114034 <> i:938
R114056:114066 VST.veric.expr <> subsumespec def
R114118:114124 VST.veric.initial_world <> find_id def
R114136:114139 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R114129:114135 VST.floyd.VSU <> ComponentJoin.Imports var
R114126:114126 VST.floyd.VSU <> i:938 var
R114069:114075 VST.veric.initial_world <> find_id def
R114088:114091 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R114080:114087 VST.floyd.VSU <> ComponentJoin.Imports2 var
R114092:114097 VST.floyd.VSU <> Comp_G def
R114099:114100 VST.floyd.VSU <> ComponentJoin.c2 var
R114077:114077 VST.floyd.VSU <> i:938 var
R114038:114042 compcert.common.AST <> ident def
binder 114034:114034 <> i:939
R114056:114066 VST.veric.expr <> subsumespec def
R114118:114124 VST.veric.initial_world <> find_id def
R114136:114139 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R114129:114135 VST.floyd.VSU <> ComponentJoin.Imports var
R114126:114126 VST.floyd.VSU <> i:939 var
R114069:114075 VST.veric.initial_world <> find_id def
R114088:114091 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R114080:114087 VST.floyd.VSU <> ComponentJoin.Imports2 var
R114092:114097 VST.floyd.VSU <> Comp_G def
R114099:114100 VST.floyd.VSU <> ComponentJoin.c2 var
R114077:114077 VST.floyd.VSU <> i:939 var
R114176:114200 VST.floyd.VSU <> Calling_conventions_match thm
R114176:114200 VST.floyd.VSU <> Calling_conventions_match thm
R114244:114245 VST.floyd.VSU <> HC def
R114244:114245 VST.floyd.VSU <> HC def
R114267:114273 VST.veric.initial_world <> find_id def
R114286:114289 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R114278:114285 VST.floyd.VSU <> ComponentJoin.Imports2 var
R114290:114295 VST.floyd.VSU <> Comp_G def
R114297:114298 VST.floyd.VSU <> ComponentJoin.c2 var
R114267:114273 VST.veric.initial_world <> find_id def
R114286:114289 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R114278:114285 VST.floyd.VSU <> ComponentJoin.Imports2 var
R114290:114295 VST.floyd.VSU <> Comp_G def
R114297:114298 VST.floyd.VSU <> ComponentJoin.c2 var
R114384:114399 VST.floyd.assoclists <> find_id_app_char thm
R114384:114399 VST.floyd.assoclists <> find_id_app_char thm
R114384:114399 VST.floyd.assoclists <> find_id_app_char thm
R114424:114433 VST.floyd.VSU <> ComponentJoin.ImportsDef var
R114424:114433 VST.floyd.VSU <> ComponentJoin.ImportsDef var
R114424:114433 VST.floyd.VSU <> ComponentJoin.ImportsDef var
R114465:114473 Coq.Lists.List <> app_assoc thm
R114478:114493 VST.floyd.assoclists <> find_id_app_char thm
R114498:114516 VST.floyd.assoclists <> find_id_filter_char thm
R114530:114545 VST.floyd.VSU <> Comp_Imports_LNR thm
R114547:114548 VST.floyd.VSU <> ComponentJoin.c2 var
R114564:114579 VST.floyd.VSU <> Comp_Imports_LNR thm
R114581:114582 VST.floyd.VSU <> ComponentJoin.c1 var
R114465:114473 Coq.Lists.List <> app_assoc thm
R114465:114473 Coq.Lists.List <> app_assoc thm
R114478:114493 VST.floyd.assoclists <> find_id_app_char thm
R114478:114493 VST.floyd.assoclists <> find_id_app_char thm
R114478:114493 VST.floyd.assoclists <> find_id_app_char thm
R114478:114493 VST.floyd.assoclists <> find_id_app_char thm
R114498:114516 VST.floyd.assoclists <> find_id_filter_char thm
R114498:114516 VST.floyd.assoclists <> find_id_filter_char thm
R114498:114516 VST.floyd.assoclists <> find_id_filter_char thm
R114498:114516 VST.floyd.assoclists <> find_id_filter_char thm
R114498:114516 VST.floyd.assoclists <> find_id_filter_char thm
R114498:114516 VST.floyd.assoclists <> find_id_filter_char thm
R114530:114545 VST.floyd.VSU <> Comp_Imports_LNR thm
R114547:114548 VST.floyd.VSU <> ComponentJoin.c2 var
R114530:114545 VST.floyd.VSU <> Comp_Imports_LNR thm
R114547:114548 VST.floyd.VSU <> ComponentJoin.c2 var
R114530:114545 VST.floyd.VSU <> Comp_Imports_LNR thm
R114547:114548 VST.floyd.VSU <> ComponentJoin.c2 var
R114564:114579 VST.floyd.VSU <> Comp_Imports_LNR thm
R114581:114582 VST.floyd.VSU <> ComponentJoin.c1 var
R114564:114579 VST.floyd.VSU <> Comp_Imports_LNR thm
R114581:114582 VST.floyd.VSU <> ComponentJoin.c1 var
R114609:114615 VST.veric.initial_world <> find_id def
R114619:114626 VST.floyd.VSU <> ComponentJoin.Imports2 var
R114609:114615 VST.veric.initial_world <> find_id def
R114619:114626 VST.floyd.VSU <> ComponentJoin.Imports2 var
R114875:114904 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R114875:114904 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R114949:114962 VST.floyd.VSU <> G_merge_None_r thm
R114949:114962 VST.floyd.VSU <> G_merge_None_r thm
R114949:114962 VST.floyd.VSU <> G_merge_None_r thm
R114949:114962 VST.floyd.VSU <> G_merge_None_r thm
R114949:114962 VST.floyd.VSU <> G_merge_None_r thm
R114984:114993 VST.floyd.VSU <> Comp_G_LNR proj
R114995:114996 VST.floyd.VSU <> ComponentJoin.c2 var
R114984:114993 VST.floyd.VSU <> Comp_G_LNR proj
R114995:114996 VST.floyd.VSU <> ComponentJoin.c2 var
R115018:115023 Coq.Lists.List <> in_dec thm
R115047:115050 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R115037:115039 Coq.Lists.List <> map def
R115045:115046 VST.floyd.VSU <> ComponentJoin.E2 var
R115041:115043 Coq.Init.Datatypes <> fst def
R115051:115056 VST.floyd.VSU <> IntIDs def
R115058:115059 VST.floyd.VSU <> ComponentJoin.p2 var
R115025:115032 compcert.common.AST <> ident_eq def
R115018:115023 Coq.Lists.List <> in_dec thm
R115047:115050 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R115037:115039 Coq.Lists.List <> map def
R115045:115046 VST.floyd.VSU <> ComponentJoin.E2 var
R115041:115043 Coq.Init.Datatypes <> fst def
R115051:115056 VST.floyd.VSU <> IntIDs def
R115058:115059 VST.floyd.VSU <> ComponentJoin.p2 var
R115025:115032 compcert.common.AST <> ident_eq def
R115087:115102 VST.floyd.assoclists <> find_id_None_iff thm
R115087:115102 VST.floyd.assoclists <> find_id_None_iff thm
R115135:115144 VST.floyd.VSU <> Comp_G_dom proj
R115146:115147 VST.floyd.VSU <> ComponentJoin.c2 var
R115135:115144 VST.floyd.VSU <> Comp_G_dom proj
R115146:115147 VST.floyd.VSU <> ComponentJoin.c2 var
R115159:115167 Coq.Lists.List <> in_or_app thm
R115159:115167 Coq.Lists.List <> in_or_app thm
R115176:115184 Coq.Lists.List <> in_app_or thm
R115176:115184 Coq.Lists.List <> in_app_or thm
R115232:115238 VST.veric.initial_world <> find_id def
R115242:115249 VST.floyd.VSU <> ComponentJoin.Imports1 var
R115232:115238 VST.veric.initial_world <> find_id def
R115242:115249 VST.floyd.VSU <> ComponentJoin.Imports1 var
R115326:115333 VST.floyd.VSU <> ComponentJoin.HImports var
R115326:115333 VST.floyd.VSU <> ComponentJoin.HImports var
R115408:115426 VST.veric.seplog <> funspec_sub_si_refl thm
R115408:115426 VST.veric.seplog <> funspec_sub_si_refl thm
R115460:115465 Coq.Lists.List <> in_dec thm
R115489:115492 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R115479:115481 Coq.Lists.List <> map def
R115487:115488 VST.floyd.VSU <> ComponentJoin.E1 var
R115483:115485 Coq.Init.Datatypes <> fst def
R115502:115505 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R115493:115498 VST.floyd.VSU <> IntIDs def
R115500:115501 VST.floyd.VSU <> ComponentJoin.p1 var
R115506:115508 Coq.Lists.List <> map def
R115514:115521 VST.floyd.VSU <> ComponentJoin.Imports1 var
R115510:115512 Coq.Init.Datatypes <> fst def
R115467:115474 compcert.common.AST <> ident_eq def
R115460:115465 Coq.Lists.List <> in_dec thm
R115489:115492 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R115479:115481 Coq.Lists.List <> map def
R115487:115488 VST.floyd.VSU <> ComponentJoin.E1 var
R115483:115485 Coq.Init.Datatypes <> fst def
R115502:115505 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R115493:115498 VST.floyd.VSU <> IntIDs def
R115500:115501 VST.floyd.VSU <> ComponentJoin.p1 var
R115506:115508 Coq.Lists.List <> map def
R115514:115521 VST.floyd.VSU <> ComponentJoin.Imports1 var
R115510:115512 Coq.Init.Datatypes <> fst def
R115467:115474 compcert.common.AST <> ident_eq def
R115556:115564 Coq.Lists.List <> app_assoc thm
R115579:115587 Coq.Lists.List <> in_app_or thm
R115556:115564 Coq.Lists.List <> app_assoc thm
R115556:115564 Coq.Lists.List <> app_assoc thm
R115579:115587 Coq.Lists.List <> in_app_or thm
R115637:115639 VST.floyd.VSU <> ComponentJoin.SC1 var
R115637:115639 VST.floyd.VSU <> ComponentJoin.SC1 var
R115704:115717 VST.floyd.VSU <> Comp_G_Exports proj
R115719:115720 VST.floyd.VSU <> ComponentJoin.c1 var
R115704:115717 VST.floyd.VSU <> Comp_G_Exports proj
R115719:115720 VST.floyd.VSU <> ComponentJoin.c1 var
R115807:115824 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R115807:115824 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R115852:115868 VST.veric.seplog <> funspec_sub_trans thm
R115852:115868 VST.veric.seplog <> funspec_sub_trans thm
R115914:115929 VST.floyd.assoclists <> find_id_None_iff thm
R115914:115929 VST.floyd.assoclists <> find_id_None_iff thm
R116006:116024 VST.veric.seplog <> funspec_sub_si_refl thm
R116006:116024 VST.veric.seplog <> funspec_sub_si_refl thm
R116054:116059 Coq.Lists.List <> in_dec thm
R116083:116086 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R116073:116075 Coq.Lists.List <> map def
R116081:116082 VST.floyd.VSU <> ComponentJoin.E2 var
R116077:116079 Coq.Init.Datatypes <> fst def
R116087:116092 VST.floyd.VSU <> IntIDs def
R116094:116095 VST.floyd.VSU <> ComponentJoin.p2 var
R116061:116068 compcert.common.AST <> ident_eq def
R116054:116059 Coq.Lists.List <> in_dec thm
R116083:116086 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R116073:116075 Coq.Lists.List <> map def
R116081:116082 VST.floyd.VSU <> ComponentJoin.E2 var
R116077:116079 Coq.Init.Datatypes <> fst def
R116087:116092 VST.floyd.VSU <> IntIDs def
R116094:116095 VST.floyd.VSU <> ComponentJoin.p2 var
R116061:116068 compcert.common.AST <> ident_eq def
R116237:116243 VST.veric.initial_world <> find_id def
R116248:116253 VST.floyd.VSU <> Comp_G def
R116255:116256 VST.floyd.VSU <> ComponentJoin.c1 var
R116237:116243 VST.veric.initial_world <> find_id def
R116248:116253 VST.floyd.VSU <> Comp_G def
R116255:116256 VST.floyd.VSU <> ComponentJoin.c1 var
R116333:116356 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R116333:116356 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R116506:116512 VST.veric.initial_world <> find_id def
R116516:116523 VST.floyd.VSU <> ComponentJoin.Imports1 var
R116506:116512 VST.veric.initial_world <> find_id def
R116516:116523 VST.floyd.VSU <> ComponentJoin.Imports1 var
R116558:116575 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R116558:116575 VST.veric.SeparationLogic <> funspec_sub_sub_si thm
R116586:116607 VST.veric.seplog <> binaryintersection_sub thm
R116586:116607 VST.veric.seplog <> binaryintersection_sub thm
R116642:116665 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R116642:116665 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R116642:116665 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R116642:116665 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R116722:116728 VST.veric.initial_world <> find_id def
R116732:116739 VST.floyd.VSU <> ComponentJoin.Imports1 var
R116722:116728 VST.veric.initial_world <> find_id def
R116732:116739 VST.floyd.VSU <> ComponentJoin.Imports1 var
R116758:116776 VST.veric.seplog <> funspec_sub_si_refl thm
R116758:116776 VST.veric.seplog <> funspec_sub_si_refl thm
R116807:116816 VST.floyd.VSU <> Comp_G_LNR proj
R116818:116819 VST.floyd.VSU <> ComponentJoin.c2 var
R116807:116816 VST.floyd.VSU <> Comp_G_LNR proj
R116818:116819 VST.floyd.VSU <> ComponentJoin.c2 var
R116847:116864 VST.veric.initial_world <> find_id_In_map_fst thm
R116847:116864 VST.veric.initial_world <> find_id_In_map_fst thm
R116887:116896 VST.floyd.VSU <> Comp_G_dom proj
R116898:116899 VST.floyd.VSU <> ComponentJoin.c2 var
R116887:116896 VST.floyd.VSU <> Comp_G_dom proj
R116898:116899 VST.floyd.VSU <> ComponentJoin.c2 var
R116887:116896 VST.floyd.VSU <> Comp_G_dom proj
R116898:116899 VST.floyd.VSU <> ComponentJoin.c2 var
R116925:116933 Coq.Lists.List <> in_or_app thm
R116925:116933 Coq.Lists.List <> in_or_app thm
R116952:116960 Coq.Lists.List <> in_app_or thm
R116952:116960 Coq.Lists.List <> in_app_or thm
binder 117028:117028 <> i:940
R117031:117040 VST.veric.tycontext <> sub_option def
R117094:117094 compcert.lib.Maps <> :::x_'!'_x not
R117172:117175 compcert.lib.Maps <> :::x_'!'_x not
R117176:117176 VST.floyd.VSU <> i:940 var
R117095:117110 VST.veric.seplog <> make_tycontext_g def
R117136:117139 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R117129:117135 VST.floyd.VSU <> ComponentJoin.Imports var
R117140:117146 VST.floyd.VSU <> G_merge def
R117161:117166 VST.floyd.VSU <> Comp_G def
R117168:117169 VST.floyd.VSU <> ComponentJoin.c2 var
R117149:117154 VST.floyd.VSU <> Comp_G def
R117156:117157 VST.floyd.VSU <> ComponentJoin.c1 var
R117126:117126 VST.floyd.VSU <> ComponentJoin.V var
R117042:117042 compcert.lib.Maps <> :::x_'!'_x not
R117086:117089 compcert.lib.Maps <> :::x_'!'_x not
R117090:117090 VST.floyd.VSU <> i:940 var
R117043:117058 VST.veric.seplog <> make_tycontext_g def
R117072:117075 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R117064:117071 VST.floyd.VSU <> ComponentJoin.Imports1 var
R117076:117081 VST.floyd.VSU <> Comp_G def
R117083:117084 VST.floyd.VSU <> ComponentJoin.c1 var
R117060:117061 VST.floyd.VSU <> ComponentJoin.V1 var
binder 117028:117028 <> i:941
R117031:117040 VST.veric.tycontext <> sub_option def
R117094:117094 compcert.lib.Maps <> :::x_'!'_x not
R117172:117175 compcert.lib.Maps <> :::x_'!'_x not
R117176:117176 VST.floyd.VSU <> i:941 var
R117095:117110 VST.veric.seplog <> make_tycontext_g def
R117136:117139 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R117129:117135 VST.floyd.VSU <> ComponentJoin.Imports var
R117140:117146 VST.floyd.VSU <> G_merge def
R117161:117166 VST.floyd.VSU <> Comp_G def
R117168:117169 VST.floyd.VSU <> ComponentJoin.c2 var
R117149:117154 VST.floyd.VSU <> Comp_G def
R117156:117157 VST.floyd.VSU <> ComponentJoin.c1 var
R117126:117126 VST.floyd.VSU <> ComponentJoin.V var
R117042:117042 compcert.lib.Maps <> :::x_'!'_x not
R117086:117089 compcert.lib.Maps <> :::x_'!'_x not
R117090:117090 VST.floyd.VSU <> i:941 var
R117043:117058 VST.veric.seplog <> make_tycontext_g def
R117072:117075 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R117064:117071 VST.floyd.VSU <> ComponentJoin.Imports1 var
R117076:117081 VST.floyd.VSU <> Comp_G def
R117083:117084 VST.floyd.VSU <> ComponentJoin.c1 var
R117060:117061 VST.floyd.VSU <> ComponentJoin.V1 var
R117261:117290 VST.veric.semax_prog <> make_context_g_char thm
R117295:117318 VST.veric.initial_world <> make_tycontext_s_find_id thm
R117261:117290 VST.veric.semax_prog <> make_context_g_char thm
R117261:117290 VST.veric.semax_prog <> make_context_g_char thm
R117261:117290 VST.veric.semax_prog <> make_context_g_char thm
R117261:117290 VST.veric.semax_prog <> make_context_g_char thm
R117261:117290 VST.veric.semax_prog <> make_context_g_char thm
R117295:117318 VST.veric.initial_world <> make_tycontext_s_find_id thm
R117295:117318 VST.veric.initial_world <> make_tycontext_s_find_id thm
R117295:117318 VST.veric.initial_world <> make_tycontext_s_find_id thm
R117384:117390 VST.veric.initial_world <> find_id def
R117403:117406 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R117395:117402 VST.floyd.VSU <> ComponentJoin.Imports1 var
R117407:117412 VST.floyd.VSU <> Comp_G def
R117414:117415 VST.floyd.VSU <> ComponentJoin.c1 var
R117384:117390 VST.veric.initial_world <> find_id def
R117403:117406 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R117395:117402 VST.floyd.VSU <> ComponentJoin.Imports1 var
R117407:117412 VST.floyd.VSU <> Comp_G def
R117414:117415 VST.floyd.VSU <> ComponentJoin.c1 var
R117503:117531 VST.veric.compcert_rmaps RML empty_rmap def
R117503:117531 VST.veric.compcert_rmaps RML empty_rmap def
R117572:117593 VST.veric.SeparationLogic <> type_of_funspec_sub_si thm
R117572:117593 VST.veric.SeparationLogic <> type_of_funspec_sub_si thm
R117637:117643 VST.veric.initial_world <> find_id def
R117647:117648 VST.floyd.VSU <> ComponentJoin.V1 var
R117637:117643 VST.veric.initial_world <> find_id def
R117647:117648 VST.floyd.VSU <> ComponentJoin.V1 var
R117728:117762 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R117728:117762 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R117728:117762 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R117803:117805 VST.floyd.VSU <> ComponentJoin.HV1 var
R117803:117805 VST.floyd.VSU <> ComponentJoin.HV1 var
R117827:117833 VST.floyd.VSU <> LNR3_V1 thm
R117827:117833 VST.floyd.VSU <> LNR3_V1 thm
binder 117872:117872 <> i:942
R117875:117884 VST.veric.tycontext <> sub_option def
R117938:117938 compcert.lib.Maps <> :::x_'!'_x not
R118016:118019 compcert.lib.Maps <> :::x_'!'_x not
R118020:118020 VST.floyd.VSU <> i:942 var
R117939:117954 VST.veric.seplog <> make_tycontext_g def
R117980:117983 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R117973:117979 VST.floyd.VSU <> ComponentJoin.Imports var
R117984:117990 VST.floyd.VSU <> G_merge def
R118005:118010 VST.floyd.VSU <> Comp_G def
R118012:118013 VST.floyd.VSU <> ComponentJoin.c2 var
R117993:117998 VST.floyd.VSU <> Comp_G def
R118000:118001 VST.floyd.VSU <> ComponentJoin.c1 var
R117970:117970 VST.floyd.VSU <> ComponentJoin.V var
R117886:117886 compcert.lib.Maps <> :::x_'!'_x not
R117930:117933 compcert.lib.Maps <> :::x_'!'_x not
R117934:117934 VST.floyd.VSU <> i:942 var
R117887:117902 VST.veric.seplog <> make_tycontext_g def
R117916:117919 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R117908:117915 VST.floyd.VSU <> ComponentJoin.Imports2 var
R117920:117925 VST.floyd.VSU <> Comp_G def
R117927:117928 VST.floyd.VSU <> ComponentJoin.c2 var
R117904:117905 VST.floyd.VSU <> ComponentJoin.V2 var
binder 117872:117872 <> i:943
R117875:117884 VST.veric.tycontext <> sub_option def
R117938:117938 compcert.lib.Maps <> :::x_'!'_x not
R118016:118019 compcert.lib.Maps <> :::x_'!'_x not
R118020:118020 VST.floyd.VSU <> i:943 var
R117939:117954 VST.veric.seplog <> make_tycontext_g def
R117980:117983 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R117973:117979 VST.floyd.VSU <> ComponentJoin.Imports var
R117984:117990 VST.floyd.VSU <> G_merge def
R118005:118010 VST.floyd.VSU <> Comp_G def
R118012:118013 VST.floyd.VSU <> ComponentJoin.c2 var
R117993:117998 VST.floyd.VSU <> Comp_G def
R118000:118001 VST.floyd.VSU <> ComponentJoin.c1 var
R117970:117970 VST.floyd.VSU <> ComponentJoin.V var
R117886:117886 compcert.lib.Maps <> :::x_'!'_x not
R117930:117933 compcert.lib.Maps <> :::x_'!'_x not
R117934:117934 VST.floyd.VSU <> i:943 var
R117887:117902 VST.veric.seplog <> make_tycontext_g def
R117916:117919 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R117908:117915 VST.floyd.VSU <> ComponentJoin.Imports2 var
R117920:117925 VST.floyd.VSU <> Comp_G def
R117927:117928 VST.floyd.VSU <> ComponentJoin.c2 var
R117904:117905 VST.floyd.VSU <> ComponentJoin.V2 var
R118122:118151 VST.veric.semax_prog <> make_context_g_char thm
R118156:118179 VST.veric.initial_world <> make_tycontext_s_find_id thm
R118122:118151 VST.veric.semax_prog <> make_context_g_char thm
R118122:118151 VST.veric.semax_prog <> make_context_g_char thm
R118122:118151 VST.veric.semax_prog <> make_context_g_char thm
R118122:118151 VST.veric.semax_prog <> make_context_g_char thm
R118122:118151 VST.veric.semax_prog <> make_context_g_char thm
R118156:118179 VST.veric.initial_world <> make_tycontext_s_find_id thm
R118156:118179 VST.veric.initial_world <> make_tycontext_s_find_id thm
R118156:118179 VST.veric.initial_world <> make_tycontext_s_find_id thm
R118245:118251 VST.veric.initial_world <> find_id def
R118264:118267 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R118256:118263 VST.floyd.VSU <> ComponentJoin.Imports2 var
R118268:118273 VST.floyd.VSU <> Comp_G def
R118275:118276 VST.floyd.VSU <> ComponentJoin.c2 var
R118245:118251 VST.veric.initial_world <> find_id def
R118264:118267 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R118256:118263 VST.floyd.VSU <> ComponentJoin.Imports2 var
R118268:118273 VST.floyd.VSU <> Comp_G def
R118275:118276 VST.floyd.VSU <> ComponentJoin.c2 var
R118364:118392 VST.veric.compcert_rmaps RML empty_rmap def
R118364:118392 VST.veric.compcert_rmaps RML empty_rmap def
R118433:118454 VST.veric.SeparationLogic <> type_of_funspec_sub_si thm
R118433:118454 VST.veric.SeparationLogic <> type_of_funspec_sub_si thm
R118498:118504 VST.veric.initial_world <> find_id def
R118508:118509 VST.floyd.VSU <> ComponentJoin.V2 var
R118498:118504 VST.veric.initial_world <> find_id def
R118508:118509 VST.floyd.VSU <> ComponentJoin.V2 var
R118589:118623 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R118589:118623 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R118589:118623 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R118662:118664 VST.floyd.VSU <> ComponentJoin.HV2 var
R118662:118664 VST.floyd.VSU <> ComponentJoin.HV2 var
R118686:118692 VST.floyd.VSU <> LNR3_V2 thm
R118686:118692 VST.floyd.VSU <> LNR3_V2 thm
R118704:118718 VST.floyd.VSU <> Build_Component constr
R118704:118718 VST.floyd.VSU <> Build_Component constr
R118894:118906 VST.floyd.VSU <> G_merge_InDom thm
R118917:118918 VST.floyd.VSU <> ComponentJoin.c1 var
R118928:118936 Coq.Lists.List <> in_app_or thm
R118894:118906 VST.floyd.VSU <> G_merge_InDom thm
R118917:118918 VST.floyd.VSU <> ComponentJoin.c1 var
R118928:118936 Coq.Lists.List <> in_app_or thm
R118973:118978 Coq.Lists.List <> in_dec thm
R118992:118994 Coq.Lists.List <> map def
R119001:119006 VST.floyd.VSU <> Comp_G def
R119008:119009 VST.floyd.VSU <> ComponentJoin.c1 var
R118996:118998 Coq.Init.Datatypes <> fst def
R118980:118987 compcert.common.AST <> ident_eq def
R118973:118978 Coq.Lists.List <> in_dec thm
R118992:118994 Coq.Lists.List <> map def
R119001:119006 VST.floyd.VSU <> Comp_G def
R119008:119009 VST.floyd.VSU <> ComponentJoin.c1 var
R118996:118998 Coq.Init.Datatypes <> fst def
R118980:118987 compcert.common.AST <> ident_eq def
R119065:119066 VST.floyd.VSU <> ComponentJoin.c2 var
R119065:119066 VST.floyd.VSU <> ComponentJoin.c2 var
R119081:119082 VST.floyd.VSU <> ComponentJoin.FP var
R119081:119082 VST.floyd.VSU <> ComponentJoin.FP var
R119115:119121 VST.veric.initial_world <> find_id def
R119126:119135 VST.veric.Clight_initial_world <> prog_funct syndef
R119137:119138 VST.floyd.VSU <> ComponentJoin.p1 var
R119115:119121 VST.veric.initial_world <> find_id def
R119126:119135 VST.veric.Clight_initial_world <> prog_funct syndef
R119137:119138 VST.floyd.VSU <> ComponentJoin.p1 var
R119268:119269 VST.floyd.VSU <> ComponentJoin.c1 var
R119268:119269 VST.floyd.VSU <> ComponentJoin.c1 var
R119278:119286 Coq.Lists.List <> in_or_app thm
R119278:119286 Coq.Lists.List <> in_or_app thm
R119314:119327 VST.floyd.VSU <> Gfun_of_Fundef thm
R119314:119327 VST.floyd.VSU <> Gfun_of_Fundef thm
R119348:119349 VST.floyd.VSU <> ComponentJoin.c1 var
R119348:119349 VST.floyd.VSU <> ComponentJoin.c1 var
R119358:119365 VST.floyd.VSU <> IntIDs_i thm
R119358:119365 VST.floyd.VSU <> IntIDs_i thm
R119508:119514 VST.veric.initial_world <> find_id def
R119519:119528 VST.veric.Clight_initial_world <> prog_funct syndef
R119530:119531 VST.floyd.VSU <> ComponentJoin.p2 var
R119508:119514 VST.veric.initial_world <> find_id def
R119519:119528 VST.veric.Clight_initial_world <> prog_funct syndef
R119530:119531 VST.floyd.VSU <> ComponentJoin.p2 var
R119607:119615 Coq.Lists.List <> in_or_app thm
R119607:119615 Coq.Lists.List <> in_or_app thm
R119645:119658 VST.floyd.VSU <> Gfun_of_Fundef thm
R119645:119658 VST.floyd.VSU <> Gfun_of_Fundef thm
R119679:119680 VST.floyd.VSU <> ComponentJoin.c2 var
R119679:119680 VST.floyd.VSU <> ComponentJoin.c2 var
R119689:119696 VST.floyd.VSU <> IntIDs_i thm
R119689:119696 VST.floyd.VSU <> IntIDs_i thm
R119738:119755 VST.floyd.assoclists <> In_map_fst_find_id thm
R119738:119755 VST.floyd.assoclists <> In_map_fst_find_id thm
R119799:119817 VST.floyd.assoclists <> find_id_filter_char thm
R119799:119817 VST.floyd.assoclists <> find_id_filter_char thm
R119799:119817 VST.floyd.assoclists <> find_id_filter_char thm
R119799:119817 VST.floyd.assoclists <> find_id_filter_char thm
R119867:119880 VST.floyd.VSU <> Gfun_of_Fundef thm
R119867:119880 VST.floyd.VSU <> Gfun_of_Fundef thm
R119897:119898 VST.floyd.VSU <> ComponentJoin.FP var
R119897:119898 VST.floyd.VSU <> ComponentJoin.FP var
R119897:119898 VST.floyd.VSU <> ComponentJoin.FP var
R119955:119981 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R119955:119981 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R120014:120021 VST.floyd.VSU <> IntIDs_e thm
R120014:120021 VST.floyd.VSU <> IntIDs_e thm
R120059:120072 VST.floyd.VSU <> Fundef_of_Gfun thm
R120059:120072 VST.floyd.VSU <> Fundef_of_Gfun thm
R120190:120196 VST.veric.initial_world <> find_id def
R120201:120210 VST.veric.Clight_initial_world <> prog_funct syndef
R120212:120213 VST.floyd.VSU <> ComponentJoin.p2 var
R120190:120196 VST.veric.initial_world <> find_id def
R120201:120210 VST.veric.Clight_initial_world <> prog_funct syndef
R120212:120213 VST.floyd.VSU <> ComponentJoin.p2 var
R120289:120297 Coq.Lists.List <> in_or_app thm
R120289:120297 Coq.Lists.List <> in_or_app thm
R120327:120340 VST.floyd.VSU <> Gfun_of_Fundef thm
R120327:120340 VST.floyd.VSU <> Gfun_of_Fundef thm
R120361:120362 VST.floyd.VSU <> ComponentJoin.c2 var
R120361:120362 VST.floyd.VSU <> ComponentJoin.c2 var
R120371:120378 VST.floyd.VSU <> IntIDs_i thm
R120371:120378 VST.floyd.VSU <> IntIDs_i thm
R120420:120437 VST.floyd.assoclists <> In_map_fst_find_id thm
R120420:120437 VST.floyd.assoclists <> In_map_fst_find_id thm
R120481:120499 VST.floyd.assoclists <> find_id_filter_char thm
R120481:120499 VST.floyd.assoclists <> find_id_filter_char thm
R120481:120499 VST.floyd.assoclists <> find_id_filter_char thm
R120481:120499 VST.floyd.assoclists <> find_id_filter_char thm
R120549:120562 VST.floyd.VSU <> Gfun_of_Fundef thm
R120549:120562 VST.floyd.VSU <> Gfun_of_Fundef thm
R120579:120580 VST.floyd.VSU <> ComponentJoin.FP var
R120579:120580 VST.floyd.VSU <> ComponentJoin.FP var
R120579:120580 VST.floyd.VSU <> ComponentJoin.FP var
R120637:120663 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R120637:120663 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R120696:120703 VST.floyd.VSU <> IntIDs_e thm
R120696:120703 VST.floyd.VSU <> IntIDs_e thm
R120741:120754 VST.floyd.VSU <> Fundef_of_Gfun thm
R120741:120754 VST.floyd.VSU <> Fundef_of_Gfun thm
R120786:120798 VST.floyd.VSU <> G_merge_InDom thm
R120844:120859 VST.floyd.VSU <> Comp_Externs_LNR thm
R120861:120862 VST.floyd.VSU <> ComponentJoin.c1 var
R120786:120798 VST.floyd.VSU <> G_merge_InDom thm
R120844:120859 VST.floyd.VSU <> Comp_Externs_LNR thm
R120861:120862 VST.floyd.VSU <> ComponentJoin.c1 var
R120888:120905 VST.floyd.assoclists <> In_map_fst_find_id thm
R120888:120905 VST.floyd.assoclists <> In_map_fst_find_id thm
R120932:120947 VST.floyd.VSU <> Comp_E_in_G_find thm
R120949:120950 VST.floyd.VSU <> ComponentJoin.c1 var
R120932:120947 VST.floyd.VSU <> Comp_E_in_G_find thm
R120949:120950 VST.floyd.VSU <> ComponentJoin.c1 var
R120965:120982 VST.veric.initial_world <> find_id_In_map_fst thm
R120965:120982 VST.veric.initial_world <> find_id_In_map_fst thm
R121006:121021 VST.floyd.VSU <> Comp_Externs_LNR thm
R121023:121024 VST.floyd.VSU <> ComponentJoin.c1 var
R121006:121021 VST.floyd.VSU <> Comp_Externs_LNR thm
R121023:121024 VST.floyd.VSU <> ComponentJoin.c1 var
R121070:121080 VST.floyd.VSU <> Comp_E_in_G thm
R121070:121080 VST.floyd.VSU <> Comp_E_in_G thm
R121110:121128 compcert.lib.Coqlib <> list_disjoint_notin thm
R121133:121144 VST.floyd.VSU <> ComponentJoin.Externs2_Hyp var
R121110:121128 compcert.lib.Coqlib <> list_disjoint_notin thm
R121133:121144 VST.floyd.VSU <> ComponentJoin.Externs2_Hyp var
R121157:121166 VST.floyd.VSU <> Comp_G_dom proj
R121168:121169 VST.floyd.VSU <> ComponentJoin.c1 var
R121157:121166 VST.floyd.VSU <> Comp_G_dom proj
R121168:121169 VST.floyd.VSU <> ComponentJoin.c1 var
R121184:121192 Coq.Lists.List <> in_app_or thm
R121184:121192 Coq.Lists.List <> in_app_or thm
R121256:121257 VST.floyd.VSU <> ComponentJoin.FP var
R121256:121257 VST.floyd.VSU <> ComponentJoin.FP var
R121285:121297 VST.floyd.VSU <> G_merge_InDom thm
R121343:121352 VST.floyd.VSU <> Comp_G_LNR proj
R121354:121355 VST.floyd.VSU <> ComponentJoin.c1 var
R121285:121297 VST.floyd.VSU <> G_merge_InDom thm
R121343:121352 VST.floyd.VSU <> Comp_G_LNR proj
R121354:121355 VST.floyd.VSU <> ComponentJoin.c1 var
R121373:121382 VST.floyd.VSU <> Comp_G_dom proj
R121384:121385 VST.floyd.VSU <> ComponentJoin.c1 var
R121373:121382 VST.floyd.VSU <> Comp_G_dom proj
R121384:121385 VST.floyd.VSU <> ComponentJoin.c1 var
R121401:121409 Coq.Lists.List <> in_app_or thm
R121423:121431 Coq.Lists.List <> in_or_app thm
R121401:121409 Coq.Lists.List <> in_app_or thm
R121423:121431 Coq.Lists.List <> in_or_app thm
R121467:121484 VST.floyd.assoclists <> In_map_fst_find_id thm
R121467:121484 VST.floyd.assoclists <> In_map_fst_find_id thm
R121580:121598 VST.floyd.assoclists <> find_id_filter_char thm
R121631:121632 VST.floyd.VSU <> ComponentJoin.c1 var
R121580:121598 VST.floyd.assoclists <> find_id_filter_char thm
R121580:121598 VST.floyd.assoclists <> find_id_filter_char thm
R121580:121598 VST.floyd.assoclists <> find_id_filter_char thm
R121631:121632 VST.floyd.VSU <> ComponentJoin.c1 var
R121655:121661 VST.veric.initial_world <> find_id def
R121666:121674 compcert.cfrontend.Ctypes <> prog_defs proj
R121676:121677 VST.floyd.VSU <> ComponentJoin.p1 var
R121655:121661 VST.veric.initial_world <> find_id def
R121666:121674 compcert.cfrontend.Ctypes <> prog_defs proj
R121676:121677 VST.floyd.VSU <> ComponentJoin.p1 var
R121825:121838 VST.floyd.VSU <> Fundef_of_Gfun thm
R121825:121838 VST.floyd.VSU <> Fundef_of_Gfun thm
R121884:121897 VST.floyd.VSU <> Gfun_of_Fundef thm
R121884:121897 VST.floyd.VSU <> Gfun_of_Fundef thm
R121930:121937 VST.floyd.VSU <> IntIDs_i thm
R121930:121937 VST.floyd.VSU <> IntIDs_i thm
R121977:121989 VST.floyd.VSU <> G_merge_InDom thm
R121977:121989 VST.floyd.VSU <> G_merge_InDom thm
R121999:122014 VST.floyd.VSU <> Comp_Externs_LNR thm
R122016:122017 VST.floyd.VSU <> ComponentJoin.c1 var
R121999:122014 VST.floyd.VSU <> Comp_Externs_LNR thm
R122016:122017 VST.floyd.VSU <> ComponentJoin.c1 var
R122048:122056 Coq.Lists.List <> in_or_app thm
R122048:122056 Coq.Lists.List <> in_or_app thm
R122065:122075 VST.floyd.VSU <> Comp_G_elim thm
R122065:122075 VST.floyd.VSU <> Comp_G_elim thm
R122153:122165 VST.floyd.VSU <> G_merge_InDom thm
R122153:122165 VST.floyd.VSU <> G_merge_InDom thm
R122176:122191 VST.floyd.VSU <> Comp_Externs_LNR thm
R122193:122194 VST.floyd.VSU <> ComponentJoin.c1 var
R122176:122191 VST.floyd.VSU <> Comp_Externs_LNR thm
R122193:122194 VST.floyd.VSU <> ComponentJoin.c1 var
R122257:122267 VST.floyd.VSU <> Comp_E_in_G thm
R122257:122267 VST.floyd.VSU <> Comp_E_in_G thm
R122297:122310 VST.floyd.VSU <> Fundef_of_Gfun thm
R122297:122310 VST.floyd.VSU <> Fundef_of_Gfun thm
R122297:122310 VST.floyd.VSU <> Fundef_of_Gfun thm
R122342:122348 VST.veric.initial_world <> find_id def
R122353:122362 VST.veric.Clight_initial_world <> prog_funct syndef
R122364:122365 VST.floyd.VSU <> ComponentJoin.p1 var
R122342:122348 VST.veric.initial_world <> find_id def
R122353:122362 VST.veric.Clight_initial_world <> prog_funct syndef
R122364:122365 VST.floyd.VSU <> ComponentJoin.p1 var
R122472:122485 VST.floyd.VSU <> Gfun_of_Fundef thm
R122533:122540 VST.floyd.VSU <> IntIDs_i thm
R122472:122485 VST.floyd.VSU <> Gfun_of_Fundef thm
R122472:122485 VST.floyd.VSU <> Gfun_of_Fundef thm
R122533:122540 VST.floyd.VSU <> IntIDs_i thm
R122533:122540 VST.floyd.VSU <> IntIDs_i thm
R122613:122626 VST.floyd.VSU <> Gfun_of_Fundef thm
R122665:122672 VST.floyd.VSU <> IntIDs_i thm
R122613:122626 VST.floyd.VSU <> Gfun_of_Fundef thm
R122665:122672 VST.floyd.VSU <> IntIDs_i thm
R122724:122725 VST.floyd.VSU <> ComponentJoin.FP var
R122724:122725 VST.floyd.VSU <> ComponentJoin.FP var
R122754:122771 VST.floyd.assoclists <> In_map_fst_find_id thm
R122754:122771 VST.floyd.assoclists <> In_map_fst_find_id thm
R122796:122806 VST.floyd.VSU <> G_merge_LNR thm
R122796:122806 VST.floyd.VSU <> G_merge_LNR thm
R122816:122831 VST.floyd.VSU <> Comp_Externs_LNR thm
R122833:122834 VST.floyd.VSU <> ComponentJoin.c1 var
R122816:122831 VST.floyd.VSU <> Comp_Externs_LNR thm
R122833:122834 VST.floyd.VSU <> ComponentJoin.c1 var
R122846:122861 VST.floyd.VSU <> Comp_Externs_LNR thm
R122863:122864 VST.floyd.VSU <> ComponentJoin.c2 var
R122846:122861 VST.floyd.VSU <> Comp_Externs_LNR thm
R122863:122864 VST.floyd.VSU <> ComponentJoin.c2 var
R122900:122919 VST.floyd.VSU <> G_merge_find_id_Some thm
R122900:122919 VST.floyd.VSU <> G_merge_find_id_Some thm
R122939:122945 VST.veric.initial_world <> find_id def
R122949:122950 VST.floyd.VSU <> ComponentJoin.E1 var
R122939:122945 VST.veric.initial_world <> find_id def
R122949:122950 VST.floyd.VSU <> ComponentJoin.E1 var
R123021:123036 VST.floyd.VSU <> Comp_E_in_G_find thm
R123038:123039 VST.floyd.VSU <> ComponentJoin.c1 var
R123021:123036 VST.floyd.VSU <> Comp_E_in_G_find thm
R123038:123039 VST.floyd.VSU <> ComponentJoin.c1 var
R123075:123081 VST.veric.initial_world <> find_id def
R123085:123086 VST.floyd.VSU <> ComponentJoin.E2 var
R123075:123081 VST.veric.initial_world <> find_id def
R123085:123086 VST.floyd.VSU <> ComponentJoin.E2 var
R123158:123173 VST.floyd.VSU <> Comp_E_in_G_find thm
R123175:123176 VST.floyd.VSU <> ComponentJoin.c2 var
R123158:123173 VST.floyd.VSU <> Comp_E_in_G_find thm
R123175:123176 VST.floyd.VSU <> ComponentJoin.c2 var
R123211:123217 VST.floyd.VSU <> G_merge def
R123226:123237 VST.veric.initial_world <> find_id_app1 thm
R123226:123237 VST.veric.initial_world <> find_id_app1 thm
R123250:123269 VST.floyd.VSU <> G_merge_aux_find_id1 thm
R123250:123269 VST.floyd.VSU <> G_merge_aux_find_id1 thm
R123250:123269 VST.floyd.VSU <> G_merge_aux_find_id1 thm
R123250:123269 VST.floyd.VSU <> G_merge_aux_find_id1 thm
R123355:123378 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R123355:123378 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R123355:123378 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R123355:123378 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R123410:123416 VST.veric.initial_world <> find_id def
R123421:123426 VST.floyd.VSU <> Comp_G def
R123428:123429 VST.floyd.VSU <> ComponentJoin.c2 var
R123410:123416 VST.veric.initial_world <> find_id def
R123421:123426 VST.floyd.VSU <> Comp_G def
R123428:123429 VST.floyd.VSU <> ComponentJoin.c2 var
R123502:123519 VST.veric.initial_world <> find_id_In_map_fst thm
R123502:123519 VST.veric.initial_world <> find_id_In_map_fst thm
R123536:123546 VST.floyd.VSU <> Comp_G_elim thm
R123536:123546 VST.floyd.VSU <> Comp_G_elim thm
R123607:123622 VST.floyd.assoclists <> find_id_None_iff thm
R123607:123622 VST.floyd.assoclists <> find_id_None_iff thm
R123662:123679 VST.floyd.assoclists <> In_map_fst_find_id thm
R123662:123679 VST.floyd.assoclists <> In_map_fst_find_id thm
R123709:123738 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R123740:123751 VST.floyd.VSU <> ComponentJoin.Externs1_Hyp var
R123709:123738 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R123740:123751 VST.floyd.VSU <> ComponentJoin.Externs1_Hyp var
R123709:123738 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R123740:123751 VST.floyd.VSU <> ComponentJoin.Externs1_Hyp var
R123792:123807 VST.floyd.VSU <> Comp_LNR_Interns thm
R123809:123810 VST.floyd.VSU <> ComponentJoin.c2 var
R123792:123807 VST.floyd.VSU <> Comp_LNR_Interns thm
R123809:123810 VST.floyd.VSU <> ComponentJoin.c2 var
R123830:123845 VST.floyd.VSU <> Comp_E_in_G_find thm
R123847:123848 VST.floyd.VSU <> ComponentJoin.c2 var
R123830:123845 VST.floyd.VSU <> Comp_E_in_G_find thm
R123847:123848 VST.floyd.VSU <> ComponentJoin.c2 var
R123874:123897 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R123874:123897 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R123925:123931 VST.veric.initial_world <> find_id def
R123936:123941 VST.floyd.VSU <> Comp_G def
R123943:123944 VST.floyd.VSU <> ComponentJoin.c1 var
R123925:123931 VST.veric.initial_world <> find_id def
R123936:123941 VST.floyd.VSU <> Comp_G def
R123943:123944 VST.floyd.VSU <> ComponentJoin.c1 var
R124017:124034 VST.veric.initial_world <> find_id_In_map_fst thm
R124017:124034 VST.veric.initial_world <> find_id_In_map_fst thm
R124051:124061 VST.floyd.VSU <> Comp_G_elim thm
R124051:124061 VST.floyd.VSU <> Comp_G_elim thm
R124122:124137 VST.floyd.assoclists <> find_id_None_iff thm
R124122:124137 VST.floyd.assoclists <> find_id_None_iff thm
R124177:124194 VST.floyd.assoclists <> In_map_fst_find_id thm
R124177:124194 VST.floyd.assoclists <> In_map_fst_find_id thm
R124224:124253 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R124255:124266 VST.floyd.VSU <> ComponentJoin.Externs2_Hyp var
R124224:124253 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R124255:124266 VST.floyd.VSU <> ComponentJoin.Externs2_Hyp var
R124224:124253 VST.floyd.assoclists <> list_disjoint_map_fst_find_id1 thm
R124255:124266 VST.floyd.VSU <> ComponentJoin.Externs2_Hyp var
R124305:124320 VST.floyd.VSU <> Comp_LNR_Interns thm
R124322:124323 VST.floyd.VSU <> ComponentJoin.c1 var
R124305:124320 VST.floyd.VSU <> Comp_LNR_Interns thm
R124322:124323 VST.floyd.VSU <> ComponentJoin.c1 var
R124338:124353 VST.floyd.VSU <> Comp_Externs_LNR thm
R124355:124356 VST.floyd.VSU <> ComponentJoin.c2 var
R124338:124353 VST.floyd.VSU <> Comp_Externs_LNR thm
R124355:124356 VST.floyd.VSU <> ComponentJoin.c2 var
R124443:124444 VST.floyd.VSU <> HC def
R124443:124444 VST.floyd.VSU <> HC def
R124464:124465 VST.floyd.VSU <> ComponentJoin.FP var
R124464:124465 VST.floyd.VSU <> ComponentJoin.FP var
R124494:124505 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R124494:124505 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R124519:124538 VST.floyd.VSU <> G_merge_find_id_Some thm
R124519:124538 VST.floyd.VSU <> G_merge_find_id_Some thm
R124557:124566 VST.floyd.VSU <> Comp_G_LNR proj
R124568:124569 VST.floyd.VSU <> ComponentJoin.c2 var
R124557:124566 VST.floyd.VSU <> Comp_G_LNR proj
R124568:124569 VST.floyd.VSU <> ComponentJoin.c2 var
R124585:124591 VST.veric.initial_world <> find_id def
R124596:124601 VST.floyd.VSU <> Comp_G def
R124603:124604 VST.floyd.VSU <> ComponentJoin.c1 var
R124585:124591 VST.veric.initial_world <> find_id def
R124596:124601 VST.floyd.VSU <> Comp_G def
R124603:124604 VST.floyd.VSU <> ComponentJoin.c1 var
R124943:124960 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
R124962:124963 VST.floyd.VSU <> ComponentJoin.c1 var
R124943:124960 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
R124962:124963 VST.floyd.VSU <> ComponentJoin.c1 var
R125055:125068 VST.floyd.VSU <> SF_subsumespec thm
R125149:125160 VST.floyd.VSU <> Comp_ctx_LNR thm
R125162:125163 VST.floyd.VSU <> ComponentJoin.c1 var
R125095:125129 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R125089:125091 VST.floyd.VSU <> ComponentJoin.HV1 var
R125078:125078 VST.floyd.VSU <> ComponentJoin.V var
R125055:125068 VST.floyd.VSU <> SF_subsumespec thm
R125149:125160 VST.floyd.VSU <> Comp_ctx_LNR thm
R125162:125163 VST.floyd.VSU <> ComponentJoin.c1 var
R125095:125129 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R125089:125091 VST.floyd.VSU <> ComponentJoin.HV1 var
R125078:125078 VST.floyd.VSU <> ComponentJoin.V var
R125216:125222 VST.veric.initial_world <> find_id def
R125227:125232 VST.floyd.VSU <> Comp_G def
R125234:125235 VST.floyd.VSU <> ComponentJoin.c2 var
R125216:125222 VST.veric.initial_world <> find_id def
R125227:125232 VST.floyd.VSU <> Comp_G def
R125234:125235 VST.floyd.VSU <> ComponentJoin.c2 var
R125305:125322 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
R125324:125325 VST.floyd.VSU <> ComponentJoin.c2 var
R125305:125322 VST.floyd.VSU <> Comp_G_in_Fundefs' thm
R125324:125325 VST.floyd.VSU <> ComponentJoin.c2 var
R125420:125433 VST.floyd.VSU <> SF_subsumespec thm
R125514:125525 VST.floyd.VSU <> Comp_ctx_LNR thm
R125527:125528 VST.floyd.VSU <> ComponentJoin.c2 var
R125460:125494 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R125454:125456 VST.floyd.VSU <> ComponentJoin.HV2 var
R125443:125443 VST.floyd.VSU <> ComponentJoin.V var
R125420:125433 VST.floyd.VSU <> SF_subsumespec thm
R125514:125525 VST.floyd.VSU <> Comp_ctx_LNR thm
R125527:125528 VST.floyd.VSU <> ComponentJoin.c2 var
R125460:125494 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R125454:125456 VST.floyd.VSU <> ComponentJoin.HV2 var
R125443:125443 VST.floyd.VSU <> ComponentJoin.V var
R125611:125622 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R125641:125647 Coq.Init.Logic <> eq_refl constr
R125629:125635 Coq.Init.Logic <> eq_refl constr
R125611:125622 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R125641:125647 Coq.Init.Logic <> eq_refl constr
R125629:125635 Coq.Init.Logic <> eq_refl constr
R125739:125750 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R125757:125758 VST.floyd.VSU <> ComponentJoin.FP var
R125812:125814 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125783:125801 VST.veric.seplog <> binary_intersection def
R125815:125818 Coq.Init.Datatypes <> Some constr
R125821:125831 VST.floyd.VSU <> merge_specs def
R125839:125842 Coq.Init.Datatypes <> Some constr
R125812:125814 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125783:125801 VST.veric.seplog <> binary_intersection def
R125815:125818 Coq.Init.Datatypes <> Some constr
R125821:125831 VST.floyd.VSU <> merge_specs def
R125839:125842 Coq.Init.Datatypes <> Some constr
R125870:125888 VST.floyd.VSU <> merge_specs_succeed thm
R125870:125888 VST.floyd.VSU <> merge_specs_succeed thm
R125925:125939 VST.floyd.VSU <> InternalInfo_cc thm
R125925:125939 VST.floyd.VSU <> InternalInfo_cc thm
R125982:125996 VST.floyd.VSU <> InternalInfo_cc thm
R125982:125996 VST.floyd.VSU <> InternalInfo_cc thm
R126049:126080 VST.floyd.VSU <> internalInfo_binary_intersection thm
R126049:126080 VST.floyd.VSU <> internalInfo_binary_intersection thm
R126119:126139 VST.floyd.VSU <> InternalInfo_envs_sub thm
R126146:126159 compcert.common.Globalenvs Genv globalenv def
R126161:126162 VST.floyd.VSU <> ComponentJoin.p1 var
R126141:126143 VST.floyd.VSU <> ComponentJoin.CS1 var
R126119:126139 VST.floyd.VSU <> InternalInfo_envs_sub thm
R126146:126159 compcert.common.Globalenvs Genv globalenv def
R126161:126162 VST.floyd.VSU <> ComponentJoin.p1 var
R126141:126143 VST.floyd.VSU <> ComponentJoin.CS1 var
R126222:126235 VST.floyd.VSU <> Gfun_of_Fundef thm
R126222:126235 VST.floyd.VSU <> Gfun_of_Fundef thm
R126252:126255 VST.floyd.VSU <> ComponentJoin.LNRp var
R126252:126255 VST.floyd.VSU <> ComponentJoin.LNRp var
R126276:126307 VST.veric.semax_prog <> find_funct_ptr_exists thm
R126276:126307 VST.veric.semax_prog <> find_funct_ptr_exists thm
R126316:126319 VST.floyd.VSU <> ComponentJoin.LNRp var
R126316:126319 VST.floyd.VSU <> ComponentJoin.LNRp var
R126329:126337 VST.veric.initial_world <> find_id_e thm
R126329:126337 VST.veric.initial_world <> find_id_e thm
R126372:126392 VST.floyd.VSU <> InternalInfo_envs_sub thm
R126399:126412 compcert.common.Globalenvs Genv globalenv def
R126414:126415 VST.floyd.VSU <> ComponentJoin.p2 var
R126394:126396 VST.floyd.VSU <> ComponentJoin.CS2 var
R126372:126392 VST.floyd.VSU <> InternalInfo_envs_sub thm
R126399:126412 compcert.common.Globalenvs Genv globalenv def
R126414:126415 VST.floyd.VSU <> ComponentJoin.p2 var
R126394:126396 VST.floyd.VSU <> ComponentJoin.CS2 var
R126475:126488 VST.floyd.VSU <> Gfun_of_Fundef thm
R126475:126488 VST.floyd.VSU <> Gfun_of_Fundef thm
R126505:126508 VST.floyd.VSU <> ComponentJoin.LNRp var
R126505:126508 VST.floyd.VSU <> ComponentJoin.LNRp var
R126529:126560 VST.veric.semax_prog <> find_funct_ptr_exists thm
R126529:126560 VST.veric.semax_prog <> find_funct_ptr_exists thm
R126569:126572 VST.floyd.VSU <> ComponentJoin.LNRp var
R126569:126572 VST.floyd.VSU <> ComponentJoin.LNRp var
R126582:126590 VST.veric.initial_world <> find_id_e thm
R126582:126590 VST.veric.initial_world <> find_id_e thm
R126719:126736 VST.veric.initial_world <> find_id_In_map_fst thm
R126719:126736 VST.veric.initial_world <> find_id_In_map_fst thm
R126754:126764 VST.floyd.VSU <> Comp_G_elim thm
R126754:126764 VST.floyd.VSU <> Comp_G_elim thm
R126829:126847 compcert.lib.Coqlib <> list_disjoint_notin thm
R126851:126862 VST.floyd.VSU <> ComponentJoin.Externs2_Hyp var
R126829:126847 compcert.lib.Coqlib <> list_disjoint_notin thm
R126851:126862 VST.floyd.VSU <> ComponentJoin.Externs2_Hyp var
R126903:126916 VST.floyd.VSU <> Gfun_of_Fundef thm
R126903:126916 VST.floyd.VSU <> Gfun_of_Fundef thm
R126932:126939 VST.floyd.VSU <> IntIDs_i thm
R126932:126939 VST.floyd.VSU <> IntIDs_i thm
R126964:126965 VST.floyd.VSU <> ComponentJoin.c1 var
R126964:126965 VST.floyd.VSU <> ComponentJoin.c1 var
R127012:127025 VST.floyd.VSU <> Gfun_of_Fundef thm
R127012:127025 VST.floyd.VSU <> Gfun_of_Fundef thm
R127053:127054 VST.floyd.VSU <> ComponentJoin.c2 var
R127053:127054 VST.floyd.VSU <> ComponentJoin.c2 var
R127169:127186 VST.veric.initial_world <> find_id_In_map_fst thm
R127169:127186 VST.veric.initial_world <> find_id_In_map_fst thm
R127204:127214 VST.floyd.VSU <> Comp_G_elim thm
R127204:127214 VST.floyd.VSU <> Comp_G_elim thm
R127279:127297 compcert.lib.Coqlib <> list_disjoint_notin thm
R127301:127312 VST.floyd.VSU <> ComponentJoin.Externs1_Hyp var
R127279:127297 compcert.lib.Coqlib <> list_disjoint_notin thm
R127301:127312 VST.floyd.VSU <> ComponentJoin.Externs1_Hyp var
R127352:127365 VST.floyd.VSU <> Gfun_of_Fundef thm
R127352:127365 VST.floyd.VSU <> Gfun_of_Fundef thm
R127381:127388 VST.floyd.VSU <> IntIDs_i thm
R127381:127388 VST.floyd.VSU <> IntIDs_i thm
R127413:127414 VST.floyd.VSU <> ComponentJoin.c2 var
R127413:127414 VST.floyd.VSU <> ComponentJoin.c2 var
R127461:127474 VST.floyd.VSU <> Gfun_of_Fundef thm
R127461:127474 VST.floyd.VSU <> Gfun_of_Fundef thm
R127502:127503 VST.floyd.VSU <> ComponentJoin.c1 var
R127502:127503 VST.floyd.VSU <> ComponentJoin.c1 var
R127553:127554 VST.floyd.VSU <> ComponentJoin.FP var
R127553:127554 VST.floyd.VSU <> ComponentJoin.FP var
R127553:127554 VST.floyd.VSU <> ComponentJoin.FP var
R127573:127584 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R127591:127592 VST.floyd.VSU <> ComponentJoin.FP var
R127646:127648 Coq.Init.Logic <> ::type_scope:x_'='_x not
R127617:127635 VST.veric.seplog <> binary_intersection def
R127649:127652 Coq.Init.Datatypes <> Some constr
R127655:127665 VST.floyd.VSU <> merge_specs def
R127673:127676 Coq.Init.Datatypes <> Some constr
R127646:127648 Coq.Init.Logic <> ::type_scope:x_'='_x not
R127617:127635 VST.veric.seplog <> binary_intersection def
R127649:127652 Coq.Init.Datatypes <> Some constr
R127655:127665 VST.floyd.VSU <> merge_specs def
R127673:127676 Coq.Init.Datatypes <> Some constr
R127704:127722 VST.floyd.VSU <> merge_specs_succeed thm
R127704:127722 VST.floyd.VSU <> merge_specs_succeed thm
R127759:127773 VST.floyd.VSU <> ExternalInfo_cc thm
R127759:127773 VST.floyd.VSU <> ExternalInfo_cc thm
R127817:127831 VST.floyd.VSU <> ExternalInfo_cc thm
R127817:127831 VST.floyd.VSU <> ExternalInfo_cc thm
R127869:127900 VST.floyd.VSU <> externalInfo_binary_intersection thm
R127869:127900 VST.floyd.VSU <> externalInfo_binary_intersection thm
R127940:127960 VST.floyd.VSU <> ExternalInfo_envs_sub thm
R127940:127960 VST.floyd.VSU <> ExternalInfo_envs_sub thm
R128014:128027 VST.floyd.VSU <> Gfun_of_Fundef thm
R128014:128027 VST.floyd.VSU <> Gfun_of_Fundef thm
R128045:128048 VST.floyd.VSU <> ComponentJoin.LNRp var
R128045:128048 VST.floyd.VSU <> ComponentJoin.LNRp var
R128069:128100 VST.veric.semax_prog <> find_funct_ptr_exists thm
R128069:128100 VST.veric.semax_prog <> find_funct_ptr_exists thm
R128109:128112 VST.floyd.VSU <> ComponentJoin.LNRp var
R128109:128112 VST.floyd.VSU <> ComponentJoin.LNRp var
R128122:128130 VST.veric.initial_world <> find_id_e thm
R128122:128130 VST.veric.initial_world <> find_id_e thm
R128165:128185 VST.floyd.VSU <> ExternalInfo_envs_sub thm
R128165:128185 VST.floyd.VSU <> ExternalInfo_envs_sub thm
R128239:128252 VST.floyd.VSU <> Gfun_of_Fundef thm
R128239:128252 VST.floyd.VSU <> Gfun_of_Fundef thm
R128270:128273 VST.floyd.VSU <> ComponentJoin.LNRp var
R128270:128273 VST.floyd.VSU <> ComponentJoin.LNRp var
R128294:128325 VST.veric.semax_prog <> find_funct_ptr_exists thm
R128294:128325 VST.veric.semax_prog <> find_funct_ptr_exists thm
R128334:128337 VST.floyd.VSU <> ComponentJoin.LNRp var
R128334:128337 VST.floyd.VSU <> ComponentJoin.LNRp var
R128347:128355 VST.veric.initial_world <> find_id_e thm
R128347:128355 VST.veric.initial_world <> find_id_e thm
R128415:128432 VST.veric.initial_world <> find_id_In_map_fst thm
R128415:128432 VST.veric.initial_world <> find_id_In_map_fst thm
R128450:128460 VST.floyd.VSU <> Comp_G_elim thm
R128450:128460 VST.floyd.VSU <> Comp_G_elim thm
R128611:128624 VST.floyd.VSU <> Gfun_of_Fundef thm
R128670:128671 VST.floyd.VSU <> ComponentJoin.c1 var
R128611:128624 VST.floyd.VSU <> Gfun_of_Fundef thm
R128670:128671 VST.floyd.VSU <> ComponentJoin.c1 var
R128694:128700 VST.veric.initial_world <> find_id def
R128705:128714 VST.veric.Clight_initial_world <> prog_funct syndef
R128716:128717 VST.floyd.VSU <> ComponentJoin.p2 var
R128694:128700 VST.veric.initial_world <> find_id def
R128705:128714 VST.veric.Clight_initial_world <> prog_funct syndef
R128716:128717 VST.floyd.VSU <> ComponentJoin.p2 var
R128839:128857 compcert.lib.Coqlib <> list_disjoint_notin thm
R128861:128872 VST.floyd.VSU <> ComponentJoin.Externs1_Hyp var
R128839:128857 compcert.lib.Coqlib <> list_disjoint_notin thm
R128861:128872 VST.floyd.VSU <> ComponentJoin.Externs1_Hyp var
R128900:128913 VST.floyd.VSU <> Gfun_of_Fundef thm
R128900:128913 VST.floyd.VSU <> Gfun_of_Fundef thm
R128931:128938 VST.floyd.VSU <> IntIDs_i thm
R128931:128938 VST.floyd.VSU <> IntIDs_i thm
R128965:128966 VST.floyd.VSU <> ComponentJoin.c2 var
R128965:128966 VST.floyd.VSU <> ComponentJoin.c2 var
R128996:129007 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R129026:129032 Coq.Init.Logic <> eq_refl constr
R129014:129020 Coq.Init.Logic <> eq_refl constr
R128996:129007 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R129026:129032 Coq.Init.Logic <> eq_refl constr
R129014:129020 Coq.Init.Logic <> eq_refl constr
R129066:129077 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R129103:129104 VST.floyd.VSU <> ComponentJoin.FP var
R129103:129104 VST.floyd.VSU <> ComponentJoin.FP var
R129103:129104 VST.floyd.VSU <> ComponentJoin.FP var
R129148:129168 VST.floyd.VSU <> ExternalInfo_envs_sub thm
R129148:129168 VST.floyd.VSU <> ExternalInfo_envs_sub thm
R129224:129237 VST.floyd.VSU <> Gfun_of_Fundef thm
R129224:129237 VST.floyd.VSU <> Gfun_of_Fundef thm
R129255:129258 VST.floyd.VSU <> ComponentJoin.LNRp var
R129255:129258 VST.floyd.VSU <> ComponentJoin.LNRp var
R129282:129313 VST.veric.semax_prog <> find_funct_ptr_exists thm
R129282:129313 VST.veric.semax_prog <> find_funct_ptr_exists thm
R129322:129325 VST.floyd.VSU <> ComponentJoin.LNRp var
R129322:129325 VST.floyd.VSU <> ComponentJoin.LNRp var
R129335:129343 VST.veric.initial_world <> find_id_e thm
R129335:129343 VST.veric.initial_world <> find_id_e thm
R129498:129499 VST.floyd.VSU <> ComponentJoin.FP var
R129498:129499 VST.floyd.VSU <> ComponentJoin.FP var
R129498:129499 VST.floyd.VSU <> ComponentJoin.FP var
R129543:129563 VST.floyd.VSU <> ExternalInfo_envs_sub thm
R129543:129563 VST.floyd.VSU <> ExternalInfo_envs_sub thm
R129619:129632 VST.floyd.VSU <> Gfun_of_Fundef thm
R129619:129632 VST.floyd.VSU <> Gfun_of_Fundef thm
R129650:129653 VST.floyd.VSU <> ComponentJoin.LNRp var
R129650:129653 VST.floyd.VSU <> ComponentJoin.LNRp var
R129677:129708 VST.veric.semax_prog <> find_funct_ptr_exists thm
R129677:129708 VST.veric.semax_prog <> find_funct_ptr_exists thm
R129717:129720 VST.floyd.VSU <> ComponentJoin.LNRp var
R129717:129720 VST.floyd.VSU <> ComponentJoin.LNRp var
R129730:129738 VST.veric.initial_world <> find_id_e thm
R129730:129738 VST.veric.initial_world <> find_id_e thm
R129889:129902 VST.floyd.VSU <> Gfun_of_Fundef thm
R129950:129951 VST.floyd.VSU <> ComponentJoin.c1 var
R129889:129902 VST.floyd.VSU <> Gfun_of_Fundef thm
R129950:129951 VST.floyd.VSU <> ComponentJoin.c1 var
R129974:129980 VST.veric.initial_world <> find_id def
R129985:129994 VST.veric.Clight_initial_world <> prog_funct syndef
R129996:129997 VST.floyd.VSU <> ComponentJoin.p2 var
R129974:129980 VST.veric.initial_world <> find_id def
R129985:129994 VST.veric.Clight_initial_world <> prog_funct syndef
R129996:129997 VST.floyd.VSU <> ComponentJoin.p2 var
R130092:130103 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R130122:130128 Coq.Init.Logic <> eq_refl constr
R130110:130116 Coq.Init.Logic <> eq_refl constr
R130092:130103 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R130122:130128 Coq.Init.Logic <> eq_refl constr
R130110:130116 Coq.Init.Logic <> eq_refl constr
R130162:130173 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R130200:130201 VST.floyd.VSU <> ComponentJoin.FP var
R130200:130201 VST.floyd.VSU <> ComponentJoin.FP var
R130200:130201 VST.floyd.VSU <> ComponentJoin.FP var
R130239:130259 VST.floyd.VSU <> InternalInfo_envs_sub thm
R130266:130279 compcert.common.Globalenvs Genv globalenv def
R130281:130282 VST.floyd.VSU <> ComponentJoin.p1 var
R130261:130263 VST.floyd.VSU <> ComponentJoin.CS1 var
R130239:130259 VST.floyd.VSU <> InternalInfo_envs_sub thm
R130266:130279 compcert.common.Globalenvs Genv globalenv def
R130281:130282 VST.floyd.VSU <> ComponentJoin.p1 var
R130261:130263 VST.floyd.VSU <> ComponentJoin.CS1 var
R130340:130353 VST.floyd.VSU <> Gfun_of_Fundef thm
R130340:130353 VST.floyd.VSU <> Gfun_of_Fundef thm
R130371:130374 VST.floyd.VSU <> ComponentJoin.LNRp var
R130371:130374 VST.floyd.VSU <> ComponentJoin.LNRp var
R130398:130429 VST.veric.semax_prog <> find_funct_ptr_exists thm
R130398:130429 VST.veric.semax_prog <> find_funct_ptr_exists thm
R130438:130441 VST.floyd.VSU <> ComponentJoin.LNRp var
R130438:130441 VST.floyd.VSU <> ComponentJoin.LNRp var
R130451:130459 VST.veric.initial_world <> find_id_e thm
R130451:130459 VST.veric.initial_world <> find_id_e thm
R130502:130513 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R130532:130538 Coq.Init.Logic <> eq_refl constr
R130520:130526 Coq.Init.Logic <> eq_refl constr
R130502:130513 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R130532:130538 Coq.Init.Logic <> eq_refl constr
R130520:130526 Coq.Init.Logic <> eq_refl constr
R130593:130604 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R130652:130653 VST.floyd.VSU <> ComponentJoin.FP var
R130652:130653 VST.floyd.VSU <> ComponentJoin.FP var
R130652:130653 VST.floyd.VSU <> ComponentJoin.FP var
R130697:130717 VST.floyd.VSU <> InternalInfo_envs_sub thm
R130724:130737 compcert.common.Globalenvs Genv globalenv def
R130739:130740 VST.floyd.VSU <> ComponentJoin.p1 var
R130719:130721 VST.floyd.VSU <> ComponentJoin.CS1 var
R130697:130717 VST.floyd.VSU <> InternalInfo_envs_sub thm
R130724:130737 compcert.common.Globalenvs Genv globalenv def
R130739:130740 VST.floyd.VSU <> ComponentJoin.p1 var
R130719:130721 VST.floyd.VSU <> ComponentJoin.CS1 var
R130798:130811 VST.floyd.VSU <> Gfun_of_Fundef thm
R130798:130811 VST.floyd.VSU <> Gfun_of_Fundef thm
R130829:130832 VST.floyd.VSU <> ComponentJoin.LNRp var
R130829:130832 VST.floyd.VSU <> ComponentJoin.LNRp var
R130856:130887 VST.veric.semax_prog <> find_funct_ptr_exists thm
R130856:130887 VST.veric.semax_prog <> find_funct_ptr_exists thm
R130896:130899 VST.floyd.VSU <> ComponentJoin.LNRp var
R130896:130899 VST.floyd.VSU <> ComponentJoin.LNRp var
R130909:130917 VST.veric.initial_world <> find_id_e thm
R130909:130917 VST.veric.initial_world <> find_id_e thm
R130993:130994 VST.floyd.VSU <> ComponentJoin.FP var
R130993:130994 VST.floyd.VSU <> ComponentJoin.FP var
R130993:130994 VST.floyd.VSU <> ComponentJoin.FP var
R131037:131057 VST.floyd.VSU <> InternalInfo_envs_sub thm
R131064:131077 compcert.common.Globalenvs Genv globalenv def
R131079:131080 VST.floyd.VSU <> ComponentJoin.p1 var
R131059:131061 VST.floyd.VSU <> ComponentJoin.CS1 var
R131037:131057 VST.floyd.VSU <> InternalInfo_envs_sub thm
R131064:131077 compcert.common.Globalenvs Genv globalenv def
R131079:131080 VST.floyd.VSU <> ComponentJoin.p1 var
R131059:131061 VST.floyd.VSU <> ComponentJoin.CS1 var
R131136:131149 VST.floyd.VSU <> Gfun_of_Fundef thm
R131136:131149 VST.floyd.VSU <> Gfun_of_Fundef thm
R131167:131170 VST.floyd.VSU <> ComponentJoin.LNRp var
R131167:131170 VST.floyd.VSU <> ComponentJoin.LNRp var
R131192:131223 VST.veric.semax_prog <> find_funct_ptr_exists thm
R131192:131223 VST.veric.semax_prog <> find_funct_ptr_exists thm
R131232:131235 VST.floyd.VSU <> ComponentJoin.LNRp var
R131232:131235 VST.floyd.VSU <> ComponentJoin.LNRp var
R131245:131253 VST.veric.initial_world <> find_id_e thm
R131245:131253 VST.veric.initial_world <> find_id_e thm
R131405:131422 VST.veric.initial_world <> find_id_In_map_fst thm
R131405:131422 VST.veric.initial_world <> find_id_In_map_fst thm
R131437:131447 VST.floyd.VSU <> Comp_G_elim thm
R131437:131447 VST.floyd.VSU <> Comp_G_elim thm
R131564:131577 VST.floyd.VSU <> Fundef_of_Gfun thm
R131564:131577 VST.floyd.VSU <> Fundef_of_Gfun thm
R131612:131618 Coq.Init.Logic <> eq_refl constr
R131612:131618 Coq.Init.Logic <> eq_refl constr
R131644:131650 VST.veric.initial_world <> find_id def
R131655:131664 VST.veric.Clight_initial_world <> prog_funct syndef
R131666:131667 VST.floyd.VSU <> ComponentJoin.p1 var
R131644:131650 VST.veric.initial_world <> find_id def
R131655:131664 VST.veric.Clight_initial_world <> prog_funct syndef
R131666:131667 VST.floyd.VSU <> ComponentJoin.p1 var
R131789:131807 compcert.lib.Coqlib <> list_disjoint_notin thm
R131811:131822 VST.floyd.VSU <> ComponentJoin.Externs2_Hyp var
R131789:131807 compcert.lib.Coqlib <> list_disjoint_notin thm
R131811:131822 VST.floyd.VSU <> ComponentJoin.Externs2_Hyp var
R131851:131864 VST.floyd.VSU <> Gfun_of_Fundef thm
R131851:131864 VST.floyd.VSU <> Gfun_of_Fundef thm
R131882:131889 VST.floyd.VSU <> IntIDs_i thm
R131882:131889 VST.floyd.VSU <> IntIDs_i thm
R131916:131917 VST.floyd.VSU <> ComponentJoin.c1 var
R131916:131917 VST.floyd.VSU <> ComponentJoin.c1 var
R131996:132007 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R132026:132032 Coq.Init.Logic <> eq_refl constr
R132014:132020 Coq.Init.Logic <> eq_refl constr
R131996:132007 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R132026:132032 Coq.Init.Logic <> eq_refl constr
R132014:132020 Coq.Init.Logic <> eq_refl constr
R132066:132077 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R132103:132104 VST.floyd.VSU <> ComponentJoin.FP var
R132103:132104 VST.floyd.VSU <> ComponentJoin.FP var
R132103:132104 VST.floyd.VSU <> ComponentJoin.FP var
R132246:132266 VST.floyd.VSU <> ExternalInfo_envs_sub thm
R132246:132266 VST.floyd.VSU <> ExternalInfo_envs_sub thm
R132324:132337 VST.floyd.VSU <> Gfun_of_Fundef thm
R132324:132337 VST.floyd.VSU <> Gfun_of_Fundef thm
R132355:132358 VST.floyd.VSU <> ComponentJoin.LNRp var
R132355:132358 VST.floyd.VSU <> ComponentJoin.LNRp var
R132382:132413 VST.veric.semax_prog <> find_funct_ptr_exists thm
R132382:132413 VST.veric.semax_prog <> find_funct_ptr_exists thm
R132422:132425 VST.floyd.VSU <> ComponentJoin.LNRp var
R132422:132425 VST.floyd.VSU <> ComponentJoin.LNRp var
R132435:132443 VST.veric.initial_world <> find_id_e thm
R132435:132443 VST.veric.initial_world <> find_id_e thm
R132519:132520 VST.floyd.VSU <> ComponentJoin.FP var
R132519:132520 VST.floyd.VSU <> ComponentJoin.FP var
R132519:132520 VST.floyd.VSU <> ComponentJoin.FP var
R132659:132679 VST.floyd.VSU <> ExternalInfo_envs_sub thm
R132659:132679 VST.floyd.VSU <> ExternalInfo_envs_sub thm
R132737:132750 VST.floyd.VSU <> Gfun_of_Fundef thm
R132737:132750 VST.floyd.VSU <> Gfun_of_Fundef thm
R132768:132771 VST.floyd.VSU <> ComponentJoin.LNRp var
R132768:132771 VST.floyd.VSU <> ComponentJoin.LNRp var
R132795:132826 VST.veric.semax_prog <> find_funct_ptr_exists thm
R132795:132826 VST.veric.semax_prog <> find_funct_ptr_exists thm
R132835:132838 VST.floyd.VSU <> ComponentJoin.LNRp var
R132835:132838 VST.floyd.VSU <> ComponentJoin.LNRp var
R132848:132856 VST.veric.initial_world <> find_id_e thm
R132848:132856 VST.veric.initial_world <> find_id_e thm
R132912:132925 VST.floyd.VSU <> Fundef_of_Gfun thm
R132912:132925 VST.floyd.VSU <> Fundef_of_Gfun thm
R132995:133001 Coq.Init.Logic <> eq_refl constr
R132983:132989 Coq.Init.Logic <> eq_refl constr
R132995:133001 Coq.Init.Logic <> eq_refl constr
R132983:132989 Coq.Init.Logic <> eq_refl constr
R133029:133042 VST.floyd.VSU <> SF_subsumespec thm
R133123:133134 VST.floyd.VSU <> Comp_ctx_LNR thm
R133136:133137 VST.floyd.VSU <> ComponentJoin.c2 var
R133069:133103 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R133063:133065 VST.floyd.VSU <> ComponentJoin.HV2 var
R133052:133052 VST.floyd.VSU <> ComponentJoin.V var
R133029:133042 VST.floyd.VSU <> SF_subsumespec thm
R133123:133134 VST.floyd.VSU <> Comp_ctx_LNR thm
R133136:133137 VST.floyd.VSU <> ComponentJoin.c2 var
R133069:133103 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R133063:133065 VST.floyd.VSU <> ComponentJoin.HV2 var
R133052:133052 VST.floyd.VSU <> ComponentJoin.V var
R133198:133204 VST.veric.initial_world <> find_id def
R133209:133218 VST.veric.Clight_initial_world <> prog_funct syndef
R133220:133221 VST.floyd.VSU <> ComponentJoin.p1 var
R133198:133204 VST.veric.initial_world <> find_id def
R133209:133218 VST.veric.Clight_initial_world <> prog_funct syndef
R133220:133221 VST.floyd.VSU <> ComponentJoin.p1 var
R133316:133327 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R133346:133352 Coq.Init.Logic <> eq_refl constr
R133334:133340 Coq.Init.Logic <> eq_refl constr
R133316:133327 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R133346:133352 Coq.Init.Logic <> eq_refl constr
R133334:133340 Coq.Init.Logic <> eq_refl constr
R133386:133397 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R133423:133424 VST.floyd.VSU <> ComponentJoin.FP var
R133423:133424 VST.floyd.VSU <> ComponentJoin.FP var
R133423:133424 VST.floyd.VSU <> ComponentJoin.FP var
R133489:133509 VST.floyd.VSU <> InternalInfo_envs_sub thm
R133516:133529 compcert.common.Globalenvs Genv globalenv def
R133531:133532 VST.floyd.VSU <> ComponentJoin.p2 var
R133511:133513 VST.floyd.VSU <> ComponentJoin.CS2 var
R133489:133509 VST.floyd.VSU <> InternalInfo_envs_sub thm
R133516:133529 compcert.common.Globalenvs Genv globalenv def
R133531:133532 VST.floyd.VSU <> ComponentJoin.p2 var
R133511:133513 VST.floyd.VSU <> ComponentJoin.CS2 var
R133590:133603 VST.floyd.VSU <> Gfun_of_Fundef thm
R133590:133603 VST.floyd.VSU <> Gfun_of_Fundef thm
R133621:133624 VST.floyd.VSU <> ComponentJoin.LNRp var
R133621:133624 VST.floyd.VSU <> ComponentJoin.LNRp var
R133648:133679 VST.veric.semax_prog <> find_funct_ptr_exists thm
R133648:133679 VST.veric.semax_prog <> find_funct_ptr_exists thm
R133688:133691 VST.floyd.VSU <> ComponentJoin.LNRp var
R133688:133691 VST.floyd.VSU <> ComponentJoin.LNRp var
R133701:133709 VST.veric.initial_world <> find_id_e thm
R133701:133709 VST.veric.initial_world <> find_id_e thm
R133753:133764 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R133783:133789 Coq.Init.Logic <> eq_refl constr
R133771:133777 Coq.Init.Logic <> eq_refl constr
R133753:133764 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R133783:133789 Coq.Init.Logic <> eq_refl constr
R133771:133777 Coq.Init.Logic <> eq_refl constr
R133844:133855 VST.floyd.VSU <> ComponentJoin.FundefsMatch var
R133903:133904 VST.floyd.VSU <> ComponentJoin.FP var
R133903:133904 VST.floyd.VSU <> ComponentJoin.FP var
R133903:133904 VST.floyd.VSU <> ComponentJoin.FP var
R133948:133968 VST.floyd.VSU <> InternalInfo_envs_sub thm
R133975:133988 compcert.common.Globalenvs Genv globalenv def
R133990:133991 VST.floyd.VSU <> ComponentJoin.p2 var
R133970:133972 VST.floyd.VSU <> ComponentJoin.CS2 var
R133948:133968 VST.floyd.VSU <> InternalInfo_envs_sub thm
R133975:133988 compcert.common.Globalenvs Genv globalenv def
R133990:133991 VST.floyd.VSU <> ComponentJoin.p2 var
R133970:133972 VST.floyd.VSU <> ComponentJoin.CS2 var
R134054:134067 VST.floyd.VSU <> Gfun_of_Fundef thm
R134054:134067 VST.floyd.VSU <> Gfun_of_Fundef thm
R134085:134088 VST.floyd.VSU <> ComponentJoin.LNRp var
R134085:134088 VST.floyd.VSU <> ComponentJoin.LNRp var
R134117:134148 VST.veric.semax_prog <> find_funct_ptr_exists thm
R134117:134148 VST.veric.semax_prog <> find_funct_ptr_exists thm
R134157:134160 VST.floyd.VSU <> ComponentJoin.LNRp var
R134157:134160 VST.floyd.VSU <> ComponentJoin.LNRp var
R134170:134178 VST.veric.initial_world <> find_id_e thm
R134170:134178 VST.veric.initial_world <> find_id_e thm
R134254:134255 VST.floyd.VSU <> ComponentJoin.FP var
R134254:134255 VST.floyd.VSU <> ComponentJoin.FP var
R134254:134255 VST.floyd.VSU <> ComponentJoin.FP var
R134297:134317 VST.floyd.VSU <> InternalInfo_envs_sub thm
R134324:134337 compcert.common.Globalenvs Genv globalenv def
R134339:134340 VST.floyd.VSU <> ComponentJoin.p2 var
R134319:134321 VST.floyd.VSU <> ComponentJoin.CS2 var
R134297:134317 VST.floyd.VSU <> InternalInfo_envs_sub thm
R134324:134337 compcert.common.Globalenvs Genv globalenv def
R134339:134340 VST.floyd.VSU <> ComponentJoin.p2 var
R134319:134321 VST.floyd.VSU <> ComponentJoin.CS2 var
R134403:134416 VST.floyd.VSU <> Gfun_of_Fundef thm
R134403:134416 VST.floyd.VSU <> Gfun_of_Fundef thm
R134434:134437 VST.floyd.VSU <> ComponentJoin.LNRp var
R134434:134437 VST.floyd.VSU <> ComponentJoin.LNRp var
R134466:134497 VST.veric.semax_prog <> find_funct_ptr_exists thm
R134466:134497 VST.veric.semax_prog <> find_funct_ptr_exists thm
R134506:134509 VST.floyd.VSU <> ComponentJoin.LNRp var
R134506:134509 VST.floyd.VSU <> ComponentJoin.LNRp var
R134519:134527 VST.veric.initial_world <> find_id_e thm
R134519:134527 VST.veric.initial_world <> find_id_e thm
R134629:134630 VST.floyd.VSU <> HC def
R134629:134630 VST.floyd.VSU <> HC def
R134650:134669 VST.floyd.VSU <> G_merge_find_id_Some thm
R134675:134690 VST.floyd.VSU <> Comp_Exports_LNR proj
R134692:134693 VST.floyd.VSU <> ComponentJoin.c2 var
R134650:134669 VST.floyd.VSU <> G_merge_find_id_Some thm
R134675:134690 VST.floyd.VSU <> Comp_Exports_LNR proj
R134692:134693 VST.floyd.VSU <> ComponentJoin.c2 var
R134733:134734 VST.floyd.VSU <> ComponentJoin.FP var
R134733:134734 VST.floyd.VSU <> ComponentJoin.FP var
R134763:134769 VST.veric.initial_world <> find_id def
R134774:134779 VST.floyd.VSU <> Comp_G def
R134781:134782 VST.floyd.VSU <> ComponentJoin.c1 var
R134763:134769 VST.veric.initial_world <> find_id def
R134774:134779 VST.floyd.VSU <> Comp_G def
R134781:134782 VST.floyd.VSU <> ComponentJoin.c1 var
R134851:134857 VST.veric.initial_world <> find_id def
R134862:134867 VST.floyd.VSU <> Comp_G def
R134869:134870 VST.floyd.VSU <> ComponentJoin.c2 var
R134851:134857 VST.veric.initial_world <> find_id def
R134862:134867 VST.floyd.VSU <> Comp_G def
R134869:134870 VST.floyd.VSU <> ComponentJoin.c2 var
R135071:135073 Coq.Init.Logic <> ::type_scope:x_'='_x not
R135048:135065 VST.veric.seplog <> typesig_of_funspec def
R135074:135091 VST.veric.seplog <> typesig_of_funspec def
R135071:135073 Coq.Init.Logic <> ::type_scope:x_'='_x not
R135048:135065 VST.veric.seplog <> typesig_of_funspec def
R135074:135091 VST.veric.seplog <> typesig_of_funspec def
R135160:135184 VST.floyd.VSU <> Calling_conventions_match thm
R135160:135184 VST.floyd.VSU <> Calling_conventions_match thm
R135231:135254 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R135231:135254 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R135378:135399 VST.veric.seplog <> binaryintersection_sub thm
R135378:135399 VST.veric.seplog <> binaryintersection_sub thm
R135462:135468 VST.veric.initial_world <> find_id def
R135472:135479 VST.floyd.VSU <> ComponentJoin.Exports1 var
R135462:135468 VST.veric.initial_world <> find_id def
R135472:135479 VST.floyd.VSU <> ComponentJoin.Exports1 var
R135563:135576 VST.floyd.VSU <> Comp_G_Exports proj
R135578:135579 VST.floyd.VSU <> ComponentJoin.c1 var
R135563:135576 VST.floyd.VSU <> Comp_G_Exports proj
R135578:135579 VST.floyd.VSU <> ComponentJoin.c1 var
R135631:135636 VST.floyd.VSU <> Comp_G def
R135700:135706 VST.veric.initial_world <> find_id def
R135710:135717 VST.floyd.VSU <> ComponentJoin.Exports2 var
R135700:135706 VST.veric.initial_world <> find_id def
R135710:135717 VST.floyd.VSU <> ComponentJoin.Exports2 var
R135805:135821 VST.veric.seplog <> funspec_sub_trans thm
R135805:135821 VST.veric.seplog <> funspec_sub_trans thm
R135865:135878 VST.floyd.VSU <> Comp_G_Exports proj
R135880:135881 VST.floyd.VSU <> ComponentJoin.c2 var
R135865:135878 VST.floyd.VSU <> Comp_G_Exports proj
R135880:135881 VST.floyd.VSU <> ComponentJoin.c2 var
R135933:135938 VST.floyd.VSU <> Comp_G def
R136136:136137 Coq.Init.Logic <> ::type_scope:x_'='_x not
R136113:136130 VST.veric.seplog <> typesig_of_funspec def
R136138:136155 VST.veric.seplog <> typesig_of_funspec def
R136136:136137 Coq.Init.Logic <> ::type_scope:x_'='_x not
R136113:136130 VST.veric.seplog <> typesig_of_funspec def
R136138:136155 VST.veric.seplog <> typesig_of_funspec def
R136609:136611 Coq.Init.Logic <> ::type_scope:x_'='_x not
R136576:136603 VST.veric.seplog <> callingconvention_of_funspec def
R136612:136639 VST.veric.seplog <> callingconvention_of_funspec def
R136609:136611 Coq.Init.Logic <> ::type_scope:x_'='_x not
R136576:136603 VST.veric.seplog <> callingconvention_of_funspec def
R136612:136639 VST.veric.seplog <> callingconvention_of_funspec def
R136690:136703 VST.floyd.VSU <> funspec_sub_cc thm
R136690:136703 VST.floyd.VSU <> funspec_sub_cc thm
R136720:136733 VST.floyd.VSU <> funspec_sub_cc thm
R136720:136733 VST.floyd.VSU <> funspec_sub_cc thm
R136812:136835 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R136812:136835 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R136963:136986 VST.veric.seplog <> BINARY_intersection_sub3 thm
R136963:136986 VST.veric.seplog <> BINARY_intersection_sub3 thm
R137025:137041 VST.veric.seplog <> funspec_sub_trans thm
R137025:137041 VST.veric.seplog <> funspec_sub_trans thm
R137079:137095 VST.veric.seplog <> funspec_sub_trans thm
R137079:137095 VST.veric.seplog <> funspec_sub_trans thm
R137136:137149 VST.floyd.VSU <> Comp_G_Exports proj
R137151:137152 VST.floyd.VSU <> ComponentJoin.c2 var
R137136:137149 VST.floyd.VSU <> Comp_G_Exports proj
R137151:137152 VST.floyd.VSU <> ComponentJoin.c2 var
R137201:137206 VST.floyd.VSU <> Comp_G def
R137267:137283 VST.veric.seplog <> funspec_sub_trans thm
R137267:137283 VST.veric.seplog <> funspec_sub_trans thm
R137321:137344 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R137321:137344 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R137321:137344 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R137376:137382 VST.veric.initial_world <> find_id def
R137386:137393 VST.floyd.VSU <> ComponentJoin.Exports1 var
R137376:137382 VST.veric.initial_world <> find_id def
R137386:137393 VST.floyd.VSU <> ComponentJoin.Exports1 var
R137511:137524 VST.floyd.VSU <> Comp_G_Exports proj
R137526:137527 VST.floyd.VSU <> ComponentJoin.c1 var
R137511:137524 VST.floyd.VSU <> Comp_G_Exports proj
R137526:137527 VST.floyd.VSU <> ComponentJoin.c1 var
R137567:137572 VST.floyd.VSU <> Comp_G def
R137631:137647 VST.veric.seplog <> funspec_sub_trans thm
R137631:137647 VST.veric.seplog <> funspec_sub_trans thm
R137762:137780 VST.veric.SeparationLogic <> type_of_funspec_sub thm
R137762:137780 VST.veric.SeparationLogic <> type_of_funspec_sub thm
R137837:137843 VST.veric.initial_world <> find_id def
R137847:137854 VST.floyd.VSU <> ComponentJoin.Exports2 var
R137837:137843 VST.veric.initial_world <> find_id def
R137847:137854 VST.floyd.VSU <> ComponentJoin.Exports2 var
R137927:137940 VST.floyd.VSU <> Comp_G_Exports proj
R137942:137943 VST.floyd.VSU <> ComponentJoin.c2 var
R137927:137940 VST.floyd.VSU <> Comp_G_Exports proj
R137942:137943 VST.floyd.VSU <> ComponentJoin.c2 var
R137991:137996 VST.floyd.VSU <> Comp_G def
R138045:138060 VST.veric.seplog <> funspec_sub_refl thm
R138045:138060 VST.veric.seplog <> funspec_sub_refl thm
R138126:138139 VST.floyd.VSU <> Comp_G_Exports proj
R138141:138142 VST.floyd.VSU <> ComponentJoin.c2 var
R138126:138139 VST.floyd.VSU <> Comp_G_Exports proj
R138141:138142 VST.floyd.VSU <> ComponentJoin.c2 var
R138185:138190 VST.floyd.VSU <> Comp_G def
R138229:138235 VST.veric.initial_world <> find_id def
R138239:138246 VST.floyd.VSU <> ComponentJoin.Exports1 var
R138229:138235 VST.veric.initial_world <> find_id def
R138239:138246 VST.floyd.VSU <> ComponentJoin.Exports1 var
R138316:138329 VST.floyd.VSU <> Comp_G_Exports proj
R138331:138332 VST.floyd.VSU <> ComponentJoin.c1 var
R138316:138329 VST.floyd.VSU <> Comp_G_Exports proj
R138331:138332 VST.floyd.VSU <> ComponentJoin.c1 var
R138373:138378 VST.floyd.VSU <> Comp_G def
R138418:138431 VST.floyd.VSU <> Comp_G_Exports proj
R138433:138434 VST.floyd.VSU <> ComponentJoin.c2 var
R138418:138431 VST.floyd.VSU <> Comp_G_Exports proj
R138433:138434 VST.floyd.VSU <> ComponentJoin.c2 var
R138474:138479 VST.floyd.VSU <> Comp_G def
R138502:138525 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R138502:138525 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R138502:138525 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R138502:138525 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R138591:138600 VST.floyd.VSU <> Comp_G_LNR proj
R138602:138603 VST.floyd.VSU <> ComponentJoin.c2 var
R138591:138600 VST.floyd.VSU <> Comp_G_LNR proj
R138602:138603 VST.floyd.VSU <> ComponentJoin.c2 var
R139636:139648 VST.msl.seplog <> derives_trans meth
R139636:139648 VST.msl.seplog <> derives_trans meth
R139663:139676 VST.msl.seplog <> sepcon_derives meth
R139688:139702 VST.floyd.VSU <> Comp_MkInitPred proj
R139704:139705 VST.floyd.VSU <> ComponentJoin.c1 var
R139720:139734 VST.floyd.VSU <> Comp_MkInitPred proj
R139736:139737 VST.floyd.VSU <> ComponentJoin.c2 var
R139663:139676 VST.msl.seplog <> sepcon_derives meth
R139688:139702 VST.floyd.VSU <> Comp_MkInitPred proj
R139704:139705 VST.floyd.VSU <> ComponentJoin.c1 var
R139720:139734 VST.floyd.VSU <> Comp_MkInitPred proj
R139736:139737 VST.floyd.VSU <> ComponentJoin.c2 var
R139825:139831 VST.floyd.VSU <> Vardefs def
R139850:139863 VST.floyd.VSU <> InitGPred_join thm
R139879:139880 VST.floyd.VSU <> ComponentJoin.VD var
R139875:139877 VST.floyd.VSU <> ComponentJoin.VD2 var
R139871:139873 VST.floyd.VSU <> ComponentJoin.VD1 var
R139850:139863 VST.floyd.VSU <> InitGPred_join thm
R139879:139880 VST.floyd.VSU <> ComponentJoin.VD var
R139875:139877 VST.floyd.VSU <> ComponentJoin.VD2 var
R139871:139873 VST.floyd.VSU <> ComponentJoin.VD1 var
R139850:139863 VST.floyd.VSU <> InitGPred_join thm
R139879:139880 VST.floyd.VSU <> ComponentJoin.VD var
R139875:139877 VST.floyd.VSU <> ComponentJoin.VD2 var
R139871:139873 VST.floyd.VSU <> ComponentJoin.VD1 var
R139850:139863 VST.floyd.VSU <> InitGPred_join thm
R139879:139880 VST.floyd.VSU <> ComponentJoin.VD var
R139875:139877 VST.floyd.VSU <> ComponentJoin.VD2 var
R139871:139873 VST.floyd.VSU <> ComponentJoin.VD1 var
R139850:139863 VST.floyd.VSU <> InitGPred_join thm
R139879:139880 VST.floyd.VSU <> ComponentJoin.VD var
R139875:139877 VST.floyd.VSU <> ComponentJoin.VD2 var
R139871:139873 VST.floyd.VSU <> ComponentJoin.VD1 var
R139903:139915 VST.floyd.VSU ComponentJoin <> sec
sec 139927:139933 <> VSULink
var 139946:139950 VSULink Espec
R139953:139962 VST.veric.juicy_extspec <> OracleKind class
var 139974:139975 VSULink V1
var 139977:139978 VSULink V2
var 139980:139980 VSULink V
R139983:139990 VST.veric.mpred <> varspecs def
var 140002:140004 VSULink cs1
var 140006:140008 VSULink cs2
var 140010:140011 VSULink cs
R140014:140022 VST.veric.mpred <> compspecs class
var 140035:140036 VSULink E1
var 140038:140045 VSULink Imports1
var 140047:140054 VSULink Exports1
var 140056:140057 VSULink E2
var 140059:140066 VSULink Imports2
var 140068:140075 VSULink Exports2
var 140077:140077 VSULink E
var 140079:140085 VSULink Imports
var 140087:140093 VSULink Exports
R140096:140103 VST.veric.mpred <> funspecs def
var 140115:140116 VSULink p1
var 140118:140119 VSULink p2
var 140121:140121 VSULink p
R140124:140137 compcert.cfrontend.Clight <> program def
var 140149:140151 VSULink GP1
var 140153:140155 VSULink GP2
R140165:140168 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R140169:140173 VST.veric.mpred <> mpred def
R140158:140164 VST.veric.SeparationLogic <> globals def
var 140185:140188 VSULink vsu1
R140192:140194 VST.floyd.VSU <> VSU def
R140233:140235 VST.floyd.VSU <> VSULink.GP1 var
R140224:140231 VST.floyd.VSU <> VSULink.Exports1 var
R140221:140222 VST.floyd.VSU <> VSULink.p1 var
R140212:140219 VST.floyd.VSU <> VSULink.Imports1 var
R140209:140210 VST.floyd.VSU <> VSULink.E1 var
R140205:140207 VST.floyd.VSU <> VSULink.cs1 var
R140202:140203 VST.floyd.VSU <> VSULink.V1 var
R140196:140200 VST.floyd.VSU <> VSULink.Espec var
var 140247:140250 VSULink vsu2
R140254:140256 VST.floyd.VSU <> VSU def
R140295:140297 VST.floyd.VSU <> VSULink.GP2 var
R140286:140293 VST.floyd.VSU <> VSULink.Exports2 var
R140283:140284 VST.floyd.VSU <> VSULink.p2 var
R140274:140281 VST.floyd.VSU <> VSULink.Imports2 var
R140271:140272 VST.floyd.VSU <> VSULink.E2 var
R140267:140269 VST.floyd.VSU <> VSULink.cs2 var
R140264:140265 VST.floyd.VSU <> VSULink.V2 var
R140258:140262 VST.floyd.VSU <> VSULink.Espec var
var 140310:140325 VSULink DisjointVarspecs
R140328:140340 compcert.lib.Coqlib <> list_disjoint def
R140356:140358 Coq.Lists.List <> map def
R140364:140365 VST.floyd.VSU <> VSULink.V2 var
R140360:140362 Coq.Init.Datatypes <> fst def
R140343:140345 Coq.Lists.List <> map def
R140351:140352 VST.floyd.VSU <> VSULink.V1 var
R140347:140349 Coq.Init.Datatypes <> fst def
var 140378:140382 VSULink HV1p1
R140385:140397 compcert.lib.Coqlib <> list_disjoint def
R140413:140415 Coq.Lists.List <> map def
R140422:140431 VST.veric.Clight_initial_world <> prog_funct syndef
R140433:140434 VST.floyd.VSU <> VSULink.p1 var
R140417:140419 Coq.Init.Datatypes <> fst def
R140400:140402 Coq.Lists.List <> map def
R140408:140409 VST.floyd.VSU <> VSULink.V1 var
R140404:140406 Coq.Init.Datatypes <> fst def
var 140448:140452 VSULink HV1p2
R140455:140467 compcert.lib.Coqlib <> list_disjoint def
R140483:140485 Coq.Lists.List <> map def
R140492:140501 VST.veric.Clight_initial_world <> prog_funct syndef
R140503:140504 VST.floyd.VSU <> VSULink.p2 var
R140487:140489 Coq.Init.Datatypes <> fst def
R140470:140472 Coq.Lists.List <> map def
R140478:140479 VST.floyd.VSU <> VSULink.V1 var
R140474:140476 Coq.Init.Datatypes <> fst def
var 140518:140522 VSULink HV2p1
R140525:140537 compcert.lib.Coqlib <> list_disjoint def
R140553:140555 Coq.Lists.List <> map def
R140562:140571 VST.veric.Clight_initial_world <> prog_funct syndef
R140573:140574 VST.floyd.VSU <> VSULink.p1 var
R140557:140559 Coq.Init.Datatypes <> fst def
R140540:140542 Coq.Lists.List <> map def
R140548:140549 VST.floyd.VSU <> VSULink.V2 var
R140544:140546 Coq.Init.Datatypes <> fst def
var 140588:140592 VSULink HV2p2
R140595:140607 compcert.lib.Coqlib <> list_disjoint def
R140623:140625 Coq.Lists.List <> map def
R140632:140641 VST.veric.Clight_initial_world <> prog_funct syndef
R140643:140644 VST.floyd.VSU <> VSULink.p2 var
R140627:140629 Coq.Init.Datatypes <> fst def
R140610:140612 Coq.Lists.List <> map def
R140618:140619 VST.floyd.VSU <> VSULink.V2 var
R140614:140616 Coq.Init.Datatypes <> fst def
var 140658:140663 VSULink LNR_V1
R140666:140677 compcert.lib.Coqlib <> list_norepet ind
R140680:140682 Coq.Lists.List <> map def
R140688:140689 VST.floyd.VSU <> VSULink.V1 var
R140684:140686 Coq.Init.Datatypes <> fst def
var 140702:140707 VSULink LNR_V2
R140710:140721 compcert.lib.Coqlib <> list_norepet ind
R140724:140726 Coq.Lists.List <> map def
R140732:140733 VST.floyd.VSU <> VSULink.V2 var
R140728:140730 Coq.Init.Datatypes <> fst def
var 140746:140748 VSULink CS1
R140751:140760 VST.veric.expr <> cspecs_sub def
R140766:140767 VST.floyd.VSU <> VSULink.cs var
R140762:140764 VST.floyd.VSU <> VSULink.cs1 var
var 140779:140781 VSULink CS2
R140784:140793 VST.veric.expr <> cspecs_sub def
R140799:140800 VST.floyd.VSU <> VSULink.cs var
R140795:140797 VST.floyd.VSU <> VSULink.cs2 var
var 140813:140815 VSULink HV1
binder 140825:140825 <> i:976
binder 140827:140829 <> phi:977
R140855:140858 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R140870:140872 Coq.Init.Logic <> ::type_scope:x_'='_x not
R140859:140865 VST.veric.initial_world <> find_id def
R140869:140869 VST.floyd.VSU <> VSULink.V var
R140867:140867 VST.floyd.VSU <> i:976 var
R140873:140876 Coq.Init.Datatypes <> Some constr
R140878:140880 VST.floyd.VSU <> phi:977 var
R140844:140846 Coq.Init.Logic <> ::type_scope:x_'='_x not
R140832:140838 VST.veric.initial_world <> find_id def
R140842:140843 VST.floyd.VSU <> VSULink.V1 var
R140840:140840 VST.floyd.VSU <> i:976 var
R140847:140850 Coq.Init.Datatypes <> Some constr
R140852:140854 VST.floyd.VSU <> phi:977 var
var 140892:140894 VSULink HV2
binder 140904:140904 <> i:979
binder 140906:140908 <> phi:980
R140934:140937 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R140949:140951 Coq.Init.Logic <> ::type_scope:x_'='_x not
R140938:140944 VST.veric.initial_world <> find_id def
R140948:140948 VST.floyd.VSU <> VSULink.V var
R140946:140946 VST.floyd.VSU <> i:979 var
R140952:140955 Coq.Init.Datatypes <> Some constr
R140957:140959 VST.floyd.VSU <> phi:980 var
R140923:140925 Coq.Init.Logic <> ::type_scope:x_'='_x not
R140911:140917 VST.veric.initial_world <> find_id def
R140921:140922 VST.floyd.VSU <> VSULink.V2 var
R140919:140919 VST.floyd.VSU <> i:979 var
R140926:140929 Coq.Init.Datatypes <> Some constr
R140931:140933 VST.floyd.VSU <> phi:980 var
var 140972:140983 VSULink FundefsMatch
R140986:140998 VST.floyd.VSU <> Fundefs_match def
R141015:141022 VST.floyd.VSU <> VSULink.Imports2 var
R141006:141013 VST.floyd.VSU <> VSULink.Imports1 var
R141003:141004 VST.floyd.VSU <> VSULink.p2 var
R141000:141001 VST.floyd.VSU <> VSULink.p1 var
var 141035:141036 VSULink FP
binder 141046:141046 <> i:983
R141049:141067 VST.floyd.VSU <> Functions_preserved def
R141077:141077 VST.floyd.VSU <> i:983 var
R141075:141075 VST.floyd.VSU <> VSULink.p var
R141072:141073 VST.floyd.VSU <> VSULink.p2 var
R141069:141070 VST.floyd.VSU <> VSULink.p1 var
var 141155:141166 VSULink Externs1_Hyp
R141169:141181 compcert.lib.Coqlib <> list_disjoint def
R141197:141202 VST.floyd.VSU <> IntIDs def
R141204:141205 VST.floyd.VSU <> VSULink.p2 var
R141184:141186 Coq.Lists.List <> map def
R141192:141193 VST.floyd.VSU <> VSULink.E1 var
R141188:141190 Coq.Init.Datatypes <> fst def
var 141218:141229 VSULink Externs2_Hyp
R141232:141244 compcert.lib.Coqlib <> list_disjoint def
R141260:141265 VST.floyd.VSU <> IntIDs def
R141267:141268 VST.floyd.VSU <> VSULink.p1 var
R141247:141249 Coq.Lists.List <> map def
R141255:141256 VST.floyd.VSU <> VSULink.E2 var
R141251:141253 Coq.Init.Datatypes <> fst def
var 141282:141291 VSULink ExternsHyp
R141295:141297 Coq.Init.Logic <> ::type_scope:x_'='_x not
R141294:141294 VST.floyd.VSU <> VSULink.E var
R141298:141304 VST.floyd.VSU <> G_merge def
R141309:141310 VST.floyd.VSU <> VSULink.E2 var
R141306:141307 VST.floyd.VSU <> VSULink.E1 var
var 141697:141699 VSULink SC1
binder 141709:141709 <> i:988
binder 141711:141714 <> phiI:989
R141747:141750 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R141781:141798 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R141799:141805 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R141810:141811 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 141806:141809 <> phiE:990
R141842:141845 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R141830:141832 Coq.Init.Logic <> ::type_scope:x_'='_x not
R141812:141818 VST.veric.initial_world <> find_id def
R141822:141829 VST.floyd.VSU <> VSULink.Exports1 var
R141820:141820 VST.floyd.VSU <> i:988 var
R141833:141836 Coq.Init.Datatypes <> Some constr
R141838:141841 VST.floyd.VSU <> phiE:990 var
R141846:141856 VST.veric.SeparationLogic <> funspec_sub def
R141863:141866 VST.floyd.VSU <> phiI:989 var
R141858:141861 VST.floyd.VSU <> phiE:990 var
R141751:141752 Coq.Lists.List <> In def
R141767:141770 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R141757:141759 Coq.Lists.List <> map def
R141765:141766 VST.floyd.VSU <> VSULink.E1 var
R141761:141763 Coq.Init.Datatypes <> fst def
R141771:141776 VST.floyd.VSU <> IntIDs def
R141778:141779 VST.floyd.VSU <> VSULink.p1 var
R141754:141754 VST.floyd.VSU <> i:988 var
R141735:141737 Coq.Init.Logic <> ::type_scope:x_'='_x not
R141717:141723 VST.veric.initial_world <> find_id def
R141727:141734 VST.floyd.VSU <> VSULink.Imports2 var
R141725:141725 VST.floyd.VSU <> i:988 var
R141738:141741 Coq.Init.Datatypes <> Some constr
R141743:141746 VST.floyd.VSU <> phiI:989 var
var 141901:141903 VSULink SC2
binder 141913:141913 <> i:992
binder 141915:141918 <> phiI:993
R141951:141954 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R141985:142014 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R142015:142021 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R142026:142027 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 142022:142025 <> phiE:994
R142058:142061 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R142046:142048 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142028:142034 VST.veric.initial_world <> find_id def
R142038:142045 VST.floyd.VSU <> VSULink.Exports2 var
R142036:142036 VST.floyd.VSU <> i:992 var
R142049:142052 Coq.Init.Datatypes <> Some constr
R142054:142057 VST.floyd.VSU <> phiE:994 var
R142062:142072 VST.veric.SeparationLogic <> funspec_sub def
R142079:142082 VST.floyd.VSU <> phiI:993 var
R142074:142077 VST.floyd.VSU <> phiE:994 var
R141955:141956 Coq.Lists.List <> In def
R141971:141974 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R141961:141963 Coq.Lists.List <> map def
R141969:141970 VST.floyd.VSU <> VSULink.E2 var
R141965:141967 Coq.Init.Datatypes <> fst def
R141975:141980 VST.floyd.VSU <> IntIDs def
R141982:141983 VST.floyd.VSU <> VSULink.p2 var
R141958:141958 VST.floyd.VSU <> i:992 var
R141939:141941 Coq.Init.Logic <> ::type_scope:x_'='_x not
R141921:141927 VST.veric.initial_world <> find_id def
R141931:141938 VST.floyd.VSU <> VSULink.Imports1 var
R141929:141929 VST.floyd.VSU <> i:992 var
R141942:141945 Coq.Init.Datatypes <> Some constr
R141947:141950 VST.floyd.VSU <> phiI:993 var
var 142095:142102 VSULink HImports
binder 142112:142112 <> i:996
binder 142114:142117 <> phi1:997
binder 142119:142122 <> phi2:998
R142155:142158 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R142189:142192 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R142197:142197 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142193:142196 VST.floyd.VSU <> phi1:997 var
R142198:142201 VST.floyd.VSU <> phi2:998 var
R142177:142179 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142159:142165 VST.veric.initial_world <> find_id def
R142169:142176 VST.floyd.VSU <> VSULink.Imports2 var
R142167:142167 VST.floyd.VSU <> i:996 var
R142180:142183 Coq.Init.Datatypes <> Some constr
R142185:142188 VST.floyd.VSU <> phi2:998 var
R142143:142145 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142125:142131 VST.veric.initial_world <> find_id def
R142135:142142 VST.floyd.VSU <> VSULink.Imports1 var
R142133:142133 VST.floyd.VSU <> i:996 var
R142146:142149 Coq.Init.Datatypes <> Some constr
R142151:142154 VST.floyd.VSU <> phi1:997 var
var 142214:142223 VSULink ImportsDef
R142233:142257 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142226:142232 VST.floyd.VSU <> VSULink.Imports var
R142341:142365 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R142258:142263 Coq.Lists.List <> filter def
R142333:142340 VST.floyd.VSU <> VSULink.Imports1 var
binder 142270:142270 <> x:1000
R142275:142278 Coq.Init.Datatypes <> negb def
R142281:142286 Coq.Lists.List <> in_dec thm
R142316:142319 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R142306:142308 Coq.Lists.List <> map def
R142314:142315 VST.floyd.VSU <> VSULink.E2 var
R142310:142312 Coq.Init.Datatypes <> fst def
R142320:142325 VST.floyd.VSU <> IntIDs def
R142327:142328 VST.floyd.VSU <> VSULink.p2 var
R142298:142300 Coq.Init.Datatypes <> fst def
R142302:142302 VST.floyd.VSU <> x:1000 var
R142288:142295 compcert.common.AST <> ident_eq def
R142366:142371 Coq.Lists.List <> filter def
R142461:142468 VST.floyd.VSU <> VSULink.Imports2 var
binder 142378:142378 <> x:1001
R142383:142386 Coq.Init.Datatypes <> negb def
R142389:142394 Coq.Lists.List <> in_dec thm
R142424:142427 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R142414:142416 Coq.Lists.List <> map def
R142422:142423 VST.floyd.VSU <> VSULink.E1 var
R142418:142420 Coq.Init.Datatypes <> fst def
R142437:142440 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R142428:142433 VST.floyd.VSU <> IntIDs def
R142435:142436 VST.floyd.VSU <> VSULink.p1 var
R142441:142443 Coq.Lists.List <> map def
R142449:142456 VST.floyd.VSU <> VSULink.Imports1 var
R142445:142447 Coq.Init.Datatypes <> fst def
R142406:142408 Coq.Init.Datatypes <> fst def
R142410:142410 VST.floyd.VSU <> x:1001 var
R142396:142403 compcert.common.AST <> ident_eq def
var 142481:142490 VSULink ExportsDef
R142500:142502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142493:142499 VST.floyd.VSU <> VSULink.Exports var
R142503:142509 VST.floyd.VSU <> G_merge def
R142520:142527 VST.floyd.VSU <> VSULink.Exports2 var
R142511:142518 VST.floyd.VSU <> VSULink.Exports1 var
var 142540:142543 VSULink LNRp
R142546:142557 compcert.lib.Coqlib <> list_norepet ind
R142560:142562 Coq.Lists.List <> map def
R142569:142577 compcert.cfrontend.Ctypes <> prog_defs proj
R142579:142579 VST.floyd.VSU <> VSULink.p var
R142564:142566 Coq.Init.Datatypes <> fst def
var 142593:142597 VSULink V_LNR
R142600:142611 compcert.lib.Coqlib <> list_norepet ind
R142614:142616 Coq.Lists.List <> map def
R142622:142622 VST.floyd.VSU <> VSULink.V var
R142618:142620 Coq.Init.Datatypes <> fst def
var 142635:142638 VSULink domV
binder 142648:142648 <> i:1006
R142667:142670 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R142688:142691 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R142671:142672 Coq.Lists.List <> In def
R142677:142679 Coq.Lists.List <> map def
R142685:142686 VST.floyd.VSU <> VSULink.V1 var
R142681:142683 Coq.Init.Datatypes <> fst def
R142674:142674 VST.floyd.VSU <> i:1006 var
R142692:142693 Coq.Lists.List <> In def
R142698:142700 Coq.Lists.List <> map def
R142706:142707 VST.floyd.VSU <> VSULink.V2 var
R142702:142704 Coq.Init.Datatypes <> fst def
R142695:142695 VST.floyd.VSU <> i:1006 var
R142651:142652 Coq.Lists.List <> In def
R142657:142659 Coq.Lists.List <> map def
R142665:142665 VST.floyd.VSU <> VSULink.V var
R142661:142663 Coq.Init.Datatypes <> fst def
R142654:142654 VST.floyd.VSU <> i:1006 var
var 142721:142723 VSULink VD1
R142746:142748 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142726:142728 Coq.Lists.List <> map def
R142735:142741 VST.floyd.VSU <> Vardefs def
R142743:142744 VST.floyd.VSU <> VSULink.p1 var
R142730:142732 Coq.Init.Datatypes <> fst def
R142749:142751 Coq.Lists.List <> map def
R142757:142758 VST.floyd.VSU <> VSULink.V1 var
R142753:142755 Coq.Init.Datatypes <> fst def
var 142770:142772 VSULink VD2
R142795:142797 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142775:142777 Coq.Lists.List <> map def
R142784:142790 VST.floyd.VSU <> Vardefs def
R142792:142793 VST.floyd.VSU <> VSULink.p2 var
R142779:142781 Coq.Init.Datatypes <> fst def
R142798:142800 Coq.Lists.List <> map def
R142806:142807 VST.floyd.VSU <> VSULink.V2 var
R142802:142804 Coq.Init.Datatypes <> fst def
var 142819:142820 VSULink VD
R142842:142844 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142823:142825 Coq.Lists.List <> map def
R142832:142838 VST.floyd.VSU <> Vardefs def
R142840:142840 VST.floyd.VSU <> VSULink.p var
R142827:142829 Coq.Init.Datatypes <> fst def
R142845:142847 Coq.Lists.List <> map def
R142853:142853 VST.floyd.VSU <> VSULink.V var
R142849:142851 Coq.Init.Datatypes <> fst def
var 142866:142874 VSULink HVardefs1
binder 142884:142884 <> i:1011
binder 142886:142886 <> d:1012
R142920:142923 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R142945:142947 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142924:142930 VST.veric.initial_world <> find_id def
R142935:142941 VST.floyd.VSU <> Vardefs def
R142943:142943 VST.floyd.VSU <> VSULink.p var
R142932:142932 VST.floyd.VSU <> i:1011 var
R142948:142951 Coq.Init.Datatypes <> Some constr
R142953:142953 VST.floyd.VSU <> d:1012 var
R142911:142913 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142889:142895 VST.veric.initial_world <> find_id def
R142900:142906 VST.floyd.VSU <> Vardefs def
R142908:142909 VST.floyd.VSU <> VSULink.p1 var
R142897:142897 VST.floyd.VSU <> i:1011 var
R142914:142917 Coq.Init.Datatypes <> Some constr
R142919:142919 VST.floyd.VSU <> d:1012 var
var 142965:142973 VSULink HVardefs2
binder 142983:142983 <> i:1014
binder 142985:142985 <> d:1015
R143019:143022 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R143044:143046 Coq.Init.Logic <> ::type_scope:x_'='_x not
R143023:143029 VST.veric.initial_world <> find_id def
R143034:143040 VST.floyd.VSU <> Vardefs def
R143042:143042 VST.floyd.VSU <> VSULink.p var
R143031:143031 VST.floyd.VSU <> i:1014 var
R143047:143050 Coq.Init.Datatypes <> Some constr
R143052:143052 VST.floyd.VSU <> d:1015 var
R143010:143012 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142988:142994 VST.veric.initial_world <> find_id def
R142999:143005 VST.floyd.VSU <> Vardefs def
R143007:143008 VST.floyd.VSU <> VSULink.p2 var
R142996:142996 VST.floyd.VSU <> i:1014 var
R143013:143016 Coq.Init.Datatypes <> Some constr
R143018:143018 VST.floyd.VSU <> d:1015 var
prf 143062:143068 <> VSULink
R143072:143074 VST.floyd.VSU <> VSU def
binder 143124:143125 <> gv:1017
R143136:143138 VST.msl.seplog <> ::logic:x_'*'_x not
R143130:143132 VST.floyd.VSU <> VSULink.GP1 var
R143134:143135 VST.floyd.VSU <> gv:1017 var
R143139:143141 VST.floyd.VSU <> VSULink.GP2 var
R143143:143144 VST.floyd.VSU <> gv:1017 var
R143111:143117 VST.floyd.VSU <> VSULink.Exports var
R143109:143109 VST.floyd.VSU <> VSULink.p var
R143101:143107 VST.floyd.VSU <> VSULink.Imports var
R143099:143099 VST.floyd.VSU <> VSULink.E var
R143096:143097 VST.floyd.VSU <> VSULink.cs var
R143094:143094 VST.floyd.VSU <> VSULink.V var
R143076:143080 VST.floyd.VSU <> VSULink.Espec var
R143172:143175 VST.floyd.VSU <> VSULink.vsu1 var
R143198:143201 VST.floyd.VSU <> VSULink.vsu2 var
R143225:143231 VST.floyd.VSU <> G_merge def
R143246:143251 VST.floyd.VSU <> Comp_G def
R143234:143239 VST.floyd.VSU <> Comp_G def
R143225:143231 VST.floyd.VSU <> G_merge def
R143246:143251 VST.floyd.VSU <> Comp_G def
R143234:143239 VST.floyd.VSU <> Comp_G def
R143268:143280 VST.floyd.VSU <> ComponentJoin thm
R143268:143280 VST.floyd.VSU <> ComponentJoin thm
R143302:143308 VST.floyd.VSU VSULink <> sec
prf 143318:143335 <> SF_ctx_subsumption
binder 143338:143342 <> Espec:1018
binder 143344:143345 <> cs:1019
binder 143348:143348 <> V:1020
binder 143350:143350 <> G:1021
binder 143352:143353 <> ge:1022
binder 143355:143355 <> i:1023
binder 143357:143358 <> fd:1024
binder 143360:143362 <> phi:1025
R143372:143373 VST.floyd.VSU <> SF def
R143396:143398 VST.floyd.VSU <> phi:1025 var
R143393:143394 VST.floyd.VSU <> fd:1024 var
R143391:143391 VST.floyd.VSU <> i:1023 var
R143389:143389 VST.floyd.VSU <> G:1021 var
R143386:143387 VST.floyd.VSU <> ge:1022 var
R143384:143384 VST.floyd.VSU <> V:1020 var
R143381:143382 VST.floyd.VSU <> cs:1019 var
R143375:143379 VST.floyd.VSU <> Espec:1018 var
binder 143365:143367 <> HSF:1026
R143411:143422 compcert.lib.Coqlib <> list_norepet ind
R143425:143427 Coq.Lists.List <> map def
R143433:143433 VST.floyd.VSU <> G:1021 var
R143429:143431 Coq.Init.Datatypes <> fst def
binder 143404:143408 <> LNR_G:1027
binder 143437:143438 <> G':1028
binder 143440:143441 <> V':1029
binder 143443:143445 <> ge':1030
binder 143447:143449 <> cs':1031
R143461:143470 VST.veric.expr <> cspecs_sub def
R143475:143477 VST.floyd.VSU <> cs':1031 var
R143472:143473 VST.floyd.VSU <> cs:1019 var
binder 143454:143458 <> SubCS:1032
R143487:143500 VST.floyd.VSU <> genv_find_func def
R143508:143509 VST.floyd.VSU <> fd:1024 var
R143506:143506 VST.floyd.VSU <> i:1023 var
R143502:143504 VST.floyd.VSU <> ge':1030 var
binder 143483:143484 <> FD:1033
binder 143529:143529 <> j:1034
R143532:143541 VST.veric.tycontext <> sub_option def
R143570:143570 compcert.lib.Maps <> :::x_'!'_x not
R143593:143596 compcert.lib.Maps <> :::x_'!'_x not
R143597:143597 VST.floyd.VSU <> j:1034 var
R143571:143586 VST.veric.seplog <> make_tycontext_g def
R143591:143592 VST.floyd.VSU <> G':1028 var
R143588:143589 VST.floyd.VSU <> V':1029 var
R143543:143543 compcert.lib.Maps <> :::x_'!'_x not
R143564:143567 compcert.lib.Maps <> :::x_'!'_x not
R143568:143568 VST.floyd.VSU <> j:1034 var
R143544:143559 VST.veric.seplog <> make_tycontext_g def
R143563:143563 VST.floyd.VSU <> G:1021 var
R143561:143561 VST.floyd.VSU <> V:1020 var
binder 143515:143519 <> SubFG:1035
R143620:143624 compcert.common.AST <> ident def
binder 143616:143616 <> j:1036
R143627:143637 VST.veric.expr <> subsumespec def
R143654:143660 VST.veric.initial_world <> find_id def
R143664:143665 VST.floyd.VSU <> G':1028 var
R143662:143662 VST.floyd.VSU <> j:1036 var
R143640:143646 VST.veric.initial_world <> find_id def
R143650:143650 VST.floyd.VSU <> G:1021 var
R143648:143648 VST.floyd.VSU <> j:1036 var
binder 143603:143606 <> SubG:1037
R143673:143674 VST.floyd.VSU <> SF def
R143701:143703 VST.floyd.VSU <> phi:1025 var
R143698:143699 VST.floyd.VSU <> fd:1024 var
R143696:143696 VST.floyd.VSU <> i:1023 var
R143693:143694 VST.floyd.VSU <> G':1028 var
R143689:143691 VST.floyd.VSU <> ge':1030 var
R143686:143687 VST.floyd.VSU <> V':1029 var
R143682:143684 VST.floyd.VSU <> cs':1031 var
R143676:143680 VST.floyd.VSU <> Espec:1018 var
R143745:143768 VST.floyd.VSU <> InternalInfo_subsumption thm
R143745:143768 VST.floyd.VSU <> InternalInfo_subsumption thm
R143787:143807 VST.floyd.VSU <> InternalInfo_envs_sub thm
R143787:143807 VST.floyd.VSU <> InternalInfo_envs_sub thm
R143888:143908 VST.floyd.VSU <> ExternalInfo_envs_sub thm
R143888:143908 VST.floyd.VSU <> ExternalInfo_envs_sub thm
prf 143936:143953 <> SF_ctx_extensional
binder 143956:143960 <> Espec:1038
binder 143962:143963 <> cs:1039
binder 143966:143966 <> V:1040
binder 143968:143968 <> G:1041
binder 143970:143971 <> ge:1042
binder 143973:143973 <> i:1043
binder 143975:143976 <> fd:1044
binder 143978:143980 <> phi:1045
R143990:143991 VST.floyd.VSU <> SF def
R144014:144016 VST.floyd.VSU <> phi:1045 var
R144011:144012 VST.floyd.VSU <> fd:1044 var
R144009:144009 VST.floyd.VSU <> i:1043 var
R144007:144007 VST.floyd.VSU <> G:1041 var
R144004:144005 VST.floyd.VSU <> ge:1042 var
R144002:144002 VST.floyd.VSU <> V:1040 var
R143999:144000 VST.floyd.VSU <> cs:1039 var
R143993:143997 VST.floyd.VSU <> Espec:1038 var
binder 143983:143985 <> HSF:1046
R144029:144040 compcert.lib.Coqlib <> list_norepet ind
R144043:144045 Coq.Lists.List <> map def
R144051:144051 VST.floyd.VSU <> G:1041 var
R144047:144049 Coq.Init.Datatypes <> fst def
binder 144022:144026 <> LNR_G:1047
binder 144055:144056 <> G':1048
binder 144073:144073 <> j:1049
R144087:144089 Coq.Init.Logic <> ::type_scope:x_'='_x not
R144076:144082 VST.veric.initial_world <> find_id def
R144086:144086 VST.floyd.VSU <> G:1041 var
R144084:144084 VST.floyd.VSU <> j:1049 var
R144090:144096 VST.veric.initial_world <> find_id def
R144100:144101 VST.floyd.VSU <> G':1048 var
R144098:144098 VST.floyd.VSU <> j:1049 var
binder 144061:144063 <> GG':1050
R144108:144109 VST.floyd.VSU <> SF def
R144133:144135 VST.floyd.VSU <> phi:1045 var
R144130:144131 VST.floyd.VSU <> fd:1044 var
R144128:144128 VST.floyd.VSU <> i:1043 var
R144125:144126 VST.floyd.VSU <> G':1048 var
R144122:144123 VST.floyd.VSU <> ge:1042 var
R144120:144120 VST.floyd.VSU <> V:1040 var
R144117:144118 VST.floyd.VSU <> cs:1039 var
R144111:144115 VST.floyd.VSU <> Espec:1038 var
R144192:144215 VST.floyd.VSU <> InternalInfo_subsumption thm
R144192:144215 VST.floyd.VSU <> InternalInfo_subsumption thm
R144281:144281 compcert.lib.Maps <> :::x_'!'_x not
R144302:144305 compcert.lib.Maps <> :::x_'!'_x not
R144282:144297 VST.veric.seplog <> make_tycontext_g def
R144281:144281 compcert.lib.Maps <> :::x_'!'_x not
R144302:144305 compcert.lib.Maps <> :::x_'!'_x not
R144282:144297 VST.veric.seplog <> make_tycontext_g def
R144382:144410 VST.veric.semax_prog <> make_tycontext_s_g thm
R144382:144410 VST.veric.semax_prog <> make_tycontext_s_g thm
R144437:144465 VST.veric.semax_prog <> make_tycontext_s_g thm
R144437:144465 VST.veric.semax_prog <> make_tycontext_s_g thm
R144490:144513 VST.veric.initial_world <> make_tycontext_s_find_id thm
R144490:144513 VST.veric.initial_world <> make_tycontext_s_find_id thm
R144490:144513 VST.veric.initial_world <> make_tycontext_s_find_id thm
R144490:144513 VST.veric.initial_world <> make_tycontext_s_find_id thm
R144543:144549 VST.veric.initial_world <> find_id def
R144543:144549 VST.veric.initial_world <> find_id def
R144595:144601 Coq.Init.Logic <> eq_refl constr
R144595:144601 Coq.Init.Logic <> eq_refl constr
R144595:144601 Coq.Init.Logic <> eq_refl constr
R144623:144629 Coq.Init.Logic <> eq_refl constr
R144623:144629 Coq.Init.Logic <> eq_refl constr
R144623:144629 Coq.Init.Logic <> eq_refl constr
R144744:144777 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R144744:144777 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R144744:144777 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R144806:144839 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R144806:144839 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R144806:144839 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R144806:144839 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R144892:144907 VST.veric.expr <> subsumespec_refl thm
R144892:144907 VST.veric.expr <> subsumespec_refl thm
rec 144923:144940 <> CanonicalComponent
proj 144992:145003 <> CC_component
proj 145106:145117 <> CC_canonical
binder 144943:144947 <> Espec:1051
binder 144949:144949 <> V:1052
binder 144951:144952 <> cs:1053
binder 144955:144961 <> Externs:1054
binder 144963:144969 <> Imports:1055
binder 144971:144971 <> p:1056
binder 144973:144979 <> Exports:1057
binder 144981:144982 <> GP:1058
binder 144984:144984 <> G:1059
R145009:145017 VST.floyd.VSU <> Component rec
R145101:145101 VST.floyd.VSU <> G:1059 var
R145098:145099 VST.floyd.VSU <> GP:1058 var
R145090:145096 VST.floyd.VSU <> Exports:1057 var
R145088:145088 VST.floyd.VSU <> p:1056 var
R145080:145086 VST.floyd.VSU <> Imports:1055 var
R145072:145078 VST.floyd.VSU <> Externs:1054 var
R145047:145048 VST.floyd.VSU <> cs:1053 var
R145025:145025 VST.floyd.VSU <> V:1052 var
R145019:145023 VST.floyd.VSU <> Espec:1051 var
R145149:145168 Coq.Init.Logic <> ::type_scope:x_'='_x not
R145120:145122 Coq.Lists.List <> map def
R145129:145134 VST.floyd.VSU <> Comp_G def
R145136:145147 VST.floyd.VSU <> CC_component:1061 meth
R145124:145126 Coq.Init.Datatypes <> fst def
R145169:145171 Coq.Lists.List <> map def
R145178:145183 Coq.Lists.List <> filter def
R145275:145283 compcert.cfrontend.Ctypes <> prog_defs proj
R145285:145285 VST.floyd.VSU <> p:1056 var
binder 145190:145190 <> x:1062
R145195:145200 Coq.Lists.List <> in_dec thm
R145228:145231 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R145220:145225 VST.floyd.VSU <> IntIDs def
R145227:145227 VST.floyd.VSU <> p:1056 var
R145232:145234 Coq.Lists.List <> map def
R145240:145246 VST.floyd.VSU <> Externs:1054 var
R145236:145238 Coq.Init.Datatypes <> fst def
R145212:145214 Coq.Init.Datatypes <> fst def
R145216:145216 VST.floyd.VSU <> x:1062 var
R145202:145209 compcert.common.AST <> ident_eq def
R145173:145175 Coq.Init.Datatypes <> fst def
prf 145299:145323 <> CanonicalComponent_entail
binder 145326:145330 <> Espec:1064
binder 145332:145332 <> V:1065
binder 145334:145335 <> cs:1066
binder 145337:145337 <> E:1067
binder 145339:145341 <> Imp:1068
binder 145343:145343 <> p:1069
binder 145345:145347 <> Exp:1070
binder 145349:145349 <> G:1071
binder 145352:145354 <> GP1:1072
binder 145356:145358 <> GP2:1073
R145417:145420 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R145421:145421 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R145450:145461 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R145463:145480 VST.floyd.VSU <> CanonicalComponent rec
R145509:145509 VST.floyd.VSU <> G:1071 var
R145505:145507 VST.floyd.VSU <> GP2:1073 var
R145501:145503 VST.floyd.VSU <> Exp:1070 var
R145499:145499 VST.floyd.VSU <> p:1069 var
R145495:145497 VST.floyd.VSU <> Imp:1068 var
R145493:145493 VST.floyd.VSU <> E:1067 var
R145490:145491 VST.floyd.VSU <> cs:1066 var
R145488:145488 VST.floyd.VSU <> V:1065 var
R145482:145486 VST.floyd.VSU <> Espec:1064 var
binder 145429:145430 <> gv:1074
R145439:145443 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R145433:145435 VST.floyd.VSU <> GP1:1072 var
R145437:145438 VST.floyd.VSU <> gv:1074 var
R145444:145446 VST.floyd.VSU <> GP2:1073 var
R145448:145449 VST.floyd.VSU <> gv:1074 var
R145370:145387 VST.floyd.VSU <> CanonicalComponent rec
R145416:145416 VST.floyd.VSU <> G:1071 var
R145412:145414 VST.floyd.VSU <> GP1:1072 var
R145408:145410 VST.floyd.VSU <> Exp:1070 var
R145406:145406 VST.floyd.VSU <> p:1069 var
R145402:145404 VST.floyd.VSU <> Imp:1068 var
R145400:145400 VST.floyd.VSU <> E:1067 var
R145397:145398 VST.floyd.VSU <> cs:1066 var
R145395:145395 VST.floyd.VSU <> V:1065 var
R145389:145393 VST.floyd.VSU <> Espec:1064 var
R145560:145583 VST.floyd.VSU <> Build_CanonicalComponent constr
R145604:145614 VST.floyd.VSU <> Comp_entail thm
R145560:145583 VST.floyd.VSU <> Build_CanonicalComponent constr
R145604:145614 VST.floyd.VSU <> Comp_entail thm
def 145643:145647 <> order
binder 145650:145650 <> A:1075
R145656:145659 Coq.Init.Datatypes <> list ind
R145667:145669 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R145662:145666 compcert.common.AST <> ident def
R145670:145670 VST.floyd.VSU <> A:1075 var
binder 145654:145654 <> G:1076
R145677:145680 Coq.Init.Datatypes <> list ind
R145682:145686 compcert.common.AST <> ident def
binder 145675:145675 <> l:1077
R145690:145695 Coq.Init.Datatypes <> option ind
R145698:145701 Coq.Init.Datatypes <> list ind
R145709:145710 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R145704:145708 compcert.common.AST <> ident def
R145711:145711 VST.floyd.VSU <> A:1075 var
R145726:145726 VST.floyd.VSU <> l:1077 var
R145737:145739 Coq.Init.Datatypes <> nil constr
R145744:145747 Coq.Init.Datatypes <> Some constr
R145749:145751 Coq.Init.Datatypes <> nil constr
R145758:145759 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R145784:145790 VST.veric.initial_world <> find_id def
R145794:145794 VST.floyd.VSU <> G:1076 var
R145772:145776 VST.floyd.VSU <> order:1078 def
R145778:145778 VST.floyd.VSU <> G:1076 var
R145816:145819 Coq.Init.Datatypes <> Some constr
R145825:145828 Coq.Init.Datatypes <> Some constr
R145835:145838 Coq.Init.Datatypes <> Some constr
R145846:145847 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R145841:145841 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145843:145843 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145845:145845 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145875:145878 Coq.Init.Datatypes <> None constr
prf 145911:145917 <> order_i
binder 145920:145920 <> A:1080
binder 145923:145923 <> G:1081
binder 145933:145933 <> l:1082
R145942:145953 compcert.lib.Coqlib <> list_norepet ind
R145956:145958 Coq.Lists.List <> map def
R145964:145964 VST.floyd.VSU <> G:1081 var
R145960:145962 Coq.Init.Datatypes <> fst def
binder 145936:145939 <> LNRG:1083
binder 145982:145982 <> i:1084
R145991:145994 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R145995:145996 Coq.Lists.List <> In def
R146001:146003 Coq.Lists.List <> map def
R146009:146009 VST.floyd.VSU <> G:1081 var
R146005:146007 Coq.Init.Datatypes <> fst def
R145998:145998 VST.floyd.VSU <> i:1084 var
R145985:145986 Coq.Lists.List <> In def
R145990:145990 VST.floyd.VSU <> l:1082 var
R145988:145988 VST.floyd.VSU <> i:1084 var
binder 145971:145972 <> Hl:1085
R146016:146022 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R146025:146026 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 146023:146024 <> G':1086
R146039:146041 Coq.Init.Logic <> ::type_scope:x_'='_x not
R146028:146032 VST.floyd.VSU <> order def
R146038:146038 VST.floyd.VSU <> l:1082 var
R146036:146036 VST.floyd.VSU <> G:1081 var
R146034:146034 VST.floyd.VSU <> A:1080 var
R146042:146045 Coq.Init.Datatypes <> Some constr
R146047:146048 VST.floyd.VSU <> G':1086 var
R146097:146099 Coq.Init.Datatypes <> nil constr
R146097:146099 Coq.Init.Datatypes <> nil constr
R146212:146229 VST.floyd.assoclists <> In_map_fst_find_id thm
R146212:146229 VST.floyd.assoclists <> In_map_fst_find_id thm
prf 146324:146331 <> order_i'
binder 146334:146334 <> A:1087
binder 146337:146337 <> G:1088
binder 146339:146339 <> l:1089
R146348:146359 compcert.lib.Coqlib <> list_norepet ind
R146362:146364 Coq.Lists.List <> map def
R146370:146370 VST.floyd.VSU <> G:1088 var
R146366:146368 Coq.Init.Datatypes <> fst def
binder 146342:146345 <> LNRG:1090
binder 146388:146388 <> i:1091
R146397:146400 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R146401:146402 Coq.Lists.List <> In def
R146407:146409 Coq.Lists.List <> map def
R146415:146415 VST.floyd.VSU <> G:1088 var
R146411:146413 Coq.Init.Datatypes <> fst def
R146404:146404 VST.floyd.VSU <> i:1091 var
R146391:146392 Coq.Lists.List <> In def
R146396:146396 VST.floyd.VSU <> l:1089 var
R146394:146394 VST.floyd.VSU <> i:1091 var
binder 146377:146378 <> Hl:1092
R146420:146421 Coq.Init.Logic <> ::type_scope:'~'_x not
R146434:146436 Coq.Init.Logic <> ::type_scope:x_'='_x not
R146423:146427 VST.floyd.VSU <> order def
R146433:146433 VST.floyd.VSU <> l:1089 var
R146431:146431 VST.floyd.VSU <> G:1088 var
R146429:146429 VST.floyd.VSU <> A:1087 var
R146437:146440 Coq.Init.Datatypes <> None constr
R146460:146466 VST.floyd.VSU <> order_i thm
R146460:146466 VST.floyd.VSU <> order_i thm
prf 146507:146515 <> order_dom
binder 146518:146518 <> A:1093
binder 146520:146520 <> G:1094
binder 146532:146532 <> l:1095
binder 146534:146535 <> G':1096
R146561:146564 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R146566:146568 Coq.Init.Logic <> ::type_scope:x_'='_x not
R146565:146565 VST.floyd.VSU <> l:1095 var
R146569:146571 Coq.Lists.List <> map def
R146577:146578 VST.floyd.VSU <> G':1096 var
R146573:146575 Coq.Init.Datatypes <> fst def
R146551:146553 Coq.Init.Logic <> ::type_scope:x_'='_x not
R146540:146544 VST.floyd.VSU <> order def
R146550:146550 VST.floyd.VSU <> l:1095 var
R146548:146548 VST.floyd.VSU <> G:1094 var
R146546:146546 VST.floyd.VSU <> A:1093 var
R146554:146557 Coq.Init.Datatypes <> Some constr
R146559:146560 VST.floyd.VSU <> G':1096 var
R146646:146650 VST.floyd.VSU <> order def
R146646:146650 VST.floyd.VSU <> order def
R146698:146704 VST.veric.initial_world <> find_id def
R146698:146704 VST.veric.initial_world <> find_id def
prf 146773:146783 <> order_sound
binder 146786:146786 <> A:1097
binder 146788:146788 <> G:1098
binder 146800:146800 <> l:1099
binder 146802:146803 <> G':1100
R146829:146839 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 146847:146847 <> i:1101
binder 146849:146851 <> phi:1102
R146877:146880 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R146892:146894 Coq.Init.Logic <> ::type_scope:x_'='_x not
R146881:146887 VST.veric.initial_world <> find_id def
R146891:146891 VST.floyd.VSU <> G:1098 var
R146889:146889 VST.floyd.VSU <> i:1101 var
R146895:146898 Coq.Init.Datatypes <> Some constr
R146900:146902 VST.floyd.VSU <> phi:1102 var
R146866:146868 Coq.Init.Logic <> ::type_scope:x_'='_x not
R146854:146860 VST.veric.initial_world <> find_id def
R146864:146865 VST.floyd.VSU <> G':1100 var
R146862:146862 VST.floyd.VSU <> i:1101 var
R146869:146872 Coq.Init.Datatypes <> Some constr
R146874:146876 VST.floyd.VSU <> phi:1102 var
R146819:146821 Coq.Init.Logic <> ::type_scope:x_'='_x not
R146808:146812 VST.floyd.VSU <> order def
R146818:146818 VST.floyd.VSU <> l:1099 var
R146816:146816 VST.floyd.VSU <> G:1098 var
R146814:146814 VST.floyd.VSU <> A:1097 var
R146822:146825 Coq.Init.Datatypes <> Some constr
R146827:146828 VST.floyd.VSU <> G':1100 var
R146969:146973 VST.floyd.VSU <> order def
R146969:146973 VST.floyd.VSU <> order def
R147050:147056 VST.veric.initial_world <> find_id def
R147050:147056 VST.veric.initial_world <> find_id def
prf 147230:147243 <> order_complete
binder 147246:147246 <> A:1103
binder 147248:147248 <> G:1104
binder 147250:147250 <> l:1105
binder 147252:147253 <> G':1106
R147279:147282 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R147297:147306 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R147307:147307 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R147344:147354 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 147362:147362 <> i:1107
binder 147364:147366 <> phi:1108
R147391:147394 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R147407:147409 Coq.Init.Logic <> ::type_scope:x_'='_x not
R147395:147401 VST.veric.initial_world <> find_id def
R147405:147406 VST.floyd.VSU <> G':1106 var
R147403:147403 VST.floyd.VSU <> i:1107 var
R147410:147413 Coq.Init.Datatypes <> Some constr
R147415:147417 VST.floyd.VSU <> phi:1108 var
R147380:147382 Coq.Init.Logic <> ::type_scope:x_'='_x not
R147369:147375 VST.veric.initial_world <> find_id def
R147379:147379 VST.floyd.VSU <> G:1104 var
R147377:147377 VST.floyd.VSU <> i:1107 var
R147383:147386 Coq.Init.Datatypes <> Some constr
R147388:147390 VST.floyd.VSU <> phi:1108 var
binder 147315:147315 <> i:1109
R147334:147337 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R147338:147339 Coq.Lists.List <> In def
R147343:147343 VST.floyd.VSU <> l:1105 var
R147341:147341 VST.floyd.VSU <> i:1109 var
R147318:147319 Coq.Lists.List <> In def
R147324:147326 Coq.Lists.List <> map def
R147332:147332 VST.floyd.VSU <> G:1104 var
R147328:147330 Coq.Init.Datatypes <> fst def
R147321:147321 VST.floyd.VSU <> i:1109 var
R147283:147294 compcert.lib.Coqlib <> list_norepet ind
R147296:147296 VST.floyd.VSU <> l:1105 var
R147269:147271 Coq.Init.Logic <> ::type_scope:x_'='_x not
R147258:147262 VST.floyd.VSU <> order def
R147268:147268 VST.floyd.VSU <> l:1105 var
R147266:147266 VST.floyd.VSU <> G:1104 var
R147264:147264 VST.floyd.VSU <> A:1103 var
R147272:147275 Coq.Init.Datatypes <> Some constr
R147277:147278 VST.floyd.VSU <> G':1106 var
R147459:147476 VST.veric.initial_world <> find_id_In_map_fst thm
R147459:147476 VST.veric.initial_world <> find_id_In_map_fst thm
R147526:147534 VST.floyd.VSU <> order_dom thm
R147526:147534 VST.floyd.VSU <> order_dom thm
R147563:147580 VST.floyd.assoclists <> In_map_fst_find_id thm
R147563:147580 VST.floyd.assoclists <> In_map_fst_find_id thm
R147626:147636 VST.floyd.VSU <> order_sound thm
R147626:147636 VST.floyd.VSU <> order_sound thm
R147626:147636 VST.floyd.VSU <> order_sound thm
prf 147685:147693 <> order_SOC
binder 147696:147696 <> A:1110
binder 147698:147698 <> G:1111
binder 147700:147700 <> l:1112
binder 147702:147703 <> G':1113
R147729:147732 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R147747:147756 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R147757:147757 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R147794:147804 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 147812:147812 <> i:1114
R147826:147828 Coq.Init.Logic <> ::type_scope:x_'='_x not
R147815:147821 VST.veric.initial_world <> find_id def
R147825:147825 VST.floyd.VSU <> G:1111 var
R147823:147823 VST.floyd.VSU <> i:1114 var
R147829:147835 VST.veric.initial_world <> find_id def
R147839:147840 VST.floyd.VSU <> G':1113 var
R147837:147837 VST.floyd.VSU <> i:1114 var
binder 147765:147765 <> i:1115
R147784:147787 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R147788:147789 Coq.Lists.List <> In def
R147793:147793 VST.floyd.VSU <> l:1112 var
R147791:147791 VST.floyd.VSU <> i:1115 var
R147768:147769 Coq.Lists.List <> In def
R147774:147776 Coq.Lists.List <> map def
R147782:147782 VST.floyd.VSU <> G:1111 var
R147778:147780 Coq.Init.Datatypes <> fst def
R147771:147771 VST.floyd.VSU <> i:1115 var
R147733:147744 compcert.lib.Coqlib <> list_norepet ind
R147746:147746 VST.floyd.VSU <> l:1112 var
R147719:147721 Coq.Init.Logic <> ::type_scope:x_'='_x not
R147708:147712 VST.floyd.VSU <> order def
R147718:147718 VST.floyd.VSU <> l:1112 var
R147716:147716 VST.floyd.VSU <> G:1111 var
R147714:147714 VST.floyd.VSU <> A:1110 var
R147722:147725 Coq.Init.Datatypes <> Some constr
R147727:147728 VST.floyd.VSU <> G':1113 var
R147872:147882 VST.floyd.VSU <> order_sound thm
R147902:147915 VST.floyd.VSU <> order_complete thm
R147872:147882 VST.floyd.VSU <> order_sound thm
R147902:147915 VST.floyd.VSU <> order_complete thm
R147956:147962 VST.veric.initial_world <> find_id def
R147980:147986 VST.veric.initial_world <> find_id def
R147956:147962 VST.veric.initial_world <> find_id def
R147980:147986 VST.veric.initial_world <> find_id def
R147980:147986 VST.veric.initial_world <> find_id def
R148028:148034 Coq.Init.Logic <> eq_refl constr
R148028:148034 Coq.Init.Logic <> eq_refl constr
R148062:148068 Coq.Init.Logic <> eq_refl constr
R148062:148068 Coq.Init.Logic <> eq_refl constr
rec 152223:152242 <> CanonicalComponent_M
proj 152294:152298 <> CCM_G
proj 152313:152325 <> CCM_component
proj 152399:152406 <> CCM_main
binder 152245:152249 <> Espec:1116
binder 152251:152251 <> V:1117
binder 152253:152254 <> cs:1118
binder 152257:152263 <> Externs:1119
binder 152265:152271 <> Imports:1120
binder 152273:152273 <> p:1121
binder 152275:152281 <> Exports:1122
binder 152283:152284 <> GP:1123
binder 152286:152286 <> G:1124
R152301:152308 VST.veric.mpred <> funspecs def
R152331:152348 VST.floyd.VSU <> CanonicalComponent rec
R152390:152394 VST.floyd.VSU <> CCM_G:1126 meth
R152387:152388 VST.floyd.VSU <> GP:1123 var
R152379:152385 VST.floyd.VSU <> Exports:1122 var
R152377:152377 VST.floyd.VSU <> p:1121 var
R152369:152375 VST.floyd.VSU <> Imports:1120 var
R152361:152367 VST.floyd.VSU <> Externs:1119 var
R152358:152359 VST.floyd.VSU <> cs:1118 var
R152356:152356 VST.floyd.VSU <> V:1117 var
R152350:152354 VST.floyd.VSU <> Espec:1116 var
R152436:152438 Coq.Init.Logic <> ::type_scope:x_'='_x not
R152409:152415 VST.veric.initial_world <> find_id def
R152431:152435 VST.floyd.VSU <> CCM_G:1126 meth
R152418:152426 compcert.cfrontend.Ctypes <> prog_main proj
R152428:152428 VST.floyd.VSU <> p:1121 var
R152439:152445 VST.veric.initial_world <> find_id def
R152461:152461 VST.floyd.VSU <> G:1124 var
R152448:152456 compcert.cfrontend.Ctypes <> prog_main proj
R152458:152458 VST.floyd.VSU <> p:1121 var
prf 152472:152486 <> Comp_to_CanComp
binder 152489:152493 <> Espec:1129
binder 152495:152495 <> V:1130
binder 152497:152498 <> cs:1131
binder 152500:152502 <> Ext:1132
binder 152504:152506 <> Imp:1133
binder 152508:152508 <> p:1134
binder 152510:152512 <> Exp:1135
binder 152514:152515 <> GP:1136
binder 152517:152517 <> G:1137
R152525:152533 VST.floyd.VSU <> Component rec
R152563:152563 VST.floyd.VSU <> G:1137 var
R152560:152561 VST.floyd.VSU <> GP:1136 var
R152556:152558 VST.floyd.VSU <> Exp:1135 var
R152554:152554 VST.floyd.VSU <> p:1134 var
R152550:152552 VST.floyd.VSU <> Imp:1133 var
R152546:152548 VST.floyd.VSU <> Ext:1132 var
R152543:152544 VST.floyd.VSU <> cs:1131 var
R152541:152541 VST.floyd.VSU <> V:1130 var
R152535:152539 VST.floyd.VSU <> Espec:1129 var
binder 152521:152521 <> C:1138
R152574:152593 VST.floyd.VSU <> CanonicalComponent_M rec
R152623:152623 VST.floyd.VSU <> G:1137 var
R152620:152621 VST.floyd.VSU <> GP:1136 var
R152616:152618 VST.floyd.VSU <> Exp:1135 var
R152614:152614 VST.floyd.VSU <> p:1134 var
R152610:152612 VST.floyd.VSU <> Imp:1133 var
R152606:152608 VST.floyd.VSU <> Ext:1132 var
R152603:152604 VST.floyd.VSU <> cs:1131 var
R152601:152601 VST.floyd.VSU <> V:1130 var
R152595:152599 VST.floyd.VSU <> Espec:1129 var
R152648:152650 Coq.Init.Logic <> ::type_scope:x_'='_x not
R152651:152656 VST.floyd.VSU <> Comp_G def
R152648:152650 Coq.Init.Logic <> ::type_scope:x_'='_x not
R152651:152656 VST.floyd.VSU <> Comp_G def
R152687:152691 VST.floyd.VSU <> order def
R152724:152726 Coq.Lists.List <> map def
R152733:152738 Coq.Lists.List <> filter def
R152804:152812 compcert.cfrontend.Ctypes <> prog_defs proj
binder 152745:152745 <> x:1139
R152750:152755 Coq.Lists.List <> in_dec thm
R152783:152787 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R152799:152799 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R152775:152780 VST.floyd.VSU <> IntIDs def
R152788:152790 Coq.Lists.List <> map def
R152792:152794 Coq.Init.Datatypes <> fst def
R152767:152769 Coq.Init.Datatypes <> fst def
R152771:152771 VST.floyd.VSU <> x:1139 var
R152757:152764 compcert.common.AST <> ident_eq def
R152728:152730 Coq.Init.Datatypes <> fst def
R152694:152699 VST.floyd.VSU <> Comp_G def
R152687:152691 VST.floyd.VSU <> order def
R152724:152726 Coq.Lists.List <> map def
R152733:152738 Coq.Lists.List <> filter def
R152804:152812 compcert.cfrontend.Ctypes <> prog_defs proj
binder 152745:152745 <> x:1140
R152750:152755 Coq.Lists.List <> in_dec thm
R152783:152787 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R152799:152799 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R152775:152780 VST.floyd.VSU <> IntIDs def
R152788:152790 Coq.Lists.List <> map def
R152792:152794 Coq.Init.Datatypes <> fst def
R152767:152769 Coq.Init.Datatypes <> fst def
R152771:152771 VST.floyd.VSU <> x:1140 var
R152757:152764 compcert.common.AST <> ident_eq def
R152728:152730 Coq.Init.Datatypes <> fst def
R152694:152699 VST.floyd.VSU <> Comp_G def
R152891:152911 VST.floyd.VSU <> LNR_Internals_Externs thm
R152891:152911 VST.floyd.VSU <> LNR_Internals_Externs thm
R152958:152962 compcert.common.AST <> ident def
binder 152954:152954 <> i:1141
R152995:152999 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R152965:152966 Coq.Lists.List <> In def
R152979:152982 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R152971:152976 VST.floyd.VSU <> IntIDs def
R152983:152985 Coq.Lists.List <> map def
R152987:152989 Coq.Init.Datatypes <> fst def
R152968:152968 VST.floyd.VSU <> i:1141 var
R153000:153001 Coq.Lists.List <> In def
R153006:153008 Coq.Lists.List <> map def
R153010:153012 Coq.Init.Datatypes <> fst def
R153003:153003 VST.floyd.VSU <> i:1141 var
R152958:152962 compcert.common.AST <> ident def
binder 152954:152954 <> i:1142
R152995:152999 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R152965:152966 Coq.Lists.List <> In def
R152979:152982 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R152971:152976 VST.floyd.VSU <> IntIDs def
R152983:152985 Coq.Lists.List <> map def
R152987:152989 Coq.Init.Datatypes <> fst def
R152968:152968 VST.floyd.VSU <> i:1142 var
R153000:153001 Coq.Lists.List <> In def
R153006:153008 Coq.Lists.List <> map def
R153010:153012 Coq.Init.Datatypes <> fst def
R153003:153003 VST.floyd.VSU <> i:1142 var
R153044:153052 VST.floyd.VSU <> order_dom thm
R153044:153052 VST.floyd.VSU <> order_dom thm
R153044:153052 VST.floyd.VSU <> order_dom thm
R153078:153086 compcert.cfrontend.Ctypes <> prog_defs proj
R153078:153086 compcert.cfrontend.Ctypes <> prog_defs proj
R153115:153118 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R153107:153112 VST.floyd.VSU <> IntIDs def
R153119:153121 Coq.Lists.List <> map def
R153123:153125 Coq.Init.Datatypes <> fst def
R153115:153118 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R153107:153112 VST.floyd.VSU <> IntIDs def
R153119:153121 Coq.Lists.List <> map def
R153123:153125 Coq.Init.Datatypes <> fst def
binder 153158:153158 <> j:1143
R153168:153171 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R153172:153173 Coq.Lists.List <> In def
R153178:153180 Coq.Lists.List <> map def
R153182:153184 Coq.Init.Datatypes <> fst def
R153175:153175 VST.floyd.VSU <> j:1143 var
R153161:153162 Coq.Lists.List <> In def
R153164:153164 VST.floyd.VSU <> j:1143 var
binder 153158:153158 <> j:1144
R153168:153171 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R153172:153173 Coq.Lists.List <> In def
R153178:153180 Coq.Lists.List <> map def
R153182:153184 Coq.Init.Datatypes <> fst def
R153175:153175 VST.floyd.VSU <> j:1144 var
R153161:153162 Coq.Lists.List <> In def
R153164:153164 VST.floyd.VSU <> j:1144 var
R153246:153263 VST.floyd.VSU <> Comp_G_in_progdefs thm
R153246:153263 VST.floyd.VSU <> Comp_G_in_progdefs thm
R153285:153302 VST.veric.initial_world <> find_id_In_map_fst thm
R153285:153302 VST.veric.initial_world <> find_id_In_map_fst thm
R153390:153399 Coq.Lists.List <> in_map_iff thm
R153390:153399 Coq.Lists.List <> in_map_iff thm
R153468:153477 Coq.Lists.List <> in_map_iff thm
R153468:153477 Coq.Lists.List <> in_map_iff thm
R153487:153487 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153489:153489 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153491:153491 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153487:153487 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153489:153489 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153491:153491 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153523:153531 Coq.Lists.List <> filter_In thm
R153523:153531 Coq.Lists.List <> filter_In thm
R153573:153578 Coq.Lists.List <> in_dec thm
R153580:153587 compcert.common.AST <> ident_eq def
R153573:153578 Coq.Lists.List <> in_dec thm
R153580:153587 compcert.common.AST <> ident_eq def
R153632:153641 Coq.Lists.List <> in_map_iff thm
R153632:153641 Coq.Lists.List <> in_map_iff thm
R153712:153720 Coq.Lists.List <> filter_In thm
R153712:153720 Coq.Lists.List <> filter_In thm
R153772:153777 Coq.Lists.List <> in_dec thm
R153779:153786 compcert.common.AST <> ident_eq def
R153772:153777 Coq.Lists.List <> in_dec thm
R153779:153786 compcert.common.AST <> ident_eq def
R153834:153845 compcert.lib.Coqlib <> list_norepet ind
R153848:153850 Coq.Lists.List <> map def
R153852:153854 Coq.Init.Datatypes <> fst def
R153834:153845 compcert.lib.Coqlib <> list_norepet ind
R153848:153850 Coq.Lists.List <> map def
R153852:153854 Coq.Init.Datatypes <> fst def
R153878:153886 VST.floyd.VSU <> order_dom thm
R153878:153886 VST.floyd.VSU <> order_dom thm
R153878:153886 VST.floyd.VSU <> order_dom thm
R153904:153930 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R153904:153930 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
binder 153964:153964 <> i:1145
R153987:153989 Coq.Init.Logic <> ::type_scope:x_'='_x not
R153967:153973 VST.veric.initial_world <> find_id def
R153978:153983 VST.floyd.VSU <> Comp_G def
R153975:153975 VST.floyd.VSU <> i:1145 var
R153990:153996 VST.veric.initial_world <> find_id def
R153998:153998 VST.floyd.VSU <> i:1145 var
binder 153964:153964 <> i:1146
R153987:153989 Coq.Init.Logic <> ::type_scope:x_'='_x not
R153967:153973 VST.veric.initial_world <> find_id def
R153978:153983 VST.floyd.VSU <> Comp_G def
R153975:153975 VST.floyd.VSU <> i:1146 var
R153990:153996 VST.veric.initial_world <> find_id def
R153998:153998 VST.floyd.VSU <> i:1146 var
R154036:154044 VST.floyd.VSU <> order_SOC thm
R154036:154044 VST.floyd.VSU <> order_SOC thm
R154075:154101 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R154075:154101 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R154134:154142 VST.floyd.VSU <> order_dom thm
R154134:154142 VST.floyd.VSU <> order_dom thm
R154134:154142 VST.floyd.VSU <> order_dom thm
binder 154205:154205 <> i:1147
R154226:154229 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R154243:154245 Coq.Init.Logic <> ::type_scope:x_'='_x not
R154230:154236 VST.veric.initial_world <> find_id def
R154238:154238 VST.floyd.VSU <> i:1147 var
R154246:154252 VST.veric.initial_world <> find_id def
R154254:154254 VST.floyd.VSU <> i:1147 var
R154208:154209 Coq.Lists.List <> In def
R154214:154216 Coq.Lists.List <> map def
R154218:154220 Coq.Init.Datatypes <> fst def
R154211:154211 VST.floyd.VSU <> i:1147 var
binder 154205:154205 <> i:1148
R154226:154229 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R154243:154245 Coq.Init.Logic <> ::type_scope:x_'='_x not
R154230:154236 VST.veric.initial_world <> find_id def
R154238:154238 VST.floyd.VSU <> i:1148 var
R154246:154252 VST.veric.initial_world <> find_id def
R154254:154254 VST.floyd.VSU <> i:1148 var
R154208:154209 Coq.Lists.List <> In def
R154214:154216 Coq.Lists.List <> map def
R154218:154220 Coq.Init.Datatypes <> fst def
R154211:154211 VST.floyd.VSU <> i:1148 var
R154282:154289 VST.floyd.VSU <> Comp_G_E proj
R154282:154289 VST.floyd.VSU <> Comp_G_E proj
R154282:154289 VST.floyd.VSU <> Comp_G_E proj
binder 154332:154332 <> i:1149
R154353:154362 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R154363:154378 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R154453:154463 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R154383:154399 compcert.common.AST <> external_function ind
binder 154379:154379 <> f:1150
R154408:154415 compcert.cfrontend.Ctypes <> typelist ind
binder 154403:154404 <> ts:1151
R154423:154426 compcert.cfrontend.Ctypes <> type ind
binder 154419:154419 <> t:1152
R154435:154452 compcert.common.AST <> calling_convention rec
binder 154430:154431 <> cc:1153
R154487:154489 Coq.Init.Logic <> ::type_scope:x_'='_x not
R154464:154470 VST.veric.initial_world <> find_id def
R154475:154483 compcert.cfrontend.Ctypes <> prog_defs proj
R154472:154472 VST.floyd.VSU <> i:1149 var
R154490:154493 Coq.Init.Datatypes <> Some constr
R154496:154499 compcert.common.AST <> Gfun constr
R154502:154509 compcert.cfrontend.Ctypes <> External constr
R154518:154519 VST.floyd.VSU <> cc:1153 var
R154516:154516 VST.floyd.VSU <> t:1152 var
R154513:154514 VST.floyd.VSU <> ts:1151 var
R154511:154511 VST.floyd.VSU <> f:1150 var
R154335:154336 Coq.Lists.List <> In def
R154341:154343 Coq.Lists.List <> map def
R154345:154347 Coq.Init.Datatypes <> fst def
R154338:154338 VST.floyd.VSU <> i:1149 var
binder 154332:154332 <> i:1154
R154353:154362 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R154363:154378 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R154453:154463 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R154383:154399 compcert.common.AST <> external_function ind
binder 154379:154379 <> f:1155
R154408:154415 compcert.cfrontend.Ctypes <> typelist ind
binder 154403:154404 <> ts:1156
R154423:154426 compcert.cfrontend.Ctypes <> type ind
binder 154419:154419 <> t:1157
R154435:154452 compcert.common.AST <> calling_convention rec
binder 154430:154431 <> cc:1158
R154487:154489 Coq.Init.Logic <> ::type_scope:x_'='_x not
R154464:154470 VST.veric.initial_world <> find_id def
R154475:154483 compcert.cfrontend.Ctypes <> prog_defs proj
R154472:154472 VST.floyd.VSU <> i:1154 var
R154490:154493 Coq.Init.Datatypes <> Some constr
R154496:154499 compcert.common.AST <> Gfun constr
R154502:154509 compcert.cfrontend.Ctypes <> External constr
R154518:154519 VST.floyd.VSU <> cc:1158 var
R154516:154516 VST.floyd.VSU <> t:1157 var
R154513:154514 VST.floyd.VSU <> ts:1156 var
R154511:154511 VST.floyd.VSU <> f:1155 var
R154335:154336 Coq.Lists.List <> In def
R154341:154343 Coq.Lists.List <> map def
R154345:154347 Coq.Init.Datatypes <> fst def
R154338:154338 VST.floyd.VSU <> i:1154 var
R154551:154562 compcert.lib.Coqlib <> list_norepet ind
R154565:154567 Coq.Lists.List <> map def
R154574:154582 compcert.cfrontend.Ctypes <> prog_defs proj
R154569:154571 Coq.Init.Datatypes <> fst def
R154551:154562 compcert.lib.Coqlib <> list_norepet ind
R154565:154567 Coq.Lists.List <> map def
R154574:154582 compcert.cfrontend.Ctypes <> prog_defs proj
R154569:154571 Coq.Init.Datatypes <> fst def
R154615:154626 compcert.lib.Coqlib <> list_norepet ind
R154629:154631 Coq.Lists.List <> map def
R154641:154644 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R154633:154635 Coq.Init.Datatypes <> fst def
R154615:154626 compcert.lib.Coqlib <> list_norepet ind
R154629:154631 Coq.Lists.List <> map def
R154641:154644 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R154633:154635 Coq.Init.Datatypes <> fst def
R154679:154690 compcert.lib.Coqlib <> list_norepet ind
R154693:154695 Coq.Lists.List <> map def
R154697:154699 Coq.Init.Datatypes <> fst def
R154679:154690 compcert.lib.Coqlib <> list_norepet ind
R154693:154695 Coq.Lists.List <> map def
R154697:154699 Coq.Init.Datatypes <> fst def
binder 154740:154740 <> i:1159
R154761:154764 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R154765:154771 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R154781:154786 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 154772:154772 <> f:1160
binder 154774:154775 <> ts:1161
binder 154777:154777 <> t:1162
binder 154779:154780 <> cc:1163
R154810:154812 Coq.Init.Logic <> ::type_scope:x_'='_x not
R154787:154793 VST.veric.initial_world <> find_id def
R154798:154806 compcert.cfrontend.Ctypes <> prog_defs proj
R154795:154795 VST.floyd.VSU <> i:1159 var
R154813:154816 Coq.Init.Datatypes <> Some constr
R154819:154822 compcert.common.AST <> Gfun constr
R154825:154832 compcert.cfrontend.Ctypes <> External constr
R154841:154842 VST.floyd.VSU <> cc:1163 var
R154839:154839 VST.floyd.VSU <> t:1162 var
R154836:154837 VST.floyd.VSU <> ts:1161 var
R154834:154834 VST.floyd.VSU <> f:1160 var
R154743:154744 Coq.Lists.List <> In def
R154749:154751 Coq.Lists.List <> map def
R154753:154755 Coq.Init.Datatypes <> fst def
R154746:154746 VST.floyd.VSU <> i:1159 var
binder 154740:154740 <> i:1164
R154761:154764 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R154765:154771 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R154781:154786 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 154772:154772 <> f:1165
binder 154774:154775 <> ts:1166
binder 154777:154777 <> t:1167
binder 154779:154780 <> cc:1168
R154810:154812 Coq.Init.Logic <> ::type_scope:x_'='_x not
R154787:154793 VST.veric.initial_world <> find_id def
R154798:154806 compcert.cfrontend.Ctypes <> prog_defs proj
R154795:154795 VST.floyd.VSU <> i:1164 var
R154813:154816 Coq.Init.Datatypes <> Some constr
R154819:154822 compcert.common.AST <> Gfun constr
R154825:154832 compcert.cfrontend.Ctypes <> External constr
R154841:154842 VST.floyd.VSU <> cc:1168 var
R154839:154839 VST.floyd.VSU <> t:1167 var
R154836:154837 VST.floyd.VSU <> ts:1166 var
R154834:154834 VST.floyd.VSU <> f:1165 var
R154743:154744 Coq.Lists.List <> In def
R154749:154751 Coq.Lists.List <> map def
R154753:154755 Coq.Init.Datatypes <> fst def
R154746:154746 VST.floyd.VSU <> i:1164 var
binder 155144:155144 <> i:1169
binder 155146:155148 <> phi:1170
binder 155150:155151 <> fd:1171
R155192:155195 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R155219:155226 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R155228:155229 VST.floyd.VSU <> SF def
R155278:155280 VST.floyd.VSU <> phi:1170 var
R155275:155276 VST.floyd.VSU <> fd:1171 var
R155273:155273 VST.floyd.VSU <> i:1169 var
R155265:155268 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R155243:155256 compcert.common.Globalenvs Genv globalenv def
R155208:155210 Coq.Init.Logic <> ::type_scope:x_'='_x not
R155196:155202 VST.veric.initial_world <> find_id def
R155204:155204 VST.floyd.VSU <> i:1169 var
R155211:155214 Coq.Init.Datatypes <> Some constr
R155216:155218 VST.floyd.VSU <> phi:1170 var
R155182:155184 Coq.Init.Logic <> ::type_scope:x_'='_x not
R155158:155164 VST.veric.initial_world <> find_id def
R155169:155178 VST.veric.Clight_initial_world <> prog_funct syndef
R155166:155166 VST.floyd.VSU <> i:1169 var
R155185:155188 Coq.Init.Datatypes <> Some constr
R155190:155191 VST.floyd.VSU <> fd:1171 var
binder 155144:155144 <> i:1172
binder 155146:155148 <> phi:1173
binder 155150:155151 <> fd:1174
R155192:155195 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R155219:155226 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R155228:155229 VST.floyd.VSU <> SF def
R155278:155280 VST.floyd.VSU <> phi:1173 var
R155275:155276 VST.floyd.VSU <> fd:1174 var
R155273:155273 VST.floyd.VSU <> i:1172 var
R155265:155268 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R155243:155256 compcert.common.Globalenvs Genv globalenv def
R155208:155210 Coq.Init.Logic <> ::type_scope:x_'='_x not
R155196:155202 VST.veric.initial_world <> find_id def
R155204:155204 VST.floyd.VSU <> i:1172 var
R155211:155214 Coq.Init.Datatypes <> Some constr
R155216:155218 VST.floyd.VSU <> phi:1173 var
R155182:155184 Coq.Init.Logic <> ::type_scope:x_'='_x not
R155158:155164 VST.veric.initial_world <> find_id def
R155169:155178 VST.veric.Clight_initial_world <> prog_funct syndef
R155166:155166 VST.floyd.VSU <> i:1172 var
R155185:155188 Coq.Init.Datatypes <> Some constr
R155190:155191 VST.floyd.VSU <> fd:1174 var
R155307:155324 VST.floyd.VSU <> SF_ctx_extensional thm
R155307:155324 VST.floyd.VSU <> SF_ctx_extensional thm
R155361:155376 VST.floyd.VSU <> Comp_G_justified proj
R155361:155376 VST.floyd.VSU <> Comp_G_justified proj
R155408:155419 VST.floyd.VSU <> Comp_ctx_LNR thm
R155408:155419 VST.floyd.VSU <> Comp_ctx_LNR thm
R155771:155786 VST.floyd.assoclists <> find_id_app_char thm
R155771:155786 VST.floyd.assoclists <> find_id_app_char thm
R155771:155786 VST.floyd.assoclists <> find_id_app_char thm
R155771:155786 VST.floyd.assoclists <> find_id_app_char thm
binder 155826:155826 <> i:1175
binder 155828:155830 <> phi:1176
R155857:155871 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R155872:155878 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R155883:155884 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 155879:155882 <> phi':1177
R155909:155912 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R155897:155899 Coq.Init.Logic <> ::type_scope:x_'='_x not
R155885:155891 VST.veric.initial_world <> find_id def
R155893:155893 VST.floyd.VSU <> i:1175 var
R155900:155903 Coq.Init.Datatypes <> Some constr
R155905:155908 VST.floyd.VSU <> phi':1177 var
R155913:155923 VST.veric.SeparationLogic <> funspec_sub def
R155930:155932 VST.floyd.VSU <> phi:1176 var
R155925:155928 VST.floyd.VSU <> phi':1177 var
R155846:155848 Coq.Init.Logic <> ::type_scope:x_'='_x not
R155833:155839 VST.veric.initial_world <> find_id def
R155841:155841 VST.floyd.VSU <> i:1175 var
R155849:155852 Coq.Init.Datatypes <> Some constr
R155854:155856 VST.floyd.VSU <> phi:1176 var
binder 155826:155826 <> i:1178
binder 155828:155830 <> phi:1179
R155857:155871 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R155872:155878 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R155883:155884 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 155879:155882 <> phi':1180
R155909:155912 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R155897:155899 Coq.Init.Logic <> ::type_scope:x_'='_x not
R155885:155891 VST.veric.initial_world <> find_id def
R155893:155893 VST.floyd.VSU <> i:1178 var
R155900:155903 Coq.Init.Datatypes <> Some constr
R155905:155908 VST.floyd.VSU <> phi':1180 var
R155913:155923 VST.veric.SeparationLogic <> funspec_sub def
R155930:155932 VST.floyd.VSU <> phi:1179 var
R155925:155928 VST.floyd.VSU <> phi':1180 var
R155846:155848 Coq.Init.Logic <> ::type_scope:x_'='_x not
R155833:155839 VST.veric.initial_world <> find_id def
R155841:155841 VST.floyd.VSU <> i:1178 var
R155849:155852 Coq.Init.Datatypes <> Some constr
R155854:155856 VST.floyd.VSU <> phi:1179 var
R155958:155971 VST.floyd.VSU <> Comp_G_Exports proj
R155958:155971 VST.floyd.VSU <> Comp_G_Exports proj
R156049:156057 VST.floyd.VSU <> order_SOC thm
R156049:156057 VST.floyd.VSU <> order_SOC thm
R156049:156057 VST.floyd.VSU <> order_SOC thm
R156049:156057 VST.floyd.VSU <> order_SOC thm
R156049:156057 VST.floyd.VSU <> order_SOC thm
R156088:156114 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R156088:156114 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R156147:156155 VST.floyd.VSU <> order_dom thm
R156147:156155 VST.floyd.VSU <> order_dom thm
R156147:156155 VST.floyd.VSU <> order_dom thm
R156211:156225 VST.floyd.VSU <> Build_Component constr
R156333:156347 VST.floyd.VSU <> Comp_MkInitPred proj
R156211:156225 VST.floyd.VSU <> Build_Component constr
R156333:156347 VST.floyd.VSU <> Comp_MkInitPred proj
R156383:156406 VST.floyd.VSU <> Build_CanonicalComponent constr
R156383:156406 VST.floyd.VSU <> Build_CanonicalComponent constr
R156460:156468 VST.floyd.VSU <> order_dom thm
R156460:156468 VST.floyd.VSU <> order_dom thm
R156516:156523 VST.floyd.VSU <> order_i' thm
R156516:156523 VST.floyd.VSU <> order_i' thm
R156568:156573 VST.floyd.VSU <> Comp_G def
R156611:156620 VST.floyd.VSU <> Comp_G_dom proj
R156611:156620 VST.floyd.VSU <> Comp_G_dom proj
R156632:156641 Coq.Lists.List <> in_map_iff thm
R156632:156641 Coq.Lists.List <> in_map_iff thm
R156706:156714 Coq.Lists.List <> filter_In thm
R156706:156714 Coq.Lists.List <> filter_In thm
R156761:156766 Coq.Lists.List <> in_dec thm
R156788:156791 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R156780:156785 VST.floyd.VSU <> IntIDs def
R156792:156794 Coq.Lists.List <> map def
R156796:156798 Coq.Init.Datatypes <> fst def
R156768:156775 compcert.common.AST <> ident_eq def
R156761:156766 Coq.Lists.List <> in_dec thm
R156788:156791 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R156780:156785 VST.floyd.VSU <> IntIDs def
R156792:156794 Coq.Lists.List <> map def
R156796:156798 Coq.Init.Datatypes <> fst def
R156768:156775 compcert.common.AST <> ident_eq def
prf 161340:161366 <> CanonicalComponent_M_entail
binder 161369:161373 <> Espec:1181
binder 161375:161375 <> V:1182
binder 161377:161378 <> cs:1183
binder 161380:161380 <> E:1184
binder 161382:161384 <> Imp:1185
binder 161386:161386 <> p:1186
binder 161388:161390 <> Exp:1187
binder 161392:161392 <> G:1188
binder 161395:161397 <> GP1:1189
binder 161399:161401 <> GP2:1190
R161462:161465 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R161466:161466 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R161495:161506 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R161508:161527 VST.floyd.VSU <> CanonicalComponent_M rec
R161556:161556 VST.floyd.VSU <> G:1188 var
R161552:161554 VST.floyd.VSU <> GP2:1190 var
R161548:161550 VST.floyd.VSU <> Exp:1187 var
R161546:161546 VST.floyd.VSU <> p:1186 var
R161542:161544 VST.floyd.VSU <> Imp:1185 var
R161540:161540 VST.floyd.VSU <> E:1184 var
R161537:161538 VST.floyd.VSU <> cs:1183 var
R161535:161535 VST.floyd.VSU <> V:1182 var
R161529:161533 VST.floyd.VSU <> Espec:1181 var
binder 161474:161475 <> gv:1191
R161484:161488 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R161478:161480 VST.floyd.VSU <> GP1:1189 var
R161482:161483 VST.floyd.VSU <> gv:1191 var
R161489:161491 VST.floyd.VSU <> GP2:1190 var
R161493:161494 VST.floyd.VSU <> gv:1191 var
R161413:161432 VST.floyd.VSU <> CanonicalComponent_M rec
R161461:161461 VST.floyd.VSU <> G:1188 var
R161457:161459 VST.floyd.VSU <> GP1:1189 var
R161453:161455 VST.floyd.VSU <> Exp:1187 var
R161451:161451 VST.floyd.VSU <> p:1186 var
R161447:161449 VST.floyd.VSU <> Imp:1185 var
R161445:161445 VST.floyd.VSU <> E:1184 var
R161442:161443 VST.floyd.VSU <> cs:1183 var
R161440:161440 VST.floyd.VSU <> V:1182 var
R161434:161438 VST.floyd.VSU <> Espec:1181 var
R161583:161608 VST.floyd.VSU <> Build_CanonicalComponent_M constr
R161583:161608 VST.floyd.VSU <> Build_CanonicalComponent_M constr
R161618:161642 VST.floyd.VSU <> CanonicalComponent_entail thm
R161618:161642 VST.floyd.VSU <> CanonicalComponent_entail thm
def 161680:161691 <> CanonicalVSU
binder 161694:161698 <> Espec:1192
binder 161700:161700 <> V:1193
binder 161702:161703 <> cs:1194
binder 161706:161706 <> E:1195
binder 161708:161714 <> Imports:1196
binder 161716:161716 <> p:1197
binder 161718:161724 <> Exports:1198
binder 161726:161727 <> GP:1199
R161734:161737 Coq.Init.Specif <> sigT ind
binder 161744:161744 <> G:1200
R161750:161769 VST.floyd.VSU <> CanonicalComponent_M rec
R161805:161805 VST.floyd.VSU <> G:1200 var
R161802:161803 VST.floyd.VSU <> GP:1199 var
R161794:161800 VST.floyd.VSU <> Exports:1198 var
R161792:161792 VST.floyd.VSU <> p:1197 var
R161784:161790 VST.floyd.VSU <> Imports:1196 var
R161782:161782 VST.floyd.VSU <> E:1195 var
R161779:161780 VST.floyd.VSU <> cs:1194 var
R161777:161777 VST.floyd.VSU <> V:1193 var
R161771:161775 VST.floyd.VSU <> Espec:1192 var
prf 161816:161834 <> VSU_to_CanonicalVSU
binder 161837:161841 <> Espec:1201
binder 161843:161843 <> V:1202
binder 161845:161846 <> cs:1203
binder 161848:161850 <> Ext:1204
binder 161852:161854 <> Imp:1205
binder 161856:161856 <> p:1206
binder 161858:161860 <> Exp:1207
binder 161862:161863 <> GP:1208
R161873:161875 VST.floyd.VSU <> VSU def
R161902:161903 VST.floyd.VSU <> GP:1208 var
R161898:161900 VST.floyd.VSU <> Exp:1207 var
R161896:161896 VST.floyd.VSU <> p:1206 var
R161892:161894 VST.floyd.VSU <> Imp:1205 var
R161888:161890 VST.floyd.VSU <> Ext:1204 var
R161885:161886 VST.floyd.VSU <> cs:1203 var
R161883:161883 VST.floyd.VSU <> V:1202 var
R161877:161881 VST.floyd.VSU <> Espec:1201 var
binder 161867:161869 <> vsu:1209
R161914:161925 VST.floyd.VSU <> CanonicalVSU def
R161952:161953 VST.floyd.VSU <> GP:1208 var
R161948:161950 VST.floyd.VSU <> Exp:1207 var
R161946:161946 VST.floyd.VSU <> p:1206 var
R161942:161944 VST.floyd.VSU <> Imp:1205 var
R161938:161940 VST.floyd.VSU <> Ext:1204 var
R161935:161936 VST.floyd.VSU <> cs:1203 var
R161933:161933 VST.floyd.VSU <> V:1202 var
R161927:161931 VST.floyd.VSU <> Espec:1201 var
R161999:162013 VST.floyd.VSU <> Comp_to_CanComp thm
R161999:162013 VST.floyd.VSU <> Comp_to_CanComp thm
prf 162209:162227 <> CanonicalVSU_entail
binder 162230:162234 <> Espec:1210
binder 162236:162236 <> V:1211
binder 162238:162239 <> cs:1212
binder 162241:162241 <> E:1213
binder 162243:162245 <> Imp:1214
binder 162247:162247 <> p:1215
binder 162249:162251 <> Exp:1216
binder 162254:162256 <> GP1:1217
binder 162258:162260 <> GP2:1218
R162311:162314 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R162315:162315 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R162344:162355 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R162357:162368 VST.floyd.VSU <> CanonicalVSU def
R162393:162395 VST.floyd.VSU <> GP2:1218 var
R162389:162391 VST.floyd.VSU <> Exp:1216 var
R162387:162387 VST.floyd.VSU <> p:1215 var
R162383:162385 VST.floyd.VSU <> Imp:1214 var
R162381:162381 VST.floyd.VSU <> E:1213 var
R162378:162379 VST.floyd.VSU <> cs:1212 var
R162376:162376 VST.floyd.VSU <> V:1211 var
R162370:162374 VST.floyd.VSU <> Espec:1210 var
binder 162323:162324 <> gv:1219
R162333:162337 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R162327:162329 VST.floyd.VSU <> GP1:1217 var
R162331:162332 VST.floyd.VSU <> gv:1219 var
R162338:162340 VST.floyd.VSU <> GP2:1218 var
R162342:162343 VST.floyd.VSU <> gv:1219 var
R162272:162283 VST.floyd.VSU <> CanonicalVSU def
R162308:162310 VST.floyd.VSU <> GP1:1217 var
R162304:162306 VST.floyd.VSU <> Exp:1216 var
R162302:162302 VST.floyd.VSU <> p:1215 var
R162298:162300 VST.floyd.VSU <> Imp:1214 var
R162296:162296 VST.floyd.VSU <> E:1213 var
R162293:162294 VST.floyd.VSU <> cs:1212 var
R162291:162291 VST.floyd.VSU <> V:1211 var
R162285:162289 VST.floyd.VSU <> Espec:1210 var
R162453:162479 VST.floyd.VSU <> CanonicalComponent_M_entail thm
R162453:162479 VST.floyd.VSU <> CanonicalComponent_M_entail thm
ind 162507:162515 <> semaxfunc
constr 162662:162674 <> semaxfunc_nil
constr 162715:162728 <> semaxfunc_cons
constr 163029:163046 <> semaxfunc_cons_ext
binder 162518:162522 <> Espec:1220
R162531:162539 VST.veric.mpred <> compspecs class
binder 162526:162527 <> cs:1221
R162547:162554 VST.veric.mpred <> varspecs def
binder 162543:162543 <> V:1222
R162562:162569 VST.veric.mpred <> funspecs def
binder 162558:162558 <> G:1223
R162578:162583 compcert.common.Globalenvs Genv t rec
R162599:162602 compcert.cfrontend.Ctypes <> type ind
R162585:162597 compcert.cfrontend.Clight <> fundef def
binder 162573:162574 <> ge:1224
R162636:162639 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R162648:162651 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R162640:162647 VST.veric.mpred <> funspecs def
R162608:162611 Coq.Init.Datatypes <> list ind
R162619:162621 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R162614:162618 compcert.common.AST <> ident def
R162622:162634 compcert.cfrontend.Clight <> fundef def
R162678:162686 VST.floyd.VSU <> semaxfunc:1225 ind
R162708:162710 Coq.Init.Datatypes <> nil constr
R162704:162706 Coq.Init.Datatypes <> nil constr
R162701:162702 VST.floyd.VSU <> ge:1224 var
R162699:162699 VST.floyd.VSU <> G:1223 var
R162697:162697 VST.floyd.VSU <> V:1222 var
R162694:162695 VST.floyd.VSU <> cs:1221 var
R162688:162692 VST.floyd.VSU <> Espec:1220 var
R162744:162747 Coq.Init.Datatypes <> list ind
R162755:162757 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R162750:162754 compcert.common.AST <> ident def
R162758:162770 compcert.cfrontend.Clight <> fundef def
binder 162739:162740 <> fs:1227
R162780:162784 compcert.common.AST <> ident def
binder 162775:162776 <> id:1228
R162792:162799 compcert.cfrontend.Clight <> function rec
binder 162788:162788 <> f:1229
binder 162802:162804 <> phi:1230
R162812:162819 VST.veric.mpred <> funspecs def
binder 162807:162808 <> G':1231
R162866:162871 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R162912:162917 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R162950:162955 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R162957:162965 VST.floyd.VSU <> semaxfunc:1225 ind
R163018:163021 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R163009:163009 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R163012:163013 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R163017:163017 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R163010:163011 VST.floyd.VSU <> id:1228 var
R163014:163016 VST.floyd.VSU <> phi:1230 var
R163022:163023 VST.floyd.VSU <> G':1231 var
R163000:163003 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R162984:162984 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162987:162988 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162999:162999 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162985:162986 VST.floyd.VSU <> id:1228 var
R162989:162996 compcert.cfrontend.Ctypes <> Internal constr
R162998:162998 VST.floyd.VSU <> f:1229 var
R163004:163005 VST.floyd.VSU <> fs:1227 var
R162980:162981 VST.floyd.VSU <> ge:1224 var
R162978:162978 VST.floyd.VSU <> G:1223 var
R162976:162976 VST.floyd.VSU <> V:1222 var
R162973:162974 VST.floyd.VSU <> cs:1221 var
R162967:162971 VST.floyd.VSU <> Espec:1220 var
R162919:162927 VST.floyd.VSU <> semaxfunc:1225 ind
R162948:162949 VST.floyd.VSU <> G':1231 var
R162945:162946 VST.floyd.VSU <> fs:1227 var
R162942:162943 VST.floyd.VSU <> ge:1224 var
R162940:162940 VST.floyd.VSU <> G:1223 var
R162938:162938 VST.floyd.VSU <> V:1222 var
R162935:162936 VST.floyd.VSU <> cs:1221 var
R162929:162933 VST.floyd.VSU <> Espec:1220 var
R162905:162907 Coq.Init.Logic <> ::type_scope:x_'='_x not
R162872:162875 Coq.Init.Datatypes <> negb def
R162878:162887 VST.veric.base <> id_in_list def
R162893:162895 Coq.Lists.List <> map def
R162901:162902 VST.floyd.VSU <> fs:1227 var
R162897:162899 Coq.Init.Datatypes <> fst def
R162889:162890 VST.floyd.VSU <> id:1228 var
R162908:162911 Coq.Init.Datatypes <> true constr
R162825:162846 VST.floyd.VSU <> semaxfunc_InternalInfo def
R162863:162865 VST.floyd.VSU <> phi:1230 var
R162861:162861 VST.floyd.VSU <> f:1229 var
R162858:162859 VST.floyd.VSU <> id:1228 var
R162855:162856 VST.floyd.VSU <> ge:1224 var
R162853:162853 VST.floyd.VSU <> G:1223 var
R162851:162851 VST.floyd.VSU <> V:1222 var
R162848:162849 VST.floyd.VSU <> cs:1221 var
R163062:163065 Coq.Init.Datatypes <> list ind
R163073:163075 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R163068:163072 compcert.common.AST <> ident def
R163076:163088 compcert.cfrontend.Clight <> fundef def
binder 163057:163058 <> fs:1232
R163098:163102 compcert.common.AST <> ident def
binder 163093:163094 <> id:1233
R163116:163132 compcert.common.AST <> external_function ind
binder 163111:163112 <> ef:1234
R163145:163152 compcert.cfrontend.Ctypes <> typelist ind
binder 163136:163141 <> argsig:1235
R163165:163168 compcert.cfrontend.Ctypes <> type ind
binder 163156:163161 <> retsig:1236
R163177:163184 VST.veric.mpred <> funspecs def
binder 163172:163173 <> G':1237
R163193:163210 compcert.common.AST <> calling_convention rec
binder 163188:163189 <> cc:1238
binder 163217:163219 <> phi:1239
R163283:163289 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R163324:163329 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R163362:163367 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R163369:163377 VST.floyd.VSU <> semaxfunc:1225 ind
R163452:163455 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R163443:163443 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R163446:163447 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R163451:163451 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R163444:163445 VST.floyd.VSU <> id:1233 var
R163448:163450 VST.floyd.VSU <> phi:1239 var
R163456:163457 VST.floyd.VSU <> G':1237 var
R163430:163433 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R163396:163396 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R163399:163400 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R163429:163429 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R163397:163398 VST.floyd.VSU <> id:1233 var
R163401:163408 compcert.cfrontend.Ctypes <> External constr
R163427:163428 VST.floyd.VSU <> cc:1238 var
R163420:163425 VST.floyd.VSU <> retsig:1236 var
R163413:163418 VST.floyd.VSU <> argsig:1235 var
R163410:163411 VST.floyd.VSU <> ef:1234 var
R163434:163435 VST.floyd.VSU <> fs:1232 var
R163392:163393 VST.floyd.VSU <> ge:1224 var
R163390:163390 VST.floyd.VSU <> G:1223 var
R163388:163388 VST.floyd.VSU <> V:1222 var
R163385:163386 VST.floyd.VSU <> cs:1221 var
R163379:163383 VST.floyd.VSU <> Espec:1220 var
R163331:163339 VST.floyd.VSU <> semaxfunc:1225 ind
R163360:163361 VST.floyd.VSU <> G':1237 var
R163357:163358 VST.floyd.VSU <> fs:1232 var
R163354:163355 VST.floyd.VSU <> ge:1224 var
R163352:163352 VST.floyd.VSU <> G:1223 var
R163350:163350 VST.floyd.VSU <> V:1222 var
R163347:163348 VST.floyd.VSU <> cs:1221 var
R163341:163345 VST.floyd.VSU <> Espec:1220 var
R163316:163318 Coq.Init.Logic <> ::type_scope:x_'='_x not
R163290:163299 VST.veric.base <> id_in_list def
R163305:163307 Coq.Lists.List <> map def
R163313:163314 VST.floyd.VSU <> fs:1232 var
R163309:163311 Coq.Init.Datatypes <> fst def
R163301:163302 VST.floyd.VSU <> id:1233 var
R163319:163323 Coq.Init.Datatypes <> false constr
R163225:163246 VST.floyd.VSU <> semaxfunc_ExternalInfo def
R163280:163282 VST.floyd.VSU <> phi:1239 var
R163277:163278 VST.floyd.VSU <> cc:1238 var
R163270:163275 VST.floyd.VSU <> retsig:1236 var
R163263:163268 VST.floyd.VSU <> argsig:1235 var
R163260:163261 VST.floyd.VSU <> ef:1234 var
R163257:163258 VST.floyd.VSU <> id:1233 var
R163254:163255 VST.floyd.VSU <> ge:1224 var
R163248:163252 VST.floyd.VSU <> Espec:1220 var
prf 163468:163482 <> semaxfunc_sound
binder 163485:163489 <> Espec:1240
binder 163491:163492 <> cs:1241
binder 163494:163494 <> V:1242
binder 163496:163496 <> G:1243
binder 163498:163499 <> ge:1244
binder 163501:163504 <> funs:1245
binder 163506:163507 <> G':1246
R163519:163527 VST.floyd.VSU <> semaxfunc ind
R163550:163551 VST.floyd.VSU <> G':1246 var
R163545:163548 VST.floyd.VSU <> funs:1245 var
R163542:163543 VST.floyd.VSU <> ge:1244 var
R163540:163540 VST.floyd.VSU <> G:1243 var
R163538:163538 VST.floyd.VSU <> V:1242 var
R163535:163536 VST.floyd.VSU <> cs:1241 var
R163529:163533 VST.floyd.VSU <> Espec:1240 var
binder 163514:163515 <> SF:1247
R163558:163567 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax_func defax
R163590:163591 VST.floyd.VSU <> G':1246 var
R163585:163588 VST.floyd.VSU <> funs:1245 var
R163582:163583 VST.floyd.VSU <> ge:1244 var
R163579:163580 VST.floyd.VSU <> cs:1241 var
R163577:163577 VST.floyd.VSU <> G:1243 var
R163575:163575 VST.floyd.VSU <> V:1242 var
R163569:163573 VST.floyd.VSU <> Espec:1240 var
R163625:163638 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_func_nil prfax
R163625:163638 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_func_nil prfax
R163711:163725 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_func_cons prfax
R163711:163725 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_func_cons prfax
R163912:163930 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_func_cons_ext prfax
R163912:163930 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_func_cons_ext prfax
prf 163971:163996 <> semaxfunc_cons_int_vacuous
binder 163999:164003 <> Espec:1248
R164012:164020 VST.veric.mpred <> compspecs class
binder 164007:164008 <> cs:1249
R164028:164035 VST.veric.mpred <> varspecs def
binder 164024:164024 <> V:1250
R164043:164050 VST.veric.mpred <> funspecs def
binder 164039:164039 <> G:1251
binder 164053:164054 <> ge:1252
R164074:164077 Coq.Init.Datatypes <> list ind
R164085:164087 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R164080:164084 compcert.common.AST <> ident def
R164088:164100 compcert.cfrontend.Clight <> fundef def
binder 164069:164070 <> fs:1253
R164110:164114 compcert.common.AST <> ident def
binder 164105:164106 <> id:1254
binder 164117:164121 <> ifunc:1255
R164132:164136 compcert.common.Values <> block def
binder 164128:164128 <> b:1256
binder 164139:164140 <> G':1257
R164175:164177 Coq.Init.Logic <> ::type_scope:x_'='_x not
R164149:164158 VST.veric.base <> id_in_list def
R164164:164166 Coq.Lists.List <> map def
R164172:164173 VST.floyd.VSU <> fs:1253 var
R164168:164170 Coq.Init.Datatypes <> fst def
R164160:164161 VST.floyd.VSU <> id:1254 var
R164178:164182 Coq.Init.Datatypes <> false constr
binder 164145:164146 <> ID:1258
R164218:164220 Coq.Init.Logic <> ::type_scope:x_'='_x not
R164193:164202 VST.veric.base <> id_in_list def
R164208:164210 Coq.Lists.List <> map def
R164216:164216 VST.floyd.VSU <> G:1251 var
R164212:164214 Coq.Init.Datatypes <> fst def
R164204:164205 VST.floyd.VSU <> id:1254 var
R164221:164224 Coq.Init.Datatypes <> true constr
binder 164188:164190 <> ID2:1259
R164258:164260 Coq.Init.Logic <> ::type_scope:x_'='_x not
R164236:164251 compcert.common.Globalenvs Genv find_symbol def
R164256:164257 VST.floyd.VSU <> id:1254 var
R164253:164254 VST.floyd.VSU <> ge:1252 var
R164261:164264 Coq.Init.Datatypes <> Some constr
R164266:164266 VST.floyd.VSU <> b:1256 var
binder 164230:164233 <> GfsB:1260
R164303:164305 Coq.Init.Logic <> ::type_scope:x_'='_x not
R164279:164297 compcert.common.Globalenvs Genv find_funct_ptr def
R164302:164302 VST.floyd.VSU <> b:1256 var
R164299:164300 VST.floyd.VSU <> ge:1252 var
R164306:164309 Coq.Init.Datatypes <> Some constr
R164312:164319 compcert.cfrontend.Ctypes <> Internal constr
R164321:164325 VST.floyd.VSU <> ifunc:1255 var
binder 164272:164276 <> GffpB:1261
R164340:164345 Coq.Lists.List <> Forall ind
R164413:164419 compcert.cfrontend.Clight <> fn_vars proj
R164421:164425 VST.floyd.VSU <> ifunc:1255 var
R164362:164364 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R164357:164361 compcert.common.AST <> ident def
R164365:164368 compcert.cfrontend.Ctypes <> type ind
binder 164352:164353 <> it:1262
R164403:164405 Coq.Init.Logic <> ::type_scope:x_'='_x not
R164373:164385 compcert.cfrontend.Ctypes <> complete_type def
R164396:164398 Coq.Init.Datatypes <> snd def
R164400:164401 VST.floyd.VSU <> it:1262 var
R164387:164393 VST.veric.mpred <> cenv_cs meth
R164406:164409 Coq.Init.Datatypes <> true constr
binder 164332:164337 <> CTvars:1263
R164440:164451 compcert.lib.Coqlib <> list_norepet ind
R164479:164482 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R164454:164456 Coq.Lists.List <> map def
R164463:164471 compcert.cfrontend.Clight <> fn_params proj
R164473:164477 VST.floyd.VSU <> ifunc:1255 var
R164458:164460 Coq.Init.Datatypes <> fst def
R164483:164485 Coq.Lists.List <> map def
R164492:164499 compcert.cfrontend.Clight <> fn_temps proj
R164501:164505 VST.floyd.VSU <> ifunc:1255 var
R164487:164489 Coq.Init.Datatypes <> fst def
binder 164432:164437 <> LNR_PT:1264
R164523:164534 compcert.lib.Coqlib <> list_norepet ind
R164537:164539 Coq.Lists.List <> map def
R164546:164552 compcert.cfrontend.Clight <> fn_vars proj
R164554:164558 VST.floyd.VSU <> ifunc:1255 var
R164541:164543 Coq.Init.Datatypes <> fst def
binder 164513:164520 <> LNR_Vars:1265
R164576:164593 VST.veric.semax <> var_sizes_ok def
R164604:164610 compcert.cfrontend.Clight <> fn_vars proj
R164612:164616 VST.floyd.VSU <> ifunc:1255 var
R164595:164601 VST.veric.mpred <> cenv_cs meth
binder 164566:164573 <> VarSizes:1266
R164631:164639 VST.floyd.VSU <> semaxfunc ind
R164660:164661 VST.floyd.VSU <> G':1257 var
R164657:164658 VST.floyd.VSU <> fs:1253 var
R164654:164655 VST.floyd.VSU <> ge:1252 var
R164652:164652 VST.floyd.VSU <> G:1251 var
R164650:164650 VST.floyd.VSU <> V:1250 var
R164647:164648 VST.floyd.VSU <> cs:1249 var
R164641:164645 VST.floyd.VSU <> Espec:1248 var
binder 164623:164627 <> Sfunc:1267
R164668:164676 VST.floyd.VSU <> semaxfunc ind
R164766:164769 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R164728:164728 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164731:164732 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164765:164765 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164729:164730 VST.floyd.VSU <> id:1254 var
R164733:164747 VST.floyd.base2 <> vacuous_funspec def
R164750:164757 compcert.cfrontend.Ctypes <> Internal constr
R164759:164763 VST.floyd.VSU <> ifunc:1255 var
R164770:164771 VST.floyd.VSU <> G':1257 var
R164715:164718 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R164695:164695 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164698:164699 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164714:164714 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164696:164697 VST.floyd.VSU <> id:1254 var
R164700:164707 compcert.cfrontend.Ctypes <> Internal constr
R164709:164713 VST.floyd.VSU <> ifunc:1255 var
R164719:164720 VST.floyd.VSU <> fs:1253 var
R164691:164692 VST.floyd.VSU <> ge:1252 var
R164689:164689 VST.floyd.VSU <> G:1251 var
R164687:164687 VST.floyd.VSU <> V:1250 var
R164684:164685 VST.floyd.VSU <> cs:1249 var
R164678:164682 VST.floyd.VSU <> Espec:1248 var
R164797:164810 VST.floyd.VSU <> semaxfunc_cons constr
R164797:164810 VST.floyd.VSU <> semaxfunc_cons constr
R164893:164912 VST.veric.SeparationLogic <> semax_body_params_ok def
R164925:164946 VST.veric.base <> compute_list_norepet_i thm
R164925:164946 VST.veric.base <> compute_list_norepet_i thm
R164985:165006 VST.veric.base <> compute_list_norepet_i thm
R164985:165006 VST.veric.base <> compute_list_norepet_i thm
prf 165218:165243 <> semaxfunc_cons_ext_vacuous
R165266:165275 VST.veric.juicy_extspec <> OracleKind class
binder 165259:165263 <> Espec:1268
R165283:165290 VST.veric.mpred <> varspecs def
binder 165279:165279 <> V:1269
R165298:165305 VST.veric.mpred <> funspecs def
binder 165294:165294 <> G:1270
R165314:165322 VST.veric.mpred <> compspecs class
binder 165309:165310 <> cs:1271
binder 165325:165326 <> ge:1272
R165343:165346 Coq.Init.Datatypes <> list ind
R165354:165356 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R165349:165353 compcert.common.AST <> ident def
R165357:165369 compcert.cfrontend.Clight <> fundef def
binder 165338:165339 <> fs:1273
R165379:165383 compcert.common.AST <> ident def
binder 165374:165375 <> id:1274
R165392:165408 compcert.common.AST <> external_function ind
binder 165387:165388 <> ef:1275
R165430:165437 compcert.cfrontend.Ctypes <> typelist ind
binder 165421:165426 <> argsig:1276
R165450:165453 compcert.cfrontend.Ctypes <> type ind
binder 165441:165446 <> retsig:1277
R165471:165478 VST.veric.mpred <> funspecs def
binder 165466:165467 <> G':1278
binder 165481:165482 <> cc:1279
binder 165484:165484 <> b:1280
R165530:165540 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R165721:165739 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R165771:165789 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R165852:165862 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R165895:165905 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R165907:165915 VST.floyd.VSU <> semaxfunc ind
R166038:166041 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R165986:165986 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R165989:165990 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166037:166037 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R165987:165988 VST.floyd.VSU <> id:1274 var
R165991:166005 VST.floyd.base2 <> vacuous_funspec def
R166008:166015 compcert.cfrontend.Ctypes <> External constr
R166034:166035 VST.floyd.VSU <> cc:1279 var
R166027:166032 VST.floyd.VSU <> retsig:1277 var
R166020:166025 VST.floyd.VSU <> argsig:1276 var
R166017:166018 VST.floyd.VSU <> ef:1275 var
R166042:166043 VST.floyd.VSU <> G':1278 var
R165968:165971 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R165934:165934 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R165937:165938 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R165967:165967 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R165935:165936 VST.floyd.VSU <> id:1274 var
R165939:165946 compcert.cfrontend.Ctypes <> External constr
R165965:165966 VST.floyd.VSU <> cc:1279 var
R165958:165963 VST.floyd.VSU <> retsig:1277 var
R165951:165956 VST.floyd.VSU <> argsig:1276 var
R165948:165949 VST.floyd.VSU <> ef:1275 var
R165972:165973 VST.floyd.VSU <> fs:1273 var
R165930:165931 VST.floyd.VSU <> ge:1272 var
R165928:165928 VST.floyd.VSU <> G:1270 var
R165926:165926 VST.floyd.VSU <> V:1269 var
R165923:165924 VST.floyd.VSU <> cs:1271 var
R165917:165921 VST.floyd.VSU <> Espec:1268 var
R165864:165872 VST.floyd.VSU <> semaxfunc ind
R165893:165894 VST.floyd.VSU <> G':1278 var
R165890:165891 VST.floyd.VSU <> fs:1273 var
R165887:165888 VST.floyd.VSU <> ge:1272 var
R165885:165885 VST.floyd.VSU <> G:1270 var
R165883:165883 VST.floyd.VSU <> V:1269 var
R165880:165881 VST.floyd.VSU <> cs:1271 var
R165874:165878 VST.floyd.VSU <> Espec:1268 var
R165814:165816 Coq.Init.Logic <> ::type_scope:x_'='_x not
R165790:165808 compcert.common.Globalenvs Genv find_funct_ptr def
R165813:165813 VST.floyd.VSU <> b:1280 var
R165810:165811 VST.floyd.VSU <> ge:1272 var
R165817:165820 Coq.Init.Datatypes <> Some constr
R165823:165830 compcert.cfrontend.Ctypes <> External constr
R165849:165850 VST.floyd.VSU <> cc:1279 var
R165842:165847 VST.floyd.VSU <> retsig:1277 var
R165835:165840 VST.floyd.VSU <> argsig:1276 var
R165832:165833 VST.floyd.VSU <> ef:1275 var
R165762:165764 Coq.Init.Logic <> ::type_scope:x_'='_x not
R165740:165755 compcert.common.Globalenvs Genv find_symbol def
R165760:165761 VST.floyd.VSU <> id:1274 var
R165757:165758 VST.floyd.VSU <> ge:1272 var
R165765:165768 Coq.Init.Datatypes <> Some constr
R165770:165770 VST.floyd.VSU <> b:1280 var
R165550:165571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R165718:165720 Coq.Init.Logic <> ::type_scope:x_'='_x not
R165541:165546 compcert.common.AST <> ef_sig def
R165548:165549 VST.floyd.VSU <> ef:1275 var
R165572:165579 compcert.common.AST <> sig_args proj
R165572:165579 compcert.common.AST <> sig_args proj
R165621:165627 compcert.common.AST <> sig_res proj
R165665:165670 compcert.common.AST <> sig_cc proj
R165675:165686 VST.floyd.base2 <> cc_of_fundef def
R165689:165696 compcert.cfrontend.Ctypes <> External constr
R165715:165716 VST.floyd.VSU <> cc:1279 var
R165708:165713 VST.floyd.VSU <> retsig:1277 var
R165701:165706 VST.floyd.VSU <> argsig:1276 var
R165698:165699 VST.floyd.VSU <> ef:1275 var
R165632:165646 compcert.cfrontend.Ctypes <> rettype_of_type def
R165648:165653 VST.floyd.VSU <> retsig:1277 var
R165584:165602 compcert.cfrontend.Ctypes <> typlist_of_typelist def
R165604:165609 VST.floyd.VSU <> argsig:1276 var
R165494:165494 Coq.Init.Logic <> ::type_scope:x_'='_x not
R165521:165524 Coq.Init.Logic <> ::type_scope:x_'='_x not
R165495:165504 VST.veric.base <> id_in_list def
R165510:165512 Coq.Lists.List <> map def
R165518:165519 VST.floyd.VSU <> fs:1273 var
R165514:165516 Coq.Init.Datatypes <> fst def
R165506:165507 VST.floyd.VSU <> id:1274 var
R165525:165529 Coq.Init.Datatypes <> false constr
R166071:166088 VST.floyd.VSU <> semaxfunc_cons_ext constr
R166071:166088 VST.floyd.VSU <> semaxfunc_cons_ext constr
R166176:166196 VST.floyd.forward_lemmas <> typelist2list_arglist thm
R166176:166196 VST.floyd.forward_lemmas <> typelist2list_arglist thm
R166176:166196 VST.floyd.forward_lemmas <> typelist2list_arglist thm
R166288:166297 VST.msl.seplog <> andp_left1 meth
R166300:166306 VST.msl.log_normalize <> FF_left thm
R166288:166297 VST.msl.seplog <> andp_left1 meth
R166300:166306 VST.msl.log_normalize <> FF_left thm
R166317:166333 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_external_FF prfax
R166317:166333 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_external_FF prfax
prf 166376:166387 <> SF_semaxfunc
binder 166390:166394 <> Espec:1281
binder 166396:166396 <> V:1282
binder 166398:166399 <> cs:1283
binder 166401:166402 <> ge:1284
binder 166405:166405 <> G:1285
binder 166415:166418 <> funs:1286
binder 166420:166421 <> GG:1287
binder 166442:166442 <> i:1288
binder 166444:166446 <> phi:1289
binder 166448:166449 <> fd:1290
R166476:166492 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R166516:166519 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R166521:166522 VST.floyd.VSU <> SF def
R166545:166547 VST.floyd.VSU <> phi:1289 var
R166542:166543 VST.floyd.VSU <> fd:1290 var
R166540:166540 VST.floyd.VSU <> i:1288 var
R166538:166538 VST.floyd.VSU <> G:1285 var
R166535:166536 VST.floyd.VSU <> ge:1284 var
R166533:166533 VST.floyd.VSU <> V:1282 var
R166530:166531 VST.floyd.VSU <> cs:1283 var
R166524:166528 VST.floyd.VSU <> Espec:1281 var
R166505:166507 Coq.Init.Logic <> ::type_scope:x_'='_x not
R166493:166499 VST.veric.initial_world <> find_id def
R166503:166504 VST.floyd.VSU <> GG:1287 var
R166501:166501 VST.floyd.VSU <> i:1288 var
R166508:166511 Coq.Init.Datatypes <> Some constr
R166513:166515 VST.floyd.VSU <> phi:1289 var
R166466:166468 Coq.Init.Logic <> ::type_scope:x_'='_x not
R166452:166458 VST.veric.initial_world <> find_id def
R166462:166465 VST.floyd.VSU <> funs:1286 var
R166460:166460 VST.floyd.VSU <> i:1288 var
R166469:166472 Coq.Init.Datatypes <> Some constr
R166474:166475 VST.floyd.VSU <> fd:1290 var
binder 166430:166432 <> HSF:1291
R166562:166573 compcert.lib.Coqlib <> list_norepet ind
R166576:166578 Coq.Lists.List <> map def
R166584:166587 VST.floyd.VSU <> funs:1286 var
R166580:166582 Coq.Init.Datatypes <> fst def
binder 166557:166559 <> LNR:1292
R166615:166617 Coq.Init.Logic <> ::type_scope:x_'='_x not
R166603:166605 Coq.Lists.List <> map def
R166611:166614 VST.floyd.VSU <> funs:1286 var
R166607:166609 Coq.Init.Datatypes <> fst def
R166618:166620 Coq.Lists.List <> map def
R166626:166627 VST.floyd.VSU <> GG:1287 var
R166622:166624 Coq.Init.Datatypes <> fst def
binder 166598:166600 <> DOM:1293
R166633:166641 VST.floyd.VSU <> semaxfunc ind
R166655:166656 VST.floyd.VSU <> GG:1287 var
R166650:166653 VST.floyd.VSU <> funs:1286 var
R166647:166648 VST.floyd.VSU <> ge:1284 var
R166645:166645 VST.floyd.VSU <> G:1285 var
R166643:166643 VST.floyd.VSU <> V:1282 var
R166905:166912 VST.msl.Coqlib2 <> if_false thm
R166934:166951 VST.veric.initial_world <> find_id_In_map_fst thm
R166905:166912 VST.msl.Coqlib2 <> if_false thm
R166905:166912 VST.msl.Coqlib2 <> if_false thm
R166905:166912 VST.msl.Coqlib2 <> if_false thm
R166905:166912 VST.msl.Coqlib2 <> if_false thm
R166905:166912 VST.msl.Coqlib2 <> if_false thm
R166905:166912 VST.msl.Coqlib2 <> if_false thm
R166934:166951 VST.veric.initial_world <> find_id_In_map_fst thm
R166934:166951 VST.veric.initial_world <> find_id_In_map_fst thm
R167012:167018 VST.msl.Coqlib2 <> if_true thm
R167012:167018 VST.msl.Coqlib2 <> if_true thm
R167012:167018 VST.msl.Coqlib2 <> if_true thm
R167012:167018 VST.msl.Coqlib2 <> if_true thm
R167070:167076 Coq.Init.Logic <> eq_refl constr
R167058:167064 Coq.Init.Logic <> eq_refl constr
R167070:167076 Coq.Init.Logic <> eq_refl constr
R167058:167064 Coq.Init.Logic <> eq_refl constr
R167091:167108 VST.floyd.assoclists <> id_in_list_false_i thm
R167091:167108 VST.floyd.assoclists <> id_in_list_false_i thm
prf 167212:167222 <> remove_elim
binder 167225:167225 <> A:1294
binder 167227:167227 <> f:1295
binder 167229:167229 <> y:1296
R167243:167246 Coq.Init.Datatypes <> list ind
R167248:167248 VST.floyd.VSU <> A:1294 var
binder 167241:167241 <> l:1297
binder 167251:167251 <> x:1298
R167273:167276 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R167277:167278 Coq.Lists.List <> In def
R167282:167282 VST.floyd.VSU <> l:1297 var
R167280:167280 VST.floyd.VSU <> x:1298 var
R167254:167255 Coq.Lists.List <> In def
R167260:167265 Coq.Lists.List <> remove def
R167271:167271 VST.floyd.VSU <> l:1297 var
R167269:167269 VST.floyd.VSU <> y:1296 var
R167267:167267 VST.floyd.VSU <> f:1295 var
R167257:167257 VST.floyd.VSU <> x:1298 var
prf 167454:167475 <> filter_prog_funct_defs
binder 167478:167478 <> f:1299
binder 167480:167480 <> g:1300
binder 167482:167482 <> p:1301
binder 167504:167504 <> i:1302
binder 167506:167506 <> x:1303
R167516:167518 Coq.Init.Logic <> ::type_scope:x_'='_x not
R167509:167509 VST.floyd.VSU <> f:1299 var
R167511:167511 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167513:167513 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167515:167515 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167512:167512 VST.floyd.VSU <> i:1302 var
R167514:167514 VST.floyd.VSU <> x:1303 var
R167519:167519 VST.floyd.VSU <> g:1300 var
R167521:167521 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167523:167524 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167531:167531 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167522:167522 VST.floyd.VSU <> i:1302 var
R167525:167528 compcert.common.AST <> Gfun constr
R167530:167530 VST.floyd.VSU <> x:1303 var
binder 167493:167494 <> GF:1304
binder 167603:167603 <> i:1305
binder 167605:167605 <> v:1306
R167636:167639 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R167653:167655 Coq.Init.Logic <> ::type_scope:x_'='_x not
R167640:167640 VST.floyd.VSU <> g:1300 var
R167642:167642 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167644:167645 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167652:167652 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167643:167643 VST.floyd.VSU <> i:1305 var
R167646:167649 compcert.common.AST <> Gvar constr
R167651:167651 VST.floyd.VSU <> v:1306 var
R167656:167660 Coq.Init.Datatypes <> false constr
R167608:167609 Coq.Lists.List <> In def
R167624:167632 compcert.cfrontend.Ctypes <> prog_defs proj
R167634:167634 VST.floyd.VSU <> p:1301 var
R167611:167611 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167613:167614 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167621:167621 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167612:167612 VST.floyd.VSU <> i:1305 var
R167615:167618 compcert.common.AST <> Gvar constr
R167620:167620 VST.floyd.VSU <> v:1306 var
binder 167592:167593 <> HG:1307
R167703:167705 Coq.Init.Logic <> ::type_scope:x_'='_x not
R167670:167672 Coq.Lists.List <> map def
R167679:167684 Coq.Lists.List <> filter def
R167689:167698 VST.veric.Clight_initial_world <> prog_funct syndef
R167700:167700 VST.floyd.VSU <> p:1301 var
R167686:167686 VST.floyd.VSU <> f:1299 var
R167674:167676 Coq.Init.Datatypes <> fst def
R167706:167708 Coq.Lists.List <> map def
R167715:167720 Coq.Lists.List <> filter def
R167725:167733 compcert.cfrontend.Ctypes <> prog_defs proj
R167735:167735 VST.floyd.VSU <> p:1301 var
R167722:167722 VST.floyd.VSU <> g:1300 var
R167710:167712 Coq.Init.Datatypes <> fst def
R167776:167784 compcert.cfrontend.Ctypes <> prog_defs proj
R167776:167784 compcert.cfrontend.Ctypes <> prog_defs proj
R167900:167900 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167902:167903 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167911:167911 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167904:167907 compcert.common.AST <> Gfun constr
R167900:167900 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167902:167903 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167911:167911 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167904:167907 compcert.common.AST <> Gfun constr
prf 168078:168096 <> Canonical_semaxfunc
binder 168099:168103 <> Espec:1308
binder 168105:168106 <> cs:1309
binder 168108:168108 <> V:1310
binder 168110:168110 <> E:1311
binder 168113:168113 <> p:1312
binder 168115:168117 <> Exp:1313
binder 168119:168120 <> GP:1314
binder 168122:168122 <> G:1315
R168135:168152 VST.floyd.VSU <> CanonicalComponent rec
R168180:168180 VST.floyd.VSU <> G:1315 var
R168177:168178 VST.floyd.VSU <> GP:1314 var
R168173:168175 VST.floyd.VSU <> Exp:1313 var
R168171:168171 VST.floyd.VSU <> p:1312 var
R168167:168169 Coq.Init.Datatypes <> nil constr
R168165:168165 VST.floyd.VSU <> E:1311 var
R168162:168163 VST.floyd.VSU <> cs:1309 var
R168160:168160 VST.floyd.VSU <> V:1310 var
R168154:168158 VST.floyd.VSU <> Espec:1308 var
binder 168131:168131 <> c:1316
R168187:168195 VST.floyd.VSU <> semaxfunc ind
R168361:168361 VST.floyd.VSU <> G:1315 var
R168244:168249 Coq.Lists.List <> filter def
R168333:168342 VST.veric.Clight_initial_world <> prog_funct syndef
R168344:168344 VST.floyd.VSU <> p:1312 var
binder 168256:168256 <> x:1317
R168261:168266 Coq.Lists.List <> in_dec thm
R168294:168297 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R168286:168291 VST.floyd.VSU <> IntIDs def
R168293:168293 VST.floyd.VSU <> p:1312 var
R168298:168300 Coq.Lists.List <> map def
R168306:168306 VST.floyd.VSU <> E:1311 var
R168302:168304 Coq.Init.Datatypes <> fst def
R168278:168280 Coq.Init.Datatypes <> fst def
R168282:168282 VST.floyd.VSU <> x:1317 var
R168268:168275 compcert.common.AST <> ident_eq def
R168211:168224 compcert.common.Globalenvs Genv globalenv def
R168226:168226 VST.floyd.VSU <> p:1312 var
R168200:168205 VST.floyd.VSU <> Comp_G def
R168207:168207 VST.floyd.VSU <> c:1316 var
R168197:168197 VST.floyd.VSU <> V:1310 var
R168385:168400 VST.floyd.VSU <> Comp_G_justified proj
R168385:168400 VST.floyd.VSU <> Comp_G_justified proj
R168474:168483 VST.floyd.VSU <> Comp_p_LNR proj
R168474:168483 VST.floyd.VSU <> Comp_p_LNR proj
R168509:168520 compcert.lib.Coqlib <> list_norepet ind
R168523:168525 Coq.Lists.List <> map def
R168532:168541 VST.veric.Clight_initial_world <> prog_funct syndef
R168527:168529 Coq.Init.Datatypes <> fst def
R168562:168596 VST.veric.initialize <> list_norepet_prog_funct' thm
R168509:168520 compcert.lib.Coqlib <> list_norepet ind
R168523:168525 Coq.Lists.List <> map def
R168532:168541 VST.veric.Clight_initial_world <> prog_funct syndef
R168527:168529 Coq.Init.Datatypes <> fst def
R168562:168596 VST.veric.initialize <> list_norepet_prog_funct' thm
R168617:168628 VST.floyd.VSU <> SF_semaxfunc thm
R168617:168628 VST.floyd.VSU <> SF_semaxfunc thm
R168647:168665 VST.floyd.assoclists <> find_id_filter_Some thm
R168647:168665 VST.floyd.assoclists <> find_id_filter_Some thm
R168724:168750 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R168724:168750 VST.floyd.assoclists <> list_norepet_map_fst_filter thm
R168771:168776 VST.floyd.VSU <> Comp_G def
R168827:168848 VST.floyd.VSU <> filter_prog_funct_defs thm
R168827:168848 VST.floyd.VSU <> filter_prog_funct_defs thm
R168887:168892 Coq.Lists.List <> in_dec thm
R168914:168917 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R168906:168911 VST.floyd.VSU <> IntIDs def
R168918:168920 Coq.Lists.List <> map def
R168922:168924 Coq.Init.Datatypes <> fst def
R168894:168901 compcert.common.AST <> ident_eq def
R168887:168892 Coq.Lists.List <> in_dec thm
R168914:168917 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R168906:168911 VST.floyd.VSU <> IntIDs def
R168918:168920 Coq.Lists.List <> map def
R168922:168924 Coq.Init.Datatypes <> fst def
R168894:168901 compcert.common.AST <> ident_eq def
R168956:168964 VST.veric.initial_world <> find_id_i thm
R168956:168964 VST.veric.initial_world <> find_id_i thm
R168989:168997 Coq.Lists.List <> in_app_or thm
R168989:168997 Coq.Lists.List <> in_app_or thm
R169033:169040 VST.floyd.VSU <> IntIDs_e thm
R169033:169040 VST.floyd.VSU <> IntIDs_e thm
R169089:169100 VST.floyd.VSU <> Comp_Externs proj
R169089:169100 VST.floyd.VSU <> Comp_Externs proj
prf 169180:169190 <> filter_true
binder 169193:169193 <> A:1318
binder 169195:169195 <> f:1319
R169209:169212 Coq.Init.Datatypes <> list ind
R169214:169214 VST.floyd.VSU <> A:1318 var
binder 169207:169207 <> l:1320
binder 169229:169229 <> i:1321
R169238:169241 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R169245:169245 Coq.Init.Logic <> ::type_scope:x_'='_x not
R169242:169242 VST.floyd.VSU <> f:1319 var
R169244:169244 VST.floyd.VSU <> i:1321 var
R169246:169249 Coq.Init.Datatypes <> true constr
R169232:169233 Coq.Lists.List <> In def
R169237:169237 VST.floyd.VSU <> l:1320 var
R169235:169235 VST.floyd.VSU <> i:1321 var
binder 169218:169219 <> Hf:1322
R169269:169271 Coq.Init.Logic <> ::type_scope:x_'='_x not
R169259:169264 Coq.Lists.List <> filter def
R169268:169268 VST.floyd.VSU <> l:1320 var
R169266:169266 VST.floyd.VSU <> f:1319 var
R169272:169272 VST.floyd.VSU <> l:1320 var
prf 169419:169438 <> Canonical_semax_func
binder 169441:169445 <> Espec:1323
binder 169447:169448 <> cs:1324
binder 169450:169450 <> V:1325
binder 169452:169452 <> E:1326
binder 169454:169454 <> p:1327
binder 169456:169458 <> Exp:1328
binder 169460:169461 <> GP:1329
binder 169463:169463 <> G:1330
R169477:169494 VST.floyd.VSU <> CanonicalComponent rec
R169523:169523 VST.floyd.VSU <> G:1330 var
R169520:169521 VST.floyd.VSU <> GP:1329 var
R169516:169518 VST.floyd.VSU <> Exp:1328 var
R169514:169514 VST.floyd.VSU <> p:1327 var
R169510:169512 Coq.Init.Datatypes <> nil constr
R169508:169508 VST.floyd.VSU <> E:1326 var
R169504:169505 VST.floyd.VSU <> cs:1324 var
R169502:169502 VST.floyd.VSU <> V:1325 var
R169496:169500 VST.floyd.VSU <> Espec:1323 var
binder 169473:169473 <> c:1331
R169546:169559 Coq.Init.Logic <> ::type_scope:x_'='_x not
R169537:169539 Coq.Lists.List <> map def
R169545:169545 VST.floyd.VSU <> E:1326 var
R169541:169543 Coq.Init.Datatypes <> fst def
R169560:169562 Coq.Lists.List <> map def
R169569:169574 Coq.Lists.List <> filter def
R169622:169631 VST.veric.Clight_initial_world <> prog_funct syndef
R169633:169633 VST.floyd.VSU <> p:1327 var
binder 169581:169581 <> x:1332
R169587:169590 Coq.Init.Datatypes <> negb def
R169593:169602 VST.floyd.VSU <> isInternal def
R169605:169608 compcert.common.AST <> Gfun constr
R169611:169613 Coq.Init.Datatypes <> snd def
R169615:169615 VST.floyd.VSU <> x:1332 var
R169564:169566 Coq.Init.Datatypes <> fst def
binder 169533:169534 <> HE:1333
R169646:169655 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax_func defax
R169714:169719 VST.floyd.VSU <> Comp_G def
R169721:169721 VST.floyd.VSU <> c:1331 var
R169699:169708 VST.veric.Clight_initial_world <> prog_funct syndef
R169710:169710 VST.floyd.VSU <> p:1327 var
R169680:169693 compcert.common.Globalenvs Genv globalenv def
R169695:169695 VST.floyd.VSU <> p:1327 var
R169676:169677 VST.floyd.VSU <> cs:1324 var
R169666:169671 VST.floyd.VSU <> Comp_G def
R169673:169673 VST.floyd.VSU <> c:1331 var
R169663:169663 VST.floyd.VSU <> V:1325 var
R169657:169661 VST.floyd.VSU <> Espec:1323 var
R169741:169755 VST.floyd.VSU <> semaxfunc_sound thm
R169741:169755 VST.floyd.VSU <> semaxfunc_sound thm
R169772:169790 VST.floyd.VSU <> Canonical_semaxfunc thm
R169772:169790 VST.floyd.VSU <> Canonical_semaxfunc thm
R169814:169824 VST.floyd.VSU <> filter_true thm
R169814:169824 VST.floyd.VSU <> filter_true thm
R169814:169824 VST.floyd.VSU <> filter_true thm
R169814:169824 VST.floyd.VSU <> filter_true thm
R169878:169883 Coq.Lists.List <> in_dec thm
R169915:169918 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R169907:169912 VST.floyd.VSU <> IntIDs def
R169919:169921 Coq.Lists.List <> map def
R169935:169940 Coq.Lists.List <> filter def
R169987:169996 VST.veric.Clight_initial_world <> prog_funct syndef
binder 169947:169947 <> x:1334
R169952:169955 Coq.Init.Datatypes <> negb def
R169958:169967 VST.floyd.VSU <> isInternal def
R169970:169973 compcert.common.AST <> Gfun constr
R169976:169978 Coq.Init.Datatypes <> snd def
R169980:169980 VST.floyd.VSU <> x:1334 var
R169923:169925 Coq.Init.Datatypes <> fst def
R169895:169897 Coq.Init.Datatypes <> fst def
R169885:169892 compcert.common.AST <> ident_eq def
R169878:169883 Coq.Lists.List <> in_dec thm
R169915:169918 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R169907:169912 VST.floyd.VSU <> IntIDs def
R169919:169921 Coq.Lists.List <> map def
R169935:169940 Coq.Lists.List <> filter def
R169987:169996 VST.veric.Clight_initial_world <> prog_funct syndef
binder 169947:169947 <> x:1335
R169952:169955 Coq.Init.Datatypes <> negb def
R169958:169967 VST.floyd.VSU <> isInternal def
R169970:169973 compcert.common.AST <> Gfun constr
R169976:169978 Coq.Init.Datatypes <> snd def
R169980:169980 VST.floyd.VSU <> x:1335 var
R169923:169925 Coq.Init.Datatypes <> fst def
R169895:169897 Coq.Init.Datatypes <> fst def
R169885:169892 compcert.common.AST <> ident_eq def
R170076:170081 VST.floyd.VSU <> IntIDs def
R170111:170119 compcert.cfrontend.Ctypes <> prog_defs proj
R170111:170119 compcert.cfrontend.Ctypes <> prog_defs proj
R170366:170374 Coq.Lists.List <> in_or_app thm
R170366:170374 Coq.Lists.List <> in_or_app thm
R170411:170419 Coq.Lists.List <> in_or_app thm
R170411:170419 Coq.Lists.List <> in_or_app thm
R170448:170456 Coq.Lists.List <> in_app_or thm
R170448:170456 Coq.Lists.List <> in_app_or thm
ind 172011:172021 <> SF_internal
constr 172073:172084 <> _SF_internal
binder 172023:172023 <> C:1336
binder 172025:172025 <> V:1337
R172033:172038 compcert.common.Globalenvs Genv t rec
R172054:172057 compcert.cfrontend.Ctypes <> type ind
R172040:172052 compcert.cfrontend.Clight <> fundef def
binder 172028:172029 <> ge:1338
binder 172060:172060 <> G:1339
binder 172062:172063 <> id:1340
binder 172065:172065 <> f:1341
binder 172067:172069 <> phi:1342
R172154:172159 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R172247:172252 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R172289:172294 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R172343:172348 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R172375:172378 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R172412:172417 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R172418:172428 VST.floyd.VSU <> SF_internal:1343 ind
R172444:172446 VST.floyd.VSU <> phi:1342 var
R172442:172442 VST.floyd.VSU <> f:1341 var
R172439:172440 VST.floyd.VSU <> id:1340 var
R172437:172437 VST.floyd.VSU <> G:1339 var
R172434:172435 VST.floyd.VSU <> ge:1338 var
R172432:172432 VST.floyd.VSU <> V:1337 var
R172430:172430 VST.floyd.VSU <> C:1336 var
R172379:172392 VST.floyd.VSU <> genv_find_func def
R172401:172408 compcert.cfrontend.Ctypes <> Internal constr
R172410:172410 VST.floyd.VSU <> f:1341 var
R172397:172398 VST.floyd.VSU <> id:1340 var
R172394:172395 VST.floyd.VSU <> ge:1338 var
R172349:172358 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R172366:172366 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172369:172370 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172374:172374 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172367:172368 VST.floyd.VSU <> id:1340 var
R172371:172373 VST.floyd.VSU <> phi:1342 var
R172364:172364 VST.floyd.VSU <> f:1341 var
R172362:172362 VST.floyd.VSU <> G:1339 var
R172360:172360 VST.floyd.VSU <> V:1337 var
R172308:172310 Coq.Init.Logic <> ::type_scope:x_'='_x not
R172295:172305 compcert.cfrontend.Clight <> fn_callconv proj
R172307:172307 VST.floyd.VSU <> f:1341 var
R172311:172338 VST.veric.seplog <> callingconvention_of_funspec def
R172340:172342 VST.floyd.VSU <> phi:1342 var
R172253:172264 VST.veric.SeparationLogic <> var_sizes_ok def
R172279:172285 compcert.cfrontend.Clight <> fn_vars proj
R172287:172287 VST.floyd.VSU <> f:1341 var
R172160:172165 Coq.Lists.List <> Forall ind
R172237:172243 compcert.cfrontend.Clight <> fn_vars proj
R172245:172245 VST.floyd.VSU <> f:1341 var
R172182:172184 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R172177:172181 compcert.common.AST <> ident def
R172185:172188 compcert.cfrontend.Ctypes <> type ind
binder 172172:172173 <> it:1345
R172227:172229 Coq.Init.Logic <> ::type_scope:x_'='_x not
R172193:172205 compcert.cfrontend.Ctypes <> complete_type def
R172220:172222 Coq.Init.Datatypes <> snd def
R172224:172225 VST.floyd.VSU <> it:1345 var
R172209:172215 VST.veric.mpred <> cenv_cs meth
R172217:172217 VST.floyd.VSU <> C:1336 var
R172230:172233 Coq.Init.Datatypes <> true constr
R172147:172149 Coq.Init.Logic <> ::type_scope:x_'='_x not
R172115:172118 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R172090:172099 VST.veric.base <> id_in_list def
R172105:172107 Coq.Lists.List <> map def
R172113:172113 VST.floyd.VSU <> G:1339 var
R172109:172111 Coq.Init.Datatypes <> fst def
R172101:172102 VST.floyd.VSU <> id:1340 var
R172119:172138 VST.veric.SeparationLogic <> semax_body_params_ok def
R172140:172140 VST.floyd.VSU <> f:1341 var
R172150:172153 Coq.Init.Datatypes <> true constr
prf 172456:172472 <> SF_internal_sound
binder 172475:172479 <> Espec:1346
binder 172481:172482 <> cs:1347
binder 172484:172484 <> V:1348
R172493:172498 compcert.common.Globalenvs Genv t rec
R172514:172517 compcert.cfrontend.Ctypes <> type ind
R172500:172512 compcert.cfrontend.Clight <> fundef def
binder 172488:172489 <> ge:1349
binder 172520:172520 <> G:1350
binder 172522:172522 <> i:1351
binder 172524:172524 <> f:1352
binder 172526:172528 <> phi:1353
R172562:172565 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R172567:172568 VST.floyd.VSU <> SF def
R172601:172603 VST.floyd.VSU <> phi:1353 var
R172589:172596 compcert.cfrontend.Ctypes <> Internal constr
R172598:172598 VST.floyd.VSU <> f:1352 var
R172586:172586 VST.floyd.VSU <> i:1351 var
R172584:172584 VST.floyd.VSU <> G:1350 var
R172581:172582 VST.floyd.VSU <> ge:1349 var
R172579:172579 VST.floyd.VSU <> V:1348 var
R172576:172577 VST.floyd.VSU <> cs:1347 var
R172570:172574 VST.floyd.VSU <> Espec:1346 var
R172533:172543 VST.floyd.VSU <> SF_internal ind
R172559:172561 VST.floyd.VSU <> phi:1353 var
R172557:172557 VST.floyd.VSU <> f:1352 var
R172555:172555 VST.floyd.VSU <> i:1351 var
R172553:172553 VST.floyd.VSU <> G:1350 var
R172550:172551 VST.floyd.VSU <> ge:1349 var
R172548:172548 VST.floyd.VSU <> V:1348 var
R172545:172546 VST.floyd.VSU <> cs:1347 var
R173232:173247 VST.veric.seplog <> funspec_sub_refl thm
R173480:173494 VST.floyd.VSU <> Build_Component constr
R173678:173699 VST.veric.base <> compute_list_norepet_e thm
R173724:173745 VST.veric.base <> compute_list_norepet_e thm
R173770:173791 VST.veric.base <> compute_list_norepet_e thm
R174015:174036 VST.veric.base <> compute_list_norepet_e thm
R174442:174453 VST.msl.seplog <> derives_refl meth
R174590:174608 VST.floyd.VSU <> Build_Component constr
R174761:174782 VST.veric.base <> compute_list_norepet_e thm
R174808:174829 VST.veric.base <> compute_list_norepet_e thm
R174855:174876 VST.veric.base <> compute_list_norepet_e thm
R175132:175153 VST.veric.base <> compute_list_norepet_e thm
R175593:175604 VST.msl.seplog <> derives_refl meth
R175716:175732 VST.floyd.VSU <> SF_internal_sound thm
R175742:175753 VST.floyd.VSU <> _SF_internal constr
R175793:175803 Coq.Lists.List <> Forall_cons constr
R175816:175825 Coq.Lists.List <> Forall_nil constr
R175868:175879 VST.veric.SeparationLogic <> var_sizes_ok def
def 176740:176750 <> FDM_entries
R176767:176770 Coq.Init.Datatypes <> list ind
R176778:176780 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R176773:176777 compcert.common.AST <> ident def
R176781:176786 compcert.cfrontend.Ctypes <> fundef ind
R176788:176795 compcert.cfrontend.Clight <> function rec
binder 176753:176757 <> funs1:1354
binder 176759:176763 <> funs2:1355
R176800:176805 Coq.Init.Datatypes <> option ind
R176808:176811 Coq.Init.Datatypes <> list ind
R176837:176839 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R176819:176821 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R176814:176818 compcert.common.AST <> ident def
R176822:176827 compcert.cfrontend.Ctypes <> fundef ind
R176829:176836 compcert.cfrontend.Clight <> function rec
R176840:176845 compcert.cfrontend.Ctypes <> fundef ind
R176847:176854 compcert.cfrontend.Clight <> function rec
R176869:176873 VST.floyd.VSU <> funs1:1354 var
R176884:176886 Coq.Init.Datatypes <> nil constr
R176891:176894 Coq.Init.Datatypes <> Some constr
R176896:176898 Coq.Init.Datatypes <> nil constr
R176912:176915 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R176904:176904 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176906:176907 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176911:176911 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176930:176936 VST.veric.initial_world <> find_id def
R176940:176944 VST.floyd.VSU <> funs2:1355 var
R176979:176982 Coq.Init.Datatypes <> None constr
R176987:176997 VST.floyd.VSU <> FDM_entries:1356 def
R177004:177008 VST.floyd.VSU <> funs2:1355 var
R177038:177041 Coq.Init.Datatypes <> Some constr
R177056:177066 VST.floyd.VSU <> FDM_entries:1356 def
R177073:177077 VST.floyd.VSU <> funs2:1355 var
R177125:177128 Coq.Init.Datatypes <> None constr
R177133:177136 Coq.Init.Datatypes <> None constr
R177179:177182 Coq.Init.Datatypes <> Some constr
R177189:177192 Coq.Init.Datatypes <> Some constr
R177208:177211 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R177195:177195 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R177197:177198 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R177202:177203 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R177207:177207 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 177305:177319 <> check_FDM_entry
R177340:177347 VST.veric.mpred <> funspecs def
binder 177322:177329 <> Imports1:1358
binder 177331:177338 <> Imports2:1359
binder 177351:177351 <> x:1360
R177364:177364 VST.floyd.VSU <> x:1360 var
R177371:177371 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R177373:177374 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R177378:177379 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R177383:177383 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R177417:177424 compcert.cfrontend.Ctypes <> Internal constr
R177429:177436 compcert.cfrontend.Ctypes <> Internal constr
R177446:177448 Coq.Init.Logic <> ::type_scope:x_'='_x not
R177459:177466 compcert.cfrontend.Ctypes <> Internal constr
R177471:177478 compcert.cfrontend.Ctypes <> External constr
R177497:177503 VST.veric.initial_world <> find_id def
R177507:177514 VST.floyd.VSU <> Imports2:1359 var
R177561:177564 Coq.Init.Datatypes <> None constr
R177569:177573 Coq.Init.Logic <> False ind
R177615:177618 Coq.Init.Datatypes <> Some constr
R177651:177653 Coq.Init.Logic <> ::type_scope:x_'='_x not
R177628:177646 VST.floyd.VSU <> signature_of_fundef def
R177654:177672 VST.floyd.VSU <> signature_of_fundef def
R177726:177733 compcert.cfrontend.Ctypes <> External constr
R177744:177751 compcert.cfrontend.Ctypes <> Internal constr
R177764:177770 VST.veric.initial_world <> find_id def
R177774:177781 VST.floyd.VSU <> Imports1:1358 var
R177828:177831 Coq.Init.Datatypes <> None constr
R177836:177840 Coq.Init.Logic <> False ind
R177882:177885 Coq.Init.Datatypes <> Some constr
R177918:177920 Coq.Init.Logic <> ::type_scope:x_'='_x not
R177895:177913 VST.floyd.VSU <> signature_of_fundef def
R177921:177939 VST.floyd.VSU <> signature_of_fundef def
R177993:178000 compcert.cfrontend.Ctypes <> External constr
R178011:178018 compcert.cfrontend.Ctypes <> External constr
R178034:178036 Coq.Init.Logic <> ::type_scope:x_'='_x not
prf 178062:178064 <> FDM
binder 178067:178068 <> p1:1364
binder 178070:178071 <> p2:1365
binder 178073:178080 <> Imports1:1366
binder 178082:178089 <> Imports2:1367
binder 178100:178106 <> entries:1368
R178169:178174 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R178225:178230 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R178231:178243 VST.floyd.VSU <> Fundefs_match def
R178260:178267 VST.floyd.VSU <> Imports2:1367 var
R178251:178258 VST.floyd.VSU <> Imports1:1366 var
R178248:178249 VST.floyd.VSU <> p2:1365 var
R178245:178246 VST.floyd.VSU <> p1:1364 var
R178175:178180 Coq.Lists.List <> Forall ind
R178218:178224 VST.floyd.VSU <> entries:1368 var
R178183:178197 VST.floyd.VSU <> check_FDM_entry def
R178208:178215 VST.floyd.VSU <> Imports2:1367 var
R178199:178206 VST.floyd.VSU <> Imports1:1366 var
R178154:178156 Coq.Init.Logic <> ::type_scope:x_'='_x not
R178111:178121 VST.floyd.VSU <> FDM_entries def
R178140:178149 VST.veric.Clight_initial_world <> prog_funct syndef
R178151:178152 VST.floyd.VSU <> p2:1365 var
R178124:178133 VST.veric.Clight_initial_world <> prog_funct syndef
R178135:178136 VST.floyd.VSU <> p1:1364 var
R178157:178160 Coq.Init.Datatypes <> Some constr
R178162:178168 VST.floyd.VSU <> entries:1368 var
R178290:178299 VST.veric.Clight_initial_world <> prog_funct syndef
R178290:178299 VST.veric.Clight_initial_world <> prog_funct syndef
R178323:178332 VST.veric.Clight_initial_world <> prog_funct syndef
R178323:178332 VST.veric.Clight_initial_world <> prog_funct syndef
R178474:178480 VST.veric.initial_world <> find_id def
R178474:178480 VST.veric.initial_world <> find_id def
R178550:178560 VST.floyd.VSU <> FDM_entries def
R178550:178560 VST.floyd.VSU <> FDM_entries def
R178889:178895 VST.veric.initial_world <> find_id def
R178889:178895 VST.veric.initial_world <> find_id def
R178979:178985 VST.veric.initial_world <> find_id def
R178979:178985 VST.veric.initial_world <> find_id def
prf 179165:179176 <> FDM_complete
binder 179179:179180 <> p1:1369
binder 179182:179183 <> p2:1370
binder 179185:179192 <> Imports1:1371
binder 179194:179201 <> Imports2:1372
R179211:179223 VST.floyd.VSU <> Fundefs_match def
R179240:179247 VST.floyd.VSU <> Imports2:1372 var
R179231:179238 VST.floyd.VSU <> Imports1:1371 var
R179228:179229 VST.floyd.VSU <> p2:1370 var
R179225:179226 VST.floyd.VSU <> p1:1369 var
binder 179207:179208 <> FM:1373
R179260:179271 compcert.lib.Coqlib <> list_norepet ind
R179274:179276 Coq.Lists.List <> map def
R179283:179291 compcert.cfrontend.Ctypes <> prog_defs proj
R179293:179294 VST.floyd.VSU <> p1:1369 var
R179278:179280 Coq.Init.Datatypes <> fst def
binder 179254:179258 <> LNRp1:1374
R179302:179308 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R179316:179319 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 179309:179315 <> entries:1375
R179378:179383 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R179363:179365 Coq.Init.Logic <> ::type_scope:x_'='_x not
R179320:179330 VST.floyd.VSU <> FDM_entries def
R179349:179358 VST.veric.Clight_initial_world <> prog_funct syndef
R179360:179361 VST.floyd.VSU <> p2:1370 var
R179333:179342 VST.veric.Clight_initial_world <> prog_funct syndef
R179344:179345 VST.floyd.VSU <> p1:1369 var
R179366:179369 Coq.Init.Datatypes <> Some constr
R179371:179377 VST.floyd.VSU <> entries:1375 var
R179384:179389 Coq.Lists.List <> Forall ind
R179427:179433 VST.floyd.VSU <> entries:1375 var
R179392:179406 VST.floyd.VSU <> check_FDM_entry def
R179417:179424 VST.floyd.VSU <> Imports2:1372 var
R179408:179415 VST.floyd.VSU <> Imports1:1371 var
R179464:179473 VST.veric.Clight_initial_world <> prog_funct syndef
R179464:179473 VST.veric.Clight_initial_world <> prog_funct syndef
R179505:179516 compcert.lib.Coqlib <> list_norepet ind
R179519:179521 Coq.Lists.List <> map def
R179523:179525 Coq.Init.Datatypes <> fst def
R179505:179516 compcert.lib.Coqlib <> list_norepet ind
R179519:179521 Coq.Lists.List <> map def
R179523:179525 Coq.Init.Datatypes <> fst def
R179553:179587 VST.veric.initialize <> list_norepet_prog_funct' thm
R179553:179587 VST.veric.initialize <> list_norepet_prog_funct' thm
R179611:179620 VST.veric.Clight_initial_world <> prog_funct syndef
R179611:179620 VST.veric.Clight_initial_world <> prog_funct syndef
R179737:179739 Coq.Init.Datatypes <> nil constr
R179737:179739 Coq.Init.Datatypes <> nil constr
R179802:179808 VST.veric.initial_world <> find_id def
R179802:179808 VST.veric.initial_world <> find_id def
R179955:179962 VST.msl.Coqlib2 <> if_false thm
R179955:179962 VST.msl.Coqlib2 <> if_false thm
R179955:179962 VST.msl.Coqlib2 <> if_false thm
R179955:179962 VST.msl.Coqlib2 <> if_false thm
R180041:180047 VST.msl.Coqlib2 <> if_true thm
R180041:180047 VST.msl.Coqlib2 <> if_true thm
R180041:180047 VST.msl.Coqlib2 <> if_true thm
R180091:180097 Coq.Init.Logic <> eq_refl constr
R180091:180097 Coq.Init.Logic <> eq_refl constr
R180226:180233 VST.msl.Coqlib2 <> if_false thm
R180226:180233 VST.msl.Coqlib2 <> if_false thm
R180226:180233 VST.msl.Coqlib2 <> if_false thm
R180226:180233 VST.msl.Coqlib2 <> if_false thm
R180255:180281 VST.floyd.assoclists <> find_id_None_iff thm
R180255:180281 VST.floyd.assoclists <> find_id_None_iff thm
def 180555:180565 <> FP_entries1
R180586:180589 Coq.Init.Datatypes <> list ind
R180597:180599 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R180592:180596 compcert.common.AST <> ident def
R180600:180605 compcert.cfrontend.Ctypes <> fundef ind
R180607:180614 compcert.cfrontend.Clight <> function rec
binder 180568:180572 <> funs1:1376
binder 180574:180578 <> funs2:1377
binder 180580:180583 <> funs:1378
R180628:180632 VST.floyd.VSU <> funs1:1376 var
R180643:180645 Coq.Init.Datatypes <> nil constr
R180650:180653 Coq.Init.Datatypes <> Some constr
R180655:180657 Coq.Init.Datatypes <> nil constr
R180679:180682 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R180663:180663 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R180665:180666 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R180678:180678 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R180667:180674 compcert.cfrontend.Ctypes <> Internal constr
R180699:180705 VST.veric.initial_world <> find_id def
R180709:180712 VST.floyd.VSU <> funs:1378 var
R180756:180759 Coq.Init.Datatypes <> None constr
R180764:180767 Coq.Init.Datatypes <> None constr
R180805:180808 Coq.Init.Datatypes <> Some constr
R180822:180832 VST.floyd.VSU <> FP_entries1:1379 def
R180847:180850 VST.floyd.VSU <> funs:1378 var
R180841:180845 VST.floyd.VSU <> funs2:1377 var
R180906:180909 Coq.Init.Datatypes <> None constr
R180914:180917 Coq.Init.Datatypes <> None constr
R180968:180971 Coq.Init.Datatypes <> Some constr
R180978:180981 Coq.Init.Datatypes <> Some constr
R181000:181001 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R180984:180984 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R180996:180996 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R180999:180999 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R180985:180992 compcert.cfrontend.Ctypes <> Internal constr
R181128:181131 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R181098:181098 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R181100:181101 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R181127:181127 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R181102:181109 compcert.cfrontend.Ctypes <> External constr
R181174:181180 VST.veric.initial_world <> find_id def
R181184:181187 VST.floyd.VSU <> funs:1378 var
R181157:181163 VST.veric.initial_world <> find_id def
R181167:181171 VST.floyd.VSU <> funs2:1377 var
R181204:181207 Coq.Init.Datatypes <> Some constr
R181210:181217 compcert.cfrontend.Ctypes <> Internal constr
R181224:181227 Coq.Init.Datatypes <> Some constr
R181241:181251 VST.floyd.VSU <> FP_entries1:1379 def
R181266:181269 VST.floyd.VSU <> funs:1378 var
R181260:181264 VST.floyd.VSU <> funs2:1377 var
R181325:181328 Coq.Init.Datatypes <> None constr
R181333:181336 Coq.Init.Datatypes <> None constr
R181387:181390 Coq.Init.Datatypes <> Some constr
R181397:181400 Coq.Init.Datatypes <> Some constr
R181419:181420 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R181403:181403 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R181415:181415 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R181418:181418 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R181404:181411 compcert.cfrontend.Ctypes <> Internal constr
R181482:181485 Coq.Init.Datatypes <> Some constr
R181499:181509 VST.floyd.VSU <> FP_entries1:1379 def
R181524:181527 VST.floyd.VSU <> funs:1378 var
R181518:181522 VST.floyd.VSU <> funs2:1377 var
R181583:181586 Coq.Init.Datatypes <> None constr
R181591:181594 Coq.Init.Datatypes <> None constr
R181645:181648 Coq.Init.Datatypes <> Some constr
R181655:181658 Coq.Init.Datatypes <> Some constr
R181691:181692 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R181661:181661 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R181687:181687 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R181690:181690 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R181662:181669 compcert.cfrontend.Ctypes <> External constr
R181742:181745 Coq.Init.Datatypes <> None constr
def 181778:181798 <> Functions_preserved_A
R181819:181822 Coq.Init.Datatypes <> list ind
R181830:181832 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R181825:181829 compcert.common.AST <> ident def
R181833:181838 compcert.cfrontend.Ctypes <> fundef ind
R181840:181847 compcert.cfrontend.Clight <> function rec
binder 181801:181805 <> funs1:1381
binder 181807:181811 <> funs2:1382
binder 181813:181816 <> funs:1383
binder 181851:181851 <> i:1384
R181887:181893 VST.veric.initial_world <> find_id def
R181897:181901 VST.floyd.VSU <> funs2:1382 var
R181895:181895 VST.floyd.VSU <> i:1384 var
R181870:181876 VST.veric.initial_world <> find_id def
R181880:181884 VST.floyd.VSU <> funs1:1381 var
R181878:181878 VST.floyd.VSU <> i:1384 var
R181919:181922 Coq.Init.Datatypes <> Some constr
R181925:181932 compcert.cfrontend.Ctypes <> Internal constr
R181958:181960 Coq.Init.Logic <> ::type_scope:x_'='_x not
R181944:181950 VST.veric.initial_world <> find_id def
R181954:181957 VST.floyd.VSU <> funs:1383 var
R181952:181952 VST.floyd.VSU <> i:1384 var
R181961:181964 Coq.Init.Datatypes <> Some constr
R181967:181974 compcert.cfrontend.Ctypes <> Internal constr
R181994:181997 Coq.Init.Datatypes <> Some constr
R182000:182007 compcert.cfrontend.Ctypes <> Internal constr
R182030:182032 Coq.Init.Logic <> ::type_scope:x_'='_x not
R182016:182022 VST.veric.initial_world <> find_id def
R182026:182029 VST.floyd.VSU <> funs:1383 var
R182024:182024 VST.floyd.VSU <> i:1384 var
R182033:182036 Coq.Init.Datatypes <> Some constr
R182039:182046 compcert.cfrontend.Ctypes <> Internal constr
R182063:182066 Coq.Init.Datatypes <> Some constr
R182069:182076 compcert.cfrontend.Ctypes <> External constr
R182131:182133 Coq.Init.Logic <> ::type_scope:x_'='_x not
R182117:182123 VST.veric.initial_world <> find_id def
R182127:182130 VST.floyd.VSU <> funs:1383 var
R182125:182125 VST.floyd.VSU <> i:1384 var
R182134:182137 Coq.Init.Datatypes <> Some constr
R182140:182147 compcert.cfrontend.Ctypes <> External constr
R182181:182184 Coq.Init.Datatypes <> Some constr
R182187:182194 compcert.cfrontend.Ctypes <> External constr
R182246:182248 Coq.Init.Logic <> ::type_scope:x_'='_x not
R182232:182238 VST.veric.initial_world <> find_id def
R182242:182245 VST.floyd.VSU <> funs:1383 var
R182240:182240 VST.floyd.VSU <> i:1384 var
R182249:182252 Coq.Init.Datatypes <> Some constr
R182255:182262 compcert.cfrontend.Ctypes <> External constr
R182293:182296 Coq.Init.Datatypes <> None constr
R182299:182302 Coq.Init.Datatypes <> None constr
R182307:182310 Coq.Init.Logic <> True ind
prf 182333:182350 <> FP_entries1_soundA
binder 182361:182365 <> funs1:1385
binder 182367:182371 <> funs2:1386
binder 182373:182376 <> funs:1387
binder 182378:182384 <> entries:1388
R182426:182428 Coq.Init.Logic <> ::type_scope:x_'='_x not
R182398:182408 VST.floyd.VSU <> FP_entries1 def
R182422:182425 VST.floyd.VSU <> funs:1387 var
R182416:182420 VST.floyd.VSU <> funs2:1386 var
R182410:182414 VST.floyd.VSU <> funs1:1385 var
R182429:182432 Coq.Init.Datatypes <> Some constr
R182434:182440 VST.floyd.VSU <> entries:1388 var
binder 182394:182395 <> FP:1389
R182455:182460 Coq.Lists.List <> Forall ind
R182487:182493 VST.floyd.VSU <> entries:1388 var
binder 182467:182467 <> x:1390
R182477:182479 Coq.Init.Logic <> ::type_scope:x_'='_x not
R182472:182474 Coq.Init.Datatypes <> fst def
R182476:182476 VST.floyd.VSU <> x:1390 var
R182480:182482 Coq.Init.Datatypes <> snd def
R182484:182484 VST.floyd.VSU <> x:1390 var
binder 182451:182452 <> HE:1391
binder 182506:182506 <> i:1392
binder 182508:182509 <> fd:1393
R182537:182540 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R182541:182561 VST.floyd.VSU <> Functions_preserved_A def
R182580:182580 VST.floyd.VSU <> i:1392 var
R182575:182578 VST.floyd.VSU <> funs:1387 var
R182569:182573 VST.floyd.VSU <> funs2:1386 var
R182563:182567 VST.floyd.VSU <> funs1:1385 var
R182527:182529 Coq.Init.Logic <> ::type_scope:x_'='_x not
R182512:182518 VST.veric.initial_world <> find_id def
R182522:182526 VST.floyd.VSU <> funs1:1385 var
R182520:182520 VST.floyd.VSU <> i:1392 var
R182530:182533 Coq.Init.Datatypes <> Some constr
R182535:182536 VST.floyd.VSU <> fd:1393 var
R182614:182634 VST.floyd.VSU <> Functions_preserved_A def
R182771:182777 VST.veric.initial_world <> find_id def
R182771:182777 VST.veric.initial_world <> find_id def
R182840:182850 VST.floyd.VSU <> FP_entries1 def
R182840:182850 VST.floyd.VSU <> FP_entries1 def
R182932:182938 VST.veric.initial_world <> find_id def
R182932:182938 VST.veric.initial_world <> find_id def
R183026:183032 VST.veric.initial_world <> find_id def
R183026:183032 VST.veric.initial_world <> find_id def
R183100:183110 VST.floyd.VSU <> FP_entries1 def
R183100:183110 VST.floyd.VSU <> FP_entries1 def
R183196:183202 VST.veric.initial_world <> find_id def
R183196:183202 VST.veric.initial_world <> find_id def
R183270:183280 VST.floyd.VSU <> FP_entries1 def
R183270:183280 VST.floyd.VSU <> FP_entries1 def
R183364:183370 VST.veric.initial_world <> find_id def
R183364:183370 VST.veric.initial_world <> find_id def
R183436:183446 VST.floyd.VSU <> FP_entries1 def
R183436:183446 VST.floyd.VSU <> FP_entries1 def
R183545:183551 VST.veric.initial_world <> find_id def
R183545:183551 VST.veric.initial_world <> find_id def
R183629:183639 VST.floyd.VSU <> FP_entries1 def
R183629:183639 VST.floyd.VSU <> FP_entries1 def
R183853:183859 VST.veric.initial_world <> find_id def
R183853:183859 VST.veric.initial_world <> find_id def
R183942:183948 VST.veric.initial_world <> find_id def
R183942:183948 VST.veric.initial_world <> find_id def
R184029:184039 VST.floyd.VSU <> FP_entries1 def
R184029:184039 VST.floyd.VSU <> FP_entries1 def
R184238:184244 VST.veric.initial_world <> find_id def
R184238:184244 VST.veric.initial_world <> find_id def
R184325:184335 VST.floyd.VSU <> FP_entries1 def
R184325:184335 VST.floyd.VSU <> FP_entries1 def
R184532:184538 VST.veric.initial_world <> find_id def
R184532:184538 VST.veric.initial_world <> find_id def
R184619:184629 VST.floyd.VSU <> FP_entries1 def
R184619:184629 VST.floyd.VSU <> FP_entries1 def
def 184827:184837 <> FP_entries2
R184852:184855 Coq.Init.Datatypes <> list ind
R184863:184865 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R184858:184862 compcert.common.AST <> ident def
R184866:184871 compcert.cfrontend.Ctypes <> fundef ind
R184873:184880 compcert.cfrontend.Clight <> function rec
binder 184840:184844 <> funs2:1394
binder 184846:184849 <> funs:1395
R184894:184898 VST.floyd.VSU <> funs2:1394 var
R184909:184911 Coq.Init.Datatypes <> nil constr
R184916:184919 Coq.Init.Datatypes <> Some constr
R184921:184923 Coq.Init.Datatypes <> nil constr
R184937:184940 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R184929:184929 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184931:184932 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184936:184936 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184957:184963 VST.veric.initial_world <> find_id def
R184967:184970 VST.floyd.VSU <> funs:1395 var
R185014:185017 Coq.Init.Datatypes <> None constr
R185022:185025 Coq.Init.Datatypes <> None constr
R185063:185066 Coq.Init.Datatypes <> Some constr
R185080:185090 VST.floyd.VSU <> FP_entries2:1396 def
R185099:185102 VST.floyd.VSU <> funs:1395 var
R185158:185161 Coq.Init.Datatypes <> None constr
R185166:185169 Coq.Init.Datatypes <> None constr
R185220:185223 Coq.Init.Datatypes <> Some constr
R185230:185233 Coq.Init.Datatypes <> Some constr
R185244:185245 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R185236:185236 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185240:185240 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185243:185243 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
prf 185352:185369 <> FP_entries2_soundA
binder 185380:185384 <> funs2:1398
binder 185386:185390 <> funs1:1399
binder 185392:185395 <> funs:1400
binder 185397:185403 <> entries:1401
R185439:185441 Coq.Init.Logic <> ::type_scope:x_'='_x not
R185417:185427 VST.floyd.VSU <> FP_entries2 def
R185435:185438 VST.floyd.VSU <> funs:1400 var
R185429:185433 VST.floyd.VSU <> funs2:1398 var
R185442:185445 Coq.Init.Datatypes <> Some constr
R185447:185453 VST.floyd.VSU <> entries:1401 var
binder 185413:185414 <> FP:1402
R185468:185473 Coq.Lists.List <> Forall ind
R185500:185506 VST.floyd.VSU <> entries:1401 var
binder 185480:185480 <> x:1403
R185490:185492 Coq.Init.Logic <> ::type_scope:x_'='_x not
R185485:185487 Coq.Init.Datatypes <> fst def
R185489:185489 VST.floyd.VSU <> x:1403 var
R185493:185495 Coq.Init.Datatypes <> snd def
R185497:185497 VST.floyd.VSU <> x:1403 var
binder 185464:185465 <> HE:1404
binder 185519:185519 <> i:1405
binder 185521:185522 <> fd:1406
R185547:185550 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R185576:185578 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R185579:185599 VST.floyd.VSU <> Functions_preserved_A def
R185618:185618 VST.floyd.VSU <> i:1405 var
R185613:185616 VST.floyd.VSU <> funs:1400 var
R185607:185611 VST.floyd.VSU <> funs2:1398 var
R185601:185605 VST.floyd.VSU <> funs1:1399 var
R185566:185568 Coq.Init.Logic <> ::type_scope:x_'='_x not
R185551:185557 VST.veric.initial_world <> find_id def
R185561:185565 VST.floyd.VSU <> funs2:1398 var
R185559:185559 VST.floyd.VSU <> i:1405 var
R185569:185572 Coq.Init.Datatypes <> Some constr
R185574:185575 VST.floyd.VSU <> fd:1406 var
R185540:185542 Coq.Init.Logic <> ::type_scope:x_'='_x not
R185525:185531 VST.veric.initial_world <> find_id def
R185535:185539 VST.floyd.VSU <> funs1:1399 var
R185533:185533 VST.floyd.VSU <> i:1405 var
R185543:185546 Coq.Init.Datatypes <> None constr
R185638:185658 VST.floyd.VSU <> Functions_preserved_A def
R185793:185799 VST.veric.initial_world <> find_id def
R185793:185799 VST.veric.initial_world <> find_id def
R185860:185870 VST.floyd.VSU <> FP_entries2 def
R185860:185870 VST.floyd.VSU <> FP_entries2 def
R185974:185980 VST.veric.initial_world <> find_id def
R185974:185980 VST.veric.initial_world <> find_id def
R186056:186066 VST.floyd.VSU <> FP_entries2 def
R186056:186066 VST.floyd.VSU <> FP_entries2 def
prf 186248:186266 <> FP_entries2_soundA'
binder 186277:186281 <> funs2:1407
binder 186283:186287 <> funs1:1408
binder 186289:186292 <> funs:1409
binder 186294:186300 <> entries:1410
R186400:186402 Coq.Init.Logic <> ::type_scope:x_'='_x not
R186314:186324 VST.floyd.VSU <> FP_entries2 def
R186396:186399 VST.floyd.VSU <> funs:1409 var
R186327:186332 Coq.Lists.List <> filter def
R186389:186393 VST.floyd.VSU <> funs2:1407 var
binder 186339:186339 <> x:1411
R186345:186348 Coq.Init.Datatypes <> negb def
R186351:186356 Coq.Lists.List <> in_dec thm
R186371:186373 Coq.Lists.List <> map def
R186379:186383 VST.floyd.VSU <> funs1:1408 var
R186375:186377 Coq.Init.Datatypes <> fst def
R186363:186365 Coq.Init.Datatypes <> fst def
R186367:186367 VST.floyd.VSU <> x:1411 var
R186358:186360 compcert.lib.Coqlib <> peq def
R186403:186406 Coq.Init.Datatypes <> Some constr
R186408:186414 VST.floyd.VSU <> entries:1410 var
binder 186310:186311 <> FP:1412
R186429:186434 Coq.Lists.List <> Forall ind
R186461:186467 VST.floyd.VSU <> entries:1410 var
binder 186441:186441 <> x:1413
R186451:186453 Coq.Init.Logic <> ::type_scope:x_'='_x not
R186446:186448 Coq.Init.Datatypes <> fst def
R186450:186450 VST.floyd.VSU <> x:1413 var
R186454:186456 Coq.Init.Datatypes <> snd def
R186458:186458 VST.floyd.VSU <> x:1413 var
binder 186425:186426 <> HE:1414
binder 186480:186480 <> i:1415
binder 186482:186483 <> fd:1416
R186508:186511 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R186537:186539 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R186540:186560 VST.floyd.VSU <> Functions_preserved_A def
R186579:186579 VST.floyd.VSU <> i:1415 var
R186574:186577 VST.floyd.VSU <> funs:1409 var
R186568:186572 VST.floyd.VSU <> funs2:1407 var
R186562:186566 VST.floyd.VSU <> funs1:1408 var
R186527:186529 Coq.Init.Logic <> ::type_scope:x_'='_x not
R186512:186518 VST.veric.initial_world <> find_id def
R186522:186526 VST.floyd.VSU <> funs2:1407 var
R186520:186520 VST.floyd.VSU <> i:1415 var
R186530:186533 Coq.Init.Datatypes <> Some constr
R186535:186536 VST.floyd.VSU <> fd:1416 var
R186501:186503 Coq.Init.Logic <> ::type_scope:x_'='_x not
R186486:186492 VST.veric.initial_world <> find_id def
R186496:186500 VST.floyd.VSU <> funs1:1408 var
R186494:186494 VST.floyd.VSU <> i:1415 var
R186504:186507 Coq.Init.Datatypes <> None constr
R186599:186619 VST.floyd.VSU <> Functions_preserved_A def
R186763:186768 Coq.Lists.List <> in_dec thm
R186777:186779 Coq.Lists.List <> map def
R186781:186783 Coq.Init.Datatypes <> fst def
R186770:186772 compcert.lib.Coqlib <> peq def
R186763:186768 Coq.Lists.List <> in_dec thm
R186777:186779 Coq.Lists.List <> map def
R186781:186783 Coq.Init.Datatypes <> fst def
R186770:186772 compcert.lib.Coqlib <> peq def
R186820:186846 VST.floyd.assoclists <> find_id_None_iff thm
R186820:186846 VST.floyd.assoclists <> find_id_None_iff thm
R186883:186889 VST.veric.initial_world <> find_id def
R186883:186889 VST.veric.initial_world <> find_id def
R186950:186960 VST.floyd.VSU <> FP_entries2 def
R186963:186968 Coq.Lists.List <> filter def
R186987:186989 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R186979:186986 Coq.Numbers.BinNums <> positive ind
R186990:186995 compcert.cfrontend.Ctypes <> fundef ind
R186997:187004 compcert.cfrontend.Clight <> function rec
binder 186975:186975 <> x:1417
R187009:187012 Coq.Init.Datatypes <> negb def
R187015:187020 Coq.Lists.List <> in_dec thm
R187035:187037 Coq.Lists.List <> map def
R187039:187041 Coq.Init.Datatypes <> fst def
R187027:187029 Coq.Init.Datatypes <> fst def
R187031:187031 VST.floyd.VSU <> x:1417 var
R187022:187024 compcert.lib.Coqlib <> peq def
R186950:186960 VST.floyd.VSU <> FP_entries2 def
R186963:186968 Coq.Lists.List <> filter def
R186987:186989 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R186979:186986 Coq.Numbers.BinNums <> positive ind
R186990:186995 compcert.cfrontend.Ctypes <> fundef ind
R186997:187004 compcert.cfrontend.Clight <> function rec
binder 186975:186975 <> x:1418
R187009:187012 Coq.Init.Datatypes <> negb def
R187015:187020 Coq.Lists.List <> in_dec thm
R187035:187037 Coq.Lists.List <> map def
R187039:187041 Coq.Init.Datatypes <> fst def
R187027:187029 Coq.Init.Datatypes <> fst def
R187031:187031 VST.floyd.VSU <> x:1418 var
R187022:187024 compcert.lib.Coqlib <> peq def
R187172:187175 Coq.Init.Datatypes <> negb def
R187178:187183 Coq.Lists.List <> in_dec thm
R187192:187194 Coq.Lists.List <> map def
R187196:187198 Coq.Init.Datatypes <> fst def
R187185:187187 compcert.lib.Coqlib <> peq def
R187172:187175 Coq.Init.Datatypes <> negb def
R187178:187183 Coq.Lists.List <> in_dec thm
R187192:187194 Coq.Lists.List <> map def
R187196:187198 Coq.Init.Datatypes <> fst def
R187185:187187 compcert.lib.Coqlib <> peq def
R187236:187242 VST.veric.initial_world <> find_id def
R187236:187242 VST.veric.initial_world <> find_id def
R187320:187330 VST.floyd.VSU <> FP_entries2 def
R187333:187338 Coq.Lists.List <> filter def
R187357:187359 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R187349:187356 Coq.Numbers.BinNums <> positive ind
R187360:187365 compcert.cfrontend.Ctypes <> fundef ind
R187367:187374 compcert.cfrontend.Clight <> function rec
binder 187345:187345 <> x:1419
R187379:187382 Coq.Init.Datatypes <> negb def
R187385:187390 Coq.Lists.List <> in_dec thm
R187405:187407 Coq.Lists.List <> map def
R187409:187411 Coq.Init.Datatypes <> fst def
R187397:187399 Coq.Init.Datatypes <> fst def
R187401:187401 VST.floyd.VSU <> x:1419 var
R187392:187394 compcert.lib.Coqlib <> peq def
R187320:187330 VST.floyd.VSU <> FP_entries2 def
R187333:187338 Coq.Lists.List <> filter def
R187357:187359 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R187349:187356 Coq.Numbers.BinNums <> positive ind
R187360:187365 compcert.cfrontend.Ctypes <> fundef ind
R187367:187374 compcert.cfrontend.Clight <> function rec
binder 187345:187345 <> x:1420
R187379:187382 Coq.Init.Datatypes <> negb def
R187385:187390 Coq.Lists.List <> in_dec thm
R187405:187407 Coq.Lists.List <> map def
R187409:187411 Coq.Init.Datatypes <> fst def
R187397:187399 Coq.Init.Datatypes <> fst def
R187401:187401 VST.floyd.VSU <> x:1420 var
R187392:187394 compcert.lib.Coqlib <> peq def
def 187698:187711 <> FP_entries_inv
binder 187713:187716 <> ids1:1421
binder 187718:187721 <> ids2:1422
binder 187723:187725 <> ids:1423
R187731:187737 Coq.Lists.List <> forallb def
R187776:187778 VST.floyd.VSU <> ids:1423 var
binder 187744:187744 <> i:1424
R187749:187754 Coq.Lists.List <> in_dec thm
R187767:187768 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R187763:187766 VST.floyd.VSU <> ids1:1421 var
R187769:187772 VST.floyd.VSU <> ids2:1422 var
R187760:187760 VST.floyd.VSU <> i:1424 var
R187756:187758 compcert.lib.Coqlib <> peq def
def 187793:187812 <> FP_entries_inv_sound
binder 187815:187817 <> ids:1425
binder 187829:187832 <> ids1:1426
binder 187834:187837 <> ids2:1427
R187871:187873 Coq.Init.Logic <> ::type_scope:x_'='_x not
R187843:187856 VST.floyd.VSU <> FP_entries_inv def
R187868:187870 VST.floyd.VSU <> ids:1425 var
R187863:187866 VST.floyd.VSU <> ids2:1427 var
R187858:187861 VST.floyd.VSU <> ids1:1426 var
R187874:187877 Coq.Init.Datatypes <> true constr
binder 187841:187841 <> H:1428
binder 187890:187890 <> i:1429
R187901:187904 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R187914:187917 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R187905:187906 Coq.Lists.List <> In def
R187910:187913 VST.floyd.VSU <> ids1:1426 var
R187908:187908 VST.floyd.VSU <> i:1429 var
R187918:187919 Coq.Lists.List <> In def
R187923:187926 VST.floyd.VSU <> ids2:1427 var
R187921:187921 VST.floyd.VSU <> i:1429 var
R187893:187894 Coq.Lists.List <> In def
R187898:187900 VST.floyd.VSU <> ids:1425 var
R187896:187896 VST.floyd.VSU <> i:1429 var
R187991:188003 Coq.Bool.Bool <> andb_true_iff thm
R187991:188003 Coq.Bool.Bool <> andb_true_iff thm
R188060:188068 Coq.Lists.List <> in_app_or thm
R188060:188068 Coq.Lists.List <> in_app_or thm
R188083:188086 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R188083:188086 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R188120:188125 Coq.Lists.List <> in_dec thm
R188127:188129 compcert.lib.Coqlib <> peq def
R188120:188125 Coq.Lists.List <> in_dec thm
R188127:188129 compcert.lib.Coqlib <> peq def
prf 188165:188180 <> FP_entries_sound
binder 188183:188184 <> p1:1430
binder 188186:188187 <> p2:1431
binder 188189:188189 <> p:1432
binder 188191:188198 <> entries1:1433
binder 188200:188207 <> entries2:1434
R188227:188236 VST.veric.Clight_initial_world <> prog_funct syndef
R188238:188239 VST.floyd.VSU <> p1:1430 var
binder 188217:188221 <> funs1:1435
R188261:188270 VST.veric.Clight_initial_world <> prog_funct syndef
R188272:188273 VST.floyd.VSU <> p2:1431 var
binder 188251:188255 <> funs2:1436
R188294:188303 VST.veric.Clight_initial_world <> prog_funct syndef
R188305:188305 VST.floyd.VSU <> p:1432 var
binder 188285:188288 <> funs:1437
R188357:188362 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R188403:188408 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R188512:188517 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R188558:188563 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R188632:188637 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 188645:188645 <> i:1438
R188648:188666 VST.floyd.VSU <> Functions_preserved def
R188676:188676 VST.floyd.VSU <> i:1438 var
R188674:188674 VST.floyd.VSU <> p:1432 var
R188671:188672 VST.floyd.VSU <> p2:1431 var
R188668:188669 VST.floyd.VSU <> p1:1430 var
R188625:188627 Coq.Init.Logic <> ::type_scope:x_'='_x not
R188564:188577 VST.floyd.VSU <> FP_entries_inv def
R188612:188614 Coq.Lists.List <> map def
R188620:188623 VST.floyd.VSU <> funs:1437 var
R188616:188618 Coq.Init.Datatypes <> fst def
R188596:188598 Coq.Lists.List <> map def
R188604:188608 VST.floyd.VSU <> funs2:1436 var
R188600:188602 Coq.Init.Datatypes <> fst def
R188580:188582 Coq.Lists.List <> map def
R188588:188592 VST.floyd.VSU <> funs1:1435 var
R188584:188586 Coq.Init.Datatypes <> fst def
R188628:188631 Coq.Init.Datatypes <> true constr
R188518:188523 Coq.Lists.List <> Forall ind
R188550:188557 VST.floyd.VSU <> entries2:1434 var
binder 188530:188530 <> x:1439
R188540:188542 Coq.Init.Logic <> ::type_scope:x_'='_x not
R188535:188537 Coq.Init.Datatypes <> fst def
R188539:188539 VST.floyd.VSU <> x:1439 var
R188543:188545 Coq.Init.Datatypes <> snd def
R188547:188547 VST.floyd.VSU <> x:1439 var
R188496:188498 Coq.Init.Logic <> ::type_scope:x_'='_x not
R188409:188419 VST.floyd.VSU <> FP_entries2 def
R188492:188495 VST.floyd.VSU <> funs:1437 var
R188422:188427 Coq.Lists.List <> filter def
R188484:188488 VST.floyd.VSU <> funs2:1436 var
binder 188434:188434 <> x:1440
R188440:188443 Coq.Init.Datatypes <> negb def
R188446:188451 Coq.Lists.List <> in_dec thm
R188466:188468 Coq.Lists.List <> map def
R188474:188478 VST.floyd.VSU <> funs1:1435 var
R188470:188472 Coq.Init.Datatypes <> fst def
R188458:188460 Coq.Init.Datatypes <> fst def
R188462:188462 VST.floyd.VSU <> x:1440 var
R188453:188455 compcert.lib.Coqlib <> peq def
R188499:188502 Coq.Init.Datatypes <> Some constr
R188504:188511 VST.floyd.VSU <> entries2:1434 var
R188363:188368 Coq.Lists.List <> Forall ind
R188395:188402 VST.floyd.VSU <> entries1:1433 var
binder 188375:188375 <> x:1441
R188385:188387 Coq.Init.Logic <> ::type_scope:x_'='_x not
R188380:188382 Coq.Init.Datatypes <> fst def
R188384:188384 VST.floyd.VSU <> x:1441 var
R188388:188390 Coq.Init.Datatypes <> snd def
R188392:188392 VST.floyd.VSU <> x:1441 var
R188341:188343 Coq.Init.Logic <> ::type_scope:x_'='_x not
R188313:188323 VST.floyd.VSU <> FP_entries1 def
R188337:188340 VST.floyd.VSU <> funs:1437 var
R188331:188335 VST.floyd.VSU <> funs2:1436 var
R188325:188329 VST.floyd.VSU <> funs1:1435 var
R188344:188347 Coq.Init.Datatypes <> Some constr
R188349:188356 VST.floyd.VSU <> entries1:1433 var
R188732:188749 VST.floyd.VSU <> FP_entries1_soundA thm
R188732:188749 VST.floyd.VSU <> FP_entries1_soundA thm
R188786:188804 VST.floyd.VSU <> FP_entries2_soundA' thm
R188786:188804 VST.floyd.VSU <> FP_entries2_soundA' thm
R188843:188862 VST.floyd.VSU <> FP_entries_inv_sound def
R188843:188862 VST.floyd.VSU <> FP_entries_inv_sound def
R188903:188923 VST.floyd.VSU <> Functions_preserved_A def
R188943:188949 VST.veric.initial_world <> find_id def
R188954:188963 VST.veric.Clight_initial_world <> prog_funct syndef
R188943:188949 VST.veric.initial_world <> find_id def
R188954:188963 VST.veric.Clight_initial_world <> prog_funct syndef
R189048:189054 VST.veric.initial_world <> find_id def
R189059:189068 VST.veric.Clight_initial_world <> prog_funct syndef
R189048:189054 VST.veric.initial_world <> find_id def
R189059:189068 VST.veric.Clight_initial_world <> prog_funct syndef
R189149:189175 VST.floyd.assoclists <> find_id_None_iff thm
R189149:189175 VST.floyd.assoclists <> find_id_None_iff thm
R189193:189219 VST.floyd.assoclists <> find_id_None_iff thm
R189193:189219 VST.floyd.assoclists <> find_id_None_iff thm
R189243:189248 Coq.Lists.List <> in_dec thm
R189257:189259 Coq.Lists.List <> map def
R189266:189275 VST.veric.Clight_initial_world <> prog_funct syndef
R189261:189263 Coq.Init.Datatypes <> fst def
R189250:189252 compcert.lib.Coqlib <> peq def
R189243:189248 Coq.Lists.List <> in_dec thm
R189257:189259 Coq.Lists.List <> map def
R189266:189275 VST.veric.Clight_initial_world <> prog_funct syndef
R189261:189263 Coq.Init.Datatypes <> fst def
R189250:189252 compcert.lib.Coqlib <> peq def
R189340:189366 VST.floyd.assoclists <> find_id_None_iff thm
R189340:189366 VST.floyd.assoclists <> find_id_None_iff thm
prf 189390:189407 <> semaxfunc_Ext_elim
binder 189410:189414 <> Espec:1442
binder 189416:189417 <> cs:1443
binder 189419:189419 <> V:1444
binder 189421:189421 <> G:1445
binder 189423:189424 <> ge:1446
binder 189426:189429 <> funs:1447
binder 189431:189435 <> specs:1448
R189447:189455 VST.floyd.VSU <> semaxfunc ind
R189478:189482 VST.floyd.VSU <> specs:1448 var
R189473:189476 VST.floyd.VSU <> funs:1447 var
R189470:189471 VST.floyd.VSU <> ge:1446 var
R189468:189468 VST.floyd.VSU <> G:1445 var
R189466:189466 VST.floyd.VSU <> V:1444 var
R189463:189464 VST.floyd.VSU <> cs:1443 var
R189457:189461 VST.floyd.VSU <> Espec:1442 var
binder 189439:189443 <> Sfunc:1449
binder 189496:189496 <> i:1450
binder 189498:189499 <> ef:1451
binder 189501:189506 <> argsig:1452
binder 189508:189513 <> retsig:1453
binder 189515:189516 <> cc:1454
binder 189518:189520 <> phi:1455
R189586:189599 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R189626:189632 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R189634:189655 VST.floyd.VSU <> semaxfunc_ExternalInfo def
R189688:189690 VST.floyd.VSU <> phi:1455 var
R189685:189686 VST.floyd.VSU <> cc:1454 var
R189678:189683 VST.floyd.VSU <> retsig:1453 var
R189671:189676 VST.floyd.VSU <> argsig:1452 var
R189668:189669 VST.floyd.VSU <> ef:1451 var
R189666:189666 VST.floyd.VSU <> i:1450 var
R189663:189664 VST.floyd.VSU <> ge:1446 var
R189657:189661 VST.floyd.VSU <> Espec:1442 var
R189615:189617 Coq.Init.Logic <> ::type_scope:x_'='_x not
R189600:189606 VST.veric.initial_world <> find_id def
R189610:189614 VST.floyd.VSU <> specs:1448 var
R189608:189608 VST.floyd.VSU <> i:1450 var
R189618:189621 Coq.Init.Datatypes <> Some constr
R189623:189625 VST.floyd.VSU <> phi:1455 var
R189548:189550 Coq.Init.Logic <> ::type_scope:x_'='_x not
R189534:189540 VST.veric.initial_world <> find_id def
R189544:189547 VST.floyd.VSU <> funs:1447 var
R189542:189542 VST.floyd.VSU <> i:1450 var
R189551:189554 Coq.Init.Datatypes <> Some constr
R189557:189564 compcert.cfrontend.Ctypes <> External constr
R189583:189584 VST.floyd.VSU <> cc:1454 var
R189576:189581 VST.floyd.VSU <> retsig:1453 var
R189569:189574 VST.floyd.VSU <> argsig:1452 var
R189566:189567 VST.floyd.VSU <> ef:1451 var
prf 189855:189872 <> semaxfunc_Int_elim
binder 189875:189879 <> Espec:1456
binder 189881:189882 <> cs:1457
binder 189884:189884 <> V:1458
binder 189886:189886 <> G:1459
binder 189888:189889 <> ge:1460
binder 189891:189894 <> funs:1461
binder 189896:189900 <> specs:1462
R189912:189920 VST.floyd.VSU <> semaxfunc ind
R189943:189947 VST.floyd.VSU <> specs:1462 var
R189938:189941 VST.floyd.VSU <> funs:1461 var
R189935:189936 VST.floyd.VSU <> ge:1460 var
R189933:189933 VST.floyd.VSU <> G:1459 var
R189931:189931 VST.floyd.VSU <> V:1458 var
R189928:189929 VST.floyd.VSU <> cs:1457 var
R189922:189926 VST.floyd.VSU <> Espec:1456 var
binder 189904:189908 <> Sfunc:1463
binder 189961:189961 <> i:1464
binder 189963:189963 <> f:1465
binder 189965:189967 <> phi:1466
R190015:190028 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R190055:190061 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R190063:190084 VST.floyd.VSU <> semaxfunc_InternalInfo def
R190100:190102 VST.floyd.VSU <> phi:1466 var
R190098:190098 VST.floyd.VSU <> f:1465 var
R190096:190096 VST.floyd.VSU <> i:1464 var
R190093:190094 VST.floyd.VSU <> ge:1460 var
R190091:190091 VST.floyd.VSU <> G:1459 var
R190089:190089 VST.floyd.VSU <> V:1458 var
R190086:190087 VST.floyd.VSU <> cs:1457 var
R190044:190046 Coq.Init.Logic <> ::type_scope:x_'='_x not
R190029:190035 VST.veric.initial_world <> find_id def
R190039:190043 VST.floyd.VSU <> specs:1462 var
R190037:190037 VST.floyd.VSU <> i:1464 var
R190047:190050 Coq.Init.Datatypes <> Some constr
R190052:190054 VST.floyd.VSU <> phi:1466 var
R189995:189997 Coq.Init.Logic <> ::type_scope:x_'='_x not
R189981:189987 VST.veric.initial_world <> find_id def
R189991:189994 VST.floyd.VSU <> funs:1461 var
R189989:189989 VST.floyd.VSU <> i:1464 var
R189998:190001 Coq.Init.Datatypes <> Some constr
R190004:190011 compcert.cfrontend.Ctypes <> Internal constr
R190013:190013 VST.floyd.VSU <> f:1465 var
prf 190269:190282 <> semaxfunc_elim
binder 190285:190289 <> Espec:1467
binder 190291:190292 <> cs:1468
binder 190294:190294 <> V:1469
binder 190296:190296 <> G:1470
binder 190298:190299 <> ge:1471
binder 190301:190304 <> funs:1472
binder 190306:190310 <> specs:1473
R190322:190330 VST.floyd.VSU <> semaxfunc ind
R190353:190357 VST.floyd.VSU <> specs:1473 var
R190348:190351 VST.floyd.VSU <> funs:1472 var
R190345:190346 VST.floyd.VSU <> ge:1471 var
R190343:190343 VST.floyd.VSU <> G:1470 var
R190341:190341 VST.floyd.VSU <> V:1469 var
R190338:190339 VST.floyd.VSU <> cs:1468 var
R190332:190336 VST.floyd.VSU <> Espec:1467 var
binder 190314:190318 <> Sfunc:1474
binder 190360:190360 <> i:1475
R190388:190394 VST.veric.initial_world <> find_id def
R190398:190402 VST.floyd.VSU <> specs:1473 var
R190396:190396 VST.floyd.VSU <> i:1475 var
R190372:190378 VST.veric.initial_world <> find_id def
R190382:190385 VST.floyd.VSU <> funs:1472 var
R190380:190380 VST.floyd.VSU <> i:1475 var
R190414:190417 Coq.Init.Datatypes <> Some constr
R190420:190427 compcert.cfrontend.Ctypes <> Internal constr
R190433:190436 Coq.Init.Datatypes <> Some constr
R190446:190467 VST.floyd.VSU <> semaxfunc_InternalInfo def
R190479:190479 VST.floyd.VSU <> i:1475 var
R190476:190477 VST.floyd.VSU <> ge:1471 var
R190474:190474 VST.floyd.VSU <> G:1470 var
R190472:190472 VST.floyd.VSU <> V:1469 var
R190469:190470 VST.floyd.VSU <> cs:1468 var
R190492:190495 Coq.Init.Datatypes <> Some constr
R190498:190505 compcert.cfrontend.Ctypes <> External constr
R190529:190532 Coq.Init.Datatypes <> Some constr
R190542:190563 VST.floyd.VSU <> semaxfunc_ExternalInfo def
R190574:190574 VST.floyd.VSU <> i:1475 var
R190571:190572 VST.floyd.VSU <> ge:1471 var
R190565:190569 VST.floyd.VSU <> Espec:1467 var
R190613:190616 Coq.Init.Logic <> True ind
prf 190731:190744 <> delete_id_elim
binder 190746:190746 <> A:1476
binder 190758:190758 <> G:1477
binder 190760:190760 <> i:1478
binder 190762:190762 <> x:1479
binder 190764:190765 <> GG:1480
R190807:190816 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R190817:190823 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R190825:190826 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 190824:190824 <> n:1481
R190828:190830 Coq.Init.Logic <> ::type_scope:x_'='_x not
R190827:190827 VST.floyd.VSU <> G:1477 var
R190842:190845 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R190831:190836 Coq.Lists.List <> firstn def
R190840:190841 VST.floyd.VSU <> GG:1480 var
R190838:190838 VST.floyd.VSU <> n:1481 var
R190852:190855 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R190846:190846 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190848:190849 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190851:190851 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190847:190847 VST.floyd.VSU <> i:1478 var
R190850:190850 VST.floyd.VSU <> x:1479 var
R190856:190860 Coq.Lists.List <> skipn def
R190864:190865 VST.floyd.VSU <> GG:1480 var
R190862:190862 VST.floyd.VSU <> n:1481 var
R190792:190794 Coq.Init.Logic <> ::type_scope:x_'='_x not
R190777:190785 VST.floyd.base2 <> delete_id def
R190791:190791 VST.floyd.VSU <> G:1477 var
R190789:190789 VST.floyd.VSU <> i:1478 var
R190787:190787 VST.floyd.VSU <> A:1476 var
R190795:190798 Coq.Init.Datatypes <> Some constr
R190800:190800 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190802:190803 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190806:190806 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190801:190801 VST.floyd.VSU <> x:1479 var
R190804:190805 VST.floyd.VSU <> GG:1480 var
R190941:190948 compcert.common.AST <> ident_eq def
R190941:190948 compcert.common.AST <> ident_eq def
R190979:190979 Coq.Init.Datatypes <> O constr
R190979:190979 Coq.Init.Datatypes <> O constr
R191030:191038 VST.floyd.base2 <> delete_id def
R191030:191038 VST.floyd.base2 <> delete_id def
R191099:191105 Coq.Init.Logic <> eq_refl constr
R191099:191105 Coq.Init.Logic <> eq_refl constr
R191150:191150 Coq.Init.Datatypes <> S constr
R191150:191150 Coq.Init.Datatypes <> S constr
R191201:191218 Coq.Structures.Orders TotalLeBool <> mod
mod 191185:191196 <> FunspecOrder
def 191234:191234 FunspecOrder t
R191245:191247 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R191240:191244 compcert.common.AST <> ident def
R191248:191254 VST.veric.mpred <> funspec ind
def 191276:191278 FunspecOrder leb
R191299:191301 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R191294:191298 compcert.common.AST <> ident def
R191302:191308 VST.veric.mpred <> funspec ind
binder 191287:191287 <> x:1482
binder 191289:191289 <> y:1483
R191313:191319 Coq.PArith.BinPos Pos leb def
R191330:191332 Coq.Init.Datatypes <> fst def
R191334:191334 VST.floyd.VSU <> y:1483 var
R191322:191324 Coq.Init.Datatypes <> fst def
R191326:191326 VST.floyd.VSU <> x:1482 var
prf 191348:191356 FunspecOrder leb_total
binder 191367:191368 <> a1:1484
binder 191370:191371 <> a2:1485
R191390:191393 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R191383:191385 Coq.Init.Logic <> ::type_scope:x_'='_x not
R191374:191376 VST.floyd.VSU FunspecOrder leb def
R191381:191382 VST.floyd.VSU <> a2:1485 var
R191378:191379 VST.floyd.VSU <> a1:1484 var
R191386:191389 Coq.Init.Datatypes <> true constr
R191403:191405 Coq.Init.Logic <> ::type_scope:x_'='_x not
R191394:191396 VST.floyd.VSU FunspecOrder leb def
R191401:191402 VST.floyd.VSU <> a1:1484 var
R191398:191399 VST.floyd.VSU <> a2:1485 var
R191406:191409 Coq.Init.Datatypes <> true constr
R191437:191439 VST.floyd.VSU FunspecOrder leb def
R191459:191470 Coq.PArith.BinPos Pos leb_spec thm
R191482:191484 Coq.Init.Datatypes <> fst def
R191473:191475 Coq.Init.Datatypes <> fst def
R191459:191470 Coq.PArith.BinPos Pos leb_spec thm
R191482:191484 Coq.Init.Datatypes <> fst def
R191473:191475 Coq.Init.Datatypes <> fst def
R191508:191519 Coq.PArith.BinPos Pos leb_spec thm
R191531:191533 Coq.Init.Datatypes <> fst def
R191522:191524 Coq.Init.Datatypes <> fst def
R191508:191519 Coq.PArith.BinPos Pos leb_spec thm
R191531:191533 Coq.Init.Datatypes <> fst def
R191522:191524 Coq.Init.Datatypes <> fst def
R191602:191613 Coq.PArith.BinPos Pos lt_trans thm
R191602:191613 Coq.PArith.BinPos Pos lt_trans thm
R191639:191651 Coq.PArith.BinPos Pos lt_irrefl thm
R191639:191651 Coq.PArith.BinPos Pos lt_irrefl thm
R191685:191696 VST.floyd.VSU FunspecOrder <> mod
R191721:191734 Coq.Sorting.Mergesort Sort <> modtype
R191736:191747 VST.floyd.VSU FunspecOrder <> modtype
mod 191706:191716 <> SortFunspec
R192123:192145 VST.veric.initial_world <> <> lib
prf 192155:192169 <> perm_In_map_fst
binder 192172:192172 <> A:1486
R192186:192189 Coq.Init.Datatypes <> list ind
R192197:192197 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R192192:192196 compcert.common.AST <> ident def
R192198:192198 VST.floyd.VSU <> A:1486 var
binder 192184:192184 <> G:1487
binder 192203:192204 <> G':1488
R192211:192221 Coq.Sorting.Permutation <> Permutation ind
R192225:192226 VST.floyd.VSU <> G':1488 var
R192223:192223 VST.floyd.VSU <> G:1487 var
binder 192208:192208 <> P:1489
binder 192229:192229 <> i:1490
R192255:192258 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R192259:192260 Coq.Lists.List <> In def
R192265:192267 Coq.Lists.List <> map def
R192273:192273 VST.floyd.VSU <> G:1487 var
R192269:192271 Coq.Init.Datatypes <> fst def
R192262:192262 VST.floyd.VSU <> i:1490 var
R192238:192239 Coq.Lists.List <> In def
R192244:192246 Coq.Lists.List <> map def
R192252:192253 VST.floyd.VSU <> G':1488 var
R192248:192250 Coq.Init.Datatypes <> fst def
R192241:192241 VST.floyd.VSU <> i:1490 var
prf 192555:192562 <> perm_LNR
binder 192565:192565 <> A:1491
R192579:192582 Coq.Init.Datatypes <> list ind
R192590:192592 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R192585:192589 compcert.common.AST <> ident def
R192593:192593 VST.floyd.VSU <> A:1491 var
binder 192577:192577 <> G:1492
binder 192598:192599 <> G':1493
R192606:192616 Coq.Sorting.Permutation <> Permutation ind
R192620:192621 VST.floyd.VSU <> G':1493 var
R192618:192618 VST.floyd.VSU <> G:1492 var
binder 192603:192603 <> P:1494
R192636:192647 compcert.lib.Coqlib <> list_norepet ind
R192650:192652 Coq.Lists.List <> map def
R192658:192658 VST.floyd.VSU <> G:1492 var
R192654:192656 Coq.Init.Datatypes <> fst def
binder 192631:192633 <> LNR:1495
R192669:192680 compcert.lib.Coqlib <> list_norepet ind
R192683:192685 Coq.Lists.List <> map def
R192691:192692 VST.floyd.VSU <> G':1493 var
R192687:192689 Coq.Init.Datatypes <> fst def
R192840:192854 VST.floyd.VSU <> perm_In_map_fst thm
R192840:192854 VST.floyd.VSU <> perm_In_map_fst thm
prf 193048:193059 <> perm_find_id
binder 193062:193062 <> A:1496
R193076:193079 Coq.Init.Datatypes <> list ind
R193087:193089 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R193082:193086 compcert.common.AST <> ident def
R193090:193090 VST.floyd.VSU <> A:1496 var
binder 193074:193074 <> G:1497
binder 193094:193095 <> G':1498
R193101:193111 Coq.Sorting.Permutation <> Permutation ind
R193115:193116 VST.floyd.VSU <> G':1498 var
R193113:193113 VST.floyd.VSU <> G:1497 var
binder 193098:193098 <> P:1499
R193131:193142 compcert.lib.Coqlib <> list_norepet ind
R193145:193147 Coq.Lists.List <> map def
R193153:193153 VST.floyd.VSU <> G:1497 var
R193149:193151 Coq.Init.Datatypes <> fst def
binder 193126:193128 <> LNR:1500
binder 193157:193157 <> i:1501
R193177:193179 Coq.Init.Logic <> ::type_scope:x_'='_x not
R193166:193172 VST.veric.initial_world <> find_id def
R193176:193176 VST.floyd.VSU <> G:1497 var
R193174:193174 VST.floyd.VSU <> i:1501 var
R193180:193186 VST.veric.initial_world <> find_id def
R193190:193191 VST.floyd.VSU <> G':1498 var
R193188:193188 VST.floyd.VSU <> i:1501 var
R193365:193382 VST.veric.Memory <> EqDec_ident inst
R193365:193382 VST.veric.Memory <> EqDec_ident inst
R193417:193424 VST.msl.Coqlib2 <> if_false thm
R193417:193424 VST.msl.Coqlib2 <> if_false thm
R193417:193424 VST.msl.Coqlib2 <> if_false thm
R193417:193424 VST.msl.Coqlib2 <> if_false thm
R193524:193531 VST.floyd.VSU <> perm_LNR thm
R193524:193531 VST.floyd.VSU <> perm_LNR thm
prf 193559:193575 <> sort_In_map_fst_i
binder 193578:193578 <> G:1502
binder 193580:193580 <> i:1503
R193606:193609 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R193610:193611 Coq.Lists.List <> In def
R193616:193618 Coq.Lists.List <> map def
R193625:193640 VST.floyd.VSU <> sort def
R193642:193642 VST.floyd.VSU <> G:1502 var
R193620:193622 Coq.Init.Datatypes <> fst def
R193613:193613 VST.floyd.VSU <> i:1503 var
R193590:193591 Coq.Lists.List <> In def
R193596:193598 Coq.Lists.List <> map def
R193604:193604 VST.floyd.VSU <> G:1502 var
R193600:193602 Coq.Init.Datatypes <> fst def
R193593:193593 VST.floyd.VSU <> i:1503 var
R193669:193683 VST.floyd.VSU <> perm_In_map_fst thm
R193669:193683 VST.floyd.VSU <> perm_In_map_fst thm
R193709:193723 Coq.Sorting.Permutation <> Permutation_sym thm
R193709:193723 Coq.Sorting.Permutation <> Permutation_sym thm
R193732:193756 VST.floyd.VSU <> Permuted_sort thm
R193732:193756 VST.floyd.VSU <> Permuted_sort thm
prf 193771:193787 <> sort_In_map_fst_e
binder 193790:193790 <> G:1504
binder 193792:193792 <> i:1505
R193837:193840 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R193841:193842 Coq.Lists.List <> In def
R193847:193849 Coq.Lists.List <> map def
R193855:193855 VST.floyd.VSU <> G:1504 var
R193851:193853 Coq.Init.Datatypes <> fst def
R193844:193844 VST.floyd.VSU <> i:1505 var
R193802:193803 Coq.Lists.List <> In def
R193808:193810 Coq.Lists.List <> map def
R193817:193832 VST.floyd.VSU <> sort def
R193834:193834 VST.floyd.VSU <> G:1504 var
R193812:193814 Coq.Init.Datatypes <> fst def
R193805:193805 VST.floyd.VSU <> i:1505 var
R193881:193895 VST.floyd.VSU <> perm_In_map_fst thm
R193881:193895 VST.floyd.VSU <> perm_In_map_fst thm
R193921:193945 VST.floyd.VSU <> Permuted_sort thm
R193921:193945 VST.floyd.VSU <> Permuted_sort thm
prf 193960:193974 <> sort_In_map_fst
binder 193977:193977 <> G:1506
binder 193979:193979 <> i:1507
R194005:194009 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R193989:193990 Coq.Lists.List <> In def
R193995:193997 Coq.Lists.List <> map def
R194003:194003 VST.floyd.VSU <> G:1506 var
R193999:194001 Coq.Init.Datatypes <> fst def
R193992:193992 VST.floyd.VSU <> i:1507 var
R194010:194011 Coq.Lists.List <> In def
R194016:194018 Coq.Lists.List <> map def
R194025:194040 VST.floyd.VSU <> sort def
R194042:194042 VST.floyd.VSU <> G:1506 var
R194020:194022 Coq.Init.Datatypes <> fst def
R194013:194013 VST.floyd.VSU <> i:1507 var
R194077:194093 VST.floyd.VSU <> sort_In_map_fst_i thm
R194103:194119 VST.floyd.VSU <> sort_In_map_fst_e thm
R194077:194093 VST.floyd.VSU <> sort_In_map_fst_i thm
R194103:194119 VST.floyd.VSU <> sort_In_map_fst_e thm
prf 194145:194154 <> LNR_sort_i
binder 194157:194157 <> G:1508
R194185:194194 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R194195:194206 compcert.lib.Coqlib <> list_norepet ind
R194209:194211 Coq.Lists.List <> map def
R194218:194233 VST.floyd.VSU <> sort def
R194235:194235 VST.floyd.VSU <> G:1508 var
R194213:194215 Coq.Init.Datatypes <> fst def
R194161:194172 compcert.lib.Coqlib <> list_norepet ind
R194175:194177 Coq.Lists.List <> map def
R194183:194183 VST.floyd.VSU <> G:1508 var
R194179:194181 Coq.Init.Datatypes <> fst def
R194262:194269 VST.floyd.VSU <> perm_LNR thm
R194262:194269 VST.floyd.VSU <> perm_LNR thm
R194295:194319 VST.floyd.VSU <> Permuted_sort thm
R194295:194319 VST.floyd.VSU <> Permuted_sort thm
prf 194334:194343 <> LNR_sort_e
binder 194346:194346 <> G:1509
R194399:194408 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R194409:194420 compcert.lib.Coqlib <> list_norepet ind
R194423:194425 Coq.Lists.List <> map def
R194431:194431 VST.floyd.VSU <> G:1509 var
R194427:194429 Coq.Init.Datatypes <> fst def
R194356:194367 compcert.lib.Coqlib <> list_norepet ind
R194370:194372 Coq.Lists.List <> map def
R194379:194394 VST.floyd.VSU <> sort def
R194396:194396 VST.floyd.VSU <> G:1509 var
R194374:194376 Coq.Init.Datatypes <> fst def
R194457:194464 VST.floyd.VSU <> perm_LNR thm
R194457:194464 VST.floyd.VSU <> perm_LNR thm
R194490:194504 Coq.Sorting.Permutation <> Permutation_sym thm
R194490:194504 Coq.Sorting.Permutation <> Permutation_sym thm
R194513:194537 VST.floyd.VSU <> Permuted_sort thm
R194513:194537 VST.floyd.VSU <> Permuted_sort thm
prf 194552:194559 <> sort_LNR
binder 194562:194562 <> G:1510
R194590:194600 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R194566:194577 compcert.lib.Coqlib <> list_norepet ind
R194580:194582 Coq.Lists.List <> map def
R194588:194588 VST.floyd.VSU <> G:1510 var
R194584:194586 Coq.Init.Datatypes <> fst def
R194601:194612 compcert.lib.Coqlib <> list_norepet ind
R194615:194617 Coq.Lists.List <> map def
R194624:194639 VST.floyd.VSU <> sort def
R194641:194641 VST.floyd.VSU <> G:1510 var
R194619:194621 Coq.Init.Datatypes <> fst def
R194675:194682 VST.floyd.VSU <> perm_LNR thm
R194675:194682 VST.floyd.VSU <> perm_LNR thm
R194675:194682 VST.floyd.VSU <> perm_LNR thm
R194708:194732 VST.floyd.VSU <> Permuted_sort thm
R194708:194732 VST.floyd.VSU <> Permuted_sort thm
R194741:194755 Coq.Sorting.Permutation <> Permutation_sym thm
R194741:194755 Coq.Sorting.Permutation <> Permutation_sym thm
R194764:194788 VST.floyd.VSU <> Permuted_sort thm
R194764:194788 VST.floyd.VSU <> Permuted_sort thm
prf 194803:194814 <> sort_find_id
binder 194817:194817 <> G:1511
binder 194819:194819 <> i:1512
R194828:194839 compcert.lib.Coqlib <> list_norepet ind
R194842:194844 Coq.Lists.List <> map def
R194850:194850 VST.floyd.VSU <> G:1511 var
R194846:194848 Coq.Init.Datatypes <> fst def
binder 194823:194825 <> LNR:1513
R194873:194875 Coq.Init.Logic <> ::type_scope:x_'='_x not
R194862:194868 VST.veric.initial_world <> find_id def
R194872:194872 VST.floyd.VSU <> G:1511 var
R194870:194870 VST.floyd.VSU <> i:1512 var
R194876:194882 VST.veric.initial_world <> find_id def
R194887:194902 VST.floyd.VSU <> sort def
R194904:194904 VST.floyd.VSU <> G:1511 var
R194884:194884 VST.floyd.VSU <> i:1512 var
R194921:194932 VST.floyd.VSU <> perm_find_id thm
R194921:194932 VST.floyd.VSU <> perm_find_id thm
R194950:194974 VST.floyd.VSU <> Permuted_sort thm
R194950:194974 VST.floyd.VSU <> Permuted_sort thm
R196277:196290 VST.floyd.forward <> sub_option_get thm
R196495:196516 VST.veric.base <> compute_list_norepet_e thm
R196609:196631 VST.msl.Coqlib2 <> list_norepet_append_inv thm
R196863:196878 VST.veric.seplog <> funspec_sub_refl thm
R197222:197237 VST.floyd.VSU <> FP_entries_sound thm
R197451:197453 VST.floyd.VSU <> FDM thm
R197701:197713 VST.floyd.VSU <> ComponentJoin thm
prf 198559:198565 <> VSU_ext
binder 198568:198572 <> Espec:1514
binder 198574:198574 <> V:1515
binder 198576:198577 <> cs:1516
binder 198579:198579 <> E:1517
binder 198581:198583 <> Imp:1518
binder 198585:198585 <> p:1519
binder 198587:198589 <> Exp:1520
binder 198591:198593 <> GP1:1521
binder 198595:198597 <> GP2:1522
R198638:198641 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R198649:198658 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R198660:198662 VST.floyd.VSU <> VSU def
R198687:198689 VST.floyd.VSU <> GP2:1522 var
R198683:198685 VST.floyd.VSU <> Exp:1520 var
R198681:198681 VST.floyd.VSU <> p:1519 var
R198677:198679 VST.floyd.VSU <> Imp:1518 var
R198675:198675 VST.floyd.VSU <> E:1517 var
R198672:198673 VST.floyd.VSU <> cs:1516 var
R198670:198670 VST.floyd.VSU <> V:1515 var
R198664:198668 VST.floyd.VSU <> Espec:1514 var
R198645:198645 Coq.Init.Logic <> ::type_scope:x_'='_x not
R198642:198644 VST.floyd.VSU <> GP1:1521 var
R198646:198648 VST.floyd.VSU <> GP2:1522 var
R198608:198610 VST.floyd.VSU <> VSU def
R198635:198637 VST.floyd.VSU <> GP1:1521 var
R198631:198633 VST.floyd.VSU <> Exp:1520 var
R198629:198629 VST.floyd.VSU <> p:1519 var
R198625:198627 VST.floyd.VSU <> Imp:1518 var
R198623:198623 VST.floyd.VSU <> E:1517 var
R198620:198621 VST.floyd.VSU <> cs:1516 var
R198618:198618 VST.floyd.VSU <> V:1515 var
R198612:198616 VST.floyd.VSU <> Espec:1514 var
R198766:198772 VST.floyd.VSU <> VSU_ext thm
R198785:198791 VST.floyd.VSU <> VSULink thm
prf 199668:199679 <> progfunct_eq
R199707:199709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R199681:199706 VST.veric.SeparationLogic <> prog_funct def
R199710:199719 VST.veric.initial_world <> prog_funct def
prf 199754:199782 <> augment_funspecs_find_id_None
binder 199784:199784 <> i:1523
binder 199794:199794 <> p:1524
binder 199796:199796 <> G:1525
R199823:199832 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R199864:199873 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R199906:199908 Coq.Init.Logic <> ::type_scope:x_'='_x not
R199874:199880 VST.veric.initial_world <> find_id def
R199885:199900 VST.floyd.base2 <> augment_funspecs def
R199904:199904 VST.floyd.VSU <> G:1525 var
R199902:199902 VST.floyd.VSU <> p:1524 var
R199882:199882 VST.floyd.VSU <> i:1523 var
R199909:199912 Coq.Init.Datatypes <> None constr
R199857:199859 Coq.Init.Logic <> ::type_scope:x_'='_x not
R199833:199839 VST.veric.initial_world <> find_id def
R199844:199853 VST.veric.initial_world <> prog_funct def
R199855:199855 VST.floyd.VSU <> p:1524 var
R199841:199841 VST.floyd.VSU <> i:1523 var
R199860:199863 Coq.Init.Datatypes <> None constr
R199816:199818 Coq.Init.Logic <> ::type_scope:x_'='_x not
R199805:199811 VST.veric.initial_world <> find_id def
R199815:199815 VST.floyd.VSU <> G:1525 var
R199813:199813 VST.floyd.VSU <> i:1523 var
R199819:199822 Coq.Init.Datatypes <> None constr
R199941:199956 VST.floyd.base2 <> augment_funspecs def
R199967:199978 VST.floyd.VSU <> progfunct_eq thm
R199967:199978 VST.floyd.VSU <> progfunct_eq thm
R199967:199978 VST.floyd.VSU <> progfunct_eq thm
R199989:199998 VST.veric.initial_world <> prog_funct def
R199989:199998 VST.veric.initial_world <> prog_funct def
R200174:200182 VST.floyd.base2 <> delete_id def
R200174:200182 VST.floyd.base2 <> delete_id def
R200286:200302 VST.floyd.base2 <> augment_funspecs' def
R200286:200302 VST.floyd.base2 <> augment_funspecs' def
R200339:200346 VST.msl.Coqlib2 <> if_false thm
R200339:200346 VST.msl.Coqlib2 <> if_false thm
R200339:200346 VST.msl.Coqlib2 <> if_false thm
R200397:200410 VST.floyd.VSU <> delete_id_elim thm
R200397:200410 VST.floyd.VSU <> delete_id_elim thm
R200461:200487 VST.floyd.assoclists <> find_id_app_char thm
R200461:200487 VST.floyd.assoclists <> find_id_app_char thm
R200461:200487 VST.floyd.assoclists <> find_id_app_char thm
R200512:200523 Coq.Lists.List <> firstn_skipn thm
R200512:200523 Coq.Lists.List <> firstn_skipn thm
R200512:200523 Coq.Lists.List <> firstn_skipn thm
R200544:200570 VST.floyd.assoclists <> find_id_app_char thm
R200544:200570 VST.floyd.assoclists <> find_id_app_char thm
R200544:200570 VST.floyd.assoclists <> find_id_app_char thm
R200587:200593 VST.veric.initial_world <> find_id def
R200598:200603 Coq.Lists.List <> firstn def
R200587:200593 VST.veric.initial_world <> find_id def
R200598:200603 Coq.Lists.List <> firstn def
R200647:200654 VST.msl.Coqlib2 <> if_false thm
R200647:200654 VST.msl.Coqlib2 <> if_false thm
R200647:200654 VST.msl.Coqlib2 <> if_false thm
R200647:200654 VST.msl.Coqlib2 <> if_false thm
R200706:200722 VST.floyd.base2 <> augment_funspecs' def
R200706:200722 VST.floyd.base2 <> augment_funspecs' def
R200758:200765 VST.msl.Coqlib2 <> if_false thm
R200758:200765 VST.msl.Coqlib2 <> if_false thm
R200758:200765 VST.msl.Coqlib2 <> if_false thm
R200758:200765 VST.msl.Coqlib2 <> if_false thm
prf 200795:200813 <> augment_funspecs_eq
binder 200823:200823 <> p:1526
binder 200825:200825 <> G:1527
R200862:200867 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R200868:200868 Coq.Init.Logic <> ::type_scope:x_'='_x not
R200889:200892 Coq.Init.Logic <> ::type_scope:x_'='_x not
R200869:200884 VST.floyd.base2 <> augment_funspecs def
R200888:200888 VST.floyd.VSU <> G:1527 var
R200886:200886 VST.floyd.VSU <> p:1526 var
R200893:200893 VST.floyd.VSU <> G:1527 var
R200837:200839 Coq.Init.Logic <> ::type_scope:x_'='_x not
R200828:200830 Coq.Lists.List <> map def
R200836:200836 VST.floyd.VSU <> G:1527 var
R200832:200834 Coq.Init.Datatypes <> fst def
R200840:200842 Coq.Lists.List <> map def
R200849:200858 VST.veric.initial_world <> prog_funct def
R200860:200860 VST.floyd.VSU <> p:1526 var
R200844:200846 Coq.Init.Datatypes <> fst def
R200918:200933 VST.floyd.base2 <> augment_funspecs def
R200944:200955 VST.floyd.VSU <> progfunct_eq thm
R200944:200955 VST.floyd.VSU <> progfunct_eq thm
R200944:200955 VST.floyd.VSU <> progfunct_eq thm
R200966:200975 VST.veric.initial_world <> prog_funct def
R200966:200975 VST.veric.initial_world <> prog_funct def
R201122:201128 VST.msl.Coqlib2 <> if_true thm
R201122:201128 VST.msl.Coqlib2 <> if_true thm
R201122:201128 VST.msl.Coqlib2 <> if_true thm
R201174:201190 VST.floyd.base2 <> augment_funspecs' def
R201174:201190 VST.floyd.base2 <> augment_funspecs' def
prf 201320:201339 <> augment_funspecs_sub
binder 201349:201349 <> p:1528
binder 201351:201351 <> G:1529
R201388:201391 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R201392:201398 Coq.Lists.List <> Forall2 ind
R201493:201508 VST.floyd.base2 <> augment_funspecs def
R201512:201512 VST.floyd.VSU <> G:1529 var
R201510:201510 VST.floyd.VSU <> p:1528 var
R201488:201488 VST.floyd.VSU <> G:1529 var
R201420:201422 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R201415:201419 compcert.common.AST <> ident def
R201423:201429 VST.veric.mpred <> funspec ind
binder 201405:201407 <> fs1:1530
binder 201409:201411 <> fs2:1531
R201451:201454 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R201441:201443 Coq.Init.Logic <> ::type_scope:x_'='_x not
R201434:201436 Coq.Init.Datatypes <> fst def
R201438:201440 VST.floyd.VSU <> fs1:1530 var
R201444:201446 Coq.Init.Datatypes <> fst def
R201448:201450 VST.floyd.VSU <> fs2:1531 var
R201455:201465 VST.veric.SeparationLogic <> funspec_sub def
R201478:201480 Coq.Init.Datatypes <> snd def
R201482:201484 VST.floyd.VSU <> fs2:1531 var
R201468:201470 Coq.Init.Datatypes <> snd def
R201472:201474 VST.floyd.VSU <> fs1:1530 var
R201363:201365 Coq.Init.Logic <> ::type_scope:x_'='_x not
R201354:201356 Coq.Lists.List <> map def
R201362:201362 VST.floyd.VSU <> G:1529 var
R201358:201360 Coq.Init.Datatypes <> fst def
R201366:201368 Coq.Lists.List <> map def
R201375:201384 VST.veric.initial_world <> prog_funct def
R201386:201386 VST.floyd.VSU <> p:1528 var
R201370:201372 Coq.Init.Datatypes <> fst def
R201538:201553 VST.floyd.base2 <> augment_funspecs def
R201564:201575 VST.floyd.VSU <> progfunct_eq thm
R201564:201575 VST.floyd.VSU <> progfunct_eq thm
R201564:201575 VST.floyd.VSU <> progfunct_eq thm
R201586:201595 VST.veric.initial_world <> prog_funct def
R201586:201595 VST.veric.initial_world <> prog_funct def
R201746:201752 VST.msl.Coqlib2 <> if_true thm
R201746:201752 VST.msl.Coqlib2 <> if_true thm
R201746:201752 VST.msl.Coqlib2 <> if_true thm
R201798:201814 VST.floyd.base2 <> augment_funspecs' def
R201798:201814 VST.floyd.base2 <> augment_funspecs' def
R201939:201954 VST.veric.seplog <> funspec_sub_refl thm
R201939:201954 VST.veric.seplog <> funspec_sub_refl thm
rec 202230:202242 <> LinkedProgVSU
proj 202287:202290 <> LP_G
proj 202305:202308 <> LP_C
proj 202373:202379 <> LP_main
binder 202245:202249 <> Espec:1532
binder 202251:202251 <> V:1533
binder 202253:202254 <> cs:1534
binder 202257:202257 <> E:1535
binder 202259:202265 <> Imports:1536
binder 202267:202267 <> p:1537
binder 202269:202275 <> Exports:1538
binder 202277:202278 <> GP:1539
R202293:202300 VST.veric.mpred <> funspecs def
R202312:202329 VST.floyd.VSU <> CanonicalComponent rec
R202365:202368 VST.floyd.VSU <> LP_G:1541 meth
R202362:202363 VST.floyd.VSU <> GP:1539 var
R202354:202360 VST.floyd.VSU <> Exports:1538 var
R202352:202352 VST.floyd.VSU <> p:1537 var
R202344:202350 VST.floyd.VSU <> Imports:1536 var
R202342:202342 VST.floyd.VSU <> E:1535 var
R202339:202340 VST.floyd.VSU <> cs:1534 var
R202337:202337 VST.floyd.VSU <> V:1533 var
R202331:202335 VST.floyd.VSU <> Espec:1532 var
R202382:202388 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R202392:202393 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 202389:202391 <> phi:1543
R202431:202456 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R202420:202422 Coq.Init.Logic <> ::type_scope:x_'='_x not
R202394:202400 VST.veric.initial_world <> find_id def
R202416:202419 VST.floyd.VSU <> LP_G:1541 meth
R202403:202411 compcert.cfrontend.Ctypes <> prog_main proj
R202413:202413 VST.floyd.VSU <> p:1537 var
R202423:202426 Coq.Init.Datatypes <> Some constr
R202428:202430 VST.floyd.VSU <> phi:1543 var
R202486:202488 Coq.Init.Logic <> ::type_scope:x_'='_x not
R202457:202463 VST.veric.initial_world <> find_id def
R202479:202485 VST.floyd.VSU <> Exports:1538 var
R202466:202474 compcert.cfrontend.Ctypes <> prog_main proj
R202476:202476 VST.floyd.VSU <> p:1537 var
R202489:202492 Coq.Init.Datatypes <> Some constr
R202494:202496 VST.floyd.VSU <> phi:1543 var
prf 202854:202863 <> LP_VSU_ext
binder 202866:202870 <> Espec:1545
binder 202872:202872 <> V:1546
binder 202874:202875 <> cs:1547
binder 202877:202877 <> E:1548
binder 202879:202881 <> Imp:1549
binder 202883:202883 <> p:1550
binder 202885:202887 <> Exp:1551
binder 202889:202891 <> GP1:1552
binder 202893:202895 <> GP2:1553
R202946:202949 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R202957:202966 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R202968:202980 VST.floyd.VSU <> LinkedProgVSU rec
R203005:203007 VST.floyd.VSU <> GP2:1553 var
R203001:203003 VST.floyd.VSU <> Exp:1551 var
R202999:202999 VST.floyd.VSU <> p:1550 var
R202995:202997 VST.floyd.VSU <> Imp:1549 var
R202993:202993 VST.floyd.VSU <> E:1548 var
R202990:202991 VST.floyd.VSU <> cs:1547 var
R202988:202988 VST.floyd.VSU <> V:1546 var
R202982:202986 VST.floyd.VSU <> Espec:1545 var
R202953:202953 Coq.Init.Logic <> ::type_scope:x_'='_x not
R202950:202952 VST.floyd.VSU <> GP1:1552 var
R202954:202956 VST.floyd.VSU <> GP2:1553 var
R202906:202918 VST.floyd.VSU <> LinkedProgVSU rec
R202943:202945 VST.floyd.VSU <> GP1:1552 var
R202939:202941 VST.floyd.VSU <> Exp:1551 var
R202937:202937 VST.floyd.VSU <> p:1550 var
R202933:202935 VST.floyd.VSU <> Imp:1549 var
R202931:202931 VST.floyd.VSU <> E:1548 var
R202928:202929 VST.floyd.VSU <> cs:1547 var
R202926:202926 VST.floyd.VSU <> V:1546 var
R202920:202924 VST.floyd.VSU <> Espec:1545 var
prf 203053:203065 <> LP_VSU_entail
binder 203068:203072 <> Espec:1554
binder 203074:203074 <> V:1555
binder 203076:203077 <> cs:1556
binder 203079:203079 <> E:1557
binder 203081:203083 <> Imp:1558
binder 203085:203085 <> p:1559
binder 203087:203089 <> Exp:1560
binder 203092:203094 <> GP1:1561
binder 203096:203098 <> GP2:1562
R203150:203153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R203154:203154 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R203183:203194 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R203196:203208 VST.floyd.VSU <> LinkedProgVSU rec
R203233:203235 VST.floyd.VSU <> GP2:1562 var
R203229:203231 VST.floyd.VSU <> Exp:1560 var
R203227:203227 VST.floyd.VSU <> p:1559 var
R203223:203225 VST.floyd.VSU <> Imp:1558 var
R203221:203221 VST.floyd.VSU <> E:1557 var
R203218:203219 VST.floyd.VSU <> cs:1556 var
R203216:203216 VST.floyd.VSU <> V:1555 var
R203210:203214 VST.floyd.VSU <> Espec:1554 var
binder 203162:203163 <> gv:1563
R203172:203176 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R203166:203168 VST.floyd.VSU <> GP1:1561 var
R203170:203171 VST.floyd.VSU <> gv:1563 var
R203177:203179 VST.floyd.VSU <> GP2:1562 var
R203181:203182 VST.floyd.VSU <> gv:1563 var
R203110:203122 VST.floyd.VSU <> LinkedProgVSU rec
R203147:203149 VST.floyd.VSU <> GP1:1561 var
R203143:203145 VST.floyd.VSU <> Exp:1560 var
R203141:203141 VST.floyd.VSU <> p:1559 var
R203137:203139 VST.floyd.VSU <> Imp:1558 var
R203135:203135 VST.floyd.VSU <> E:1557 var
R203132:203133 VST.floyd.VSU <> cs:1556 var
R203130:203130 VST.floyd.VSU <> V:1555 var
R203124:203128 VST.floyd.VSU <> Espec:1554 var
R203285:203303 VST.floyd.VSU <> Build_LinkedProgVSU constr
R203324:203348 VST.floyd.VSU <> CanonicalComponent_entail thm
R203285:203303 VST.floyd.VSU <> Build_LinkedProgVSU constr
R203324:203348 VST.floyd.VSU <> CanonicalComponent_entail thm
def 203380:203396 <> G_of_CanonicalVSU
binder 203399:203403 <> Espec:1564
binder 203405:203405 <> V:1565
binder 203407:203408 <> cs:1566
binder 203410:203410 <> E:1567
binder 203412:203418 <> Imports:1568
binder 203420:203420 <> p:1569
binder 203422:203428 <> Exports:1570
binder 203430:203431 <> GP:1571
R203441:203452 VST.floyd.VSU <> CanonicalVSU def
R203485:203486 VST.floyd.VSU <> GP:1571 var
R203477:203483 VST.floyd.VSU <> Exports:1570 var
R203475:203475 VST.floyd.VSU <> p:1569 var
R203467:203473 VST.floyd.VSU <> Imports:1568 var
R203465:203465 VST.floyd.VSU <> E:1567 var
R203462:203463 VST.floyd.VSU <> cs:1566 var
R203460:203460 VST.floyd.VSU <> V:1565 var
R203454:203458 VST.floyd.VSU <> Espec:1564 var
binder 203435:203437 <> vsu:1572
R203490:203497 VST.veric.mpred <> funspecs def
prf 203592:203613 <> G_of_CanonicalVSU_char
binder 203616:203620 <> Espec:1573
binder 203622:203622 <> V:1574
binder 203624:203625 <> cs:1575
binder 203627:203627 <> E:1576
binder 203629:203635 <> Imports:1577
binder 203637:203637 <> p:1578
binder 203639:203645 <> Exports:1579
binder 203647:203648 <> GP:1580
R203658:203669 VST.floyd.VSU <> CanonicalVSU def
R203702:203703 VST.floyd.VSU <> GP:1580 var
R203694:203700 VST.floyd.VSU <> Exports:1579 var
R203692:203692 VST.floyd.VSU <> p:1578 var
R203684:203690 VST.floyd.VSU <> Imports:1577 var
R203682:203682 VST.floyd.VSU <> E:1576 var
R203679:203680 VST.floyd.VSU <> cs:1575 var
R203677:203677 VST.floyd.VSU <> V:1574 var
R203671:203675 VST.floyd.VSU <> Espec:1573 var
binder 203652:203654 <> vsu:1581
R203743:203762 Coq.Init.Logic <> ::type_scope:x_'='_x not
R203712:203714 Coq.Lists.List <> map def
R203721:203737 VST.floyd.VSU <> G_of_CanonicalVSU def
R203739:203741 VST.floyd.VSU <> vsu:1581 var
R203716:203718 Coq.Init.Datatypes <> fst def
R203763:203765 Coq.Lists.List <> map def
R203772:203777 Coq.Lists.List <> filter def
R203863:203871 compcert.cfrontend.Ctypes <> prog_defs proj
R203873:203873 VST.floyd.VSU <> p:1578 var
binder 203784:203784 <> x:1582
R203789:203794 Coq.Lists.List <> in_dec thm
R203822:203825 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R203814:203819 VST.floyd.VSU <> IntIDs def
R203821:203821 VST.floyd.VSU <> p:1578 var
R203826:203828 Coq.Lists.List <> map def
R203834:203834 VST.floyd.VSU <> E:1576 var
R203830:203832 Coq.Init.Datatypes <> fst def
R203806:203808 Coq.Init.Datatypes <> fst def
R203810:203810 VST.floyd.VSU <> x:1582 var
R203796:203803 compcert.common.AST <> ident_eq def
R203767:203769 Coq.Init.Datatypes <> fst def
R203965:203970 VST.floyd.VSU <> Comp_G def
prf 203999:204025 <> G_of_CanoncialVSU_justified
binder 204028:204032 <> Espec:1583
binder 204034:204034 <> V:1584
binder 204036:204037 <> cs:1585
binder 204039:204039 <> E:1586
binder 204041:204047 <> Imports:1587
binder 204049:204049 <> p:1588
binder 204051:204057 <> Exports:1589
binder 204059:204060 <> GP:1590
R204070:204081 VST.floyd.VSU <> CanonicalVSU def
R204114:204115 VST.floyd.VSU <> GP:1590 var
R204106:204112 VST.floyd.VSU <> Exports:1589 var
R204104:204104 VST.floyd.VSU <> p:1588 var
R204096:204102 VST.floyd.VSU <> Imports:1587 var
R204094:204094 VST.floyd.VSU <> E:1586 var
R204091:204092 VST.floyd.VSU <> cs:1585 var
R204089:204089 VST.floyd.VSU <> V:1584 var
R204083:204087 VST.floyd.VSU <> Espec:1583 var
binder 204064:204066 <> vsu:1591
R204138:204142 compcert.common.AST <> ident def
binder 204134:204134 <> i:1592
R204152:204158 VST.veric.mpred <> funspec ind
binder 204146:204148 <> phi:1593
R204167:204172 compcert.cfrontend.Ctypes <> fundef ind
R204174:204181 compcert.cfrontend.Clight <> function rec
binder 204162:204163 <> fd:1594
R204240:204250 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R204309:204320 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R204322:204323 VST.floyd.VSU <> SF def
R204422:204424 VST.floyd.VSU <> phi:1593 var
R204419:204420 VST.floyd.VSU <> fd:1594 var
R204417:204417 VST.floyd.VSU <> i:1592 var
R204388:204392 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R204414:204414 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R204381:204387 VST.floyd.VSU <> Imports:1587 var
R204393:204409 VST.floyd.VSU <> G_of_CanonicalVSU def
R204411:204413 VST.floyd.VSU <> vsu:1591 var
R204339:204352 compcert.common.Globalenvs Genv globalenv def
R204377:204377 VST.floyd.VSU <> p:1588 var
R204372:204375 compcert.cfrontend.Ctypes <> type ind
R204355:204360 compcert.cfrontend.Ctypes <> fundef ind
R204362:204369 compcert.cfrontend.Clight <> function rec
R204334:204334 VST.floyd.VSU <> V:1584 var
R204331:204332 VST.floyd.VSU <> cs:1585 var
R204325:204329 VST.floyd.VSU <> Espec:1583 var
R204298:204300 Coq.Init.Logic <> ::type_scope:x_'='_x not
R204251:204271 VST.veric.initial_world <> find_id def
R204276:204292 VST.floyd.VSU <> G_of_CanonicalVSU def
R204294:204296 VST.floyd.VSU <> vsu:1591 var
R204273:204273 VST.floyd.VSU <> i:1592 var
R204301:204304 Coq.Init.Datatypes <> Some constr
R204306:204308 VST.floyd.VSU <> phi:1593 var
R204230:204232 Coq.Init.Logic <> ::type_scope:x_'='_x not
R204192:204212 VST.veric.initial_world <> find_id def
R204217:204226 VST.veric.initial_world <> prog_funct def
R204228:204228 VST.floyd.VSU <> p:1588 var
R204214:204214 VST.floyd.VSU <> i:1592 var
R204233:204236 Coq.Init.Datatypes <> Some constr
R204238:204239 VST.floyd.VSU <> fd:1594 var
R204463:204478 VST.floyd.VSU <> Comp_G_justified proj
R204463:204478 VST.floyd.VSU <> Comp_G_justified proj
prf 204507:204527 <> LNR_G_of_CanoncialVSU
binder 204530:204534 <> Espec:1595
binder 204536:204536 <> V:1596
binder 204538:204539 <> cs:1597
binder 204541:204541 <> E:1598
binder 204543:204549 <> Imports:1599
binder 204551:204551 <> p:1600
binder 204553:204559 <> Exports:1601
binder 204561:204562 <> GP:1602
R204572:204583 VST.floyd.VSU <> CanonicalVSU def
R204616:204617 VST.floyd.VSU <> GP:1602 var
R204608:204614 VST.floyd.VSU <> Exports:1601 var
R204606:204606 VST.floyd.VSU <> p:1600 var
R204598:204604 VST.floyd.VSU <> Imports:1599 var
R204596:204596 VST.floyd.VSU <> E:1598 var
R204593:204594 VST.floyd.VSU <> cs:1597 var
R204591:204591 VST.floyd.VSU <> V:1596 var
R204585:204589 VST.floyd.VSU <> Espec:1595 var
binder 204566:204568 <> vsu:1603
R204627:204638 compcert.lib.Coqlib <> list_norepet ind
R204641:204643 Coq.Lists.List <> map def
R204650:204666 VST.floyd.VSU <> G_of_CanonicalVSU def
R204668:204670 VST.floyd.VSU <> vsu:1603 var
R204645:204647 Coq.Init.Datatypes <> fst def
R204711:204720 VST.floyd.VSU <> Comp_G_LNR proj
R204711:204720 VST.floyd.VSU <> Comp_G_LNR proj
prf 204738:204759 <> LNR_progdefs_progfunct
binder 204762:204762 <> F:1604
R204769:204775 compcert.cfrontend.Ctypes <> program rec
R204777:204777 VST.floyd.VSU <> F:1604 var
binder 204766:204766 <> p:1605
R204817:204827 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R204828:204839 compcert.lib.Coqlib <> list_norepet ind
R204842:204844 Coq.Lists.List <> map def
R204851:204860 VST.veric.initial_world <> prog_funct def
R204862:204862 VST.floyd.VSU <> p:1605 var
R204846:204848 Coq.Init.Datatypes <> fst def
R204781:204792 compcert.lib.Coqlib <> list_norepet ind
R204795:204797 Coq.Lists.List <> map def
R204804:204812 compcert.cfrontend.Ctypes <> prog_defs proj
R204814:204814 VST.floyd.VSU <> p:1605 var
R204799:204801 Coq.Init.Datatypes <> fst def
R204880:204914 VST.veric.initialize <> list_norepet_prog_funct' thm
R204880:204914 VST.veric.initialize <> list_norepet_prog_funct' thm
def 204934:204939 <> ExtIDs
R204945:204958 compcert.cfrontend.Ctypes <> program rec
R204960:204967 compcert.cfrontend.Clight <> function rec
binder 204942:204942 <> p:1606
R204971:204974 Coq.Init.Datatypes <> list ind
R204976:204980 compcert.common.AST <> ident def
R204988:204990 Coq.Lists.List <> map def
R204998:205003 Coq.Lists.List <> filter def
binder 205010:205010 <> x:1607
R205015:205018 Coq.Init.Datatypes <> negb def
R205021:205030 VST.floyd.VSU <> isInternal def
R205033:205035 Coq.Init.Datatypes <> snd def
R205037:205037 VST.floyd.VSU <> x:1607 var
R205044:205052 compcert.cfrontend.Ctypes <> prog_defs proj
R205054:205054 VST.floyd.VSU <> p:1606 var
R204992:204994 Coq.Init.Datatypes <> fst def
prf 205878:205903 <> MkInitPred_of_CanonicalVSU
binder 205906:205910 <> Espec:1608
binder 205912:205912 <> V:1609
binder 205914:205915 <> cs:1610
binder 205917:205917 <> E:1611
binder 205919:205925 <> Imports:1612
binder 205927:205927 <> p:1613
binder 205929:205935 <> Exports:1614
binder 205937:205938 <> GP:1615
R205948:205959 VST.floyd.VSU <> CanonicalVSU def
R205992:205993 VST.floyd.VSU <> GP:1615 var
R205984:205990 VST.floyd.VSU <> Exports:1614 var
R205982:205982 VST.floyd.VSU <> p:1613 var
R205974:205980 VST.floyd.VSU <> Imports:1612 var
R205972:205972 VST.floyd.VSU <> E:1611 var
R205969:205970 VST.floyd.VSU <> cs:1610 var
R205967:205967 VST.floyd.VSU <> V:1609 var
R205961:205965 VST.floyd.VSU <> Espec:1608 var
binder 205942:205944 <> vsu:1616
binder 206010:206011 <> gv:1617
R206038:206042 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R206014:206022 VST.floyd.VSU <> InitGPred def
R206036:206037 VST.floyd.VSU <> gv:1617 var
R206025:206031 VST.floyd.VSU <> Vardefs def
R206033:206033 VST.floyd.VSU <> p:1613 var
R206043:206044 VST.floyd.VSU <> GP:1615 var
R206046:206047 VST.floyd.VSU <> gv:1617 var
R206095:206109 VST.floyd.VSU <> Comp_MkInitPred proj
R206095:206109 VST.floyd.VSU <> Comp_MkInitPred proj
prf 206128:206144 <> global_is_headptr
binder 206146:206146 <> g:1618
binder 206148:206148 <> i:1619
R206177:206180 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R206181:206187 VST.floyd.val_lemmas <> headptr def
R206190:206203 VST.veric.SeparationLogic <> globals_of_env def
R206207:206207 VST.floyd.VSU <> i:1619 var
R206205:206205 VST.floyd.VSU <> g:1618 var
R206151:206155 VST.veric.val_lemmas <> isptr def
R206158:206171 VST.veric.SeparationLogic <> globals_of_env def
R206175:206175 VST.floyd.VSU <> i:1619 var
R206173:206173 VST.floyd.VSU <> g:1618 var
R206225:206238 VST.veric.SeparationLogic <> globals_of_env def
R206241:206247 VST.floyd.val_lemmas <> headptr def
R206269:206275 VST.veric.mpred Map get def
R206278:206282 VST.veric.mpred <> ge_of def
R206269:206275 VST.veric.mpred Map get def
R206278:206282 VST.veric.mpred <> ge_of def
prf 206356:206382 <> align_compatible_tint_tuint
binder 206385:206386 <> cs:1620
binder 206388:206388 <> b:1621
R206438:206456 Coq.Init.Logic <> ::type_scope:x_'='_x not
R206393:206408 VST.veric.SeparationLogic <> align_compatible def
R206419:206422 compcert.common.Values <> Vptr constr
R206426:206436 compcert.lib.Integers Ptrofs zero def
R206424:206424 VST.floyd.VSU <> b:1621 var
R206413:206416 compcert.exportclight.Clightdefs <> tint def
R206410:206411 VST.floyd.VSU <> cs:1620 var
R206458:206473 VST.veric.SeparationLogic <> align_compatible def
R206485:206488 compcert.common.Values <> Vptr constr
R206492:206502 compcert.lib.Integers Ptrofs zero def
R206490:206490 VST.floyd.VSU <> b:1621 var
R206478:206482 compcert.exportclight.Clightdefs <> tuint def
R206475:206476 VST.floyd.VSU <> cs:1620 var
R206522:206537 VST.veric.SeparationLogic <> align_compatible def
R206546:206553 VST.msl.Axioms <> prop_ext prfax
R206546:206553 VST.msl.Axioms <> prop_ext prfax
R206620:206631 Coq.ZArith.BinInt Z divide_0_r thm
R206620:206631 Coq.ZArith.BinInt Z divide_0_r thm
R206684:206695 Coq.ZArith.BinInt Z divide_0_r thm
R206684:206695 Coq.ZArith.BinInt Z divide_0_r thm
prf 206710:206727 <> semax_body_Gmerge1
binder 206730:206731 <> cs:1622
binder 206734:206734 <> V:1623
binder 206736:206737 <> G1:1624
binder 206739:206740 <> G2:1625
binder 206742:206742 <> f:1626
binder 206744:206747 <> iphi:1627
R206755:206764 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R206776:206779 VST.floyd.VSU <> iphi:1627 var
R206774:206774 VST.floyd.VSU <> f:1626 var
R206771:206772 VST.floyd.VSU <> cs:1622 var
R206768:206769 VST.floyd.VSU <> G1:1624 var
R206766:206766 VST.floyd.VSU <> V:1623 var
binder 206750:206751 <> SB:1628
binder 206797:206797 <> i:1629
binder 206799:206802 <> phi1:1630
binder 206804:206807 <> phi2:1631
R206834:206837 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R206862:206873 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R206923:206934 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R206897:206899 Coq.Init.Logic <> ::type_scope:x_'='_x not
R206874:206891 VST.veric.seplog <> typesig_of_funspec def
R206893:206896 VST.floyd.VSU <> phi1:1630 var
R206900:206917 VST.veric.seplog <> typesig_of_funspec def
R206919:206922 VST.floyd.VSU <> phi2:1631 var
R206968:206970 Coq.Init.Logic <> ::type_scope:x_'='_x not
R206935:206962 VST.veric.seplog <> callingconvention_of_funspec def
R206964:206967 VST.floyd.VSU <> phi1:1630 var
R206971:206998 VST.veric.seplog <> callingconvention_of_funspec def
R207000:207003 VST.floyd.VSU <> phi2:1631 var
R206850:206852 Coq.Init.Logic <> ::type_scope:x_'='_x not
R206838:206844 VST.veric.initial_world <> find_id def
R206848:206849 VST.floyd.VSU <> G2:1625 var
R206846:206846 VST.floyd.VSU <> i:1629 var
R206853:206856 Coq.Init.Datatypes <> Some constr
R206858:206861 VST.floyd.VSU <> phi2:1631 var
R206822:206824 Coq.Init.Logic <> ::type_scope:x_'='_x not
R206810:206816 VST.veric.initial_world <> find_id def
R206820:206821 VST.floyd.VSU <> G1:1624 var
R206818:206818 VST.floyd.VSU <> i:1629 var
R206825:206828 Coq.Init.Datatypes <> Some constr
R206830:206833 VST.floyd.VSU <> phi1:1630 var
binder 206785:206787 <> G12:1632
R207015:207026 compcert.lib.Coqlib <> list_norepet ind
R207038:207041 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R207029:207031 Coq.Lists.List <> map def
R207037:207037 VST.floyd.VSU <> V:1623 var
R207033:207035 Coq.Init.Datatypes <> fst def
R207042:207044 Coq.Lists.List <> map def
R207051:207057 VST.floyd.VSU <> G_merge def
R207062:207063 VST.floyd.VSU <> G2:1625 var
R207059:207060 VST.floyd.VSU <> G1:1624 var
R207046:207048 Coq.Init.Datatypes <> fst def
binder 207010:207012 <> LNR:1633
R207073:207082 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R207107:207110 VST.floyd.VSU <> iphi:1627 var
R207105:207105 VST.floyd.VSU <> f:1626 var
R207102:207103 VST.floyd.VSU <> cs:1622 var
R207087:207093 VST.floyd.VSU <> G_merge def
R207098:207099 VST.floyd.VSU <> G2:1625 var
R207095:207096 VST.floyd.VSU <> G1:1624 var
R207084:207084 VST.floyd.VSU <> V:1623 var
R207138:207149 compcert.lib.Coqlib <> list_norepet ind
R207161:207164 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R207152:207154 Coq.Lists.List <> map def
R207156:207158 Coq.Init.Datatypes <> fst def
R207165:207167 Coq.Lists.List <> map def
R207169:207171 Coq.Init.Datatypes <> fst def
R207138:207149 compcert.lib.Coqlib <> list_norepet ind
R207161:207164 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R207152:207154 Coq.Lists.List <> map def
R207156:207158 Coq.Init.Datatypes <> fst def
R207165:207167 Coq.Lists.List <> map def
R207169:207171 Coq.Init.Datatypes <> fst def
R207201:207223 VST.msl.Coqlib2 <> list_norepet_append_inv thm
R207201:207223 VST.msl.Coqlib2 <> list_norepet_append_inv thm
R207268:207286 compcert.lib.Coqlib <> list_norepet_append thm
R207268:207286 compcert.lib.Coqlib <> list_norepet_append thm
R207312:207322 VST.floyd.VSU <> G_merge_dom thm
R207332:207338 Coq.Lists.List <> map_app thm
R207312:207322 VST.floyd.VSU <> G_merge_dom thm
R207312:207322 VST.floyd.VSU <> G_merge_dom thm
R207332:207338 Coq.Lists.List <> map_app thm
R207332:207338 Coq.Lists.List <> map_app thm
R207357:207379 VST.msl.Coqlib2 <> list_norepet_append_inv thm
R207357:207379 VST.msl.Coqlib2 <> list_norepet_append_inv thm
R207409:207426 VST.floyd.assoclists <> list_disjoint_mono thm
R207409:207426 VST.floyd.assoclists <> list_disjoint_mono thm
R207473:207483 VST.floyd.VSU <> G_merge_dom thm
R207493:207499 Coq.Lists.List <> map_app thm
R207473:207483 VST.floyd.VSU <> G_merge_dom thm
R207473:207483 VST.floyd.VSU <> G_merge_dom thm
R207493:207499 Coq.Lists.List <> map_app thm
R207493:207499 Coq.Lists.List <> map_app thm
R207508:207516 Coq.Lists.List <> in_or_app thm
R207508:207516 Coq.Lists.List <> in_or_app thm
R207552:207563 compcert.lib.Coqlib <> list_norepet ind
R207566:207568 Coq.Lists.List <> map def
R207570:207572 Coq.Init.Datatypes <> fst def
R207552:207563 compcert.lib.Coqlib <> list_norepet ind
R207566:207568 Coq.Lists.List <> map def
R207570:207572 Coq.Init.Datatypes <> fst def
R207606:207628 VST.msl.Coqlib2 <> list_norepet_append_inv thm
R207606:207628 VST.msl.Coqlib2 <> list_norepet_append_inv thm
binder 207678:207678 <> j:1634
binder 207680:207680 <> t:1635
R207703:207706 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R207719:207721 Coq.Init.Logic <> ::type_scope:x_'='_x not
R207707:207713 VST.veric.initial_world <> find_id def
R207715:207715 VST.floyd.VSU <> j:1634 var
R207722:207725 Coq.Init.Datatypes <> None constr
R207694:207696 Coq.Init.Logic <> ::type_scope:x_'='_x not
R207683:207689 VST.veric.initial_world <> find_id def
R207691:207691 VST.floyd.VSU <> j:1634 var
R207697:207700 Coq.Init.Datatypes <> Some constr
R207702:207702 VST.floyd.VSU <> t:1635 var
binder 207678:207678 <> j:1636
binder 207680:207680 <> t:1637
R207703:207706 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R207719:207721 Coq.Init.Logic <> ::type_scope:x_'='_x not
R207707:207713 VST.veric.initial_world <> find_id def
R207715:207715 VST.floyd.VSU <> j:1636 var
R207722:207725 Coq.Init.Datatypes <> None constr
R207694:207696 Coq.Init.Logic <> ::type_scope:x_'='_x not
R207683:207689 VST.veric.initial_world <> find_id def
R207691:207691 VST.floyd.VSU <> j:1636 var
R207697:207700 Coq.Init.Datatypes <> Some constr
R207702:207702 VST.floyd.VSU <> t:1637 var
R207762:207796 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R207762:207796 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R207825:207840 VST.floyd.assoclists <> find_id_None_iff thm
R207825:207840 VST.floyd.assoclists <> find_id_None_iff thm
R207849:207864 VST.floyd.assoclists <> find_id_None_iff thm
R207849:207864 VST.floyd.assoclists <> find_id_None_iff thm
R207912:207922 VST.floyd.VSU <> G_merge_dom thm
R207932:207938 Coq.Lists.List <> map_app thm
R207912:207922 VST.floyd.VSU <> G_merge_dom thm
R207912:207922 VST.floyd.VSU <> G_merge_dom thm
R207932:207938 Coq.Lists.List <> map_app thm
R207932:207938 Coq.Lists.List <> map_app thm
R207947:207955 Coq.Lists.List <> in_or_app thm
R207947:207955 Coq.Lists.List <> in_or_app thm
binder 207994:207994 <> j:1638
binder 207996:207996 <> t:1639
R208019:208022 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R208035:208037 Coq.Init.Logic <> ::type_scope:x_'='_x not
R208023:208029 VST.veric.initial_world <> find_id def
R208031:208031 VST.floyd.VSU <> j:1638 var
R208038:208041 Coq.Init.Datatypes <> None constr
R208010:208012 Coq.Init.Logic <> ::type_scope:x_'='_x not
R207999:208005 VST.veric.initial_world <> find_id def
R208007:208007 VST.floyd.VSU <> j:1638 var
R208013:208016 Coq.Init.Datatypes <> Some constr
R208018:208018 VST.floyd.VSU <> t:1639 var
binder 207994:207994 <> j:1640
binder 207996:207996 <> t:1641
R208019:208022 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R208035:208037 Coq.Init.Logic <> ::type_scope:x_'='_x not
R208023:208029 VST.veric.initial_world <> find_id def
R208031:208031 VST.floyd.VSU <> j:1640 var
R208038:208041 Coq.Init.Datatypes <> None constr
R208010:208012 Coq.Init.Logic <> ::type_scope:x_'='_x not
R207999:208005 VST.veric.initial_world <> find_id def
R208007:208007 VST.floyd.VSU <> j:1640 var
R208013:208016 Coq.Init.Datatypes <> Some constr
R208018:208018 VST.floyd.VSU <> t:1641 var
R208085:208119 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R208085:208119 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R208148:208163 VST.floyd.assoclists <> find_id_None_iff thm
R208148:208163 VST.floyd.assoclists <> find_id_None_iff thm
R208172:208187 VST.floyd.assoclists <> find_id_None_iff thm
R208172:208187 VST.floyd.assoclists <> find_id_None_iff thm
R208231:208243 VST.floyd.VSU <> G_merge_InDom thm
R208231:208243 VST.floyd.VSU <> G_merge_InDom thm
R208267:208272 Coq.Lists.List <> in_dec thm
R208286:208288 Coq.Lists.List <> map def
R208290:208292 Coq.Init.Datatypes <> fst def
R208274:208281 compcert.common.AST <> ident_eq def
R208267:208272 Coq.Lists.List <> in_dec thm
R208286:208288 Coq.Lists.List <> map def
R208290:208292 Coq.Init.Datatypes <> fst def
R208274:208281 compcert.common.AST <> ident_eq def
R208347:208368 VST.floyd.VSU <> semax_body_subsumespec thm
R208347:208368 VST.floyd.VSU <> semax_body_subsumespec thm
R208401:208421 VST.floyd.VSU <> subsumespec_G_merge_l thm
R208401:208421 VST.floyd.VSU <> subsumespec_G_merge_l thm
R208492:208498 VST.veric.initial_world <> find_id def
R208492:208498 VST.veric.initial_world <> find_id def
R208555:208591 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R208555:208591 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R208555:208591 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R208555:208591 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R208555:208591 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R208555:208591 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R208555:208591 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R208555:208591 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R208634:208634 compcert.lib.Maps <> :::x_'!'_x not
R208656:208659 compcert.lib.Maps <> :::x_'!'_x not
R208635:208650 VST.veric.seplog <> make_tycontext_g def
R208634:208634 compcert.lib.Maps <> :::x_'!'_x not
R208656:208659 compcert.lib.Maps <> :::x_'!'_x not
R208635:208650 VST.veric.seplog <> make_tycontext_g def
R208742:208748 VST.veric.initial_world <> find_id def
R208742:208748 VST.veric.initial_world <> find_id def
R208805:208833 VST.veric.semax_prog <> make_tycontext_s_g thm
R208805:208833 VST.veric.semax_prog <> make_tycontext_s_g thm
R208805:208833 VST.veric.semax_prog <> make_tycontext_s_g thm
R208805:208833 VST.veric.semax_prog <> make_tycontext_s_g thm
R208860:208883 VST.veric.initial_world <> make_tycontext_s_find_id thm
R208860:208883 VST.veric.initial_world <> make_tycontext_s_find_id thm
R208860:208883 VST.veric.initial_world <> make_tycontext_s_find_id thm
R208928:208934 VST.veric.initial_world <> find_id def
R208928:208934 VST.veric.initial_world <> find_id def
R209015:209021 Coq.Init.Logic <> eq_refl constr
R209003:209009 Coq.Init.Logic <> eq_refl constr
R209015:209021 Coq.Init.Logic <> eq_refl constr
R209003:209009 Coq.Init.Logic <> eq_refl constr
R209055:209078 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R209055:209078 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R209128:209161 VST.veric.seplog <> funspectype_of_binary_intersection thm
R209128:209161 VST.veric.seplog <> funspectype_of_binary_intersection thm
R209200:209228 VST.veric.semax_prog <> make_tycontext_s_g thm
R209200:209228 VST.veric.semax_prog <> make_tycontext_s_g thm
R209200:209228 VST.veric.semax_prog <> make_tycontext_s_g thm
R209200:209228 VST.veric.semax_prog <> make_tycontext_s_g thm
R209248:209271 VST.veric.initial_world <> make_tycontext_s_find_id thm
R209248:209271 VST.veric.initial_world <> make_tycontext_s_find_id thm
R209248:209271 VST.veric.initial_world <> make_tycontext_s_find_id thm
R209328:209351 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R209328:209351 VST.floyd.VSU <> G_merge_find_id_SomeNone thm
R209383:209411 VST.veric.semax_prog <> make_tycontext_s_g thm
R209383:209411 VST.veric.semax_prog <> make_tycontext_s_g thm
R209383:209411 VST.veric.semax_prog <> make_tycontext_s_g thm
R209383:209411 VST.veric.semax_prog <> make_tycontext_s_g thm
R209431:209454 VST.veric.initial_world <> make_tycontext_s_find_id thm
R209431:209454 VST.veric.initial_world <> make_tycontext_s_find_id thm
R209431:209454 VST.veric.initial_world <> make_tycontext_s_find_id thm
R209498:209531 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R209498:209531 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R209498:209531 VST.veric.semax_prog <> make_tycontext_g_G_None thm
prf 209578:209595 <> semax_body_Gmerge2
binder 209598:209599 <> cs:1642
binder 209602:209602 <> V:1643
binder 209604:209605 <> G1:1644
binder 209607:209608 <> G2:1645
binder 209610:209610 <> f:1646
binder 209612:209615 <> iphi:1647
R209622:209631 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R209643:209646 VST.floyd.VSU <> iphi:1647 var
R209641:209641 VST.floyd.VSU <> f:1646 var
R209638:209639 VST.floyd.VSU <> cs:1642 var
R209635:209636 VST.floyd.VSU <> G2:1645 var
R209633:209633 VST.floyd.VSU <> V:1643 var
binder 209618:209619 <> SB:1648
binder 209664:209664 <> i:1649
binder 209666:209669 <> phi1:1650
binder 209671:209674 <> phi2:1651
R209701:209704 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R209729:209740 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R209790:209801 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R209764:209766 Coq.Init.Logic <> ::type_scope:x_'='_x not
R209741:209758 VST.veric.seplog <> typesig_of_funspec def
R209760:209763 VST.floyd.VSU <> phi1:1650 var
R209767:209784 VST.veric.seplog <> typesig_of_funspec def
R209786:209789 VST.floyd.VSU <> phi2:1651 var
R209835:209837 Coq.Init.Logic <> ::type_scope:x_'='_x not
R209802:209829 VST.veric.seplog <> callingconvention_of_funspec def
R209831:209834 VST.floyd.VSU <> phi1:1650 var
R209838:209865 VST.veric.seplog <> callingconvention_of_funspec def
R209867:209870 VST.floyd.VSU <> phi2:1651 var
R209717:209719 Coq.Init.Logic <> ::type_scope:x_'='_x not
R209705:209711 VST.veric.initial_world <> find_id def
R209715:209716 VST.floyd.VSU <> G2:1645 var
R209713:209713 VST.floyd.VSU <> i:1649 var
R209720:209723 Coq.Init.Datatypes <> Some constr
R209725:209728 VST.floyd.VSU <> phi2:1651 var
R209689:209691 Coq.Init.Logic <> ::type_scope:x_'='_x not
R209677:209683 VST.veric.initial_world <> find_id def
R209687:209688 VST.floyd.VSU <> G1:1644 var
R209685:209685 VST.floyd.VSU <> i:1649 var
R209692:209695 Coq.Init.Datatypes <> Some constr
R209697:209700 VST.floyd.VSU <> phi1:1650 var
binder 209652:209654 <> G12:1652
R209886:209897 compcert.lib.Coqlib <> list_norepet ind
R209909:209912 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R209900:209902 Coq.Lists.List <> map def
R209908:209908 VST.floyd.VSU <> V:1643 var
R209904:209906 Coq.Init.Datatypes <> fst def
R209913:209915 Coq.Lists.List <> map def
R209921:209922 VST.floyd.VSU <> G1:1644 var
R209917:209919 Coq.Init.Datatypes <> fst def
binder 209877:209883 <> LNR_VG1:1653
R209940:209951 compcert.lib.Coqlib <> list_norepet ind
R209963:209966 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R209954:209956 Coq.Lists.List <> map def
R209962:209962 VST.floyd.VSU <> V:1643 var
R209958:209960 Coq.Init.Datatypes <> fst def
R209967:209969 Coq.Lists.List <> map def
R209975:209976 VST.floyd.VSU <> G2:1645 var
R209971:209973 Coq.Init.Datatypes <> fst def
binder 209931:209937 <> LNR_VG2:1654
R209985:209994 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R210019:210022 VST.floyd.VSU <> iphi:1647 var
R210017:210017 VST.floyd.VSU <> f:1646 var
R210014:210015 VST.floyd.VSU <> cs:1642 var
R209999:210005 VST.floyd.VSU <> G_merge def
R210010:210011 VST.floyd.VSU <> G2:1645 var
R210007:210008 VST.floyd.VSU <> G1:1644 var
R209996:209996 VST.floyd.VSU <> V:1643 var
R210045:210056 compcert.lib.Coqlib <> list_norepet ind
R210068:210071 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R210059:210061 Coq.Lists.List <> map def
R210063:210065 Coq.Init.Datatypes <> fst def
R210072:210074 Coq.Lists.List <> map def
R210081:210087 VST.floyd.VSU <> G_merge def
R210076:210078 Coq.Init.Datatypes <> fst def
R210045:210056 compcert.lib.Coqlib <> list_norepet ind
R210068:210071 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R210059:210061 Coq.Lists.List <> map def
R210063:210065 Coq.Init.Datatypes <> fst def
R210072:210074 Coq.Lists.List <> map def
R210081:210087 VST.floyd.VSU <> G_merge def
R210076:210078 Coq.Init.Datatypes <> fst def
R210107:210129 VST.msl.Coqlib2 <> list_norepet_append_inv thm
R210107:210129 VST.msl.Coqlib2 <> list_norepet_append_inv thm
R210182:210204 VST.msl.Coqlib2 <> list_norepet_append_inv thm
R210182:210204 VST.msl.Coqlib2 <> list_norepet_append_inv thm
R210257:210275 compcert.lib.Coqlib <> list_norepet_append thm
R210257:210275 compcert.lib.Coqlib <> list_norepet_append thm
R210297:210307 VST.floyd.VSU <> G_merge_LNR thm
R210297:210307 VST.floyd.VSU <> G_merge_LNR thm
R210345:210357 VST.floyd.VSU <> G_merge_InDom thm
R210345:210357 VST.floyd.VSU <> G_merge_InDom thm
R210464:210475 compcert.lib.Coqlib <> list_norepet ind
R210478:210480 Coq.Lists.List <> map def
R210482:210484 Coq.Init.Datatypes <> fst def
R210464:210475 compcert.lib.Coqlib <> list_norepet ind
R210478:210480 Coq.Lists.List <> map def
R210482:210484 Coq.Init.Datatypes <> fst def
R210518:210540 VST.msl.Coqlib2 <> list_norepet_append_inv thm
R210518:210540 VST.msl.Coqlib2 <> list_norepet_append_inv thm
binder 210590:210590 <> j:1655
binder 210592:210592 <> t:1656
R210615:210618 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R210631:210633 Coq.Init.Logic <> ::type_scope:x_'='_x not
R210619:210625 VST.veric.initial_world <> find_id def
R210627:210627 VST.floyd.VSU <> j:1655 var
R210634:210637 Coq.Init.Datatypes <> None constr
R210606:210608 Coq.Init.Logic <> ::type_scope:x_'='_x not
R210595:210601 VST.veric.initial_world <> find_id def
R210603:210603 VST.floyd.VSU <> j:1655 var
R210609:210612 Coq.Init.Datatypes <> Some constr
R210614:210614 VST.floyd.VSU <> t:1656 var
binder 210590:210590 <> j:1657
binder 210592:210592 <> t:1658
R210615:210618 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R210631:210633 Coq.Init.Logic <> ::type_scope:x_'='_x not
R210619:210625 VST.veric.initial_world <> find_id def
R210627:210627 VST.floyd.VSU <> j:1657 var
R210634:210637 Coq.Init.Datatypes <> None constr
R210606:210608 Coq.Init.Logic <> ::type_scope:x_'='_x not
R210595:210601 VST.veric.initial_world <> find_id def
R210603:210603 VST.floyd.VSU <> j:1657 var
R210609:210612 Coq.Init.Datatypes <> Some constr
R210614:210614 VST.floyd.VSU <> t:1658 var
R210674:210708 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R210674:210708 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R210737:210752 VST.floyd.assoclists <> find_id_None_iff thm
R210737:210752 VST.floyd.assoclists <> find_id_None_iff thm
R210761:210776 VST.floyd.assoclists <> find_id_None_iff thm
R210761:210776 VST.floyd.assoclists <> find_id_None_iff thm
R210824:210834 VST.floyd.VSU <> G_merge_dom thm
R210844:210850 Coq.Lists.List <> map_app thm
R210824:210834 VST.floyd.VSU <> G_merge_dom thm
R210824:210834 VST.floyd.VSU <> G_merge_dom thm
R210844:210850 Coq.Lists.List <> map_app thm
R210844:210850 Coq.Lists.List <> map_app thm
R210859:210867 Coq.Lists.List <> in_or_app thm
R210859:210867 Coq.Lists.List <> in_or_app thm
binder 210906:210906 <> j:1659
binder 210908:210908 <> t:1660
R210931:210934 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R210947:210949 Coq.Init.Logic <> ::type_scope:x_'='_x not
R210935:210941 VST.veric.initial_world <> find_id def
R210943:210943 VST.floyd.VSU <> j:1659 var
R210950:210953 Coq.Init.Datatypes <> None constr
R210922:210924 Coq.Init.Logic <> ::type_scope:x_'='_x not
R210911:210917 VST.veric.initial_world <> find_id def
R210919:210919 VST.floyd.VSU <> j:1659 var
R210925:210928 Coq.Init.Datatypes <> Some constr
R210930:210930 VST.floyd.VSU <> t:1660 var
binder 210906:210906 <> j:1661
binder 210908:210908 <> t:1662
R210931:210934 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R210947:210949 Coq.Init.Logic <> ::type_scope:x_'='_x not
R210935:210941 VST.veric.initial_world <> find_id def
R210943:210943 VST.floyd.VSU <> j:1661 var
R210950:210953 Coq.Init.Datatypes <> None constr
R210922:210924 Coq.Init.Logic <> ::type_scope:x_'='_x not
R210911:210917 VST.veric.initial_world <> find_id def
R210919:210919 VST.floyd.VSU <> j:1661 var
R210925:210928 Coq.Init.Datatypes <> Some constr
R210930:210930 VST.floyd.VSU <> t:1662 var
R210997:211031 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R210997:211031 VST.floyd.assoclists <> list_norepet_find_id_app_exclusive1 thm
R211060:211075 VST.floyd.assoclists <> find_id_None_iff thm
R211060:211075 VST.floyd.assoclists <> find_id_None_iff thm
R211084:211099 VST.floyd.assoclists <> find_id_None_iff thm
R211084:211099 VST.floyd.assoclists <> find_id_None_iff thm
R211143:211155 VST.floyd.VSU <> G_merge_InDom thm
R211143:211155 VST.floyd.VSU <> G_merge_InDom thm
R211179:211184 Coq.Lists.List <> in_dec thm
R211198:211200 Coq.Lists.List <> map def
R211202:211204 Coq.Init.Datatypes <> fst def
R211186:211193 compcert.common.AST <> ident_eq def
R211179:211184 Coq.Lists.List <> in_dec thm
R211198:211200 Coq.Lists.List <> map def
R211202:211204 Coq.Init.Datatypes <> fst def
R211186:211193 compcert.common.AST <> ident_eq def
R211268:211279 compcert.lib.Coqlib <> list_norepet ind
R211282:211284 Coq.Lists.List <> map def
R211286:211288 Coq.Init.Datatypes <> fst def
R211268:211279 compcert.lib.Coqlib <> list_norepet ind
R211282:211284 Coq.Lists.List <> map def
R211286:211288 Coq.Init.Datatypes <> fst def
R211322:211344 VST.msl.Coqlib2 <> list_norepet_append_inv thm
R211322:211344 VST.msl.Coqlib2 <> list_norepet_append_inv thm
R211383:211404 VST.floyd.VSU <> semax_body_subsumespec thm
R211383:211404 VST.floyd.VSU <> semax_body_subsumespec thm
R211437:211457 VST.floyd.VSU <> subsumespec_G_merge_r thm
R211437:211457 VST.floyd.VSU <> subsumespec_G_merge_r thm
R211528:211534 VST.veric.initial_world <> find_id def
R211528:211534 VST.veric.initial_world <> find_id def
R211591:211627 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R211591:211627 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R211591:211627 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R211591:211627 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R211591:211627 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R211591:211627 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R211591:211627 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R211591:211627 VST.veric.semax_prog <> make_context_g_mk_findV_mk thm
R211670:211670 compcert.lib.Maps <> :::x_'!'_x not
R211692:211695 compcert.lib.Maps <> :::x_'!'_x not
R211671:211686 VST.veric.seplog <> make_tycontext_g def
R211670:211670 compcert.lib.Maps <> :::x_'!'_x not
R211692:211695 compcert.lib.Maps <> :::x_'!'_x not
R211671:211686 VST.veric.seplog <> make_tycontext_g def
R211778:211784 VST.veric.initial_world <> find_id def
R211778:211784 VST.veric.initial_world <> find_id def
R211841:211869 VST.veric.semax_prog <> make_tycontext_s_g thm
R211841:211869 VST.veric.semax_prog <> make_tycontext_s_g thm
R211841:211869 VST.veric.semax_prog <> make_tycontext_s_g thm
R211841:211869 VST.veric.semax_prog <> make_tycontext_s_g thm
R211896:211919 VST.veric.initial_world <> make_tycontext_s_find_id thm
R211896:211919 VST.veric.initial_world <> make_tycontext_s_find_id thm
R211896:211919 VST.veric.initial_world <> make_tycontext_s_find_id thm
R211964:211970 VST.veric.initial_world <> find_id def
R211964:211970 VST.veric.initial_world <> find_id def
R212051:212057 Coq.Init.Logic <> eq_refl constr
R212039:212045 Coq.Init.Logic <> eq_refl constr
R212051:212057 Coq.Init.Logic <> eq_refl constr
R212039:212045 Coq.Init.Logic <> eq_refl constr
R212091:212114 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R212091:212114 VST.floyd.VSU <> G_merge_find_id_SomeSome thm
R212164:212197 VST.veric.seplog <> funspectype_of_binary_intersection thm
R212164:212197 VST.veric.seplog <> funspectype_of_binary_intersection thm
R212236:212264 VST.veric.semax_prog <> make_tycontext_s_g thm
R212236:212264 VST.veric.semax_prog <> make_tycontext_s_g thm
R212236:212264 VST.veric.semax_prog <> make_tycontext_s_g thm
R212236:212264 VST.veric.semax_prog <> make_tycontext_s_g thm
R212284:212307 VST.veric.initial_world <> make_tycontext_s_find_id thm
R212284:212307 VST.veric.initial_world <> make_tycontext_s_find_id thm
R212284:212307 VST.veric.initial_world <> make_tycontext_s_find_id thm
R212364:212387 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R212364:212387 VST.floyd.VSU <> G_merge_find_id_NoneSome thm
R212428:212456 VST.veric.semax_prog <> make_tycontext_s_g thm
R212428:212456 VST.veric.semax_prog <> make_tycontext_s_g thm
R212428:212456 VST.veric.semax_prog <> make_tycontext_s_g thm
R212428:212456 VST.veric.semax_prog <> make_tycontext_s_g thm
R212476:212499 VST.veric.initial_world <> make_tycontext_s_find_id thm
R212476:212499 VST.veric.initial_world <> make_tycontext_s_find_id thm
R212476:212499 VST.veric.initial_world <> make_tycontext_s_find_id thm
R212543:212576 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R212543:212576 VST.veric.semax_prog <> make_tycontext_g_G_None thm
R212543:212576 VST.veric.semax_prog <> make_tycontext_g_G_None thm
