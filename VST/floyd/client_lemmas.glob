DIGEST b18d6dde3c9b5d0e9b2ead99e5577b95
FVST.floyd.client_lemmas
R15:29 VST.floyd.base2 <> <> lib
R47:61 VST.floyd.canon <> <> lib
prf 116:125 <> SEP_entail
binder 136:137 <> R':1
binder 139:143 <> Delta:2
binder 145:145 <> P:3
binder 147:147 <> Q:4
binder 149:149 <> R:5
R200:207 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R208:214 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R220:221 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R249:253 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R215:219 VST.floyd.client_lemmas <> Delta:2 var
R222:226 VST.floyd.canon <> PROPx def
R231:236 VST.floyd.canon <> LOCALx def
R241:244 VST.floyd.canon <> SEPx def
R246:246 VST.floyd.client_lemmas <> R:5 var
R238:238 VST.floyd.client_lemmas <> Q:4 var
R228:228 VST.floyd.client_lemmas <> P:3 var
R254:258 VST.floyd.canon <> PROPx def
R263:268 VST.floyd.canon <> LOCALx def
R273:276 VST.floyd.canon <> SEPx def
R278:279 VST.floyd.client_lemmas <> R':1 var
R270:270 VST.floyd.client_lemmas <> Q:4 var
R260:260 VST.floyd.client_lemmas <> P:3 var
R175:179 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R156:172 VST.floyd.base <> fold_right_sepcon def
R174:174 VST.floyd.client_lemmas <> R:5 var
R180:196 VST.floyd.base <> fold_right_sepcon def
R198:199 VST.floyd.client_lemmas <> R':1 var
R305:314 VST.msl.seplog <> andp_left2 meth
R305:314 VST.msl.seplog <> andp_left2 meth
R323:334 VST.msl.log_normalize <> andp_derives thm
R323:334 VST.msl.log_normalize <> andp_derives thm
R349:360 VST.msl.log_normalize <> andp_derives thm
R349:360 VST.msl.log_normalize <> andp_derives thm
R443:448 VST.msl.seplog <> sepcon meth
R450:454 VST.veric.mpred <> mpred def
R443:448 VST.msl.seplog <> sepcon meth
R450:454 VST.veric.mpred <> mpred def
R542:545 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R546:548 Coq.Init.Datatypes <> nil constr
R517:520 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
prf 564:574 <> SEP_entail'
binder 585:586 <> R':6
binder 588:592 <> Delta:7
binder 594:594 <> P:8
binder 596:596 <> Q:9
binder 598:598 <> R:10
R675:682 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R683:689 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R695:696 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R724:728 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R690:694 VST.floyd.client_lemmas <> Delta:7 var
R697:701 VST.floyd.canon <> PROPx def
R706:711 VST.floyd.canon <> LOCALx def
R716:719 VST.floyd.canon <> SEPx def
R721:721 VST.floyd.client_lemmas <> R:10 var
R713:713 VST.floyd.client_lemmas <> Q:9 var
R703:703 VST.floyd.client_lemmas <> P:8 var
R729:733 VST.floyd.canon <> PROPx def
R738:743 VST.floyd.canon <> LOCALx def
R748:751 VST.floyd.canon <> SEPx def
R753:754 VST.floyd.client_lemmas <> R':6 var
R745:745 VST.floyd.client_lemmas <> Q:9 var
R735:735 VST.floyd.client_lemmas <> P:8 var
R605:611 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R617:618 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R646:650 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R612:616 VST.floyd.client_lemmas <> Delta:7 var
R619:623 VST.floyd.canon <> PROPx def
R628:633 VST.floyd.canon <> LOCALx def
R638:641 VST.floyd.canon <> SEPx def
R643:643 VST.floyd.client_lemmas <> R:10 var
R635:635 VST.floyd.client_lemmas <> Q:9 var
R625:625 VST.floyd.client_lemmas <> P:8 var
R651:653 VST.veric.lift LiftNotation :::'`'_x not
R674:674 VST.veric.lift LiftNotation :::'`'_x not
R654:670 VST.floyd.base <> fold_right_sepcon def
R672:673 VST.floyd.client_lemmas <> R':6 var
R780:789 VST.msl.seplog <> andp_right meth
R780:789 VST.msl.seplog <> andp_right meth
R798:807 VST.msl.seplog <> andp_left2 meth
R816:825 VST.msl.seplog <> andp_left1 meth
R798:807 VST.msl.seplog <> andp_left2 meth
R816:825 VST.msl.seplog <> andp_left1 meth
R840:849 VST.msl.seplog <> andp_right meth
R840:849 VST.msl.seplog <> andp_right meth
R863:872 VST.msl.seplog <> andp_left2 meth
R881:890 VST.msl.seplog <> andp_left1 meth
R863:872 VST.msl.seplog <> andp_left2 meth
R863:872 VST.msl.seplog <> andp_left2 meth
R881:890 VST.msl.seplog <> andp_left1 meth
R906:918 VST.msl.seplog <> derives_trans meth
R906:918 VST.msl.seplog <> derives_trans meth
R940:951 VST.msl.seplog <> derives_refl meth
R940:951 VST.msl.seplog <> derives_refl meth
R970:976 VST.veric.Clight_Cop2 <> sem_cmp def
def 1131:1154 <> ListClassicalSep_environ
R1160:1175 VST.msl.seplog <> LiftClassicalSep inst
R1177:1183 VST.veric.mpred <> environ ind
def 1260:1268 <> func_ptr'
binder 1270:1270 <> f:11
binder 1272:1272 <> v:12
R1289:1292 VST.msl.seplog <> ::logic:x_'&&'_x not
R1277:1284 VST.veric.SeparationLogic <> func_ptr def
R1288:1288 VST.floyd.client_lemmas <> v:12 var
R1286:1286 VST.floyd.client_lemmas <> f:11 var
R1293:1295 VST.msl.seplog <> emp meth
prf 1351:1365 <> func_ptr'_isptr
binder 1375:1375 <> f:13
binder 1377:1377 <> v:14
R1393:1397 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R1380:1388 VST.floyd.client_lemmas <> func_ptr' def
R1392:1392 VST.floyd.client_lemmas <> v:14 var
R1390:1390 VST.floyd.client_lemmas <> f:13 var
R1398:1400 VST.msl.seplog <> ::logic:'!!'_x not
R1401:1405 VST.veric.val_lemmas <> isptr def
R1407:1407 VST.floyd.client_lemmas <> v:14 var
R1432:1440 VST.floyd.client_lemmas <> func_ptr' def
R1449:1458 VST.msl.seplog <> andp_left1 meth
R1449:1458 VST.msl.seplog <> andp_left1 meth
R1467:1480 VST.veric.SeparationLogic <> func_ptr_isptr thm
R1467:1480 VST.veric.SeparationLogic <> func_ptr_isptr thm
prf 1541:1555 <> split_func_ptr'
binder 1567:1568 <> fs:15
binder 1570:1570 <> p:16
R1587:1589 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1573:1581 VST.floyd.client_lemmas <> func_ptr' def
R1586:1586 VST.floyd.client_lemmas <> p:16 var
R1583:1584 VST.floyd.client_lemmas <> fs:15 var
R1604:1606 VST.msl.seplog <> ::logic:x_'*'_x not
R1590:1598 VST.floyd.client_lemmas <> func_ptr' def
R1603:1603 VST.floyd.client_lemmas <> p:16 var
R1600:1601 VST.floyd.client_lemmas <> fs:15 var
R1607:1615 VST.floyd.client_lemmas <> func_ptr' def
R1620:1620 VST.floyd.client_lemmas <> p:16 var
R1617:1618 VST.floyd.client_lemmas <> fs:15 var
R1645:1653 VST.floyd.client_lemmas <> func_ptr' def
R1668:1683 VST.veric.SeparationLogic <> corable_func_ptr thm
R1668:1683 VST.veric.SeparationLogic <> corable_func_ptr thm
R1701:1720 VST.msl.seplog <> corable_andp_sepcon1 meth
R1701:1720 VST.msl.seplog <> corable_andp_sepcon1 meth
R1701:1720 VST.msl.seplog <> corable_andp_sepcon1 meth
R1739:1748 VST.msl.log_normalize <> emp_sepcon thm
R1739:1748 VST.msl.log_normalize <> emp_sepcon thm
R1739:1748 VST.msl.log_normalize <> emp_sepcon thm
R1762:1771 VST.msl.log_normalize <> andp_assoc thm
R1762:1771 VST.msl.log_normalize <> andp_assoc thm
R1762:1771 VST.msl.log_normalize <> andp_assoc thm
R1789:1796 VST.msl.seplog <> pred_ext meth
R1789:1796 VST.msl.seplog <> pred_ext meth
R1805:1814 VST.msl.seplog <> andp_right meth
R1805:1814 VST.msl.seplog <> andp_right meth
R1829:1838 VST.msl.seplog <> andp_left2 meth
R1829:1838 VST.msl.seplog <> andp_left2 meth
prf 1859:1874 <> approx_func_ptr'
binder 1885:1885 <> A:17
binder 1894:1898 <> fsig0:18
binder 1900:1901 <> cc:19
binder 1903:1903 <> P:20
R1910:1913 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1921:1924 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1925:1929 VST.veric.mpred <> mpred def
R1914:1920 VST.veric.mpred <> environ ind
R1909:1909 VST.floyd.client_lemmas <> A:17 var
binder 1906:1906 <> Q:21
R1936:1938 compcert.common.Values <> val ind
binder 1933:1933 <> v:22
R1945:1947 Coq.Init.Datatypes <> nat ind
binder 1942:1942 <> n:23
R2030:2032 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1953:1979 VST.veric.compcert_rmaps RML.R approx def
R1988:1996 VST.floyd.client_lemmas <> func_ptr' def
R2028:2028 VST.floyd.client_lemmas <> v:22 var
R1999:2010 VST.veric.SeparationLogic <> NDmk_funspec def
R2025:2025 VST.floyd.client_lemmas <> Q:21 var
R2023:2023 VST.floyd.client_lemmas <> P:20 var
R2021:2021 VST.floyd.client_lemmas <> A:17 var
R2018:2019 VST.floyd.client_lemmas <> cc:19 var
R2012:2016 VST.floyd.client_lemmas <> fsig0:18 var
R1982:1982 Coq.Init.Datatypes <> S constr
R1984:1984 VST.floyd.client_lemmas <> n:23 var
R2033:2059 VST.veric.compcert_rmaps RML.R approx def
R2068:2076 VST.floyd.client_lemmas <> func_ptr' def
R2214:2214 VST.floyd.client_lemmas <> v:22 var
R2079:2090 VST.veric.SeparationLogic <> NDmk_funspec def
binder 2163:2163 <> a:24
binder 2165:2167 <> rho:25
R2172:2198 VST.veric.compcert_rmaps RML.R approx def
R2203:2203 VST.floyd.client_lemmas <> Q:21 var
R2207:2209 VST.floyd.client_lemmas <> rho:25 var
R2205:2205 VST.floyd.client_lemmas <> a:24 var
R2200:2200 VST.floyd.client_lemmas <> n:23 var
binder 2108:2108 <> a:26
binder 2110:2112 <> rho:27
R2117:2143 VST.veric.compcert_rmaps RML.R approx def
R2148:2148 VST.floyd.client_lemmas <> P:20 var
R2152:2154 VST.floyd.client_lemmas <> rho:27 var
R2150:2150 VST.floyd.client_lemmas <> a:26 var
R2145:2145 VST.floyd.client_lemmas <> n:23 var
R2101:2101 VST.floyd.client_lemmas <> A:17 var
R2098:2099 VST.floyd.client_lemmas <> cc:19 var
R2092:2096 VST.floyd.client_lemmas <> fsig0:18 var
R2062:2062 Coq.Init.Datatypes <> S constr
R2064:2064 VST.floyd.client_lemmas <> n:23 var
R2244:2252 VST.floyd.client_lemmas <> func_ptr' def
R2266:2276 VST.floyd.canon <> approx_andp thm
R2266:2276 VST.floyd.canon <> approx_andp thm
R2266:2276 VST.floyd.canon <> approx_andp thm
R2266:2276 VST.floyd.canon <> approx_andp thm
R2266:2276 VST.floyd.canon <> approx_andp thm
R2295:2303 VST.msl.log_normalize <> andp_comm thm
R2310:2312 VST.msl.seplog <> emp meth
R2295:2303 VST.msl.log_normalize <> andp_comm thm
R2310:2312 VST.msl.seplog <> emp meth
R2295:2303 VST.msl.log_normalize <> andp_comm thm
R2310:2312 VST.msl.seplog <> emp meth
R2295:2303 VST.msl.log_normalize <> andp_comm thm
R2310:2312 VST.msl.seplog <> emp meth
R2295:2303 VST.msl.log_normalize <> andp_comm thm
R2310:2312 VST.msl.seplog <> emp meth
R2327:2333 Coq.Init.Logic <> f_equal thm
R2340:2343 VST.msl.seplog <> andp meth
R2346:2372 VST.veric.compcert_rmaps RML.R approx def
R2380:2382 VST.msl.seplog <> emp meth
R2375:2375 Coq.Init.Datatypes <> S constr
R2327:2333 Coq.Init.Logic <> f_equal thm
R2340:2343 VST.msl.seplog <> andp meth
R2346:2372 VST.veric.compcert_rmaps RML.R approx def
R2380:2382 VST.msl.seplog <> emp meth
R2375:2375 Coq.Init.Datatypes <> S constr
R2397:2411 VST.veric.SeparationLogic <> approx_func_ptr thm
R2397:2411 VST.veric.SeparationLogic <> approx_func_ptr thm
prf 2442:2453 <> lift0_unfold
binder 2464:2464 <> A:28
R2471:2471 VST.floyd.client_lemmas <> A:28 var
binder 2468:2468 <> f:29
binder 2475:2477 <> rho:30
R2492:2494 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2481:2485 VST.veric.mpred <> lift0 def
R2489:2491 VST.floyd.client_lemmas <> rho:30 var
R2487:2487 VST.floyd.client_lemmas <> f:29 var
R2495:2495 VST.floyd.client_lemmas <> f:29 var
prf 2530:2542 <> lift0_unfoldC
binder 2553:2553 <> A:31
R2560:2560 VST.floyd.client_lemmas <> A:31 var
binder 2557:2557 <> f:32
R2569:2575 VST.veric.mpred <> environ ind
binder 2564:2566 <> rho:33
R2586:2588 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2580:2580 VST.veric.lift LiftNotation :::'`'_x not
R2582:2585 VST.veric.lift LiftNotation :::'`'_x not
R2581:2581 VST.floyd.client_lemmas <> f:32 var
R2583:2585 VST.floyd.client_lemmas <> rho:33 var
R2589:2589 VST.floyd.client_lemmas <> f:32 var
prf 2624:2635 <> lift1_unfold
binder 2646:2647 <> A1:34
binder 2649:2649 <> B:35
R2658:2661 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2662:2662 VST.floyd.client_lemmas <> B:35 var
R2656:2657 VST.floyd.client_lemmas <> A1:34 var
binder 2653:2653 <> f:36
binder 2665:2666 <> a1:37
binder 2668:2670 <> rho:38
R2695:2697 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2681:2685 VST.veric.mpred <> lift1 def
R2692:2694 VST.floyd.client_lemmas <> rho:38 var
R2689:2690 VST.floyd.client_lemmas <> a1:37 var
R2687:2687 VST.floyd.client_lemmas <> f:36 var
R2698:2698 VST.floyd.client_lemmas <> f:36 var
R2701:2702 VST.floyd.client_lemmas <> a1:37 var
R2704:2706 VST.floyd.client_lemmas <> rho:38 var
prf 2742:2754 <> lift1_unfoldC
binder 2765:2766 <> A1:39
binder 2768:2768 <> B:40
R2777:2780 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2781:2781 VST.floyd.client_lemmas <> B:40 var
R2775:2776 VST.floyd.client_lemmas <> A1:39 var
binder 2772:2772 <> f:41
binder 2784:2785 <> a1:42
R2793:2799 VST.veric.mpred <> environ ind
binder 2788:2790 <> rho:43
R2820:2822 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2811:2811 VST.veric.lift LiftNotation :::'`'_x not
R2813:2819 VST.veric.lift LiftNotation :::'`'_x not
R2812:2812 VST.floyd.client_lemmas <> f:41 var
R2817:2819 VST.floyd.client_lemmas <> rho:43 var
R2814:2815 VST.floyd.client_lemmas <> a1:42 var
R2823:2823 VST.floyd.client_lemmas <> f:41 var
R2826:2827 VST.floyd.client_lemmas <> a1:42 var
R2829:2831 VST.floyd.client_lemmas <> rho:43 var
prf 2867:2878 <> lift2_unfold
binder 2889:2890 <> A1:44
binder 2892:2893 <> A2:45
binder 2895:2895 <> B:46
R2904:2907 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2910:2913 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2914:2914 VST.floyd.client_lemmas <> B:46 var
R2908:2909 VST.floyd.client_lemmas <> A2:45 var
R2902:2903 VST.floyd.client_lemmas <> A1:44 var
binder 2899:2899 <> f:47
binder 2917:2918 <> a1:48
binder 2920:2921 <> a2:49
R2929:2935 VST.veric.mpred <> environ ind
binder 2924:2926 <> rho:50
R2964:2966 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2947:2951 VST.veric.mpred <> lift2 def
R2961:2963 VST.floyd.client_lemmas <> rho:50 var
R2958:2959 VST.floyd.client_lemmas <> a2:49 var
R2955:2956 VST.floyd.client_lemmas <> a1:48 var
R2953:2953 VST.floyd.client_lemmas <> f:47 var
R2967:2967 VST.floyd.client_lemmas <> f:47 var
R2979:2980 VST.floyd.client_lemmas <> a2:49 var
R2982:2984 VST.floyd.client_lemmas <> rho:50 var
R2970:2971 VST.floyd.client_lemmas <> a1:48 var
R2973:2975 VST.floyd.client_lemmas <> rho:50 var
prf 3020:3032 <> lift2_unfoldC
binder 3043:3044 <> A1:51
binder 3046:3047 <> A2:52
binder 3049:3049 <> B:53
R3058:3061 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3064:3067 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3068:3068 VST.floyd.client_lemmas <> B:53 var
R3062:3063 VST.floyd.client_lemmas <> A2:52 var
R3056:3057 VST.floyd.client_lemmas <> A1:51 var
binder 3053:3053 <> f:54
binder 3071:3072 <> a1:55
binder 3074:3075 <> a2:56
R3083:3089 VST.veric.mpred <> environ ind
binder 3078:3080 <> rho:57
R3113:3115 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3101:3101 VST.veric.lift LiftNotation :::'`'_x not
R3103:3112 VST.veric.lift LiftNotation :::'`'_x not
R3102:3102 VST.floyd.client_lemmas <> f:54 var
R3110:3112 VST.floyd.client_lemmas <> rho:57 var
R3107:3108 VST.floyd.client_lemmas <> a2:56 var
R3104:3105 VST.floyd.client_lemmas <> a1:55 var
R3116:3116 VST.floyd.client_lemmas <> f:54 var
R3128:3129 VST.floyd.client_lemmas <> a2:56 var
R3131:3133 VST.floyd.client_lemmas <> rho:57 var
R3119:3120 VST.floyd.client_lemmas <> a1:55 var
R3122:3124 VST.floyd.client_lemmas <> rho:57 var
prf 3169:3180 <> lift3_unfold
binder 3191:3192 <> A1:58
binder 3194:3195 <> A2:59
binder 3197:3198 <> A3:60
binder 3200:3200 <> B:61
R3209:3212 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3215:3218 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3221:3224 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3225:3225 VST.floyd.client_lemmas <> B:61 var
R3219:3220 VST.floyd.client_lemmas <> A3:60 var
R3213:3214 VST.floyd.client_lemmas <> A2:59 var
R3207:3208 VST.floyd.client_lemmas <> A1:58 var
binder 3204:3204 <> f:62
binder 3228:3229 <> a1:63
binder 3231:3232 <> a2:64
binder 3234:3235 <> a3:65
R3243:3249 VST.veric.mpred <> environ ind
binder 3238:3240 <> rho:66
R3281:3283 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3261:3265 VST.veric.mpred <> lift3 def
R3278:3280 VST.floyd.client_lemmas <> rho:66 var
R3275:3276 VST.floyd.client_lemmas <> a3:65 var
R3272:3273 VST.floyd.client_lemmas <> a2:64 var
R3269:3270 VST.floyd.client_lemmas <> a1:63 var
R3267:3267 VST.floyd.client_lemmas <> f:62 var
R3284:3284 VST.floyd.client_lemmas <> f:62 var
R3305:3306 VST.floyd.client_lemmas <> a3:65 var
R3308:3310 VST.floyd.client_lemmas <> rho:66 var
R3296:3297 VST.floyd.client_lemmas <> a2:64 var
R3299:3301 VST.floyd.client_lemmas <> rho:66 var
R3287:3288 VST.floyd.client_lemmas <> a1:63 var
R3290:3292 VST.floyd.client_lemmas <> rho:66 var
prf 3346:3358 <> lift3_unfoldC
binder 3369:3370 <> A1:67
binder 3372:3373 <> A2:68
binder 3375:3376 <> A3:69
binder 3378:3378 <> B:70
R3387:3390 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3393:3396 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3399:3402 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3403:3403 VST.floyd.client_lemmas <> B:70 var
R3397:3398 VST.floyd.client_lemmas <> A3:69 var
R3391:3392 VST.floyd.client_lemmas <> A2:68 var
R3385:3386 VST.floyd.client_lemmas <> A1:67 var
binder 3382:3382 <> f:71
binder 3406:3407 <> a1:72
binder 3409:3410 <> a2:73
binder 3412:3413 <> a3:74
R3421:3427 VST.veric.mpred <> environ ind
binder 3416:3418 <> rho:75
R3454:3456 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3439:3439 VST.veric.lift LiftNotation :::'`'_x not
R3441:3453 VST.veric.lift LiftNotation :::'`'_x not
R3440:3440 VST.floyd.client_lemmas <> f:71 var
R3451:3453 VST.floyd.client_lemmas <> rho:75 var
R3448:3449 VST.floyd.client_lemmas <> a3:74 var
R3445:3446 VST.floyd.client_lemmas <> a2:73 var
R3442:3443 VST.floyd.client_lemmas <> a1:72 var
R3457:3457 VST.floyd.client_lemmas <> f:71 var
R3478:3479 VST.floyd.client_lemmas <> a3:74 var
R3481:3483 VST.floyd.client_lemmas <> rho:75 var
R3469:3470 VST.floyd.client_lemmas <> a2:73 var
R3472:3474 VST.floyd.client_lemmas <> rho:75 var
R3460:3461 VST.floyd.client_lemmas <> a1:72 var
R3463:3465 VST.floyd.client_lemmas <> rho:75 var
prf 3519:3530 <> lift4_unfold
binder 3541:3542 <> A1:76
binder 3544:3545 <> A2:77
binder 3547:3548 <> A3:78
binder 3550:3551 <> A4:79
binder 3553:3553 <> B:80
R3562:3565 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3568:3571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3574:3577 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3580:3583 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3584:3584 VST.floyd.client_lemmas <> B:80 var
R3578:3579 VST.floyd.client_lemmas <> A4:79 var
R3572:3573 VST.floyd.client_lemmas <> A3:78 var
R3566:3567 VST.floyd.client_lemmas <> A2:77 var
R3560:3561 VST.floyd.client_lemmas <> A1:76 var
binder 3557:3557 <> f:81
binder 3587:3588 <> a1:82
binder 3590:3591 <> a2:83
binder 3593:3594 <> a3:84
binder 3596:3597 <> a4:85
R3605:3611 VST.veric.mpred <> environ ind
binder 3600:3602 <> rho:86
R3646:3648 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3623:3627 VST.veric.mpred <> lift4 def
R3643:3645 VST.floyd.client_lemmas <> rho:86 var
R3640:3641 VST.floyd.client_lemmas <> a4:85 var
R3637:3638 VST.floyd.client_lemmas <> a3:84 var
R3634:3635 VST.floyd.client_lemmas <> a2:83 var
R3631:3632 VST.floyd.client_lemmas <> a1:82 var
R3629:3629 VST.floyd.client_lemmas <> f:81 var
R3649:3649 VST.floyd.client_lemmas <> f:81 var
R3679:3680 VST.floyd.client_lemmas <> a4:85 var
R3682:3684 VST.floyd.client_lemmas <> rho:86 var
R3670:3671 VST.floyd.client_lemmas <> a3:84 var
R3673:3675 VST.floyd.client_lemmas <> rho:86 var
R3661:3662 VST.floyd.client_lemmas <> a2:83 var
R3664:3666 VST.floyd.client_lemmas <> rho:86 var
R3652:3653 VST.floyd.client_lemmas <> a1:82 var
R3655:3657 VST.floyd.client_lemmas <> rho:86 var
prf 3720:3732 <> lift4_unfoldC
binder 3743:3744 <> A1:87
binder 3746:3747 <> A2:88
binder 3749:3750 <> A3:89
binder 3752:3753 <> A4:90
binder 3755:3755 <> B:91
R3764:3767 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3770:3773 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3776:3779 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3782:3785 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3786:3786 VST.floyd.client_lemmas <> B:91 var
R3780:3781 VST.floyd.client_lemmas <> A4:90 var
R3774:3775 VST.floyd.client_lemmas <> A3:89 var
R3768:3769 VST.floyd.client_lemmas <> A2:88 var
R3762:3763 VST.floyd.client_lemmas <> A1:87 var
binder 3759:3759 <> f:92
binder 3789:3790 <> a1:93
binder 3792:3793 <> a2:94
binder 3795:3796 <> a3:95
binder 3798:3799 <> a4:96
R3807:3813 VST.veric.mpred <> environ ind
binder 3802:3804 <> rho:97
R3843:3845 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3825:3825 VST.veric.lift LiftNotation :::'`'_x not
R3827:3842 VST.veric.lift LiftNotation :::'`'_x not
R3826:3826 VST.floyd.client_lemmas <> f:92 var
R3840:3842 VST.floyd.client_lemmas <> rho:97 var
R3837:3838 VST.floyd.client_lemmas <> a4:96 var
R3834:3835 VST.floyd.client_lemmas <> a3:95 var
R3831:3832 VST.floyd.client_lemmas <> a2:94 var
R3828:3829 VST.floyd.client_lemmas <> a1:93 var
R3846:3846 VST.floyd.client_lemmas <> f:92 var
R3876:3877 VST.floyd.client_lemmas <> a4:96 var
R3879:3881 VST.floyd.client_lemmas <> rho:97 var
R3867:3868 VST.floyd.client_lemmas <> a3:95 var
R3870:3872 VST.floyd.client_lemmas <> rho:97 var
R3858:3859 VST.floyd.client_lemmas <> a2:94 var
R3861:3863 VST.floyd.client_lemmas <> rho:97 var
R3849:3850 VST.floyd.client_lemmas <> a1:93 var
R3852:3854 VST.floyd.client_lemmas <> rho:97 var
R3925:3936 VST.floyd.client_lemmas <> lift0_unfold thm
R3939:3950 VST.floyd.client_lemmas <> lift1_unfold thm
R3953:3964 VST.floyd.client_lemmas <> lift2_unfold thm
R3967:3978 VST.floyd.client_lemmas <> lift3_unfold thm
R3981:3992 VST.floyd.client_lemmas <> lift4_unfold thm
R4017:4029 VST.floyd.client_lemmas <> lift0_unfoldC thm
R4032:4044 VST.floyd.client_lemmas <> lift1_unfoldC thm
R4047:4059 VST.floyd.client_lemmas <> lift2_unfoldC thm
R4062:4074 VST.floyd.client_lemmas <> lift3_unfoldC thm
R4077:4089 VST.floyd.client_lemmas <> lift4_unfoldC thm
prf 4107:4119 <> alift0_unfold
binder 4130:4130 <> A:98
R4137:4137 VST.floyd.client_lemmas <> A:98 var
binder 4134:4134 <> f:99
binder 4141:4143 <> rho:100
R4159:4161 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4147:4152 VST.veric.mpred <> alift0 def
R4156:4158 VST.floyd.client_lemmas <> rho:100 var
R4154:4154 VST.floyd.client_lemmas <> f:99 var
R4162:4162 VST.floyd.client_lemmas <> f:99 var
prf 4197:4209 <> alift1_unfold
binder 4220:4221 <> A1:101
binder 4223:4223 <> B:102
R4232:4235 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4236:4236 VST.floyd.client_lemmas <> B:102 var
R4230:4231 VST.floyd.client_lemmas <> A1:101 var
binder 4227:4227 <> f:103
binder 4239:4240 <> a1:104
binder 4242:4244 <> rho:105
R4270:4272 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4255:4260 VST.veric.mpred <> alift1 def
R4267:4269 VST.floyd.client_lemmas <> rho:105 var
R4264:4265 VST.floyd.client_lemmas <> a1:104 var
R4262:4262 VST.floyd.client_lemmas <> f:103 var
R4273:4273 VST.floyd.client_lemmas <> f:103 var
R4276:4277 VST.floyd.client_lemmas <> a1:104 var
R4279:4281 VST.floyd.client_lemmas <> rho:105 var
prf 4317:4329 <> alift2_unfold
binder 4340:4341 <> A1:106
binder 4343:4344 <> A2:107
binder 4346:4346 <> B:108
R4355:4358 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4361:4364 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4365:4365 VST.floyd.client_lemmas <> B:108 var
R4359:4360 VST.floyd.client_lemmas <> A2:107 var
R4353:4354 VST.floyd.client_lemmas <> A1:106 var
binder 4350:4350 <> f:109
binder 4368:4369 <> a1:110
binder 4371:4372 <> a2:111
R4380:4390 VST.veric.mpred <> argsEnviron def
binder 4375:4377 <> rho:112
R4420:4422 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4402:4407 VST.veric.mpred <> alift2 def
R4417:4419 VST.floyd.client_lemmas <> rho:112 var
R4414:4415 VST.floyd.client_lemmas <> a2:111 var
R4411:4412 VST.floyd.client_lemmas <> a1:110 var
R4409:4409 VST.floyd.client_lemmas <> f:109 var
R4423:4423 VST.floyd.client_lemmas <> f:109 var
R4435:4436 VST.floyd.client_lemmas <> a2:111 var
R4438:4440 VST.floyd.client_lemmas <> rho:112 var
R4426:4427 VST.floyd.client_lemmas <> a1:110 var
R4429:4431 VST.floyd.client_lemmas <> rho:112 var
prf 4476:4488 <> alift3_unfold
binder 4499:4500 <> A1:113
binder 4502:4503 <> A2:114
binder 4505:4506 <> A3:115
binder 4508:4508 <> B:116
R4517:4520 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4523:4526 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4529:4532 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4533:4533 VST.floyd.client_lemmas <> B:116 var
R4527:4528 VST.floyd.client_lemmas <> A3:115 var
R4521:4522 VST.floyd.client_lemmas <> A2:114 var
R4515:4516 VST.floyd.client_lemmas <> A1:113 var
binder 4512:4512 <> f:117
binder 4536:4537 <> a1:118
binder 4539:4540 <> a2:119
binder 4542:4543 <> a3:120
R4551:4561 VST.veric.mpred <> argsEnviron def
binder 4546:4548 <> rho:121
R4594:4596 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4573:4578 VST.veric.mpred <> alift3 def
R4591:4593 VST.floyd.client_lemmas <> rho:121 var
R4588:4589 VST.floyd.client_lemmas <> a3:120 var
R4585:4586 VST.floyd.client_lemmas <> a2:119 var
R4582:4583 VST.floyd.client_lemmas <> a1:118 var
R4580:4580 VST.floyd.client_lemmas <> f:117 var
R4597:4597 VST.floyd.client_lemmas <> f:117 var
R4618:4619 VST.floyd.client_lemmas <> a3:120 var
R4621:4623 VST.floyd.client_lemmas <> rho:121 var
R4609:4610 VST.floyd.client_lemmas <> a2:119 var
R4612:4614 VST.floyd.client_lemmas <> rho:121 var
R4600:4601 VST.floyd.client_lemmas <> a1:118 var
R4603:4605 VST.floyd.client_lemmas <> rho:121 var
prf 4659:4671 <> alift4_unfold
binder 4682:4683 <> A1:122
binder 4685:4686 <> A2:123
binder 4688:4689 <> A3:124
binder 4691:4692 <> A4:125
binder 4694:4694 <> B:126
R4703:4706 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4709:4712 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4715:4718 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4721:4724 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4725:4725 VST.floyd.client_lemmas <> B:126 var
R4719:4720 VST.floyd.client_lemmas <> A4:125 var
R4713:4714 VST.floyd.client_lemmas <> A3:124 var
R4707:4708 VST.floyd.client_lemmas <> A2:123 var
R4701:4702 VST.floyd.client_lemmas <> A1:122 var
binder 4698:4698 <> f:127
binder 4728:4729 <> a1:128
binder 4731:4732 <> a2:129
binder 4734:4735 <> a3:130
binder 4737:4738 <> a4:131
R4746:4756 VST.veric.mpred <> argsEnviron def
binder 4741:4743 <> rho:132
R4792:4794 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4768:4773 VST.veric.mpred <> alift4 def
R4789:4791 VST.floyd.client_lemmas <> rho:132 var
R4786:4787 VST.floyd.client_lemmas <> a4:131 var
R4783:4784 VST.floyd.client_lemmas <> a3:130 var
R4780:4781 VST.floyd.client_lemmas <> a2:129 var
R4777:4778 VST.floyd.client_lemmas <> a1:128 var
R4775:4775 VST.floyd.client_lemmas <> f:127 var
R4795:4795 VST.floyd.client_lemmas <> f:127 var
R4825:4826 VST.floyd.client_lemmas <> a4:131 var
R4828:4830 VST.floyd.client_lemmas <> rho:132 var
R4816:4817 VST.floyd.client_lemmas <> a3:130 var
R4819:4821 VST.floyd.client_lemmas <> rho:132 var
R4807:4808 VST.floyd.client_lemmas <> a2:129 var
R4810:4812 VST.floyd.client_lemmas <> rho:132 var
R4798:4799 VST.floyd.client_lemmas <> a1:128 var
R4801:4803 VST.floyd.client_lemmas <> rho:132 var
R4874:4886 VST.floyd.client_lemmas <> alift0_unfold thm
R4889:4901 VST.floyd.client_lemmas <> alift1_unfold thm
R4904:4916 VST.floyd.client_lemmas <> alift2_unfold thm
R4919:4931 VST.floyd.client_lemmas <> alift3_unfold thm
R4934:4946 VST.floyd.client_lemmas <> alift4_unfold thm
prf 4964:4974 <> subst_lift0
binder 4985:4985 <> A:133
binder 4988:4989 <> id:134
binder 4991:4991 <> v:135
R4997:4997 VST.floyd.client_lemmas <> A:133 var
binder 4994:4994 <> f:136
R5029:5031 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5009:5013 VST.veric.seplog <> subst def
R5021:5025 VST.veric.mpred <> lift0 def
R5027:5027 VST.floyd.client_lemmas <> f:136 var
R5018:5018 VST.floyd.client_lemmas <> v:135 var
R5015:5016 VST.floyd.client_lemmas <> id:134 var
R5032:5036 VST.veric.mpred <> lift0 def
R5038:5038 VST.floyd.client_lemmas <> f:136 var
prf 5101:5112 <> subst_lift0'
binder 5123:5123 <> A:137
binder 5126:5127 <> id:138
binder 5129:5129 <> v:139
R5135:5135 VST.floyd.client_lemmas <> A:137 var
binder 5132:5132 <> f:140
R5170:5173 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5184:5184 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5147:5151 VST.veric.seplog <> subst def
R5168:5168 VST.floyd.client_lemmas <> f:140 var
R5156:5156 VST.floyd.client_lemmas <> v:139 var
R5153:5154 VST.floyd.client_lemmas <> id:138 var
R5183:5183 VST.floyd.client_lemmas <> f:140 var
R5255:5266 VST.floyd.client_lemmas <> subst_lift0' thm
prf 5284:5295 <> subst_lift0C
binder 5308:5308 <> B:141
binder 5311:5312 <> id:142
R5325:5328 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5329:5331 compcert.common.Values <> val ind
R5318:5324 VST.veric.mpred <> environ ind
binder 5315:5315 <> v:143
R5338:5338 VST.floyd.client_lemmas <> B:141 var
binder 5335:5335 <> f:144
R5368:5370 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5353:5357 VST.veric.seplog <> subst def
R5365:5365 VST.veric.lift LiftNotation :::'`'_x not
R5366:5366 VST.floyd.client_lemmas <> f:144 var
R5362:5362 VST.floyd.client_lemmas <> v:143 var
R5359:5360 VST.floyd.client_lemmas <> id:142 var
R5371:5371 VST.veric.lift LiftNotation :::'`'_x not
R5372:5372 VST.floyd.client_lemmas <> f:144 var
R5443:5453 VST.floyd.client_lemmas <> subst_lift0 thm
R5474:5485 VST.floyd.client_lemmas <> subst_lift0C thm
prf 5503:5513 <> subst_lift1
binder 5526:5527 <> A1:145
binder 5529:5529 <> B:146
binder 5532:5533 <> id:147
binder 5535:5535 <> v:148
R5543:5546 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5547:5547 VST.floyd.client_lemmas <> B:146 var
R5541:5542 VST.floyd.client_lemmas <> A1:145 var
binder 5538:5538 <> f:149
binder 5550:5550 <> a:150
R5585:5587 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5563:5567 VST.veric.seplog <> subst def
R5575:5579 VST.veric.mpred <> lift1 def
R5583:5583 VST.floyd.client_lemmas <> a:150 var
R5581:5581 VST.floyd.client_lemmas <> f:149 var
R5572:5572 VST.floyd.client_lemmas <> v:148 var
R5569:5570 VST.floyd.client_lemmas <> id:147 var
R5588:5592 VST.veric.mpred <> lift1 def
R5597:5601 VST.veric.seplog <> subst def
R5608:5608 VST.floyd.client_lemmas <> a:150 var
R5606:5606 VST.floyd.client_lemmas <> v:148 var
R5603:5604 VST.floyd.client_lemmas <> id:147 var
R5594:5594 VST.floyd.client_lemmas <> f:149 var
prf 5672:5683 <> subst_lift1'
binder 5696:5697 <> A1:151
binder 5699:5699 <> B:152
binder 5702:5703 <> id:153
binder 5705:5705 <> v:154
R5713:5716 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5717:5717 VST.floyd.client_lemmas <> B:152 var
R5711:5712 VST.floyd.client_lemmas <> A1:151 var
binder 5708:5708 <> f:155
binder 5720:5720 <> a:156
R5766:5768 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5733:5737 VST.veric.seplog <> subst def
binder 5749:5751 <> rho:157
R5756:5756 VST.floyd.client_lemmas <> f:155 var
R5759:5759 VST.floyd.client_lemmas <> a:156 var
R5761:5763 VST.floyd.client_lemmas <> rho:157 var
R5742:5742 VST.floyd.client_lemmas <> v:154 var
R5739:5740 VST.floyd.client_lemmas <> id:153 var
binder 5773:5775 <> rho:158
R5780:5780 VST.floyd.client_lemmas <> f:155 var
R5783:5787 VST.veric.seplog <> subst def
R5796:5798 VST.floyd.client_lemmas <> rho:158 var
R5794:5794 VST.floyd.client_lemmas <> a:156 var
R5792:5792 VST.floyd.client_lemmas <> v:154 var
R5789:5790 VST.floyd.client_lemmas <> id:153 var
prf 5862:5873 <> subst_lift1C
binder 5886:5887 <> A1:159
binder 5889:5889 <> B:160
binder 5892:5893 <> id:161
R5906:5909 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5910:5912 compcert.common.Values <> val ind
R5899:5905 VST.veric.mpred <> environ ind
binder 5896:5896 <> v:162
R5921:5924 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5925:5925 VST.floyd.client_lemmas <> B:160 var
R5919:5920 VST.floyd.client_lemmas <> A1:159 var
binder 5916:5916 <> f:163
R5939:5942 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5943:5944 VST.floyd.client_lemmas <> A1:159 var
R5932:5938 VST.veric.mpred <> environ ind
binder 5929:5929 <> a:164
R5975:5978 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5958:5962 VST.veric.seplog <> subst def
R5970:5970 VST.veric.lift LiftNotation :::'`'_x not
R5972:5973 VST.veric.lift LiftNotation :::'`'_x not
R5971:5971 VST.floyd.client_lemmas <> f:163 var
R5973:5973 VST.floyd.client_lemmas <> a:164 var
R5967:5967 VST.floyd.client_lemmas <> v:162 var
R5964:5965 VST.floyd.client_lemmas <> id:161 var
R5979:5979 VST.veric.lift LiftNotation :::'`'_x not
R5981:5995 VST.veric.lift LiftNotation :::'`'_x not
R5980:5980 VST.floyd.client_lemmas <> f:163 var
R5983:5987 VST.veric.seplog <> subst def
R5994:5994 VST.floyd.client_lemmas <> a:164 var
R5992:5992 VST.floyd.client_lemmas <> v:162 var
R5989:5990 VST.floyd.client_lemmas <> id:161 var
R6066:6076 VST.floyd.client_lemmas <> subst_lift1 thm
R6097:6108 VST.floyd.client_lemmas <> subst_lift1C thm
prf 6127:6137 <> subst_lift2
binder 6150:6151 <> A1:165
binder 6153:6154 <> A2:166
binder 6156:6156 <> B:167
binder 6159:6160 <> id:168
binder 6162:6162 <> v:169
R6170:6173 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6176:6179 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6180:6180 VST.floyd.client_lemmas <> B:167 var
R6174:6175 VST.floyd.client_lemmas <> A2:166 var
R6168:6169 VST.floyd.client_lemmas <> A1:165 var
binder 6165:6165 <> f:170
binder 6183:6183 <> a:171
binder 6185:6185 <> b:172
R6222:6224 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6198:6202 VST.veric.seplog <> subst def
R6210:6214 VST.veric.mpred <> lift2 def
R6220:6220 VST.floyd.client_lemmas <> b:172 var
R6218:6218 VST.floyd.client_lemmas <> a:171 var
R6216:6216 VST.floyd.client_lemmas <> f:170 var
R6207:6207 VST.floyd.client_lemmas <> v:169 var
R6204:6205 VST.floyd.client_lemmas <> id:168 var
R6225:6229 VST.veric.mpred <> lift2 def
R6249:6253 VST.veric.seplog <> subst def
R6260:6260 VST.floyd.client_lemmas <> b:172 var
R6258:6258 VST.floyd.client_lemmas <> v:169 var
R6255:6256 VST.floyd.client_lemmas <> id:168 var
R6234:6238 VST.veric.seplog <> subst def
R6245:6245 VST.floyd.client_lemmas <> a:171 var
R6243:6243 VST.floyd.client_lemmas <> v:169 var
R6240:6241 VST.floyd.client_lemmas <> id:168 var
R6231:6231 VST.floyd.client_lemmas <> f:170 var
prf 6324:6335 <> subst_lift2'
binder 6348:6349 <> A1:173
binder 6351:6352 <> A2:174
binder 6354:6354 <> B:175
binder 6357:6358 <> id:176
binder 6360:6360 <> v:177
R6368:6371 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6374:6377 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6378:6378 VST.floyd.client_lemmas <> B:175 var
R6372:6373 VST.floyd.client_lemmas <> A2:174 var
R6366:6367 VST.floyd.client_lemmas <> A1:173 var
binder 6363:6363 <> f:178
binder 6381:6381 <> a:179
binder 6383:6383 <> b:180
R6437:6439 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6396:6400 VST.veric.seplog <> subst def
binder 6412:6414 <> rho:181
R6419:6419 VST.floyd.client_lemmas <> f:178 var
R6430:6430 VST.floyd.client_lemmas <> b:180 var
R6432:6434 VST.floyd.client_lemmas <> rho:181 var
R6422:6422 VST.floyd.client_lemmas <> a:179 var
R6424:6426 VST.floyd.client_lemmas <> rho:181 var
R6405:6405 VST.floyd.client_lemmas <> v:177 var
R6402:6403 VST.floyd.client_lemmas <> id:176 var
binder 6444:6446 <> rho:182
R6451:6451 VST.floyd.client_lemmas <> f:178 var
R6473:6477 VST.veric.seplog <> subst def
R6486:6488 VST.floyd.client_lemmas <> rho:182 var
R6484:6484 VST.floyd.client_lemmas <> b:180 var
R6482:6482 VST.floyd.client_lemmas <> v:177 var
R6479:6480 VST.floyd.client_lemmas <> id:176 var
R6454:6458 VST.veric.seplog <> subst def
R6467:6469 VST.floyd.client_lemmas <> rho:182 var
R6465:6465 VST.floyd.client_lemmas <> a:179 var
R6463:6463 VST.floyd.client_lemmas <> v:177 var
R6460:6461 VST.floyd.client_lemmas <> id:176 var
prf 6552:6563 <> subst_lift2C
binder 6576:6577 <> A1:183
binder 6579:6580 <> A2:184
binder 6582:6582 <> B:185
binder 6585:6586 <> id:186
R6599:6602 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6603:6605 compcert.common.Values <> val ind
R6592:6598 VST.veric.mpred <> environ ind
binder 6589:6589 <> v:187
R6614:6617 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6620:6623 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6624:6624 VST.floyd.client_lemmas <> B:185 var
R6618:6619 VST.floyd.client_lemmas <> A2:184 var
R6612:6613 VST.floyd.client_lemmas <> A1:183 var
binder 6609:6609 <> f:188
R6638:6641 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6642:6643 VST.floyd.client_lemmas <> A1:183 var
R6631:6637 VST.veric.mpred <> environ ind
binder 6628:6628 <> a:189
R6657:6660 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6661:6662 VST.floyd.client_lemmas <> A2:184 var
R6650:6656 VST.veric.mpred <> environ ind
binder 6647:6647 <> b:190
R6695:6697 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6676:6680 VST.veric.seplog <> subst def
R6688:6688 VST.veric.lift LiftNotation :::'`'_x not
R6690:6693 VST.veric.lift LiftNotation :::'`'_x not
R6689:6689 VST.floyd.client_lemmas <> f:188 var
R6693:6693 VST.floyd.client_lemmas <> b:190 var
R6691:6691 VST.floyd.client_lemmas <> a:189 var
R6685:6685 VST.floyd.client_lemmas <> v:187 var
R6682:6683 VST.floyd.client_lemmas <> id:186 var
R6698:6698 VST.veric.lift LiftNotation :::'`'_x not
R6700:6729 VST.veric.lift LiftNotation :::'`'_x not
R6699:6699 VST.floyd.client_lemmas <> f:188 var
R6717:6721 VST.veric.seplog <> subst def
R6728:6728 VST.floyd.client_lemmas <> b:190 var
R6726:6726 VST.floyd.client_lemmas <> v:187 var
R6723:6724 VST.floyd.client_lemmas <> id:186 var
R6702:6706 VST.veric.seplog <> subst def
R6713:6713 VST.floyd.client_lemmas <> a:189 var
R6711:6711 VST.floyd.client_lemmas <> v:187 var
R6708:6709 VST.floyd.client_lemmas <> id:186 var
R6800:6810 VST.floyd.client_lemmas <> subst_lift2 thm
R6831:6842 VST.floyd.client_lemmas <> subst_lift2C thm
prf 6860:6870 <> subst_lift3
binder 6883:6884 <> A1:191
binder 6886:6887 <> A2:192
binder 6889:6890 <> A3:193
binder 6892:6892 <> B:194
binder 6895:6896 <> id:195
binder 6898:6898 <> v:196
R6906:6909 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6912:6915 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6918:6921 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6922:6922 VST.floyd.client_lemmas <> B:194 var
R6916:6917 VST.floyd.client_lemmas <> A3:193 var
R6910:6911 VST.floyd.client_lemmas <> A2:192 var
R6904:6905 VST.floyd.client_lemmas <> A1:191 var
binder 6901:6901 <> f:197
binder 6925:6926 <> a1:198
binder 6928:6929 <> a2:199
binder 6931:6932 <> a3:200
R6974:6976 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6945:6949 VST.veric.seplog <> subst def
R6957:6961 VST.veric.mpred <> lift3 def
R6971:6972 VST.floyd.client_lemmas <> a3:200 var
R6968:6969 VST.floyd.client_lemmas <> a2:199 var
R6965:6966 VST.floyd.client_lemmas <> a1:198 var
R6963:6963 VST.floyd.client_lemmas <> f:197 var
R6954:6954 VST.floyd.client_lemmas <> v:196 var
R6951:6952 VST.floyd.client_lemmas <> id:195 var
R6977:6981 VST.veric.mpred <> lift3 def
R7018:7022 VST.veric.seplog <> subst def
R7029:7030 VST.floyd.client_lemmas <> a3:200 var
R7027:7027 VST.floyd.client_lemmas <> v:196 var
R7024:7025 VST.floyd.client_lemmas <> id:195 var
R7002:7006 VST.veric.seplog <> subst def
R7013:7014 VST.floyd.client_lemmas <> a2:199 var
R7011:7011 VST.floyd.client_lemmas <> v:196 var
R7008:7009 VST.floyd.client_lemmas <> id:195 var
R6986:6990 VST.veric.seplog <> subst def
R6997:6998 VST.floyd.client_lemmas <> a1:198 var
R6995:6995 VST.floyd.client_lemmas <> v:196 var
R6992:6993 VST.floyd.client_lemmas <> id:195 var
R6983:6983 VST.floyd.client_lemmas <> f:197 var
prf 7094:7105 <> subst_lift3'
binder 7118:7119 <> A1:201
binder 7121:7122 <> A2:202
binder 7124:7125 <> A3:203
binder 7127:7127 <> B:204
binder 7130:7131 <> id:205
binder 7133:7133 <> v:206
R7141:7144 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7147:7150 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7153:7156 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7157:7157 VST.floyd.client_lemmas <> B:204 var
R7151:7152 VST.floyd.client_lemmas <> A3:203 var
R7145:7146 VST.floyd.client_lemmas <> A2:202 var
R7139:7140 VST.floyd.client_lemmas <> A1:201 var
binder 7136:7136 <> f:207
binder 7160:7161 <> a1:208
binder 7163:7164 <> a2:209
binder 7166:7167 <> a3:210
R7232:7244 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7180:7184 VST.veric.seplog <> subst def
binder 7196:7198 <> rho:211
R7203:7203 VST.floyd.client_lemmas <> f:207 var
R7224:7225 VST.floyd.client_lemmas <> a3:210 var
R7227:7229 VST.floyd.client_lemmas <> rho:211 var
R7215:7216 VST.floyd.client_lemmas <> a2:209 var
R7218:7220 VST.floyd.client_lemmas <> rho:211 var
R7206:7207 VST.floyd.client_lemmas <> a1:208 var
R7209:7211 VST.floyd.client_lemmas <> rho:211 var
R7189:7189 VST.floyd.client_lemmas <> v:206 var
R7186:7187 VST.floyd.client_lemmas <> id:205 var
binder 7249:7251 <> rho:212
R7256:7256 VST.floyd.client_lemmas <> f:207 var
R7299:7303 VST.veric.seplog <> subst def
R7313:7315 VST.floyd.client_lemmas <> rho:212 var
R7310:7311 VST.floyd.client_lemmas <> a3:210 var
R7308:7308 VST.floyd.client_lemmas <> v:206 var
R7305:7306 VST.floyd.client_lemmas <> id:205 var
R7279:7283 VST.veric.seplog <> subst def
R7293:7295 VST.floyd.client_lemmas <> rho:212 var
R7290:7291 VST.floyd.client_lemmas <> a2:209 var
R7288:7288 VST.floyd.client_lemmas <> v:206 var
R7285:7286 VST.floyd.client_lemmas <> id:205 var
R7259:7263 VST.veric.seplog <> subst def
R7273:7275 VST.floyd.client_lemmas <> rho:212 var
R7270:7271 VST.floyd.client_lemmas <> a1:208 var
R7268:7268 VST.floyd.client_lemmas <> v:206 var
R7265:7266 VST.floyd.client_lemmas <> id:205 var
prf 7379:7390 <> subst_lift3C
binder 7403:7404 <> A1:213
binder 7406:7407 <> A2:214
binder 7409:7410 <> A3:215
binder 7412:7412 <> B:216
binder 7415:7416 <> id:217
R7429:7432 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7433:7435 compcert.common.Values <> val ind
R7422:7428 VST.veric.mpred <> environ ind
binder 7419:7419 <> v:218
R7444:7447 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7450:7453 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7456:7459 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7460:7460 VST.floyd.client_lemmas <> B:216 var
R7454:7455 VST.floyd.client_lemmas <> A3:215 var
R7448:7449 VST.floyd.client_lemmas <> A2:214 var
R7442:7443 VST.floyd.client_lemmas <> A1:213 var
binder 7439:7439 <> f:219
R7493:7496 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7497:7498 VST.floyd.client_lemmas <> A1:213 var
R7486:7492 VST.veric.mpred <> environ ind
binder 7482:7483 <> a1:220
R7513:7516 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7517:7518 VST.floyd.client_lemmas <> A2:214 var
R7506:7512 VST.veric.mpred <> environ ind
binder 7502:7503 <> a2:221
R7533:7536 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7537:7538 VST.floyd.client_lemmas <> A3:215 var
R7526:7532 VST.veric.mpred <> environ ind
binder 7522:7523 <> a3:222
R7576:7578 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7552:7556 VST.veric.seplog <> subst def
R7564:7564 VST.veric.lift LiftNotation :::'`'_x not
R7566:7574 VST.veric.lift LiftNotation :::'`'_x not
R7565:7565 VST.floyd.client_lemmas <> f:219 var
R7573:7574 VST.floyd.client_lemmas <> a3:222 var
R7570:7571 VST.floyd.client_lemmas <> a2:221 var
R7567:7568 VST.floyd.client_lemmas <> a1:220 var
R7561:7561 VST.floyd.client_lemmas <> v:218 var
R7558:7559 VST.floyd.client_lemmas <> id:217 var
R7579:7579 VST.veric.lift LiftNotation :::'`'_x not
R7581:7628 VST.veric.lift LiftNotation :::'`'_x not
R7580:7580 VST.floyd.client_lemmas <> f:219 var
R7615:7619 VST.veric.seplog <> subst def
R7626:7627 VST.floyd.client_lemmas <> a3:222 var
R7624:7624 VST.floyd.client_lemmas <> v:218 var
R7621:7622 VST.floyd.client_lemmas <> id:217 var
R7599:7603 VST.veric.seplog <> subst def
R7610:7611 VST.floyd.client_lemmas <> a2:221 var
R7608:7608 VST.floyd.client_lemmas <> v:218 var
R7605:7606 VST.floyd.client_lemmas <> id:217 var
R7583:7587 VST.veric.seplog <> subst def
R7594:7595 VST.floyd.client_lemmas <> a1:220 var
R7592:7592 VST.floyd.client_lemmas <> v:218 var
R7589:7590 VST.floyd.client_lemmas <> id:217 var
R7699:7709 VST.floyd.client_lemmas <> subst_lift3 thm
R7730:7741 VST.floyd.client_lemmas <> subst_lift3C thm
prf 7759:7769 <> subst_lift4
binder 7782:7783 <> A1:223
binder 7785:7786 <> A2:224
binder 7788:7789 <> A3:225
binder 7791:7792 <> A4:226
binder 7794:7794 <> B:227
binder 7797:7798 <> id:228
binder 7800:7800 <> v:229
R7808:7811 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7814:7817 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7820:7823 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7826:7829 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7830:7830 VST.floyd.client_lemmas <> B:227 var
R7824:7825 VST.floyd.client_lemmas <> A4:226 var
R7818:7819 VST.floyd.client_lemmas <> A3:225 var
R7812:7813 VST.floyd.client_lemmas <> A2:224 var
R7806:7807 VST.floyd.client_lemmas <> A1:223 var
binder 7803:7803 <> f:230
binder 7833:7834 <> a1:231
binder 7836:7837 <> a2:232
binder 7839:7840 <> a3:233
binder 7842:7843 <> a4:234
R7888:7890 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7856:7860 VST.veric.seplog <> subst def
R7868:7872 VST.veric.mpred <> lift4 def
R7885:7886 VST.floyd.client_lemmas <> a4:234 var
R7882:7883 VST.floyd.client_lemmas <> a3:233 var
R7879:7880 VST.floyd.client_lemmas <> a2:232 var
R7876:7877 VST.floyd.client_lemmas <> a1:231 var
R7874:7874 VST.floyd.client_lemmas <> f:230 var
R7865:7865 VST.floyd.client_lemmas <> v:229 var
R7862:7863 VST.floyd.client_lemmas <> id:228 var
R7891:7895 VST.veric.mpred <> lift4 def
R7948:7952 VST.veric.seplog <> subst def
R7959:7960 VST.floyd.client_lemmas <> a4:234 var
R7957:7957 VST.floyd.client_lemmas <> v:229 var
R7954:7955 VST.floyd.client_lemmas <> id:228 var
R7932:7936 VST.veric.seplog <> subst def
R7943:7944 VST.floyd.client_lemmas <> a3:233 var
R7941:7941 VST.floyd.client_lemmas <> v:229 var
R7938:7939 VST.floyd.client_lemmas <> id:228 var
R7916:7920 VST.veric.seplog <> subst def
R7927:7928 VST.floyd.client_lemmas <> a2:232 var
R7925:7925 VST.floyd.client_lemmas <> v:229 var
R7922:7923 VST.floyd.client_lemmas <> id:228 var
R7900:7904 VST.veric.seplog <> subst def
R7911:7912 VST.floyd.client_lemmas <> a1:231 var
R7909:7909 VST.floyd.client_lemmas <> v:229 var
R7906:7907 VST.floyd.client_lemmas <> id:228 var
R7897:7897 VST.floyd.client_lemmas <> f:230 var
prf 8024:8035 <> subst_lift4'
binder 8048:8049 <> A1:235
binder 8051:8052 <> A2:236
binder 8054:8055 <> A3:237
binder 8057:8058 <> A4:238
binder 8060:8060 <> B:239
binder 8063:8064 <> id:240
binder 8066:8066 <> v:241
R8074:8077 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8080:8083 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8086:8089 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8092:8095 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8096:8096 VST.floyd.client_lemmas <> B:239 var
R8090:8091 VST.floyd.client_lemmas <> A4:238 var
R8084:8085 VST.floyd.client_lemmas <> A3:237 var
R8078:8079 VST.floyd.client_lemmas <> A2:236 var
R8072:8073 VST.floyd.client_lemmas <> A1:235 var
binder 8069:8069 <> f:242
binder 8099:8100 <> a1:243
binder 8102:8103 <> a2:244
binder 8105:8106 <> a3:245
binder 8108:8109 <> a4:246
R8183:8195 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8122:8126 VST.veric.seplog <> subst def
binder 8138:8140 <> rho:247
R8145:8145 VST.floyd.client_lemmas <> f:242 var
R8175:8176 VST.floyd.client_lemmas <> a4:246 var
R8178:8180 VST.floyd.client_lemmas <> rho:247 var
R8166:8167 VST.floyd.client_lemmas <> a3:245 var
R8169:8171 VST.floyd.client_lemmas <> rho:247 var
R8157:8158 VST.floyd.client_lemmas <> a2:244 var
R8160:8162 VST.floyd.client_lemmas <> rho:247 var
R8148:8149 VST.floyd.client_lemmas <> a1:243 var
R8151:8153 VST.floyd.client_lemmas <> rho:247 var
R8131:8131 VST.floyd.client_lemmas <> v:241 var
R8128:8129 VST.floyd.client_lemmas <> id:240 var
binder 8200:8202 <> rho:248
R8207:8207 VST.floyd.client_lemmas <> f:242 var
R8270:8274 VST.veric.seplog <> subst def
R8284:8286 VST.floyd.client_lemmas <> rho:248 var
R8281:8282 VST.floyd.client_lemmas <> a4:246 var
R8279:8279 VST.floyd.client_lemmas <> v:241 var
R8276:8277 VST.floyd.client_lemmas <> id:240 var
R8250:8254 VST.veric.seplog <> subst def
R8264:8266 VST.floyd.client_lemmas <> rho:248 var
R8261:8262 VST.floyd.client_lemmas <> a3:245 var
R8259:8259 VST.floyd.client_lemmas <> v:241 var
R8256:8257 VST.floyd.client_lemmas <> id:240 var
R8230:8234 VST.veric.seplog <> subst def
R8244:8246 VST.floyd.client_lemmas <> rho:248 var
R8241:8242 VST.floyd.client_lemmas <> a2:244 var
R8239:8239 VST.floyd.client_lemmas <> v:241 var
R8236:8237 VST.floyd.client_lemmas <> id:240 var
R8210:8214 VST.veric.seplog <> subst def
R8224:8226 VST.floyd.client_lemmas <> rho:248 var
R8221:8222 VST.floyd.client_lemmas <> a1:243 var
R8219:8219 VST.floyd.client_lemmas <> v:241 var
R8216:8217 VST.floyd.client_lemmas <> id:240 var
prf 8350:8361 <> subst_lift4C
binder 8374:8375 <> A1:249
binder 8377:8378 <> A2:250
binder 8380:8381 <> A3:251
binder 8383:8384 <> A4:252
binder 8386:8386 <> B:253
binder 8389:8390 <> id:254
R8403:8406 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8407:8409 compcert.common.Values <> val ind
R8396:8402 VST.veric.mpred <> environ ind
binder 8393:8393 <> v:255
R8418:8421 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8424:8427 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8430:8433 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8436:8439 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8440:8440 VST.floyd.client_lemmas <> B:253 var
R8434:8435 VST.floyd.client_lemmas <> A4:252 var
R8428:8429 VST.floyd.client_lemmas <> A3:251 var
R8422:8423 VST.floyd.client_lemmas <> A2:250 var
R8416:8417 VST.floyd.client_lemmas <> A1:249 var
binder 8413:8413 <> f:256
R8473:8476 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8477:8478 VST.floyd.client_lemmas <> A1:249 var
R8466:8472 VST.veric.mpred <> environ ind
binder 8462:8463 <> a1:257
R8493:8496 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8497:8498 VST.floyd.client_lemmas <> A2:250 var
R8486:8492 VST.veric.mpred <> environ ind
binder 8482:8483 <> a2:258
R8513:8516 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8517:8518 VST.floyd.client_lemmas <> A3:251 var
R8506:8512 VST.veric.mpred <> environ ind
binder 8502:8503 <> a3:259
R8533:8536 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8537:8538 VST.floyd.client_lemmas <> A4:252 var
R8526:8532 VST.veric.mpred <> environ ind
binder 8522:8523 <> a4:260
R8579:8581 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8552:8556 VST.veric.seplog <> subst def
R8564:8564 VST.veric.lift LiftNotation :::'`'_x not
R8566:8577 VST.veric.lift LiftNotation :::'`'_x not
R8565:8565 VST.floyd.client_lemmas <> f:256 var
R8576:8577 VST.floyd.client_lemmas <> a4:260 var
R8573:8574 VST.floyd.client_lemmas <> a3:259 var
R8570:8571 VST.floyd.client_lemmas <> a2:258 var
R8567:8568 VST.floyd.client_lemmas <> a1:257 var
R8561:8561 VST.floyd.client_lemmas <> v:255 var
R8558:8559 VST.floyd.client_lemmas <> id:254 var
R8582:8582 VST.veric.lift LiftNotation :::'`'_x not
R8584:8647 VST.veric.lift LiftNotation :::'`'_x not
R8583:8583 VST.floyd.client_lemmas <> f:256 var
R8634:8638 VST.veric.seplog <> subst def
R8645:8646 VST.floyd.client_lemmas <> a4:260 var
R8643:8643 VST.floyd.client_lemmas <> v:255 var
R8640:8641 VST.floyd.client_lemmas <> id:254 var
R8618:8622 VST.veric.seplog <> subst def
R8629:8630 VST.floyd.client_lemmas <> a3:259 var
R8627:8627 VST.floyd.client_lemmas <> v:255 var
R8624:8625 VST.floyd.client_lemmas <> id:254 var
R8602:8606 VST.veric.seplog <> subst def
R8613:8614 VST.floyd.client_lemmas <> a2:258 var
R8611:8611 VST.floyd.client_lemmas <> v:255 var
R8608:8609 VST.floyd.client_lemmas <> id:254 var
R8586:8590 VST.veric.seplog <> subst def
R8597:8598 VST.floyd.client_lemmas <> a1:257 var
R8595:8595 VST.floyd.client_lemmas <> v:255 var
R8592:8593 VST.floyd.client_lemmas <> id:254 var
R8718:8728 VST.floyd.client_lemmas <> subst_lift4 thm
R8749:8760 VST.floyd.client_lemmas <> subst_lift4C thm
prf 8779:8795 <> bool_val_int_eq_e
binder 8807:8807 <> i:261
binder 8809:8809 <> j:262
binder 8811:8811 <> m:263
R8877:8884 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8886:8886 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8885:8885 VST.floyd.client_lemmas <> i:261 var
R8887:8887 VST.floyd.client_lemmas <> j:262 var
R8865:8867 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8814:8825 compcert.cfrontend.Cop <> bool_val def
R8864:8864 VST.floyd.client_lemmas <> m:263 var
R8854:8862 compcert.cfrontend.Ctypes <> type_bool def
R8828:8838 compcert.common.Values Val of_bool def
R8841:8846 compcert.lib.Integers Int eq def
R8850:8850 VST.floyd.client_lemmas <> j:262 var
R8848:8848 VST.floyd.client_lemmas <> i:261 var
R8868:8871 Coq.Init.Datatypes <> Some constr
R8873:8876 Coq.Init.Datatypes <> true constr
R8914:8925 compcert.cfrontend.Cop <> bool_val def
R8943:8953 compcert.x86_32.Archi <> ptr64 def
R8983:8993 compcert.common.Values Val of_bool def
R8996:9001 compcert.lib.Integers Int eq def
R8943:8953 compcert.x86_32.Archi <> ptr64 def
R8983:8993 compcert.common.Values Val of_bool def
R8996:9001 compcert.lib.Integers Int eq def
R8983:8993 compcert.common.Values Val of_bool def
R8996:9001 compcert.lib.Integers Int eq def
R9048:9058 compcert.lib.Integers Int eq_spec thm
R9048:9058 compcert.lib.Integers Int eq_spec thm
R9089:9094 compcert.lib.Integers Int eq def
R9089:9094 compcert.lib.Integers Int eq def
R9137:9142 compcert.common.Values <> Vfalse def
R9167:9177 compcert.lib.Integers Int eq_true thm
R9167:9177 compcert.lib.Integers Int eq_true thm
R9167:9177 compcert.lib.Integers Int eq_true thm
R9209:9219 compcert.lib.Integers Int eq_spec thm
R9209:9219 compcert.lib.Integers Int eq_spec thm
R9250:9255 compcert.lib.Integers Int eq def
R9250:9255 compcert.lib.Integers Int eq def
R9298:9303 compcert.common.Values <> Vfalse def
R9337:9347 compcert.common.Values Val of_bool def
R9366:9371 compcert.lib.Integers Int eq def
R9366:9371 compcert.lib.Integers Int eq def
prf 9398:9417 <> bool_val_notbool_ptr
binder 9431:9431 <> v:264
binder 9433:9433 <> t:265
binder 9435:9435 <> m:266
R9491:9497 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9498:9498 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9571:9584 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9596:9596 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9559:9561 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9499:9510 compcert.cfrontend.Cop <> bool_val def
R9558:9558 VST.floyd.client_lemmas <> m:266 var
R9548:9556 compcert.cfrontend.Ctypes <> type_bool def
R9513:9521 VST.veric.val_lemmas <> force_val def
R9524:9538 compcert.cfrontend.Cop <> sem_notbool def
R9544:9544 VST.floyd.client_lemmas <> m:266 var
R9542:9542 VST.floyd.client_lemmas <> t:265 var
R9540:9540 VST.floyd.client_lemmas <> v:264 var
R9562:9565 Coq.Init.Datatypes <> Some constr
R9567:9570 Coq.Init.Datatypes <> true constr
R9586:9588 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9585:9585 VST.floyd.client_lemmas <> v:264 var
R9589:9595 VST.veric.base <> nullval def
R9447:9447 VST.floyd.client_lemmas <> t:265 var
R9454:9461 compcert.cfrontend.Ctypes <> Tpointer constr
R9470:9473 Coq.Init.Logic <> True ind
R9482:9486 Coq.Init.Logic <> False ind
R9664:9678 compcert.cfrontend.Cop <> sem_notbool def
R9681:9692 compcert.cfrontend.Cop <> bool_val def
R9695:9705 compcert.common.Values Val of_bool def
R9708:9724 compcert.cfrontend.Cop <> classify_bool def
R9727:9733 VST.veric.base <> nullval def
R9746:9756 compcert.x86_32.Archi <> ptr64 def
R9780:9787 VST.msl.Axioms <> prop_ext prfax
R9746:9756 compcert.x86_32.Archi <> ptr64 def
R9780:9787 VST.msl.Axioms <> prop_ext prfax
R9780:9787 VST.msl.Axioms <> prop_ext prfax
R9862:9869 compcert.lib.Integers Int64 eq def
R9873:9882 compcert.lib.Integers Int64 zero def
R9862:9869 compcert.lib.Integers Int64 eq def
R9873:9882 compcert.lib.Integers Int64 zero def
R9907:9928 VST.veric.expr_lemmas <> int64_eq_e thm
R9907:9928 VST.veric.expr_lemmas <> int64_eq_e thm
R9970:9998 compcert.common.Memory Mem weak_valid_pointer def
R10005:10019 compcert.lib.Integers Ptrofs unsigned def
R9970:9998 compcert.common.Memory Mem weak_valid_pointer def
R10005:10019 compcert.lib.Integers Ptrofs unsigned def
R10081:10093 compcert.lib.Integers Int64 eq_true thm
R10081:10093 compcert.lib.Integers Int64 eq_true thm
R10081:10093 compcert.lib.Integers Int64 eq_true thm
R10166:10171 compcert.lib.Integers Int eq def
R10175:10182 compcert.lib.Integers Int zero def
R10166:10171 compcert.lib.Integers Int eq def
R10175:10182 compcert.lib.Integers Int zero def
R10207:10214 VST.veric.val_lemmas <> int_eq_e thm
R10207:10214 VST.veric.val_lemmas <> int_eq_e thm
R10256:10284 compcert.common.Memory Mem weak_valid_pointer def
R10291:10305 compcert.lib.Integers Ptrofs unsigned def
R10256:10284 compcert.common.Memory Mem weak_valid_pointer def
R10291:10305 compcert.lib.Integers Ptrofs unsigned def
def 10389:10394 <> retval
R10405:10408 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10409:10411 compcert.common.Values <> val ind
R10398:10404 VST.veric.mpred <> environ ind
R10416:10422 VST.veric.mpred <> eval_id def
R10424:10431 VST.veric.SeparationLogic <> ret_temp def
R10448:10459 VST.veric.mpred <> eval_id_same thm
R10482:10494 VST.veric.mpred <> eval_id_other thm
prf 10555:10571 <> simpl_get_result1
R10589:10592 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10586:10588 compcert.common.Values <> val ind
binder 10583:10583 <> f:268
binder 10599:10599 <> i:269
R10709:10711 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10603:10607 VST.veric.lift <> liftx def
R10695:10705 VST.veric.SeparationLogic <> get_result1 def
R10707:10707 VST.floyd.client_lemmas <> i:269 var
R10647:10651 VST.veric.lift <> liftx def
R10686:10691 VST.floyd.client_lemmas <> retval def
R10684:10684 VST.floyd.client_lemmas <> f:268 var
R10654:10659 VST.veric.lift <> Tarrow canonstruc
R10666:10676 VST.veric.mpred <> LiftEnviron canonstruc
R10661:10663 compcert.common.Values <> val ind
R10610:10615 VST.veric.lift <> Tarrow canonstruc
R10626:10636 VST.veric.mpred <> LiftEnviron canonstruc
R10617:10623 VST.veric.mpred <> environ ind
R10712:10712 VST.veric.lift LiftNotation :::'`'_x not
R10714:10725 VST.veric.lift LiftNotation :::'`'_x not
R10713:10713 VST.floyd.client_lemmas <> f:268 var
R10716:10722 VST.veric.mpred <> eval_id def
R10724:10724 VST.floyd.client_lemmas <> i:269 var
R10783:10788 VST.floyd.client_lemmas <> retval def
R10791:10801 VST.veric.SeparationLogic <> get_result1 def
R10831:10847 VST.floyd.client_lemmas <> simpl_get_result1 thm
prf 10863:10880 <> retval_get_result1
binder 10893:10893 <> i:270
binder 10895:10897 <> rho:271
R10926:10929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10943:10943 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10900:10905 VST.floyd.client_lemmas <> retval def
R10908:10918 VST.veric.SeparationLogic <> get_result1 def
R10922:10924 VST.floyd.client_lemmas <> rho:271 var
R10920:10920 VST.floyd.client_lemmas <> i:270 var
R10930:10936 VST.veric.mpred <> eval_id def
R10940:10942 VST.floyd.client_lemmas <> rho:271 var
R10938:10938 VST.floyd.client_lemmas <> i:270 var
R10968:10973 VST.floyd.client_lemmas <> retval def
R10976:10986 VST.veric.SeparationLogic <> get_result1 def
R11026:11043 VST.floyd.client_lemmas <> retval_get_result1 thm
prf 11060:11074 <> retval_ext_rval
binder 11086:11087 <> ge:272
binder 11089:11089 <> t:273
binder 11091:11091 <> v:274
R11123:11125 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11094:11099 VST.floyd.client_lemmas <> retval def
R11102:11114 VST.veric.SeparationLogic <> make_ext_rval def
R11121:11121 VST.floyd.client_lemmas <> v:274 var
R11119:11119 VST.floyd.client_lemmas <> t:273 var
R11116:11117 VST.floyd.client_lemmas <> ge:272 var
R11126:11134 VST.veric.val_lemmas <> force_val def
R11136:11136 VST.floyd.client_lemmas <> v:274 var
R11162:11167 VST.floyd.client_lemmas <> retval def
R11170:11176 VST.veric.mpred <> eval_id def
R11193:11205 VST.veric.SeparationLogic <> make_ext_rval def
prf 11324:11336 <> retval_lemma1
binder 11348:11350 <> rho:275
binder 11352:11352 <> v:276
R11390:11392 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11359:11364 VST.floyd.client_lemmas <> retval def
R11367:11373 VST.veric.mpred <> env_set def
R11388:11388 VST.floyd.client_lemmas <> v:276 var
R11379:11386 VST.veric.SeparationLogic <> ret_temp def
R11375:11377 VST.floyd.client_lemmas <> rho:275 var
R11393:11393 VST.floyd.client_lemmas <> v:276 var
R11419:11424 VST.floyd.client_lemmas <> retval def
R11457:11469 VST.floyd.client_lemmas <> retval_lemma1 thm
prf 11486:11501 <> retval_make_args
binder 11513:11513 <> v:277
binder 11515:11517 <> rho:278
R11567:11569 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11520:11525 VST.floyd.client_lemmas <> retval def
R11528:11536 VST.veric.SeparationLogic <> make_args def
R11563:11565 VST.floyd.client_lemmas <> rho:278 var
R11556:11557 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11555:11555 VST.floyd.client_lemmas <> v:277 var
R11558:11560 Coq.Init.Datatypes <> nil constr
R11547:11548 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11539:11546 VST.veric.SeparationLogic <> ret_temp def
R11549:11551 Coq.Init.Datatypes <> nil constr
R11570:11570 VST.floyd.client_lemmas <> v:277 var
R11596:11601 VST.floyd.client_lemmas <> retval def
R11604:11610 VST.veric.mpred <> eval_id def
R11632:11638 VST.veric.mpred Map gss thm
R11632:11638 VST.veric.mpred Map gss thm
R11672:11687 VST.floyd.client_lemmas <> retval_make_args thm
prf 11704:11716 <> andp_makeargs
R11742:11745 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11746:11750 VST.veric.mpred <> mpred def
R11735:11741 VST.veric.mpred <> environ ind
binder 11730:11730 <> a:279
binder 11732:11732 <> b:280
binder 11753:11753 <> d:281
binder 11755:11755 <> e:282
R11786:11788 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11761:11762 VST.veric.lift LiftNotation :::'`('_x_')' not
R11769:11785 VST.veric.lift LiftNotation :::'`('_x_')' not
R11764:11767 VST.msl.seplog <> ::logic:x_'&&'_x not
R11763:11763 VST.floyd.client_lemmas <> a:279 var
R11768:11768 VST.floyd.client_lemmas <> b:280 var
R11772:11780 VST.veric.SeparationLogic <> make_args def
R11784:11784 VST.floyd.client_lemmas <> e:282 var
R11782:11782 VST.floyd.client_lemmas <> d:281 var
R11807:11810 VST.msl.seplog <> ::logic:x_'&&'_x not
R11789:11789 VST.veric.lift LiftNotation :::'`'_x not
R11791:11806 VST.veric.lift LiftNotation :::'`'_x not
R11790:11790 VST.floyd.client_lemmas <> a:279 var
R11793:11801 VST.veric.SeparationLogic <> make_args def
R11805:11805 VST.floyd.client_lemmas <> e:282 var
R11803:11803 VST.floyd.client_lemmas <> d:281 var
R11811:11811 VST.veric.lift LiftNotation :::'`'_x not
R11813:11828 VST.veric.lift LiftNotation :::'`'_x not
R11812:11812 VST.floyd.client_lemmas <> b:280 var
R11815:11823 VST.veric.SeparationLogic <> make_args def
R11827:11827 VST.floyd.client_lemmas <> e:282 var
R11825:11825 VST.floyd.client_lemmas <> d:281 var
R11877:11889 VST.floyd.client_lemmas <> andp_makeargs thm
prf 11906:11919 <> local_makeargs
R11939:11942 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11936:11938 compcert.common.Values <> val ind
binder 11933:11933 <> f:283
binder 11949:11949 <> v:284
R12022:12029 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12047:12047 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11955:11956 VST.veric.lift LiftNotation :::'`('_x_')' not
R11976:12021 VST.veric.lift LiftNotation :::'`('_x_')' not
R11957:11961 VST.veric.SeparationLogic <> local def
R11964:11965 VST.veric.lift LiftNotation :::'`('_x_')' not
R11967:11974 VST.veric.lift LiftNotation :::'`('_x_')' not
R11966:11966 VST.floyd.client_lemmas <> f:283 var
R11969:11974 VST.floyd.client_lemmas <> retval def
R11979:11987 VST.veric.SeparationLogic <> make_args def
R12010:12013 Coq.Init.Datatypes <> cons constr
R12017:12019 Coq.Init.Datatypes <> nil constr
R12015:12015 VST.floyd.client_lemmas <> v:284 var
R11990:11993 Coq.Init.Datatypes <> cons constr
R12004:12006 Coq.Init.Datatypes <> nil constr
R11995:12002 VST.veric.SeparationLogic <> ret_temp def
R12030:12034 VST.veric.SeparationLogic <> local def
R12037:12038 VST.veric.lift LiftNotation :::'`('_x_')' not
R12040:12045 VST.veric.lift LiftNotation :::'`('_x_')' not
R12039:12039 VST.floyd.client_lemmas <> f:283 var
R12042:12043 VST.veric.lift LiftNotation :::'`('_x_')' not
R12045:12045 VST.veric.lift LiftNotation :::'`('_x_')' not
R12044:12044 VST.floyd.client_lemmas <> v:284 var
R12096:12109 VST.floyd.client_lemmas <> local_makeargs thm
prf 12126:12146 <> simpl_and_get_result1
R12171:12172 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12173:12177 VST.veric.mpred <> mpred def
R12164:12170 VST.veric.mpred <> environ ind
binder 12159:12159 <> Q:285
binder 12161:12161 <> R:286
binder 12180:12180 <> i:287
R12212:12214 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12187:12188 VST.veric.lift LiftNotation :::'`('_x_')' not
R12195:12211 VST.veric.lift LiftNotation :::'`('_x_')' not
R12190:12193 VST.msl.seplog <> ::logic:x_'&&'_x not
R12189:12189 VST.floyd.client_lemmas <> Q:285 var
R12194:12194 VST.floyd.client_lemmas <> R:286 var
R12198:12208 VST.veric.SeparationLogic <> get_result1 def
R12210:12210 VST.floyd.client_lemmas <> i:287 var
R12233:12236 VST.msl.seplog <> ::logic:x_'&&'_x not
R12215:12215 VST.veric.lift LiftNotation :::'`'_x not
R12217:12232 VST.veric.lift LiftNotation :::'`'_x not
R12216:12216 VST.floyd.client_lemmas <> Q:285 var
R12219:12229 VST.veric.SeparationLogic <> get_result1 def
R12231:12231 VST.floyd.client_lemmas <> i:287 var
R12237:12237 VST.veric.lift LiftNotation :::'`'_x not
R12239:12254 VST.veric.lift LiftNotation :::'`'_x not
R12238:12238 VST.floyd.client_lemmas <> R:286 var
R12241:12251 VST.veric.SeparationLogic <> get_result1 def
R12253:12253 VST.floyd.client_lemmas <> i:287 var
R12303:12323 VST.floyd.client_lemmas <> simpl_and_get_result1 thm
prf 12341:12358 <> liftx_local_retval
R12377:12380 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12374:12376 compcert.common.Values <> val ind
binder 12371:12371 <> P:288
binder 12387:12387 <> i:289
R12429:12431 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12393:12394 VST.veric.lift LiftNotation :::'`('_x_')' not
R12412:12428 VST.veric.lift LiftNotation :::'`('_x_')' not
R12395:12399 VST.veric.SeparationLogic <> local def
R12402:12402 VST.veric.lift LiftNotation :::'`'_x not
R12404:12410 VST.veric.lift LiftNotation :::'`'_x not
R12403:12403 VST.floyd.client_lemmas <> P:288 var
R12405:12410 VST.floyd.client_lemmas <> retval def
R12415:12425 VST.veric.SeparationLogic <> get_result1 def
R12427:12427 VST.floyd.client_lemmas <> i:289 var
R12432:12436 VST.veric.SeparationLogic <> local def
R12439:12439 VST.veric.lift LiftNotation :::'`'_x not
R12441:12452 VST.veric.lift LiftNotation :::'`'_x not
R12440:12440 VST.floyd.client_lemmas <> P:288 var
R12443:12449 VST.veric.mpred <> eval_id def
R12451:12451 VST.floyd.client_lemmas <> i:289 var
R12502:12519 VST.floyd.client_lemmas <> liftx_local_retval thm
R12544:12563 VST.floyd.client_lemmas <> bool_val_notbool_ptr thm
R12577:12592 Coq.Init.Logic <> I constr
prf 12609:12617 <> Vint_inj'
binder 12627:12627 <> i:290
binder 12629:12629 <> j:291
R12633:12633 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12649:12654 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12658:12658 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12640:12642 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12634:12637 compcert.common.Values <> Vint constr
R12639:12639 VST.floyd.client_lemmas <> i:290 var
R12643:12646 compcert.common.Values <> Vint constr
R12648:12648 VST.floyd.client_lemmas <> j:291 var
R12656:12656 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12655:12655 VST.floyd.client_lemmas <> i:290 var
R12657:12657 VST.floyd.client_lemmas <> j:291 var
R12682:12689 VST.msl.Axioms <> prop_ext prfax
R12682:12689 VST.msl.Axioms <> prop_ext prfax
prf 12730:12754 <> overridePost_normal_right
binder 12766:12766 <> P:292
binder 12768:12768 <> Q:293
binder 12770:12770 <> R:294
R12783:12789 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12791:12795 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R12790:12790 VST.floyd.client_lemmas <> P:292 var
R12796:12804 VST.veric.tycontext <> RA_normal proj
R12807:12818 VST.veric.SeparationLogic <> overridePost def
R12822:12822 VST.floyd.client_lemmas <> R:294 var
R12820:12820 VST.floyd.client_lemmas <> Q:293 var
R12777:12781 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R12776:12776 VST.floyd.client_lemmas <> P:292 var
R12782:12782 VST.floyd.client_lemmas <> Q:293 var
def 12884:12897 <> fold_right_and
binder 12899:12900 <> P0:295
R12906:12909 Coq.Init.Datatypes <> list ind
binder 12903:12903 <> l:296
R12934:12934 VST.floyd.client_lemmas <> l:296 var
R12944:12946 Coq.Init.Datatypes <> nil constr
R12951:12952 VST.floyd.client_lemmas <> P0:295 var
R12958:12959 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12966:12970 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R12971:12984 VST.floyd.client_lemmas <> fold_right_and:297 def
R12986:12987 VST.floyd.client_lemmas <> P0:295 var
def 13007:13025 <> fold_right_and_True
R13031:13034 Coq.Init.Datatypes <> list ind
binder 13028:13028 <> l:299
R13059:13059 VST.floyd.client_lemmas <> l:299 var
R13069:13071 Coq.Init.Datatypes <> nil constr
R13076:13079 Coq.Init.Logic <> True ind
R13085:13088 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13089:13091 Coq.Init.Datatypes <> nil constr
R13102:13103 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13110:13113 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R13114:13132 VST.floyd.client_lemmas <> fold_right_and_True:300 def
def 13154:13172 <> fold_right_PROP_SEP
R13179:13182 Coq.Init.Datatypes <> list ind
binder 13175:13176 <> l1:302
R13195:13198 Coq.Init.Datatypes <> list ind
R13200:13204 VST.veric.mpred <> mpred def
binder 13191:13192 <> l2:303
R13209:13213 VST.veric.mpred <> mpred def
R13225:13226 VST.floyd.client_lemmas <> l1:302 var
R13236:13238 Coq.Init.Datatypes <> nil constr
R13243:13259 VST.floyd.base <> fold_right_sepcon def
R13261:13262 VST.floyd.client_lemmas <> l2:303 var
R13298:13301 VST.msl.seplog <> ::logic:x_'&&'_x not
R13272:13275 VST.msl.seplog <> ::logic:'!!'_x not
R13297:13297 VST.msl.seplog <> ::logic:'!!'_x not
R13276:13294 VST.floyd.client_lemmas <> fold_right_and_True def
R13302:13318 VST.floyd.base <> fold_right_sepcon def
R13320:13321 VST.floyd.client_lemmas <> l2:303 var
prf 13336:13359 <> fold_right_PROP_SEP_spec
binder 13369:13370 <> l1:305
binder 13372:13373 <> l2:306
R13403:13405 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13378:13396 VST.floyd.client_lemmas <> fold_right_PROP_SEP def
R13401:13402 VST.floyd.client_lemmas <> l2:306 var
R13398:13399 VST.floyd.client_lemmas <> l1:305 var
R13433:13436 VST.msl.seplog <> ::logic:x_'&&'_x not
R13406:13409 VST.msl.seplog <> ::logic:'!!'_x not
R13432:13432 VST.msl.seplog <> ::logic:'!!'_x not
R13410:13419 Coq.Lists.List <> fold_right def
R13430:13431 VST.floyd.client_lemmas <> l1:305 var
R13425:13428 Coq.Init.Logic <> True ind
R13421:13423 Coq.Init.Logic <> and ind
R13437:13453 VST.floyd.base <> fold_right_sepcon def
R13455:13456 VST.floyd.client_lemmas <> l2:306 var
R13508:13512 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R13486:13504 VST.floyd.client_lemmas <> fold_right_and_True def
R13513:13522 Coq.Lists.List <> fold_right def
R13528:13531 Coq.Init.Logic <> True ind
R13524:13526 Coq.Init.Logic <> and ind
R13508:13512 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R13486:13504 VST.floyd.client_lemmas <> fold_right_and_True def
R13513:13522 Coq.Lists.List <> fold_right def
R13528:13531 Coq.Init.Logic <> True ind
R13524:13526 Coq.Init.Logic <> and ind
R13674:13678 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R13641:13644 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R13645:13663 VST.floyd.client_lemmas <> fold_right_and_True def
R13667:13670 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13680:13683 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R13684:13693 Coq.Lists.List <> fold_right def
R13706:13709 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13699:13702 Coq.Init.Logic <> True ind
R13695:13697 Coq.Init.Logic <> and ind
R13674:13678 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R13641:13644 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R13645:13663 VST.floyd.client_lemmas <> fold_right_and_True def
R13667:13670 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13680:13683 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R13684:13693 Coq.Lists.List <> fold_right def
R13706:13709 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13699:13702 Coq.Init.Logic <> True ind
R13695:13697 Coq.Init.Logic <> and ind
R13812:13830 VST.floyd.client_lemmas <> fold_right_PROP_SEP def
prf 13870:13885 <> typed_true_isptr
binder 13896:13896 <> t:307
R13998:14011 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14024:14026 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14012:14021 VST.veric.SeparationLogic <> typed_true def
R14023:14023 VST.floyd.client_lemmas <> t:307 var
R14027:14031 VST.veric.val_lemmas <> isptr def
R13905:13905 VST.floyd.client_lemmas <> t:307 var
R13912:13919 compcert.cfrontend.Ctypes <> Tpointer constr
R13928:13931 Coq.Init.Logic <> True ind
R13935:13940 compcert.cfrontend.Ctypes <> Tarray constr
R13951:13954 Coq.Init.Logic <> True ind
R13958:13966 compcert.cfrontend.Ctypes <> Tfunction constr
R13977:13980 Coq.Init.Logic <> True ind
R13989:13993 Coq.Init.Logic <> False ind
R14073:14080 VST.msl.Axioms <> prop_ext prfax
R14073:14080 VST.msl.Axioms <> prop_ext prfax
R14090:14099 VST.veric.SeparationLogic <> typed_true def
R14102:14109 VST.veric.Cop2 <> bool_val def
R14112:14126 VST.veric.mpred <> strict_bool_val def
R14129:14133 VST.veric.val_lemmas <> isptr def
R14176:14186 compcert.x86_32.Archi <> ptr64 def
R14176:14186 compcert.x86_32.Archi <> ptr64 def
R14176:14186 compcert.x86_32.Archi <> ptr64 def
R14176:14186 compcert.x86_32.Archi <> ptr64 def
R14309:14324 VST.floyd.client_lemmas <> typed_true_isptr thm
R14338:14353 Coq.Init.Logic <> I constr
R14409:14413 VST.veric.lift <> liftx def
R14415:14425 VST.veric.mpred <> LiftEnviron canonstruc
R14427:14432 VST.veric.lift <> Tarrow canonstruc
R14434:14437 VST.veric.lift <> Tend def
R14439:14444 VST.veric.lift <> lift_S proj
R14446:14451 VST.veric.lift <> lift_T proj
R14457:14465 VST.veric.lift <> lift_prod proj
R14467:14475 VST.veric.lift <> lift_last proj
R14477:14482 VST.veric.lift <> lifted proj
R14484:14500 VST.veric.lift <> lift_uncurry_open proj
R14502:14511 VST.veric.lift <> lift_curry proj
R14513:14516 VST.veric.lift <> lift def
R14518:14522 VST.veric.mpred <> lift0 def
R14528:14532 VST.veric.mpred <> lift1 def
R14534:14538 VST.veric.mpred <> lift2 def
R14540:14544 VST.veric.mpred <> lift3 def
R14604:14608 VST.veric.lift <> liftx def
R14610:14620 VST.veric.mpred <> LiftEnviron canonstruc
R14622:14627 VST.veric.lift <> Tarrow canonstruc
R14629:14632 VST.veric.lift <> Tend def
R14634:14639 VST.veric.lift <> lift_S proj
R14641:14646 VST.veric.lift <> lift_T proj
R14652:14660 VST.veric.lift <> lift_prod proj
R14662:14670 VST.veric.lift <> lift_last proj
R14672:14677 VST.veric.lift <> lifted proj
R14679:14695 VST.veric.lift <> lift_uncurry_open proj
R14697:14706 VST.veric.lift <> lift_curry proj
R14708:14711 VST.veric.lift <> lift def
R14713:14717 VST.veric.mpred <> lift0 def
R14723:14727 VST.veric.mpred <> lift1 def
R14729:14733 VST.veric.mpred <> lift2 def
R14735:14739 VST.veric.mpred <> lift3 def
prf 14760:14772 <> tc_eval'_id_i
binder 14784:14788 <> Delta:309
binder 14790:14790 <> t:310
binder 14792:14792 <> i:311
binder 14794:14796 <> rho:312
R14834:14851 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14881:14898 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14899:14905 VST.veric.Cop2 <> tc_val' def
R14910:14916 VST.veric.mpred <> eval_id def
R14920:14922 VST.floyd.client_lemmas <> rho:312 var
R14918:14918 VST.floyd.client_lemmas <> i:311 var
R14907:14907 VST.floyd.client_lemmas <> t:310 var
R14872:14874 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14852:14852 compcert.lib.Maps <> :::x_'!'_x not
R14869:14870 compcert.lib.Maps <> :::x_'!'_x not
R14871:14871 VST.floyd.client_lemmas <> i:311 var
R14853:14862 VST.veric.seplog <> temp_types def
R14864:14868 VST.floyd.client_lemmas <> Delta:309 var
R14875:14878 Coq.Init.Datatypes <> Some constr
R14880:14880 VST.floyd.client_lemmas <> t:310 var
R14814:14823 VST.veric.SeparationLogic <> tc_environ def
R14831:14833 VST.floyd.client_lemmas <> rho:312 var
R14825:14829 VST.floyd.client_lemmas <> Delta:309 var
R14948:14957 VST.veric.SeparationLogic <> tc_environ def
R15041:15047 VST.veric.mpred <> eval_id def
prf 15099:15106 <> is_int_e
binder 15117:15117 <> v:313
binder 15119:15119 <> i:314
binder 15121:15121 <> s:315
R15137:15140 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15141:15147 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R15149:15150 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 15148:15148 <> n:316
R15161:15164 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R15152:15154 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15151:15151 VST.floyd.client_lemmas <> v:313 var
R15155:15158 compcert.common.Values <> Vint constr
R15160:15160 VST.floyd.client_lemmas <> n:316 var
R15165:15170 VST.veric.Cop2 <> is_int def
R15176:15176 VST.floyd.client_lemmas <> v:313 var
R15174:15174 VST.floyd.client_lemmas <> s:315 var
R15172:15172 VST.floyd.client_lemmas <> i:314 var
R15125:15130 VST.veric.Cop2 <> is_int def
R15136:15136 VST.floyd.client_lemmas <> v:313 var
R15134:15134 VST.floyd.client_lemmas <> s:315 var
R15132:15132 VST.floyd.client_lemmas <> i:314 var
def 15253:15256 <> name
R15263:15267 compcert.common.AST <> ident def
binder 15259:15260 <> id:317
R15273:15276 Coq.Init.Logic <> True ind
R15341:15344 VST.floyd.client_lemmas <> name def
R15359:15374 Coq.Init.Logic <> I constr
def 15389:15403 <> reflect_temps_f
R15411:15417 VST.veric.mpred <> environ ind
binder 15406:15408 <> rho:318
binder 15421:15421 <> b:319
R15434:15438 compcert.common.AST <> ident def
binder 15431:15431 <> i:320
R15445:15448 compcert.cfrontend.Ctypes <> type ind
binder 15442:15442 <> t:321
R15488:15491 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R15463:15469 VST.veric.Cop2 <> tc_val' def
R15474:15480 VST.veric.mpred <> eval_id def
R15484:15486 VST.floyd.client_lemmas <> rho:318 var
R15482:15482 VST.floyd.client_lemmas <> i:320 var
R15471:15471 VST.floyd.client_lemmas <> t:321 var
R15492:15492 VST.floyd.client_lemmas <> b:319 var
def 15507:15519 <> reflect_temps
R15529:15537 VST.veric.seplog <> tycontext ind
binder 15522:15526 <> Delta:322
R15546:15552 VST.veric.mpred <> environ ind
binder 15541:15543 <> rho:323
R15569:15578 compcert.lib.Maps PTree fold def
R15621:15624 Coq.Init.Logic <> True ind
R15603:15612 VST.veric.seplog <> temp_types def
R15614:15618 VST.floyd.client_lemmas <> Delta:322 var
R15581:15595 VST.floyd.client_lemmas <> reflect_temps_f def
R15597:15599 VST.floyd.client_lemmas <> rho:323 var
prf 15634:15652 <> reflect_temps_valid
binder 15664:15668 <> Delta:324
binder 15670:15672 <> rho:325
R15699:15702 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15703:15715 VST.floyd.client_lemmas <> reflect_temps def
R15723:15725 VST.floyd.client_lemmas <> rho:325 var
R15717:15721 VST.floyd.client_lemmas <> Delta:324 var
R15679:15688 VST.veric.SeparationLogic <> tc_environ def
R15696:15698 VST.floyd.client_lemmas <> rho:325 var
R15690:15694 VST.floyd.client_lemmas <> Delta:324 var
R15750:15762 VST.floyd.client_lemmas <> reflect_temps def
R15773:15787 compcert.lib.Maps PTree fold_spec thm
R15773:15787 compcert.lib.Maps PTree fold_spec thm
R15773:15787 compcert.lib.Maps PTree fold_spec thm
R15801:15814 compcert.lib.Maps PTree elements def
R15817:15826 VST.veric.seplog <> temp_types def
R15801:15814 compcert.lib.Maps PTree elements def
R15817:15826 VST.veric.seplog <> temp_types def
binder 15858:15858 <> i:326
binder 15860:15860 <> v:327
R15874:15877 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15900:15902 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15878:15878 compcert.lib.Maps <> :::x_'!'_x not
R15895:15898 compcert.lib.Maps <> :::x_'!'_x not
R15899:15899 VST.floyd.client_lemmas <> i:326 var
R15879:15888 VST.veric.seplog <> temp_types def
R15903:15906 Coq.Init.Datatypes <> Some constr
R15908:15908 VST.floyd.client_lemmas <> v:327 var
R15863:15864 Coq.Lists.List <> In def
R15866:15866 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15868:15868 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15870:15870 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15867:15867 VST.floyd.client_lemmas <> i:326 var
R15869:15869 VST.floyd.client_lemmas <> v:327 var
binder 15858:15858 <> i:328
binder 15860:15860 <> v:329
R15874:15877 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15900:15902 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15878:15878 compcert.lib.Maps <> :::x_'!'_x not
R15895:15898 compcert.lib.Maps <> :::x_'!'_x not
R15899:15899 VST.floyd.client_lemmas <> i:328 var
R15879:15888 VST.veric.seplog <> temp_types def
R15903:15906 Coq.Init.Datatypes <> Some constr
R15908:15908 VST.floyd.client_lemmas <> v:329 var
R15863:15864 Coq.Lists.List <> In def
R15866:15866 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15868:15868 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15870:15870 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15867:15867 VST.floyd.client_lemmas <> i:328 var
R15869:15869 VST.floyd.client_lemmas <> v:329 var
R15937:15959 compcert.lib.Maps PTree elements_complete thm
R15937:15959 compcert.lib.Maps PTree elements_complete thm
binder 15996:15996 <> b:330
R16006:16009 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16010:16018 Coq.Lists.List <> fold_left def
R16108:16108 VST.floyd.client_lemmas <> b:330 var
binder 16028:16028 <> a:331
R16051:16053 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R16043:16050 Coq.Numbers.BinNums <> positive ind
R16054:16057 compcert.cfrontend.Ctypes <> type ind
binder 16039:16039 <> p:332
R16066:16080 VST.floyd.client_lemmas <> reflect_temps_f def
R16097:16099 Coq.Init.Datatypes <> snd def
R16101:16101 VST.floyd.client_lemmas <> p:332 var
R16089:16091 Coq.Init.Datatypes <> fst def
R16093:16093 VST.floyd.client_lemmas <> p:332 var
R16086:16086 VST.floyd.client_lemmas <> a:331 var
R16005:16005 VST.floyd.client_lemmas <> b:330 var
binder 15996:15996 <> b:333
R16006:16009 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16010:16018 Coq.Lists.List <> fold_left def
R16108:16108 VST.floyd.client_lemmas <> b:333 var
binder 16028:16028 <> a:334
R16051:16053 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R16043:16050 Coq.Numbers.BinNums <> positive ind
R16054:16057 compcert.cfrontend.Ctypes <> type ind
binder 16039:16039 <> p:335
R16066:16080 VST.floyd.client_lemmas <> reflect_temps_f def
R16097:16099 Coq.Init.Datatypes <> snd def
R16101:16101 VST.floyd.client_lemmas <> p:335 var
R16089:16091 Coq.Init.Datatypes <> fst def
R16093:16093 VST.floyd.client_lemmas <> p:335 var
R16086:16086 VST.floyd.client_lemmas <> a:334 var
R16005:16005 VST.floyd.client_lemmas <> b:333 var
R16178:16192 VST.floyd.client_lemmas <> reflect_temps_f def
R16272:16284 VST.floyd.client_lemmas <> tc_eval'_id_i thm
R16272:16284 VST.floyd.client_lemmas <> tc_eval'_id_i thm
def 16333:16342 <> abbreviate
binder 16345:16345 <> A:336
R16356:16356 VST.floyd.client_lemmas <> A:336 var
binder 16354:16354 <> x:337
R16362:16362 VST.floyd.client_lemmas <> x:337 var
R16375:16384 VST.floyd.client_lemmas <> abbreviate def
R16375:16384 VST.floyd.client_lemmas <> abbreviate def
R16444:16453 VST.floyd.client_lemmas <> abbreviate def
R16455:16463 VST.veric.seplog <> tycontext ind
R16444:16453 VST.floyd.client_lemmas <> abbreviate def
R16455:16463 VST.veric.seplog <> tycontext ind
R16511:16518 VST.veric.seplog <> ret_type def
R16511:16518 VST.veric.seplog <> ret_type def
R16553:16560 VST.veric.seplog <> ret_type def
R16609:16616 VST.veric.seplog <> ret_type def
R16609:16616 VST.veric.seplog <> ret_type def
R16709:16718 VST.floyd.client_lemmas <> abbreviate def
R16721:16727 compcert.lib.Maps PTree t def
R16729:16735 VST.veric.mpred <> funspec ind
R16709:16718 VST.floyd.client_lemmas <> abbreviate def
R16721:16727 compcert.lib.Maps PTree t def
R16729:16735 VST.veric.mpred <> funspec ind
R16866:16875 VST.floyd.client_lemmas <> abbreviate def
R16878:16884 compcert.lib.Maps PTree t def
R16886:16892 VST.veric.mpred <> funspec ind
R16866:16875 VST.floyd.client_lemmas <> abbreviate def
R16878:16884 compcert.lib.Maps PTree t def
R16886:16892 VST.veric.mpred <> funspec ind
prf 16949:16960 <> is_true_negb
binder 16971:16971 <> a:338
R16990:16993 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16995:16995 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16994:16994 VST.floyd.client_lemmas <> a:338 var
R16996:17000 Coq.Init.Datatypes <> false constr
R16974:16980 VST.veric.val_lemmas <> is_true def
R16983:16986 Coq.Init.Datatypes <> negb def
R16988:16988 VST.floyd.client_lemmas <> a:338 var
prf 17059:17076 <> sem_cast_pointer2'
R17093:17095 compcert.common.Values <> val ind
binder 17089:17089 <> v:339
R17106:17109 compcert.cfrontend.Ctypes <> type ind
binder 17099:17100 <> t1:340
binder 17102:17103 <> t2:341
R17322:17327 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17535:17540 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17561:17564 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17593:17595 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17565:17573 VST.veric.val_lemmas <> force_val def
R17576:17583 VST.veric.Clight_Cop2 <> sem_cast def
R17591:17591 VST.floyd.client_lemmas <> v:339 var
R17588:17589 VST.floyd.client_lemmas <> t2:341 var
R17585:17586 VST.floyd.client_lemmas <> t1:340 var
R17596:17596 VST.floyd.client_lemmas <> v:339 var
R17541:17558 VST.veric.val_lemmas <> is_pointer_or_null def
R17560:17560 VST.floyd.client_lemmas <> v:339 var
R17334:17335 VST.floyd.client_lemmas <> t2:341 var
R17346:17353 compcert.cfrontend.Ctypes <> Tpointer constr
R17362:17368 VST.veric.val_lemmas <> is_true def
R17371:17374 Coq.Init.Datatypes <> negb def
R17377:17384 VST.veric.Cop2 <> eqb_type def
R17389:17403 VST.veric.Cop2 <> int_or_ptr_type def
R17386:17387 VST.floyd.client_lemmas <> t2:341 var
R17411:17414 compcert.cfrontend.Ctypes <> Tint constr
R17416:17418 compcert.cfrontend.Ctypes <> I32 constr
R17430:17440 compcert.x86_32.Archi <> ptr64 def
R17458:17461 Coq.Init.Logic <> True ind
R17447:17451 Coq.Init.Logic <> False ind
R17468:17472 compcert.cfrontend.Ctypes <> Tlong constr
R17484:17494 compcert.x86_32.Archi <> ptr64 def
R17511:17515 Coq.Init.Logic <> False ind
R17501:17504 Coq.Init.Logic <> True ind
R17526:17530 Coq.Init.Logic <> False ind
R17121:17122 VST.floyd.client_lemmas <> t1:340 var
R17133:17140 compcert.cfrontend.Ctypes <> Tpointer constr
R17149:17155 VST.veric.val_lemmas <> is_true def
R17158:17161 Coq.Init.Datatypes <> negb def
R17164:17171 VST.veric.Cop2 <> eqb_type def
R17176:17190 VST.veric.Cop2 <> int_or_ptr_type def
R17173:17174 VST.floyd.client_lemmas <> t1:340 var
R17198:17201 compcert.cfrontend.Ctypes <> Tint constr
R17203:17205 compcert.cfrontend.Ctypes <> I32 constr
R17217:17227 compcert.x86_32.Archi <> ptr64 def
R17245:17248 Coq.Init.Logic <> True ind
R17234:17238 Coq.Init.Logic <> False ind
R17255:17259 compcert.cfrontend.Ctypes <> Tlong constr
R17271:17281 compcert.x86_32.Archi <> ptr64 def
R17298:17302 Coq.Init.Logic <> False ind
R17288:17291 Coq.Init.Logic <> True ind
R17313:17317 Coq.Init.Logic <> False ind
R17621:17628 VST.veric.Clight_Cop2 <> sem_cast def
R17631:17643 VST.veric.Clight_Cop2 <> classify_cast def
R17646:17654 VST.veric.val_lemmas <> force_val def
R17673:17683 compcert.x86_32.Archi <> ptr64 def
R17852:17863 VST.floyd.client_lemmas <> is_true_negb thm
R17884:17895 VST.floyd.client_lemmas <> is_true_negb thm
R17673:17683 compcert.x86_32.Archi <> ptr64 def
R17852:17863 VST.floyd.client_lemmas <> is_true_negb thm
R17852:17863 VST.floyd.client_lemmas <> is_true_negb thm
R17884:17895 VST.floyd.client_lemmas <> is_true_negb thm
R17884:17895 VST.floyd.client_lemmas <> is_true_negb thm
R17884:17895 VST.floyd.client_lemmas <> is_true_negb thm
R17884:17895 VST.floyd.client_lemmas <> is_true_negb thm
R17949:17966 VST.floyd.client_lemmas <> sem_cast_pointer2' thm
R17985:18000 Coq.Init.Logic <> I constr
prf 18047:18063 <> sem_cast_pointer2
binder 18075:18075 <> v:344
binder 18077:18078 <> t1:345
binder 18080:18081 <> t2:346
binder 18083:18084 <> t3:347
binder 18086:18088 <> t1':348
binder 18090:18092 <> t2':349
R18122:18128 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18153:18159 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18189:18195 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18226:18228 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18196:18204 VST.veric.val_lemmas <> force_val def
R18207:18214 VST.veric.Clight_Cop2 <> sem_cast def
R18224:18224 VST.floyd.client_lemmas <> v:344 var
R18220:18222 VST.floyd.client_lemmas <> t2':349 var
R18216:18218 VST.floyd.client_lemmas <> t1':348 var
R18229:18229 VST.floyd.client_lemmas <> v:344 var
R18160:18165 VST.veric.Cop2 <> tc_val def
R18188:18188 VST.floyd.client_lemmas <> v:344 var
R18168:18175 compcert.cfrontend.Ctypes <> Tpointer constr
R18180:18185 compcert.cfrontend.Ctypes <> noattr def
R18177:18178 VST.floyd.client_lemmas <> t3:347 var
R18132:18134 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18129:18131 VST.floyd.client_lemmas <> t2':349 var
R18135:18142 compcert.cfrontend.Ctypes <> Tpointer constr
R18147:18152 compcert.cfrontend.Ctypes <> noattr def
R18144:18145 VST.floyd.client_lemmas <> t2:346 var
R18101:18103 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18098:18100 VST.floyd.client_lemmas <> t1':348 var
R18104:18111 compcert.cfrontend.Ctypes <> Tpointer constr
R18116:18121 compcert.cfrontend.Ctypes <> noattr def
R18113:18114 VST.floyd.client_lemmas <> t1:345 var
R18286:18297 Coq.Bool.Bool <> andb_false_r thm
R18286:18297 Coq.Bool.Bool <> andb_false_r thm
R18286:18297 Coq.Bool.Bool <> andb_false_r thm
R18313:18320 VST.veric.Clight_Cop2 <> sem_cast def
R18323:18335 VST.veric.Clight_Cop2 <> classify_cast def
prf 18370:18391 <> force_eval_var_int_ptr
R18408:18416 VST.veric.mpred <> compspecs class
binder 18404:18405 <> cs:350
binder 18420:18424 <> Delta:351
binder 18426:18428 <> rho:352
binder 18430:18430 <> i:353
binder 18432:18432 <> t:354
R18455:18458 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18489:18501 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R18459:18467 VST.veric.SeparationLogic <> tc_lvalue def
R18486:18488 VST.floyd.client_lemmas <> rho:352 var
R18476:18479 compcert.cfrontend.Clight <> Evar constr
R18483:18483 VST.floyd.client_lemmas <> t:354 var
R18481:18481 VST.floyd.client_lemmas <> i:353 var
R18469:18473 VST.floyd.client_lemmas <> Delta:351 var
R18502:18505 VST.msl.seplog <> ::logic:'!!'_x not
R18717:18717 VST.msl.seplog <> ::logic:'!!'_x not
R18698:18700 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18506:18514 VST.veric.val_lemmas <> force_val def
R18534:18541 VST.veric.expr <> eval_var def
R18547:18549 VST.floyd.client_lemmas <> rho:352 var
R18545:18545 VST.floyd.client_lemmas <> t:354 var
R18543:18543 VST.floyd.client_lemmas <> i:353 var
R18623:18626 compcert.common.Values <> Vptr constr
R18635:18638 Coq.Init.Datatypes <> Some constr
R18641:18648 VST.veric.expr <> eval_var def
R18654:18656 VST.floyd.client_lemmas <> rho:352 var
R18652:18652 VST.floyd.client_lemmas <> t:354 var
R18650:18650 VST.floyd.client_lemmas <> i:353 var
R18678:18681 Coq.Init.Datatypes <> None constr
R18701:18708 VST.veric.expr <> eval_var def
R18714:18716 VST.floyd.client_lemmas <> rho:352 var
R18712:18712 VST.floyd.client_lemmas <> t:354 var
R18710:18710 VST.floyd.client_lemmas <> i:353 var
R18435:18444 VST.veric.SeparationLogic <> tc_environ def
R18452:18454 VST.floyd.client_lemmas <> rho:352 var
R18446:18450 VST.floyd.client_lemmas <> Delta:351 var
R18742:18754 VST.msl.seplog <> derives_trans meth
R18742:18754 VST.msl.seplog <> derives_trans meth
R18763:18784 VST.veric.SeparationLogic <> typecheck_lvalue_sound thm
R18763:18784 VST.veric.SeparationLogic <> typecheck_lvalue_sound thm
R18818:18825 VST.veric.expr <> eval_var def
R18843:18849 VST.veric.mpred Map get def
R18852:18856 VST.veric.mpred <> ve_of def
R18843:18849 VST.veric.mpred Map get def
R18852:18856 VST.veric.mpred <> ve_of def
R18890:18897 VST.veric.Cop2 <> eqb_type def
R18890:18897 VST.veric.Cop2 <> eqb_type def
R18947:18953 VST.veric.mpred Map get def
R18956:18960 VST.veric.mpred <> ge_of def
R18947:18953 VST.veric.mpred Map get def
R18956:18960 VST.veric.mpred <> ge_of def
prf 19004:19035 <> is_pointer_or_null_force_int_ptr
binder 19048:19048 <> v:355
R19071:19074 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19075:19075 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19282:19285 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19076:19084 VST.veric.val_lemmas <> force_val def
R19100:19100 VST.floyd.client_lemmas <> v:355 var
R19117:19120 compcert.common.Values <> Vint constr
R19130:19140 compcert.x86_32.Archi <> ptr64 def
R19157:19160 Coq.Init.Datatypes <> Some constr
R19162:19162 VST.floyd.client_lemmas <> v:355 var
R19147:19150 Coq.Init.Datatypes <> None constr
R19174:19178 compcert.common.Values <> Vlong constr
R19188:19198 compcert.x86_32.Archi <> ptr64 def
R19217:19220 Coq.Init.Datatypes <> None constr
R19205:19208 Coq.Init.Datatypes <> Some constr
R19210:19210 VST.floyd.client_lemmas <> v:355 var
R19232:19235 compcert.common.Values <> Vptr constr
R19244:19247 Coq.Init.Datatypes <> Some constr
R19249:19249 VST.floyd.client_lemmas <> v:355 var
R19266:19269 Coq.Init.Datatypes <> None constr
R19286:19286 VST.floyd.client_lemmas <> v:355 var
R19051:19068 VST.veric.val_lemmas <> is_pointer_or_null def
R19070:19070 VST.floyd.client_lemmas <> v:355 var
R19354:19385 VST.floyd.client_lemmas <> is_pointer_or_null_force_int_ptr thm
prf 19421:19444 <> is_pointer_force_int_ptr
binder 19457:19457 <> v:357
R19467:19470 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19471:19471 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19678:19681 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19472:19480 VST.veric.val_lemmas <> force_val def
R19496:19496 VST.floyd.client_lemmas <> v:357 var
R19513:19516 compcert.common.Values <> Vint constr
R19526:19536 compcert.x86_32.Archi <> ptr64 def
R19553:19556 Coq.Init.Datatypes <> Some constr
R19558:19558 VST.floyd.client_lemmas <> v:357 var
R19543:19546 Coq.Init.Datatypes <> None constr
R19570:19574 compcert.common.Values <> Vlong constr
R19584:19594 compcert.x86_32.Archi <> ptr64 def
R19613:19616 Coq.Init.Datatypes <> None constr
R19601:19604 Coq.Init.Datatypes <> Some constr
R19606:19606 VST.floyd.client_lemmas <> v:357 var
R19628:19631 compcert.common.Values <> Vptr constr
R19640:19643 Coq.Init.Datatypes <> Some constr
R19645:19645 VST.floyd.client_lemmas <> v:357 var
R19662:19665 Coq.Init.Datatypes <> None constr
R19682:19682 VST.floyd.client_lemmas <> v:357 var
R19460:19464 VST.veric.val_lemmas <> isptr def
R19466:19466 VST.floyd.client_lemmas <> v:357 var
R19750:19773 VST.floyd.client_lemmas <> is_pointer_force_int_ptr thm
prf 19809:19832 <> is_pointer_or_null_match
binder 19846:19846 <> v:359
R19869:19880 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19881:19881 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20071:20074 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19888:19888 VST.floyd.client_lemmas <> v:359 var
R19905:19908 compcert.common.Values <> Vint constr
R19918:19928 compcert.x86_32.Archi <> ptr64 def
R19945:19948 Coq.Init.Datatypes <> Some constr
R19950:19950 VST.floyd.client_lemmas <> v:359 var
R19935:19938 Coq.Init.Datatypes <> None constr
R19962:19966 compcert.common.Values <> Vlong constr
R19976:19986 compcert.x86_32.Archi <> ptr64 def
R20005:20008 Coq.Init.Datatypes <> None constr
R19993:19996 Coq.Init.Datatypes <> Some constr
R19998:19998 VST.floyd.client_lemmas <> v:359 var
R20020:20023 compcert.common.Values <> Vptr constr
R20032:20035 Coq.Init.Datatypes <> Some constr
R20037:20037 VST.floyd.client_lemmas <> v:359 var
R20054:20057 Coq.Init.Datatypes <> None constr
R20075:20078 Coq.Init.Datatypes <> Some constr
R20080:20080 VST.floyd.client_lemmas <> v:359 var
R19849:19866 VST.veric.val_lemmas <> is_pointer_or_null def
R19868:19868 VST.floyd.client_lemmas <> v:359 var
R20148:20171 VST.floyd.client_lemmas <> is_pointer_or_null_match thm
prf 20206:20230 <> is_pointer_force_int_ptr2
binder 20243:20243 <> v:361
R20253:20264 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20454:20456 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20271:20271 VST.floyd.client_lemmas <> v:361 var
R20288:20291 compcert.common.Values <> Vint constr
R20301:20311 compcert.x86_32.Archi <> ptr64 def
R20328:20331 Coq.Init.Datatypes <> Some constr
R20333:20333 VST.floyd.client_lemmas <> v:361 var
R20318:20321 Coq.Init.Datatypes <> None constr
R20345:20349 compcert.common.Values <> Vlong constr
R20359:20369 compcert.x86_32.Archi <> ptr64 def
R20388:20391 Coq.Init.Datatypes <> None constr
R20376:20379 Coq.Init.Datatypes <> Some constr
R20381:20381 VST.floyd.client_lemmas <> v:361 var
R20403:20406 compcert.common.Values <> Vptr constr
R20415:20418 Coq.Init.Datatypes <> Some constr
R20420:20420 VST.floyd.client_lemmas <> v:361 var
R20437:20440 Coq.Init.Datatypes <> None constr
R20457:20460 Coq.Init.Datatypes <> Some constr
R20462:20462 VST.floyd.client_lemmas <> v:361 var
R20246:20250 VST.veric.val_lemmas <> isptr def
R20252:20252 VST.floyd.client_lemmas <> v:361 var
R20530:20554 VST.floyd.client_lemmas <> is_pointer_force_int_ptr2 thm
prf 20589:20621 <> is_pointer_or_null_force_int_ptr2
binder 20634:20634 <> v:363
R20777:20780 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20781:20781 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20901:20904 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20782:20790 VST.veric.val_lemmas <> force_val def
R20806:20806 VST.floyd.client_lemmas <> v:363 var
R20823:20826 compcert.common.Values <> Vint constr
R20833:20836 Coq.Init.Datatypes <> Some constr
R20838:20838 VST.floyd.client_lemmas <> v:363 var
R20850:20853 compcert.common.Values <> Vptr constr
R20862:20865 Coq.Init.Datatypes <> Some constr
R20867:20867 VST.floyd.client_lemmas <> v:363 var
R20884:20887 Coq.Init.Datatypes <> None constr
R20905:20905 VST.floyd.client_lemmas <> v:363 var
R20637:20654 VST.veric.val_lemmas <> is_pointer_or_null def
R20657:20665 VST.veric.val_lemmas <> force_val def
R20681:20681 VST.floyd.client_lemmas <> v:363 var
R20698:20701 compcert.common.Values <> Vint constr
R20708:20711 Coq.Init.Datatypes <> Some constr
R20713:20713 VST.floyd.client_lemmas <> v:363 var
R20725:20728 compcert.common.Values <> Vptr constr
R20737:20740 Coq.Init.Datatypes <> Some constr
R20742:20742 VST.floyd.client_lemmas <> v:363 var
R20759:20762 Coq.Init.Datatypes <> None constr
R20974:21006 VST.floyd.client_lemmas <> is_pointer_or_null_force_int_ptr2 thm
prf 21041:21051 <> isptr_match
binder 21062:21063 <> w0:366
R21393:21395 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21066:21083 VST.veric.val_lemmas <> is_pointer_or_null def
R21117:21118 VST.floyd.client_lemmas <> w0:366 var
R21137:21140 compcert.common.Values <> Vint constr
R21150:21160 compcert.x86_32.Archi <> ptr64 def
R21177:21180 Coq.Init.Datatypes <> Some constr
R21182:21183 VST.floyd.client_lemmas <> w0:366 var
R21167:21170 Coq.Init.Datatypes <> None constr
R21197:21201 compcert.common.Values <> Vlong constr
R21211:21221 compcert.x86_32.Archi <> ptr64 def
R21241:21244 Coq.Init.Datatypes <> None constr
R21228:21231 Coq.Init.Datatypes <> Some constr
R21233:21234 VST.floyd.client_lemmas <> w0:366 var
R21258:21261 compcert.common.Values <> Vptr constr
R21270:21273 Coq.Init.Datatypes <> Some constr
R21275:21276 VST.floyd.client_lemmas <> w0:366 var
R21296:21299 Coq.Init.Datatypes <> None constr
R21341:21344 Coq.Init.Datatypes <> Some constr
R21366:21369 Coq.Init.Datatypes <> None constr
R21374:21379 compcert.common.Values <> Vundef constr
R21396:21413 VST.veric.val_lemmas <> is_pointer_or_null def
R21415:21416 VST.floyd.client_lemmas <> w0:366 var
R21434:21451 VST.veric.val_lemmas <> is_pointer_or_null def
R21463:21473 compcert.x86_32.Archi <> ptr64 def
R21463:21473 compcert.x86_32.Archi <> ptr64 def
R21521:21531 VST.floyd.client_lemmas <> isptr_match thm
prf 21549:21572 <> eval_cast_neutral_tc_val
binder 21585:21585 <> v:368
R21588:21588 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21637:21648 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21667:21669 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21649:21664 VST.veric.Clight_Cop2 <> sem_cast_pointer def
R21666:21666 VST.floyd.client_lemmas <> v:368 var
R21670:21673 Coq.Init.Datatypes <> Some constr
R21675:21675 VST.floyd.client_lemmas <> v:368 var
R21589:21595 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R21597:21598 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 21596:21596 <> t:369
R21609:21612 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21599:21604 VST.veric.Cop2 <> tc_val def
R21608:21608 VST.floyd.client_lemmas <> v:368 var
R21606:21606 VST.floyd.client_lemmas <> t:369 var
R21630:21632 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21613:21627 VST.veric.expr <> is_pointer_type def
R21629:21629 VST.floyd.client_lemmas <> t:369 var
R21633:21636 Coq.Init.Datatypes <> true constr
R21735:21749 VST.veric.expr <> is_pointer_type def
R21765:21780 VST.veric.Clight_Cop2 <> sem_cast_pointer def
R21793:21800 VST.veric.Cop2 <> eqb_type def
R21804:21818 VST.veric.Cop2 <> int_or_ptr_type def
R21793:21800 VST.veric.Cop2 <> eqb_type def
R21804:21818 VST.veric.Cop2 <> int_or_ptr_type def
R21883:21906 VST.floyd.client_lemmas <> eval_cast_neutral_tc_val thm
prf 21943:21978 <> eval_cast_neutral_is_pointer_or_null
binder 21991:21991 <> v:370
R22014:22017 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22036:22038 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22018:22033 VST.veric.Clight_Cop2 <> sem_cast_pointer def
R22035:22035 VST.floyd.client_lemmas <> v:370 var
R22039:22042 Coq.Init.Datatypes <> Some constr
R22044:22044 VST.floyd.client_lemmas <> v:370 var
R21994:22011 VST.veric.val_lemmas <> is_pointer_or_null def
R22013:22013 VST.floyd.client_lemmas <> v:370 var
R22112:22147 VST.floyd.client_lemmas <> eval_cast_neutral_is_pointer_or_null thm
prf 22181:22216 <> is_pointer_or_null_eval_cast_neutral
binder 22228:22228 <> v:371
R22282:22284 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22231:22248 VST.veric.val_lemmas <> is_pointer_or_null def
R22251:22259 VST.veric.val_lemmas <> force_val def
R22262:22277 VST.veric.Clight_Cop2 <> sem_cast_pointer def
R22279:22279 VST.floyd.client_lemmas <> v:371 var
R22285:22302 VST.veric.val_lemmas <> is_pointer_or_null def
R22304:22304 VST.floyd.client_lemmas <> v:371 var
R22357:22392 VST.floyd.client_lemmas <> is_pointer_or_null_eval_cast_neutral thm
prf 22409:22431 <> eval_cast_neutral_isptr
binder 22444:22444 <> v:372
R22454:22457 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22476:22478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22458:22473 VST.veric.Clight_Cop2 <> sem_cast_pointer def
R22475:22475 VST.floyd.client_lemmas <> v:372 var
R22479:22482 Coq.Init.Datatypes <> Some constr
R22484:22484 VST.floyd.client_lemmas <> v:372 var
R22447:22451 VST.veric.val_lemmas <> isptr def
R22453:22453 VST.floyd.client_lemmas <> v:372 var
R22552:22574 VST.floyd.client_lemmas <> eval_cast_neutral_isptr thm
R22612:22619 VST.veric.seplog <> ret_type def
R22642:22653 Coq.Init.Datatypes <> id def
R22642:22653 Coq.Init.Datatypes <> id def
prf 22672:22683 <> raise_sepcon
R22707:22710 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22711:22715 VST.veric.mpred <> mpred def
R22700:22706 VST.veric.mpred <> environ ind
binder 22694:22694 <> A:373
binder 22696:22696 <> B:374
R22723:22723 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22757:22761 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22767:22767 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22733:22739 VST.veric.mpred <> environ ind
binder 22728:22730 <> rho:375
R22749:22751 VST.msl.seplog <> ::logic:x_'*'_x not
R22744:22744 VST.floyd.client_lemmas <> A:373 var
R22746:22748 VST.floyd.client_lemmas <> rho:375 var
R22752:22752 VST.floyd.client_lemmas <> B:374 var
R22754:22756 VST.floyd.client_lemmas <> rho:375 var
R22763:22765 VST.msl.seplog <> ::logic:x_'*'_x not
R22762:22762 VST.floyd.client_lemmas <> A:373 var
R22766:22766 VST.floyd.client_lemmas <> B:374 var
R22808:22819 VST.floyd.client_lemmas <> raise_sepcon thm
prf 22837:22854 <> lift1_lift1_retval
binder 22857:22857 <> A:376
binder 22868:22868 <> i:377
R22877:22880 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22881:22881 VST.floyd.client_lemmas <> A:376 var
R22874:22876 compcert.common.Values <> val ind
binder 22871:22871 <> P:378
R22923:22925 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22885:22889 VST.veric.mpred <> lift1 def
R22909:22919 VST.veric.SeparationLogic <> get_result1 def
R22921:22921 VST.floyd.client_lemmas <> i:377 var
R22892:22896 VST.veric.mpred <> lift1 def
R22900:22905 VST.floyd.client_lemmas <> retval def
R22898:22898 VST.floyd.client_lemmas <> P:378 var
R22926:22930 VST.veric.mpred <> lift1 def
R22935:22941 VST.veric.mpred <> eval_id def
R22943:22943 VST.floyd.client_lemmas <> i:377 var
R22932:22932 VST.floyd.client_lemmas <> P:378 var
R22992:22996 VST.veric.mpred <> lift1 def
prf 23032:23047 <> lift_lift_retval
R23063:23067 compcert.common.AST <> ident def
binder 23060:23060 <> i:379
binder 23070:23070 <> P:380
R23191:23193 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23077:23081 VST.veric.lift <> liftx def
R23177:23187 VST.veric.SeparationLogic <> get_result1 def
R23189:23189 VST.floyd.client_lemmas <> i:379 var
R23127:23131 VST.veric.lift <> liftx def
R23168:23173 VST.floyd.client_lemmas <> retval def
R23166:23166 VST.floyd.client_lemmas <> P:380 var
R23134:23139 VST.veric.lift <> Tarrow canonstruc
R23146:23156 VST.veric.mpred <> LiftEnviron canonstruc
R23158:23162 VST.veric.mpred <> mpred def
R23141:23143 compcert.common.Values <> val ind
R23084:23089 VST.veric.lift <> Tarrow canonstruc
R23100:23110 VST.veric.mpred <> LiftEnviron canonstruc
R23112:23116 VST.veric.mpred <> mpred def
R23091:23097 VST.veric.mpred <> environ ind
R23194:23194 VST.veric.lift LiftNotation :::'`'_x not
R23196:23207 VST.veric.lift LiftNotation :::'`'_x not
R23195:23195 VST.floyd.client_lemmas <> P:380 var
R23198:23204 VST.veric.mpred <> eval_id def
R23206:23206 VST.floyd.client_lemmas <> i:379 var
R23249:23264 VST.floyd.client_lemmas <> lift_lift_retval thm
prf 23281:23291 <> lift_lift_x
binder 23336:23336 <> t:381
binder 23338:23339 <> t':382
binder 23341:23341 <> P:383
R23347:23347 VST.floyd.client_lemmas <> t:381 var
binder 23344:23344 <> v:384
R23353:23353 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23417:23423 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23453:23453 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23355:23359 VST.veric.lift <> liftx def
R23393:23397 VST.veric.lift <> liftx def
R23415:23415 VST.floyd.client_lemmas <> v:384 var
R23400:23410 VST.veric.mpred <> LiftEnviron canonstruc
R23412:23412 VST.floyd.client_lemmas <> t:381 var
R23389:23389 VST.floyd.client_lemmas <> P:383 var
R23362:23367 VST.veric.lift <> Tarrow canonstruc
R23372:23382 VST.veric.mpred <> LiftEnviron canonstruc
R23384:23385 VST.floyd.client_lemmas <> t':382 var
R23369:23369 VST.floyd.client_lemmas <> t:381 var
R23425:23429 VST.veric.lift <> liftx def
R23449:23449 VST.floyd.client_lemmas <> P:383 var
R23451:23451 VST.floyd.client_lemmas <> v:384 var
R23432:23442 VST.veric.mpred <> LiftEnviron canonstruc
R23444:23445 VST.floyd.client_lemmas <> t':382 var
R23494:23504 VST.floyd.client_lemmas <> lift_lift_x thm
prf 23522:23530 <> lift0_exp
binder 23533:23533 <> A:385
R23540:23545 VST.msl.seplog <> NatDed class
R23547:23547 VST.floyd.client_lemmas <> A:385 var
binder 23536:23537 <> NA:386
binder 23561:23561 <> B:387
R23575:23578 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23579:23579 VST.floyd.client_lemmas <> A:385 var
R23574:23574 VST.floyd.client_lemmas <> B:387 var
binder 23571:23571 <> f:388
R23596:23598 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23583:23587 VST.veric.mpred <> lift0 def
R23590:23592 VST.msl.seplog <> exp meth
R23594:23594 VST.floyd.client_lemmas <> f:388 var
R23599:23601 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R23605:23606 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R23604:23604 VST.floyd.client_lemmas <> B:387 var
binder 23602:23602 <> x:389
R23607:23611 VST.veric.mpred <> lift0 def
R23614:23614 VST.floyd.client_lemmas <> f:388 var
R23616:23616 VST.floyd.client_lemmas <> x:389 var
R23662:23666 VST.veric.mpred <> lift0 def
prf 23721:23730 <> lift0C_exp
binder 23733:23733 <> A:390
R23740:23745 VST.msl.seplog <> NatDed class
R23747:23747 VST.floyd.client_lemmas <> A:390 var
binder 23736:23737 <> NA:391
binder 23761:23761 <> B:392
R23775:23778 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23779:23779 VST.floyd.client_lemmas <> A:390 var
R23774:23774 VST.floyd.client_lemmas <> B:392 var
binder 23771:23771 <> f:393
R23791:23793 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23783:23784 VST.veric.lift LiftNotation :::'`('_x_')' not
R23790:23790 VST.veric.lift LiftNotation :::'`('_x_')' not
R23785:23787 VST.msl.seplog <> exp meth
R23789:23789 VST.floyd.client_lemmas <> f:393 var
R23794:23796 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R23800:23801 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R23799:23799 VST.floyd.client_lemmas <> B:392 var
binder 23797:23797 <> x:394
R23802:23803 VST.veric.lift LiftNotation :::'`('_x_')' not
R23807:23807 VST.veric.lift LiftNotation :::'`('_x_')' not
R23804:23804 VST.floyd.client_lemmas <> f:393 var
R23806:23806 VST.floyd.client_lemmas <> x:394 var
R23917:23925 VST.floyd.client_lemmas <> lift0_exp thm
R23950:23959 VST.floyd.client_lemmas <> lift0C_exp thm
prf 23977:23986 <> lift0_andp
binder 23989:23989 <> A:395
R23996:24001 VST.msl.seplog <> NatDed class
R24003:24003 VST.floyd.client_lemmas <> A:395 var
binder 23992:23993 <> NA:396
binder 24015:24015 <> P:397
binder 24017:24017 <> Q:398
R24045:24047 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24023:24027 VST.veric.mpred <> lift0 def
R24031:24034 VST.msl.seplog <> andp meth
R24043:24043 VST.floyd.client_lemmas <> Q:398 var
R24041:24041 VST.floyd.client_lemmas <> P:397 var
R24038:24039 VST.floyd.client_lemmas <> NA:396 var
R24036:24036 VST.floyd.client_lemmas <> A:395 var
R24048:24051 VST.msl.seplog <> andp meth
R24064:24068 VST.veric.mpred <> lift0 def
R24070:24070 VST.floyd.client_lemmas <> Q:398 var
R24054:24058 VST.veric.mpred <> lift0 def
R24060:24060 VST.floyd.client_lemmas <> P:397 var
prf 24134:24144 <> lift0C_andp
binder 24147:24147 <> A:399
R24154:24159 VST.msl.seplog <> NatDed class
R24161:24161 VST.floyd.client_lemmas <> A:399 var
binder 24150:24151 <> NA:400
R24178:24178 VST.floyd.client_lemmas <> A:399 var
binder 24173:24173 <> P:401
binder 24175:24175 <> Q:402
R24200:24204 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24183:24184 VST.veric.lift LiftNotation :::'`('_x_')' not
R24199:24199 VST.veric.lift LiftNotation :::'`('_x_')' not
R24186:24189 VST.msl.seplog <> andp meth
R24198:24198 VST.floyd.client_lemmas <> Q:402 var
R24196:24196 VST.floyd.client_lemmas <> P:401 var
R24193:24194 VST.floyd.client_lemmas <> NA:400 var
R24191:24191 VST.floyd.client_lemmas <> A:399 var
R24205:24208 VST.msl.seplog <> andp meth
R24216:24216 VST.veric.lift LiftNotation :::'`'_x not
R24217:24217 VST.floyd.client_lemmas <> Q:402 var
R24211:24211 VST.veric.lift LiftNotation :::'`'_x not
R24212:24212 VST.floyd.client_lemmas <> P:401 var
prf 24281:24290 <> lift0_prop
binder 24293:24293 <> A:403
R24300:24305 VST.msl.seplog <> NatDed class
R24307:24307 VST.floyd.client_lemmas <> A:403 var
binder 24296:24297 <> NA:404
binder 24319:24319 <> P:405
R24334:24336 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24322:24326 VST.veric.mpred <> lift0 def
R24329:24331 VST.msl.seplog <> ::logic:'!!'_x not
R24332:24332 VST.floyd.client_lemmas <> P:405 var
R24337:24338 VST.msl.seplog <> ::logic:'!!'_x not
R24339:24339 VST.floyd.client_lemmas <> P:405 var
prf 24402:24412 <> lift0C_prop
binder 24415:24415 <> A:406
R24422:24427 VST.msl.seplog <> NatDed class
R24429:24429 VST.floyd.client_lemmas <> A:406 var
binder 24418:24419 <> NA:407
binder 24441:24441 <> P:408
R24481:24501 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24445:24449 VST.veric.lift <> liftx def
R24469:24472 VST.msl.seplog <> prop meth
R24479:24479 VST.floyd.client_lemmas <> P:408 var
R24476:24477 VST.floyd.client_lemmas <> NA:407 var
R24474:24474 VST.floyd.client_lemmas <> A:406 var
R24452:24462 VST.veric.mpred <> LiftEnviron canonstruc
R24464:24464 VST.floyd.client_lemmas <> A:406 var
R24503:24506 VST.msl.seplog <> prop meth
R24525:24525 VST.floyd.client_lemmas <> P:408 var
R24516:24519 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24520:24520 VST.floyd.client_lemmas <> A:406 var
R24509:24515 VST.veric.mpred <> environ ind
prf 24560:24571 <> lift0_sepcon
binder 24574:24574 <> A:409
R24581:24586 VST.msl.seplog <> NatDed class
R24588:24588 VST.floyd.client_lemmas <> A:409 var
binder 24577:24578 <> NA:410
R24595:24600 VST.msl.seplog <> SepLog class
R24602:24602 VST.floyd.client_lemmas <> A:409 var
binder 24591:24592 <> SA:411
binder 24614:24614 <> P:412
binder 24616:24616 <> Q:413
R24648:24650 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24621:24625 VST.veric.mpred <> lift0 def
R24629:24634 VST.msl.seplog <> sepcon meth
R24646:24646 VST.floyd.client_lemmas <> Q:413 var
R24644:24644 VST.floyd.client_lemmas <> P:412 var
R24641:24642 VST.floyd.client_lemmas <> SA:411 var
R24638:24639 VST.floyd.client_lemmas <> NA:410 var
R24636:24636 VST.floyd.client_lemmas <> A:409 var
R24651:24656 VST.msl.seplog <> sepcon meth
R24669:24673 VST.veric.mpred <> lift0 def
R24675:24675 VST.floyd.client_lemmas <> Q:413 var
R24659:24663 VST.veric.mpred <> lift0 def
R24665:24665 VST.floyd.client_lemmas <> P:412 var
prf 24739:24751 <> lift0C_sepcon
binder 24754:24754 <> A:414
R24761:24766 VST.msl.seplog <> NatDed class
R24768:24768 VST.floyd.client_lemmas <> A:414 var
binder 24757:24758 <> NA:415
R24775:24780 VST.msl.seplog <> SepLog class
R24782:24782 VST.floyd.client_lemmas <> A:414 var
binder 24771:24772 <> SA:416
binder 24794:24794 <> P:417
binder 24796:24796 <> Q:418
binder 24798:24799 <> N2:419
binder 24801:24802 <> S2:420
R24807:24807 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24852:24858 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24947:24947 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24809:24813 VST.veric.lift <> liftx def
R24833:24838 VST.msl.seplog <> sepcon meth
R24850:24850 VST.floyd.client_lemmas <> Q:418 var
R24848:24848 VST.floyd.client_lemmas <> P:417 var
R24845:24846 VST.floyd.client_lemmas <> S2:420 var
R24842:24843 VST.floyd.client_lemmas <> N2:419 var
R24840:24840 VST.floyd.client_lemmas <> A:414 var
R24816:24826 VST.veric.mpred <> LiftEnviron canonstruc
R24828:24828 VST.floyd.client_lemmas <> A:414 var
R24860:24865 VST.msl.seplog <> sepcon meth
R24923:24927 VST.veric.lift <> liftx def
R24945:24945 VST.floyd.client_lemmas <> Q:418 var
R24930:24940 VST.veric.mpred <> LiftEnviron canonstruc
R24942:24942 VST.floyd.client_lemmas <> A:414 var
R24891:24895 VST.veric.lift <> liftx def
R24913:24913 VST.floyd.client_lemmas <> P:417 var
R24898:24908 VST.veric.mpred <> LiftEnviron canonstruc
R24910:24910 VST.floyd.client_lemmas <> A:414 var
R24875:24876 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24877:24877 VST.floyd.client_lemmas <> A:414 var
R24868:24874 VST.veric.mpred <> environ ind
prf 24982:24992 <> lift0_later
binder 24995:24995 <> A:421
R25002:25007 VST.msl.seplog <> NatDed class
R25009:25009 VST.floyd.client_lemmas <> A:421 var
binder 24998:24999 <> NA:422
R25016:25020 VST.msl.seplog <> Indir class
R25022:25022 VST.floyd.client_lemmas <> A:421 var
binder 25012:25013 <> IA:423
R25037:25037 VST.floyd.client_lemmas <> A:421 var
binder 25035:25035 <> P:424
R25067:25069 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25043:25047 VST.veric.mpred <> lift0 def
R25051:25055 VST.msl.seplog <> later meth
R25065:25065 VST.floyd.client_lemmas <> P:424 var
R25062:25063 VST.floyd.client_lemmas <> IA:423 var
R25059:25060 VST.floyd.client_lemmas <> NA:422 var
R25057:25057 VST.floyd.client_lemmas <> A:421 var
R25070:25074 VST.msl.seplog <> later meth
R25078:25082 VST.veric.mpred <> lift0 def
R25084:25084 VST.floyd.client_lemmas <> P:424 var
prf 25128:25139 <> lift0C_later
binder 25142:25142 <> A:425
R25149:25154 VST.msl.seplog <> NatDed class
R25156:25156 VST.floyd.client_lemmas <> A:425 var
binder 25145:25146 <> NA:426
R25163:25167 VST.msl.seplog <> Indir class
R25169:25169 VST.floyd.client_lemmas <> A:425 var
binder 25159:25160 <> IA:427
R25184:25184 VST.floyd.client_lemmas <> A:425 var
binder 25182:25182 <> P:428
R25209:25211 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25190:25191 VST.veric.lift LiftNotation :::'`('_x_')' not
R25208:25208 VST.veric.lift LiftNotation :::'`('_x_')' not
R25193:25197 VST.msl.seplog <> later meth
R25207:25207 VST.floyd.client_lemmas <> P:428 var
R25204:25205 VST.floyd.client_lemmas <> IA:427 var
R25201:25202 VST.floyd.client_lemmas <> NA:426 var
R25199:25199 VST.floyd.client_lemmas <> A:425 var
R25213:25217 VST.msl.seplog <> later meth
R25237:25237 VST.veric.lift LiftNotation :::'`'_x not
R25238:25238 VST.floyd.client_lemmas <> P:428 var
R25227:25228 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25229:25229 VST.floyd.client_lemmas <> A:425 var
R25220:25226 VST.veric.mpred <> environ ind
R25291:25303 VST.floyd.client_lemmas <> lift0C_sepcon thm
R25305:25309 VST.veric.mpred <> mpred def
R25339:25349 VST.floyd.client_lemmas <> lift0C_andp thm
R25351:25355 VST.veric.mpred <> mpred def
R25383:25392 VST.floyd.client_lemmas <> lift0C_exp thm
R25394:25398 VST.veric.mpred <> mpred def
R25426:25437 VST.floyd.client_lemmas <> lift0C_later thm
R25439:25443 VST.veric.mpred <> mpred def
R25473:25483 VST.floyd.client_lemmas <> lift0C_prop thm
R25485:25489 VST.veric.mpred <> mpred def
R25521:25538 VST.floyd.client_lemmas <> lift1_lift1_retval thm
R25545:25553 VST.floyd.client_lemmas <> lift0_exp thm
R25560:25571 VST.floyd.client_lemmas <> lift0_sepcon thm
R25578:25587 VST.floyd.client_lemmas <> lift0_prop thm
R25594:25604 VST.floyd.client_lemmas <> lift0_later thm
prf 25626:25635 <> fst_unfold
binder 25646:25646 <> A:429
binder 25648:25648 <> B:430
R25655:25655 VST.floyd.client_lemmas <> A:429 var
binder 25652:25652 <> x:431
R25662:25662 VST.floyd.client_lemmas <> B:430 var
binder 25659:25659 <> y:432
R25675:25677 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25666:25668 Coq.Init.Datatypes <> fst def
R25670:25670 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25672:25672 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25674:25674 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25671:25671 VST.floyd.client_lemmas <> x:431 var
R25673:25673 VST.floyd.client_lemmas <> y:432 var
R25678:25678 VST.floyd.client_lemmas <> x:431 var
prf 25712:25721 <> snd_unfold
binder 25732:25732 <> A:433
binder 25734:25734 <> B:434
R25741:25741 VST.floyd.client_lemmas <> A:433 var
binder 25738:25738 <> x:435
R25748:25748 VST.floyd.client_lemmas <> B:434 var
binder 25745:25745 <> y:436
R25761:25763 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25752:25754 Coq.Init.Datatypes <> snd def
R25756:25756 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25758:25758 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25760:25760 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25757:25757 VST.floyd.client_lemmas <> x:435 var
R25759:25759 VST.floyd.client_lemmas <> y:436 var
R25764:25764 VST.floyd.client_lemmas <> y:436 var
R25806:25815 VST.floyd.client_lemmas <> fst_unfold thm
R25818:25827 VST.floyd.client_lemmas <> snd_unfold thm
prf 25844:25850 <> eq_True
binder 25864:25864 <> A:437
R25875:25879 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25886:25886 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25881:25881 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25880:25880 VST.floyd.client_lemmas <> A:437 var
R25882:25885 Coq.Init.Logic <> True ind
R25874:25874 VST.floyd.client_lemmas <> A:437 var
R25910:25917 VST.msl.Axioms <> prop_ext prfax
R25910:25917 VST.msl.Axioms <> prop_ext prfax
prf 25943:25962 <> derives_extract_PROP
binder 25976:25977 <> P1:438
binder 25986:25986 <> A:439
binder 25988:25988 <> P:440
binder 25990:25991 <> QR:441
binder 25993:25993 <> S:442
R26001:26001 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26029:26038 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26060:26064 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R26040:26043 VST.msl.seplog <> ::logic:x_'&&'_x not
R26039:26039 VST.floyd.client_lemmas <> A:439 var
R26044:26048 VST.floyd.canon <> PROPx def
R26058:26059 VST.floyd.client_lemmas <> QR:441 var
R26053:26054 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R26051:26052 VST.floyd.client_lemmas <> P1:438 var
R26055:26055 VST.floyd.client_lemmas <> P:440 var
R26065:26065 VST.floyd.client_lemmas <> S:442 var
R26004:26007 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26023:26027 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R26009:26012 VST.msl.seplog <> ::logic:x_'&&'_x not
R26008:26008 VST.floyd.client_lemmas <> A:439 var
R26013:26017 VST.floyd.canon <> PROPx def
R26021:26022 VST.floyd.client_lemmas <> QR:441 var
R26019:26019 VST.floyd.client_lemmas <> P:440 var
R26028:26028 VST.floyd.client_lemmas <> S:442 var
R26002:26003 VST.floyd.client_lemmas <> P1:438 var
R26082:26086 VST.floyd.canon <> PROPx def
R26110:26124 VST.floyd.canon <> fold_right_cons thm
R26110:26124 VST.floyd.canon <> fold_right_cons thm
R26110:26124 VST.floyd.canon <> fold_right_cons thm
R26145:26157 VST.msl.seplog <> derives_trans meth
R26145:26157 VST.msl.seplog <> derives_trans meth
prf 26456:26470 <> local_andp_prop
binder 26481:26481 <> P:443
binder 26483:26483 <> Q:444
R26503:26505 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26493:26496 VST.msl.seplog <> ::logic:x_'&&'_x not
R26486:26490 VST.veric.SeparationLogic <> local def
R26492:26492 VST.floyd.client_lemmas <> P:443 var
R26497:26500 VST.msl.seplog <> prop meth
R26502:26502 VST.floyd.client_lemmas <> Q:444 var
R26512:26515 VST.msl.seplog <> ::logic:x_'&&'_x not
R26506:26509 VST.msl.seplog <> prop meth
R26511:26511 VST.floyd.client_lemmas <> Q:444 var
R26516:26520 VST.veric.SeparationLogic <> local def
R26522:26522 VST.floyd.client_lemmas <> P:443 var
R26546:26554 VST.msl.log_normalize <> andp_comm thm
R26546:26554 VST.msl.log_normalize <> andp_comm thm
prf 26568:26583 <> local_andp_prop1
binder 26593:26593 <> P:445
binder 26595:26595 <> Q:446
binder 26597:26597 <> R:447
R26624:26626 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26607:26611 VST.msl.seplog <> ::logic:x_'&&'_x not
R26623:26623 VST.msl.seplog <> ::logic:x_'&&'_x not
R26600:26604 VST.veric.SeparationLogic <> local def
R26606:26606 VST.floyd.client_lemmas <> P:445 var
R26618:26621 VST.msl.seplog <> ::logic:x_'&&'_x not
R26612:26615 VST.msl.seplog <> prop meth
R26617:26617 VST.floyd.client_lemmas <> Q:446 var
R26622:26622 VST.floyd.client_lemmas <> R:447 var
R26633:26637 VST.msl.seplog <> ::logic:x_'&&'_x not
R26650:26650 VST.msl.seplog <> ::logic:x_'&&'_x not
R26627:26630 VST.msl.seplog <> prop meth
R26632:26632 VST.floyd.client_lemmas <> Q:446 var
R26645:26648 VST.msl.seplog <> ::logic:x_'&&'_x not
R26638:26642 VST.veric.SeparationLogic <> local def
R26644:26644 VST.floyd.client_lemmas <> P:445 var
R26649:26649 VST.floyd.client_lemmas <> R:447 var
R26676:26684 VST.msl.log_normalize <> andp_comm thm
R26676:26684 VST.msl.log_normalize <> andp_comm thm
R26676:26684 VST.msl.log_normalize <> andp_comm thm
R26695:26704 VST.msl.log_normalize <> andp_assoc thm
R26695:26704 VST.msl.log_normalize <> andp_assoc thm
R26695:26704 VST.msl.log_normalize <> andp_assoc thm
R26722:26730 VST.msl.log_normalize <> andp_comm thm
R26722:26730 VST.msl.log_normalize <> andp_comm thm
R26751:26765 VST.floyd.client_lemmas <> local_andp_prop thm
R26767:26782 VST.floyd.client_lemmas <> local_andp_prop1 thm
prf 26800:26818 <> local_sepcon_assoc1
binder 26831:26831 <> P:448
binder 26833:26833 <> Q:449
binder 26835:26835 <> R:450
R26856:26858 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26838:26838 VST.msl.seplog <> ::logic:x_'*'_x not
R26851:26854 VST.msl.seplog <> ::logic:x_'*'_x not
R26846:26849 VST.msl.seplog <> ::logic:x_'&&'_x not
R26839:26843 VST.veric.SeparationLogic <> local def
R26845:26845 VST.floyd.client_lemmas <> P:448 var
R26850:26850 VST.floyd.client_lemmas <> Q:449 var
R26855:26855 VST.floyd.client_lemmas <> R:450 var
R26866:26870 VST.msl.seplog <> ::logic:x_'&&'_x not
R26876:26876 VST.msl.seplog <> ::logic:x_'&&'_x not
R26859:26863 VST.veric.SeparationLogic <> local def
R26865:26865 VST.floyd.client_lemmas <> P:448 var
R26872:26874 VST.msl.seplog <> ::logic:x_'*'_x not
R26871:26871 VST.floyd.client_lemmas <> Q:449 var
R26875:26875 VST.floyd.client_lemmas <> R:450 var
R26921:26925 VST.veric.SeparationLogic <> local def
R26928:26932 VST.veric.mpred <> lift1 def
R26948:26955 VST.msl.seplog <> pred_ext meth
R26948:26955 VST.msl.seplog <> pred_ext meth
prf 26980:26998 <> local_sepcon_assoc2
binder 27011:27011 <> P:451
binder 27013:27013 <> Q:452
binder 27015:27015 <> R:453
R27036:27038 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27019:27022 VST.msl.seplog <> ::logic:x_'*'_x not
R27035:27035 VST.msl.seplog <> ::logic:x_'*'_x not
R27018:27018 VST.floyd.client_lemmas <> R:453 var
R27030:27033 VST.msl.seplog <> ::logic:x_'&&'_x not
R27023:27027 VST.veric.SeparationLogic <> local def
R27029:27029 VST.floyd.client_lemmas <> P:451 var
R27034:27034 VST.floyd.client_lemmas <> Q:452 var
R27046:27050 VST.msl.seplog <> ::logic:x_'&&'_x not
R27056:27056 VST.msl.seplog <> ::logic:x_'&&'_x not
R27039:27043 VST.veric.SeparationLogic <> local def
R27045:27045 VST.floyd.client_lemmas <> P:451 var
R27052:27054 VST.msl.seplog <> ::logic:x_'*'_x not
R27051:27051 VST.floyd.client_lemmas <> R:453 var
R27055:27055 VST.floyd.client_lemmas <> Q:452 var
R27101:27105 VST.veric.SeparationLogic <> local def
R27108:27112 VST.veric.mpred <> lift1 def
R27128:27135 VST.msl.seplog <> pred_ext meth
R27128:27135 VST.msl.seplog <> pred_ext meth
R27167:27185 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R27187:27205 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
def 27228:27235 <> do_canon
R27251:27252 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27253:27257 VST.veric.mpred <> mpred def
R27244:27250 VST.veric.mpred <> environ ind
binder 27238:27238 <> x:454
binder 27240:27240 <> y:455
R27264:27269 VST.msl.seplog <> sepcon meth
R27273:27273 VST.floyd.client_lemmas <> y:455 var
R27271:27271 VST.floyd.client_lemmas <> x:454 var
R27325:27332 VST.floyd.client_lemmas <> do_canon def
R27325:27332 VST.floyd.client_lemmas <> do_canon def
R27509:27513 VST.floyd.canon <> PROPx def
R27509:27513 VST.floyd.canon <> PROPx def
R27639:27644 VST.floyd.canon <> LOCALx def
R27639:27644 VST.floyd.canon <> LOCALx def
R27766:27769 VST.floyd.canon <> SEPx def
R27771:27777 VST.veric.mpred <> environ ind
R27766:27769 VST.floyd.canon <> SEPx def
R27771:27777 VST.veric.mpred <> environ ind
R27888:27891 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27888:27891 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28058:28061 VST.msl.seplog <> ::logic:x_'&&'_x not
R28058:28061 VST.msl.seplog <> ::logic:x_'&&'_x not
R28226:28231 VST.msl.seplog <> sepcon meth
R28226:28231 VST.msl.seplog <> sepcon meth
R28406:28408 VST.msl.seplog <> ::logic:'|>'_x not
R28406:28408 VST.msl.seplog <> ::logic:'|>'_x not
R28319:28324 VST.msl.seplog <> sepcon meth
R28147:28148 VST.msl.seplog <> ::logic:x_'&&'_x not
R27977:27978 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27830:27833 VST.floyd.canon <> SEPx def
R27835:27841 VST.veric.mpred <> environ ind
R27705:27710 VST.floyd.canon <> LOCALx def
R27577:27581 VST.floyd.canon <> PROPx def
R27419:27426 VST.floyd.client_lemmas <> do_canon def
prf 28445:28462 <> andp_later_derives
binder 28465:28465 <> A:456
R28473:28478 VST.msl.seplog <> NatDed class
R28480:28480 VST.floyd.client_lemmas <> A:456 var
binder 28469:28470 <> NA:457
R28487:28491 VST.msl.seplog <> Indir class
R28493:28493 VST.floyd.client_lemmas <> A:456 var
binder 28483:28484 <> IA:458
R28517:28517 VST.floyd.client_lemmas <> A:456 var
binder 28506:28506 <> P:459
binder 28508:28508 <> Q:460
binder 28510:28511 <> P':461
binder 28513:28514 <> Q':462
R28531:28534 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28546:28549 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28556:28560 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R28551:28554 VST.msl.seplog <> ::logic:x_'&&'_x not
R28550:28550 VST.floyd.client_lemmas <> P:459 var
R28555:28555 VST.floyd.client_lemmas <> Q:460 var
R28561:28564 VST.msl.seplog <> ::logic:'|>'_x not
R28573:28573 VST.msl.seplog <> ::logic:'|>'_x not
R28567:28570 VST.msl.seplog <> ::logic:x_'&&'_x not
R28565:28566 VST.floyd.client_lemmas <> P':461 var
R28571:28572 VST.floyd.client_lemmas <> Q':462 var
R28536:28540 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R28535:28535 VST.floyd.client_lemmas <> Q:460 var
R28541:28543 VST.msl.seplog <> ::logic:'|>'_x not
R28544:28545 VST.floyd.client_lemmas <> Q':462 var
R28521:28525 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R28520:28520 VST.floyd.client_lemmas <> P:459 var
R28526:28528 VST.msl.seplog <> ::logic:'|>'_x not
R28529:28530 VST.floyd.client_lemmas <> P':461 var
R28599:28608 VST.msl.log_normalize <> later_andp thm
R28599:28608 VST.msl.log_normalize <> later_andp thm
R28599:28608 VST.msl.log_normalize <> later_andp thm
R28617:28628 VST.msl.log_normalize <> andp_derives thm
R28617:28628 VST.msl.log_normalize <> andp_derives thm
prf 28649:28668 <> sepcon_later_derives
binder 28671:28671 <> A:463
R28679:28684 VST.msl.seplog <> NatDed class
R28686:28686 VST.floyd.client_lemmas <> A:463 var
binder 28675:28676 <> NA:464
R28693:28698 VST.msl.seplog <> SepLog class
R28700:28700 VST.floyd.client_lemmas <> A:463 var
binder 28689:28690 <> SL:465
R28707:28711 VST.msl.seplog <> Indir class
R28713:28713 VST.floyd.client_lemmas <> A:463 var
binder 28703:28704 <> IA:466
R28720:28727 VST.msl.seplog <> SepIndir class
R28729:28729 VST.floyd.client_lemmas <> A:463 var
binder 28716:28717 <> SI:467
R28753:28753 VST.floyd.client_lemmas <> A:463 var
binder 28742:28742 <> P:468
binder 28744:28744 <> Q:469
binder 28746:28747 <> P':470
binder 28749:28750 <> Q':471
R28767:28770 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28782:28785 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28791:28795 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R28787:28789 VST.msl.seplog <> ::logic:x_'*'_x not
R28786:28786 VST.floyd.client_lemmas <> P:468 var
R28790:28790 VST.floyd.client_lemmas <> Q:469 var
R28796:28799 VST.msl.seplog <> ::logic:'|>'_x not
R28807:28807 VST.msl.seplog <> ::logic:'|>'_x not
R28802:28804 VST.msl.seplog <> ::logic:x_'*'_x not
R28800:28801 VST.floyd.client_lemmas <> P':470 var
R28805:28806 VST.floyd.client_lemmas <> Q':471 var
R28772:28776 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R28771:28771 VST.floyd.client_lemmas <> Q:469 var
R28777:28779 VST.msl.seplog <> ::logic:'|>'_x not
R28780:28781 VST.floyd.client_lemmas <> Q':471 var
R28757:28761 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R28756:28756 VST.floyd.client_lemmas <> P:468 var
R28762:28764 VST.msl.seplog <> ::logic:'|>'_x not
R28765:28766 VST.floyd.client_lemmas <> P':470 var
R28833:28844 VST.msl.seplog <> later_sepcon meth
R28833:28844 VST.msl.seplog <> later_sepcon meth
R28833:28844 VST.msl.seplog <> later_sepcon meth
R28853:28866 VST.msl.seplog <> sepcon_derives meth
R28853:28866 VST.msl.seplog <> sepcon_derives meth
def 29158:29167 <> convertPre
R29173:29178 VST.veric.SeparationLogic <> funsig def
binder 29170:29170 <> f:472
binder 29181:29181 <> A:473
R29192:29195 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29203:29206 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29207:29211 VST.veric.mpred <> mpred def
R29196:29202 VST.veric.mpred <> environ ind
R29191:29191 VST.floyd.client_lemmas <> A:473 var
binder 29186:29188 <> Pre:474
R29219:29219 VST.floyd.client_lemmas <> A:473 var
binder 29216:29216 <> w:475
R29227:29237 VST.veric.mpred <> argsEnviron def
binder 29223:29224 <> ae:476
R29242:29246 VST.veric.mpred <> mpred def
R29289:29294 VST.msl.seplog <> ::logic:x_'&&'_x not
R29252:29255 VST.msl.seplog <> ::logic:'!!'_x not
R29288:29288 VST.msl.seplog <> ::logic:'!!'_x not
R29271:29273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29256:29261 Coq.Lists.List <> length syndef
R29264:29266 Coq.Init.Datatypes <> snd def
R29268:29269 VST.floyd.client_lemmas <> ae:476 var
R29274:29279 Coq.Lists.List <> length syndef
R29282:29284 Coq.Init.Datatypes <> fst def
R29286:29286 VST.floyd.client_lemmas <> f:472 var
R29295:29297 VST.floyd.client_lemmas <> Pre:474 var
R29302:29310 VST.veric.SeparationLogic <> make_args def
R29345:29353 VST.veric.mpred <> mkEnviron constr
R29392:29400 VST.veric.mpred Map empty def
R29402:29404 compcert.common.Values <> val ind
R29367:29375 VST.veric.mpred Map empty def
R29383:29383 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R29378:29382 compcert.common.Values <> block def
R29384:29387 compcert.cfrontend.Ctypes <> type ind
R29356:29358 Coq.Init.Datatypes <> fst def
R29360:29361 VST.floyd.client_lemmas <> ae:476 var
R29331:29333 Coq.Init.Datatypes <> snd def
R29335:29336 VST.floyd.client_lemmas <> ae:476 var
R29313:29315 Coq.Lists.List <> map def
R29322:29324 Coq.Init.Datatypes <> fst def
R29326:29326 VST.floyd.client_lemmas <> f:472 var
R29317:29319 Coq.Init.Datatypes <> fst def
R29299:29299 VST.floyd.client_lemmas <> w:475 var
def 29422:29434 <> NDmk_funspec'
R29440:29445 VST.veric.SeparationLogic <> funsig def
binder 29437:29437 <> f:477
R29453:29470 compcert.common.AST <> calling_convention rec
binder 29449:29450 <> cc:478
binder 29476:29476 <> A:479
R29497:29500 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29508:29511 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29512:29516 VST.veric.mpred <> mpred def
R29501:29507 VST.veric.mpred <> environ ind
R29496:29496 VST.floyd.client_lemmas <> A:479 var
binder 29486:29488 <> Pre:480
binder 29490:29493 <> Post:481
R29520:29526 VST.veric.mpred <> funspec ind
R29533:29544 VST.veric.SeparationLogic <> NDmk_funspec def
R29612:29615 VST.floyd.client_lemmas <> Post:481 var
R29592:29601 VST.floyd.client_lemmas <> convertPre def
R29607:29609 VST.floyd.client_lemmas <> Pre:480 var
R29605:29605 VST.floyd.client_lemmas <> A:479 var
R29603:29603 VST.floyd.client_lemmas <> f:477 var
R29589:29589 VST.floyd.client_lemmas <> A:479 var
R29583:29584 VST.floyd.client_lemmas <> cc:478 var
R29547:29578 VST.veric.compcert_rmaps <> typesig_of_funsig def
R29580:29580 VST.floyd.client_lemmas <> f:477 var
R29752:29752 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29761:29762 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29773:29773 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29756:29760 compcert.common.AST <> ident def
R29766:29772 VST.veric.mpred <> funspec ind
not 29733:29733 <> :::'DECLARE'_x_x
def 29850:29865 <> NDsemax_external
R29875:29884 VST.veric.juicy_extspec <> OracleKind class
binder 29868:29872 <> Hspec:482
R29914:29930 compcert.common.AST <> external_function ind
binder 29910:29911 <> ef:483
binder 29936:29936 <> A:484
R29949:29952 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29964:29967 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29968:29972 VST.veric.mpred <> mpred def
R29953:29963 VST.veric.mpred <> argsEnviron def
R29948:29948 VST.floyd.client_lemmas <> A:484 var
binder 29946:29946 <> P:485
R29980:29983 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29991:29994 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29995:29999 VST.veric.mpred <> mpred def
R29984:29990 VST.veric.mpred <> environ ind
R29979:29979 VST.floyd.client_lemmas <> A:484 var
binder 29976:29976 <> Q:486
R30014:30027 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax_external defax
R30081:30081 VST.floyd.client_lemmas <> Q:486 var
R30068:30068 VST.floyd.client_lemmas <> P:485 var
R30039:30053 VST.veric.rmaps <> ConstType constr
R30055:30055 VST.floyd.client_lemmas <> A:484 var
R30035:30036 VST.floyd.client_lemmas <> ef:483 var
R30029:30033 VST.floyd.client_lemmas <> Hspec:482 var
R30160:30171 VST.veric.SeparationLogic <> NDmk_funspec def
binder 30260:30260 <> x:487
binder 30236:30236 <> x:488
R30217:30226 compcert.common.AST <> cc_default def
R30173:30174 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30210:30212 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30215:30215 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30175:30178 Coq.Init.Datatypes <> cons constr
R30191:30194 Coq.Init.Datatypes <> cons constr
R30203:30205 Coq.Init.Datatypes <> nil constr
not 30095:30095 <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R30430:30441 VST.veric.SeparationLogic <> NDmk_funspec def
binder 30496:30496 <> x:489
binder 30472:30472 <> x:490
R30453:30462 compcert.common.AST <> cc_default def
R30443:30443 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30447:30448 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30451:30451 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30444:30446 Coq.Init.Datatypes <> nil constr
not 30376:30376 <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R30689:30700 VST.veric.SeparationLogic <> NDmk_funspec def
binder 30844:30844 <> x:491
R30855:30855 VST.floyd.client_lemmas <> x:491 var
R30862:30862 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30865:30865 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30868:30868 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 30781:30781 <> x:493
R30792:30792 VST.floyd.client_lemmas <> x:493 var
R30799:30799 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30802:30802 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30805:30805 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30760:30760 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R30746:30755 compcert.common.AST <> cc_default def
R30702:30703 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30739:30741 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30744:30744 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30704:30707 Coq.Init.Datatypes <> cons constr
R30720:30723 Coq.Init.Datatypes <> cons constr
R30732:30734 Coq.Init.Datatypes <> nil constr
not 30612:30612 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R31070:31081 VST.veric.SeparationLogic <> NDmk_funspec def
binder 31191:31191 <> x:495
R31202:31202 VST.floyd.client_lemmas <> x:495 var
R31209:31209 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31212:31212 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31215:31215 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 31128:31128 <> x:497
R31139:31139 VST.floyd.client_lemmas <> x:497 var
R31146:31146 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31149:31149 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31152:31152 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31107:31107 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R31093:31102 compcert.common.AST <> cc_default def
R31083:31083 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31087:31088 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31091:31091 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31084:31086 Coq.Init.Datatypes <> nil constr
not 31004:31004 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R31438:31449 VST.veric.SeparationLogic <> NDmk_funspec def
binder 31599:31599 <> x:499
R31610:31610 VST.floyd.client_lemmas <> x:499 var
R31617:31617 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31620:31620 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31623:31623 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31626:31626 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 31533:31533 <> x:501
R31544:31544 VST.floyd.client_lemmas <> x:501 var
R31551:31551 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31554:31554 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31557:31557 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31560:31560 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31512:31512 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R31509:31509 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R31495:31504 compcert.common.AST <> cc_default def
R31451:31452 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31488:31490 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31493:31493 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31453:31456 Coq.Init.Datatypes <> cons constr
R31469:31472 Coq.Init.Datatypes <> cons constr
R31481:31483 Coq.Init.Datatypes <> nil constr
not 31351:31351 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R31853:31864 VST.veric.SeparationLogic <> NDmk_funspec def
binder 31980:31980 <> x:503
R31991:31991 VST.floyd.client_lemmas <> x:503 var
R31998:31998 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32001:32001 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32004:32004 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32007:32007 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 31914:31914 <> x:505
R31925:31925 VST.floyd.client_lemmas <> x:505 var
R31932:31932 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31935:31935 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31938:31938 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31941:31941 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31893:31893 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R31890:31890 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R31876:31885 compcert.common.AST <> cc_default def
R31866:31866 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31870:31871 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31874:31874 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31867:31869 Coq.Init.Datatypes <> nil constr
not 31777:31777 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R32256:32267 VST.veric.SeparationLogic <> NDmk_funspec def
binder 32423:32423 <> x:507
R32434:32434 VST.floyd.client_lemmas <> x:507 var
R32441:32441 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32444:32444 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32447:32447 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32450:32450 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32453:32453 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 32354:32354 <> x:509
R32365:32365 VST.floyd.client_lemmas <> x:509 var
R32372:32372 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32375:32375 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32378:32378 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32381:32381 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32384:32384 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32333:32333 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R32330:32330 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R32327:32327 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R32313:32322 compcert.common.AST <> cc_default def
R32269:32270 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32306:32308 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32311:32311 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32271:32274 Coq.Init.Datatypes <> cons constr
R32287:32290 Coq.Init.Datatypes <> cons constr
R32299:32301 Coq.Init.Datatypes <> nil constr
not 32159:32159 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R32705:32716 VST.veric.SeparationLogic <> NDmk_funspec def
binder 32838:32838 <> x:511
R32849:32849 VST.floyd.client_lemmas <> x:511 var
R32856:32856 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32859:32859 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32862:32862 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32865:32865 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32868:32868 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 32769:32769 <> x:513
R32780:32780 VST.floyd.client_lemmas <> x:513 var
R32787:32787 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32790:32790 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32793:32793 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32796:32796 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32799:32799 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32748:32748 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R32745:32745 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R32742:32742 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R32728:32737 compcert.common.AST <> cc_default def
R32718:32718 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32722:32723 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32726:32726 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32719:32721 Coq.Init.Datatypes <> nil constr
not 32619:32619 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R33130:33141 VST.veric.SeparationLogic <> NDmk_funspec def
binder 33269:33269 <> x:515
R33280:33280 VST.floyd.client_lemmas <> x:515 var
R33287:33287 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33290:33290 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33293:33293 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33296:33296 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33299:33299 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33302:33302 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 33197:33197 <> x:517
R33208:33208 VST.floyd.client_lemmas <> x:517 var
R33215:33215 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33218:33218 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33221:33221 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33224:33224 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33227:33227 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33230:33230 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33176:33176 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R33173:33173 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R33170:33170 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R33167:33167 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R33153:33162 compcert.common.AST <> cc_default def
R33143:33143 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33147:33148 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33151:33151 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33144:33146 Coq.Init.Datatypes <> nil constr
not 33034:33034 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R33590:33601 VST.veric.SeparationLogic <> NDmk_funspec def
binder 33763:33763 <> x:519
R33774:33774 VST.floyd.client_lemmas <> x:519 var
R33781:33781 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33784:33784 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33787:33787 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33790:33790 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33793:33793 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33796:33796 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 33691:33691 <> x:521
R33702:33702 VST.floyd.client_lemmas <> x:521 var
R33709:33709 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33712:33712 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33715:33715 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33718:33718 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33721:33721 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33724:33724 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33670:33670 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R33667:33667 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R33664:33664 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R33661:33661 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R33647:33656 compcert.common.AST <> cc_default def
R33603:33604 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33640:33642 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33645:33645 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33605:33608 Coq.Init.Datatypes <> cons constr
R33621:33624 Coq.Init.Datatypes <> cons constr
R33633:33635 Coq.Init.Datatypes <> nil constr
not 33483:33483 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R34083:34094 VST.veric.SeparationLogic <> NDmk_funspec def
binder 34228:34228 <> x:523
R34239:34239 VST.floyd.client_lemmas <> x:523 var
R34246:34246 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34249:34249 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34252:34252 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34255:34255 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34258:34258 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34261:34261 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34264:34264 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 34153:34153 <> x:525
R34164:34164 VST.floyd.client_lemmas <> x:525 var
R34171:34171 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34174:34174 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34177:34177 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34180:34180 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34183:34183 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34186:34186 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34189:34189 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34132:34132 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R34129:34129 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R34126:34126 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R34123:34123 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R34120:34120 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R34106:34115 compcert.common.AST <> cc_default def
R34096:34096 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34100:34101 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34104:34104 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34097:34099 Coq.Init.Datatypes <> nil constr
not 33977:33977 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R34591:34602 VST.veric.SeparationLogic <> NDmk_funspec def
binder 34770:34770 <> x:527
R34781:34781 VST.floyd.client_lemmas <> x:527 var
R34788:34788 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34791:34791 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34794:34794 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34797:34797 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34800:34800 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34803:34803 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34806:34806 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 34695:34695 <> x:529
R34706:34706 VST.floyd.client_lemmas <> x:529 var
R34713:34713 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34716:34716 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34719:34719 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34722:34722 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34725:34725 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34728:34728 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34731:34731 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34674:34674 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R34671:34671 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R34668:34668 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R34665:34665 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R34662:34662 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R34648:34657 compcert.common.AST <> cc_default def
R34604:34605 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34641:34643 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34646:34646 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34606:34609 Coq.Init.Datatypes <> cons constr
R34622:34625 Coq.Init.Datatypes <> cons constr
R34634:34636 Coq.Init.Datatypes <> nil constr
not 34474:34474 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R35131:35142 VST.veric.SeparationLogic <> NDmk_funspec def
binder 35282:35282 <> x:531
R35293:35293 VST.floyd.client_lemmas <> x:531 var
R35300:35300 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35303:35303 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35306:35306 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35309:35309 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35312:35312 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35315:35315 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35318:35318 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35321:35321 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 35204:35204 <> x:533
R35215:35215 VST.floyd.client_lemmas <> x:533 var
R35222:35222 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35225:35225 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35228:35228 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35231:35231 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35234:35234 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35237:35237 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35240:35240 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35243:35243 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35183:35183 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R35180:35180 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R35177:35177 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R35174:35174 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R35171:35171 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R35168:35168 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R35154:35163 compcert.common.AST <> cc_default def
R35144:35144 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35148:35149 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35152:35152 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35145:35147 Coq.Init.Datatypes <> nil constr
not 35015:35015 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R35673:35684 VST.veric.SeparationLogic <> NDmk_funspec def
binder 35858:35858 <> x:535
R35869:35869 VST.floyd.client_lemmas <> x:535 var
R35876:35876 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35879:35879 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35882:35882 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35885:35885 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35888:35888 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35891:35891 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35894:35894 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35897:35897 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 35780:35780 <> x:537
R35791:35791 VST.floyd.client_lemmas <> x:537 var
R35798:35798 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35801:35801 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35804:35804 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35807:35807 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35810:35810 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35813:35813 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35816:35816 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35819:35819 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35759:35759 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R35756:35756 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R35753:35753 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R35750:35750 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R35747:35747 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R35744:35744 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R35730:35739 compcert.common.AST <> cc_default def
R35686:35687 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35723:35725 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35728:35728 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35688:35691 Coq.Init.Datatypes <> cons constr
R35704:35707 Coq.Init.Datatypes <> cons constr
R35716:35718 Coq.Init.Datatypes <> nil constr
not 35546:35546 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R36247:36258 VST.veric.SeparationLogic <> NDmk_funspec def
binder 36404:36404 <> x:539
R36415:36415 VST.floyd.client_lemmas <> x:539 var
R36422:36422 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36425:36425 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36428:36428 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36431:36431 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36434:36434 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36437:36437 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36440:36440 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36443:36443 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36446:36446 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 36323:36323 <> x:541
R36334:36334 VST.floyd.client_lemmas <> x:541 var
R36341:36341 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36344:36344 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36347:36347 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36350:36350 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36353:36353 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36356:36356 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36359:36359 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36362:36362 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36365:36365 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36302:36302 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R36299:36299 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R36296:36296 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R36293:36293 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R36290:36290 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R36287:36287 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R36284:36284 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R36270:36279 compcert.common.AST <> cc_default def
R36260:36260 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36264:36265 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36268:36268 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36261:36263 Coq.Init.Datatypes <> nil constr
not 36121:36121 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R36823:36834 VST.veric.SeparationLogic <> NDmk_funspec def
binder 37014:37014 <> x:543
R37025:37025 VST.floyd.client_lemmas <> x:543 var
R37032:37032 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37035:37035 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37038:37038 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37041:37041 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37044:37044 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37047:37047 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37050:37050 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37053:37053 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37056:37056 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 36933:36933 <> x:545
R36944:36944 VST.floyd.client_lemmas <> x:545 var
R36951:36951 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36954:36954 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36957:36957 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36960:36960 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36963:36963 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36966:36966 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36969:36969 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36972:36972 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36975:36975 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36912:36912 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R36909:36909 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R36906:36906 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R36903:36903 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R36900:36900 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R36897:36897 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R36894:36894 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R36880:36889 compcert.common.AST <> cc_default def
R36836:36837 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36873:36875 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36878:36878 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36838:36841 Coq.Init.Datatypes <> cons constr
R36854:36857 Coq.Init.Datatypes <> cons constr
R36866:36868 Coq.Init.Datatypes <> nil constr
not 36686:36686 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R37431:37442 VST.veric.SeparationLogic <> NDmk_funspec def
binder 37594:37594 <> x:547
R37605:37605 VST.floyd.client_lemmas <> x:547 var
R37612:37612 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37615:37615 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37618:37618 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37621:37621 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37624:37624 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37627:37627 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37630:37630 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37633:37633 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37636:37636 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37639:37639 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 37510:37510 <> x:549
R37521:37521 VST.floyd.client_lemmas <> x:549 var
R37528:37528 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37531:37531 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37534:37534 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37537:37537 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37540:37540 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37543:37543 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37546:37546 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37549:37549 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37552:37552 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37555:37555 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37489:37489 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R37486:37486 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R37483:37483 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R37480:37480 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R37477:37477 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R37474:37474 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R37471:37471 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R37468:37468 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R37454:37463 compcert.common.AST <> cc_default def
R37444:37444 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37448:37449 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37452:37452 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37445:37447 Coq.Init.Datatypes <> nil constr
not 37295:37295 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R38054:38065 VST.veric.SeparationLogic <> NDmk_funspec def
binder 38251:38251 <> x:551
R38262:38262 VST.floyd.client_lemmas <> x:551 var
R38269:38269 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38272:38272 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38275:38275 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38278:38278 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38281:38281 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38284:38284 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38287:38287 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38290:38290 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38293:38293 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38296:38296 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 38167:38167 <> x:553
R38178:38178 VST.floyd.client_lemmas <> x:553 var
R38185:38185 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38188:38188 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38191:38191 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38194:38194 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38197:38197 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38200:38200 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38203:38203 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38206:38206 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38209:38209 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38212:38212 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38146:38146 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38143:38143 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38140:38140 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38137:38137 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38134:38134 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38131:38131 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38128:38128 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38125:38125 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38111:38120 compcert.common.AST <> cc_default def
R38067:38068 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38104:38106 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38109:38109 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38069:38072 Coq.Init.Datatypes <> cons constr
R38085:38088 Coq.Init.Datatypes <> cons constr
R38097:38099 Coq.Init.Datatypes <> nil constr
not 37907:37907 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R38711:38722 VST.veric.SeparationLogic <> NDmk_funspec def
binder 38882:38882 <> x:555
R38893:38893 VST.floyd.client_lemmas <> x:555 var
R38900:38900 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38903:38903 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38906:38906 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38909:38909 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38912:38912 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38915:38915 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38918:38918 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38921:38921 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38924:38924 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38927:38927 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38931:38931 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 38794:38794 <> x:557
R38805:38805 VST.floyd.client_lemmas <> x:557 var
R38812:38812 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38815:38815 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38818:38818 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38821:38821 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38824:38824 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38827:38827 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38830:38830 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38833:38833 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38836:38836 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38839:38839 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38843:38843 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38772:38772 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38769:38769 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38766:38766 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38763:38763 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38760:38760 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38757:38757 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38754:38754 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38751:38751 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38748:38748 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R38734:38743 compcert.common.AST <> cc_default def
R38724:38724 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38728:38729 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38732:38732 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38725:38727 Coq.Init.Datatypes <> nil constr
not 38563:38563 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R39388:39399 VST.veric.SeparationLogic <> NDmk_funspec def
binder 39593:39593 <> x:559
R39604:39604 VST.floyd.client_lemmas <> x:559 var
R39611:39611 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39614:39614 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39617:39617 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39620:39620 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39623:39623 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39626:39626 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39629:39629 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39632:39632 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39635:39635 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39638:39638 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39642:39642 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 39505:39505 <> x:561
R39516:39516 VST.floyd.client_lemmas <> x:561 var
R39523:39523 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39526:39526 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39529:39529 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39532:39532 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39535:39535 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39538:39538 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39541:39541 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39544:39544 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39547:39547 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39550:39550 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39554:39554 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39483:39483 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39480:39480 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39477:39477 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39474:39474 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39471:39471 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39468:39468 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39465:39465 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39462:39462 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39459:39459 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R39445:39454 compcert.common.AST <> cc_default def
R39401:39402 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39438:39440 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39443:39443 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39403:39406 Coq.Init.Datatypes <> cons constr
R39419:39422 Coq.Init.Datatypes <> cons constr
R39431:39433 Coq.Init.Datatypes <> nil constr
not 39229:39229 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R40099:40110 VST.veric.SeparationLogic <> NDmk_funspec def
binder 40278:40278 <> x:563
R40289:40289 VST.floyd.client_lemmas <> x:563 var
R40296:40296 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40299:40299 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40302:40302 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40305:40305 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40308:40308 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40311:40311 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40314:40314 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40317:40317 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40320:40320 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40323:40323 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40327:40327 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40331:40331 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 40186:40186 <> x:565
R40197:40197 VST.floyd.client_lemmas <> x:565 var
R40204:40204 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40207:40207 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40210:40210 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40213:40213 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40216:40216 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40219:40219 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40222:40222 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40225:40225 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40228:40228 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40231:40231 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40235:40235 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40239:40239 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40164:40164 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40160:40160 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40157:40157 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40154:40154 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40151:40151 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40148:40148 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40145:40145 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40142:40142 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40139:40139 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40136:40136 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40122:40131 compcert.common.AST <> cc_default def
R40112:40112 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40116:40117 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40120:40120 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40113:40115 Coq.Init.Datatypes <> nil constr
not 39939:39939 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R40816:40827 VST.veric.SeparationLogic <> NDmk_funspec def
binder 41029:41029 <> x:567
R41040:41040 VST.floyd.client_lemmas <> x:567 var
R41047:41047 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41050:41050 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41053:41053 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41056:41056 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41059:41059 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41062:41062 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41065:41065 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41068:41068 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41071:41071 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41074:41074 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41078:41078 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41082:41082 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 40937:40937 <> x:569
R40948:40948 VST.floyd.client_lemmas <> x:569 var
R40955:40955 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40958:40958 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40961:40961 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40964:40964 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40967:40967 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40970:40970 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40973:40973 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40976:40976 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40979:40979 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40982:40982 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40986:40986 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40990:40990 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40915:40915 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40911:40911 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40908:40908 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40905:40905 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40902:40902 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40899:40899 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40896:40896 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40893:40893 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40890:40890 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40887:40887 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40873:40882 compcert.common.AST <> cc_default def
R40829:40830 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40866:40868 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40871:40871 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40831:40834 Coq.Init.Datatypes <> cons constr
R40847:40850 Coq.Init.Datatypes <> cons constr
R40859:40861 Coq.Init.Datatypes <> nil constr
not 40645:40645 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R41567:41578 VST.veric.SeparationLogic <> NDmk_funspec def
binder 41754:41754 <> x:571
R41765:41765 VST.floyd.client_lemmas <> x:571 var
R41772:41772 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41775:41775 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41778:41778 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41781:41781 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41784:41784 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41787:41787 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41790:41790 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41793:41793 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41796:41796 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41799:41799 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41803:41803 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41807:41807 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41811:41811 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 41658:41658 <> x:573
R41669:41669 VST.floyd.client_lemmas <> x:573 var
R41676:41676 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41679:41679 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41682:41682 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41685:41685 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41688:41688 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41691:41691 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41694:41694 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41697:41697 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41700:41700 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41703:41703 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41707:41707 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41711:41711 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41715:41715 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41636:41636 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R41632:41632 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R41628:41628 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R41625:41625 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R41622:41622 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R41619:41619 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R41616:41616 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R41613:41613 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R41610:41610 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R41607:41607 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R41604:41604 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R41590:41599 compcert.common.AST <> cc_default def
R41580:41580 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41584:41585 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41588:41588 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41581:41583 Coq.Init.Datatypes <> nil constr
not 41395:41395 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R42324:42335 VST.veric.SeparationLogic <> NDmk_funspec def
binder 42545:42545 <> x:575
R42556:42556 VST.floyd.client_lemmas <> x:575 var
R42563:42563 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42566:42566 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42569:42569 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42572:42572 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42575:42575 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42578:42578 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42581:42581 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42584:42584 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42587:42587 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42590:42590 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42594:42594 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42598:42598 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42602:42602 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 42449:42449 <> x:577
R42460:42460 VST.floyd.client_lemmas <> x:577 var
R42467:42467 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42470:42470 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42473:42473 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42476:42476 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42479:42479 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42482:42482 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42485:42485 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42488:42488 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42491:42491 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42494:42494 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42498:42498 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42502:42502 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42506:42506 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42427:42427 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R42423:42423 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R42419:42419 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R42416:42416 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R42413:42413 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R42410:42410 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R42407:42407 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R42404:42404 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R42401:42401 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R42398:42398 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R42395:42395 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R42381:42390 compcert.common.AST <> cc_default def
R42337:42338 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42374:42376 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42379:42379 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42339:42342 Coq.Init.Datatypes <> cons constr
R42355:42358 Coq.Init.Datatypes <> cons constr
R42367:42369 Coq.Init.Datatypes <> nil constr
not 42141:42141 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R43115:43126 VST.veric.SeparationLogic <> NDmk_funspec def
binder 43310:43310 <> x:579
R43321:43321 VST.floyd.client_lemmas <> x:579 var
R43328:43328 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43331:43331 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43334:43334 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43337:43337 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43340:43340 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43343:43343 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43346:43346 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43349:43349 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43352:43352 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43355:43355 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43359:43359 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43363:43363 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43367:43367 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43371:43371 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 43210:43210 <> x:581
R43221:43221 VST.floyd.client_lemmas <> x:581 var
R43228:43228 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43231:43231 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43234:43234 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43237:43237 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43240:43240 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43243:43243 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43246:43246 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43249:43249 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43252:43252 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43255:43255 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43259:43259 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43263:43263 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43267:43267 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43271:43271 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43188:43188 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43184:43184 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43180:43180 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43176:43176 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43173:43173 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43170:43170 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43167:43167 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43164:43164 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43161:43161 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43158:43158 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43155:43155 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43152:43152 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43138:43147 compcert.common.AST <> cc_default def
R43128:43128 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43132:43133 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43136:43136 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43129:43131 Coq.Init.Datatypes <> nil constr
not 42931:42931 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R43912:43923 VST.veric.SeparationLogic <> NDmk_funspec def
binder 44141:44141 <> x:583
R44152:44152 VST.floyd.client_lemmas <> x:583 var
R44159:44159 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44162:44162 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44165:44165 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44168:44168 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44171:44171 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44174:44174 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44177:44177 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44180:44180 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44183:44183 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44186:44186 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44190:44190 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44194:44194 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44198:44198 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44202:44202 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 44041:44041 <> x:585
R44052:44052 VST.floyd.client_lemmas <> x:585 var
R44059:44059 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44062:44062 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44065:44065 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44068:44068 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44071:44071 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44074:44074 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44077:44077 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44080:44080 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44083:44083 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44086:44086 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44090:44090 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44094:44094 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44098:44098 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44102:44102 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44019:44019 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44015:44015 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44011:44011 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44007:44007 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44004:44004 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44001:44001 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43998:43998 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43995:43995 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43992:43992 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43989:43989 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43986:43986 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43983:43983 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R43969:43978 compcert.common.AST <> cc_default def
R43925:43926 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43962:43964 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43967:43967 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43927:43930 Coq.Init.Datatypes <> cons constr
R43943:43946 Coq.Init.Datatypes <> cons constr
R43955:43957 Coq.Init.Datatypes <> nil constr
not 43717:43717 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R44744:44755 VST.veric.SeparationLogic <> NDmk_funspec def
binder 44947:44947 <> x:587
R44958:44958 VST.floyd.client_lemmas <> x:587 var
R44965:44965 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44968:44968 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44971:44971 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44974:44974 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44977:44977 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44980:44980 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44983:44983 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44986:44986 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44989:44989 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44992:44992 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44996:44996 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45000:45000 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45004:45004 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45008:45008 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45012:45012 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 44843:44843 <> x:589
R44854:44854 VST.floyd.client_lemmas <> x:589 var
R44861:44861 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44864:44864 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44867:44867 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44870:44870 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44873:44873 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44876:44876 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44879:44879 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44882:44882 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44885:44885 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44888:44888 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44892:44892 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44896:44896 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44900:44900 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44904:44904 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44908:44908 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44821:44821 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44817:44817 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44813:44813 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44809:44809 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44805:44805 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44802:44802 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44799:44799 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44796:44796 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44793:44793 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44790:44790 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44787:44787 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44784:44784 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44781:44781 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R44767:44776 compcert.common.AST <> cc_default def
R44757:44757 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44761:44762 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44765:44765 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44758:44760 Coq.Init.Datatypes <> nil constr
not 44548:44548 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R45581:45592 VST.veric.SeparationLogic <> NDmk_funspec def
binder 45818:45818 <> x:591
R45829:45829 VST.floyd.client_lemmas <> x:591 var
R45836:45836 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45839:45839 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45842:45842 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45845:45845 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45848:45848 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45851:45851 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45854:45854 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45857:45857 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45860:45860 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45863:45863 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45867:45867 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45871:45871 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45875:45875 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45879:45879 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45883:45883 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 45714:45714 <> x:593
R45725:45725 VST.floyd.client_lemmas <> x:593 var
R45732:45732 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45735:45735 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45738:45738 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45741:45741 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45744:45744 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45747:45747 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45750:45750 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45753:45753 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45756:45756 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45759:45759 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45763:45763 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45767:45767 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45771:45771 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45775:45775 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45779:45779 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45692:45692 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45688:45688 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45684:45684 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45680:45680 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45676:45676 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45673:45673 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45670:45670 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45667:45667 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45664:45664 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45661:45661 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45658:45658 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45655:45655 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45652:45652 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R45638:45647 compcert.common.AST <> cc_default def
R45594:45595 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45631:45633 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45636:45636 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45596:45599 Coq.Init.Datatypes <> cons constr
R45612:45615 Coq.Init.Datatypes <> cons constr
R45624:45626 Coq.Init.Datatypes <> nil constr
not 45374:45374 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R46453:46464 VST.veric.SeparationLogic <> NDmk_funspec def
binder 46664:46664 <> x:595
R46675:46675 VST.floyd.client_lemmas <> x:595 var
R46682:46682 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46685:46685 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46688:46688 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46691:46691 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46694:46694 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46697:46697 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46700:46700 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46703:46703 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46706:46706 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46709:46709 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46713:46713 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46717:46717 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46721:46721 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46725:46725 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46729:46729 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46733:46733 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 46556:46556 <> x:597
R46567:46567 VST.floyd.client_lemmas <> x:597 var
R46574:46574 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46577:46577 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46580:46580 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46583:46583 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46586:46586 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46589:46589 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46592:46592 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46595:46595 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46598:46598 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46601:46601 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46605:46605 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46609:46609 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46613:46613 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46617:46617 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46621:46621 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46625:46625 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46534:46534 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R46530:46530 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R46526:46526 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R46522:46522 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R46518:46518 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R46514:46514 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R46511:46511 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R46508:46508 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R46505:46505 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R46502:46502 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R46499:46499 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R46496:46496 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R46493:46493 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R46490:46490 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R46476:46485 compcert.common.AST <> cc_default def
R46466:46466 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46470:46471 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46474:46474 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46467:46469 Coq.Init.Datatypes <> nil constr
not 46245:46245 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R47345:47356 VST.veric.SeparationLogic <> NDmk_funspec def
binder 47590:47590 <> x:599
R47601:47601 VST.floyd.client_lemmas <> x:599 var
R47608:47608 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47611:47611 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47614:47614 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47617:47617 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47620:47620 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47623:47623 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47626:47626 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47629:47629 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47632:47632 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47635:47635 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47639:47639 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47643:47643 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47647:47647 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47651:47651 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47655:47655 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47659:47659 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 47482:47482 <> x:601
R47493:47493 VST.floyd.client_lemmas <> x:601 var
R47500:47500 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47503:47503 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47506:47506 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47509:47509 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47512:47512 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47515:47515 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47518:47518 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47521:47521 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47524:47524 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47527:47527 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47531:47531 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47535:47535 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47539:47539 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47543:47543 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47547:47547 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47551:47551 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47460:47460 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R47456:47456 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R47452:47452 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R47448:47448 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R47444:47444 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R47440:47440 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R47437:47437 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R47434:47434 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R47431:47431 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R47428:47428 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R47425:47425 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R47422:47422 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R47419:47419 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R47416:47416 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R47402:47411 compcert.common.AST <> cc_default def
R47358:47359 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47395:47397 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47400:47400 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47360:47363 Coq.Init.Datatypes <> cons constr
R47376:47379 Coq.Init.Datatypes <> cons constr
R47388:47390 Coq.Init.Datatypes <> nil constr
not 47126:47126 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R48268:48279 VST.veric.SeparationLogic <> NDmk_funspec def
binder 48487:48487 <> x:603
R48498:48498 VST.floyd.client_lemmas <> x:603 var
R48505:48505 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48508:48508 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48511:48511 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48514:48514 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48517:48517 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48520:48520 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48523:48523 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48526:48526 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48529:48529 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48532:48532 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48536:48536 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48540:48540 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48544:48544 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48548:48548 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48552:48552 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48556:48556 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48560:48560 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 48375:48375 <> x:605
R48386:48386 VST.floyd.client_lemmas <> x:605 var
R48393:48393 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48396:48396 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48399:48399 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48402:48402 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48405:48405 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48408:48408 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48411:48411 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48414:48414 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48417:48417 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48420:48420 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48424:48424 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48428:48428 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48432:48432 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48436:48436 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48440:48440 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48444:48444 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48448:48448 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48353:48353 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R48349:48349 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R48345:48345 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R48341:48341 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R48337:48337 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R48333:48333 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R48329:48329 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R48326:48326 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R48323:48323 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R48320:48320 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R48317:48317 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R48314:48314 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R48311:48311 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R48308:48308 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R48305:48305 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R48291:48300 compcert.common.AST <> cc_default def
R48281:48281 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48285:48286 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48289:48289 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48282:48284 Coq.Init.Datatypes <> nil constr
not 48048:48048 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R49200:49211 VST.veric.SeparationLogic <> NDmk_funspec def
binder 49453:49453 <> x:607
R49464:49464 VST.floyd.client_lemmas <> x:607 var
R49471:49471 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49474:49474 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49477:49477 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49480:49480 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49483:49483 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49486:49486 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49489:49489 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49492:49492 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49495:49495 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49498:49498 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49502:49502 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49506:49506 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49510:49510 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49514:49514 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49518:49518 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49522:49522 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49526:49526 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 49341:49341 <> x:609
R49352:49352 VST.floyd.client_lemmas <> x:609 var
R49359:49359 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49362:49362 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49365:49365 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49368:49368 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49371:49371 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49374:49374 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49377:49377 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49380:49380 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49383:49383 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49386:49386 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49390:49390 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49394:49394 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49398:49398 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49402:49402 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49406:49406 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49410:49410 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49414:49414 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49319:49319 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R49315:49315 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R49311:49311 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R49307:49307 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R49303:49303 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R49299:49299 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R49295:49295 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R49292:49292 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R49289:49289 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R49286:49286 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R49283:49283 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R49280:49280 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R49277:49277 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R49274:49274 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R49271:49271 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R49257:49266 compcert.common.AST <> cc_default def
R49213:49214 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49250:49252 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49255:49255 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49215:49218 Coq.Init.Datatypes <> cons constr
R49231:49234 Coq.Init.Datatypes <> cons constr
R49243:49245 Coq.Init.Datatypes <> nil constr
not 48969:48969 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R50163:50174 VST.veric.SeparationLogic <> NDmk_funspec def
binder 50390:50390 <> x:611
R50401:50401 VST.floyd.client_lemmas <> x:611 var
R50408:50408 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50411:50411 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50414:50414 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50417:50417 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50420:50420 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50423:50423 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50426:50426 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50429:50429 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50432:50432 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50435:50435 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50439:50439 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50443:50443 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50447:50447 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50451:50451 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50455:50455 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50459:50459 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50463:50463 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50467:50467 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 50274:50274 <> x:613
R50285:50285 VST.floyd.client_lemmas <> x:613 var
R50292:50292 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50295:50295 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50298:50298 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50301:50301 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50304:50304 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50307:50307 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50310:50310 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50313:50313 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50316:50316 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50319:50319 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50323:50323 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50327:50327 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50331:50331 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50335:50335 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50339:50339 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50343:50343 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50347:50347 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50351:50351 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50252:50252 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50248:50248 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50244:50244 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50240:50240 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50236:50236 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50232:50232 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50228:50228 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50224:50224 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50221:50221 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50218:50218 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50215:50215 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50212:50212 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50209:50209 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50206:50206 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50203:50203 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50200:50200 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R50186:50195 compcert.common.AST <> cc_default def
R50176:50176 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50180:50181 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50184:50184 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50177:50179 Coq.Init.Datatypes <> nil constr
not 49931:49931 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R51135:51146 VST.veric.SeparationLogic <> NDmk_funspec def
binder 51396:51396 <> x:615
R51407:51407 VST.floyd.client_lemmas <> x:615 var
R51414:51414 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51417:51417 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51420:51420 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51423:51423 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51426:51426 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51429:51429 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51432:51432 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51435:51435 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51438:51438 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51441:51441 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51445:51445 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51449:51449 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51453:51453 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51457:51457 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51461:51461 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51465:51465 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51469:51469 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51473:51473 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 51280:51280 <> x:617
R51291:51291 VST.floyd.client_lemmas <> x:617 var
R51298:51298 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51301:51301 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51304:51304 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51307:51307 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51310:51310 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51313:51313 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51316:51316 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51319:51319 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51322:51322 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51325:51325 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51329:51329 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51333:51333 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51337:51337 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51341:51341 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51345:51345 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51349:51349 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51353:51353 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51357:51357 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51258:51258 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51254:51254 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51250:51250 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51246:51246 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51242:51242 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51238:51238 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51234:51234 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51230:51230 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51227:51227 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51224:51224 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51221:51221 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51218:51218 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51215:51215 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51212:51212 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51209:51209 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51206:51206 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R51192:51201 compcert.common.AST <> cc_default def
R51148:51149 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51185:51187 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51190:51190 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51150:51153 Coq.Init.Datatypes <> cons constr
R51166:51169 Coq.Init.Datatypes <> cons constr
R51178:51180 Coq.Init.Datatypes <> nil constr
not 50892:50892 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R52138:52149 VST.veric.SeparationLogic <> NDmk_funspec def
binder 52373:52373 <> x:619
R52384:52384 VST.floyd.client_lemmas <> x:619 var
R52391:52391 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52394:52394 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52397:52397 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52400:52400 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52403:52403 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52406:52406 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52409:52409 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52412:52412 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52415:52415 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52418:52418 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52422:52422 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52426:52426 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52430:52430 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52434:52434 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52438:52438 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52442:52442 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52446:52446 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52450:52450 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52454:52454 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 52253:52253 <> x:621
R52264:52264 VST.floyd.client_lemmas <> x:621 var
R52271:52271 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52274:52274 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52277:52277 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52280:52280 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52283:52283 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52286:52286 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52289:52289 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52292:52292 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52295:52295 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52298:52298 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52302:52302 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52306:52306 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52310:52310 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52314:52314 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52318:52318 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52322:52322 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52326:52326 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52330:52330 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52334:52334 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52231:52231 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52227:52227 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52223:52223 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52219:52219 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52215:52215 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52211:52211 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52207:52207 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52203:52203 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52199:52199 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52196:52196 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52193:52193 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52190:52190 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52187:52187 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52184:52184 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52181:52181 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52178:52178 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52175:52175 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52161:52170 compcert.common.AST <> cc_default def
R52151:52151 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52155:52156 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52159:52159 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52152:52154 Coq.Init.Datatypes <> nil constr
not 51894:51894 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R53150:53161 VST.veric.SeparationLogic <> NDmk_funspec def
binder 53419:53419 <> x:623
R53430:53430 VST.floyd.client_lemmas <> x:623 var
R53437:53437 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53440:53440 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53443:53443 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53446:53446 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53449:53449 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53452:53452 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53455:53455 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53458:53458 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53461:53461 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53464:53464 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53468:53468 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53472:53472 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53476:53476 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53480:53480 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53484:53484 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53488:53488 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53492:53492 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53496:53496 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53500:53500 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 53299:53299 <> x:625
R53310:53310 VST.floyd.client_lemmas <> x:625 var
R53317:53317 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53320:53320 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53323:53323 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53326:53326 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53329:53329 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53332:53332 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53335:53335 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53338:53338 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53341:53341 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53344:53344 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53348:53348 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53352:53352 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53356:53356 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53360:53360 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53364:53364 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53368:53368 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53372:53372 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53376:53376 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53380:53380 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53277:53277 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53273:53273 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53269:53269 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53265:53265 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53261:53261 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53257:53257 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53253:53253 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53249:53249 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53245:53245 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53242:53242 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53239:53239 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53236:53236 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53233:53233 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53230:53230 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53227:53227 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53224:53224 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53221:53221 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53207:53216 compcert.common.AST <> cc_default def
R53163:53164 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53200:53202 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53205:53205 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53165:53168 Coq.Init.Datatypes <> cons constr
R53181:53184 Coq.Init.Datatypes <> cons constr
R53193:53195 Coq.Init.Datatypes <> nil constr
not 52895:52895 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R54193:54204 VST.veric.SeparationLogic <> NDmk_funspec def
binder 54436:54436 <> x:627
R54447:54447 VST.floyd.client_lemmas <> x:627 var
R54454:54454 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54457:54457 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54460:54460 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54463:54463 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54466:54466 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54469:54469 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54472:54472 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54475:54475 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54478:54478 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54481:54481 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54485:54485 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54489:54489 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54493:54493 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54497:54497 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54501:54501 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54505:54505 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54509:54509 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54513:54513 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54517:54517 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54521:54521 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 54312:54312 <> x:629
R54323:54323 VST.floyd.client_lemmas <> x:629 var
R54330:54330 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54333:54333 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54336:54336 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54339:54339 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54342:54342 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54345:54345 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54348:54348 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54351:54351 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54354:54354 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54357:54357 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54361:54361 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54365:54365 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54369:54369 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54373:54373 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54377:54377 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54381:54381 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54385:54385 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54389:54389 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54393:54393 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54397:54397 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54290:54290 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54286:54286 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54282:54282 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54278:54278 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54274:54274 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54270:54270 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54266:54266 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54262:54262 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54258:54258 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54254:54254 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54251:54251 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54248:54248 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54245:54245 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54242:54242 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54239:54239 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54236:54236 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54233:54233 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54230:54230 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R54216:54225 compcert.common.AST <> cc_default def
R54206:54206 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54210:54211 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54214:54214 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54207:54209 Coq.Init.Datatypes <> nil constr
not 53937:53937 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R55245:55256 VST.veric.SeparationLogic <> NDmk_funspec def
binder 55522:55522 <> x:631
R55533:55533 VST.floyd.client_lemmas <> x:631 var
R55540:55540 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55543:55543 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55546:55546 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55549:55549 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55552:55552 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55555:55555 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55558:55558 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55561:55561 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55564:55564 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55567:55567 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55571:55571 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55575:55575 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55579:55579 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55583:55583 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55587:55587 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55591:55591 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55595:55595 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55599:55599 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55603:55603 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55607:55607 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 55398:55398 <> x:633
R55409:55409 VST.floyd.client_lemmas <> x:633 var
R55416:55416 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55419:55419 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55422:55422 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55425:55425 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55428:55428 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55431:55431 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55434:55434 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55437:55437 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55440:55440 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55443:55443 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55447:55447 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55451:55451 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55455:55455 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55459:55459 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55463:55463 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55467:55467 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55471:55471 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55475:55475 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55479:55479 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55483:55483 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55376:55376 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55372:55372 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55368:55368 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55364:55364 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55360:55360 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55356:55356 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55352:55352 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55348:55348 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55344:55344 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55340:55340 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55337:55337 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55334:55334 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55331:55331 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55328:55328 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55325:55325 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55322:55322 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55319:55319 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55316:55316 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55302:55311 compcert.common.AST <> cc_default def
R55258:55259 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55295:55297 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55300:55300 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55260:55263 Coq.Init.Datatypes <> cons constr
R55276:55279 Coq.Init.Datatypes <> cons constr
R55288:55290 Coq.Init.Datatypes <> nil constr
not 54978:54978 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R56328:56339 VST.veric.SeparationLogic <> NDmk_funspec def
binder 56579:56579 <> x:635
R56590:56590 VST.floyd.client_lemmas <> x:635 var
R56597:56597 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56600:56600 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56603:56603 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56606:56606 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56609:56609 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56612:56612 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56615:56615 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56618:56618 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56621:56621 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56624:56624 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56628:56628 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56632:56632 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56636:56636 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56640:56640 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56644:56644 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56648:56648 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56652:56652 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56656:56656 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56660:56660 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56664:56664 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56668:56668 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 56451:56451 <> x:637
R56462:56462 VST.floyd.client_lemmas <> x:637 var
R56469:56469 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56472:56472 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56475:56475 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56478:56478 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56481:56481 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56484:56484 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56487:56487 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56490:56490 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56493:56493 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56496:56496 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56500:56500 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56504:56504 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56508:56508 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56512:56512 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56516:56516 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56520:56520 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56524:56524 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56528:56528 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56532:56532 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56536:56536 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56540:56540 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56429:56429 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56425:56425 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56421:56421 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56417:56417 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56413:56413 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56409:56409 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56405:56405 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56401:56401 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56397:56397 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56393:56393 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56389:56389 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56386:56386 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56383:56383 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56380:56380 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56377:56377 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56374:56374 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56371:56371 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56368:56368 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56365:56365 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R56351:56360 compcert.common.AST <> cc_default def
R56341:56341 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56345:56346 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56349:56349 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56342:56344 Coq.Init.Datatypes <> nil constr
not 56060:56060 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R57434:57445 VST.veric.SeparationLogic <> NDmk_funspec def
binder 57719:57719 <> x:639
R57730:57730 VST.floyd.client_lemmas <> x:639 var
R57737:57737 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57740:57740 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57743:57743 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57746:57746 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57749:57749 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57752:57752 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57755:57755 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57758:57758 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57761:57761 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57764:57764 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57768:57768 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57772:57772 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57776:57776 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57780:57780 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57784:57784 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57788:57788 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57792:57792 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57796:57796 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57800:57800 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57804:57804 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57808:57808 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 57591:57591 <> x:641
R57602:57602 VST.floyd.client_lemmas <> x:641 var
R57609:57609 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57612:57612 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57615:57615 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57618:57618 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57621:57621 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57624:57624 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57627:57627 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57630:57630 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57633:57633 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57636:57636 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57640:57640 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57644:57644 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57648:57648 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57652:57652 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57656:57656 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57660:57660 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57664:57664 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57668:57668 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57672:57672 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57676:57676 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57680:57680 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57569:57569 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57565:57565 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57561:57561 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57557:57557 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57553:57553 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57549:57549 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57545:57545 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57541:57541 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57537:57537 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57533:57533 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57529:57529 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57526:57526 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57523:57523 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57520:57520 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57517:57517 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57514:57514 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57511:57511 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57508:57508 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57505:57505 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R57491:57500 compcert.common.AST <> cc_default def
R57447:57448 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57484:57486 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57489:57489 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57449:57452 Coq.Init.Datatypes <> cons constr
R57465:57468 Coq.Init.Datatypes <> cons constr
R57477:57479 Coq.Init.Datatypes <> nil constr
not 57155:57155 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R58570:58581 VST.veric.SeparationLogic <> NDmk_funspec def
binder 58829:58829 <> x:643
R58840:58840 VST.floyd.client_lemmas <> x:643 var
R58847:58847 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58850:58850 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58853:58853 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58856:58856 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58859:58859 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58862:58862 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58865:58865 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58868:58868 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58871:58871 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58874:58874 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58878:58878 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58882:58882 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58886:58886 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58890:58890 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58894:58894 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58898:58898 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58902:58902 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58906:58906 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58910:58910 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58914:58914 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58918:58918 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58922:58922 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 58697:58697 <> x:645
R58708:58708 VST.floyd.client_lemmas <> x:645 var
R58715:58715 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58718:58718 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58721:58721 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58724:58724 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58727:58727 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58730:58730 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58733:58733 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58736:58736 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58739:58739 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58742:58742 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58746:58746 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58750:58750 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58754:58754 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58758:58758 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58762:58762 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58766:58766 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58770:58770 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58774:58774 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58778:58778 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58782:58782 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58786:58786 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58790:58790 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58675:58675 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58671:58671 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58667:58667 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58663:58663 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58659:58659 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58655:58655 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58651:58651 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58647:58647 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58643:58643 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58639:58639 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58635:58635 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58631:58631 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58628:58628 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58625:58625 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58622:58622 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58619:58619 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58616:58616 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58613:58613 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58610:58610 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58607:58607 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58593:58602 compcert.common.AST <> cc_default def
R58583:58583 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58587:58588 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58591:58591 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58584:58586 Coq.Init.Datatypes <> nil constr
not 58290:58290 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R59716:59727 VST.veric.SeparationLogic <> NDmk_funspec def
binder 60009:60009 <> x:647
R60020:60020 VST.floyd.client_lemmas <> x:647 var
R60027:60027 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60030:60030 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60033:60033 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60036:60036 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60039:60039 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60042:60042 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60045:60045 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60048:60048 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60051:60051 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60054:60054 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60058:60058 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60062:60062 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60066:60066 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60070:60070 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60074:60074 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60078:60078 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60082:60082 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60086:60086 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60090:60090 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60094:60094 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60098:60098 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60102:60102 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 59877:59877 <> x:649
R59888:59888 VST.floyd.client_lemmas <> x:649 var
R59895:59895 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59898:59898 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59901:59901 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59904:59904 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59907:59907 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59910:59910 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59913:59913 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59916:59916 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59919:59919 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59922:59922 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59926:59926 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59930:59930 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59934:59934 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59938:59938 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59942:59942 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59946:59946 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59950:59950 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59954:59954 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59958:59958 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59962:59962 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59966:59966 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59970:59970 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59855:59855 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59851:59851 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59847:59847 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59843:59843 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59839:59839 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59835:59835 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59831:59831 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59827:59827 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59823:59823 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59819:59819 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59815:59815 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59811:59811 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59808:59808 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59805:59805 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59802:59802 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59799:59799 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59796:59796 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59793:59793 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59790:59790 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59787:59787 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R59773:59782 compcert.common.AST <> cc_default def
R59729:59730 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59766:59768 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59771:59771 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59731:59734 Coq.Init.Datatypes <> cons constr
R59747:59750 Coq.Init.Datatypes <> cons constr
R59759:59761 Coq.Init.Datatypes <> nil constr
not 59425:59425 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
R60892:60903 VST.veric.SeparationLogic <> NDmk_funspec def
binder 61159:61159 <> x:651
R61170:61170 VST.floyd.client_lemmas <> x:651 var
R61177:61177 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61180:61180 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61183:61183 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61186:61186 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61189:61189 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61192:61192 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61195:61195 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61198:61198 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61201:61201 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61204:61204 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61208:61208 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61212:61212 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61216:61216 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61220:61220 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61224:61224 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61228:61228 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61232:61232 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61236:61236 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61240:61240 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61244:61244 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61248:61248 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61252:61252 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61256:61256 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 61023:61023 <> x:653
R61034:61034 VST.floyd.client_lemmas <> x:653 var
R61041:61041 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61044:61044 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61047:61047 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61050:61050 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61053:61053 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61056:61056 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61059:61059 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61062:61062 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61065:61065 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61068:61068 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61072:61072 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61076:61076 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61080:61080 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61084:61084 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61088:61088 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61092:61092 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61096:61096 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61100:61100 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61104:61104 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61108:61108 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61112:61112 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61116:61116 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61120:61120 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61001:61001 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60997:60997 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60993:60993 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60989:60989 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60985:60985 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60981:60981 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60977:60977 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60973:60973 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60969:60969 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60965:60965 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60961:60961 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60957:60957 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60953:60953 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60950:60950 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60947:60947 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60944:60944 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60941:60941 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60938:60938 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60935:60935 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60932:60932 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60929:60929 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R60915:60924 compcert.common.AST <> cc_default def
R60905:60905 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60909:60910 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60913:60913 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60906:60908 Coq.Init.Datatypes <> nil constr
not 60600:60600 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x
R62078:62089 VST.veric.SeparationLogic <> NDmk_funspec def
binder 62379:62379 <> x:655
R62390:62390 VST.floyd.client_lemmas <> x:655 var
R62397:62397 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62400:62400 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62403:62403 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62406:62406 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62409:62409 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62412:62412 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62415:62415 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62418:62418 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62421:62421 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62424:62424 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62428:62428 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62432:62432 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62436:62436 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62440:62440 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62444:62444 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62448:62448 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62452:62452 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62456:62456 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62460:62460 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62464:62464 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62468:62468 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62472:62472 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62476:62476 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 62243:62243 <> x:657
R62254:62254 VST.floyd.client_lemmas <> x:657 var
R62261:62261 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62264:62264 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62267:62267 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62270:62270 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62273:62273 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62276:62276 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62279:62279 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62282:62282 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62285:62285 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62288:62288 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62292:62292 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62296:62296 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62300:62300 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62304:62304 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62308:62308 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62312:62312 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62316:62316 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62320:62320 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62324:62324 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62328:62328 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62332:62332 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62336:62336 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62340:62340 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62221:62221 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62217:62217 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62213:62213 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62209:62209 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62205:62205 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62201:62201 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62197:62197 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62193:62193 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62189:62189 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62185:62185 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62181:62181 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62177:62177 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62173:62173 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62170:62170 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62167:62167 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62164:62164 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62161:62161 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62158:62158 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62155:62155 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62152:62152 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62149:62149 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62135:62144 compcert.common.AST <> cc_default def
R62091:62092 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62128:62130 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62133:62133 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62093:62096 Coq.Init.Datatypes <> cons constr
R62109:62112 Coq.Init.Datatypes <> cons constr
R62121:62123 Coq.Init.Datatypes <> nil constr
not 61775:61775 <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x
def 62990:63006 <> split_as_gv_temps
R63012:63015 Coq.Init.Datatypes <> list ind
R63017:63024 VST.floyd.canon <> localdef ind
binder 63009:63009 <> l:659
R63029:63034 Coq.Init.Datatypes <> option ind
R63037:63037 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R63050:63054 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R63073:63073 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R63038:63041 Coq.Init.Datatypes <> list ind
R63043:63049 VST.veric.SeparationLogic <> globals def
R63055:63058 Coq.Init.Datatypes <> list ind
R63066:63068 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R63061:63065 compcert.common.AST <> ident def
R63069:63071 compcert.common.Values <> val ind
R63087:63087 VST.floyd.client_lemmas <> l:659 var
R63098:63100 Coq.Init.Datatypes <> nil constr
R63105:63108 Coq.Init.Datatypes <> Some constr
R63110:63110 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63114:63115 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63119:63119 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63111:63113 Coq.Init.Datatypes <> nil constr
R63116:63118 Coq.Init.Datatypes <> nil constr
R63133:63136 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R63125:63128 VST.floyd.canon <> temp constr
R63149:63165 VST.floyd.client_lemmas <> split_as_gv_temps:660 def
R63199:63202 Coq.Init.Datatypes <> None constr
R63207:63210 Coq.Init.Datatypes <> None constr
R63236:63239 Coq.Init.Datatypes <> Some constr
R63241:63241 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63245:63246 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63252:63252 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63257:63260 Coq.Init.Datatypes <> Some constr
R63262:63262 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63266:63267 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63280:63280 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63273:63274 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R63268:63268 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63270:63270 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63272:63272 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63322:63325 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R63312:63315 VST.floyd.canon <> lvar constr
R63332:63335 Coq.Init.Datatypes <> None constr
R63348:63351 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R63341:63345 VST.floyd.canon <> gvars constr
R63365:63381 VST.floyd.client_lemmas <> split_as_gv_temps:660 def
R63415:63418 Coq.Init.Datatypes <> None constr
R63423:63426 Coq.Init.Datatypes <> None constr
R63452:63455 Coq.Init.Datatypes <> Some constr
R63457:63457 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63461:63462 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63468:63468 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63473:63476 Coq.Init.Datatypes <> Some constr
R63478:63478 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63485:63486 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63492:63492 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63480:63481 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
def 63537:63553 <> ImpossibleFunspec
R63561:63570 VST.veric.mpred <> mk_funspec constr
R63718:63742 VST.veric.mpred <> const_super_non_expansive def
R63673:63702 VST.veric.mpred <> args_const_super_non_expansive def
R63660:63661 VST.msl.seplog <> FF meth
R63644:63645 VST.msl.seplog <> FF meth
R63596:63610 VST.veric.rmaps <> ConstType constr
R63612:63621 VST.floyd.base2 <> Impossible ind
R63584:63593 compcert.common.AST <> cc_default def
R63572:63572 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63576:63576 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63582:63582 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63573:63575 Coq.Init.Datatypes <> nil constr
R63577:63581 compcert.cfrontend.Ctypes <> Tvoid constr
syndef 63760:63766 <> LAMBDAx
R63782:63788 VST.floyd.canon <> PARAMSx def
R63796:63803 VST.floyd.canon <> GLOBALSx def
prf 63835:63849 <> prop_true_andp1
binder 63852:63852 <> A:662
R63859:63864 VST.msl.seplog <> NatDed class
R63866:63866 VST.floyd.client_lemmas <> A:662 var
binder 63855:63856 <> NA:663
binder 63881:63882 <> P1:664
binder 63884:63885 <> P2:665
binder 63894:63894 <> Q:666
R63904:63908 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63939:63939 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63927:63929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63922:63925 VST.msl.seplog <> ::logic:x_'&&'_x not
R63909:63912 VST.msl.seplog <> ::logic:'!!'_x not
R63921:63921 VST.msl.seplog <> ::logic:'!!'_x not
R63915:63918 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R63913:63914 VST.floyd.client_lemmas <> P1:664 var
R63919:63920 VST.floyd.client_lemmas <> P2:665 var
R63926:63926 VST.floyd.client_lemmas <> Q:666 var
R63934:63937 VST.msl.seplog <> ::logic:x_'&&'_x not
R63930:63931 VST.msl.seplog <> ::logic:'!!'_x not
R63932:63933 VST.floyd.client_lemmas <> P2:665 var
R63938:63938 VST.floyd.client_lemmas <> Q:666 var
R63902:63903 VST.floyd.client_lemmas <> P1:664 var
R63989:63996 VST.msl.Axioms <> prop_ext prfax
R63989:63996 VST.msl.Axioms <> prop_ext prfax
R64024:64038 VST.floyd.client_lemmas <> prop_true_andp1 thm
R64107:64121 VST.floyd.client_lemmas <> prop_true_andp1 thm
prf 64155:64164 <> and_assoc'
binder 64174:64174 <> A:667
binder 64176:64176 <> B:668
binder 64178:64178 <> C:669
R64189:64189 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64203:64207 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64221:64221 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64190:64190 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64197:64201 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64192:64195 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64191:64191 VST.floyd.client_lemmas <> A:667 var
R64196:64196 VST.floyd.client_lemmas <> B:668 var
R64202:64202 VST.floyd.client_lemmas <> C:669 var
R64209:64213 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64220:64220 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64208:64208 VST.floyd.client_lemmas <> A:667 var
R64215:64218 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64214:64214 VST.floyd.client_lemmas <> B:668 var
R64219:64219 VST.floyd.client_lemmas <> C:669 var
R64245:64252 VST.msl.Axioms <> prop_ext prfax
R64261:64269 Coq.Init.Logic <> and_assoc thm
R64245:64252 VST.msl.Axioms <> prop_ext prfax
R64261:64269 Coq.Init.Logic <> and_assoc thm
R64322:64325 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R64327:64329 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R64322:64325 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R64327:64329 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R64346:64348 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R64350:64353 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R64346:64348 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R64350:64353 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R64370:64373 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R64375:64378 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R64370:64373 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R64375:64378 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R64395:64397 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R64399:64401 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R64395:64397 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R64399:64401 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R64418:64422 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R64418:64422 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R64439:64442 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64439:64442 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64454:64460 Coq.Init.Logic <> I constr
def 64480:64490 <> splittablex
binder 64493:64493 <> A:670
R64505:64508 Coq.Init.Logic <> True ind
prf 64518:64538 <> and_assoc_splittablex
binder 64541:64541 <> T:671
R64548:64553 VST.msl.seplog <> NatDed class
R64555:64555 VST.floyd.client_lemmas <> T:671 var
binder 64544:64545 <> NT:672
binder 64566:64566 <> A:673
binder 64568:64568 <> B:674
binder 64570:64570 <> C:675
R64603:64608 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R64627:64629 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64609:64612 VST.msl.seplog <> ::logic:'!!'_x not
R64626:64626 VST.msl.seplog <> ::logic:'!!'_x not
R64613:64613 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64620:64624 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64615:64618 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64614:64614 VST.floyd.client_lemmas <> A:673 var
R64619:64619 VST.floyd.client_lemmas <> B:674 var
R64625:64625 VST.floyd.client_lemmas <> C:675 var
R64630:64633 VST.msl.seplog <> ::logic:'!!'_x not
R64647:64647 VST.msl.seplog <> ::logic:'!!'_x not
R64635:64639 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64646:64646 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64634:64634 VST.floyd.client_lemmas <> A:673 var
R64641:64644 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64640:64640 VST.floyd.client_lemmas <> B:674 var
R64645:64645 VST.floyd.client_lemmas <> C:675 var
R64583:64593 VST.floyd.client_lemmas <> splittablex def
R64597:64600 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64596:64596 VST.floyd.client_lemmas <> A:673 var
R64601:64601 VST.floyd.client_lemmas <> B:674 var
R64673:64682 VST.floyd.client_lemmas <> and_assoc' thm
R64673:64682 VST.floyd.client_lemmas <> and_assoc' thm
R64673:64682 VST.floyd.client_lemmas <> and_assoc' thm
prf 64703:64713 <> and_assoc''
binder 64716:64716 <> T:676
R64723:64728 VST.msl.seplog <> NatDed class
R64730:64730 VST.floyd.client_lemmas <> T:676 var
binder 64719:64720 <> NT:677
binder 64741:64741 <> A:678
binder 64743:64743 <> B:679
binder 64745:64745 <> C:680
R64774:64776 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64756:64759 VST.msl.seplog <> ::logic:'!!'_x not
R64773:64773 VST.msl.seplog <> ::logic:'!!'_x not
R64760:64760 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64767:64771 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64762:64765 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64761:64761 VST.floyd.client_lemmas <> A:678 var
R64766:64766 VST.floyd.client_lemmas <> B:679 var
R64772:64772 VST.floyd.client_lemmas <> C:680 var
R64777:64780 VST.msl.seplog <> ::logic:'!!'_x not
R64794:64794 VST.msl.seplog <> ::logic:'!!'_x not
R64782:64786 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64793:64793 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64781:64781 VST.floyd.client_lemmas <> A:678 var
R64788:64791 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R64787:64787 VST.floyd.client_lemmas <> B:679 var
R64792:64792 VST.floyd.client_lemmas <> C:680 var
R64820:64829 VST.floyd.client_lemmas <> and_assoc' thm
R64820:64829 VST.floyd.client_lemmas <> and_assoc' thm
R64820:64829 VST.floyd.client_lemmas <> and_assoc' thm
R64858:64878 VST.floyd.client_lemmas <> and_assoc_splittablex thm
R64910:64920 VST.floyd.client_lemmas <> splittablex def
R64910:64920 VST.floyd.client_lemmas <> splittablex def
R64976:64996 VST.floyd.client_lemmas <> and_assoc_splittablex thm
R65028:65038 VST.floyd.client_lemmas <> splittablex def
R65028:65038 VST.floyd.client_lemmas <> splittablex def
R65138:65142 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R65138:65142 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R65224:65225 VST.msl.seplog <> ::logic:'|>'_x not
R65204:65216 VST.msl.seplog <> derives_trans meth
R65468:65485 VST.floyd.canon <> assert_later_PROP' thm
R65517:65528 VST.msl.seplog <> derives_refl meth
R65541:65552 VST.floyd.canon <> assert_PROP' thm
R65649:65666 VST.floyd.canon <> assert_later_PROP' thm
R65698:65709 VST.msl.seplog <> derives_refl meth
R65722:65733 VST.floyd.canon <> assert_PROP' thm
R65849:65866 VST.floyd.canon <> assert_later_PROP' thm
R65898:65909 VST.msl.seplog <> derives_refl meth
R65922:65933 VST.floyd.canon <> assert_PROP' thm
R66060:66077 VST.floyd.canon <> assert_later_PROP' thm
R66109:66120 VST.msl.seplog <> derives_refl meth
R66133:66144 VST.floyd.canon <> assert_PROP' thm
prf 66179:66197 <> semax_later_trivial
binder 66207:66211 <> Espec:681
R66219:66227 VST.veric.mpred <> compspecs class
binder 66215:66216 <> cs:682
binder 66230:66234 <> Delta:683
binder 66236:66236 <> P:684
binder 66238:66238 <> c:685
binder 66240:66240 <> Q:686
R66277:66282 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R66284:66288 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R66309:66309 VST.floyd.client_lemmas <> Q:686 var
R66307:66307 VST.floyd.client_lemmas <> c:685 var
R66305:66305 VST.floyd.client_lemmas <> P:684 var
R66299:66303 VST.floyd.client_lemmas <> Delta:683 var
R66293:66297 VST.floyd.client_lemmas <> Espec:681 var
R66290:66291 VST.floyd.client_lemmas <> cs:682 var
R66246:66250 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R66276:66276 VST.floyd.client_lemmas <> Q:686 var
R66274:66274 VST.floyd.client_lemmas <> c:685 var
R66268:66270 VST.msl.seplog <> ::logic:'|>'_x not
R66271:66271 VST.floyd.client_lemmas <> P:684 var
R66261:66265 VST.floyd.client_lemmas <> Delta:683 var
R66255:66259 VST.floyd.client_lemmas <> Espec:681 var
R66252:66253 VST.floyd.client_lemmas <> cs:682 var
R66343:66352 VST.floyd.canon <> semax_pre0 thm
R66343:66352 VST.floyd.canon <> semax_pre0 thm
R66363:66371 VST.msl.seplog <> now_later meth
R66363:66371 VST.msl.seplog <> now_later meth
R66431:66435 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R66431:66435 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R66487:66491 VST.msl.seplog <> later meth
R66487:66491 VST.msl.seplog <> later meth
R66650:66668 VST.floyd.client_lemmas <> semax_later_trivial thm
R66553:66555 VST.msl.seplog <> ::logic:'|>'_x not
R66536:66545 VST.floyd.canon <> semax_pre0 thm
R66746:66752 VST.veric.SeparationLogic <> tc_expr def
R66746:66752 VST.veric.SeparationLogic <> tc_expr def
R66780:66786 VST.veric.SeparationLogic <> tc_expr def
R66780:66786 VST.veric.SeparationLogic <> tc_expr def
R66799:66814 VST.veric.SeparationLogic <> denote_tc_assert def
R66817:66830 VST.veric.expr <> typecheck_expr def
prf 67200:67208 <> prop_and1
binder 67211:67211 <> A:687
R67218:67223 VST.msl.seplog <> NatDed class
R67225:67225 VST.floyd.client_lemmas <> A:687 var
binder 67214:67215 <> NA:688
binder 67238:67238 <> P:689
binder 67240:67240 <> Q:690
R67251:67254 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R67265:67267 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67255:67257 VST.msl.seplog <> ::logic:'!!'_x not
R67264:67264 VST.msl.seplog <> ::logic:'!!'_x not
R67259:67262 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R67258:67258 VST.floyd.client_lemmas <> P:689 var
R67263:67263 VST.floyd.client_lemmas <> Q:690 var
R67268:67269 VST.msl.seplog <> ::logic:'!!'_x not
R67270:67270 VST.floyd.client_lemmas <> Q:690 var
R67250:67250 VST.floyd.client_lemmas <> P:689 var
R67303:67310 VST.msl.Axioms <> prop_ext prfax
R67303:67310 VST.msl.Axioms <> prop_ext prfax
R67338:67346 VST.floyd.client_lemmas <> prop_and1 thm
prf 67410:67425 <> subst_make_args'
R67443:67451 VST.veric.mpred <> compspecs class
binder 67439:67440 <> cs:691
binder 67455:67456 <> id:692
binder 67458:67458 <> v:693
R67471:67472 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R67473:67477 VST.veric.mpred <> mpred def
R67464:67470 VST.veric.mpred <> environ ind
binder 67461:67461 <> P:694
binder 67480:67483 <> fsig:695
binder 67485:67486 <> tl:696
binder 67488:67489 <> el:697
R67515:67520 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R67550:67555 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R67611:67625 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67681:67681 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67556:67560 VST.veric.seplog <> subst def
R67568:67568 VST.veric.lift LiftNotation :::'`'_x not
R67570:67609 VST.veric.lift LiftNotation :::'`'_x not
R67569:67569 VST.floyd.client_lemmas <> P:694 var
R67572:67581 VST.veric.SeparationLogic <> make_args' def
R67589:67601 VST.veric.expr <> eval_exprlist def
R67606:67607 VST.floyd.client_lemmas <> el:697 var
R67603:67604 VST.floyd.client_lemmas <> tl:696 var
R67583:67586 VST.floyd.client_lemmas <> fsig:695 var
R67565:67565 VST.floyd.client_lemmas <> v:693 var
R67562:67563 VST.floyd.client_lemmas <> id:692 var
R67626:67626 VST.veric.lift LiftNotation :::'`'_x not
R67628:67680 VST.veric.lift LiftNotation :::'`'_x not
R67627:67627 VST.floyd.client_lemmas <> P:694 var
R67630:67639 VST.veric.SeparationLogic <> make_args' def
R67647:67651 VST.veric.seplog <> subst def
R67659:67671 VST.veric.expr <> eval_exprlist def
R67676:67677 VST.floyd.client_lemmas <> el:697 var
R67673:67674 VST.floyd.client_lemmas <> tl:696 var
R67656:67656 VST.floyd.client_lemmas <> v:693 var
R67653:67654 VST.floyd.client_lemmas <> id:692 var
R67641:67644 VST.floyd.client_lemmas <> fsig:695 var
R67538:67540 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67521:67526 Coq.Lists.List <> length syndef
R67529:67531 Coq.Init.Datatypes <> fst def
R67533:67536 VST.floyd.client_lemmas <> fsig:695 var
R67541:67546 Coq.Lists.List <> length syndef
R67548:67549 VST.floyd.client_lemmas <> el:697 var
R67503:67505 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67494:67499 Coq.Lists.List <> length syndef
R67501:67502 VST.floyd.client_lemmas <> tl:696 var
R67506:67511 Coq.Lists.List <> length syndef
R67513:67514 VST.floyd.client_lemmas <> el:697 var
R67739:67743 VST.veric.seplog <> subst def
R67762:67771 VST.veric.SeparationLogic <> make_args' def
R67804:67806 Coq.Init.Datatypes <> fst def
R67804:67806 Coq.Init.Datatypes <> fst def
R67953:67968 VST.floyd.client_lemmas <> subst_make_args' thm
prf 68013:68020 <> map_cons
binder 68031:68031 <> A:698
binder 68033:68033 <> B:699
R68041:68044 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68045:68045 VST.floyd.client_lemmas <> B:699 var
R68040:68040 VST.floyd.client_lemmas <> A:698 var
binder 68037:68037 <> f:700
binder 68048:68048 <> x:701
binder 68050:68050 <> y:702
R68068:68070 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68056:68058 Coq.Lists.List <> map def
R68064:68065 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68063:68063 VST.floyd.client_lemmas <> x:701 var
R68066:68066 VST.floyd.client_lemmas <> y:702 var
R68060:68060 VST.floyd.client_lemmas <> f:700 var
R68074:68077 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68071:68071 VST.floyd.client_lemmas <> f:700 var
R68073:68073 VST.floyd.client_lemmas <> x:701 var
R68078:68080 Coq.Lists.List <> map def
R68084:68084 VST.floyd.client_lemmas <> y:702 var
R68082:68082 VST.floyd.client_lemmas <> f:700 var
R68127:68134 VST.floyd.client_lemmas <> map_cons thm
R68158:68165 VST.floyd.client_lemmas <> map_cons thm
prf 68183:68189 <> map_nil
binder 68200:68200 <> A:703
binder 68202:68202 <> B:704
R68210:68213 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68214:68214 VST.floyd.client_lemmas <> B:704 var
R68209:68209 VST.floyd.client_lemmas <> A:703 var
binder 68206:68206 <> f:705
R68227:68229 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68218:68220 Coq.Lists.List <> map def
R68224:68226 Coq.Init.Datatypes <> nil constr
R68222:68222 VST.floyd.client_lemmas <> f:705 var
R68230:68232 Coq.Init.Datatypes <> nil constr
R68275:68281 VST.floyd.client_lemmas <> map_nil thm
R68305:68311 VST.floyd.client_lemmas <> map_nil thm
def 68334:68345 <> rlt_ident_eq
R68350:68357 compcert.common.AST <> ident_eq def
def 68420:68439 <> remove_localdef_temp
R68445:68449 compcert.common.AST <> ident def
binder 68442:68442 <> i:706
R68456:68459 Coq.Init.Datatypes <> list ind
R68461:68468 VST.floyd.canon <> localdef ind
binder 68453:68453 <> l:707
R68473:68476 Coq.Init.Datatypes <> list ind
R68478:68485 VST.floyd.canon <> localdef ind
R68498:68498 VST.floyd.client_lemmas <> l:707 var
R68509:68511 Coq.Init.Datatypes <> nil constr
R68516:68518 Coq.Init.Datatypes <> nil constr
R68525:68528 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68560:68563 VST.floyd.canon <> temp constr
R68582:68593 VST.floyd.client_lemmas <> rlt_ident_eq def
R68595:68595 VST.floyd.client_lemmas <> i:706 var
R68650:68653 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68654:68673 VST.floyd.client_lemmas <> remove_localdef_temp:708 def
R68675:68675 VST.floyd.client_lemmas <> i:706 var
R68611:68630 VST.floyd.client_lemmas <> remove_localdef_temp:708 def
R68632:68632 VST.floyd.client_lemmas <> i:706 var
R68693:68696 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68697:68716 VST.floyd.client_lemmas <> remove_localdef_temp:708 def
R68718:68718 VST.floyd.client_lemmas <> i:706 var
prf 68746:68764 <> subst_stackframe_of
R68781:68789 VST.veric.mpred <> compspecs class
binder 68777:68778 <> cs:711
binder 68792:68792 <> i:712
binder 68794:68794 <> v:713
binder 68796:68796 <> f:714
R68826:68828 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68799:68803 VST.veric.seplog <> subst def
R68810:68822 VST.veric.SeparationLogic <> stackframe_of def
R68824:68824 VST.floyd.client_lemmas <> f:714 var
R68807:68807 VST.floyd.client_lemmas <> v:713 var
R68805:68805 VST.floyd.client_lemmas <> i:712 var
R68829:68841 VST.veric.SeparationLogic <> stackframe_of def
R68843:68843 VST.floyd.client_lemmas <> f:714 var
R68860:68872 VST.veric.SeparationLogic <> stackframe_of def
R68897:68901 VST.veric.seplog <> subst def
R68935:68941 compcert.cfrontend.Clight <> fn_vars proj
R68935:68941 compcert.cfrontend.Clight <> fn_vars proj
R68986:69000 VST.floyd.canon <> fold_right_cons thm
R68986:69000 VST.floyd.canon <> fold_right_cons thm
R68986:69000 VST.floyd.canon <> fold_right_cons thm
R68986:69000 VST.floyd.canon <> fold_right_cons thm
R69042:69060 VST.floyd.client_lemmas <> subst_stackframe_of thm
prf 69078:69102 <> remove_localdef_temp_PROP
R69116:69120 compcert.common.AST <> ident def
binder 69113:69113 <> i:715
binder 69123:69123 <> P:716
binder 69125:69125 <> Q:717
binder 69127:69127 <> R:718
R69189:69195 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R69132:69134 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R69143:69144 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R69140:69142 compcert.common.Values <> val ind
binder 69135:69137 <> old:719
R69145:69149 VST.veric.seplog <> subst def
R69161:69165 VST.floyd.canon <> PROPx def
R69170:69175 VST.floyd.canon <> LOCALx def
R69180:69183 VST.floyd.canon <> SEPx def
R69185:69185 VST.floyd.client_lemmas <> R:718 var
R69177:69177 VST.floyd.client_lemmas <> Q:717 var
R69167:69167 VST.floyd.client_lemmas <> P:716 var
R69153:69154 VST.veric.lift LiftNotation :::'`('_x_')' not
R69158:69158 VST.veric.lift LiftNotation :::'`('_x_')' not
R69155:69157 VST.floyd.client_lemmas <> old:719 var
R69151:69151 VST.floyd.client_lemmas <> i:715 var
R69196:69200 VST.floyd.canon <> PROPx def
R69205:69210 VST.floyd.canon <> LOCALx def
R69240:69243 VST.floyd.canon <> SEPx def
R69245:69245 VST.floyd.client_lemmas <> R:718 var
R69213:69232 VST.floyd.client_lemmas <> remove_localdef_temp def
R69236:69236 VST.floyd.client_lemmas <> Q:717 var
R69234:69234 VST.floyd.client_lemmas <> i:715 var
R69202:69202 VST.floyd.client_lemmas <> P:716 var
R69275:69282 VST.msl.seplog <> exp_left meth
R69275:69282 VST.msl.seplog <> exp_left meth
R69305:69309 VST.floyd.canon <> PROPx def
R69351:69362 VST.msl.log_normalize <> andp_derives thm
R69351:69362 VST.msl.log_normalize <> andp_derives thm
R69371:69382 VST.msl.seplog <> derives_refl meth
R69371:69382 VST.msl.seplog <> derives_refl meth
R69394:69399 VST.floyd.canon <> LOCALx def
R69441:69452 VST.msl.log_normalize <> andp_derives thm
R69471:69482 VST.msl.seplog <> derives_refl meth
R69441:69452 VST.msl.log_normalize <> andp_derives thm
R69471:69482 VST.msl.seplog <> derives_refl meth
R69471:69482 VST.msl.seplog <> derives_refl meth
R69634:69646 VST.msl.seplog <> derives_trans meth
R69634:69646 VST.msl.seplog <> derives_trans meth
R69678:69692 VST.floyd.assert_lemmas <> local_lift2_and thm
R69678:69692 VST.floyd.assert_lemmas <> local_lift2_and thm
R69678:69692 VST.floyd.assert_lemmas <> local_lift2_and thm
R69707:69716 VST.msl.seplog <> andp_left2 meth
R69725:69736 VST.msl.seplog <> derives_refl meth
R69707:69716 VST.msl.seplog <> andp_left2 meth
R69725:69736 VST.msl.seplog <> derives_refl meth
R69754:69768 VST.floyd.assert_lemmas <> local_lift2_and thm
R69754:69768 VST.floyd.assert_lemmas <> local_lift2_and thm
R69754:69768 VST.floyd.assert_lemmas <> local_lift2_and thm
R69754:69768 VST.floyd.assert_lemmas <> local_lift2_and thm
R69754:69768 VST.floyd.assert_lemmas <> local_lift2_and thm
R69783:69794 VST.msl.log_normalize <> andp_derives thm
R69783:69794 VST.msl.log_normalize <> andp_derives thm
R69825:69837 VST.floyd.canon <> locald_denote def
R69888:69892 VST.veric.SeparationLogic <> local def
R69895:69899 VST.veric.mpred <> lift1 def
R69937:69948 VST.msl.log_normalize <> prop_derives thm
R69937:69948 VST.msl.log_normalize <> prop_derives thm
R69971:69975 VST.veric.seplog <> subst def
R70007:70019 VST.veric.mpred <> eval_id_other thm
R70007:70019 VST.veric.mpred <> eval_id_other thm
R70007:70019 VST.veric.mpred <> eval_id_other thm
R70057:70071 VST.floyd.assert_lemmas <> local_lift2_and thm
R70057:70071 VST.floyd.assert_lemmas <> local_lift2_and thm
R70057:70071 VST.floyd.assert_lemmas <> local_lift2_and thm
R70057:70071 VST.floyd.assert_lemmas <> local_lift2_and thm
R70057:70071 VST.floyd.assert_lemmas <> local_lift2_and thm
R70086:70097 VST.msl.log_normalize <> andp_derives thm
R70086:70097 VST.msl.log_normalize <> andp_derives thm
R70128:70132 VST.veric.SeparationLogic <> local def
R70135:70139 VST.veric.mpred <> lift1 def
R70180:70184 VST.veric.seplog <> subst def
R70206:70217 VST.msl.seplog <> derives_refl meth
R70206:70217 VST.msl.seplog <> derives_refl meth
R70235:70249 VST.floyd.assert_lemmas <> local_lift2_and thm
R70235:70249 VST.floyd.assert_lemmas <> local_lift2_and thm
R70235:70249 VST.floyd.assert_lemmas <> local_lift2_and thm
R70235:70249 VST.floyd.assert_lemmas <> local_lift2_and thm
R70235:70249 VST.floyd.assert_lemmas <> local_lift2_and thm
R70264:70275 VST.msl.log_normalize <> andp_derives thm
R70264:70275 VST.msl.log_normalize <> andp_derives thm
R70306:70310 VST.veric.SeparationLogic <> local def
R70313:70317 VST.veric.mpred <> lift1 def
R70358:70362 VST.veric.seplog <> subst def
R70384:70395 VST.msl.seplog <> derives_refl meth
R70384:70395 VST.msl.seplog <> derives_refl meth
prf 70410:70438 <> eval_id_denote_tc_initialized
binder 70448:70452 <> Delta:720
binder 70454:70454 <> i:721
binder 70456:70456 <> t:722
binder 70458:70458 <> v:723
R70494:70499 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70577:70581 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R70524:70527 VST.msl.seplog <> ::logic:x_'&&'_x not
R70500:70504 VST.veric.SeparationLogic <> local def
R70507:70516 VST.veric.SeparationLogic <> tc_environ def
R70518:70522 VST.floyd.client_lemmas <> Delta:720 var
R70528:70532 VST.veric.SeparationLogic <> local def
R70535:70535 VST.veric.lift LiftNotation :::'`'_x not
R70539:70575 VST.veric.lift LiftNotation :::'`'_x not
R70536:70538 Coq.Init.Logic <> and ind
R70562:70563 VST.veric.lift LiftNotation :::'`('_x_')' not
R70575:70575 VST.veric.lift LiftNotation :::'`('_x_')' not
R70565:70568 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R70564:70564 VST.floyd.client_lemmas <> v:723 var
R70569:70574 compcert.common.Values <> Vundef constr
R70541:70542 VST.veric.lift LiftNotation :::'`('_x_')' not
R70547:70559 VST.veric.lift LiftNotation :::'`('_x_')' not
R70543:70544 Coq.Init.Logic <> eq ind
R70546:70546 VST.floyd.client_lemmas <> v:723 var
R70550:70556 VST.veric.mpred <> eval_id def
R70558:70558 VST.floyd.client_lemmas <> i:721 var
R70582:70602 VST.veric.SeparationLogic <> denote_tc_initialized def
R70606:70606 VST.floyd.client_lemmas <> t:722 var
R70604:70604 VST.floyd.client_lemmas <> i:721 var
R70485:70487 Coq.Init.Logic <> ::type_scope:x_'='_x not
R70463:70463 compcert.lib.Maps <> :::x_'!'_x not
R70480:70483 compcert.lib.Maps <> :::x_'!'_x not
R70484:70484 VST.floyd.client_lemmas <> i:721 var
R70464:70473 VST.veric.seplog <> temp_types def
R70475:70479 VST.floyd.client_lemmas <> Delta:720 var
R70488:70491 Coq.Init.Datatypes <> Some constr
R70493:70493 VST.floyd.client_lemmas <> t:722 var
R70649:70653 VST.veric.SeparationLogic <> local def
R70656:70660 VST.veric.mpred <> lift1 def
R70696:70703 VST.msl.log_normalize <> prop_and thm
R70712:70723 VST.msl.log_normalize <> prop_derives thm
R70696:70703 VST.msl.log_normalize <> prop_and thm
R70696:70703 VST.msl.log_normalize <> prop_and thm
R70712:70723 VST.msl.log_normalize <> prop_derives thm
R70833:70839 VST.veric.mpred <> eval_id def
prf 70962:70986 <> PQR_denote_tc_initialized
binder 70996:71000 <> Delta:724
binder 71002:71002 <> i:725
binder 71004:71004 <> t:726
binder 71006:71006 <> v:727
binder 71008:71008 <> P:728
binder 71010:71010 <> Q:729
binder 71012:71012 <> R:730
R71048:71053 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R71116:71120 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R71078:71081 VST.msl.seplog <> ::logic:x_'&&'_x not
R71054:71058 VST.veric.SeparationLogic <> local def
R71061:71070 VST.veric.SeparationLogic <> tc_environ def
R71072:71076 VST.floyd.client_lemmas <> Delta:724 var
R71082:71086 VST.floyd.canon <> PROPx def
R71091:71096 VST.floyd.canon <> LOCALx def
R71114:71114 VST.floyd.client_lemmas <> R:730 var
R71107:71110 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R71099:71102 VST.floyd.canon <> temp constr
R71106:71106 VST.floyd.client_lemmas <> v:727 var
R71104:71104 VST.floyd.client_lemmas <> i:725 var
R71111:71111 VST.floyd.client_lemmas <> Q:729 var
R71088:71088 VST.floyd.client_lemmas <> P:728 var
R71121:71141 VST.veric.SeparationLogic <> denote_tc_initialized def
R71145:71145 VST.floyd.client_lemmas <> t:726 var
R71143:71143 VST.floyd.client_lemmas <> i:725 var
R71039:71041 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71017:71017 compcert.lib.Maps <> :::x_'!'_x not
R71034:71037 compcert.lib.Maps <> :::x_'!'_x not
R71038:71038 VST.floyd.client_lemmas <> i:725 var
R71018:71027 VST.veric.seplog <> temp_types def
R71029:71033 VST.floyd.client_lemmas <> Delta:724 var
R71042:71045 Coq.Init.Datatypes <> Some constr
R71047:71047 VST.floyd.client_lemmas <> t:726 var
R71174:71186 VST.msl.seplog <> derives_trans meth
R71198:71226 VST.floyd.client_lemmas <> eval_id_denote_tc_initialized thm
R71174:71186 VST.msl.seplog <> derives_trans meth
R71198:71226 VST.floyd.client_lemmas <> eval_id_denote_tc_initialized thm
R71245:71256 VST.msl.log_normalize <> andp_derives thm
R71266:71277 VST.msl.seplog <> derives_refl meth
R71245:71256 VST.msl.log_normalize <> andp_derives thm
R71266:71277 VST.msl.seplog <> derives_refl meth
R71296:71308 VST.floyd.canon <> insert_local' thm
R71296:71308 VST.floyd.canon <> insert_local' thm
R71296:71308 VST.floyd.canon <> insert_local' thm
R71319:71328 VST.msl.seplog <> andp_left1 meth
R71319:71328 VST.msl.seplog <> andp_left1 meth
R71339:71350 VST.msl.seplog <> derives_refl meth
R71339:71350 VST.msl.seplog <> derives_refl meth
prf 71365:71391 <> derives_remove_localdef_PQR
binder 71401:71401 <> P:731
binder 71403:71403 <> Q:732
binder 71405:71405 <> R:733
binder 71407:71407 <> i:734
R71439:71443 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R71412:71416 VST.floyd.canon <> PROPx def
R71421:71426 VST.floyd.canon <> LOCALx def
R71431:71434 VST.floyd.canon <> SEPx def
R71436:71436 VST.floyd.client_lemmas <> R:733 var
R71428:71428 VST.floyd.client_lemmas <> Q:732 var
R71418:71418 VST.floyd.client_lemmas <> P:731 var
R71444:71448 VST.floyd.canon <> PROPx def
R71453:71458 VST.floyd.canon <> LOCALx def
R71488:71491 VST.floyd.canon <> SEPx def
R71493:71493 VST.floyd.client_lemmas <> R:733 var
R71461:71480 VST.floyd.client_lemmas <> remove_localdef_temp def
R71484:71484 VST.floyd.client_lemmas <> Q:732 var
R71482:71482 VST.floyd.client_lemmas <> i:734 var
R71450:71450 VST.floyd.client_lemmas <> P:731 var
R71536:71545 VST.msl.seplog <> andp_right meth
R71536:71545 VST.msl.seplog <> andp_right meth
R71562:71571 VST.msl.seplog <> prop_right meth
R71562:71571 VST.msl.seplog <> prop_right meth
prf 71751:71775 <> subst_remove_localdef_PQR
binder 71785:71785 <> P:735
binder 71787:71787 <> Q:736
binder 71789:71789 <> R:737
binder 71791:71791 <> i:738
binder 71793:71793 <> v:739
R71862:71866 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R71798:71802 VST.veric.seplog <> subst def
R71809:71813 VST.floyd.canon <> PROPx def
R71818:71823 VST.floyd.canon <> LOCALx def
R71853:71856 VST.floyd.canon <> SEPx def
R71858:71858 VST.floyd.client_lemmas <> R:737 var
R71826:71845 VST.floyd.client_lemmas <> remove_localdef_temp def
R71849:71849 VST.floyd.client_lemmas <> Q:736 var
R71847:71847 VST.floyd.client_lemmas <> i:738 var
R71815:71815 VST.floyd.client_lemmas <> P:735 var
R71806:71806 VST.floyd.client_lemmas <> v:739 var
R71804:71804 VST.floyd.client_lemmas <> i:738 var
R71867:71871 VST.floyd.canon <> PROPx def
R71876:71881 VST.floyd.canon <> LOCALx def
R71911:71914 VST.floyd.canon <> SEPx def
R71916:71916 VST.floyd.client_lemmas <> R:737 var
R71884:71903 VST.floyd.client_lemmas <> remove_localdef_temp def
R71907:71907 VST.floyd.client_lemmas <> Q:736 var
R71905:71905 VST.floyd.client_lemmas <> i:738 var
R71873:71873 VST.floyd.client_lemmas <> P:735 var
R71959:71968 VST.msl.seplog <> andp_right meth
R71959:71968 VST.msl.seplog <> andp_right meth
R71985:71994 VST.msl.seplog <> prop_right meth
R71985:71994 VST.msl.seplog <> prop_right meth
R72239:72251 VST.veric.mpred <> eval_id_other thm
R72239:72251 VST.veric.mpred <> eval_id_other thm
R72239:72251 VST.veric.mpred <> eval_id_other thm
def 72290:72301 <> iota_formals
R72307:72311 compcert.common.AST <> ident def
binder 72304:72304 <> i:740
R72319:72326 compcert.cfrontend.Ctypes <> typelist ind
binder 72315:72316 <> tl:741
R72339:72340 VST.floyd.client_lemmas <> tl:741 var
R72350:72354 compcert.cfrontend.Ctypes <> Tcons constr
R72370:72373 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R72365:72365 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R72367:72367 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R72369:72369 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R72366:72366 VST.floyd.client_lemmas <> i:740 var
R72374:72385 VST.floyd.client_lemmas <> iota_formals:742 def
R72389:72389 Coq.PArith.BinPos <> ::positive_scope:x_'+'_x not
R72388:72388 VST.floyd.client_lemmas <> i:740 var
R72409:72412 compcert.cfrontend.Ctypes <> Tnil constr
R72417:72419 Coq.Init.Datatypes <> nil constr
R72478:72482 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R72495:72511 VST.veric.SeparationLogic <> normal_ret_assert def
R72478:72482 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R72495:72511 VST.veric.SeparationLogic <> normal_ret_assert def
R72543:72552 VST.floyd.canon <> sequential thm
prf 72568:72584 <> isptr_force_ptr''
binder 72595:72595 <> p:744
binder 72597:72597 <> Q:745
R72604:72604 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72617:72626 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72651:72651 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72646:72649 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72650:72650 VST.floyd.client_lemmas <> Q:745 var
R72627:72631 VST.veric.val_lemmas <> isptr def
R72634:72642 VST.veric.val_lemmas <> force_ptr def
R72644:72644 VST.floyd.client_lemmas <> p:744 var
R72612:72615 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72616:72616 VST.floyd.client_lemmas <> Q:745 var
R72605:72609 VST.veric.val_lemmas <> isptr def
R72611:72611 VST.floyd.client_lemmas <> p:744 var
R72703:72718 Coq.Init.Logic <> I constr
R72703:72718 Coq.Init.Logic <> I constr
prf 72733:72750 <> isptr_offset_val''
binder 72760:72760 <> i:746
binder 72762:72762 <> p:747
binder 72764:72764 <> Q:748
R72771:72771 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72784:72793 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72821:72821 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72816:72819 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72820:72820 VST.floyd.client_lemmas <> Q:748 var
R72794:72798 VST.veric.val_lemmas <> isptr def
R72801:72810 VST.veric.val_lemmas <> offset_val def
R72814:72814 VST.floyd.client_lemmas <> p:747 var
R72812:72812 VST.floyd.client_lemmas <> i:746 var
R72779:72782 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72783:72783 VST.floyd.client_lemmas <> Q:748 var
R72772:72776 VST.veric.val_lemmas <> isptr def
R72778:72778 VST.floyd.client_lemmas <> p:747 var
R72873:72888 Coq.Init.Logic <> I constr
R72873:72888 Coq.Init.Logic <> I constr
prf 72903:72911 <> ptr_eq_e'
binder 72921:72922 <> v1:749
binder 72924:72925 <> v2:750
binder 72927:72927 <> B:751
R72933:72933 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72944:72952 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72970:72970 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72965:72968 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72969:72969 VST.floyd.client_lemmas <> B:751 var
R72953:72958 VST.floyd.functional_base <> ptr_eq def
R72963:72964 VST.floyd.client_lemmas <> v2:750 var
R72960:72961 VST.floyd.client_lemmas <> v1:749 var
R72939:72942 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72943:72943 VST.floyd.client_lemmas <> B:751 var
R72936:72936 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72934:72935 VST.floyd.client_lemmas <> v1:749 var
R72937:72938 VST.floyd.client_lemmas <> v2:750 var
R73006:73013 VST.floyd.functional_base <> ptr_eq_e thm
R73006:73013 VST.floyd.functional_base <> ptr_eq_e thm
prf 73034:73053 <> typed_false_of_bool'
binder 73064:73064 <> x:752
binder 73067:73067 <> P:753
R73081:73081 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73096:73105 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73143:73143 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73138:73141 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73142:73142 VST.floyd.client_lemmas <> P:753 var
R73106:73116 VST.veric.SeparationLogic <> typed_false def
R73124:73134 compcert.common.Values Val of_bool def
R73136:73136 VST.floyd.client_lemmas <> x:752 var
R73118:73121 compcert.exportclight.Clightdefs <> tint def
R73082:73082 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73090:73094 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73095:73095 VST.floyd.client_lemmas <> P:753 var
R73084:73084 Coq.Init.Logic <> ::type_scope:x_'='_x not
R73083:73083 VST.floyd.client_lemmas <> x:752 var
R73085:73089 Coq.Init.Datatypes <> false constr
R73173:73191 VST.floyd.val_lemmas <> typed_false_of_bool thm
R73173:73191 VST.floyd.val_lemmas <> typed_false_of_bool thm
prf 73212:73230 <> typed_true_of_bool'
binder 73241:73241 <> x:754
binder 73244:73244 <> P:755
R73258:73258 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73272:73281 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73318:73318 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73313:73316 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73317:73317 VST.floyd.client_lemmas <> P:755 var
R73282:73291 VST.veric.SeparationLogic <> typed_true def
R73299:73309 compcert.common.Values Val of_bool def
R73311:73311 VST.floyd.client_lemmas <> x:754 var
R73293:73296 compcert.exportclight.Clightdefs <> tint def
R73259:73259 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73266:73270 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73271:73271 VST.floyd.client_lemmas <> P:755 var
R73261:73261 Coq.Init.Logic <> ::type_scope:x_'='_x not
R73260:73260 VST.floyd.client_lemmas <> x:754 var
R73262:73265 Coq.Init.Datatypes <> true constr
R73348:73365 VST.floyd.val_lemmas <> typed_true_of_bool thm
R73348:73365 VST.floyd.val_lemmas <> typed_true_of_bool thm
R73434:73437 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73434:73437 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73501:73501 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73509:73513 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73503:73507 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R73501:73501 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73509:73513 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73503:73507 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R73541:73541 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73550:73554 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73544:73547 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R73541:73541 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73550:73554 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73544:73547 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R73620:73623 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73600:73604 VST.veric.val_lemmas <> isptr def
R73607:73615 VST.veric.val_lemmas <> force_ptr def
R73620:73623 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73600:73604 VST.veric.val_lemmas <> isptr def
R73607:73615 VST.veric.val_lemmas <> force_ptr def
R73700:73703 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73676:73680 VST.veric.val_lemmas <> isptr def
R73683:73692 VST.veric.val_lemmas <> offset_val def
R73700:73703 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73676:73680 VST.veric.val_lemmas <> isptr def
R73683:73692 VST.veric.val_lemmas <> offset_val def
R73759:73776 VST.veric.val_lemmas <> is_pointer_or_null def
R73759:73776 VST.veric.val_lemmas <> is_pointer_or_null def
R73792:73795 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73784:73788 VST.veric.val_lemmas <> isptr def
R73792:73795 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73784:73788 VST.veric.val_lemmas <> isptr def
R73832:73835 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73827:73829 Coq.Init.Logic <> ::type_scope:x_'='_x not
R73832:73835 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73827:73829 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74136:74139 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74128:74132 VST.veric.val_lemmas <> isptr def
R74136:74139 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74128:74132 VST.veric.val_lemmas <> isptr def
R74194:74211 VST.veric.val_lemmas <> is_pointer_or_null def
R74194:74211 VST.veric.val_lemmas <> is_pointer_or_null def
R74298:74301 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74269:74279 VST.veric.SeparationLogic <> typed_false def
R74284:74294 compcert.common.Values Val of_bool def
R74298:74301 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74269:74279 VST.veric.SeparationLogic <> typed_false def
R74284:74294 compcert.common.Values Val of_bool def
R74386:74389 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74358:74367 VST.veric.SeparationLogic <> typed_true def
R74372:74382 compcert.common.Values Val of_bool def
R74386:74389 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74358:74367 VST.veric.SeparationLogic <> typed_true def
R74372:74382 compcert.common.Values Val of_bool def
R74455:74458 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74445:74450 VST.floyd.functional_base <> ptr_eq def
R74455:74458 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74445:74450 VST.floyd.functional_base <> ptr_eq def
R74498:74501 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74498:74501 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74480:74488 VST.floyd.client_lemmas <> ptr_eq_e' thm
R74418:74436 VST.floyd.client_lemmas <> typed_true_of_bool' thm
R74330:74349 VST.floyd.client_lemmas <> typed_false_of_bool' thm
R73726:73743 VST.floyd.client_lemmas <> isptr_offset_val'' thm
R73646:73662 VST.floyd.client_lemmas <> isptr_force_ptr'' thm
R73578:73584 Coq.Init.Logic <> and_ind scheme
prf 74537:74550 <> saturate_aux20
R74567:74571 VST.veric.mpred <> mpred def
binder 74562:74562 <> P:756
binder 74564:74564 <> Q:757
binder 74574:74575 <> P':758
binder 74577:74578 <> Q':759
R74597:74604 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74616:74623 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74629:74633 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R74625:74627 VST.msl.seplog <> ::logic:x_'*'_x not
R74624:74624 VST.floyd.client_lemmas <> P:756 var
R74628:74628 VST.floyd.client_lemmas <> Q:757 var
R74634:74637 VST.msl.seplog <> ::logic:'!!'_x not
R74646:74646 VST.msl.seplog <> ::logic:'!!'_x not
R74640:74643 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R74638:74639 VST.floyd.client_lemmas <> P':758 var
R74644:74645 VST.floyd.client_lemmas <> Q':759 var
R74606:74610 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R74605:74605 VST.floyd.client_lemmas <> Q:757 var
R74611:74613 VST.msl.seplog <> ::logic:'!!'_x not
R74614:74615 VST.floyd.client_lemmas <> Q':759 var
R74587:74591 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R74586:74586 VST.floyd.client_lemmas <> P:756 var
R74592:74594 VST.msl.seplog <> ::logic:'!!'_x not
R74595:74596 VST.floyd.client_lemmas <> P':758 var
R74671:74683 VST.msl.seplog <> derives_trans meth
R74693:74706 VST.msl.seplog <> sepcon_derives meth
R74671:74683 VST.msl.seplog <> derives_trans meth
R74693:74706 VST.msl.seplog <> sepcon_derives meth
R74734:74749 VST.msl.log_normalize <> sepcon_prop_prop thm
R74734:74749 VST.msl.log_normalize <> sepcon_prop_prop thm
R74734:74749 VST.msl.log_normalize <> sepcon_prop_prop thm
prf 74770:74784 <> saturate_aux21x
R74804:74808 VST.veric.mpred <> mpred def
binder 74797:74797 <> P:760
binder 74799:74799 <> Q:761
binder 74801:74801 <> S:762
R74822:74828 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74841:74844 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74846:74850 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R74845:74845 VST.floyd.client_lemmas <> P:760 var
R74851:74851 VST.floyd.client_lemmas <> Q:761 var
R74835:74839 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R74830:74833 VST.msl.seplog <> ::logic:x_'&&'_x not
R74829:74829 VST.floyd.client_lemmas <> S:762 var
R74834:74834 VST.floyd.client_lemmas <> P:760 var
R74840:74840 VST.floyd.client_lemmas <> Q:761 var
R74816:74820 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R74815:74815 VST.floyd.client_lemmas <> P:760 var
R74821:74821 VST.floyd.client_lemmas <> S:762 var
R74883:74895 VST.msl.seplog <> derives_trans meth
R74883:74895 VST.msl.seplog <> derives_trans meth
R74922:74931 VST.msl.seplog <> andp_right meth
R74922:74931 VST.msl.seplog <> andp_right meth
R75283:75297 VST.msl.log_normalize <> prop_True_right thm
R74995:74999 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R74995:74999 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R75045:75049 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R75136:75140 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R75141:75143 VST.msl.seplog <> ::logic:'!!'_x not
R75136:75140 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R75141:75143 VST.msl.seplog <> ::logic:'!!'_x not
R75192:75195 Coq.Init.Logic <> conj constr
R75347:75352 VST.msl.seplog <> sepcon meth
R75354:75358 VST.veric.mpred <> mpred def
R75347:75352 VST.msl.seplog <> sepcon meth
R75354:75358 VST.veric.mpred <> mpred def
R75687:75689 Coq.Init.Datatypes <> nil constr
R75687:75689 Coq.Init.Datatypes <> nil constr
R75752:75756 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R75752:75756 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R75798:75812 VST.floyd.client_lemmas <> saturate_aux21x thm
R75837:75850 VST.floyd.client_lemmas <> saturate_aux20 thm
R75994:76008 VST.msl.log_normalize <> prop_True_right thm
R76026:76045 VST.msl.log_normalize <> derives_extract_prop thm
R76071:76074 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R76071:76074 Coq.Init.Logic <> ::type_scope:x_'->'_x not
prf 76247:76260 <> prop_right_emp
binder 76263:76263 <> A:763
R76271:76276 VST.msl.seplog <> NatDed class
R76278:76278 VST.floyd.client_lemmas <> A:763 var
binder 76267:76268 <> NA:764
binder 76290:76290 <> P:765
R76300:76303 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R76307:76311 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R76304:76306 VST.msl.seplog <> emp meth
R76312:76314 VST.msl.seplog <> ::logic:'!!'_x not
R76315:76315 VST.floyd.client_lemmas <> P:765 var
R76299:76299 VST.floyd.client_lemmas <> P:765 var
R76403:76412 VST.msl.seplog <> prop_right meth
R76768:76770 Coq.Init.Logic <> ::type_scope:x_'='_x not
R76768:76770 Coq.Init.Logic <> ::type_scope:x_'='_x not
prf 76823:76836 <> prop_and_right
binder 76839:76839 <> A:766
R76846:76851 VST.msl.seplog <> NatDed class
R76853:76853 VST.floyd.client_lemmas <> A:766 var
binder 76842:76843 <> NA:767
R76869:76869 VST.floyd.client_lemmas <> A:766 var
binder 76866:76866 <> U:768
binder 76873:76873 <> X:769
binder 76875:76875 <> Y:770
R76890:76897 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R76908:76915 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R76917:76921 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R76916:76916 VST.floyd.client_lemmas <> U:768 var
R76922:76925 VST.msl.seplog <> ::logic:'!!'_x not
R76932:76932 VST.msl.seplog <> ::logic:'!!'_x not
R76927:76930 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R76926:76926 VST.floyd.client_lemmas <> X:769 var
R76931:76931 VST.floyd.client_lemmas <> Y:770 var
R76899:76903 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R76898:76898 VST.floyd.client_lemmas <> U:768 var
R76904:76906 VST.msl.seplog <> ::logic:'!!'_x not
R76907:76907 VST.floyd.client_lemmas <> Y:770 var
R76889:76889 VST.floyd.client_lemmas <> X:769 var
R76976:76977 VST.msl.seplog <> ::logic:'!!'_x not
R76956:76968 VST.msl.seplog <> derives_trans meth
R76976:76977 VST.msl.seplog <> ::logic:'!!'_x not
R76956:76968 VST.msl.seplog <> derives_trans meth
R76994:77005 VST.msl.log_normalize <> prop_derives thm
R76994:77005 VST.msl.log_normalize <> prop_derives thm
prf 77026:77048 <> fold_right_sepcon_subst
binder 77059:77059 <> i:771
binder 77061:77061 <> e:772
binder 77063:77063 <> R:773
R77107:77109 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77066:77075 Coq.Lists.List <> fold_right def
R77089:77091 Coq.Lists.List <> map def
R77105:77105 VST.floyd.client_lemmas <> R:773 var
R77094:77098 VST.veric.seplog <> subst def
R77102:77102 VST.floyd.client_lemmas <> e:772 var
R77100:77100 VST.floyd.client_lemmas <> i:771 var
R77084:77086 VST.msl.seplog <> emp meth
R77077:77082 VST.msl.seplog <> sepcon meth
R77110:77114 VST.veric.seplog <> subst def
R77121:77130 Coq.Lists.List <> fold_right def
R77143:77143 VST.floyd.client_lemmas <> R:773 var
R77139:77141 VST.msl.seplog <> emp meth
R77132:77137 VST.msl.seplog <> sepcon meth
R77118:77118 VST.floyd.client_lemmas <> e:772 var
R77116:77116 VST.floyd.client_lemmas <> i:771 var
prf 77234:77247 <> unsigned_eq_eq
binder 77257:77257 <> i:774
binder 77259:77259 <> j:775
R77293:77296 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77298:77300 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77297:77297 VST.floyd.client_lemmas <> i:774 var
R77301:77301 VST.floyd.client_lemmas <> j:775 var
R77276:77278 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77262:77273 compcert.lib.Integers Int unsigned def
R77275:77275 VST.floyd.client_lemmas <> i:774 var
R77279:77290 compcert.lib.Integers Int unsigned def
R77292:77292 VST.floyd.client_lemmas <> j:775 var
R77335:77351 compcert.lib.Integers Int repr_unsigned thm
R77361:77377 compcert.lib.Integers Int repr_unsigned thm
R77335:77351 compcert.lib.Integers Int repr_unsigned thm
R77335:77351 compcert.lib.Integers Int repr_unsigned thm
R77361:77377 compcert.lib.Integers Int repr_unsigned thm
R77361:77377 compcert.lib.Integers Int repr_unsigned thm
R77447:77453 compcert.lib.Integers Int add def
R77456:77462 compcert.lib.Integers Int mul def
R77482:77501 compcert.lib.Integers Int unsigned_repr_eq thm
R77531:77538 Coq.ZArith.Zdiv <> Zmod_mod thm
R77558:77574 Coq.ZArith.Zdiv <> Zmult_mod_idemp_l thm
R77594:77610 Coq.ZArith.Zdiv <> Zmult_mod_idemp_r thm
R77630:77646 Coq.ZArith.Zdiv <> Zplus_mod_idemp_l thm
R77666:77682 Coq.ZArith.Zdiv <> Zplus_mod_idemp_r thm
prf 77694:77708 <> prop_false_andp
binder 77711:77711 <> A:776
R77718:77723 VST.msl.seplog <> NatDed class
R77725:77725 VST.floyd.client_lemmas <> A:776 var
binder 77714:77715 <> NA:777
binder 77737:77737 <> P:778
binder 77739:77739 <> Q:779
R77744:77747 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77757:77759 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77752:77755 VST.msl.seplog <> ::logic:x_'&&'_x not
R77748:77750 VST.msl.seplog <> ::logic:'!!'_x not
R77751:77751 VST.floyd.client_lemmas <> P:778 var
R77756:77756 VST.floyd.client_lemmas <> Q:779 var
R77760:77761 VST.msl.seplog <> FF meth
R77742:77742 Coq.Init.Logic <> ::type_scope:'~'_x not
R77743:77743 VST.floyd.client_lemmas <> P:778 var
R77785:77792 VST.msl.seplog <> pred_ext meth
R77785:77792 VST.msl.seplog <> pred_ext meth
prf 77818:77826 <> wand_join
binder 77829:77829 <> A:780
R77836:77841 VST.msl.seplog <> NatDed class
R77843:77843 VST.floyd.client_lemmas <> A:780 var
binder 77832:77833 <> NA:781
R77850:77855 VST.msl.seplog <> SepLog class
R77857:77857 VST.floyd.client_lemmas <> A:780 var
binder 77846:77847 <> SA:782
R77883:77883 VST.floyd.client_lemmas <> A:780 var
binder 77870:77871 <> x1:783
binder 77873:77874 <> x2:784
binder 77876:77877 <> y1:785
binder 77879:77880 <> y2:786
R77913:77918 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R77941:77941 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R77890:77890 VST.msl.seplog <> ::logic:x_'*'_x not
R77899:77903 VST.msl.seplog <> ::logic:x_'*'_x not
R77912:77912 VST.msl.seplog <> ::logic:x_'*'_x not
R77893:77896 VST.msl.seplog <> ::logic:x_'-*'_x not
R77891:77892 VST.floyd.client_lemmas <> x1:783 var
R77897:77898 VST.floyd.client_lemmas <> y1:785 var
R77906:77909 VST.msl.seplog <> ::logic:x_'-*'_x not
R77904:77905 VST.floyd.client_lemmas <> x2:784 var
R77910:77911 VST.floyd.client_lemmas <> y2:786 var
R77919:77919 VST.msl.seplog <> ::logic:x_'-*'_x not
R77927:77932 VST.msl.seplog <> ::logic:x_'-*'_x not
R77940:77940 VST.msl.seplog <> ::logic:x_'-*'_x not
R77922:77924 VST.msl.seplog <> ::logic:x_'*'_x not
R77920:77921 VST.floyd.client_lemmas <> x1:783 var
R77925:77926 VST.floyd.client_lemmas <> x2:784 var
R77935:77937 VST.msl.seplog <> ::logic:x_'*'_x not
R77933:77934 VST.floyd.client_lemmas <> y1:785 var
R77938:77939 VST.floyd.client_lemmas <> y2:786 var
R77970:77988 VST.msl.seplog <> wand_sepcon_adjoint meth
R77970:77988 VST.msl.seplog <> wand_sepcon_adjoint meth
R77970:77988 VST.msl.seplog <> wand_sepcon_adjoint meth
R77999:78010 VST.msl.seplog <> sepcon_assoc meth
R77999:78010 VST.msl.seplog <> sepcon_assoc meth
R77999:78010 VST.msl.seplog <> sepcon_assoc meth
R78025:78036 VST.msl.seplog <> sepcon_assoc meth
R78025:78036 VST.msl.seplog <> sepcon_assoc meth
R78025:78036 VST.msl.seplog <> sepcon_assoc meth
R78057:78067 VST.msl.seplog <> sepcon_comm meth
R78057:78067 VST.msl.seplog <> sepcon_comm meth
R78057:78067 VST.msl.seplog <> sepcon_comm meth
R78083:78094 VST.msl.seplog <> sepcon_assoc meth
R78083:78094 VST.msl.seplog <> sepcon_assoc meth
R78083:78094 VST.msl.seplog <> sepcon_assoc meth
R78113:78124 VST.msl.seplog <> sepcon_assoc meth
R78113:78124 VST.msl.seplog <> sepcon_assoc meth
R78113:78124 VST.msl.seplog <> sepcon_assoc meth
R78145:78155 VST.msl.seplog <> sepcon_comm meth
R78145:78155 VST.msl.seplog <> sepcon_comm meth
R78145:78155 VST.msl.seplog <> sepcon_comm meth
R78174:78184 VST.msl.seplog <> sepcon_comm meth
R78174:78184 VST.msl.seplog <> sepcon_comm meth
R78174:78184 VST.msl.seplog <> sepcon_comm meth
R78197:78210 VST.msl.seplog <> sepcon_derives meth
R78197:78210 VST.msl.seplog <> sepcon_derives meth
R78219:78235 VST.msl.log_normalize <> modus_ponens_wand thm
R78219:78235 VST.msl.log_normalize <> modus_ponens_wand thm
R78244:78260 VST.msl.log_normalize <> modus_ponens_wand thm
R78244:78260 VST.msl.log_normalize <> modus_ponens_wand thm
prf 78275:78285 <> wand_sepcon
binder 78297:78297 <> A:787
R78305:78310 VST.msl.seplog <> NatDed class
R78312:78312 VST.floyd.client_lemmas <> A:787 var
binder 78301:78302 <> NA:788
R78319:78324 VST.msl.seplog <> SepLog class
R78326:78326 VST.floyd.client_lemmas <> A:787 var
binder 78315:78316 <> SA:789
binder 78329:78329 <> P:790
binder 78331:78331 <> Q:791
R78353:78355 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78337:78337 VST.msl.seplog <> ::logic:x_'*'_x not
R78348:78351 VST.msl.seplog <> ::logic:x_'*'_x not
R78339:78342 VST.msl.seplog <> ::logic:x_'-*'_x not
R78338:78338 VST.floyd.client_lemmas <> P:790 var
R78344:78346 VST.msl.seplog <> ::logic:x_'*'_x not
R78343:78343 VST.floyd.client_lemmas <> Q:791 var
R78347:78347 VST.floyd.client_lemmas <> P:790 var
R78352:78352 VST.floyd.client_lemmas <> P:790 var
R78357:78359 VST.msl.seplog <> ::logic:x_'*'_x not
R78356:78356 VST.floyd.client_lemmas <> Q:791 var
R78360:78360 VST.floyd.client_lemmas <> P:790 var
R78384:78391 VST.msl.seplog <> pred_ext meth
R78384:78391 VST.msl.seplog <> pred_ext meth
R78404:78414 VST.msl.seplog <> sepcon_comm meth
R78404:78414 VST.msl.seplog <> sepcon_comm meth
R78404:78414 VST.msl.seplog <> sepcon_comm meth
R78423:78439 VST.msl.log_normalize <> modus_ponens_wand thm
R78423:78439 VST.msl.log_normalize <> modus_ponens_wand thm
R78450:78463 VST.msl.seplog <> sepcon_derives meth
R78450:78463 VST.msl.seplog <> sepcon_derives meth
R78481:78499 VST.msl.seplog <> wand_sepcon_adjoint meth
R78481:78499 VST.msl.seplog <> wand_sepcon_adjoint meth
prf 78520:78531 <> wand_sepcon'
binder 78543:78543 <> A:792
R78551:78556 VST.msl.seplog <> NatDed class
R78558:78558 VST.floyd.client_lemmas <> A:792 var
binder 78547:78548 <> NA:793
R78565:78570 VST.msl.seplog <> SepLog class
R78572:78572 VST.floyd.client_lemmas <> A:792 var
binder 78561:78562 <> SA:794
binder 78575:78575 <> P:795
binder 78577:78577 <> Q:796
R78599:78601 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78584:78587 VST.msl.seplog <> ::logic:x_'*'_x not
R78598:78598 VST.msl.seplog <> ::logic:x_'*'_x not
R78583:78583 VST.floyd.client_lemmas <> P:795 var
R78589:78592 VST.msl.seplog <> ::logic:x_'-*'_x not
R78588:78588 VST.floyd.client_lemmas <> P:795 var
R78594:78596 VST.msl.seplog <> ::logic:x_'*'_x not
R78593:78593 VST.floyd.client_lemmas <> Q:796 var
R78597:78597 VST.floyd.client_lemmas <> P:795 var
R78603:78605 VST.msl.seplog <> ::logic:x_'*'_x not
R78602:78602 VST.floyd.client_lemmas <> P:795 var
R78606:78606 VST.floyd.client_lemmas <> Q:796 var
R78633:78643 VST.msl.seplog <> sepcon_comm meth
R78633:78643 VST.msl.seplog <> sepcon_comm meth
R78633:78643 VST.msl.seplog <> sepcon_comm meth
R78659:78669 VST.msl.seplog <> sepcon_comm meth
R78678:78688 VST.floyd.client_lemmas <> wand_sepcon thm
R78659:78669 VST.msl.seplog <> sepcon_comm meth
R78659:78669 VST.msl.seplog <> sepcon_comm meth
R78678:78688 VST.floyd.client_lemmas <> wand_sepcon thm
R78711:78721 VST.floyd.client_lemmas <> wand_sepcon thm
R78723:78734 VST.floyd.client_lemmas <> wand_sepcon' thm
prf 78753:78777 <> extract_nth_exists_in_SEP
binder 78789:78789 <> n:797
binder 78791:78791 <> P:798
binder 78793:78793 <> Q:799
R78799:78802 Coq.Init.Datatypes <> list ind
R78804:78808 VST.veric.mpred <> mpred def
binder 78796:78796 <> R:800
binder 78826:78826 <> A:801
R78834:78837 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78838:78842 VST.veric.mpred <> mpred def
R78833:78833 VST.floyd.client_lemmas <> A:801 var
binder 78830:78830 <> S:802
R78870:78876 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78904:78909 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78877:78881 VST.floyd.canon <> PROPx def
R78886:78891 VST.floyd.canon <> LOCALx def
R78896:78899 VST.floyd.canon <> SEPx def
R78901:78901 VST.floyd.client_lemmas <> R:800 var
R78893:78893 VST.floyd.client_lemmas <> Q:799 var
R78883:78883 VST.floyd.client_lemmas <> P:798 var
R78910:78912 VST.msl.seplog <> exp meth
binder 78919:78919 <> x:803
R78924:78928 VST.floyd.canon <> PROPx def
R78933:78938 VST.floyd.canon <> LOCALx def
R78943:78946 VST.floyd.canon <> SEPx def
R78949:78959 VST.floyd.canon <> replace_nth def
R78966:78966 VST.floyd.client_lemmas <> S:802 var
R78968:78968 VST.floyd.client_lemmas <> x:803 var
R78963:78963 VST.floyd.client_lemmas <> R:800 var
R78961:78961 VST.floyd.client_lemmas <> n:797 var
R78940:78940 VST.floyd.client_lemmas <> Q:799 var
R78930:78930 VST.floyd.client_lemmas <> P:798 var
R78860:78863 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78869:78869 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78849:78851 Coq.Lists.List <> nth def
R78857:78859 VST.msl.seplog <> emp meth
R78855:78855 VST.floyd.client_lemmas <> R:800 var
R78853:78853 VST.floyd.client_lemmas <> n:797 var
R78864:78866 VST.msl.seplog <> exp meth
R78868:78868 VST.floyd.client_lemmas <> S:802 var
R79005:79009 VST.floyd.canon <> PROPx def
R79014:79019 VST.floyd.canon <> LOCALx def
R79024:79026 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R79030:79031 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 79027:79027 <> x:804
R79032:79035 VST.floyd.canon <> SEPx def
R79038:79048 VST.floyd.canon <> replace_nth def
R79057:79057 VST.floyd.client_lemmas <> x:804 var
R79005:79009 VST.floyd.canon <> PROPx def
R79014:79019 VST.floyd.canon <> LOCALx def
R79024:79026 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R79030:79031 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 79027:79027 <> x:805
R79032:79035 VST.floyd.canon <> SEPx def
R79038:79048 VST.floyd.canon <> replace_nth def
R79057:79057 VST.floyd.client_lemmas <> x:805 var
R79092:79095 VST.floyd.canon <> SEPx def
R79177:79187 VST.floyd.canon <> replace_nth def
R79190:79199 Coq.Lists.List <> fold_right def
R79216:79218 Coq.Lists.List <> nth def
R79252:79259 VST.msl.seplog <> pred_ext meth
R79252:79259 VST.msl.seplog <> pred_ext meth
R79268:79275 VST.msl.seplog <> exp_left meth
R79268:79275 VST.msl.seplog <> exp_left meth
R79293:79301 VST.msl.seplog <> exp_right meth
R79293:79301 VST.msl.seplog <> exp_right meth
R79317:79325 VST.msl.seplog <> exp_right meth
R79317:79325 VST.msl.seplog <> exp_right meth
R79347:79354 VST.msl.seplog <> exp_left meth
R79347:79354 VST.msl.seplog <> exp_left meth
R79379:79389 VST.floyd.canon <> replace_nth def
R79392:79394 Coq.Lists.List <> nth def
R79418:79434 VST.floyd.base <> fold_right_sepcon def
R79443:79459 VST.floyd.base <> fold_right_sepcon def
R79443:79459 VST.floyd.base <> fold_right_sepcon def
R79483:79485 Coq.Lists.List <> nth def
R79500:79510 VST.floyd.canon <> replace_nth def
R79544:79551 VST.msl.seplog <> pred_ext meth
R79544:79551 VST.msl.seplog <> pred_ext meth
R79560:79567 VST.msl.seplog <> exp_left meth
R79560:79567 VST.msl.seplog <> exp_left meth
R79585:79593 VST.msl.seplog <> exp_right meth
R79585:79593 VST.msl.seplog <> exp_right meth
R79609:79617 VST.msl.seplog <> exp_right meth
R79609:79617 VST.msl.seplog <> exp_right meth
R79639:79646 VST.msl.seplog <> exp_left meth
R79639:79646 VST.msl.seplog <> exp_left meth
R79671:79673 Coq.Lists.List <> nth def
R79687:79689 Coq.Lists.List <> nth def
R79687:79689 Coq.Lists.List <> nth def
R79755:79759 VST.floyd.canon <> PROPx def
R79762:79767 VST.floyd.canon <> LOCALx def
R79841:79845 VST.floyd.canon <> PROPx def
R79851:79856 VST.floyd.canon <> LOCALx def
R79862:79865 VST.floyd.canon <> SEPx def
R79841:79845 VST.floyd.canon <> PROPx def
R79851:79856 VST.floyd.canon <> LOCALx def
R79862:79865 VST.floyd.canon <> SEPx def
R79902:79902 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R79917:79921 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R79904:79906 VST.msl.seplog <> exp meth
R79902:79902 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R79917:79921 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R79904:79906 VST.msl.seplog <> exp meth
R79962:79964 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R79954:79959 Coq.Lists.List <> length syndef
R79965:79975 Coq.Init.Datatypes <> S constr
R79978:79983 Coq.Lists.List <> length syndef
R80069:80093 VST.floyd.client_lemmas <> extract_nth_exists_in_SEP thm
R80109:80115 Coq.Init.Logic <> eq_refl constr
R80135:80145 VST.floyd.canon <> replace_nth def
R80168:80176 VST.msl.log_normalize <> exp_andp2 thm
R80247:80251 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R80247:80251 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R80340:80344 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R80332:80335 VST.msl.seplog <> ::logic:x_'&&'_x not
R80340:80344 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R80332:80335 VST.msl.seplog <> ::logic:x_'&&'_x not
R80468:80472 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R80468:80472 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R80632:80639 VST.msl.seplog <> exp_left meth
R80448:80455 VST.msl.seplog <> exp_left meth
R80305:80322 VST.floyd.base <> extract_exists_pre def
R80693:80697 VST.floyd.canon <> PROPx def
R80703:80708 VST.floyd.canon <> LOCALx def
R80714:80717 VST.floyd.canon <> SEPx def
R80693:80697 VST.floyd.canon <> PROPx def
R80703:80708 VST.floyd.canon <> LOCALx def
R80714:80717 VST.floyd.canon <> SEPx def
R80754:80754 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R80769:80773 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R80763:80766 VST.msl.seplog <> ::logic:x_'&&'_x not
R80755:80758 VST.msl.seplog <> prop meth
R80754:80754 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R80769:80773 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R80763:80766 VST.msl.seplog <> ::logic:x_'&&'_x not
R80755:80758 VST.msl.seplog <> prop meth
R80814:80816 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R80806:80811 Coq.Lists.List <> length syndef
R80817:80827 Coq.Init.Datatypes <> S constr
R80830:80835 Coq.Lists.List <> length syndef
R80920:80938 VST.floyd.canon <> extract_prop_in_SEP thm
R80955:80961 Coq.Init.Logic <> eq_refl constr
R80981:80991 VST.floyd.canon <> replace_nth def
prf 81018:81038 <> derives_extract_PROP'
binder 81052:81053 <> P1:806
binder 81062:81062 <> P:807
binder 81064:81065 <> QR:808
binder 81067:81067 <> S:809
R81075:81075 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R81098:81107 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R81124:81128 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R81108:81112 VST.floyd.canon <> PROPx def
R81122:81123 VST.floyd.client_lemmas <> QR:808 var
R81117:81118 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R81115:81116 VST.floyd.client_lemmas <> P1:806 var
R81119:81119 VST.floyd.client_lemmas <> P:807 var
R81129:81129 VST.floyd.client_lemmas <> S:809 var
R81078:81081 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R81092:81096 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R81082:81086 VST.floyd.canon <> PROPx def
R81090:81091 VST.floyd.client_lemmas <> QR:808 var
R81088:81088 VST.floyd.client_lemmas <> P:807 var
R81097:81097 VST.floyd.client_lemmas <> S:809 var
R81076:81077 VST.floyd.client_lemmas <> P1:806 var
R81146:81150 VST.floyd.canon <> PROPx def
R81174:81188 VST.floyd.canon <> fold_right_cons thm
R81174:81188 VST.floyd.canon <> fold_right_cons thm
R81174:81188 VST.floyd.canon <> fold_right_cons thm
R81209:81221 VST.msl.seplog <> derives_trans meth
R81209:81221 VST.msl.seplog <> derives_trans meth
R81316:81320 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R81316:81320 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R81597:81601 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R81589:81592 VST.msl.seplog <> ::logic:x_'&&'_x not
R81597:81601 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R81589:81592 VST.msl.seplog <> ::logic:x_'&&'_x not
R81937:81941 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R81937:81941 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R82064:82083 VST.msl.log_normalize <> derives_extract_prop thm
R82132:82151 VST.floyd.client_lemmas <> derives_extract_PROP thm
R82235:82254 VST.floyd.client_lemmas <> derives_extract_PROP thm
R81667:81686 VST.msl.log_normalize <> derives_extract_prop thm
R81735:81754 VST.floyd.client_lemmas <> derives_extract_PROP thm
R81838:81857 VST.floyd.client_lemmas <> derives_extract_PROP thm
R81396:81413 VST.floyd.canon <> semax_extract_PROP thm
R81496:81513 VST.floyd.canon <> semax_extract_PROP thm
R82563:82573 VST.msl.log_normalize <> exp_sepcon2 thm
R82524:82534 VST.msl.log_normalize <> exp_sepcon1 thm
R82487:82495 VST.msl.log_normalize <> exp_andp2 thm
R82450:82458 VST.msl.log_normalize <> exp_andp1 thm
R82416:82423 VST.msl.seplog <> exp_left meth
R82367:82384 VST.floyd.base <> extract_exists_pre def
R82699:82703 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R82699:82703 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R82792:82796 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R82792:82796 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R82759:82761 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R86312:86316 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R86312:86316 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R86452:86460 VST.msl.seplog <> exp_right meth
R86488:86496 VST.msl.log_normalize <> exp_andp1 thm
R86529:86537 VST.msl.log_normalize <> exp_andp2 thm
R86570:86580 VST.msl.log_normalize <> exp_sepcon1 thm
R86613:86623 VST.msl.log_normalize <> exp_sepcon2 thm
R86685:86693 VST.msl.seplog <> exp_right meth
R86756:86760 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R86756:86760 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R86816:86818 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R89563:89566 Coq.Init.Datatypes <> prod ind
R89563:89566 Coq.Init.Datatypes <> prod ind
R89668:89668 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89671:89672 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89675:89675 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89787:89791 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R89792:89794 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R89799:89800 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 89795:89795 <> x:810
R89787:89791 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R89792:89794 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R89799:89800 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 89795:89795 <> x:811
R89851:89859 VST.msl.seplog <> exp_right meth
R89931:89939 VST.msl.log_normalize <> exp_andp1 thm
R89971:89979 VST.msl.log_normalize <> exp_andp2 thm
R90011:90021 VST.msl.log_normalize <> exp_sepcon1 thm
R90053:90063 VST.msl.log_normalize <> exp_sepcon2 thm
R90184:90188 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R90184:90188 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R90244:90246 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R90573:90582 VST.floyd.client_lemmas <> abbreviate def
R90584:90588 VST.veric.mpred <> mpred def
R90606:90609 Coq.Init.Datatypes <> cons constr
R90606:90609 Coq.Init.Datatypes <> cons constr
R90620:90623 Coq.Init.Datatypes <> cons constr
