DIGEST bf54d64cbe1e5f14a76336040fa3965f
FVST.floyd.loadstore_mapsto
R15:29 VST.floyd.base2 <> <> lib
R47:69 VST.floyd.client_lemmas <> <> lib
R87:115 VST.floyd.mapsto_memory_block <> <> lib
def 370:382 <> semax_load_37
R388:397 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_load prfax
prf 407:420 <> semax_load_37'
R441:450 VST.veric.juicy_extspec <> OracleKind class
binder 434:438 <> Espec:1
R457:465 VST.veric.mpred <> compspecs class
binder 453:454 <> cs:2
R485:493 VST.veric.seplog <> tycontext ind
binder 478:482 <> Delta:3
binder 496:497 <> sh:4
binder 499:500 <> id:5
binder 502:502 <> P:6
binder 504:504 <> Q:7
binder 506:506 <> R:8
binder 508:509 <> e1:9
binder 511:512 <> t2:10
R519:521 compcert.common.Values <> val ind
binder 515:516 <> v2:11
R559:566 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R604:611 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R629:638 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R827:834 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R836:840 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R918:934 VST.veric.SeparationLogic <> normal_ret_assert def
R946:950 VST.floyd.canon <> PROPx def
R966:971 VST.floyd.canon <> LOCALx def
R1029:1032 VST.floyd.canon <> SEPx def
R1034:1034 VST.floyd.loadstore_mapsto <> R:8 var
R984:987 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R974:977 VST.floyd.canon <> temp constr
R982:983 VST.floyd.loadstore_mapsto <> v2:11 var
R979:980 VST.floyd.loadstore_mapsto <> id:5 var
R988:1007 VST.floyd.client_lemmas <> remove_localdef_temp def
R1012:1012 VST.floyd.loadstore_mapsto <> Q:7 var
R1009:1010 VST.floyd.loadstore_mapsto <> id:5 var
R952:952 VST.floyd.loadstore_mapsto <> P:6 var
R898:901 compcert.cfrontend.Clight <> Sset constr
R906:907 VST.floyd.loadstore_mapsto <> e1:9 var
R903:904 VST.floyd.loadstore_mapsto <> id:5 var
R858:860 VST.msl.seplog <> ::logic:'|>'_x not
R861:865 VST.floyd.canon <> PROPx def
R870:875 VST.floyd.canon <> LOCALx def
R880:883 VST.floyd.canon <> SEPx def
R885:885 VST.floyd.loadstore_mapsto <> R:8 var
R877:877 VST.floyd.loadstore_mapsto <> Q:7 var
R867:867 VST.floyd.loadstore_mapsto <> P:6 var
R851:855 VST.floyd.loadstore_mapsto <> Delta:3 var
R845:849 VST.floyd.loadstore_mapsto <> Espec:1 var
R842:843 VST.floyd.loadstore_mapsto <> cs:2 var
R639:645 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R651:652 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R680:694 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R646:650 VST.floyd.loadstore_mapsto <> Delta:3 var
R653:657 VST.floyd.canon <> PROPx def
R662:667 VST.floyd.canon <> LOCALx def
R672:675 VST.floyd.canon <> SEPx def
R677:677 VST.floyd.loadstore_mapsto <> R:8 var
R669:669 VST.floyd.loadstore_mapsto <> Q:7 var
R659:659 VST.floyd.loadstore_mapsto <> P:6 var
R760:773 VST.msl.seplog <> ::logic:x_'&&'_x not
R826:826 VST.msl.seplog <> ::logic:x_'&&'_x not
R695:695 VST.msl.seplog <> ::logic:x_'&&'_x not
R714:727 VST.msl.seplog <> ::logic:x_'&&'_x not
R696:704 VST.veric.SeparationLogic <> tc_lvalue def
R712:713 VST.floyd.loadstore_mapsto <> e1:9 var
R706:710 VST.floyd.loadstore_mapsto <> Delta:3 var
R728:732 VST.veric.SeparationLogic <> local def
R735:736 VST.veric.lift LiftNotation :::'`('_x_')' not
R758:758 VST.veric.lift LiftNotation :::'`('_x_')' not
R737:742 VST.veric.Cop2 <> tc_val def
R756:757 VST.floyd.loadstore_mapsto <> v2:11 var
R745:750 compcert.cfrontend.Clight <> typeof def
R752:753 VST.floyd.loadstore_mapsto <> e1:9 var
R821:823 VST.msl.seplog <> ::logic:x_'*'_x not
R774:775 VST.veric.lift LiftNotation :::'`('_x_')' not
R797:820 VST.veric.lift LiftNotation :::'`('_x_')' not
R776:781 VST.veric.SeparationLogic <> mapsto def
R787:792 compcert.cfrontend.Clight <> typeof def
R794:795 VST.floyd.loadstore_mapsto <> e1:9 var
R783:784 VST.floyd.loadstore_mapsto <> sh:4 var
R816:817 VST.veric.lift LiftNotation :::'`('_x_')' not
R820:820 VST.veric.lift LiftNotation :::'`('_x_')' not
R818:819 VST.floyd.loadstore_mapsto <> v2:11 var
R800:810 VST.veric.expr <> eval_lvalue def
R812:813 VST.floyd.loadstore_mapsto <> e1:9 var
R824:825 VST.msl.seplog <> TT meth
R612:625 VST.veric.shares <> readable_share def
R627:628 VST.floyd.loadstore_mapsto <> sh:4 var
R597:599 Coq.Init.Logic <> ::type_scope:x_'='_x not
R567:581 VST.veric.expr <> is_neutral_cast def
R595:596 VST.floyd.loadstore_mapsto <> t2:10 var
R584:589 compcert.cfrontend.Clight <> typeof def
R591:592 VST.floyd.loadstore_mapsto <> e1:9 var
R600:603 Coq.Init.Datatypes <> true constr
R549:551 Coq.Init.Logic <> ::type_scope:x_'='_x not
R529:539 VST.veric.SeparationLogic <> typeof_temp def
R547:548 VST.floyd.loadstore_mapsto <> id:5 var
R541:545 VST.floyd.loadstore_mapsto <> Delta:3 var
R552:555 Coq.Init.Datatypes <> Some constr
R557:558 VST.floyd.loadstore_mapsto <> t2:10 var
R1115:1129 VST.floyd.canon <> semax_pre_post' thm
R1144:1153 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_load prfax
R1115:1129 VST.floyd.canon <> semax_pre_post' thm
R1144:1153 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_load prfax
R1195:1199 VST.floyd.canon <> PROPx def
R1231:1236 VST.floyd.canon <> LOCALx def
R1241:1244 VST.floyd.canon <> SEPx def
R1223:1226 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1202:1207 VST.veric.Cop2 <> tc_val def
R1210:1215 compcert.cfrontend.Clight <> typeof def
R1262:1272 VST.msl.log_normalize <> later_left2 thm
R1262:1272 VST.msl.log_normalize <> later_left2 thm
R1300:1304 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R1300:1304 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R1322:1329 VST.msl.log_normalize <> andp_dup thm
R1322:1329 VST.msl.log_normalize <> andp_dup thm
R1322:1329 VST.msl.log_normalize <> andp_dup thm
R1350:1362 VST.msl.seplog <> derives_trans meth
R1350:1362 VST.msl.seplog <> derives_trans meth
R1375:1386 VST.msl.log_normalize <> andp_derives thm
R1396:1407 VST.msl.seplog <> derives_refl meth
R1375:1386 VST.msl.log_normalize <> andp_derives thm
R1396:1407 VST.msl.seplog <> derives_refl meth
R1477:1496 VST.msl.log_normalize <> derives_extract_prop thm
R1477:1496 VST.msl.log_normalize <> derives_extract_prop thm
R1516:1525 VST.msl.seplog <> andp_right meth
R1516:1525 VST.msl.seplog <> andp_right meth
R1538:1547 VST.msl.seplog <> prop_right meth
R1538:1547 VST.msl.seplog <> prop_right meth
R1591:1600 VST.msl.seplog <> andp_right meth
R1591:1600 VST.msl.seplog <> andp_right meth
R1613:1622 VST.msl.seplog <> andp_left2 meth
R1613:1622 VST.msl.seplog <> andp_left2 meth
R1631:1640 VST.msl.seplog <> andp_left1 meth
R1631:1640 VST.msl.seplog <> andp_left1 meth
R1659:1668 VST.msl.seplog <> andp_left1 meth
R1659:1668 VST.msl.seplog <> andp_left1 meth
R1695:1704 VST.msl.seplog <> andp_left2 meth
R1695:1704 VST.msl.seplog <> andp_left2 meth
R1718:1730 VST.msl.seplog <> derives_trans meth
R1718:1730 VST.msl.seplog <> derives_trans meth
R1745:1754 VST.msl.seplog <> andp_right meth
R1745:1754 VST.msl.seplog <> andp_right meth
R1771:1778 VST.msl.seplog <> exp_left meth
R1771:1778 VST.msl.seplog <> exp_left meth
R1803:1812 VST.msl.seplog <> andp_left2 meth
R1803:1812 VST.msl.seplog <> andp_left2 meth
R1834:1844 VST.floyd.canon <> insert_prop thm
R1834:1844 VST.floyd.canon <> insert_prop thm
R1834:1844 VST.floyd.canon <> insert_prop thm
R1893:1902 VST.msl.seplog <> andp_left1 meth
R1905:1916 VST.msl.seplog <> derives_refl meth
R1893:1902 VST.msl.seplog <> andp_left1 meth
R1905:1916 VST.msl.seplog <> derives_refl meth
R1933:1943 VST.msl.log_normalize <> exp_derives thm
R1933:1943 VST.msl.log_normalize <> exp_derives thm
R1976:1986 VST.floyd.canon <> insert_prop thm
R1976:1986 VST.floyd.canon <> insert_prop thm
R1976:1986 VST.floyd.canon <> insert_prop thm
R2035:2046 VST.msl.log_normalize <> andp_derives thm
R2058:2067 VST.msl.seplog <> andp_left2 meth
R2070:2081 VST.msl.seplog <> derives_refl meth
R2035:2046 VST.msl.log_normalize <> andp_derives thm
R2058:2067 VST.msl.seplog <> andp_left2 meth
R2070:2081 VST.msl.seplog <> derives_refl meth
R2131:2142 VST.msl.seplog <> derives_refl meth
R2131:2142 VST.msl.seplog <> derives_refl meth
R2157:2176 VST.msl.log_normalize <> derives_extract_prop thm
R2157:2176 VST.msl.log_normalize <> derives_extract_prop thm
R2203:2211 VST.msl.log_normalize <> exp_andp2 thm
R2203:2211 VST.msl.log_normalize <> exp_andp2 thm
R2203:2211 VST.msl.log_normalize <> exp_andp2 thm
R2231:2242 VST.floyd.canon <> insert_local thm
R2231:2242 VST.floyd.canon <> insert_local thm
R2231:2242 VST.floyd.canon <> insert_local thm
R2257:2268 VST.msl.log_normalize <> andp_derives thm
R2257:2268 VST.msl.log_normalize <> andp_derives thm
R2299:2303 VST.veric.SeparationLogic <> local def
R2306:2310 VST.veric.mpred <> lift1 def
R2348:2359 VST.msl.log_normalize <> prop_derives thm
R2348:2359 VST.msl.log_normalize <> prop_derives thm
R2450:2462 VST.veric.Cop2 <> tc_val_Vundef thm
R2450:2462 VST.veric.Cop2 <> tc_val_Vundef thm
R2479:2503 VST.floyd.client_lemmas <> remove_localdef_temp_PROP thm
R2479:2503 VST.floyd.client_lemmas <> remove_localdef_temp_PROP thm
R2517:2529 VST.msl.seplog <> derives_trans meth
R2540:2552 VST.msl.seplog <> derives_trans meth
R2517:2529 VST.msl.seplog <> derives_trans meth
R2540:2552 VST.msl.seplog <> derives_trans meth
R2593:2604 VST.msl.log_normalize <> andp_derives thm
R2593:2604 VST.msl.log_normalize <> andp_derives thm
R2630:2640 VST.floyd.canon <> insert_prop thm
R2630:2640 VST.floyd.canon <> insert_prop thm
R2630:2640 VST.floyd.canon <> insert_prop thm
R2655:2664 VST.msl.seplog <> andp_left2 meth
R2655:2664 VST.msl.seplog <> andp_left2 meth
R2685:2694 VST.msl.seplog <> andp_left2 meth
R2685:2694 VST.msl.seplog <> andp_left2 meth
def 2720:2737 <> semax_cast_load_37
R2743:2757 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_cast_load prfax
prf 2767:2785 <> semax_cast_load_37'
R2806:2815 VST.veric.juicy_extspec <> OracleKind class
binder 2799:2803 <> Espec:12
R2822:2830 VST.veric.mpred <> compspecs class
binder 2818:2819 <> cs:13
R2850:2858 VST.veric.seplog <> tycontext ind
binder 2843:2847 <> Delta:14
binder 2861:2862 <> sh:15
binder 2864:2865 <> id:16
binder 2867:2867 <> P:17
binder 2869:2869 <> Q:18
binder 2871:2871 <> R:19
binder 2873:2874 <> e1:20
binder 2876:2877 <> t1:21
R2884:2886 compcert.common.Values <> val ind
binder 2880:2881 <> v2:22
R2924:2932 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2976:2983 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3001:3010 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3217:3224 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3226:3230 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R3319:3335 VST.veric.SeparationLogic <> normal_ret_assert def
R3347:3351 VST.floyd.canon <> PROPx def
R3367:3372 VST.floyd.canon <> LOCALx def
R3457:3460 VST.floyd.canon <> SEPx def
R3462:3462 VST.floyd.loadstore_mapsto <> R:19 var
R3412:3415 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3375:3378 VST.floyd.canon <> temp constr
R3384:3392 VST.veric.expr <> eval_cast def
R3409:3410 VST.floyd.loadstore_mapsto <> v2:22 var
R3406:3407 VST.floyd.loadstore_mapsto <> t1:21 var
R3395:3400 compcert.cfrontend.Clight <> typeof def
R3402:3403 VST.floyd.loadstore_mapsto <> e1:20 var
R3380:3381 VST.floyd.loadstore_mapsto <> id:16 var
R3416:3435 VST.floyd.client_lemmas <> remove_localdef_temp def
R3440:3440 VST.floyd.loadstore_mapsto <> Q:18 var
R3437:3438 VST.floyd.loadstore_mapsto <> id:16 var
R3353:3353 VST.floyd.loadstore_mapsto <> P:17 var
R3288:3291 compcert.cfrontend.Clight <> Sset constr
R3297:3301 compcert.cfrontend.Clight <> Ecast constr
R3306:3307 VST.floyd.loadstore_mapsto <> t1:21 var
R3303:3304 VST.floyd.loadstore_mapsto <> e1:20 var
R3293:3294 VST.floyd.loadstore_mapsto <> id:16 var
R3248:3250 VST.msl.seplog <> ::logic:'|>'_x not
R3251:3255 VST.floyd.canon <> PROPx def
R3260:3265 VST.floyd.canon <> LOCALx def
R3270:3273 VST.floyd.canon <> SEPx def
R3275:3275 VST.floyd.loadstore_mapsto <> R:19 var
R3267:3267 VST.floyd.loadstore_mapsto <> Q:18 var
R3257:3257 VST.floyd.loadstore_mapsto <> P:17 var
R3241:3245 VST.floyd.loadstore_mapsto <> Delta:14 var
R3235:3239 VST.floyd.loadstore_mapsto <> Espec:12 var
R3232:3233 VST.floyd.loadstore_mapsto <> cs:13 var
R3011:3017 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R3023:3024 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R3052:3066 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R3018:3022 VST.floyd.loadstore_mapsto <> Delta:14 var
R3025:3029 VST.floyd.canon <> PROPx def
R3034:3039 VST.floyd.canon <> LOCALx def
R3044:3047 VST.floyd.canon <> SEPx def
R3049:3049 VST.floyd.loadstore_mapsto <> R:19 var
R3041:3041 VST.floyd.loadstore_mapsto <> Q:18 var
R3031:3031 VST.floyd.loadstore_mapsto <> P:17 var
R3150:3163 VST.msl.seplog <> ::logic:x_'&&'_x not
R3216:3216 VST.msl.seplog <> ::logic:x_'&&'_x not
R3067:3067 VST.msl.seplog <> ::logic:x_'&&'_x not
R3086:3099 VST.msl.seplog <> ::logic:x_'&&'_x not
R3068:3076 VST.veric.SeparationLogic <> tc_lvalue def
R3084:3085 VST.floyd.loadstore_mapsto <> e1:20 var
R3078:3082 VST.floyd.loadstore_mapsto <> Delta:14 var
R3100:3104 VST.veric.SeparationLogic <> local def
R3107:3108 VST.veric.lift LiftNotation :::'`('_x_')' not
R3148:3148 VST.veric.lift LiftNotation :::'`('_x_')' not
R3109:3114 VST.veric.Cop2 <> tc_val def
R3120:3128 VST.veric.expr <> eval_cast def
R3145:3146 VST.floyd.loadstore_mapsto <> v2:22 var
R3142:3143 VST.floyd.loadstore_mapsto <> t1:21 var
R3131:3136 compcert.cfrontend.Clight <> typeof def
R3138:3139 VST.floyd.loadstore_mapsto <> e1:20 var
R3116:3117 VST.floyd.loadstore_mapsto <> t1:21 var
R3211:3213 VST.msl.seplog <> ::logic:x_'*'_x not
R3164:3165 VST.veric.lift LiftNotation :::'`('_x_')' not
R3187:3210 VST.veric.lift LiftNotation :::'`('_x_')' not
R3166:3171 VST.veric.SeparationLogic <> mapsto def
R3177:3182 compcert.cfrontend.Clight <> typeof def
R3184:3185 VST.floyd.loadstore_mapsto <> e1:20 var
R3173:3174 VST.floyd.loadstore_mapsto <> sh:15 var
R3206:3207 VST.veric.lift LiftNotation :::'`('_x_')' not
R3210:3210 VST.veric.lift LiftNotation :::'`('_x_')' not
R3208:3209 VST.floyd.loadstore_mapsto <> v2:22 var
R3190:3200 VST.veric.expr <> eval_lvalue def
R3202:3203 VST.floyd.loadstore_mapsto <> e1:20 var
R3214:3215 VST.msl.seplog <> TT meth
R2984:2997 VST.veric.shares <> readable_share def
R2999:3000 VST.floyd.loadstore_mapsto <> sh:15 var
R2968:2970 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2933:2952 VST.veric.SeparationLogic <> cast_pointer_to_bool def
R2966:2967 VST.floyd.loadstore_mapsto <> t1:21 var
R2955:2960 compcert.cfrontend.Clight <> typeof def
R2962:2963 VST.floyd.loadstore_mapsto <> e1:20 var
R2971:2975 Coq.Init.Datatypes <> false constr
R2914:2916 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2894:2904 VST.veric.SeparationLogic <> typeof_temp def
R2912:2913 VST.floyd.loadstore_mapsto <> id:16 var
R2906:2910 VST.floyd.loadstore_mapsto <> Delta:14 var
R2917:2920 Coq.Init.Datatypes <> Some constr
R2922:2923 VST.floyd.loadstore_mapsto <> t1:21 var
R3533:3533 Coq.Init.Logic <> I constr
R3533:3533 Coq.Init.Logic <> I constr
R3545:3559 VST.floyd.canon <> semax_pre_post' thm
R3574:3588 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_cast_load prfax
R3545:3559 VST.floyd.canon <> semax_pre_post' thm
R3574:3588 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_cast_load prfax
R3643:3647 VST.floyd.canon <> PROPx def
R3708:3713 VST.floyd.canon <> LOCALx def
R3718:3721 VST.floyd.canon <> SEPx def
R3700:3703 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3650:3655 VST.veric.Cop2 <> tc_val def
R3661:3669 VST.veric.val_lemmas <> force_val def
R3672:3679 VST.veric.Clight_Cop2 <> sem_cast def
R3682:3687 compcert.cfrontend.Clight <> typeof def
R3739:3749 VST.msl.log_normalize <> later_left2 thm
R3739:3749 VST.msl.log_normalize <> later_left2 thm
R3777:3781 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R3777:3781 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R3799:3806 VST.msl.log_normalize <> andp_dup thm
R3799:3806 VST.msl.log_normalize <> andp_dup thm
R3799:3806 VST.msl.log_normalize <> andp_dup thm
R3827:3839 VST.msl.seplog <> derives_trans meth
R3827:3839 VST.msl.seplog <> derives_trans meth
R3852:3863 VST.msl.log_normalize <> andp_derives thm
R3873:3884 VST.msl.seplog <> derives_refl meth
R3852:3863 VST.msl.log_normalize <> andp_derives thm
R3873:3884 VST.msl.seplog <> derives_refl meth
R3955:3974 VST.msl.log_normalize <> derives_extract_prop thm
R3955:3974 VST.msl.log_normalize <> derives_extract_prop thm
R3994:4003 VST.msl.seplog <> andp_right meth
R3994:4003 VST.msl.seplog <> andp_right meth
R4016:4025 VST.msl.seplog <> prop_right meth
R4016:4025 VST.msl.seplog <> prop_right meth
R4065:4074 VST.msl.seplog <> andp_right meth
R4065:4074 VST.msl.seplog <> andp_right meth
R4087:4096 VST.msl.seplog <> andp_left2 meth
R4087:4096 VST.msl.seplog <> andp_left2 meth
R4105:4114 VST.msl.seplog <> andp_left1 meth
R4105:4114 VST.msl.seplog <> andp_left1 meth
R4133:4142 VST.msl.seplog <> andp_left1 meth
R4133:4142 VST.msl.seplog <> andp_left1 meth
R4169:4178 VST.msl.seplog <> andp_left2 meth
R4169:4178 VST.msl.seplog <> andp_left2 meth
R4192:4204 VST.msl.seplog <> derives_trans meth
R4192:4204 VST.msl.seplog <> derives_trans meth
R4219:4228 VST.msl.seplog <> andp_right meth
R4219:4228 VST.msl.seplog <> andp_right meth
R4245:4252 VST.msl.seplog <> exp_left meth
R4245:4252 VST.msl.seplog <> exp_left meth
R4277:4286 VST.msl.seplog <> andp_left2 meth
R4277:4286 VST.msl.seplog <> andp_left2 meth
R4308:4318 VST.floyd.canon <> insert_prop thm
R4308:4318 VST.floyd.canon <> insert_prop thm
R4308:4318 VST.floyd.canon <> insert_prop thm
R4367:4376 VST.msl.seplog <> andp_left1 meth
R4379:4390 VST.msl.seplog <> derives_refl meth
R4367:4376 VST.msl.seplog <> andp_left1 meth
R4379:4390 VST.msl.seplog <> derives_refl meth
R4407:4417 VST.msl.log_normalize <> exp_derives thm
R4407:4417 VST.msl.log_normalize <> exp_derives thm
R4450:4460 VST.floyd.canon <> insert_prop thm
R4450:4460 VST.floyd.canon <> insert_prop thm
R4450:4460 VST.floyd.canon <> insert_prop thm
R4509:4520 VST.msl.log_normalize <> andp_derives thm
R4532:4541 VST.msl.seplog <> andp_left2 meth
R4544:4555 VST.msl.seplog <> derives_refl meth
R4509:4520 VST.msl.log_normalize <> andp_derives thm
R4532:4541 VST.msl.seplog <> andp_left2 meth
R4544:4555 VST.msl.seplog <> derives_refl meth
R4605:4616 VST.msl.seplog <> derives_refl meth
R4605:4616 VST.msl.seplog <> derives_refl meth
R4631:4650 VST.msl.log_normalize <> derives_extract_prop thm
R4631:4650 VST.msl.log_normalize <> derives_extract_prop thm
R4677:4685 VST.msl.log_normalize <> exp_andp2 thm
R4677:4685 VST.msl.log_normalize <> exp_andp2 thm
R4677:4685 VST.msl.log_normalize <> exp_andp2 thm
R4705:4716 VST.floyd.canon <> insert_local thm
R4705:4716 VST.floyd.canon <> insert_local thm
R4705:4716 VST.floyd.canon <> insert_local thm
R4731:4742 VST.msl.log_normalize <> andp_derives thm
R4731:4742 VST.msl.log_normalize <> andp_derives thm
R4773:4777 VST.veric.SeparationLogic <> local def
R4780:4784 VST.veric.mpred <> lift1 def
R4822:4833 VST.msl.log_normalize <> prop_derives thm
R4822:4833 VST.msl.log_normalize <> prop_derives thm
R4851:4860 VST.veric.val_lemmas <> force_val1 def
R4961:4973 VST.veric.Cop2 <> tc_val_Vundef thm
R4961:4973 VST.veric.Cop2 <> tc_val_Vundef thm
R4990:5014 VST.floyd.client_lemmas <> remove_localdef_temp_PROP thm
R4990:5014 VST.floyd.client_lemmas <> remove_localdef_temp_PROP thm
R5028:5040 VST.msl.seplog <> derives_trans meth
R5051:5063 VST.msl.seplog <> derives_trans meth
R5028:5040 VST.msl.seplog <> derives_trans meth
R5051:5063 VST.msl.seplog <> derives_trans meth
R5104:5115 VST.msl.log_normalize <> andp_derives thm
R5104:5115 VST.msl.log_normalize <> andp_derives thm
R5141:5151 VST.floyd.canon <> insert_prop thm
R5141:5151 VST.floyd.canon <> insert_prop thm
R5141:5151 VST.floyd.canon <> insert_prop thm
R5166:5175 VST.msl.seplog <> andp_left2 meth
R5166:5175 VST.msl.seplog <> andp_left2 meth
R5196:5205 VST.msl.seplog <> andp_left2 meth
R5196:5205 VST.msl.seplog <> andp_left2 meth
prf 5415:5432 <> semax_load_nth_ram
R5453:5462 VST.veric.juicy_extspec <> OracleKind class
binder 5446:5450 <> Espec:23
R5469:5477 VST.veric.mpred <> compspecs class
binder 5465:5466 <> cs:24
binder 5480:5480 <> n:25
R5490:5498 VST.veric.seplog <> tycontext ind
binder 5483:5487 <> Delta:26
binder 5501:5502 <> sh:27
binder 5504:5505 <> id:28
binder 5507:5507 <> P:29
binder 5509:5509 <> Q:30
binder 5511:5511 <> R:31
binder 5513:5514 <> e1:32
binder 5516:5518 <> Pre:33
binder 5520:5521 <> t1:34
binder 5523:5524 <> t2:35
binder 5526:5526 <> v:36
binder 5528:5528 <> p:37
R5549:5556 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5587:5594 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5632:5639 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5725:5732 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5757:5764 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5782:5789 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5819:5826 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5925:5932 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5934:5938 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R6014:6030 VST.veric.SeparationLogic <> normal_ret_assert def
R6042:6046 VST.floyd.canon <> PROPx def
R6062:6067 VST.floyd.canon <> LOCALx def
R6124:6127 VST.floyd.canon <> SEPx def
R6129:6129 VST.floyd.loadstore_mapsto <> R:31 var
R6079:6082 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6070:6073 VST.floyd.canon <> temp constr
R6078:6078 VST.floyd.loadstore_mapsto <> v:36 var
R6075:6076 VST.floyd.loadstore_mapsto <> id:28 var
R6083:6102 VST.floyd.client_lemmas <> remove_localdef_temp def
R6107:6107 VST.floyd.loadstore_mapsto <> Q:30 var
R6104:6105 VST.floyd.loadstore_mapsto <> id:28 var
R6048:6048 VST.floyd.loadstore_mapsto <> P:29 var
R5995:5998 compcert.cfrontend.Clight <> Sset constr
R6003:6004 VST.floyd.loadstore_mapsto <> e1:32 var
R6000:6001 VST.floyd.loadstore_mapsto <> id:28 var
R5956:5958 VST.msl.seplog <> ::logic:'|>'_x not
R5959:5963 VST.floyd.canon <> PROPx def
R5968:5973 VST.floyd.canon <> LOCALx def
R5978:5981 VST.floyd.canon <> SEPx def
R5983:5983 VST.floyd.loadstore_mapsto <> R:31 var
R5975:5975 VST.floyd.loadstore_mapsto <> Q:30 var
R5965:5965 VST.floyd.loadstore_mapsto <> P:29 var
R5949:5953 VST.floyd.loadstore_mapsto <> Delta:26 var
R5943:5947 VST.floyd.loadstore_mapsto <> Espec:23 var
R5940:5941 VST.floyd.loadstore_mapsto <> cs:24 var
R5827:5833 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R5839:5840 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R5868:5878 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R5834:5838 VST.floyd.loadstore_mapsto <> Delta:26 var
R5841:5845 VST.floyd.canon <> PROPx def
R5850:5855 VST.floyd.canon <> LOCALx def
R5860:5863 VST.floyd.canon <> SEPx def
R5865:5865 VST.floyd.loadstore_mapsto <> R:31 var
R5857:5857 VST.floyd.loadstore_mapsto <> Q:30 var
R5847:5847 VST.floyd.loadstore_mapsto <> P:29 var
R5879:5879 VST.msl.seplog <> ::logic:x_'&&'_x not
R5898:5902 VST.msl.seplog <> ::logic:x_'&&'_x not
R5880:5888 VST.veric.SeparationLogic <> tc_lvalue def
R5896:5897 VST.floyd.loadstore_mapsto <> e1:32 var
R5890:5894 VST.floyd.loadstore_mapsto <> Delta:26 var
R5903:5907 VST.veric.SeparationLogic <> local def
R5910:5911 VST.veric.lift LiftNotation :::'`('_x_')' not
R5923:5923 VST.veric.lift LiftNotation :::'`('_x_')' not
R5912:5917 VST.veric.Cop2 <> tc_val def
R5922:5922 VST.floyd.loadstore_mapsto <> v:36 var
R5919:5920 VST.floyd.loadstore_mapsto <> t1:34 var
R5793:5797 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R5790:5792 VST.floyd.loadstore_mapsto <> Pre:33 var
R5814:5816 VST.msl.seplog <> ::logic:x_'*'_x not
R5798:5803 VST.veric.SeparationLogic <> mapsto def
R5813:5813 VST.floyd.loadstore_mapsto <> v:36 var
R5811:5811 VST.floyd.loadstore_mapsto <> p:37 var
R5808:5809 VST.floyd.loadstore_mapsto <> t1:34 var
R5805:5806 VST.floyd.loadstore_mapsto <> sh:27 var
R5817:5818 VST.msl.seplog <> TT meth
R5765:5778 VST.veric.shares <> readable_share def
R5780:5781 VST.floyd.loadstore_mapsto <> sh:27 var
R5746:5748 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5733:5741 Coq.Lists.List <> nth_error def
R5745:5745 VST.floyd.loadstore_mapsto <> n:25 var
R5743:5743 VST.floyd.loadstore_mapsto <> R:31 var
R5749:5752 Coq.Init.Datatypes <> Some constr
R5754:5756 VST.floyd.loadstore_mapsto <> Pre:33 var
R5640:5646 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R5652:5653 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R5681:5692 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R5647:5651 VST.floyd.loadstore_mapsto <> Delta:26 var
R5654:5658 VST.floyd.canon <> PROPx def
R5663:5668 VST.floyd.canon <> LOCALx def
R5673:5676 VST.floyd.canon <> SEPx def
R5678:5678 VST.floyd.loadstore_mapsto <> R:31 var
R5670:5670 VST.floyd.loadstore_mapsto <> Q:30 var
R5660:5660 VST.floyd.loadstore_mapsto <> P:29 var
R5693:5697 VST.veric.SeparationLogic <> local def
R5700:5701 VST.veric.lift LiftNotation :::'`('_x_')' not
R5706:5723 VST.veric.lift LiftNotation :::'`('_x_')' not
R5702:5703 Coq.Init.Logic <> eq ind
R5705:5705 VST.floyd.loadstore_mapsto <> p:37 var
R5709:5719 VST.veric.expr <> eval_lvalue def
R5721:5722 VST.floyd.loadstore_mapsto <> e1:32 var
R5625:5627 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5595:5609 VST.veric.expr <> is_neutral_cast def
R5623:5624 VST.floyd.loadstore_mapsto <> t2:35 var
R5612:5617 compcert.cfrontend.Clight <> typeof def
R5619:5620 VST.floyd.loadstore_mapsto <> e1:32 var
R5628:5631 Coq.Init.Datatypes <> true constr
R5577:5579 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5557:5567 VST.veric.SeparationLogic <> typeof_temp def
R5575:5576 VST.floyd.loadstore_mapsto <> id:28 var
R5569:5573 VST.floyd.loadstore_mapsto <> Delta:26 var
R5580:5583 Coq.Init.Datatypes <> Some constr
R5585:5586 VST.floyd.loadstore_mapsto <> t2:35 var
R5544:5546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5535:5540 compcert.cfrontend.Clight <> typeof def
R5542:5543 VST.floyd.loadstore_mapsto <> e1:32 var
R5547:5548 VST.floyd.loadstore_mapsto <> t1:34 var
R6169:6182 VST.floyd.loadstore_mapsto <> semax_load_37' thm
R6169:6182 VST.floyd.loadstore_mapsto <> semax_load_37' thm
R6200:6209 VST.msl.seplog <> andp_right meth
R6200:6209 VST.msl.seplog <> andp_right meth
R6229:6236 VST.msl.log_normalize <> add_andp thm
R6229:6236 VST.msl.log_normalize <> add_andp thm
R6229:6236 VST.msl.log_normalize <> add_andp thm
R6257:6265 VST.msl.log_normalize <> andp_comm thm
R6257:6265 VST.msl.log_normalize <> andp_comm thm
R6257:6265 VST.msl.log_normalize <> andp_comm thm
R6279:6288 VST.msl.log_normalize <> andp_assoc thm
R6279:6288 VST.msl.log_normalize <> andp_assoc thm
R6279:6288 VST.msl.log_normalize <> andp_assoc thm
R6302:6316 VST.floyd.canon <> SEP_nth_isolate thm
R6322:6331 VST.floyd.canon <> insert_SEP thm
R6302:6316 VST.floyd.canon <> SEP_nth_isolate thm
R6302:6316 VST.floyd.canon <> SEP_nth_isolate thm
R6322:6331 VST.floyd.canon <> insert_SEP thm
R6322:6331 VST.floyd.canon <> insert_SEP thm
R6356:6370 VST.floyd.assert_lemmas <> local_lift2_and thm
R6356:6370 VST.floyd.assert_lemmas <> local_lift2_and thm
R6356:6370 VST.floyd.assert_lemmas <> local_lift2_and thm
R6386:6404 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R6386:6404 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R6386:6404 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R6416:6428 VST.msl.seplog <> derives_trans meth
R6416:6428 VST.msl.seplog <> derives_trans meth
R6441:6454 VST.msl.seplog <> sepcon_derives meth
R6466:6477 VST.msl.seplog <> derives_refl meth
R6441:6454 VST.msl.seplog <> sepcon_derives meth
R6466:6477 VST.msl.seplog <> derives_refl meth
R6549:6551 VST.msl.seplog <> ::logic:x_'*'_x not
R6503:6504 VST.veric.lift LiftNotation :::'`('_x_')' not
R6526:6548 VST.veric.lift LiftNotation :::'`('_x_')' not
R6505:6510 VST.veric.SeparationLogic <> mapsto def
R6516:6521 compcert.cfrontend.Clight <> typeof def
R6545:6546 VST.veric.lift LiftNotation :::'`('_x_')' not
R6548:6548 VST.veric.lift LiftNotation :::'`('_x_')' not
R6529:6539 VST.veric.expr <> eval_lvalue def
R6552:6552 VST.veric.lift LiftNotation :::'`'_x not
R6553:6554 VST.msl.seplog <> TT meth
R6569:6573 VST.veric.SeparationLogic <> local def
R6576:6580 VST.veric.mpred <> lift1 def
R6641:6652 VST.msl.seplog <> sepcon_assoc meth
R6641:6652 VST.msl.seplog <> sepcon_assoc meth
R6641:6652 VST.msl.seplog <> sepcon_assoc meth
R6665:6678 VST.msl.seplog <> sepcon_derives meth
R6665:6678 VST.msl.seplog <> sepcon_derives meth
prf 6699:6721 <> semax_cast_load_nth_ram
R6742:6751 VST.veric.juicy_extspec <> OracleKind class
binder 6735:6739 <> Espec:38
R6758:6766 VST.veric.mpred <> compspecs class
binder 6754:6755 <> cs:39
binder 6769:6769 <> n:40
R6779:6787 VST.veric.seplog <> tycontext ind
binder 6772:6776 <> Delta:41
binder 6790:6791 <> sh:42
binder 6793:6794 <> id:43
binder 6796:6796 <> P:44
binder 6798:6798 <> Q:45
binder 6800:6800 <> R:46
binder 6802:6803 <> e1:47
binder 6805:6807 <> Pre:48
binder 6809:6810 <> t1:49
binder 6812:6813 <> t2:50
binder 6815:6815 <> v:51
binder 6817:6817 <> p:52
R6838:6845 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6876:6883 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6968:6975 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7000:7007 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7042:7049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7067:7074 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7104:7111 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7227:7234 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7236:7240 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R7325:7341 VST.veric.SeparationLogic <> normal_ret_assert def
R7353:7357 VST.floyd.canon <> PROPx def
R7373:7378 VST.floyd.canon <> LOCALx def
R7453:7456 VST.floyd.canon <> SEPx def
R7458:7458 VST.floyd.loadstore_mapsto <> R:46 var
R7408:7411 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7381:7384 VST.floyd.canon <> temp constr
R7390:7398 VST.veric.expr <> eval_cast def
R7406:7406 VST.floyd.loadstore_mapsto <> v:51 var
R7403:7404 VST.floyd.loadstore_mapsto <> t2:50 var
R7400:7401 VST.floyd.loadstore_mapsto <> t1:49 var
R7386:7387 VST.floyd.loadstore_mapsto <> id:43 var
R7412:7431 VST.floyd.client_lemmas <> remove_localdef_temp def
R7436:7436 VST.floyd.loadstore_mapsto <> Q:45 var
R7433:7434 VST.floyd.loadstore_mapsto <> id:43 var
R7359:7359 VST.floyd.loadstore_mapsto <> P:44 var
R7296:7299 compcert.cfrontend.Clight <> Sset constr
R7305:7309 compcert.cfrontend.Clight <> Ecast constr
R7314:7315 VST.floyd.loadstore_mapsto <> t2:50 var
R7311:7312 VST.floyd.loadstore_mapsto <> e1:47 var
R7301:7302 VST.floyd.loadstore_mapsto <> id:43 var
R7258:7260 VST.msl.seplog <> ::logic:'|>'_x not
R7261:7265 VST.floyd.canon <> PROPx def
R7270:7275 VST.floyd.canon <> LOCALx def
R7280:7283 VST.floyd.canon <> SEPx def
R7285:7285 VST.floyd.loadstore_mapsto <> R:46 var
R7277:7277 VST.floyd.loadstore_mapsto <> Q:45 var
R7267:7267 VST.floyd.loadstore_mapsto <> P:44 var
R7251:7255 VST.floyd.loadstore_mapsto <> Delta:41 var
R7245:7249 VST.floyd.loadstore_mapsto <> Espec:38 var
R7242:7243 VST.floyd.loadstore_mapsto <> cs:39 var
R7112:7118 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R7124:7125 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R7153:7162 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R7119:7123 VST.floyd.loadstore_mapsto <> Delta:41 var
R7126:7130 VST.floyd.canon <> PROPx def
R7135:7140 VST.floyd.canon <> LOCALx def
R7145:7148 VST.floyd.canon <> SEPx def
R7150:7150 VST.floyd.loadstore_mapsto <> R:46 var
R7142:7142 VST.floyd.loadstore_mapsto <> Q:45 var
R7132:7132 VST.floyd.loadstore_mapsto <> P:44 var
R7163:7163 VST.msl.seplog <> ::logic:x_'&&'_x not
R7182:7186 VST.msl.seplog <> ::logic:x_'&&'_x not
R7164:7172 VST.veric.SeparationLogic <> tc_lvalue def
R7180:7181 VST.floyd.loadstore_mapsto <> e1:47 var
R7174:7178 VST.floyd.loadstore_mapsto <> Delta:41 var
R7187:7191 VST.veric.SeparationLogic <> local def
R7194:7195 VST.veric.lift LiftNotation :::'`('_x_')' not
R7225:7225 VST.veric.lift LiftNotation :::'`('_x_')' not
R7196:7201 VST.veric.Cop2 <> tc_val def
R7207:7215 VST.veric.expr <> eval_cast def
R7223:7223 VST.floyd.loadstore_mapsto <> v:51 var
R7220:7221 VST.floyd.loadstore_mapsto <> t2:50 var
R7217:7218 VST.floyd.loadstore_mapsto <> t1:49 var
R7203:7204 VST.floyd.loadstore_mapsto <> t2:50 var
R7078:7082 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R7075:7077 VST.floyd.loadstore_mapsto <> Pre:48 var
R7099:7101 VST.msl.seplog <> ::logic:x_'*'_x not
R7083:7088 VST.veric.SeparationLogic <> mapsto def
R7098:7098 VST.floyd.loadstore_mapsto <> v:51 var
R7096:7096 VST.floyd.loadstore_mapsto <> p:52 var
R7093:7094 VST.floyd.loadstore_mapsto <> t1:49 var
R7090:7091 VST.floyd.loadstore_mapsto <> sh:42 var
R7102:7103 VST.msl.seplog <> TT meth
R7050:7063 VST.veric.shares <> readable_share def
R7065:7066 VST.floyd.loadstore_mapsto <> sh:42 var
R7034:7036 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7008:7027 VST.veric.SeparationLogic <> cast_pointer_to_bool def
R7032:7033 VST.floyd.loadstore_mapsto <> t2:50 var
R7029:7030 VST.floyd.loadstore_mapsto <> t1:49 var
R7037:7041 Coq.Init.Datatypes <> false constr
R6989:6991 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6976:6984 Coq.Lists.List <> nth_error def
R6988:6988 VST.floyd.loadstore_mapsto <> n:40 var
R6986:6986 VST.floyd.loadstore_mapsto <> R:46 var
R6992:6995 Coq.Init.Datatypes <> Some constr
R6997:6999 VST.floyd.loadstore_mapsto <> Pre:48 var
R6884:6890 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R6896:6897 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R6925:6935 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R6891:6895 VST.floyd.loadstore_mapsto <> Delta:41 var
R6898:6902 VST.floyd.canon <> PROPx def
R6907:6912 VST.floyd.canon <> LOCALx def
R6917:6920 VST.floyd.canon <> SEPx def
R6922:6922 VST.floyd.loadstore_mapsto <> R:46 var
R6914:6914 VST.floyd.loadstore_mapsto <> Q:45 var
R6904:6904 VST.floyd.loadstore_mapsto <> P:44 var
R6936:6940 VST.veric.SeparationLogic <> local def
R6943:6944 VST.veric.lift LiftNotation :::'`('_x_')' not
R6949:6966 VST.veric.lift LiftNotation :::'`('_x_')' not
R6945:6946 Coq.Init.Logic <> eq ind
R6948:6948 VST.floyd.loadstore_mapsto <> p:52 var
R6952:6962 VST.veric.expr <> eval_lvalue def
R6964:6965 VST.floyd.loadstore_mapsto <> e1:47 var
R6866:6868 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6846:6856 VST.veric.SeparationLogic <> typeof_temp def
R6864:6865 VST.floyd.loadstore_mapsto <> id:43 var
R6858:6862 VST.floyd.loadstore_mapsto <> Delta:41 var
R6869:6872 Coq.Init.Datatypes <> Some constr
R6874:6875 VST.floyd.loadstore_mapsto <> t2:50 var
R6833:6835 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6824:6829 compcert.cfrontend.Clight <> typeof def
R6831:6832 VST.floyd.loadstore_mapsto <> e1:47 var
R6836:6837 VST.floyd.loadstore_mapsto <> t1:49 var
R7498:7516 VST.floyd.loadstore_mapsto <> semax_cast_load_37' thm
R7498:7516 VST.floyd.loadstore_mapsto <> semax_cast_load_37' thm
R7534:7543 VST.msl.seplog <> andp_right meth
R7534:7543 VST.msl.seplog <> andp_right meth
R7563:7570 VST.msl.log_normalize <> add_andp thm
R7563:7570 VST.msl.log_normalize <> add_andp thm
R7563:7570 VST.msl.log_normalize <> add_andp thm
R7591:7599 VST.msl.log_normalize <> andp_comm thm
R7591:7599 VST.msl.log_normalize <> andp_comm thm
R7591:7599 VST.msl.log_normalize <> andp_comm thm
R7613:7622 VST.msl.log_normalize <> andp_assoc thm
R7613:7622 VST.msl.log_normalize <> andp_assoc thm
R7613:7622 VST.msl.log_normalize <> andp_assoc thm
R7636:7650 VST.floyd.canon <> SEP_nth_isolate thm
R7656:7665 VST.floyd.canon <> insert_SEP thm
R7636:7650 VST.floyd.canon <> SEP_nth_isolate thm
R7636:7650 VST.floyd.canon <> SEP_nth_isolate thm
R7656:7665 VST.floyd.canon <> insert_SEP thm
R7656:7665 VST.floyd.canon <> insert_SEP thm
R7690:7704 VST.floyd.assert_lemmas <> local_lift2_and thm
R7690:7704 VST.floyd.assert_lemmas <> local_lift2_and thm
R7690:7704 VST.floyd.assert_lemmas <> local_lift2_and thm
R7720:7738 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R7720:7738 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R7720:7738 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R7750:7762 VST.msl.seplog <> derives_trans meth
R7750:7762 VST.msl.seplog <> derives_trans meth
R7775:7788 VST.msl.seplog <> sepcon_derives meth
R7800:7811 VST.msl.seplog <> derives_refl meth
R7775:7788 VST.msl.seplog <> sepcon_derives meth
R7800:7811 VST.msl.seplog <> derives_refl meth
R7883:7885 VST.msl.seplog <> ::logic:x_'*'_x not
R7837:7838 VST.veric.lift LiftNotation :::'`('_x_')' not
R7860:7882 VST.veric.lift LiftNotation :::'`('_x_')' not
R7839:7844 VST.veric.SeparationLogic <> mapsto def
R7850:7855 compcert.cfrontend.Clight <> typeof def
R7879:7880 VST.veric.lift LiftNotation :::'`('_x_')' not
R7882:7882 VST.veric.lift LiftNotation :::'`('_x_')' not
R7863:7873 VST.veric.expr <> eval_lvalue def
R7886:7886 VST.veric.lift LiftNotation :::'`'_x not
R7887:7888 VST.msl.seplog <> TT meth
R7903:7907 VST.veric.SeparationLogic <> local def
R7910:7914 VST.veric.mpred <> lift1 def
R7975:7986 VST.msl.seplog <> sepcon_assoc meth
R7975:7986 VST.msl.seplog <> sepcon_assoc meth
R7975:7986 VST.msl.seplog <> sepcon_assoc meth
R7999:8012 VST.msl.seplog <> sepcon_derives meth
R7999:8012 VST.msl.seplog <> sepcon_derives meth
prf 8033:8051 <> semax_store_nth_ram
R8071:8080 VST.veric.juicy_extspec <> OracleKind class
binder 8064:8068 <> Espec:53
R8088:8096 VST.veric.mpred <> compspecs class
binder 8084:8085 <> cs:54
binder 8099:8099 <> n:55
binder 8101:8105 <> Delta:56
binder 8107:8107 <> P:57
binder 8109:8109 <> Q:58
binder 8111:8111 <> R:59
binder 8113:8114 <> e1:60
binder 8116:8117 <> e2:61
binder 8119:8121 <> Pre:62
binder 8123:8126 <> Post:63
binder 8128:8128 <> p:64
binder 8130:8130 <> v:65
binder 8132:8133 <> sh:66
binder 8135:8136 <> t1:67
R8157:8164 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8250:8257 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8352:8359 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8384:8391 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8409:8416 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8469:8476 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8581:8588 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8589:8593 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R8666:8682 VST.veric.SeparationLogic <> normal_ret_assert def
R8693:8697 VST.floyd.canon <> PROPx def
R8702:8707 VST.floyd.canon <> LOCALx def
R8712:8715 VST.floyd.canon <> SEPx def
R8718:8728 VST.floyd.canon <> replace_nth def
R8734:8737 VST.floyd.loadstore_mapsto <> Post:63 var
R8732:8732 VST.floyd.loadstore_mapsto <> R:59 var
R8730:8730 VST.floyd.loadstore_mapsto <> n:55 var
R8709:8709 VST.floyd.loadstore_mapsto <> Q:58 var
R8699:8699 VST.floyd.loadstore_mapsto <> P:57 var
R8645:8651 compcert.cfrontend.Clight <> Sassign constr
R8656:8657 VST.floyd.loadstore_mapsto <> e2:61 var
R8653:8654 VST.floyd.loadstore_mapsto <> e1:60 var
R8607:8609 VST.msl.seplog <> ::logic:'|>'_x not
R8610:8614 VST.floyd.canon <> PROPx def
R8619:8624 VST.floyd.canon <> LOCALx def
R8629:8632 VST.floyd.canon <> SEPx def
R8634:8634 VST.floyd.loadstore_mapsto <> R:59 var
R8626:8626 VST.floyd.loadstore_mapsto <> Q:58 var
R8616:8616 VST.floyd.loadstore_mapsto <> P:57 var
R8595:8599 VST.floyd.loadstore_mapsto <> Delta:56 var
R8477:8483 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R8489:8490 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R8518:8527 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R8484:8488 VST.floyd.loadstore_mapsto <> Delta:56 var
R8491:8495 VST.floyd.canon <> PROPx def
R8500:8505 VST.floyd.canon <> LOCALx def
R8510:8513 VST.floyd.canon <> SEPx def
R8515:8515 VST.floyd.loadstore_mapsto <> R:59 var
R8507:8507 VST.floyd.loadstore_mapsto <> Q:58 var
R8497:8497 VST.floyd.loadstore_mapsto <> P:57 var
R8528:8528 VST.msl.seplog <> ::logic:x_'&&'_x not
R8547:8552 VST.msl.seplog <> ::logic:x_'&&'_x not
R8580:8580 VST.msl.seplog <> ::logic:x_'&&'_x not
R8529:8537 VST.veric.SeparationLogic <> tc_lvalue def
R8545:8546 VST.floyd.loadstore_mapsto <> e1:60 var
R8539:8543 VST.floyd.loadstore_mapsto <> Delta:56 var
R8553:8559 VST.veric.SeparationLogic <> tc_expr def
R8568:8572 compcert.cfrontend.Clight <> Ecast constr
R8577:8578 VST.floyd.loadstore_mapsto <> t1:67 var
R8574:8575 VST.floyd.loadstore_mapsto <> e2:61 var
R8561:8565 VST.floyd.loadstore_mapsto <> Delta:56 var
R8420:8424 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R8417:8419 VST.floyd.loadstore_mapsto <> Pre:62 var
R8440:8443 VST.msl.seplog <> ::logic:x_'*'_x not
R8468:8468 VST.msl.seplog <> ::logic:x_'*'_x not
R8425:8431 VST.veric.SeparationLogic <> mapsto_ def
R8439:8439 VST.floyd.loadstore_mapsto <> p:64 var
R8436:8437 VST.floyd.loadstore_mapsto <> t1:67 var
R8433:8434 VST.floyd.loadstore_mapsto <> sh:66 var
R8460:8463 VST.msl.seplog <> ::logic:x_'-*'_x not
R8444:8449 VST.veric.SeparationLogic <> mapsto def
R8459:8459 VST.floyd.loadstore_mapsto <> v:65 var
R8457:8457 VST.floyd.loadstore_mapsto <> p:64 var
R8454:8455 VST.floyd.loadstore_mapsto <> t1:67 var
R8451:8452 VST.floyd.loadstore_mapsto <> sh:66 var
R8464:8467 VST.floyd.loadstore_mapsto <> Post:63 var
R8392:8405 VST.veric.shares <> writable_share def
R8407:8408 VST.floyd.loadstore_mapsto <> sh:66 var
R8373:8375 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8360:8368 Coq.Lists.List <> nth_error def
R8372:8372 VST.floyd.loadstore_mapsto <> n:55 var
R8370:8370 VST.floyd.loadstore_mapsto <> R:59 var
R8376:8379 Coq.Init.Datatypes <> Some constr
R8381:8383 VST.floyd.loadstore_mapsto <> Pre:62 var
R8258:8264 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R8270:8271 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R8299:8310 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R8265:8269 VST.floyd.loadstore_mapsto <> Delta:56 var
R8272:8276 VST.floyd.canon <> PROPx def
R8281:8286 VST.floyd.canon <> LOCALx def
R8291:8294 VST.floyd.canon <> SEPx def
R8296:8296 VST.floyd.loadstore_mapsto <> R:59 var
R8288:8288 VST.floyd.loadstore_mapsto <> Q:58 var
R8278:8278 VST.floyd.loadstore_mapsto <> P:57 var
R8311:8315 VST.veric.SeparationLogic <> local def
R8318:8319 VST.veric.lift LiftNotation :::'`('_x_')' not
R8324:8350 VST.veric.lift LiftNotation :::'`('_x_')' not
R8320:8321 Coq.Init.Logic <> eq ind
R8323:8323 VST.floyd.loadstore_mapsto <> v:65 var
R8327:8335 VST.veric.expr <> eval_expr def
R8338:8342 compcert.cfrontend.Clight <> Ecast constr
R8347:8348 VST.floyd.loadstore_mapsto <> t1:67 var
R8344:8345 VST.floyd.loadstore_mapsto <> e2:61 var
R8165:8171 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R8177:8178 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R8206:8217 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R8172:8176 VST.floyd.loadstore_mapsto <> Delta:56 var
R8179:8183 VST.floyd.canon <> PROPx def
R8188:8193 VST.floyd.canon <> LOCALx def
R8198:8201 VST.floyd.canon <> SEPx def
R8203:8203 VST.floyd.loadstore_mapsto <> R:59 var
R8195:8195 VST.floyd.loadstore_mapsto <> Q:58 var
R8185:8185 VST.floyd.loadstore_mapsto <> P:57 var
R8218:8222 VST.veric.SeparationLogic <> local def
R8225:8226 VST.veric.lift LiftNotation :::'`('_x_')' not
R8231:8248 VST.veric.lift LiftNotation :::'`('_x_')' not
R8227:8228 Coq.Init.Logic <> eq ind
R8230:8230 VST.floyd.loadstore_mapsto <> p:64 var
R8234:8244 VST.veric.expr <> eval_lvalue def
R8246:8247 VST.floyd.loadstore_mapsto <> e1:60 var
R8152:8154 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8143:8148 compcert.cfrontend.Clight <> typeof def
R8150:8151 VST.floyd.loadstore_mapsto <> e1:60 var
R8155:8156 VST.floyd.loadstore_mapsto <> t1:67 var
R8771:8786 VST.floyd.canon <> semax_pre_simple thm
R8799:8809 VST.floyd.canon <> semax_post' thm
R8821:8831 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_store prfax
R8771:8786 VST.floyd.canon <> semax_pre_simple thm
R8799:8809 VST.floyd.canon <> semax_post' thm
R8821:8831 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_store prfax
R8853:8863 VST.msl.log_normalize <> later_left2 thm
R8853:8863 VST.msl.log_normalize <> later_left2 thm
R8876:8885 VST.msl.seplog <> andp_right meth
R8876:8885 VST.msl.seplog <> andp_right meth
R8938:8947 VST.msl.seplog <> LiftNatDed inst
R8963:8968 VST.veric.SeparationLogic <> Nveric inst
R8957:8961 VST.veric.mpred <> mpred def
R8949:8955 VST.veric.mpred <> environ ind
R8984:8994 VST.veric.SeparationLogic <> LiftNatDed' inst
R9002:9007 VST.veric.SeparationLogic <> Nveric inst
R8996:9000 VST.veric.mpred <> mpred def
R8938:8947 VST.msl.seplog <> LiftNatDed inst
R8963:8968 VST.veric.SeparationLogic <> Nveric inst
R8957:8961 VST.veric.mpred <> mpred def
R8949:8955 VST.veric.mpred <> environ ind
R9024:9031 VST.msl.log_normalize <> add_andp thm
R9024:9031 VST.msl.log_normalize <> add_andp thm
R9024:9031 VST.msl.log_normalize <> add_andp thm
R9055:9062 VST.msl.log_normalize <> add_andp thm
R9055:9062 VST.msl.log_normalize <> add_andp thm
R9055:9062 VST.msl.log_normalize <> add_andp thm
R9086:9100 VST.floyd.canon <> SEP_nth_isolate thm
R9106:9115 VST.floyd.canon <> insert_SEP thm
R9086:9100 VST.floyd.canon <> SEP_nth_isolate thm
R9086:9100 VST.floyd.canon <> SEP_nth_isolate thm
R9106:9115 VST.floyd.canon <> insert_SEP thm
R9106:9115 VST.floyd.canon <> insert_SEP thm
R9141:9149 VST.msl.log_normalize <> andp_comm thm
R9154:9158 VST.veric.SeparationLogic <> local def
R9141:9149 VST.msl.log_normalize <> andp_comm thm
R9154:9158 VST.veric.SeparationLogic <> local def
R9141:9149 VST.msl.log_normalize <> andp_comm thm
R9154:9158 VST.veric.SeparationLogic <> local def
R9141:9149 VST.msl.log_normalize <> andp_comm thm
R9154:9158 VST.veric.SeparationLogic <> local def
R9141:9149 VST.msl.log_normalize <> andp_comm thm
R9154:9158 VST.veric.SeparationLogic <> local def
R9181:9188 VST.msl.log_normalize <> andp_dup thm
R9191:9195 VST.veric.SeparationLogic <> local def
R9198:9199 VST.veric.lift LiftNotation :::'`('_x_')' not
R9204:9221 VST.veric.lift LiftNotation :::'`('_x_')' not
R9200:9201 Coq.Init.Logic <> eq ind
R9207:9217 VST.veric.expr <> eval_lvalue def
R9227:9236 VST.msl.log_normalize <> andp_assoc thm
R9181:9188 VST.msl.log_normalize <> andp_dup thm
R9191:9195 VST.veric.SeparationLogic <> local def
R9198:9199 VST.veric.lift LiftNotation :::'`('_x_')' not
R9204:9221 VST.veric.lift LiftNotation :::'`('_x_')' not
R9200:9201 Coq.Init.Logic <> eq ind
R9207:9217 VST.veric.expr <> eval_lvalue def
R9181:9188 VST.msl.log_normalize <> andp_dup thm
R9191:9195 VST.veric.SeparationLogic <> local def
R9198:9199 VST.veric.lift LiftNotation :::'`('_x_')' not
R9204:9221 VST.veric.lift LiftNotation :::'`('_x_')' not
R9200:9201 Coq.Init.Logic <> eq ind
R9207:9217 VST.veric.expr <> eval_lvalue def
R9227:9236 VST.msl.log_normalize <> andp_assoc thm
R9227:9236 VST.msl.log_normalize <> andp_assoc thm
R9259:9277 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R9259:9277 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R9259:9277 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R9259:9277 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R9259:9277 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R9259:9277 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R9259:9277 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R9292:9310 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R9292:9310 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R9292:9310 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R9324:9336 VST.msl.seplog <> derives_trans meth
R9324:9336 VST.msl.seplog <> derives_trans meth
R9351:9364 VST.msl.seplog <> sepcon_derives meth
R9376:9387 VST.msl.seplog <> derives_refl meth
R9351:9364 VST.msl.seplog <> sepcon_derives meth
R9376:9387 VST.msl.seplog <> derives_refl meth
R9457:9459 VST.msl.seplog <> ::logic:x_'*'_x not
R9415:9416 VST.veric.lift LiftNotation :::'`('_x_')' not
R9439:9456 VST.veric.lift LiftNotation :::'`('_x_')' not
R9417:9423 VST.veric.SeparationLogic <> mapsto_ def
R9429:9434 compcert.cfrontend.Clight <> typeof def
R9442:9452 VST.veric.expr <> eval_lvalue def
R9460:9461 VST.veric.lift LiftNotation :::'`('_x_')' not
R9486:9486 VST.veric.lift LiftNotation :::'`('_x_')' not
R9478:9481 VST.msl.seplog <> ::logic:x_'-*'_x not
R9462:9467 VST.veric.SeparationLogic <> mapsto def
R9503:9507 VST.veric.SeparationLogic <> local def
R9510:9514 VST.veric.mpred <> lift1 def
R9595:9606 VST.msl.seplog <> sepcon_assoc meth
R9595:9606 VST.msl.seplog <> sepcon_assoc meth
R9595:9606 VST.msl.seplog <> sepcon_assoc meth
R9621:9632 VST.msl.seplog <> derives_refl meth
R9621:9632 VST.msl.seplog <> derives_refl meth
R9650:9661 VST.msl.seplog <> sepcon_assoc meth
R9650:9661 VST.msl.seplog <> sepcon_assoc meth
R9650:9661 VST.msl.seplog <> sepcon_assoc meth
R9677:9695 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R9702:9720 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R9677:9695 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R9677:9695 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R9677:9695 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R9677:9695 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R9677:9695 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R9702:9720 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R9702:9720 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R9702:9720 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R9702:9720 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R9702:9720 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R9702:9720 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R9702:9720 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R9702:9720 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R9702:9720 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R9702:9720 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R9736:9758 VST.floyd.canon <> SEP_replace_nth_isolate thm
R9783:9792 VST.floyd.canon <> insert_SEP thm
R9736:9758 VST.floyd.canon <> SEP_replace_nth_isolate thm
R9736:9758 VST.floyd.canon <> SEP_replace_nth_isolate thm
R9783:9792 VST.floyd.canon <> insert_SEP thm
R9783:9792 VST.floyd.canon <> insert_SEP thm
R9814:9827 VST.msl.seplog <> sepcon_derives meth
R9814:9827 VST.msl.seplog <> sepcon_derives meth
R9848:9848 VST.veric.lift LiftNotation :::'`'_x not
R9858:9910 VST.veric.lift LiftNotation :::'`'_x not
R9849:9857 VST.veric.val_lemmas <> force_val def
R9860:9861 VST.veric.lift LiftNotation :::'`('_x_')' not
R9894:9909 VST.veric.lift LiftNotation :::'`('_x_')' not
R9862:9869 VST.veric.Clight_Cop2 <> sem_cast def
R9884:9889 compcert.cfrontend.Clight <> typeof def
R9872:9877 compcert.cfrontend.Clight <> typeof def
R9897:9905 VST.veric.expr <> eval_expr def
R9925:9933 VST.veric.expr <> eval_expr def
R9936:9940 compcert.cfrontend.Clight <> Ecast constr
R9946:9951 compcert.cfrontend.Clight <> typeof def
R9848:9848 VST.veric.lift LiftNotation :::'`'_x not
R9858:9910 VST.veric.lift LiftNotation :::'`'_x not
R9849:9857 VST.veric.val_lemmas <> force_val def
R9860:9861 VST.veric.lift LiftNotation :::'`('_x_')' not
R9894:9909 VST.veric.lift LiftNotation :::'`('_x_')' not
R9862:9869 VST.veric.Clight_Cop2 <> sem_cast def
R9884:9889 compcert.cfrontend.Clight <> typeof def
R9872:9877 compcert.cfrontend.Clight <> typeof def
R9897:9905 VST.veric.expr <> eval_expr def
R9925:9933 VST.veric.expr <> eval_expr def
R9936:9940 compcert.cfrontend.Clight <> Ecast constr
R9946:9951 compcert.cfrontend.Clight <> typeof def
R9971:9981 VST.veric.expr <> eval_lvalue def
R9983:9991 VST.veric.expr <> eval_expr def
R10005:10009 VST.veric.SeparationLogic <> local def
R10012:10016 VST.veric.mpred <> lift1 def
R10081:10091 VST.veric.expr <> eval_lvalue def
R10093:10101 VST.veric.expr <> eval_expr def
R10128:10144 VST.msl.log_normalize <> modus_ponens_wand thm
R10128:10144 VST.msl.log_normalize <> modus_ponens_wand thm
R9971:9981 VST.veric.expr <> eval_lvalue def
R9983:9991 VST.veric.expr <> eval_expr def
R10081:10091 VST.veric.expr <> eval_lvalue def
R10093:10101 VST.veric.expr <> eval_expr def
prf 10159:10188 <> semax_store_nth_ram_union_hack
R10208:10217 VST.veric.juicy_extspec <> OracleKind class
binder 10201:10205 <> Espec:68
R10225:10233 VST.veric.mpred <> compspecs class
binder 10221:10222 <> cs:69
binder 10236:10236 <> n:70
binder 10238:10242 <> Delta:71
binder 10244:10244 <> P:72
binder 10246:10246 <> Q:73
binder 10248:10248 <> R:74
binder 10250:10251 <> e1:75
binder 10253:10254 <> e2:76
binder 10256:10258 <> Pre:77
binder 10260:10263 <> Post:78
binder 10265:10265 <> p:79
binder 10267:10267 <> v:80
binder 10269:10270 <> v':81
binder 10272:10273 <> ch:82
binder 10275:10277 <> ch':83
binder 10279:10280 <> sh:84
binder 10282:10283 <> t1:85
binder 10285:10286 <> t2:86
R10307:10314 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10400:10407 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10502:10509 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10534:10541 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10559:10566 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10615:10622 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10650:10657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10686:10693 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10723:10730 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10760:10767 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10842:10849 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10954:10961 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10962:10966 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R11039:11055 VST.veric.SeparationLogic <> normal_ret_assert def
R11066:11070 VST.floyd.canon <> PROPx def
R11075:11080 VST.floyd.canon <> LOCALx def
R11085:11088 VST.floyd.canon <> SEPx def
R11091:11101 VST.floyd.canon <> replace_nth def
R11107:11110 VST.floyd.loadstore_mapsto <> Post:78 var
R11105:11105 VST.floyd.loadstore_mapsto <> R:74 var
R11103:11103 VST.floyd.loadstore_mapsto <> n:70 var
R11082:11082 VST.floyd.loadstore_mapsto <> Q:73 var
R11072:11072 VST.floyd.loadstore_mapsto <> P:72 var
R11018:11024 compcert.cfrontend.Clight <> Sassign constr
R11029:11030 VST.floyd.loadstore_mapsto <> e2:76 var
R11026:11027 VST.floyd.loadstore_mapsto <> e1:75 var
R10980:10982 VST.msl.seplog <> ::logic:'|>'_x not
R10983:10987 VST.floyd.canon <> PROPx def
R10992:10997 VST.floyd.canon <> LOCALx def
R11002:11005 VST.floyd.canon <> SEPx def
R11007:11007 VST.floyd.loadstore_mapsto <> R:74 var
R10999:10999 VST.floyd.loadstore_mapsto <> Q:73 var
R10989:10989 VST.floyd.loadstore_mapsto <> P:72 var
R10968:10972 VST.floyd.loadstore_mapsto <> Delta:71 var
R10850:10856 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R10862:10863 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R10891:10900 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R10857:10861 VST.floyd.loadstore_mapsto <> Delta:71 var
R10864:10868 VST.floyd.canon <> PROPx def
R10873:10878 VST.floyd.canon <> LOCALx def
R10883:10886 VST.floyd.canon <> SEPx def
R10888:10888 VST.floyd.loadstore_mapsto <> R:74 var
R10880:10880 VST.floyd.loadstore_mapsto <> Q:73 var
R10870:10870 VST.floyd.loadstore_mapsto <> P:72 var
R10901:10901 VST.msl.seplog <> ::logic:x_'&&'_x not
R10920:10925 VST.msl.seplog <> ::logic:x_'&&'_x not
R10953:10953 VST.msl.seplog <> ::logic:x_'&&'_x not
R10902:10910 VST.veric.SeparationLogic <> tc_lvalue def
R10918:10919 VST.floyd.loadstore_mapsto <> e1:75 var
R10912:10916 VST.floyd.loadstore_mapsto <> Delta:71 var
R10926:10932 VST.veric.SeparationLogic <> tc_expr def
R10941:10945 compcert.cfrontend.Clight <> Ecast constr
R10950:10951 VST.floyd.loadstore_mapsto <> t1:85 var
R10947:10948 VST.floyd.loadstore_mapsto <> e2:76 var
R10934:10938 VST.floyd.loadstore_mapsto <> Delta:71 var
R10771:10775 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R10768:10770 VST.floyd.loadstore_mapsto <> Pre:77 var
R10776:10776 VST.msl.seplog <> ::logic:x_'*'_x not
R10811:10815 VST.msl.seplog <> ::logic:x_'*'_x not
R10841:10841 VST.msl.seplog <> ::logic:x_'*'_x not
R10792:10795 VST.msl.seplog <> ::logic:x_'&&'_x not
R10777:10783 VST.veric.SeparationLogic <> mapsto_ def
R10791:10791 VST.floyd.loadstore_mapsto <> p:79 var
R10788:10789 VST.floyd.loadstore_mapsto <> t1:85 var
R10785:10786 VST.floyd.loadstore_mapsto <> sh:84 var
R10796:10802 VST.veric.SeparationLogic <> mapsto_ def
R10810:10810 VST.floyd.loadstore_mapsto <> p:79 var
R10807:10808 VST.floyd.loadstore_mapsto <> t2:86 var
R10804:10805 VST.floyd.loadstore_mapsto <> sh:84 var
R10833:10836 VST.msl.seplog <> ::logic:x_'-*'_x not
R10816:10821 VST.veric.SeparationLogic <> mapsto def
R10831:10832 VST.floyd.loadstore_mapsto <> v':81 var
R10829:10829 VST.floyd.loadstore_mapsto <> p:79 var
R10826:10827 VST.floyd.loadstore_mapsto <> t2:86 var
R10823:10824 VST.floyd.loadstore_mapsto <> sh:84 var
R10837:10840 VST.floyd.loadstore_mapsto <> Post:78 var
R10731:10747 compcert.common.Memdata <> decode_encode_val def
R10758:10759 VST.floyd.loadstore_mapsto <> v':81 var
R10754:10756 VST.floyd.loadstore_mapsto <> ch':83 var
R10751:10752 VST.floyd.loadstore_mapsto <> ch:82 var
R10749:10749 VST.floyd.loadstore_mapsto <> v:80 var
R10708:10710 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10694:10704 compcert.cfrontend.Ctypes <> access_mode def
R10706:10707 VST.floyd.loadstore_mapsto <> t2:86 var
R10711:10718 compcert.cfrontend.Ctypes <> By_value constr
R10720:10722 VST.floyd.loadstore_mapsto <> ch':83 var
R10672:10674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10658:10668 compcert.cfrontend.Ctypes <> access_mode def
R10670:10671 VST.floyd.loadstore_mapsto <> t1:85 var
R10675:10682 compcert.cfrontend.Ctypes <> By_value constr
R10684:10685 VST.floyd.loadstore_mapsto <> ch:82 var
R10623:10642 VST.veric.SeparationLogic <> decode_encode_val_ok def
R10647:10649 VST.floyd.loadstore_mapsto <> ch':83 var
R10644:10645 VST.floyd.loadstore_mapsto <> ch:82 var
R10608:10610 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10583:10586 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R10568:10579 VST.veric.SeparationLogic <> numeric_type def
R10581:10582 VST.floyd.loadstore_mapsto <> t1:85 var
R10587:10598 VST.veric.SeparationLogic <> numeric_type def
R10600:10601 VST.floyd.loadstore_mapsto <> t2:86 var
R10611:10614 Coq.Init.Datatypes <> true constr
R10542:10555 VST.veric.shares <> writable_share def
R10557:10558 VST.floyd.loadstore_mapsto <> sh:84 var
R10523:10525 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10510:10518 Coq.Lists.List <> nth_error def
R10522:10522 VST.floyd.loadstore_mapsto <> n:70 var
R10520:10520 VST.floyd.loadstore_mapsto <> R:74 var
R10526:10529 Coq.Init.Datatypes <> Some constr
R10531:10533 VST.floyd.loadstore_mapsto <> Pre:77 var
R10408:10414 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R10420:10421 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R10449:10460 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R10415:10419 VST.floyd.loadstore_mapsto <> Delta:71 var
R10422:10426 VST.floyd.canon <> PROPx def
R10431:10436 VST.floyd.canon <> LOCALx def
R10441:10444 VST.floyd.canon <> SEPx def
R10446:10446 VST.floyd.loadstore_mapsto <> R:74 var
R10438:10438 VST.floyd.loadstore_mapsto <> Q:73 var
R10428:10428 VST.floyd.loadstore_mapsto <> P:72 var
R10461:10465 VST.veric.SeparationLogic <> local def
R10468:10469 VST.veric.lift LiftNotation :::'`('_x_')' not
R10474:10500 VST.veric.lift LiftNotation :::'`('_x_')' not
R10470:10471 Coq.Init.Logic <> eq ind
R10473:10473 VST.floyd.loadstore_mapsto <> v:80 var
R10477:10485 VST.veric.expr <> eval_expr def
R10488:10492 compcert.cfrontend.Clight <> Ecast constr
R10497:10498 VST.floyd.loadstore_mapsto <> t1:85 var
R10494:10495 VST.floyd.loadstore_mapsto <> e2:76 var
R10315:10321 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R10327:10328 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R10356:10367 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R10322:10326 VST.floyd.loadstore_mapsto <> Delta:71 var
R10329:10333 VST.floyd.canon <> PROPx def
R10338:10343 VST.floyd.canon <> LOCALx def
R10348:10351 VST.floyd.canon <> SEPx def
R10353:10353 VST.floyd.loadstore_mapsto <> R:74 var
R10345:10345 VST.floyd.loadstore_mapsto <> Q:73 var
R10335:10335 VST.floyd.loadstore_mapsto <> P:72 var
R10368:10372 VST.veric.SeparationLogic <> local def
R10375:10376 VST.veric.lift LiftNotation :::'`('_x_')' not
R10381:10398 VST.veric.lift LiftNotation :::'`('_x_')' not
R10377:10378 Coq.Init.Logic <> eq ind
R10380:10380 VST.floyd.loadstore_mapsto <> p:79 var
R10384:10394 VST.veric.expr <> eval_lvalue def
R10396:10397 VST.floyd.loadstore_mapsto <> e1:75 var
R10302:10304 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10293:10298 compcert.cfrontend.Clight <> typeof def
R10300:10301 VST.floyd.loadstore_mapsto <> e1:75 var
R10305:10306 VST.floyd.loadstore_mapsto <> t1:85 var
R11170:11185 VST.floyd.canon <> semax_pre_simple thm
R11198:11208 VST.floyd.canon <> semax_post' thm
R11220:11241 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_store_union_hack prfax
R11170:11185 VST.floyd.canon <> semax_pre_simple thm
R11198:11208 VST.floyd.canon <> semax_post' thm
R11220:11241 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic semax_store_union_hack prfax
R11270:11280 VST.msl.log_normalize <> later_left2 thm
R11270:11280 VST.msl.log_normalize <> later_left2 thm
R11293:11302 VST.msl.seplog <> andp_right meth
R11293:11302 VST.msl.seplog <> andp_right meth
R11355:11364 VST.msl.seplog <> LiftNatDed inst
R11380:11385 VST.veric.SeparationLogic <> Nveric inst
R11374:11378 VST.veric.mpred <> mpred def
R11366:11372 VST.veric.mpred <> environ ind
R11401:11411 VST.veric.SeparationLogic <> LiftNatDed' inst
R11419:11424 VST.veric.SeparationLogic <> Nveric inst
R11413:11417 VST.veric.mpred <> mpred def
R11355:11364 VST.msl.seplog <> LiftNatDed inst
R11380:11385 VST.veric.SeparationLogic <> Nveric inst
R11374:11378 VST.veric.mpred <> mpred def
R11366:11372 VST.veric.mpred <> environ ind
R11441:11448 VST.msl.log_normalize <> add_andp thm
R11441:11448 VST.msl.log_normalize <> add_andp thm
R11441:11448 VST.msl.log_normalize <> add_andp thm
R11472:11479 VST.msl.log_normalize <> add_andp thm
R11472:11479 VST.msl.log_normalize <> add_andp thm
R11472:11479 VST.msl.log_normalize <> add_andp thm
R11503:11517 VST.floyd.canon <> SEP_nth_isolate thm
R11523:11532 VST.floyd.canon <> insert_SEP thm
R11503:11517 VST.floyd.canon <> SEP_nth_isolate thm
R11503:11517 VST.floyd.canon <> SEP_nth_isolate thm
R11523:11532 VST.floyd.canon <> insert_SEP thm
R11523:11532 VST.floyd.canon <> insert_SEP thm
R11558:11566 VST.msl.log_normalize <> andp_comm thm
R11571:11575 VST.veric.SeparationLogic <> local def
R11558:11566 VST.msl.log_normalize <> andp_comm thm
R11571:11575 VST.veric.SeparationLogic <> local def
R11558:11566 VST.msl.log_normalize <> andp_comm thm
R11571:11575 VST.veric.SeparationLogic <> local def
R11558:11566 VST.msl.log_normalize <> andp_comm thm
R11571:11575 VST.veric.SeparationLogic <> local def
R11558:11566 VST.msl.log_normalize <> andp_comm thm
R11571:11575 VST.veric.SeparationLogic <> local def
R11598:11605 VST.msl.log_normalize <> andp_dup thm
R11608:11612 VST.veric.SeparationLogic <> local def
R11615:11616 VST.veric.lift LiftNotation :::'`('_x_')' not
R11621:11638 VST.veric.lift LiftNotation :::'`('_x_')' not
R11617:11618 Coq.Init.Logic <> eq ind
R11624:11634 VST.veric.expr <> eval_lvalue def
R11644:11653 VST.msl.log_normalize <> andp_assoc thm
R11598:11605 VST.msl.log_normalize <> andp_dup thm
R11608:11612 VST.veric.SeparationLogic <> local def
R11615:11616 VST.veric.lift LiftNotation :::'`('_x_')' not
R11621:11638 VST.veric.lift LiftNotation :::'`('_x_')' not
R11617:11618 Coq.Init.Logic <> eq ind
R11624:11634 VST.veric.expr <> eval_lvalue def
R11598:11605 VST.msl.log_normalize <> andp_dup thm
R11608:11612 VST.veric.SeparationLogic <> local def
R11615:11616 VST.veric.lift LiftNotation :::'`('_x_')' not
R11621:11638 VST.veric.lift LiftNotation :::'`('_x_')' not
R11617:11618 Coq.Init.Logic <> eq ind
R11624:11634 VST.veric.expr <> eval_lvalue def
R11644:11653 VST.msl.log_normalize <> andp_assoc thm
R11644:11653 VST.msl.log_normalize <> andp_assoc thm
R11676:11694 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R11676:11694 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R11676:11694 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R11676:11694 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R11676:11694 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R11676:11694 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R11676:11694 VST.floyd.client_lemmas <> local_sepcon_assoc2 thm
R11709:11727 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R11709:11727 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R11709:11727 VST.floyd.client_lemmas <> local_sepcon_assoc1 thm
R11741:11753 VST.msl.seplog <> derives_trans meth
R11741:11753 VST.msl.seplog <> derives_trans meth
R11768:11781 VST.msl.seplog <> sepcon_derives meth
R11793:11804 VST.msl.seplog <> derives_refl meth
R11768:11781 VST.msl.seplog <> sepcon_derives meth
R11793:11804 VST.msl.seplog <> derives_refl meth
R11832:11832 VST.msl.seplog <> ::logic:x_'*'_x not
R11946:11949 VST.msl.seplog <> ::logic:x_'*'_x not
R11875:11912 VST.msl.seplog <> ::logic:x_'&&'_x not
R11833:11834 VST.veric.lift LiftNotation :::'`('_x_')' not
R11857:11874 VST.veric.lift LiftNotation :::'`('_x_')' not
R11835:11841 VST.veric.SeparationLogic <> mapsto_ def
R11847:11852 compcert.cfrontend.Clight <> typeof def
R11860:11870 VST.veric.expr <> eval_lvalue def
R11913:11914 VST.veric.lift LiftNotation :::'`('_x_')' not
R11928:11945 VST.veric.lift LiftNotation :::'`('_x_')' not
R11915:11921 VST.veric.SeparationLogic <> mapsto_ def
R11931:11941 VST.veric.expr <> eval_lvalue def
R11950:11951 VST.veric.lift LiftNotation :::'`('_x_')' not
R11977:11977 VST.veric.lift LiftNotation :::'`('_x_')' not
R11969:11972 VST.msl.seplog <> ::logic:x_'-*'_x not
R11952:11957 VST.veric.SeparationLogic <> mapsto def
R11994:11998 VST.veric.SeparationLogic <> local def
R12001:12005 VST.veric.mpred <> lift1 def
R12086:12097 VST.msl.seplog <> sepcon_assoc meth
R12086:12097 VST.msl.seplog <> sepcon_assoc meth
R12086:12097 VST.msl.seplog <> sepcon_assoc meth
R12112:12123 VST.msl.seplog <> derives_refl meth
R12112:12123 VST.msl.seplog <> derives_refl meth
R12145:12153 VST.msl.log_normalize <> exp_andp2 thm
R12145:12153 VST.msl.log_normalize <> exp_andp2 thm
R12145:12153 VST.msl.log_normalize <> exp_andp2 thm
R12172:12179 VST.msl.seplog <> exp_left meth
R12172:12179 VST.msl.seplog <> exp_left meth
R12209:12218 VST.msl.log_normalize <> andp_assoc thm
R12209:12218 VST.msl.log_normalize <> andp_assoc thm
R12209:12218 VST.msl.log_normalize <> andp_assoc thm
R12230:12238 VST.msl.log_normalize <> andp_comm thm
R12241:12245 VST.veric.SeparationLogic <> local def
R12230:12238 VST.msl.log_normalize <> andp_comm thm
R12241:12245 VST.veric.SeparationLogic <> local def
R12230:12238 VST.msl.log_normalize <> andp_comm thm
R12241:12245 VST.veric.SeparationLogic <> local def
R12264:12273 VST.msl.log_normalize <> andp_assoc thm
R12264:12273 VST.msl.log_normalize <> andp_assoc thm
R12264:12273 VST.msl.log_normalize <> andp_assoc thm
R12302:12306 VST.veric.SeparationLogic <> local def
R12321:12325 VST.veric.mpred <> lift1 def
R12350:12369 VST.msl.log_normalize <> derives_extract_prop thm
R12350:12369 VST.msl.log_normalize <> derives_extract_prop thm
R12414:12436 VST.floyd.canon <> SEP_replace_nth_isolate thm
R12461:12470 VST.floyd.canon <> insert_SEP thm
R12414:12436 VST.floyd.canon <> SEP_replace_nth_isolate thm
R12414:12436 VST.floyd.canon <> SEP_replace_nth_isolate thm
R12461:12470 VST.floyd.canon <> insert_SEP thm
R12461:12470 VST.floyd.canon <> insert_SEP thm
R12497:12501 VST.floyd.canon <> PROPx def
R12497:12501 VST.floyd.canon <> PROPx def
R12536:12537 VST.veric.lift LiftNotation :::'`('_x_')' not
R12574:12589 VST.veric.lift LiftNotation :::'`('_x_')' not
R12538:12547 VST.veric.val_lemmas <> force_val1 def
R12550:12557 VST.veric.Clight_Cop2 <> sem_cast def
R12560:12565 compcert.cfrontend.Clight <> typeof def
R12577:12585 VST.veric.expr <> eval_expr def
R12604:12612 VST.veric.expr <> eval_expr def
R12615:12619 compcert.cfrontend.Clight <> Ecast constr
R12536:12537 VST.veric.lift LiftNotation :::'`('_x_')' not
R12574:12589 VST.veric.lift LiftNotation :::'`('_x_')' not
R12538:12547 VST.veric.val_lemmas <> force_val1 def
R12550:12557 VST.veric.Clight_Cop2 <> sem_cast def
R12560:12565 compcert.cfrontend.Clight <> typeof def
R12577:12585 VST.veric.expr <> eval_expr def
R12604:12612 VST.veric.expr <> eval_expr def
R12615:12619 compcert.cfrontend.Clight <> Ecast constr
R12641:12651 VST.veric.expr <> eval_lvalue def
R12653:12661 VST.veric.expr <> eval_expr def
R12675:12679 VST.veric.SeparationLogic <> local def
R12682:12686 VST.veric.mpred <> lift1 def
R12740:12750 VST.veric.expr <> eval_lvalue def
R12752:12760 VST.veric.expr <> eval_expr def
R12793:12793 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12793:12793 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12806:12841 VST.veric.semax_straight <> decode_encode_val_fun thm
R12806:12841 VST.veric.semax_straight <> decode_encode_val_fun thm
R12885:12896 VST.msl.seplog <> sepcon_assoc meth
R12885:12896 VST.msl.seplog <> sepcon_assoc meth
R12885:12896 VST.msl.seplog <> sepcon_assoc meth
R12909:12922 VST.msl.seplog <> sepcon_derives meth
R12909:12922 VST.msl.seplog <> sepcon_derives meth
R12941:12957 VST.msl.log_normalize <> modus_ponens_wand thm
R12941:12957 VST.msl.log_normalize <> modus_ponens_wand thm
R12641:12651 VST.veric.expr <> eval_lvalue def
R12653:12661 VST.veric.expr <> eval_expr def
R12740:12750 VST.veric.expr <> eval_lvalue def
R12752:12760 VST.veric.expr <> eval_expr def
