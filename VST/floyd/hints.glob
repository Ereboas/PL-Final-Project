DIGEST 0a3af49f21c1572ba8c7dcb16d11f83c
FVST.floyd.hints
R15:29 VST.floyd.base2 <> <> lib
R47:69 VST.floyd.client_lemmas <> <> lib
R87:104 VST.floyd.go_lower <> <> lib
R122:144 VST.floyd.closed_lemmas <> <> lib
R162:185 VST.floyd.forward_lemmas <> <> lib
R187:207 VST.floyd.call_lemmas <> <> lib
R225:248 VST.floyd.extcall_lemmas <> <> lib
R266:294 VST.floyd.nested_field_lemmas <> <> lib
R312:334 VST.floyd.efield_lemmas <> <> lib
R352:375 VST.floyd.type_induction <> <> lib
R393:421 VST.floyd.mapsto_memory_block <> <> lib
R439:466 VST.floyd.data_at_rec_lemmas <> <> lib
R484:501 VST.floyd.field_at <> <> lib
R519:544 VST.floyd.loadstore_mapsto <> <> lib
R562:589 VST.floyd.loadstore_field_at <> <> lib
R607:624 VST.floyd.stronger <> <> lib
R642:669 VST.floyd.local2ptree_denote <> <> lib
R687:712 VST.floyd.local2ptree_eval <> <> lib
R730:753 VST.floyd.reptype_lemmas <> <> lib
R771:799 VST.floyd.proj_reptype_lemmas <> <> lib
R817:855 VST.floyd.replace_refill_reptype_lemmas <> <> lib
R873:896 VST.floyd.aggregate_type <> <> lib
R914:938 VST.floyd.functional_base <> <> lib
R956:973 VST.floyd.entailer <> <> lib
R991:1014 VST.floyd.globals_lemmas <> <> lib
R1032:1049 VST.floyd.deadvars <> <> lib
R1067:1087 VST.floyd.list_solver <> <> lib
R1527:1535 compcert.cfrontend.Clight <> Ssequence constr
R1527:1535 compcert.cfrontend.Clight <> Ssequence constr
R1570:1574 compcert.cfrontend.Clight <> Scall constr
R1570:1574 compcert.cfrontend.Clight <> Scall constr
R1828:1833 compcert.cfrontend.Clight <> Swhile def
R1828:1833 compcert.cfrontend.Clight <> Swhile def
R1913:1923 compcert.cfrontend.Clight <> Sifthenelse constr
R1913:1923 compcert.cfrontend.Clight <> Sifthenelse constr
R2029:2033 compcert.cfrontend.Clight <> Sloop constr
R2029:2033 compcert.cfrontend.Clight <> Sloop constr
R2053:2056 compcert.cfrontend.Clight <> Sfor def
R2053:2056 compcert.cfrontend.Clight <> Sfor def
R2081:2087 compcert.cfrontend.Clight <> Sreturn constr
R2081:2087 compcert.cfrontend.Clight <> Sreturn constr
R2124:2129 compcert.cfrontend.Clight <> Sbreak constr
R2124:2129 compcert.cfrontend.Clight <> Sbreak constr
R2165:2173 compcert.cfrontend.Clight <> Scontinue constr
R2165:2173 compcert.cfrontend.Clight <> Scontinue constr
R2209:2212 compcert.cfrontend.Clight <> Sset constr
R2209:2212 compcert.cfrontend.Clight <> Sset constr
R2426:2434 compcert.lib.Maps PTree get def
R2439:2448 VST.veric.seplog <> temp_types def
R2513:2516 Coq.Init.Datatypes <> Some constr
R2518:2518 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2529:2530 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2532:2532 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2519:2522 compcert.cfrontend.Ctypes <> Tint constr
R2513:2516 Coq.Init.Datatypes <> Some constr
R2518:2518 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2529:2530 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2532:2532 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2519:2522 compcert.cfrontend.Ctypes <> Tint constr
R2949:2952 Coq.Init.Datatypes <> Some constr
R2954:2954 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2964:2965 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2967:2967 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2955:2959 compcert.cfrontend.Ctypes <> Tlong constr
R2949:2952 Coq.Init.Datatypes <> Some constr
R2954:2954 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2964:2965 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2967:2967 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2955:2959 compcert.cfrontend.Ctypes <> Tlong constr
R3347:3350 Coq.Init.Datatypes <> Some constr
R3352:3352 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3365:3366 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3368:3368 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3353:3358 compcert.cfrontend.Ctypes <> Tfloat constr
R3360:3362 compcert.cfrontend.Ctypes <> F64 constr
R3347:3350 Coq.Init.Datatypes <> Some constr
R3352:3352 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3365:3366 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3368:3368 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3353:3358 compcert.cfrontend.Ctypes <> Tfloat constr
R3360:3362 compcert.cfrontend.Ctypes <> F64 constr
R3751:3754 Coq.Init.Datatypes <> Some constr
R3756:3756 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3769:3770 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3772:3772 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3757:3762 compcert.cfrontend.Ctypes <> Tfloat constr
R3764:3766 compcert.cfrontend.Ctypes <> F32 constr
R3751:3754 Coq.Init.Datatypes <> Some constr
R3756:3756 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3769:3770 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3772:3772 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3757:3762 compcert.cfrontend.Ctypes <> Tfloat constr
R3764:3766 compcert.cfrontend.Ctypes <> F32 constr
R3795:3801 compcert.common.Values <> Vsingle constr
R3795:3801 compcert.common.Values <> Vsingle constr
R3391:3396 compcert.common.Values <> Vfloat constr
R3391:3396 compcert.common.Values <> Vfloat constr
R2990:2994 compcert.common.Values <> Vlong constr
R2990:2994 compcert.common.Values <> Vlong constr
R2554:2557 compcert.common.Values <> Vint constr
R2554:2557 compcert.common.Values <> Vint constr
R2572:2576 VST.floyd.list_solver <> Vbyte def
R2572:2576 VST.floyd.list_solver <> Vbyte def
R4235:4238 VST.floyd.canon <> temp constr
R4235:4238 VST.floyd.canon <> temp constr
R4355:4358 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4355:4358 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4596:4602 Coq.Init.Specif <> sumbool ind
R4596:4602 Coq.Init.Specif <> sumbool ind
R5187:5190 Coq.Init.Datatypes <> bool ind
R5187:5190 Coq.Init.Datatypes <> bool ind
R4720:4727 VST.msl.Coqlib2 <> if_false thm
R4633:4639 VST.msl.Coqlib2 <> if_true thm
R5307:5310 Coq.Init.Datatypes <> cons constr
R5312:5316 VST.veric.mpred <> mpred def
R5307:5310 Coq.Init.Datatypes <> cons constr
R5312:5316 VST.veric.mpred <> mpred def
R5365:5370 VST.msl.seplog <> sepcon meth
R5372:5376 VST.veric.mpred <> mpred def
R5365:5370 VST.msl.seplog <> sepcon meth
R5372:5376 VST.veric.mpred <> mpred def
R5429:5432 VST.msl.seplog <> andp meth
R5434:5438 VST.veric.mpred <> mpred def
R5429:5432 VST.msl.seplog <> andp meth
R5434:5438 VST.veric.mpred <> mpred def
R5489:5491 VST.msl.seplog <> orp meth
R5493:5497 VST.veric.mpred <> mpred def
R5489:5491 VST.msl.seplog <> orp meth
R5493:5497 VST.veric.mpred <> mpred def
R5548:5551 VST.msl.seplog <> allp meth
R5553:5557 VST.veric.mpred <> mpred def
R5548:5551 VST.msl.seplog <> allp meth
R5553:5557 VST.veric.mpred <> mpred def
R5966:5968 VST.msl.seplog <> exp meth
R5966:5968 VST.msl.seplog <> exp meth
R6093:6097 VST.floyd.canon <> PROPx def
R6101:6102 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6093:6097 VST.floyd.canon <> PROPx def
R6101:6102 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6199:6203 VST.floyd.canon <> PROPx def
R6210:6215 VST.floyd.canon <> LOCALx def
R6220:6223 VST.floyd.canon <> SEPx def
R6205:6207 Coq.Init.Datatypes <> nil constr
R6199:6203 VST.floyd.canon <> PROPx def
R6210:6215 VST.floyd.canon <> LOCALx def
R6220:6223 VST.floyd.canon <> SEPx def
R6205:6207 Coq.Init.Datatypes <> nil constr
R6641:6645 VST.floyd.canon <> PROPx def
R6652:6657 VST.floyd.canon <> LOCALx def
R6663:6666 VST.floyd.canon <> SEPx def
R6647:6649 Coq.Init.Datatypes <> nil constr
R6641:6645 VST.floyd.canon <> PROPx def
R6652:6657 VST.floyd.canon <> LOCALx def
R6663:6666 VST.floyd.canon <> SEPx def
R6647:6649 Coq.Init.Datatypes <> nil constr
R6901:6907 Coq.Init.Specif <> sumbool ind
R6901:6907 Coq.Init.Specif <> sumbool ind
R7030:7037 VST.msl.Coqlib2 <> if_false thm
R6938:6944 VST.msl.Coqlib2 <> if_true thm
R7361:7366 VST.msl.seplog <> sepcon meth
R7368:7372 VST.veric.mpred <> mpred def
R7361:7366 VST.msl.seplog <> sepcon meth
R7368:7372 VST.veric.mpred <> mpred def
R7417:7420 VST.msl.seplog <> andp meth
R7422:7426 VST.veric.mpred <> mpred def
R7417:7420 VST.msl.seplog <> andp meth
R7422:7426 VST.veric.mpred <> mpred def
R7445:7447 VST.msl.seplog <> orp meth
R7449:7453 VST.veric.mpred <> mpred def
R7445:7447 VST.msl.seplog <> orp meth
R7449:7453 VST.veric.mpred <> mpred def
R7549:7558 VST.floyd.data_at_rec_lemmas <> value_fits def
R7549:7558 VST.floyd.data_at_rec_lemmas <> value_fits def
R7957:7957 Coq.Init.Logic <> ::type_scope:'~'_x not
R7958:7959 Coq.Lists.List <> In def
R7961:7969 compcert.lib.Integers Byte zero def
R7957:7957 Coq.Init.Logic <> ::type_scope:'~'_x not
R7958:7959 Coq.Lists.List <> In def
R7961:7969 compcert.lib.Integers Byte zero def
R8053:8055 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8022:8025 VST.floyd.sublist <> Znth def
R8030:8032 Coq.Init.Datatypes <> app def
R8046:8047 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8037:8045 compcert.lib.Integers Byte zero def
R8048:8050 Coq.Init.Datatypes <> nil constr
R8056:8064 compcert.lib.Integers Byte zero def
R8053:8055 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8022:8025 VST.floyd.sublist <> Znth def
R8030:8032 Coq.Init.Datatypes <> app def
R8046:8047 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8037:8045 compcert.lib.Integers Byte zero def
R8048:8050 Coq.Init.Datatypes <> nil constr
R8056:8064 compcert.lib.Integers Byte zero def
R8120:8123 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R8089:8092 VST.floyd.sublist <> Znth def
R8097:8099 Coq.Init.Datatypes <> app def
R8113:8114 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8104:8112 compcert.lib.Integers Byte zero def
R8115:8117 Coq.Init.Datatypes <> nil constr
R8124:8132 compcert.lib.Integers Byte zero def
R8120:8123 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R8089:8092 VST.floyd.sublist <> Znth def
R8097:8099 Coq.Init.Datatypes <> app def
R8113:8114 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8104:8112 compcert.lib.Integers Byte zero def
R8115:8117 Coq.Init.Datatypes <> nil constr
R8124:8132 compcert.lib.Integers Byte zero def
R8186:8187 Coq.Init.Logic <> eq ind
R8186:8187 Coq.Init.Logic <> eq ind
R8207:8207 Coq.Numbers.BinNums <> Z ind
R8261:8262 Coq.Init.Logic <> eq ind
R8261:8262 Coq.Init.Logic <> eq ind
R8320:8326 Coq.Init.Logic <> f_equal thm
R8293:8293 Coq.Numbers.BinNums <> Z ind
R8466:8469 Coq.Init.Logic <> True ind
R8403:8406 Coq.Init.Logic <> True ind
R8690:8693 Coq.Init.Logic <> True ind
R8823:8826 Coq.Init.Logic <> True ind
R8946:8949 Coq.Init.Logic <> True ind
R9059:9062 Coq.Init.Logic <> True ind
R9180:9183 Coq.Init.Logic <> True ind
R9307:9310 Coq.Init.Logic <> True ind
R9428:9431 Coq.Init.Logic <> True ind
R9597:9612 VST.floyd.nested_field_lemmas <> field_compatible def
R9597:9612 VST.floyd.nested_field_lemmas <> field_compatible def
R9638:9654 VST.floyd.nested_field_lemmas <> field_compatible0 def
R9638:9654 VST.floyd.nested_field_lemmas <> field_compatible0 def
R9697:9700 Coq.Init.Logic <> True ind
R9859:9865 VST.msl.seplog <> derives meth
R9867:9871 VST.veric.mpred <> mpred def
R9859:9865 VST.msl.seplog <> derives meth
R9867:9871 VST.veric.mpred <> mpred def
R9906:9909 Coq.Init.Logic <> True ind
R10047:10050 Coq.Init.Logic <> True ind
R10174:10178 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R10174:10178 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R10601:10605 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R10601:10605 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R10635:10637 VST.msl.seplog <> exp meth
R10635:10637 VST.msl.seplog <> exp meth
R10827:10829 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10820:10823 Coq.Init.Datatypes <> Some constr
R10830:10833 Coq.Init.Datatypes <> Some constr
R10827:10829 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10820:10823 Coq.Init.Datatypes <> Some constr
R10830:10833 Coq.Init.Datatypes <> Some constr
R10893:10895 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10879:10888 VST.veric.val_lemmas <> offset_val def
R10896:10909 VST.floyd.nested_field_lemmas <> field_address0 def
R10893:10895 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10879:10888 VST.veric.val_lemmas <> offset_val def
R10896:10909 VST.floyd.nested_field_lemmas <> field_address0 def
R10987:10989 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10973:10982 VST.veric.val_lemmas <> offset_val def
R10990:11002 VST.floyd.nested_field_lemmas <> field_address def
R10987:10989 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10973:10982 VST.veric.val_lemmas <> offset_val def
R10990:11002 VST.floyd.nested_field_lemmas <> field_address def
R11067:11069 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11070:11083 VST.floyd.nested_field_lemmas <> field_address0 def
R11067:11069 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11070:11083 VST.floyd.nested_field_lemmas <> field_address0 def
R11163:11165 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11166:11178 VST.floyd.nested_field_lemmas <> field_address def
R11163:11165 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11166:11178 VST.floyd.nested_field_lemmas <> field_address def
R11271:11273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11254:11263 VST.veric.val_lemmas <> offset_val def
R11274:11283 VST.veric.val_lemmas <> offset_val def
R11271:11273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11254:11263 VST.veric.val_lemmas <> offset_val def
R11274:11283 VST.veric.val_lemmas <> offset_val def
R11435:11438 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11412:11425 VST.floyd.nested_field_lemmas <> field_address0 def
R11439:11448 VST.veric.val_lemmas <> offset_val def
R11435:11438 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11412:11425 VST.floyd.nested_field_lemmas <> field_address0 def
R11439:11448 VST.veric.val_lemmas <> offset_val def
R11560:11563 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11538:11550 VST.floyd.nested_field_lemmas <> field_address def
R11564:11573 VST.veric.val_lemmas <> offset_val def
R11560:11563 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11538:11550 VST.floyd.nested_field_lemmas <> field_address def
R11564:11573 VST.veric.val_lemmas <> offset_val def
R11685:11688 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11662:11675 VST.floyd.nested_field_lemmas <> field_address0 def
R11685:11688 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11662:11675 VST.floyd.nested_field_lemmas <> field_address0 def
R11803:11806 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11781:11793 VST.floyd.nested_field_lemmas <> field_address def
R11803:11806 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11781:11793 VST.floyd.nested_field_lemmas <> field_address def
R11888:11891 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11869:11881 VST.floyd.nested_field_lemmas <> field_address def
R11771:11774 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11751:11764 VST.floyd.nested_field_lemmas <> field_address0 def
R11639:11642 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11620:11632 VST.floyd.nested_field_lemmas <> field_address def
R11643:11652 VST.veric.val_lemmas <> offset_val def
R11515:11518 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11495:11508 VST.floyd.nested_field_lemmas <> field_address0 def
R11519:11528 VST.veric.val_lemmas <> offset_val def
R11405:11405 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11324:11324 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10870:10872 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12177:12182 VST.msl.seplog <> sepcon meth
R12184:12188 VST.veric.mpred <> mpred def
R12177:12182 VST.msl.seplog <> sepcon meth
R12184:12188 VST.veric.mpred <> mpred def
R12251:12254 VST.msl.seplog <> andp meth
R12256:12260 VST.veric.mpred <> mpred def
R12251:12254 VST.msl.seplog <> andp meth
R12256:12260 VST.veric.mpred <> mpred def
R12321:12324 VST.msl.seplog <> wand meth
R12326:12330 VST.veric.mpred <> mpred def
R12321:12324 VST.msl.seplog <> wand meth
R12326:12330 VST.veric.mpred <> mpred def
R12352:12354 VST.msl.seplog <> orp meth
R12356:12360 VST.veric.mpred <> mpred def
R12352:12354 VST.msl.seplog <> orp meth
R12356:12360 VST.veric.mpred <> mpred def
R12380:12382 VST.msl.seplog <> emp meth
R12384:12388 VST.veric.mpred <> mpred def
R12380:12382 VST.msl.seplog <> emp meth
R12384:12388 VST.veric.mpred <> mpred def
R12408:12411 VST.msl.seplog <> prop meth
R12413:12417 VST.veric.mpred <> mpred def
R12408:12411 VST.msl.seplog <> prop meth
R12413:12417 VST.veric.mpred <> mpred def
R12435:12438 VST.msl.seplog <> allp meth
R12435:12438 VST.msl.seplog <> allp meth
R12460:12462 VST.msl.seplog <> exp meth
R12460:12462 VST.msl.seplog <> exp meth
R12484:12486 VST.msl.seplog <> emp meth
R12484:12486 VST.msl.seplog <> emp meth
R12569:12573 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R12574:12577 VST.msl.seplog <> prop meth
R12783:12789 VST.msl.seplog <> derives meth
R12791:12795 VST.veric.mpred <> mpred def
R12783:12789 VST.msl.seplog <> derives meth
R12791:12795 VST.veric.mpred <> mpred def
R12832:12848 VST.floyd.base <> fold_right_sepcon def
R12832:12848 VST.floyd.base <> fold_right_sepcon def
R12893:12896 Coq.Init.Datatypes <> list ind
R12898:12902 VST.veric.mpred <> mpred def
R12893:12896 Coq.Init.Datatypes <> list ind
R12898:12902 VST.veric.mpred <> mpred def
R12975:12980 VST.msl.seplog <> sepcon meth
R12975:12980 VST.msl.seplog <> sepcon meth
R15582:15582 Coq.Init.Datatypes <> S constr
R15551:15551 Coq.Init.Datatypes <> S constr
R14658:14667 VST.floyd.client_lemmas <> abbreviate def
R14669:14677 VST.veric.seplog <> tycontext ind
R14658:14667 VST.floyd.client_lemmas <> abbreviate def
R14669:14677 VST.veric.seplog <> tycontext ind
R14689:14698 VST.floyd.client_lemmas <> abbreviate def
R14700:14709 VST.veric.tycontext <> ret_assert rec
R14689:14698 VST.floyd.client_lemmas <> abbreviate def
R14700:14709 VST.veric.tycontext <> ret_assert rec
R14716:14720 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R14716:14720 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R14927:14931 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R14927:14931 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R15046:15052 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R15054:15055 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R15060:15064 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R15046:15052 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R15054:15055 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R15060:15064 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R15249:15255 VST.msl.seplog <> derives meth
R15257:15261 VST.veric.mpred <> mpred def
R15249:15255 VST.msl.seplog <> derives meth
R15257:15261 VST.veric.mpred <> mpred def
R15349:15352 Coq.Init.Logic <> True ind
R15368:15377 VST.msl.seplog <> sepcon_emp meth
R15381:15390 VST.msl.log_normalize <> emp_sepcon thm
R15187:15191 VST.floyd.canon <> PROPx def
R15196:15201 VST.floyd.canon <> LOCALx def
R15206:15209 VST.floyd.canon <> SEPx def
R15187:15191 VST.floyd.canon <> PROPx def
R15196:15201 VST.floyd.canon <> LOCALx def
R15206:15209 VST.floyd.canon <> SEPx def
R14486:14493 VST.msl.Coqlib2 <> if_false thm
R14318:14324 VST.msl.Coqlib2 <> if_true thm
R14117:14126 VST.floyd.client_lemmas <> abbreviate def
R14117:14126 VST.floyd.client_lemmas <> abbreviate def
R14037:14039 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14037:14039 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14075:14075 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13949:13951 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13952:13958 VST.veric.base <> nullval def
R13949:13951 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13952:13958 VST.veric.base <> nullval def
R15980:15986 VST.msl.seplog <> derives meth
R15988:15992 VST.veric.mpred <> mpred def
R15980:15986 VST.msl.seplog <> derives meth
R15988:15992 VST.veric.mpred <> mpred def
R16071:16074 Coq.Init.Logic <> True ind
R16244:16248 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R16283:16284 Coq.Init.Logic <> eq ind
R16286:16290 VST.veric.mpred <> mpred def
R16283:16284 Coq.Init.Logic <> eq ind
R16286:16290 VST.veric.mpred <> mpred def
R16389:16391 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16389:16391 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16513:16518 VST.veric.Cop2 <> is_int def
R16531:16535 VST.floyd.list_solver <> Vbyte def
R16523:16528 compcert.cfrontend.Ctypes <> Signed constr
R16520:16521 compcert.cfrontend.Ctypes <> I8 constr
R16513:16518 VST.veric.Cop2 <> is_int def
R16531:16535 VST.floyd.list_solver <> Vbyte def
R16523:16528 compcert.cfrontend.Ctypes <> Signed constr
R16520:16521 compcert.cfrontend.Ctypes <> I8 constr
R16657:16662 VST.veric.Cop2 <> is_int def
R16675:16678 compcert.common.Values <> Vint constr
R16681:16688 compcert.lib.Integers Int repr def
R16691:16701 compcert.lib.Integers Byte signed def
R16667:16672 compcert.cfrontend.Ctypes <> Signed constr
R16664:16665 compcert.cfrontend.Ctypes <> I8 constr
R16657:16662 VST.veric.Cop2 <> is_int def
R16675:16678 compcert.common.Values <> Vint constr
R16681:16688 compcert.lib.Integers Int repr def
R16691:16701 compcert.lib.Integers Byte signed def
R16667:16672 compcert.cfrontend.Ctypes <> Signed constr
R16664:16665 compcert.cfrontend.Ctypes <> I8 constr
R16818:16823 Coq.Lists.List <> Forall ind
R16826:16835 VST.floyd.data_at_rec_lemmas <> value_fits def
R16818:16823 Coq.Lists.List <> Forall ind
R16826:16835 VST.floyd.data_at_rec_lemmas <> value_fits def
R16994:17011 VST.veric.val_lemmas <> is_pointer_or_null def
R16994:17011 VST.veric.val_lemmas <> is_pointer_or_null def
R17021:17036 VST.floyd.nested_field_lemmas <> field_compatible def
R17021:17036 VST.floyd.nested_field_lemmas <> field_compatible def
R17154:17155 Coq.Init.Logic <> eq ind
R17157:17157 Coq.Numbers.BinNums <> Z ind
R17154:17155 Coq.Init.Logic <> eq ind
R17157:17157 Coq.Numbers.BinNums <> Z ind
R17197:17200 Coq.ZArith.BinInt Z le def
R17197:17200 Coq.ZArith.BinInt Z le def
R17241:17244 Coq.ZArith.BinInt Z lt def
R17241:17244 Coq.ZArith.BinInt Z lt def
R17285:17288 Coq.ZArith.BinInt Z ge def
R17285:17288 Coq.ZArith.BinInt Z ge def
R17329:17332 Coq.ZArith.BinInt Z gt def
R17329:17332 Coq.ZArith.BinInt Z gt def
R17381:17384 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17373:17376 Coq.ZArith.BinInt Z le def
R17385:17388 Coq.ZArith.BinInt Z le def
R17381:17384 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17373:17376 Coq.ZArith.BinInt Z le def
R17385:17388 Coq.ZArith.BinInt Z le def
R17437:17440 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17429:17432 Coq.ZArith.BinInt Z le def
R17441:17444 Coq.ZArith.BinInt Z lt def
R17437:17440 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17429:17432 Coq.ZArith.BinInt Z le def
R17441:17444 Coq.ZArith.BinInt Z lt def
R17493:17496 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17485:17488 Coq.ZArith.BinInt Z lt def
R17497:17500 Coq.ZArith.BinInt Z le def
R17493:17496 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17485:17488 Coq.ZArith.BinInt Z lt def
R17497:17500 Coq.ZArith.BinInt Z le def
R17549:17552 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17541:17544 Coq.ZArith.BinInt Z lt def
R17553:17556 Coq.ZArith.BinInt Z lt def
R17549:17552 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17541:17544 Coq.ZArith.BinInt Z lt def
R17553:17556 Coq.ZArith.BinInt Z lt def
R17645:17655 VST.floyd.seplog_tactics <> prop_sepcon thm
R17745:17756 VST.floyd.seplog_tactics <> prop_sepcon2 thm
R17854:17859 Coq.Lists.List <> Forall ind
R17854:17859 Coq.Lists.List <> Forall ind
R17875:17878 VST.floyd.sublist <> Znth def
R17875:17878 VST.floyd.sublist <> Znth def
R18014:18017 VST.floyd.sublist <> Znth def
R18024:18026 Coq.Lists.List <> map def
R18014:18017 VST.floyd.sublist <> Znth def
R18024:18026 Coq.Lists.List <> map def
