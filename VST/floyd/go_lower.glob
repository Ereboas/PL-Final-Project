DIGEST af29e9ae5053a55556b10c2f99c58f14
FVST.floyd.go_lower
R15:29 VST.floyd.base2 <> <> lib
R47:69 VST.floyd.client_lemmas <> <> lib
R87:109 VST.floyd.efield_lemmas <> <> lib
R127:154 VST.floyd.local2ptree_denote <> <> lib
R172:197 VST.floyd.local2ptree_eval <> <> lib
R215:245 VST.floyd.local2ptree_typecheck <> <> lib
R263:285 VST.floyd.semax_tactics <> <> lib
R376:380 VST.floyd.canon <> PROPx def
R390:396 VST.floyd.canon <> PARAMSx def
R398:405 VST.floyd.canon <> GLOBALSx def
R407:412 VST.floyd.canon <> LOCALx def
R414:417 VST.floyd.canon <> SEPx def
R419:435 VST.veric.SeparationLogic <> argsassert2assert def
R437:449 VST.floyd.canon <> locald_denote def
R474:486 VST.veric.expr <> eval_exprlist def
R488:496 VST.veric.expr <> eval_expr def
R498:508 VST.veric.expr <> eval_lvalue def
R510:521 VST.veric.SeparationLogic <> cast_expropt def
R546:555 VST.veric.expr <> eval_binop def
R557:565 VST.veric.expr <> eval_unop def
R567:576 VST.veric.val_lemmas <> force_val1 def
R578:587 VST.veric.val_lemmas <> force_val2 def
R611:627 VST.floyd.local2ptree_typecheck <> msubst_tc_expropt def
R629:642 VST.floyd.local2ptree_typecheck <> msubst_tc_expr def
R644:661 VST.floyd.local2ptree_typecheck <> msubst_tc_exprlist def
R663:678 VST.floyd.local2ptree_typecheck <> msubst_tc_lvalue def
R680:691 VST.floyd.local2ptree_typecheck <> msubst_tc_LR def
R719:734 VST.floyd.local2ptree_typecheck <> msubst_tc_efield def
R736:757 VST.floyd.local2ptree_typecheck <> msubst_simpl_tc_assert def
R782:805 VST.veric.SeparationLogic <> function_body_ret_assert def
R807:822 VST.veric.SeparationLogic <> frame_ret_assert def
R846:855 VST.veric.SeparationLogic <> make_args' def
R857:864 VST.veric.SeparationLogic <> bind_ret def
R866:876 VST.veric.SeparationLogic <> get_result1 def
R878:883 VST.floyd.client_lemmas <> retval def
R908:920 VST.veric.Clight_Cop2 <> classify_cast def
R1020:1035 VST.veric.SeparationLogic <> denote_tc_assert def
R1065:1069 VST.veric.lift <> liftx def
R1071:1081 VST.veric.mpred <> LiftEnviron canonstruc
R1083:1088 VST.veric.lift <> Tarrow canonstruc
R1090:1093 VST.veric.lift <> Tend def
R1095:1100 VST.veric.lift <> lift_S proj
R1102:1107 VST.veric.lift <> lift_T proj
R1113:1121 VST.veric.lift <> lift_prod proj
R1123:1131 VST.veric.lift <> lift_last proj
R1133:1138 VST.veric.lift <> lifted proj
R1140:1156 VST.veric.lift <> lift_uncurry_open proj
R1158:1167 VST.veric.lift <> lift_curry proj
R1174:1178 VST.veric.SeparationLogic <> local def
R1180:1183 VST.veric.lift <> lift def
R1185:1189 VST.veric.mpred <> lift0 def
R1191:1195 VST.veric.mpred <> lift1 def
R1197:1201 VST.veric.mpred <> lift2 def
R1203:1207 VST.veric.mpred <> lift3 def
prf 1232:1246 <> grab_tc_environ
binder 1258:1262 <> Delta:1
binder 1264:1266 <> PQR:2
binder 1268:1268 <> S:3
binder 1270:1272 <> rho:4
R1279:1279 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1317:1325 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1363:1367 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R1326:1326 VST.msl.seplog <> ::logic:x_'&&'_x not
R1351:1354 VST.msl.seplog <> ::logic:x_'&&'_x not
R1358:1362 VST.msl.seplog <> ::logic:x_'&&'_x not
R1327:1331 VST.veric.SeparationLogic <> local def
R1334:1343 VST.veric.SeparationLogic <> tc_environ def
R1345:1349 VST.floyd.go_lower <> Delta:1 var
R1355:1357 VST.floyd.go_lower <> PQR:2 var
R1360:1362 VST.floyd.go_lower <> rho:4 var
R1368:1368 VST.floyd.go_lower <> S:3 var
R1300:1303 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1311:1315 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R1304:1306 VST.floyd.go_lower <> PQR:2 var
R1308:1310 VST.floyd.go_lower <> rho:4 var
R1316:1316 VST.floyd.go_lower <> S:3 var
R1280:1289 VST.veric.SeparationLogic <> tc_environ def
R1297:1299 VST.floyd.go_lower <> rho:4 var
R1291:1295 VST.floyd.go_lower <> Delta:1 var
R1393:1397 VST.floyd.canon <> PROPx def
R1399:1404 VST.floyd.canon <> LOCALx def
R1442:1446 VST.veric.SeparationLogic <> local def
R1449:1453 VST.veric.mpred <> lift1 def
R1523:1537 VST.floyd.go_lower <> grab_tc_environ thm
R1609:1620 VST.veric.mpred <> eval_id_same thm
R1647:1659 VST.veric.mpred <> eval_id_other thm
prf 1794:1807 <> lower_one_temp
binder 1818:1818 <> t:5
binder 1820:1822 <> rho:6
binder 1824:1828 <> Delta:7
binder 1830:1830 <> P:8
binder 1832:1832 <> i:9
binder 1834:1834 <> v:10
binder 1836:1836 <> Q:11
binder 1838:1838 <> R:12
binder 1840:1840 <> S:13
R1876:1881 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1882:1882 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1988:1994 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2070:2074 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R1995:1995 VST.msl.seplog <> ::logic:x_'&&'_x not
R2020:2023 VST.msl.seplog <> ::logic:x_'&&'_x not
R2065:2069 VST.msl.seplog <> ::logic:x_'&&'_x not
R1996:2000 VST.veric.SeparationLogic <> local def
R2003:2012 VST.veric.SeparationLogic <> tc_environ def
R2014:2018 VST.floyd.go_lower <> Delta:7 var
R2024:2028 VST.floyd.canon <> PROPx def
R2033:2038 VST.floyd.canon <> LOCALx def
R2057:2060 VST.floyd.canon <> SEPx def
R2062:2062 VST.floyd.go_lower <> R:12 var
R2049:2052 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2041:2044 VST.floyd.canon <> temp constr
R2048:2048 VST.floyd.go_lower <> v:10 var
R2046:2046 VST.floyd.go_lower <> i:9 var
R2053:2053 VST.floyd.go_lower <> Q:11 var
R2030:2030 VST.floyd.go_lower <> P:8 var
R2067:2069 VST.floyd.go_lower <> rho:6 var
R2075:2075 VST.floyd.go_lower <> S:13 var
R1893:1896 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1914:1920 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1982:1986 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R1921:1921 VST.msl.seplog <> ::logic:x_'&&'_x not
R1946:1949 VST.msl.seplog <> ::logic:x_'&&'_x not
R1977:1981 VST.msl.seplog <> ::logic:x_'&&'_x not
R1922:1926 VST.veric.SeparationLogic <> local def
R1929:1938 VST.veric.SeparationLogic <> tc_environ def
R1940:1944 VST.floyd.go_lower <> Delta:7 var
R1950:1954 VST.floyd.canon <> PROPx def
R1959:1964 VST.floyd.canon <> LOCALx def
R1969:1972 VST.floyd.canon <> SEPx def
R1974:1974 VST.floyd.go_lower <> R:12 var
R1966:1966 VST.floyd.go_lower <> Q:11 var
R1956:1956 VST.floyd.go_lower <> P:8 var
R1979:1981 VST.floyd.go_lower <> rho:6 var
R1987:1987 VST.floyd.go_lower <> S:13 var
R1910:1912 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1897:1903 VST.veric.mpred <> eval_id def
R1907:1909 VST.floyd.go_lower <> rho:6 var
R1905:1905 VST.floyd.go_lower <> i:9 var
R1913:1913 VST.floyd.go_lower <> v:10 var
R1883:1888 VST.veric.Cop2 <> tc_val def
R1892:1892 VST.floyd.go_lower <> v:10 var
R1890:1890 VST.floyd.go_lower <> t:5 var
R1867:1869 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1845:1845 compcert.lib.Maps <> :::x_'!'_x not
R1862:1865 compcert.lib.Maps <> :::x_'!'_x not
R1866:1866 VST.floyd.go_lower <> i:9 var
R1846:1855 VST.veric.seplog <> temp_types def
R1857:1861 VST.floyd.go_lower <> Delta:7 var
R1870:1873 Coq.Init.Datatypes <> Some constr
R1875:1875 VST.floyd.go_lower <> t:5 var
R2104:2115 VST.floyd.canon <> insert_local thm
R2104:2115 VST.floyd.canon <> insert_local thm
R2104:2115 VST.floyd.canon <> insert_local thm
R2126:2130 VST.floyd.canon <> PROPx def
R2135:2140 VST.floyd.canon <> LOCALx def
R2145:2148 VST.floyd.canon <> SEPx def
R2126:2130 VST.floyd.canon <> PROPx def
R2135:2140 VST.floyd.canon <> LOCALx def
R2145:2148 VST.floyd.canon <> SEPx def
R2170:2174 VST.veric.SeparationLogic <> local def
R2176:2180 VST.veric.mpred <> lift1 def
R2232:2245 VST.msl.log_normalize <> prop_true_andp thm
R2232:2245 VST.msl.log_normalize <> prop_true_andp thm
R2232:2245 VST.msl.log_normalize <> prop_true_andp thm
R2284:2296 VST.floyd.client_lemmas <> tc_eval'_id_i thm
R2284:2296 VST.floyd.client_lemmas <> tc_eval'_id_i thm
prf 2328:2346 <> lower_one_temp_Vint
binder 2357:2357 <> t:14
binder 2359:2361 <> rho:15
binder 2363:2367 <> Delta:16
binder 2369:2369 <> P:17
binder 2371:2371 <> i:18
binder 2373:2373 <> v:19
binder 2375:2375 <> Q:20
binder 2377:2377 <> R:21
binder 2379:2379 <> S:22
R2415:2420 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2421:2421 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2539:2545 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2628:2632 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R2546:2546 VST.msl.seplog <> ::logic:x_'&&'_x not
R2571:2574 VST.msl.seplog <> ::logic:x_'&&'_x not
R2623:2627 VST.msl.seplog <> ::logic:x_'&&'_x not
R2547:2551 VST.veric.SeparationLogic <> local def
R2554:2563 VST.veric.SeparationLogic <> tc_environ def
R2565:2569 VST.floyd.go_lower <> Delta:16 var
R2575:2579 VST.floyd.canon <> PROPx def
R2584:2589 VST.floyd.canon <> LOCALx def
R2615:2618 VST.floyd.canon <> SEPx def
R2620:2620 VST.floyd.go_lower <> R:21 var
R2607:2610 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2592:2595 VST.floyd.canon <> temp constr
R2600:2603 compcert.common.Values <> Vint constr
R2605:2605 VST.floyd.go_lower <> v:19 var
R2597:2597 VST.floyd.go_lower <> i:18 var
R2611:2611 VST.floyd.go_lower <> Q:20 var
R2581:2581 VST.floyd.go_lower <> P:17 var
R2625:2627 VST.floyd.go_lower <> rho:15 var
R2633:2633 VST.floyd.go_lower <> S:22 var
R2439:2442 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2465:2471 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2533:2537 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R2472:2472 VST.msl.seplog <> ::logic:x_'&&'_x not
R2497:2500 VST.msl.seplog <> ::logic:x_'&&'_x not
R2528:2532 VST.msl.seplog <> ::logic:x_'&&'_x not
R2473:2477 VST.veric.SeparationLogic <> local def
R2480:2489 VST.veric.SeparationLogic <> tc_environ def
R2491:2495 VST.floyd.go_lower <> Delta:16 var
R2501:2505 VST.floyd.canon <> PROPx def
R2510:2515 VST.floyd.canon <> LOCALx def
R2520:2523 VST.floyd.canon <> SEPx def
R2525:2525 VST.floyd.go_lower <> R:21 var
R2517:2517 VST.floyd.go_lower <> Q:20 var
R2507:2507 VST.floyd.go_lower <> P:17 var
R2530:2532 VST.floyd.go_lower <> rho:15 var
R2538:2538 VST.floyd.go_lower <> S:22 var
R2456:2458 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2443:2449 VST.veric.mpred <> eval_id def
R2453:2455 VST.floyd.go_lower <> rho:15 var
R2451:2451 VST.floyd.go_lower <> i:18 var
R2459:2462 compcert.common.Values <> Vint constr
R2464:2464 VST.floyd.go_lower <> v:19 var
R2422:2427 VST.veric.Cop2 <> tc_val def
R2432:2435 compcert.common.Values <> Vint constr
R2437:2437 VST.floyd.go_lower <> v:19 var
R2429:2429 VST.floyd.go_lower <> t:14 var
R2406:2408 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2384:2384 compcert.lib.Maps <> :::x_'!'_x not
R2401:2404 compcert.lib.Maps <> :::x_'!'_x not
R2405:2405 VST.floyd.go_lower <> i:18 var
R2385:2394 VST.veric.seplog <> temp_types def
R2396:2400 VST.floyd.go_lower <> Delta:16 var
R2409:2412 Coq.Init.Datatypes <> Some constr
R2414:2414 VST.floyd.go_lower <> t:14 var
R2658:2671 VST.floyd.go_lower <> lower_one_temp thm
R2658:2671 VST.floyd.go_lower <> lower_one_temp thm
prf 2693:2706 <> lower_one_lvar
binder 2717:2717 <> t:23
binder 2719:2721 <> rho:24
binder 2723:2727 <> Delta:25
binder 2729:2729 <> P:26
binder 2731:2731 <> i:27
binder 2733:2733 <> v:28
binder 2735:2735 <> Q:29
binder 2737:2737 <> R:30
binder 2739:2739 <> S:31
R2744:2744 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2853:2859 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2937:2941 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R2860:2860 VST.msl.seplog <> ::logic:x_'&&'_x not
R2885:2888 VST.msl.seplog <> ::logic:x_'&&'_x not
R2932:2936 VST.msl.seplog <> ::logic:x_'&&'_x not
R2861:2865 VST.veric.SeparationLogic <> local def
R2868:2877 VST.veric.SeparationLogic <> tc_environ def
R2879:2883 VST.floyd.go_lower <> Delta:25 var
R2889:2893 VST.floyd.canon <> PROPx def
R2898:2903 VST.floyd.canon <> LOCALx def
R2924:2927 VST.floyd.canon <> SEPx def
R2929:2929 VST.floyd.go_lower <> R:30 var
R2916:2919 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2906:2909 VST.floyd.canon <> lvar constr
R2915:2915 VST.floyd.go_lower <> v:28 var
R2913:2913 VST.floyd.go_lower <> t:23 var
R2911:2911 VST.floyd.go_lower <> i:27 var
R2920:2920 VST.floyd.go_lower <> Q:29 var
R2895:2895 VST.floyd.go_lower <> P:26 var
R2934:2936 VST.floyd.go_lower <> rho:24 var
R2942:2942 VST.floyd.go_lower <> S:31 var
R2754:2757 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2779:2785 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2847:2851 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R2786:2786 VST.msl.seplog <> ::logic:x_'&&'_x not
R2811:2814 VST.msl.seplog <> ::logic:x_'&&'_x not
R2842:2846 VST.msl.seplog <> ::logic:x_'&&'_x not
R2787:2791 VST.veric.SeparationLogic <> local def
R2794:2803 VST.veric.SeparationLogic <> tc_environ def
R2805:2809 VST.floyd.go_lower <> Delta:25 var
R2815:2819 VST.floyd.canon <> PROPx def
R2824:2829 VST.floyd.canon <> LOCALx def
R2834:2837 VST.floyd.canon <> SEPx def
R2839:2839 VST.floyd.go_lower <> R:30 var
R2831:2831 VST.floyd.go_lower <> Q:29 var
R2821:2821 VST.floyd.go_lower <> P:26 var
R2844:2846 VST.floyd.go_lower <> rho:24 var
R2852:2852 VST.floyd.go_lower <> S:31 var
R2758:2768 VST.floyd.canon <> lvar_denote def
R2776:2778 VST.floyd.go_lower <> rho:24 var
R2774:2774 VST.floyd.go_lower <> v:28 var
R2772:2772 VST.floyd.go_lower <> t:23 var
R2770:2770 VST.floyd.go_lower <> i:27 var
R2745:2751 VST.floyd.val_lemmas <> headptr def
R2753:2753 VST.floyd.go_lower <> v:28 var
R2971:2982 VST.floyd.canon <> insert_local thm
R2971:2982 VST.floyd.canon <> insert_local thm
R2971:2982 VST.floyd.canon <> insert_local thm
R2993:2997 VST.floyd.canon <> PROPx def
R3002:3007 VST.floyd.canon <> LOCALx def
R3012:3015 VST.floyd.canon <> SEPx def
R2993:2997 VST.floyd.canon <> PROPx def
R3002:3007 VST.floyd.canon <> LOCALx def
R3012:3015 VST.floyd.canon <> SEPx def
R3037:3041 VST.veric.SeparationLogic <> local def
R3043:3047 VST.veric.mpred <> lift1 def
R3099:3112 VST.msl.log_normalize <> prop_true_andp thm
R3099:3112 VST.msl.log_normalize <> prop_true_andp thm
R3099:3112 VST.msl.log_normalize <> prop_true_andp thm
R3164:3170 VST.veric.mpred Map get def
R3173:3177 VST.veric.mpred <> ve_of def
R3164:3170 VST.veric.mpred Map get def
R3173:3177 VST.veric.mpred <> ve_of def
prf 3263:3279 <> finish_compute_le
R3290:3293 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3294:3298 Coq.Init.Logic <> False ind
R3285:3287 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3283:3284 Coq.Init.Datatypes <> Lt constr
R3288:3289 Coq.Init.Datatypes <> Gt constr
prf 3332:3346 <> gvars_denote_HP
binder 3356:3358 <> rho:32
binder 3360:3364 <> Delta:33
binder 3366:3367 <> gv:34
binder 3369:3369 <> i:35
binder 3371:3371 <> t:36
R3395:3400 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3421:3426 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3458:3463 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3464:3470 VST.floyd.val_lemmas <> headptr def
R3473:3474 VST.floyd.go_lower <> gv:34 var
R3476:3476 VST.floyd.go_lower <> i:35 var
R3449:3451 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3427:3427 compcert.lib.Maps <> :::x_'!'_x not
R3444:3447 compcert.lib.Maps <> :::x_'!'_x not
R3448:3448 VST.floyd.go_lower <> i:35 var
R3428:3437 VST.veric.seplog <> glob_types def
R3439:3443 VST.floyd.go_lower <> Delta:33 var
R3452:3455 Coq.Init.Datatypes <> Some constr
R3457:3457 VST.floyd.go_lower <> t:36 var
R3401:3410 VST.veric.SeparationLogic <> tc_environ def
R3418:3420 VST.floyd.go_lower <> rho:32 var
R3412:3416 VST.floyd.go_lower <> Delta:33 var
R3376:3387 VST.floyd.canon <> gvars_denote def
R3392:3394 VST.floyd.go_lower <> rho:32 var
R3389:3390 VST.floyd.go_lower <> gv:34 var
prf 3597:3611 <> lower_one_gvars
binder 3623:3625 <> rho:37
binder 3627:3631 <> Delta:38
binder 3633:3633 <> P:39
binder 3635:3636 <> gv:40
binder 3638:3638 <> Q:41
binder 3640:3640 <> R:42
binder 3642:3642 <> S:43
R3647:3647 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3808:3814 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3890:3894 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R3815:3815 VST.msl.seplog <> ::logic:x_'&&'_x not
R3840:3843 VST.msl.seplog <> ::logic:x_'&&'_x not
R3885:3889 VST.msl.seplog <> ::logic:x_'&&'_x not
R3816:3820 VST.veric.SeparationLogic <> local def
R3823:3832 VST.veric.SeparationLogic <> tc_environ def
R3834:3838 VST.floyd.go_lower <> Delta:38 var
R3844:3848 VST.floyd.canon <> PROPx def
R3853:3858 VST.floyd.canon <> LOCALx def
R3877:3880 VST.floyd.canon <> SEPx def
R3882:3882 VST.floyd.go_lower <> R:42 var
R3869:3872 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3861:3865 VST.floyd.canon <> gvars constr
R3867:3868 VST.floyd.go_lower <> gv:40 var
R3873:3873 VST.floyd.go_lower <> Q:41 var
R3850:3850 VST.floyd.go_lower <> P:39 var
R3887:3889 VST.floyd.go_lower <> rho:37 var
R3895:3895 VST.floyd.go_lower <> S:43 var
R3648:3648 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3710:3714 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3734:3740 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3802:3806 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R3741:3741 VST.msl.seplog <> ::logic:x_'&&'_x not
R3766:3769 VST.msl.seplog <> ::logic:x_'&&'_x not
R3797:3801 VST.msl.seplog <> ::logic:x_'&&'_x not
R3742:3746 VST.veric.SeparationLogic <> local def
R3749:3758 VST.veric.SeparationLogic <> tc_environ def
R3760:3764 VST.floyd.go_lower <> Delta:38 var
R3770:3774 VST.floyd.canon <> PROPx def
R3779:3784 VST.floyd.canon <> LOCALx def
R3789:3792 VST.floyd.canon <> SEPx def
R3794:3794 VST.floyd.go_lower <> R:42 var
R3786:3786 VST.floyd.go_lower <> Q:41 var
R3776:3776 VST.floyd.go_lower <> P:39 var
R3799:3801 VST.floyd.go_lower <> rho:37 var
R3807:3807 VST.floyd.go_lower <> S:43 var
R3715:3726 VST.floyd.canon <> gvars_denote def
R3731:3733 VST.floyd.go_lower <> rho:37 var
R3728:3729 VST.floyd.go_lower <> gv:40 var
binder 3656:3656 <> i:44
binder 3658:3658 <> t:45
R3692:3695 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3696:3702 VST.floyd.val_lemmas <> headptr def
R3705:3706 VST.floyd.go_lower <> gv:40 var
R3708:3708 VST.floyd.go_lower <> i:44 var
R3683:3685 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3661:3661 compcert.lib.Maps <> :::x_'!'_x not
R3678:3681 compcert.lib.Maps <> :::x_'!'_x not
R3682:3682 VST.floyd.go_lower <> i:44 var
R3662:3671 VST.veric.seplog <> glob_types def
R3673:3677 VST.floyd.go_lower <> Delta:38 var
R3686:3689 Coq.Init.Datatypes <> Some constr
R3691:3691 VST.floyd.go_lower <> t:45 var
R3928:3939 VST.floyd.canon <> insert_local thm
R3928:3939 VST.floyd.canon <> insert_local thm
R3928:3939 VST.floyd.canon <> insert_local thm
R3952:3956 VST.floyd.canon <> PROPx def
R3961:3966 VST.floyd.canon <> LOCALx def
R3971:3974 VST.floyd.canon <> SEPx def
R3952:3956 VST.floyd.canon <> PROPx def
R3961:3966 VST.floyd.canon <> LOCALx def
R3971:3974 VST.floyd.canon <> SEPx def
R3998:4002 VST.veric.SeparationLogic <> local def
R4004:4008 VST.veric.mpred <> lift1 def
R4053:4066 VST.msl.log_normalize <> prop_true_andp thm
R4053:4066 VST.msl.log_normalize <> prop_true_andp thm
R4053:4066 VST.msl.log_normalize <> prop_true_andp thm
R4118:4132 VST.floyd.go_lower <> gvars_denote_HP thm
R4118:4132 VST.floyd.go_lower <> gvars_denote_HP thm
prf 4154:4165 <> finish_lower
binder 4177:4179 <> rho:46
R4192:4195 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4185:4191 VST.veric.mpred <> environ ind
binder 4182:4182 <> D:47
binder 4202:4202 <> R:48
binder 4204:4204 <> S:49
R4209:4209 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4244:4250 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4298:4302 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R4259:4262 VST.msl.seplog <> ::logic:x_'&&'_x not
R4252:4256 VST.veric.SeparationLogic <> local def
R4258:4258 VST.floyd.go_lower <> D:47 var
R4263:4269 VST.floyd.canon <> ::assert:'PROP'_'()'_x not
R4270:4278 VST.floyd.canon <> ::assert3:'LOCAL'_'()'_x not
R4285:4285 VST.floyd.canon <> ::assert3:'LOCAL'_'()'_x not
R4279:4282 VST.floyd.canon <> SEPx def
R4284:4284 VST.floyd.go_lower <> R:48 var
R4295:4297 VST.floyd.go_lower <> rho:46 var
R4303:4303 VST.floyd.go_lower <> S:49 var
R4215:4218 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4238:4242 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R4219:4235 VST.floyd.base <> fold_right_sepcon def
R4237:4237 VST.floyd.go_lower <> R:48 var
R4243:4243 VST.floyd.go_lower <> S:49 var
R4210:4210 VST.floyd.go_lower <> D:47 var
R4212:4214 VST.floyd.go_lower <> rho:46 var
prf 4379:4398 <> lower_one_temp_Vint'
binder 4409:4410 <> sz:50
binder 4412:4413 <> sg:51
binder 4415:4417 <> rho:52
binder 4419:4423 <> Delta:53
binder 4425:4425 <> P:54
binder 4427:4427 <> i:55
binder 4429:4429 <> v:56
binder 4431:4431 <> Q:57
binder 4433:4433 <> R:58
binder 4435:4435 <> S:59
R4489:4494 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4495:4495 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4659:4665 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4741:4745 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R4666:4666 VST.msl.seplog <> ::logic:x_'&&'_x not
R4691:4694 VST.msl.seplog <> ::logic:x_'&&'_x not
R4736:4740 VST.msl.seplog <> ::logic:x_'&&'_x not
R4667:4671 VST.veric.SeparationLogic <> local def
R4674:4683 VST.veric.SeparationLogic <> tc_environ def
R4685:4689 VST.floyd.go_lower <> Delta:53 var
R4695:4699 VST.floyd.canon <> PROPx def
R4704:4709 VST.floyd.canon <> LOCALx def
R4728:4731 VST.floyd.canon <> SEPx def
R4733:4733 VST.floyd.go_lower <> R:58 var
R4720:4723 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4712:4715 VST.floyd.canon <> temp constr
R4719:4719 VST.floyd.go_lower <> v:56 var
R4717:4717 VST.floyd.go_lower <> i:55 var
R4724:4724 VST.floyd.go_lower <> Q:57 var
R4701:4701 VST.floyd.go_lower <> P:54 var
R4738:4740 VST.floyd.go_lower <> rho:52 var
R4746:4746 VST.floyd.go_lower <> S:59 var
R4496:4496 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4584:4591 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4653:4657 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R4592:4592 VST.msl.seplog <> ::logic:x_'&&'_x not
R4617:4620 VST.msl.seplog <> ::logic:x_'&&'_x not
R4648:4652 VST.msl.seplog <> ::logic:x_'&&'_x not
R4593:4597 VST.veric.SeparationLogic <> local def
R4600:4609 VST.veric.SeparationLogic <> tc_environ def
R4611:4615 VST.floyd.go_lower <> Delta:53 var
R4621:4625 VST.floyd.canon <> PROPx def
R4630:4635 VST.floyd.canon <> LOCALx def
R4640:4643 VST.floyd.canon <> SEPx def
R4645:4645 VST.floyd.go_lower <> R:58 var
R4637:4637 VST.floyd.go_lower <> Q:57 var
R4627:4627 VST.floyd.go_lower <> P:54 var
R4650:4652 VST.floyd.go_lower <> rho:52 var
R4658:4658 VST.floyd.go_lower <> S:59 var
R4497:4503 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R4505:4506 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 4504:4504 <> j:60
R4517:4520 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4508:4510 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4507:4507 VST.floyd.go_lower <> v:56 var
R4511:4514 compcert.common.Values <> Vint constr
R4516:4516 VST.floyd.go_lower <> j:60 var
R4556:4559 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4521:4526 VST.veric.Cop2 <> tc_val def
R4549:4552 compcert.common.Values <> Vint constr
R4554:4554 VST.floyd.go_lower <> j:60 var
R4529:4532 compcert.cfrontend.Ctypes <> Tint constr
R4540:4545 compcert.cfrontend.Ctypes <> noattr def
R4537:4538 VST.floyd.go_lower <> sg:51 var
R4534:4535 VST.floyd.go_lower <> sz:50 var
R4573:4576 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4583:4583 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4560:4566 VST.veric.mpred <> eval_id def
R4570:4572 VST.floyd.go_lower <> rho:52 var
R4568:4568 VST.floyd.go_lower <> i:55 var
R4577:4580 compcert.common.Values <> Vint constr
R4582:4582 VST.floyd.go_lower <> j:60 var
R4462:4464 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4440:4440 compcert.lib.Maps <> :::x_'!'_x not
R4457:4460 compcert.lib.Maps <> :::x_'!'_x not
R4461:4461 VST.floyd.go_lower <> i:55 var
R4441:4450 VST.veric.seplog <> temp_types def
R4452:4456 VST.floyd.go_lower <> Delta:53 var
R4465:4468 Coq.Init.Datatypes <> Some constr
R4471:4474 compcert.cfrontend.Ctypes <> Tint constr
R4482:4487 compcert.cfrontend.Ctypes <> noattr def
R4479:4480 VST.floyd.go_lower <> sg:51 var
R4476:4477 VST.floyd.go_lower <> sz:50 var
R4771:4784 VST.floyd.go_lower <> lower_one_temp thm
R4771:4784 VST.floyd.go_lower <> lower_one_temp thm
R4986:4988 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4986:4988 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5055:5057 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5055:5057 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5435:5437 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5435:5437 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5746:5750 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R5696:5696 VST.msl.seplog <> ::logic:x_'&&'_x not
R5704:5707 VST.msl.seplog <> ::logic:x_'&&'_x not
R5743:5745 VST.msl.seplog <> ::logic:x_'&&'_x not
R5697:5701 VST.veric.SeparationLogic <> local def
R5708:5712 VST.floyd.canon <> PROPx def
R5717:5722 VST.floyd.canon <> LOCALx def
R5734:5737 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5725:5728 VST.floyd.canon <> temp constr
R5746:5750 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R5696:5696 VST.msl.seplog <> ::logic:x_'&&'_x not
R5704:5707 VST.msl.seplog <> ::logic:x_'&&'_x not
R5743:5745 VST.msl.seplog <> ::logic:x_'&&'_x not
R5697:5701 VST.veric.SeparationLogic <> local def
R5708:5712 VST.floyd.canon <> PROPx def
R5717:5722 VST.floyd.canon <> LOCALx def
R5734:5737 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5725:5728 VST.floyd.canon <> temp constr
R5789:5808 VST.floyd.go_lower <> lower_one_temp_Vint' thm
R5948:5953 VST.veric.Cop2 <> tc_val def
prf 6023:6044 <> lower_one_temp_trivial
binder 6055:6055 <> t:61
binder 6057:6059 <> rho:62
binder 6061:6065 <> Delta:63
binder 6067:6067 <> P:64
binder 6069:6069 <> i:65
binder 6071:6071 <> v:66
binder 6073:6073 <> Q:67
binder 6075:6075 <> R:68
binder 6077:6077 <> S:69
R6113:6118 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6119:6119 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6204:6210 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6286:6290 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R6211:6211 VST.msl.seplog <> ::logic:x_'&&'_x not
R6236:6239 VST.msl.seplog <> ::logic:x_'&&'_x not
R6281:6285 VST.msl.seplog <> ::logic:x_'&&'_x not
R6212:6216 VST.veric.SeparationLogic <> local def
R6219:6228 VST.veric.SeparationLogic <> tc_environ def
R6230:6234 VST.floyd.go_lower <> Delta:63 var
R6240:6244 VST.floyd.canon <> PROPx def
R6249:6254 VST.floyd.canon <> LOCALx def
R6273:6276 VST.floyd.canon <> SEPx def
R6278:6278 VST.floyd.go_lower <> R:68 var
R6265:6268 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6257:6260 VST.floyd.canon <> temp constr
R6264:6264 VST.floyd.go_lower <> v:66 var
R6262:6262 VST.floyd.go_lower <> i:65 var
R6269:6269 VST.floyd.go_lower <> Q:67 var
R6246:6246 VST.floyd.go_lower <> P:64 var
R6283:6285 VST.floyd.go_lower <> rho:62 var
R6291:6291 VST.floyd.go_lower <> S:69 var
R6130:6136 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6198:6202 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R6137:6137 VST.msl.seplog <> ::logic:x_'&&'_x not
R6162:6165 VST.msl.seplog <> ::logic:x_'&&'_x not
R6193:6197 VST.msl.seplog <> ::logic:x_'&&'_x not
R6138:6142 VST.veric.SeparationLogic <> local def
R6145:6154 VST.veric.SeparationLogic <> tc_environ def
R6156:6160 VST.floyd.go_lower <> Delta:63 var
R6166:6170 VST.floyd.canon <> PROPx def
R6175:6180 VST.floyd.canon <> LOCALx def
R6185:6188 VST.floyd.canon <> SEPx def
R6190:6190 VST.floyd.go_lower <> R:68 var
R6182:6182 VST.floyd.go_lower <> Q:67 var
R6172:6172 VST.floyd.go_lower <> P:64 var
R6195:6197 VST.floyd.go_lower <> rho:62 var
R6203:6203 VST.floyd.go_lower <> S:69 var
R6120:6125 VST.veric.Cop2 <> tc_val def
R6129:6129 VST.floyd.go_lower <> v:66 var
R6127:6127 VST.floyd.go_lower <> t:61 var
R6104:6106 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6082:6082 compcert.lib.Maps <> :::x_'!'_x not
R6099:6102 compcert.lib.Maps <> :::x_'!'_x not
R6103:6103 VST.floyd.go_lower <> i:65 var
R6083:6092 VST.veric.seplog <> temp_types def
R6094:6098 VST.floyd.go_lower <> Delta:63 var
R6107:6110 Coq.Init.Datatypes <> Some constr
R6112:6112 VST.floyd.go_lower <> t:61 var
R6320:6331 VST.floyd.canon <> insert_local thm
R6320:6331 VST.floyd.canon <> insert_local thm
R6320:6331 VST.floyd.canon <> insert_local thm
R6342:6346 VST.floyd.canon <> PROPx def
R6351:6356 VST.floyd.canon <> LOCALx def
R6361:6364 VST.floyd.canon <> SEPx def
R6342:6346 VST.floyd.canon <> PROPx def
R6351:6356 VST.floyd.canon <> LOCALx def
R6361:6364 VST.floyd.canon <> SEPx def
R6386:6390 VST.veric.SeparationLogic <> local def
R6392:6396 VST.veric.mpred <> lift1 def
R6448:6461 VST.msl.log_normalize <> prop_true_andp thm
R6448:6461 VST.msl.log_normalize <> prop_true_andp thm
R6448:6461 VST.msl.log_normalize <> prop_true_andp thm
R6500:6512 VST.floyd.client_lemmas <> tc_eval'_id_i thm
R6500:6512 VST.floyd.client_lemmas <> tc_eval'_id_i thm
prf 6544:6561 <> quick_finish_lower
binder 6573:6575 <> LHS:70
R6595:6600 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6604:6608 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R6601:6603 VST.floyd.go_lower <> LHS:70 var
R6609:6611 VST.msl.seplog <> ::logic:'!!'_x not
R6612:6615 Coq.Init.Logic <> True ind
R6583:6587 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R6580:6582 VST.msl.seplog <> emp meth
R6588:6590 VST.msl.seplog <> ::logic:'!!'_x not
R6591:6594 Coq.Init.Logic <> True ind
R6639:6648 VST.msl.seplog <> prop_right meth
R6639:6648 VST.msl.seplog <> prop_right meth
R6778:6782 VST.veric.val_lemmas <> isptr def
R6778:6782 VST.veric.val_lemmas <> isptr def
R6796:6802 VST.floyd.val_lemmas <> headptr def
R6796:6802 VST.floyd.val_lemmas <> headptr def
R7015:7019 VST.veric.val_lemmas <> isptr def
R7015:7019 VST.veric.val_lemmas <> isptr def
R7028:7034 VST.floyd.val_lemmas <> headptr def
R7028:7034 VST.floyd.val_lemmas <> headptr def
R7130:7136 VST.floyd.val_lemmas <> headptr def
def 7544:7558 <> remove_localdef
R7564:7571 VST.floyd.canon <> localdef ind
binder 7561:7561 <> x:71
R7578:7581 Coq.Init.Datatypes <> list ind
R7583:7590 VST.floyd.canon <> localdef ind
binder 7575:7575 <> l:72
R7595:7598 Coq.Init.Datatypes <> list ind
R7600:7607 VST.floyd.canon <> localdef ind
R7620:7620 VST.floyd.go_lower <> l:72 var
R7631:7633 Coq.Init.Datatypes <> nil constr
R7638:7640 Coq.Init.Datatypes <> nil constr
R7647:7650 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7668:7668 VST.floyd.go_lower <> x:71 var
R7685:7688 VST.floyd.canon <> temp constr
R7695:7698 VST.floyd.canon <> temp constr
R7717:7723 Coq.PArith.BinPos Pos eqb def
R7775:7778 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7779:7793 VST.floyd.go_lower <> remove_localdef:73 def
R7795:7795 VST.floyd.go_lower <> x:71 var
R7741:7755 VST.floyd.go_lower <> remove_localdef:73 def
R7757:7757 VST.floyd.go_lower <> x:71 var
R7807:7810 VST.floyd.canon <> lvar constr
R7820:7823 VST.floyd.canon <> lvar constr
R7845:7851 Coq.PArith.BinPos Pos eqb def
R7903:7906 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7907:7921 VST.floyd.go_lower <> remove_localdef:73 def
R7923:7923 VST.floyd.go_lower <> x:71 var
R7869:7883 VST.floyd.go_lower <> remove_localdef:73 def
R7885:7885 VST.floyd.go_lower <> x:71 var
R7944:7947 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7948:7962 VST.floyd.go_lower <> remove_localdef:73 def
R7964:7964 VST.floyd.go_lower <> x:71 var
def 7997:8007 <> localdef_tc
R8017:8025 VST.veric.seplog <> tycontext ind
binder 8010:8014 <> Delta:77
R8042:8045 Coq.Init.Datatypes <> list ind
R8047:8051 compcert.common.AST <> ident def
binder 8029:8039 <> gvar_idents:78
R8058:8065 VST.floyd.canon <> localdef ind
binder 8055:8055 <> x:79
R8069:8072 Coq.Init.Datatypes <> list ind
R8090:8090 VST.floyd.go_lower <> x:79 var
R8101:8104 VST.floyd.canon <> temp constr
R8125:8125 compcert.lib.Maps <> :::x_'!'_x not
R8142:8145 compcert.lib.Maps <> :::x_'!'_x not
R8126:8135 VST.veric.seplog <> temp_types def
R8137:8141 VST.floyd.go_lower <> Delta:77 var
R8161:8164 Coq.Init.Datatypes <> Some constr
R8181:8184 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8171:8176 VST.veric.Cop2 <> tc_val def
R8185:8187 Coq.Init.Datatypes <> nil constr
R8202:8204 Coq.Init.Datatypes <> nil constr
R8220:8223 VST.floyd.canon <> lvar constr
R8247:8250 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8240:8244 VST.veric.val_lemmas <> isptr def
R8260:8263 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8251:8257 VST.floyd.val_lemmas <> headptr def
R8264:8266 Coq.Init.Datatypes <> nil constr
R8272:8276 VST.floyd.canon <> gvars constr
R8290:8302 VST.floyd.computable_functions <> VST_floyd_map def
R8332:8342 VST.floyd.go_lower <> gvar_idents:78 var
binder 8309:8310 <> id:81
R8315:8321 VST.floyd.val_lemmas <> headptr def
R8327:8328 VST.floyd.go_lower <> id:81 var
def 8363:8378 <> legal_glob_ident
R8388:8396 VST.veric.seplog <> tycontext ind
binder 8381:8385 <> Delta:82
R8403:8407 compcert.common.AST <> ident def
binder 8400:8400 <> i:83
R8411:8414 Coq.Init.Datatypes <> bool ind
R8427:8427 compcert.lib.Maps <> :::x_'!'_x not
R8444:8447 compcert.lib.Maps <> :::x_'!'_x not
R8448:8448 VST.floyd.go_lower <> i:83 var
R8428:8437 VST.veric.seplog <> glob_types def
R8439:8443 VST.floyd.go_lower <> Delta:82 var
R8459:8462 Coq.Init.Datatypes <> Some constr
R8469:8472 Coq.Init.Datatypes <> true constr
R8483:8487 Coq.Init.Datatypes <> false constr
prf 8503:8522 <> localdef_local_facts
binder 8532:8536 <> Delta:84
binder 8538:8547 <> gvar_ident:85
binder 8549:8549 <> x:86
R8623:8628 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8680:8684 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R8653:8656 VST.msl.seplog <> ::logic:x_'&&'_x not
R8629:8633 VST.veric.SeparationLogic <> local def
R8636:8645 VST.veric.SeparationLogic <> tc_environ def
R8647:8651 VST.floyd.go_lower <> Delta:84 var
R8657:8661 VST.veric.SeparationLogic <> local def
R8664:8676 VST.floyd.canon <> locald_denote def
R8678:8678 VST.floyd.go_lower <> x:86 var
R8685:8687 VST.msl.seplog <> ::logic:'!!'_x not
R8688:8697 Coq.Lists.List <> fold_right def
R8709:8719 VST.floyd.go_lower <> localdef_tc def
R8738:8738 VST.floyd.go_lower <> x:86 var
R8727:8736 VST.floyd.go_lower <> gvar_ident:85 var
R8721:8725 VST.floyd.go_lower <> Delta:84 var
R8703:8706 Coq.Init.Logic <> True ind
R8699:8701 Coq.Init.Logic <> and ind
R8616:8618 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8554:8563 Coq.Lists.List <> fold_right def
R8576:8578 Coq.Lists.List <> map def
R8605:8614 VST.floyd.go_lower <> gvar_ident:85 var
R8581:8596 VST.floyd.go_lower <> legal_glob_ident def
R8598:8602 VST.floyd.go_lower <> Delta:84 var
R8570:8573 Coq.Init.Datatypes <> true constr
R8565:8568 Coq.Init.Datatypes <> andb def
R8619:8622 Coq.Init.Datatypes <> true constr
R8791:8795 VST.veric.SeparationLogic <> local def
R8798:8802 VST.veric.mpred <> lift1 def
R8852:8859 VST.msl.log_normalize <> prop_and thm
R8852:8859 VST.msl.log_normalize <> prop_and thm
R8852:8859 VST.msl.log_normalize <> prop_and thm
R8870:8881 VST.msl.log_normalize <> prop_derives thm
R8870:8881 VST.msl.log_normalize <> prop_derives thm
R8978:8978 compcert.lib.Maps <> :::x_'!'_x not
R8995:8998 compcert.lib.Maps <> :::x_'!'_x not
R8979:8988 VST.veric.seplog <> temp_types def
R8978:8978 compcert.lib.Maps <> :::x_'!'_x not
R8995:8998 compcert.lib.Maps <> :::x_'!'_x not
R8979:8988 VST.veric.seplog <> temp_types def
R9089:9101 VST.floyd.client_lemmas <> tc_eval'_id_i thm
R9089:9101 VST.floyd.client_lemmas <> tc_eval'_id_i thm
R9134:9140 VST.floyd.val_lemmas <> headptr def
R9179:9191 VST.floyd.val_lemmas <> headptr_isptr thm
R9134:9140 VST.floyd.val_lemmas <> headptr def
R9212:9222 VST.floyd.canon <> lvar_denote def
R9245:9251 VST.veric.mpred Map get def
R9254:9258 VST.veric.mpred <> ve_of def
R9245:9251 VST.veric.mpred Map get def
R9254:9258 VST.veric.mpred <> ve_of def
R9341:9351 VST.floyd.go_lower <> localdef_tc def
R9387:9387 Coq.Init.Logic <> I constr
R9387:9387 Coq.Init.Logic <> I constr
R9425:9437 Coq.Bool.Bool <> andb_true_iff thm
R9425:9437 Coq.Bool.Bool <> andb_true_iff thm
R9425:9437 Coq.Bool.Bool <> andb_true_iff thm
R9558:9569 VST.floyd.canon <> gvars_denote def
R9602:9617 VST.floyd.go_lower <> legal_glob_ident def
prf 9765:9801 <> go_lower_localdef_one_step_canon_left
binder 9811:9815 <> Delta:87
binder 9817:9820 <> Ppre:88
binder 9822:9822 <> l:89
binder 9824:9827 <> Qpre:90
binder 9829:9832 <> Rpre:91
binder 9834:9837 <> post:92
binder 9839:9848 <> gvar_ident:93
R9922:9924 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9860:9869 Coq.Lists.List <> fold_right def
R9882:9884 Coq.Lists.List <> map def
R9911:9920 VST.floyd.go_lower <> gvar_ident:93 var
R9887:9902 VST.floyd.go_lower <> legal_glob_ident def
R9904:9908 VST.floyd.go_lower <> Delta:87 var
R9876:9879 Coq.Init.Datatypes <> true constr
R9871:9874 Coq.Init.Datatypes <> andb def
R9925:9928 Coq.Init.Datatypes <> true constr
binder 9853:9857 <> LEGAL:94
R10050:10055 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10127:10131 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R10080:10083 VST.msl.seplog <> ::logic:x_'&&'_x not
R10056:10060 VST.veric.SeparationLogic <> local def
R10063:10072 VST.veric.SeparationLogic <> tc_environ def
R10074:10078 VST.floyd.go_lower <> Delta:87 var
R10084:10088 VST.floyd.canon <> PROPx def
R10096:10101 VST.floyd.canon <> LOCALx def
R10116:10119 VST.floyd.canon <> SEPx def
R10121:10124 VST.floyd.go_lower <> Rpre:91 var
R10105:10108 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10104:10104 VST.floyd.go_lower <> l:89 var
R10109:10112 VST.floyd.go_lower <> Qpre:90 var
R10090:10093 VST.floyd.go_lower <> Ppre:88 var
R10132:10135 VST.floyd.go_lower <> post:92 var
R10041:10045 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R9958:9961 VST.msl.seplog <> ::logic:x_'&&'_x not
R9934:9938 VST.veric.SeparationLogic <> local def
R9941:9950 VST.veric.SeparationLogic <> tc_environ def
R9952:9956 VST.floyd.go_lower <> Delta:87 var
R9962:9966 VST.floyd.canon <> PROPx def
R10010:10015 VST.floyd.canon <> LOCALx def
R10030:10033 VST.floyd.canon <> SEPx def
R10035:10038 VST.floyd.go_lower <> Rpre:91 var
R10019:10022 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10018:10018 VST.floyd.go_lower <> l:89 var
R10023:10026 VST.floyd.go_lower <> Qpre:90 var
R9973:9976 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R9969:9972 VST.floyd.go_lower <> Ppre:88 var
R9977:9987 VST.floyd.go_lower <> localdef_tc def
R10006:10006 VST.floyd.go_lower <> l:89 var
R9995:10004 VST.floyd.go_lower <> gvar_ident:93 var
R9989:9993 VST.floyd.go_lower <> Delta:87 var
R10046:10049 VST.floyd.go_lower <> post:92 var
R10207:10210 VST.msl.seplog <> ::logic:x_'&&'_x not
R10183:10187 VST.veric.SeparationLogic <> local def
R10190:10199 VST.veric.SeparationLogic <> tc_environ def
R10211:10215 VST.floyd.canon <> PROPx def
R10259:10264 VST.floyd.canon <> LOCALx def
R10279:10282 VST.floyd.canon <> SEPx def
R10268:10271 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10222:10225 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R10226:10236 VST.floyd.go_lower <> localdef_tc def
R10163:10175 VST.msl.seplog <> derives_trans meth
R10207:10210 VST.msl.seplog <> ::logic:x_'&&'_x not
R10183:10187 VST.veric.SeparationLogic <> local def
R10190:10199 VST.veric.SeparationLogic <> tc_environ def
R10211:10215 VST.floyd.canon <> PROPx def
R10259:10264 VST.floyd.canon <> LOCALx def
R10279:10282 VST.floyd.canon <> SEPx def
R10268:10271 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10222:10225 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R10226:10236 VST.floyd.go_lower <> localdef_tc def
R10163:10175 VST.msl.seplog <> derives_trans meth
R10310:10314 VST.floyd.canon <> PROPx def
R10321:10324 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R10325:10335 VST.floyd.go_lower <> localdef_tc def
R10365:10369 VST.floyd.canon <> PROPx def
R10410:10413 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R10380:10390 VST.floyd.go_lower <> localdef_tc def
R10371:10377 VST.veric.mpred <> environ ind
R10310:10314 VST.floyd.canon <> PROPx def
R10321:10324 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R10325:10335 VST.floyd.go_lower <> localdef_tc def
R10365:10369 VST.floyd.canon <> PROPx def
R10410:10413 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R10380:10390 VST.floyd.go_lower <> localdef_tc def
R10371:10377 VST.veric.mpred <> environ ind
R10438:10454 VST.floyd.canon <> PROPx_Permutation thm
R10438:10454 VST.floyd.canon <> PROPx_Permutation thm
R10467:10486 Coq.Sorting.Permutation <> Permutation_app_comm thm
R10467:10486 Coq.Sorting.Permutation <> Permutation_app_comm thm
R10507:10519 VST.floyd.canon <> insert_local' thm
R10507:10519 VST.floyd.canon <> insert_local' thm
R10507:10519 VST.floyd.canon <> insert_local' thm
R10507:10519 VST.floyd.canon <> insert_local' thm
R10507:10519 VST.floyd.canon <> insert_local' thm
R10530:10539 VST.msl.seplog <> andp_right meth
R10530:10539 VST.msl.seplog <> andp_right meth
R10566:10575 VST.msl.seplog <> andp_right meth
R10566:10575 VST.msl.seplog <> andp_right meth
R10603:10607 VST.floyd.canon <> PROPx def
R10616:10625 VST.msl.seplog <> andp_right meth
R10616:10625 VST.msl.seplog <> andp_right meth
R10657:10666 VST.msl.log_normalize <> andp_assoc thm
R10657:10666 VST.msl.log_normalize <> andp_assoc thm
R10657:10666 VST.msl.log_normalize <> andp_assoc thm
R10678:10690 VST.msl.seplog <> derives_trans meth
R10700:10711 VST.msl.log_normalize <> andp_derives thm
R10721:10740 VST.floyd.go_lower <> localdef_local_facts thm
R10757:10768 VST.msl.seplog <> derives_refl meth
R10678:10690 VST.msl.seplog <> derives_trans meth
R10700:10711 VST.msl.log_normalize <> andp_derives thm
R10721:10740 VST.floyd.go_lower <> localdef_local_facts thm
R10757:10768 VST.msl.seplog <> derives_refl meth
R10788:10797 VST.msl.log_normalize <> andp_assoc thm
R10788:10797 VST.msl.log_normalize <> andp_assoc thm
R10788:10797 VST.msl.log_normalize <> andp_assoc thm
R10808:10817 VST.msl.seplog <> andp_left1 meth
R10808:10817 VST.msl.seplog <> andp_left1 meth
R10832:10842 VST.floyd.go_lower <> localdef_tc def
R10832:10842 VST.floyd.go_lower <> localdef_tc def
R10920:10929 VST.msl.seplog <> andp_left2 meth
R10920:10929 VST.msl.seplog <> andp_left2 meth
R10973:10980 VST.msl.log_normalize <> prop_and thm
R10984:10993 VST.msl.log_normalize <> andp_assoc thm
R10973:10980 VST.msl.log_normalize <> prop_and thm
R10973:10980 VST.msl.log_normalize <> prop_and thm
R10973:10980 VST.msl.log_normalize <> prop_and thm
R10973:10980 VST.msl.log_normalize <> prop_and thm
R10984:10993 VST.msl.log_normalize <> andp_assoc thm
R10984:10993 VST.msl.log_normalize <> andp_assoc thm
R10984:10993 VST.msl.log_normalize <> andp_assoc thm
R11006:11017 VST.msl.log_normalize <> andp_derives thm
R11036:11047 VST.msl.seplog <> derives_refl meth
R11006:11017 VST.msl.log_normalize <> andp_derives thm
R11036:11047 VST.msl.seplog <> derives_refl meth
def 11067:11078 <> localdefs_tc
R11088:11096 VST.veric.seplog <> tycontext ind
binder 11081:11085 <> Delta:95
binder 11099:11108 <> gvar_ident:96
R11116:11119 Coq.Init.Datatypes <> list ind
R11121:11128 VST.floyd.canon <> localdef ind
binder 11111:11113 <> Pre:97
R11132:11135 Coq.Init.Datatypes <> list ind
R11147:11162 VST.floyd.computable_functions <> VST_floyd_concat def
R11165:11177 VST.floyd.computable_functions <> VST_floyd_map def
R11210:11212 VST.floyd.go_lower <> Pre:97 var
R11180:11190 VST.floyd.go_lower <> localdef_tc def
R11198:11207 VST.floyd.go_lower <> gvar_ident:96 var
R11192:11196 VST.floyd.go_lower <> Delta:95 var
prf 11223:11250 <> go_lower_localdef_canon_left
binder 11260:11264 <> Delta:98
binder 11266:11269 <> Ppre:99
binder 11271:11274 <> Qpre:100
binder 11276:11279 <> Rpre:101
binder 11281:11284 <> post:102
binder 11286:11295 <> gvar_ident:103
R11369:11371 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11307:11316 Coq.Lists.List <> fold_right def
R11329:11331 Coq.Lists.List <> map def
R11358:11367 VST.floyd.go_lower <> gvar_ident:103 var
R11334:11349 VST.floyd.go_lower <> legal_glob_ident def
R11351:11355 VST.floyd.go_lower <> Delta:98 var
R11323:11326 Coq.Init.Datatypes <> true constr
R11318:11321 Coq.Init.Datatypes <> andb def
R11372:11375 Coq.Init.Datatypes <> true constr
binder 11300:11304 <> LEGAL:104
R11493:11498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11563:11567 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R11523:11526 VST.msl.seplog <> ::logic:x_'&&'_x not
R11499:11503 VST.veric.SeparationLogic <> local def
R11506:11515 VST.veric.SeparationLogic <> tc_environ def
R11517:11521 VST.floyd.go_lower <> Delta:98 var
R11527:11531 VST.floyd.canon <> PROPx def
R11539:11544 VST.floyd.canon <> LOCALx def
R11552:11555 VST.floyd.canon <> SEPx def
R11557:11560 VST.floyd.go_lower <> Rpre:101 var
R11546:11549 VST.floyd.go_lower <> Qpre:100 var
R11533:11536 VST.floyd.go_lower <> Ppre:99 var
R11568:11571 VST.floyd.go_lower <> post:102 var
R11484:11488 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R11405:11408 VST.msl.seplog <> ::logic:x_'&&'_x not
R11381:11385 VST.veric.SeparationLogic <> local def
R11388:11397 VST.veric.SeparationLogic <> tc_environ def
R11399:11403 VST.floyd.go_lower <> Delta:98 var
R11409:11413 VST.floyd.canon <> PROPx def
R11461:11466 VST.floyd.canon <> LOCALx def
R11473:11476 VST.floyd.canon <> SEPx def
R11478:11481 VST.floyd.go_lower <> Rpre:101 var
R11468:11470 Coq.Init.Datatypes <> nil constr
R11420:11423 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11416:11419 VST.floyd.go_lower <> Ppre:99 var
R11424:11435 VST.floyd.go_lower <> localdefs_tc def
R11454:11457 VST.floyd.go_lower <> Qpre:100 var
R11443:11452 VST.floyd.go_lower <> gvar_ident:103 var
R11437:11441 VST.floyd.go_lower <> Delta:98 var
R11489:11492 VST.floyd.go_lower <> post:102 var
R11646:11657 VST.floyd.go_lower <> localdefs_tc def
R11659:11664 Coq.Lists.List <> concat def
R11666:11668 Coq.Lists.List <> rev def
R11670:11672 Coq.Lists.List <> map def
R11694:11702 Coq.Lists.List <> app_nil_r thm
R11694:11702 Coq.Lists.List <> app_nil_r thm
R11694:11702 Coq.Lists.List <> app_nil_r thm
R11694:11702 Coq.Lists.List <> app_nil_r thm
R11727:11763 VST.floyd.go_lower <> go_lower_localdef_one_step_canon_left thm
R11727:11763 VST.floyd.go_lower <> go_lower_localdef_one_step_canon_left thm
R11788:11799 VST.floyd.canon <> insert_local thm
R11803:11811 VST.msl.log_normalize <> andp_comm thm
R11816:11820 VST.floyd.canon <> PROPx def
R11832:11841 VST.msl.log_normalize <> andp_assoc thm
R11847:11862 VST.msl.seplog <> imp_andp_adjoint meth
R11788:11799 VST.floyd.canon <> insert_local thm
R11788:11799 VST.floyd.canon <> insert_local thm
R11803:11811 VST.msl.log_normalize <> andp_comm thm
R11816:11820 VST.floyd.canon <> PROPx def
R11803:11811 VST.msl.log_normalize <> andp_comm thm
R11816:11820 VST.floyd.canon <> PROPx def
R11832:11841 VST.msl.log_normalize <> andp_assoc thm
R11832:11841 VST.msl.log_normalize <> andp_assoc thm
R11847:11862 VST.msl.seplog <> imp_andp_adjoint meth
R11847:11862 VST.msl.seplog <> imp_andp_adjoint meth
R11898:11913 VST.msl.seplog <> imp_andp_adjoint meth
R11898:11913 VST.msl.seplog <> imp_andp_adjoint meth
R11898:11913 VST.msl.seplog <> imp_andp_adjoint meth
R11926:11935 VST.msl.seplog <> andp_left1 meth
R11926:11935 VST.msl.seplog <> andp_left1 meth
R11954:11962 Coq.Lists.List <> app_assoc thm
R11954:11962 Coq.Lists.List <> app_assoc thm
R11954:11962 Coq.Lists.List <> app_assoc thm
R11954:11962 Coq.Lists.List <> app_assoc thm
R11976:11988 VST.msl.seplog <> derives_trans meth
R11976:11988 VST.msl.seplog <> derives_trans meth
ind 12025:12050 <> No_value_for_temp_variable
R12056:12060 compcert.common.AST <> ident def
binder 12053:12053 <> i:105
ind 12085:12110 <> No_value_for_lvar_variable
R12116:12120 compcert.common.AST <> ident def
binder 12113:12113 <> i:108
ind 12145:12172 <> Wrong_type_for_lvar_variable
R12178:12182 compcert.common.AST <> ident def
binder 12175:12175 <> i:111
ind 12207:12219 <> Missing_gvars
R12226:12232 VST.veric.SeparationLogic <> globals def
binder 12222:12223 <> gv:114
def 12259:12278 <> msubst_extract_local
R12288:12296 VST.veric.seplog <> tycontext ind
binder 12281:12285 <> Delta:117
R12304:12310 compcert.lib.Maps PTree t def
R12312:12314 compcert.common.Values <> val ind
binder 12300:12301 <> T1:118
R12322:12328 compcert.lib.Maps PTree t def
R12335:12337 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R12331:12334 compcert.cfrontend.Ctypes <> type ind
R12338:12340 compcert.common.Values <> val ind
binder 12318:12319 <> T2:119
R12349:12354 Coq.Init.Datatypes <> option ind
R12356:12362 VST.veric.SeparationLogic <> globals def
binder 12345:12346 <> GV:120
R12369:12376 VST.floyd.canon <> localdef ind
binder 12366:12366 <> x:121
R12396:12396 VST.floyd.go_lower <> x:121 var
R12407:12410 VST.floyd.canon <> temp constr
R12431:12433 compcert.lib.Maps <> :::x_'!'_x not
R12429:12430 VST.floyd.go_lower <> T1:118 var
R12447:12450 Coq.Init.Datatypes <> Some constr
R12458:12460 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12469:12472 Coq.Init.Datatypes <> None constr
R12477:12502 VST.floyd.go_lower <> No_value_for_temp_variable ind
R12518:12521 VST.floyd.canon <> lvar constr
R12545:12547 compcert.lib.Maps <> :::x_'!'_x not
R12543:12544 VST.floyd.go_lower <> T2:119 var
R12561:12564 Coq.Init.Datatypes <> Some constr
R12566:12566 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12569:12570 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12572:12572 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12586:12593 VST.veric.Cop2 <> eqb_type def
R12629:12656 VST.floyd.go_lower <> Wrong_type_for_lvar_variable ind
R12613:12615 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12671:12696 VST.floyd.go_lower <> No_value_for_lvar_variable ind
R12712:12716 VST.floyd.canon <> gvars constr
R12734:12735 VST.floyd.go_lower <> GV:120 var
R12748:12751 Coq.Init.Datatypes <> Some constr
R12763:12765 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12780:12792 VST.floyd.go_lower <> Missing_gvars ind
def 12824:12844 <> msubst_extract_locals
R12854:12862 VST.veric.seplog <> tycontext ind
binder 12847:12851 <> Delta:124
R12870:12876 compcert.lib.Maps PTree t def
R12878:12880 compcert.common.Values <> val ind
binder 12866:12867 <> T1:125
R12888:12894 compcert.lib.Maps PTree t def
R12901:12903 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R12897:12900 compcert.cfrontend.Ctypes <> type ind
R12904:12906 compcert.common.Values <> val ind
binder 12884:12885 <> T2:126
R12915:12920 Coq.Init.Datatypes <> option ind
R12922:12928 VST.veric.SeparationLogic <> globals def
binder 12911:12912 <> GV:127
R12934:12946 VST.floyd.computable_functions <> VST_floyd_map def
R12949:12968 VST.floyd.go_lower <> msubst_extract_local def
R12982:12983 VST.floyd.go_lower <> GV:127 var
R12979:12980 VST.floyd.go_lower <> T2:126 var
R12976:12977 VST.floyd.go_lower <> T1:125 var
R12970:12974 VST.floyd.go_lower <> Delta:124 var
prf 12994:13017 <> localdef_local_facts_inv
binder 13027:13031 <> Delta:128
binder 13033:13033 <> P:129
binder 13035:13036 <> T1:130
binder 13038:13039 <> T2:131
binder 13041:13042 <> GV:132
binder 13044:13044 <> R:133
binder 13046:13046 <> x:134
R13088:13093 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13165:13169 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R13118:13121 VST.msl.seplog <> ::logic:x_'&&'_x not
R13094:13098 VST.veric.SeparationLogic <> local def
R13101:13110 VST.veric.SeparationLogic <> tc_environ def
R13112:13116 VST.floyd.go_lower <> Delta:128 var
R13122:13126 VST.floyd.canon <> PROPx def
R13131:13136 VST.floyd.canon <> LOCALx def
R13157:13160 VST.floyd.canon <> SEPx def
R13162:13162 VST.floyd.go_lower <> R:133 var
R13139:13144 VST.floyd.local2ptree_denote <> LocalD def
R13152:13153 VST.floyd.go_lower <> GV:132 var
R13149:13150 VST.floyd.go_lower <> T2:131 var
R13146:13147 VST.floyd.go_lower <> T1:130 var
R13128:13128 VST.floyd.go_lower <> P:129 var
R13170:13174 VST.veric.SeparationLogic <> local def
R13177:13189 VST.floyd.canon <> locald_denote def
R13191:13191 VST.floyd.go_lower <> x:134 var
R13051:13070 VST.floyd.go_lower <> msubst_extract_local def
R13087:13087 VST.floyd.go_lower <> x:134 var
R13084:13085 VST.floyd.go_lower <> GV:132 var
R13081:13082 VST.floyd.go_lower <> T2:131 var
R13078:13079 VST.floyd.go_lower <> T1:130 var
R13072:13076 VST.floyd.go_lower <> Delta:128 var
R13248:13255 VST.floyd.canon <> in_local thm
R13248:13255 VST.floyd.canon <> in_local thm
R13268:13284 VST.floyd.local2ptree_denote <> LocalD_sound_temp thm
R13268:13284 VST.floyd.local2ptree_denote <> LocalD_sound_temp thm
R13303:13305 compcert.lib.Maps <> :::x_'!'_x not
R13303:13305 compcert.lib.Maps <> :::x_'!'_x not
R13333:13340 VST.floyd.canon <> in_local thm
R13333:13340 VST.floyd.canon <> in_local thm
R13359:13361 compcert.lib.Maps <> :::x_'!'_x not
R13359:13361 compcert.lib.Maps <> :::x_'!'_x not
R13419:13426 VST.veric.Cop2 <> eqb_type def
R13419:13426 VST.veric.Cop2 <> eqb_type def
R13463:13475 VST.veric.Cop2 <> eqb_type_spec thm
R13463:13475 VST.veric.Cop2 <> eqb_type_spec thm
R13502:13519 VST.floyd.local2ptree_denote <> LocalD_sound_local thm
R13502:13519 VST.floyd.local2ptree_denote <> LocalD_sound_local thm
R13552:13559 VST.floyd.canon <> in_local thm
R13552:13559 VST.floyd.canon <> in_local thm
R13641:13658 VST.floyd.local2ptree_denote <> LocalD_sound_gvars thm
R13641:13658 VST.floyd.local2ptree_denote <> LocalD_sound_gvars thm
prf 13679:13716 <> go_lower_localdef_one_step_canon_canon
R13723:13731 VST.veric.mpred <> compspecs class
binder 13719:13720 <> cs:135
binder 13743:13747 <> Delta:136
binder 13749:13752 <> Ppre:137
binder 13754:13757 <> Qpre:138
binder 13759:13762 <> Rpre:139
binder 13764:13768 <> Ppost:140
binder 13770:13770 <> l:141
binder 13772:13776 <> Qpost:142
binder 13778:13782 <> Rpost:143
binder 13784:13785 <> T1:144
binder 13787:13788 <> T2:145
binder 13790:13791 <> GV:146
R13832:13837 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13995:13999 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R13902:13905 VST.msl.seplog <> ::logic:x_'&&'_x not
R13862:13865 VST.msl.seplog <> ::logic:x_'&&'_x not
R13838:13842 VST.veric.SeparationLogic <> local def
R13845:13854 VST.veric.SeparationLogic <> tc_environ def
R13856:13860 VST.floyd.go_lower <> Delta:136 var
R13866:13870 VST.floyd.canon <> PROPx def
R13878:13883 VST.floyd.canon <> LOCALx def
R13891:13894 VST.floyd.canon <> SEPx def
R13896:13899 VST.floyd.go_lower <> Rpre:139 var
R13885:13888 VST.floyd.go_lower <> Qpre:138 var
R13872:13875 VST.floyd.go_lower <> Ppre:137 var
R13906:13910 VST.floyd.canon <> PROPx def
R13969:13974 VST.floyd.canon <> LOCALx def
R13983:13986 VST.floyd.canon <> SEPx def
R13988:13992 VST.floyd.go_lower <> Rpost:143 var
R13976:13980 VST.floyd.go_lower <> Qpost:142 var
R13918:13921 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13913:13917 VST.floyd.go_lower <> Ppost:140 var
R13959:13962 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13922:13941 VST.floyd.go_lower <> msubst_extract_local def
R13958:13958 VST.floyd.go_lower <> l:141 var
R13955:13956 VST.floyd.go_lower <> GV:146 var
R13952:13953 VST.floyd.go_lower <> T2:145 var
R13949:13950 VST.floyd.go_lower <> T1:144 var
R13943:13947 VST.floyd.go_lower <> Delta:136 var
R13963:13965 Coq.Init.Datatypes <> nil constr
R14000:14004 VST.floyd.canon <> PROPx def
R14013:14018 VST.floyd.canon <> LOCALx def
R14034:14037 VST.floyd.canon <> SEPx def
R14039:14043 VST.floyd.go_lower <> Rpost:143 var
R14022:14025 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14021:14021 VST.floyd.go_lower <> l:141 var
R14026:14030 VST.floyd.go_lower <> Qpost:142 var
R14006:14010 VST.floyd.go_lower <> Ppost:140 var
R13812:13814 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13796:13806 VST.floyd.local2ptree_denote <> local2ptree def
R13808:13811 VST.floyd.go_lower <> Qpre:138 var
R13815:13815 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13818:13819 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13822:13823 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13827:13828 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13831:13831 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13816:13817 VST.floyd.go_lower <> T1:144 var
R13820:13821 VST.floyd.go_lower <> T2:145 var
R13824:13826 Coq.Init.Datatypes <> nil constr
R13829:13830 VST.floyd.go_lower <> GV:146 var
R14076:14080 VST.floyd.canon <> PROPx def
R14088:14091 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14129:14132 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14092:14111 VST.floyd.go_lower <> msubst_extract_local def
R14133:14135 Coq.Init.Datatypes <> nil constr
R14146:14150 VST.floyd.canon <> PROPx def
R14198:14201 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14161:14180 VST.floyd.go_lower <> msubst_extract_local def
R14152:14158 VST.veric.mpred <> environ ind
R14076:14080 VST.floyd.canon <> PROPx def
R14088:14091 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14129:14132 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14092:14111 VST.floyd.go_lower <> msubst_extract_local def
R14133:14135 Coq.Init.Datatypes <> nil constr
R14146:14150 VST.floyd.canon <> PROPx def
R14198:14201 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14161:14180 VST.floyd.go_lower <> msubst_extract_local def
R14152:14158 VST.veric.mpred <> environ ind
R14227:14243 VST.floyd.canon <> PROPx_Permutation thm
R14227:14243 VST.floyd.canon <> PROPx_Permutation thm
R14257:14273 Coq.Sorting.Permutation <> Permutation_trans thm
R14285:14304 Coq.Sorting.Permutation <> Permutation_app_comm thm
R14257:14273 Coq.Sorting.Permutation <> Permutation_trans thm
R14285:14304 Coq.Sorting.Permutation <> Permutation_app_comm thm
R14318:14333 Coq.Sorting.Permutation <> Permutation_refl thm
R14318:14333 Coq.Sorting.Permutation <> Permutation_refl thm
R14354:14366 VST.floyd.canon <> insert_local' thm
R14373:14383 VST.floyd.canon <> insert_prop thm
R14354:14366 VST.floyd.canon <> insert_local' thm
R14354:14366 VST.floyd.canon <> insert_local' thm
R14354:14366 VST.floyd.canon <> insert_local' thm
R14373:14383 VST.floyd.canon <> insert_prop thm
R14373:14383 VST.floyd.canon <> insert_prop thm
R14373:14383 VST.floyd.canon <> insert_prop thm
R14394:14403 VST.msl.seplog <> andp_right meth
R14394:14403 VST.msl.seplog <> andp_right meth
R14443:14452 VST.msl.seplog <> andp_left1 meth
R14443:14452 VST.msl.seplog <> andp_left1 meth
R14464:14484 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R14464:14484 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R14538:14561 VST.floyd.go_lower <> localdef_local_facts_inv thm
R14538:14561 VST.floyd.go_lower <> localdef_local_facts_inv thm
prf 14582:14610 <> go_lower_localdef_canon_canon
R14617:14625 VST.veric.mpred <> compspecs class
binder 14613:14614 <> cs:147
binder 14637:14641 <> Delta:148
binder 14643:14646 <> Ppre:149
binder 14648:14651 <> Qpre:150
binder 14653:14656 <> Rpre:151
binder 14658:14662 <> Ppost:152
binder 14664:14668 <> Qpost:153
binder 14670:14674 <> Rpost:154
binder 14676:14677 <> T1:155
binder 14679:14680 <> T2:156
binder 14682:14683 <> GV:157
R14724:14729 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14883:14887 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R14794:14797 VST.msl.seplog <> ::logic:x_'&&'_x not
R14754:14757 VST.msl.seplog <> ::logic:x_'&&'_x not
R14730:14734 VST.veric.SeparationLogic <> local def
R14737:14746 VST.veric.SeparationLogic <> tc_environ def
R14748:14752 VST.floyd.go_lower <> Delta:148 var
R14758:14762 VST.floyd.canon <> PROPx def
R14770:14775 VST.floyd.canon <> LOCALx def
R14783:14786 VST.floyd.canon <> SEPx def
R14788:14791 VST.floyd.go_lower <> Rpre:151 var
R14777:14780 VST.floyd.go_lower <> Qpre:150 var
R14764:14767 VST.floyd.go_lower <> Ppre:149 var
R14798:14802 VST.floyd.canon <> PROPx def
R14859:14864 VST.floyd.canon <> LOCALx def
R14871:14874 VST.floyd.canon <> SEPx def
R14876:14880 VST.floyd.go_lower <> Rpost:154 var
R14866:14868 Coq.Init.Datatypes <> nil constr
R14810:14813 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14805:14809 VST.floyd.go_lower <> Ppost:152 var
R14814:14834 VST.floyd.go_lower <> msubst_extract_locals def
R14851:14855 VST.floyd.go_lower <> Qpost:153 var
R14848:14849 VST.floyd.go_lower <> GV:157 var
R14845:14846 VST.floyd.go_lower <> T2:156 var
R14842:14843 VST.floyd.go_lower <> T1:155 var
R14836:14840 VST.floyd.go_lower <> Delta:148 var
R14888:14892 VST.floyd.canon <> PROPx def
R14901:14906 VST.floyd.canon <> LOCALx def
R14915:14918 VST.floyd.canon <> SEPx def
R14920:14924 VST.floyd.go_lower <> Rpost:154 var
R14908:14912 VST.floyd.go_lower <> Qpost:153 var
R14894:14898 VST.floyd.go_lower <> Ppost:152 var
R14704:14706 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14688:14698 VST.floyd.local2ptree_denote <> local2ptree def
R14700:14703 VST.floyd.go_lower <> Qpre:150 var
R14707:14707 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14710:14711 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14714:14715 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14719:14720 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14723:14723 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14708:14709 VST.floyd.go_lower <> T1:155 var
R14712:14713 VST.floyd.go_lower <> T2:156 var
R14716:14718 Coq.Init.Datatypes <> nil constr
R14721:14722 VST.floyd.go_lower <> GV:157 var
R15014:15022 Coq.Lists.List <> app_nil_r thm
R15014:15022 Coq.Lists.List <> app_nil_r thm
R15014:15022 Coq.Lists.List <> app_nil_r thm
R15052:15064 VST.msl.seplog <> derives_trans meth
R15077:15114 VST.floyd.go_lower <> go_lower_localdef_one_step_canon_canon thm
R15052:15064 VST.msl.seplog <> derives_trans meth
R15077:15114 VST.floyd.go_lower <> go_lower_localdef_one_step_canon_canon thm
R15163:15172 VST.msl.seplog <> andp_right meth
R15163:15172 VST.msl.seplog <> andp_right meth
R15202:15214 VST.msl.seplog <> derives_trans meth
R15202:15214 VST.msl.seplog <> derives_trans meth
R15251:15259 Coq.Lists.List <> app_assoc thm
R15251:15259 Coq.Lists.List <> app_assoc thm
R15251:15259 Coq.Lists.List <> app_assoc thm
prf 15291:15321 <> go_lower_localdef_canon_tc_expr
R15328:15336 VST.veric.mpred <> compspecs class
binder 15324:15325 <> cs:158
binder 15348:15352 <> Delta:159
binder 15354:15357 <> Ppre:160
binder 15359:15362 <> Qpre:161
binder 15364:15367 <> Rpre:162
binder 15369:15369 <> e:163
binder 15371:15372 <> T1:164
binder 15374:15375 <> T2:165
binder 15377:15378 <> GV:166
R15419:15424 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15527:15531 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R15489:15492 VST.msl.seplog <> ::logic:x_'&&'_x not
R15449:15452 VST.msl.seplog <> ::logic:x_'&&'_x not
R15425:15429 VST.veric.SeparationLogic <> local def
R15432:15441 VST.veric.SeparationLogic <> tc_environ def
R15443:15447 VST.floyd.go_lower <> Delta:159 var
R15453:15457 VST.floyd.canon <> PROPx def
R15465:15470 VST.floyd.canon <> LOCALx def
R15478:15481 VST.floyd.canon <> SEPx def
R15483:15486 VST.floyd.go_lower <> Rpre:162 var
R15472:15475 VST.floyd.go_lower <> Qpre:161 var
R15459:15462 VST.floyd.go_lower <> Ppre:160 var
R15493:15494 VST.veric.lift LiftNotation :::'`('_x_')' not
R15526:15526 VST.veric.lift LiftNotation :::'`('_x_')' not
R15495:15508 VST.floyd.local2ptree_typecheck <> msubst_tc_expr def
R15525:15525 VST.floyd.go_lower <> e:163 var
R15522:15523 VST.floyd.go_lower <> GV:166 var
R15519:15520 VST.floyd.go_lower <> T2:165 var
R15516:15517 VST.floyd.go_lower <> T1:164 var
R15510:15514 VST.floyd.go_lower <> Delta:159 var
R15532:15538 VST.veric.SeparationLogic <> tc_expr def
R15546:15546 VST.floyd.go_lower <> e:163 var
R15540:15544 VST.floyd.go_lower <> Delta:159 var
R15399:15401 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15383:15393 VST.floyd.local2ptree_denote <> local2ptree def
R15395:15398 VST.floyd.go_lower <> Qpre:161 var
R15402:15402 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15405:15406 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15409:15410 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15414:15415 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15418:15418 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15403:15404 VST.floyd.go_lower <> T1:164 var
R15407:15408 VST.floyd.go_lower <> T2:165 var
R15411:15413 Coq.Init.Datatypes <> nil constr
R15416:15417 VST.floyd.go_lower <> GV:166 var
R15577:15597 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R15577:15597 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R15577:15597 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R15623:15642 VST.floyd.local2ptree_typecheck <> msubst_tc_expr_sound thm
R15623:15642 VST.floyd.local2ptree_typecheck <> msubst_tc_expr_sound thm
prf 15657:15689 <> go_lower_localdef_canon_tc_lvalue
R15696:15704 VST.veric.mpred <> compspecs class
binder 15692:15693 <> cs:167
binder 15716:15720 <> Delta:168
binder 15722:15725 <> Ppre:169
binder 15727:15730 <> Qpre:170
binder 15732:15735 <> Rpre:171
binder 15737:15737 <> e:172
binder 15739:15740 <> T1:173
binder 15742:15743 <> T2:174
binder 15745:15746 <> GV:175
R15787:15792 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15897:15901 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R15857:15860 VST.msl.seplog <> ::logic:x_'&&'_x not
R15817:15820 VST.msl.seplog <> ::logic:x_'&&'_x not
R15793:15797 VST.veric.SeparationLogic <> local def
R15800:15809 VST.veric.SeparationLogic <> tc_environ def
R15811:15815 VST.floyd.go_lower <> Delta:168 var
R15821:15825 VST.floyd.canon <> PROPx def
R15833:15838 VST.floyd.canon <> LOCALx def
R15846:15849 VST.floyd.canon <> SEPx def
R15851:15854 VST.floyd.go_lower <> Rpre:171 var
R15840:15843 VST.floyd.go_lower <> Qpre:170 var
R15827:15830 VST.floyd.go_lower <> Ppre:169 var
R15861:15862 VST.veric.lift LiftNotation :::'`('_x_')' not
R15896:15896 VST.veric.lift LiftNotation :::'`('_x_')' not
R15863:15878 VST.floyd.local2ptree_typecheck <> msubst_tc_lvalue def
R15895:15895 VST.floyd.go_lower <> e:172 var
R15892:15893 VST.floyd.go_lower <> GV:175 var
R15889:15890 VST.floyd.go_lower <> T2:174 var
R15886:15887 VST.floyd.go_lower <> T1:173 var
R15880:15884 VST.floyd.go_lower <> Delta:168 var
R15902:15910 VST.veric.SeparationLogic <> tc_lvalue def
R15918:15918 VST.floyd.go_lower <> e:172 var
R15912:15916 VST.floyd.go_lower <> Delta:168 var
R15767:15769 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15751:15761 VST.floyd.local2ptree_denote <> local2ptree def
R15763:15766 VST.floyd.go_lower <> Qpre:170 var
R15770:15770 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15773:15774 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15777:15778 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15782:15783 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15786:15786 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15771:15772 VST.floyd.go_lower <> T1:173 var
R15775:15776 VST.floyd.go_lower <> T2:174 var
R15779:15781 Coq.Init.Datatypes <> nil constr
R15784:15785 VST.floyd.go_lower <> GV:175 var
R15949:15969 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R15949:15969 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R15949:15969 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R15995:16016 VST.floyd.local2ptree_typecheck <> msubst_tc_lvalue_sound thm
R15995:16016 VST.floyd.local2ptree_typecheck <> msubst_tc_lvalue_sound thm
prf 16037:16065 <> go_lower_localdef_canon_tc_LR
R16072:16080 VST.veric.mpred <> compspecs class
binder 16068:16069 <> cs:176
binder 16092:16096 <> Delta:177
binder 16098:16101 <> Ppre:178
binder 16103:16106 <> Qpre:179
binder 16108:16111 <> Rpre:180
binder 16113:16113 <> e:181
binder 16115:16116 <> lr:182
binder 16118:16119 <> T1:183
binder 16121:16122 <> T2:184
binder 16124:16125 <> GV:185
R16166:16171 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16275:16279 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R16236:16239 VST.msl.seplog <> ::logic:x_'&&'_x not
R16196:16199 VST.msl.seplog <> ::logic:x_'&&'_x not
R16172:16176 VST.veric.SeparationLogic <> local def
R16179:16188 VST.veric.SeparationLogic <> tc_environ def
R16190:16194 VST.floyd.go_lower <> Delta:177 var
R16200:16204 VST.floyd.canon <> PROPx def
R16212:16217 VST.floyd.canon <> LOCALx def
R16225:16228 VST.floyd.canon <> SEPx def
R16230:16233 VST.floyd.go_lower <> Rpre:180 var
R16219:16222 VST.floyd.go_lower <> Qpre:179 var
R16206:16209 VST.floyd.go_lower <> Ppre:178 var
R16240:16241 VST.veric.lift LiftNotation :::'`('_x_')' not
R16274:16274 VST.veric.lift LiftNotation :::'`('_x_')' not
R16242:16253 VST.floyd.local2ptree_typecheck <> msubst_tc_LR def
R16272:16273 VST.floyd.go_lower <> lr:182 var
R16270:16270 VST.floyd.go_lower <> e:181 var
R16267:16268 VST.floyd.go_lower <> GV:185 var
R16264:16265 VST.floyd.go_lower <> T2:184 var
R16261:16262 VST.floyd.go_lower <> T1:183 var
R16255:16259 VST.floyd.go_lower <> Delta:177 var
R16280:16284 VST.floyd.typecheck_lemmas <> tc_LR def
R16294:16295 VST.floyd.go_lower <> lr:182 var
R16292:16292 VST.floyd.go_lower <> e:181 var
R16286:16290 VST.floyd.go_lower <> Delta:177 var
R16146:16148 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16130:16140 VST.floyd.local2ptree_denote <> local2ptree def
R16142:16145 VST.floyd.go_lower <> Qpre:179 var
R16149:16149 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16152:16153 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16156:16157 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16161:16162 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16165:16165 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16150:16151 VST.floyd.go_lower <> T1:183 var
R16154:16155 VST.floyd.go_lower <> T2:184 var
R16158:16160 Coq.Init.Datatypes <> nil constr
R16163:16164 VST.floyd.go_lower <> GV:185 var
R16326:16346 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R16326:16346 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R16326:16346 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R16372:16389 VST.floyd.local2ptree_typecheck <> msubst_tc_LR_sound thm
R16372:16389 VST.floyd.local2ptree_typecheck <> msubst_tc_LR_sound thm
prf 16410:16442 <> go_lower_localdef_canon_tc_efield
R16449:16457 VST.veric.mpred <> compspecs class
binder 16445:16446 <> cs:186
binder 16469:16473 <> Delta:187
binder 16475:16478 <> Ppre:188
binder 16480:16483 <> Qpre:189
binder 16485:16488 <> Rpre:190
binder 16490:16492 <> efs:191
binder 16494:16495 <> T1:192
binder 16497:16498 <> T2:193
binder 16500:16501 <> GV:194
R16542:16547 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16654:16658 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R16612:16615 VST.msl.seplog <> ::logic:x_'&&'_x not
R16572:16575 VST.msl.seplog <> ::logic:x_'&&'_x not
R16548:16552 VST.veric.SeparationLogic <> local def
R16555:16564 VST.veric.SeparationLogic <> tc_environ def
R16566:16570 VST.floyd.go_lower <> Delta:187 var
R16576:16580 VST.floyd.canon <> PROPx def
R16588:16593 VST.floyd.canon <> LOCALx def
R16601:16604 VST.floyd.canon <> SEPx def
R16606:16609 VST.floyd.go_lower <> Rpre:190 var
R16595:16598 VST.floyd.go_lower <> Qpre:189 var
R16582:16585 VST.floyd.go_lower <> Ppre:188 var
R16616:16617 VST.veric.lift LiftNotation :::'`('_x_')' not
R16653:16653 VST.veric.lift LiftNotation :::'`('_x_')' not
R16618:16633 VST.floyd.local2ptree_typecheck <> msubst_tc_efield def
R16650:16652 VST.floyd.go_lower <> efs:191 var
R16647:16648 VST.floyd.go_lower <> GV:194 var
R16644:16645 VST.floyd.go_lower <> T2:193 var
R16641:16642 VST.floyd.go_lower <> T1:192 var
R16635:16639 VST.floyd.go_lower <> Delta:187 var
R16659:16667 VST.floyd.efield_lemmas <> tc_efield def
R16675:16677 VST.floyd.go_lower <> efs:191 var
R16669:16673 VST.floyd.go_lower <> Delta:187 var
R16522:16524 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16506:16516 VST.floyd.local2ptree_denote <> local2ptree def
R16518:16521 VST.floyd.go_lower <> Qpre:189 var
R16525:16525 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16528:16529 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16532:16533 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16537:16538 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16541:16541 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16526:16527 VST.floyd.go_lower <> T1:192 var
R16530:16531 VST.floyd.go_lower <> T2:193 var
R16534:16536 Coq.Init.Datatypes <> nil constr
R16539:16540 VST.floyd.go_lower <> GV:194 var
R16708:16728 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R16708:16728 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R16708:16728 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R16754:16775 VST.floyd.local2ptree_typecheck <> msubst_tc_efield_sound thm
R16754:16775 VST.floyd.local2ptree_typecheck <> msubst_tc_efield_sound thm
prf 16796:16830 <> go_lower_localdef_canon_tc_exprlist
R16837:16845 VST.veric.mpred <> compspecs class
binder 16833:16834 <> cs:195
binder 16857:16861 <> Delta:196
binder 16863:16866 <> Ppre:197
binder 16868:16871 <> Qpre:198
binder 16873:16876 <> Rpre:199
binder 16878:16879 <> ts:200
binder 16881:16882 <> es:201
binder 16884:16885 <> T1:202
binder 16887:16888 <> T2:203
binder 16890:16891 <> GV:204
R16932:16937 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17048:17052 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R17002:17005 VST.msl.seplog <> ::logic:x_'&&'_x not
R16962:16965 VST.msl.seplog <> ::logic:x_'&&'_x not
R16938:16942 VST.veric.SeparationLogic <> local def
R16945:16954 VST.veric.SeparationLogic <> tc_environ def
R16956:16960 VST.floyd.go_lower <> Delta:196 var
R16966:16970 VST.floyd.canon <> PROPx def
R16978:16983 VST.floyd.canon <> LOCALx def
R16991:16994 VST.floyd.canon <> SEPx def
R16996:16999 VST.floyd.go_lower <> Rpre:199 var
R16985:16988 VST.floyd.go_lower <> Qpre:198 var
R16972:16975 VST.floyd.go_lower <> Ppre:197 var
R17006:17007 VST.veric.lift LiftNotation :::'`('_x_')' not
R17047:17047 VST.veric.lift LiftNotation :::'`('_x_')' not
R17008:17025 VST.floyd.local2ptree_typecheck <> msubst_tc_exprlist def
R17045:17046 VST.floyd.go_lower <> es:201 var
R17042:17043 VST.floyd.go_lower <> ts:200 var
R17039:17040 VST.floyd.go_lower <> GV:204 var
R17036:17037 VST.floyd.go_lower <> T2:203 var
R17033:17034 VST.floyd.go_lower <> T1:202 var
R17027:17031 VST.floyd.go_lower <> Delta:196 var
R17053:17063 VST.veric.SeparationLogic <> tc_exprlist def
R17074:17075 VST.floyd.go_lower <> es:201 var
R17071:17072 VST.floyd.go_lower <> ts:200 var
R17065:17069 VST.floyd.go_lower <> Delta:196 var
R16912:16914 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16896:16906 VST.floyd.local2ptree_denote <> local2ptree def
R16908:16911 VST.floyd.go_lower <> Qpre:198 var
R16915:16915 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16918:16919 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16922:16923 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16927:16928 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16931:16931 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16916:16917 VST.floyd.go_lower <> T1:202 var
R16920:16921 VST.floyd.go_lower <> T2:203 var
R16924:16926 Coq.Init.Datatypes <> nil constr
R16929:16930 VST.floyd.go_lower <> GV:204 var
R17106:17126 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R17106:17126 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R17106:17126 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R17152:17175 VST.floyd.local2ptree_typecheck <> msubst_tc_exprlist_sound thm
R17152:17175 VST.floyd.local2ptree_typecheck <> msubst_tc_exprlist_sound thm
prf 17196:17229 <> go_lower_localdef_canon_tc_expropt
R17236:17244 VST.veric.mpred <> compspecs class
binder 17232:17233 <> cs:205
binder 17256:17260 <> Delta:206
binder 17262:17265 <> Ppre:207
binder 17267:17270 <> Qpre:208
binder 17272:17275 <> Rpre:209
binder 17277:17277 <> e:210
binder 17279:17279 <> t:211
binder 17281:17282 <> T1:212
binder 17284:17285 <> T2:213
binder 17287:17288 <> GV:214
R17329:17334 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17442:17446 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R17399:17402 VST.msl.seplog <> ::logic:x_'&&'_x not
R17359:17362 VST.msl.seplog <> ::logic:x_'&&'_x not
R17335:17339 VST.veric.SeparationLogic <> local def
R17342:17351 VST.veric.SeparationLogic <> tc_environ def
R17353:17357 VST.floyd.go_lower <> Delta:206 var
R17363:17367 VST.floyd.canon <> PROPx def
R17375:17380 VST.floyd.canon <> LOCALx def
R17388:17391 VST.floyd.canon <> SEPx def
R17393:17396 VST.floyd.go_lower <> Rpre:209 var
R17382:17385 VST.floyd.go_lower <> Qpre:208 var
R17369:17372 VST.floyd.go_lower <> Ppre:207 var
R17403:17404 VST.veric.lift LiftNotation :::'`('_x_')' not
R17441:17441 VST.veric.lift LiftNotation :::'`('_x_')' not
R17405:17421 VST.floyd.local2ptree_typecheck <> msubst_tc_expropt def
R17440:17440 VST.floyd.go_lower <> t:211 var
R17438:17438 VST.floyd.go_lower <> e:210 var
R17435:17436 VST.floyd.go_lower <> GV:214 var
R17432:17433 VST.floyd.go_lower <> T2:213 var
R17429:17430 VST.floyd.go_lower <> T1:212 var
R17423:17427 VST.floyd.go_lower <> Delta:206 var
R17447:17456 VST.veric.SeparationLogic <> tc_expropt def
R17466:17466 VST.floyd.go_lower <> t:211 var
R17464:17464 VST.floyd.go_lower <> e:210 var
R17458:17462 VST.floyd.go_lower <> Delta:206 var
R17309:17311 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17293:17303 VST.floyd.local2ptree_denote <> local2ptree def
R17305:17308 VST.floyd.go_lower <> Qpre:208 var
R17312:17312 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17315:17316 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17319:17320 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17324:17325 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17328:17328 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17313:17314 VST.floyd.go_lower <> T1:212 var
R17317:17318 VST.floyd.go_lower <> T2:213 var
R17321:17323 Coq.Init.Datatypes <> nil constr
R17326:17327 VST.floyd.go_lower <> GV:214 var
R17497:17517 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R17497:17517 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R17497:17517 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R17543:17565 VST.floyd.local2ptree_typecheck <> msubst_tc_expropt_sound thm
R17543:17565 VST.floyd.local2ptree_typecheck <> msubst_tc_expropt_sound thm
prf 17586:17620 <> go_lower_localdef_canon_eval_lvalue
R17627:17635 VST.veric.mpred <> compspecs class
binder 17623:17624 <> cs:215
binder 17647:17651 <> Delta:216
binder 17653:17656 <> Ppre:217
binder 17658:17661 <> Qpre:218
binder 17663:17666 <> Rpre:219
binder 17668:17668 <> e:220
binder 17670:17671 <> T1:221
binder 17673:17674 <> T2:222
binder 17676:17677 <> GV:223
binder 17679:17679 <> u:224
binder 17681:17681 <> v:225
R17722:17727 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17772:17777 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17859:17863 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R17842:17845 VST.msl.seplog <> ::logic:x_'&&'_x not
R17802:17805 VST.msl.seplog <> ::logic:x_'&&'_x not
R17778:17782 VST.veric.SeparationLogic <> local def
R17785:17794 VST.veric.SeparationLogic <> tc_environ def
R17796:17800 VST.floyd.go_lower <> Delta:216 var
R17806:17810 VST.floyd.canon <> PROPx def
R17818:17823 VST.floyd.canon <> LOCALx def
R17831:17834 VST.floyd.canon <> SEPx def
R17836:17839 VST.floyd.go_lower <> Rpre:219 var
R17825:17828 VST.floyd.go_lower <> Qpre:218 var
R17812:17815 VST.floyd.go_lower <> Ppre:217 var
R17846:17847 VST.veric.lift LiftNotation :::'`('_x_')' not
R17858:17858 VST.veric.lift LiftNotation :::'`('_x_')' not
R17848:17851 VST.msl.seplog <> ::logic:'!!'_x not
R17857:17857 VST.msl.seplog <> ::logic:'!!'_x not
R17853:17855 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17852:17852 VST.floyd.go_lower <> u:224 var
R17856:17856 VST.floyd.go_lower <> v:225 var
R17864:17868 VST.veric.SeparationLogic <> local def
R17871:17872 VST.veric.lift LiftNotation :::'`('_x_')' not
R17877:17893 VST.veric.lift LiftNotation :::'`('_x_')' not
R17873:17874 Coq.Init.Logic <> eq ind
R17876:17876 VST.floyd.go_lower <> v:225 var
R17880:17890 VST.veric.expr <> eval_lvalue def
R17892:17892 VST.floyd.go_lower <> e:220 var
R17763:17765 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17728:17745 VST.floyd.local2ptree_eval <> msubst_eval_lvalue def
R17762:17762 VST.floyd.go_lower <> e:220 var
R17759:17760 VST.floyd.go_lower <> GV:223 var
R17756:17757 VST.floyd.go_lower <> T2:222 var
R17753:17754 VST.floyd.go_lower <> T1:221 var
R17747:17751 VST.floyd.go_lower <> Delta:216 var
R17766:17769 Coq.Init.Datatypes <> Some constr
R17771:17771 VST.floyd.go_lower <> u:224 var
R17702:17704 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17686:17696 VST.floyd.local2ptree_denote <> local2ptree def
R17698:17701 VST.floyd.go_lower <> Qpre:218 var
R17705:17705 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17708:17709 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17712:17713 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17717:17718 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17721:17721 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17706:17707 VST.floyd.go_lower <> T1:221 var
R17710:17711 VST.floyd.go_lower <> T2:222 var
R17714:17716 Coq.Init.Datatypes <> nil constr
R17719:17720 VST.floyd.go_lower <> GV:223 var
R17925:17945 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R17925:17945 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R17925:17945 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R17984:18004 VST.floyd.local2ptree_eval <> msubst_eval_lvalue_eq thm
R17984:18004 VST.floyd.local2ptree_eval <> msubst_eval_lvalue_eq thm
prf 18023:18055 <> go_lower_localdef_canon_eval_expr
R18062:18070 VST.veric.mpred <> compspecs class
binder 18058:18059 <> cs:226
binder 18082:18086 <> Delta:227
binder 18088:18091 <> Ppre:228
binder 18093:18096 <> Qpre:229
binder 18098:18101 <> Rpre:230
binder 18103:18103 <> e:231
binder 18105:18106 <> T1:232
binder 18108:18109 <> T2:233
binder 18111:18112 <> GV:234
binder 18114:18114 <> u:235
binder 18116:18116 <> v:236
R18157:18162 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18205:18210 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18292:18296 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R18275:18278 VST.msl.seplog <> ::logic:x_'&&'_x not
R18235:18238 VST.msl.seplog <> ::logic:x_'&&'_x not
R18211:18215 VST.veric.SeparationLogic <> local def
R18218:18227 VST.veric.SeparationLogic <> tc_environ def
R18229:18233 VST.floyd.go_lower <> Delta:227 var
R18239:18243 VST.floyd.canon <> PROPx def
R18251:18256 VST.floyd.canon <> LOCALx def
R18264:18267 VST.floyd.canon <> SEPx def
R18269:18272 VST.floyd.go_lower <> Rpre:230 var
R18258:18261 VST.floyd.go_lower <> Qpre:229 var
R18245:18248 VST.floyd.go_lower <> Ppre:228 var
R18279:18280 VST.veric.lift LiftNotation :::'`('_x_')' not
R18291:18291 VST.veric.lift LiftNotation :::'`('_x_')' not
R18281:18284 VST.msl.seplog <> ::logic:'!!'_x not
R18290:18290 VST.msl.seplog <> ::logic:'!!'_x not
R18286:18288 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18285:18285 VST.floyd.go_lower <> u:235 var
R18289:18289 VST.floyd.go_lower <> v:236 var
R18297:18301 VST.veric.SeparationLogic <> local def
R18304:18305 VST.veric.lift LiftNotation :::'`('_x_')' not
R18310:18324 VST.veric.lift LiftNotation :::'`('_x_')' not
R18306:18307 Coq.Init.Logic <> eq ind
R18309:18309 VST.floyd.go_lower <> v:236 var
R18313:18321 VST.veric.expr <> eval_expr def
R18323:18323 VST.floyd.go_lower <> e:231 var
R18196:18198 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18163:18178 VST.floyd.local2ptree_eval <> msubst_eval_expr def
R18195:18195 VST.floyd.go_lower <> e:231 var
R18192:18193 VST.floyd.go_lower <> GV:234 var
R18189:18190 VST.floyd.go_lower <> T2:233 var
R18186:18187 VST.floyd.go_lower <> T1:232 var
R18180:18184 VST.floyd.go_lower <> Delta:227 var
R18199:18202 Coq.Init.Datatypes <> Some constr
R18204:18204 VST.floyd.go_lower <> u:235 var
R18137:18139 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18121:18131 VST.floyd.local2ptree_denote <> local2ptree def
R18133:18136 VST.floyd.go_lower <> Qpre:229 var
R18140:18140 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18143:18144 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18147:18148 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18152:18153 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18156:18156 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18141:18142 VST.floyd.go_lower <> T1:232 var
R18145:18146 VST.floyd.go_lower <> T2:233 var
R18149:18151 Coq.Init.Datatypes <> nil constr
R18154:18155 VST.floyd.go_lower <> GV:234 var
R18356:18376 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R18356:18376 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R18356:18376 VST.floyd.local2ptree_denote <> local2ptree_soundness thm
R18415:18433 VST.floyd.local2ptree_eval <> msubst_eval_expr_eq thm
R18415:18433 VST.floyd.local2ptree_eval <> msubst_eval_expr_eq thm
ind 18456:18472 <> clean_LOCAL_right
constr 18617:18642 <> clean_LOCAL_right_sep_lift
constr 18699:18726 <> clean_LOCAL_right_local_lift
constr 18794:18815 <> clean_LOCAL_right_prop
constr 18877:18903 <> clean_LOCAL_right_tc_lvalue
constr 19033:19057 <> clean_LOCAL_right_tc_expr
constr 19183:19205 <> clean_LOCAL_right_tc_LR
constr 19336:19362 <> clean_LOCAL_right_tc_efield
constr 19498:19526 <> clean_LOCAL_right_tc_exprlist
constr 19672:19699 <> clean_LOCAL_right_tc_expropt
constr 19811:19834 <> clean_LOCAL_right_canon'
constr 19986:20014 <> clean_LOCAL_right_eval_lvalue
constr 20161:20187 <> clean_LOCAL_right_eval_expr
constr 20330:20351 <> clean_LOCAL_right_andp
constr 20515:20535 <> clean_LOCAL_right_EX'
R18479:18487 VST.veric.mpred <> compspecs class
binder 18475:18476 <> cs:237
R18498:18506 VST.veric.seplog <> tycontext ind
binder 18491:18495 <> Delta:238
R18514:18520 compcert.lib.Maps PTree t def
R18522:18524 compcert.common.Values <> val ind
binder 18510:18511 <> T1:239
R18532:18538 compcert.lib.Maps PTree t def
R18545:18547 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R18541:18544 compcert.cfrontend.Ctypes <> type ind
R18548:18550 compcert.common.Values <> val ind
binder 18528:18529 <> T2:240
R18559:18564 Coq.Init.Datatypes <> option ind
R18566:18572 VST.veric.SeparationLogic <> globals def
binder 18555:18556 <> GV:241
R18576:18576 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18593:18597 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18603:18606 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18598:18602 VST.veric.mpred <> mpred def
R18584:18587 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18588:18592 VST.veric.mpred <> mpred def
R18577:18583 VST.veric.mpred <> environ ind
binder 18652:18652 <> P:244
R18655:18671 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R18694:18694 VST.floyd.go_lower <> P:244 var
R18689:18689 VST.veric.lift LiftNotation :::'`'_x not
R18690:18690 VST.floyd.go_lower <> P:244 var
R18685:18686 VST.floyd.go_lower <> GV:241 var
R18682:18683 VST.floyd.go_lower <> T2:240 var
R18679:18680 VST.floyd.go_lower <> T1:239 var
R18673:18677 VST.floyd.go_lower <> Delta:238 var
binder 18736:18736 <> P:245
R18739:18755 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R18786:18788 VST.msl.seplog <> ::logic:'!!'_x not
R18789:18789 VST.floyd.go_lower <> P:245 var
R18773:18777 VST.veric.SeparationLogic <> local def
R18780:18780 VST.veric.lift LiftNotation :::'`'_x not
R18781:18781 VST.floyd.go_lower <> P:245 var
R18769:18770 VST.floyd.go_lower <> GV:241 var
R18766:18767 VST.floyd.go_lower <> T2:240 var
R18763:18764 VST.floyd.go_lower <> T1:239 var
R18757:18761 VST.floyd.go_lower <> Delta:238 var
binder 18825:18825 <> P:246
R18828:18844 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R18869:18871 VST.msl.seplog <> ::logic:'!!'_x not
R18872:18872 VST.floyd.go_lower <> P:246 var
R18862:18864 VST.msl.seplog <> ::logic:'!!'_x not
R18865:18865 VST.floyd.go_lower <> P:246 var
R18858:18859 VST.floyd.go_lower <> GV:241 var
R18855:18856 VST.floyd.go_lower <> T2:240 var
R18852:18853 VST.floyd.go_lower <> T1:239 var
R18846:18850 VST.floyd.go_lower <> Delta:238 var
binder 18913:18913 <> e:247
R18916:18932 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R18996:19011 VST.floyd.local2ptree_typecheck <> msubst_tc_lvalue def
R19028:19028 VST.floyd.go_lower <> e:247 var
R19025:19026 VST.floyd.go_lower <> GV:241 var
R19022:19023 VST.floyd.go_lower <> T2:240 var
R19019:19020 VST.floyd.go_lower <> T1:239 var
R19013:19017 VST.floyd.go_lower <> Delta:238 var
R18950:18965 VST.veric.SeparationLogic <> denote_tc_assert def
R18968:18983 VST.veric.expr <> typecheck_lvalue def
R18991:18991 VST.floyd.go_lower <> e:247 var
R18985:18989 VST.floyd.go_lower <> Delta:238 var
R18946:18947 VST.floyd.go_lower <> GV:241 var
R18943:18944 VST.floyd.go_lower <> T2:240 var
R18940:18941 VST.floyd.go_lower <> T1:239 var
R18934:18938 VST.floyd.go_lower <> Delta:238 var
binder 19067:19067 <> e:248
R19070:19086 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R19148:19161 VST.floyd.local2ptree_typecheck <> msubst_tc_expr def
R19178:19178 VST.floyd.go_lower <> e:248 var
R19175:19176 VST.floyd.go_lower <> GV:241 var
R19172:19173 VST.floyd.go_lower <> T2:240 var
R19169:19170 VST.floyd.go_lower <> T1:239 var
R19163:19167 VST.floyd.go_lower <> Delta:238 var
R19104:19119 VST.veric.SeparationLogic <> denote_tc_assert def
R19122:19135 VST.veric.expr <> typecheck_expr def
R19143:19143 VST.floyd.go_lower <> e:248 var
R19137:19141 VST.floyd.go_lower <> Delta:238 var
R19100:19101 VST.floyd.go_lower <> GV:241 var
R19097:19098 VST.floyd.go_lower <> T2:240 var
R19094:19095 VST.floyd.go_lower <> T1:239 var
R19088:19092 VST.floyd.go_lower <> Delta:238 var
binder 19215:19215 <> e:249
binder 19217:19218 <> lr:250
R19221:19237 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R19300:19311 VST.floyd.local2ptree_typecheck <> msubst_tc_LR def
R19330:19331 VST.floyd.go_lower <> lr:250 var
R19328:19328 VST.floyd.go_lower <> e:249 var
R19325:19326 VST.floyd.go_lower <> GV:241 var
R19322:19323 VST.floyd.go_lower <> T2:240 var
R19319:19320 VST.floyd.go_lower <> T1:239 var
R19313:19317 VST.floyd.go_lower <> Delta:238 var
R19255:19270 VST.veric.SeparationLogic <> denote_tc_assert def
R19273:19284 VST.floyd.typecheck_lemmas <> typecheck_LR def
R19294:19295 VST.floyd.go_lower <> lr:250 var
R19292:19292 VST.floyd.go_lower <> e:249 var
R19286:19290 VST.floyd.go_lower <> Delta:238 var
R19251:19252 VST.floyd.go_lower <> GV:241 var
R19248:19249 VST.floyd.go_lower <> T2:240 var
R19245:19246 VST.floyd.go_lower <> T1:239 var
R19239:19243 VST.floyd.go_lower <> Delta:238 var
binder 19372:19374 <> efs:251
R19377:19393 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R19459:19474 VST.floyd.local2ptree_typecheck <> msubst_tc_efield def
R19491:19493 VST.floyd.go_lower <> efs:251 var
R19488:19489 VST.floyd.go_lower <> GV:241 var
R19485:19486 VST.floyd.go_lower <> T2:240 var
R19482:19483 VST.floyd.go_lower <> T1:239 var
R19476:19480 VST.floyd.go_lower <> Delta:238 var
R19411:19426 VST.veric.SeparationLogic <> denote_tc_assert def
R19429:19444 VST.floyd.efield_lemmas <> typecheck_efield def
R19452:19454 VST.floyd.go_lower <> efs:251 var
R19446:19450 VST.floyd.go_lower <> Delta:238 var
R19407:19408 VST.floyd.go_lower <> GV:241 var
R19404:19405 VST.floyd.go_lower <> T2:240 var
R19401:19402 VST.floyd.go_lower <> T1:239 var
R19395:19399 VST.floyd.go_lower <> Delta:238 var
binder 19536:19537 <> ts:252
binder 19539:19540 <> es:253
R19543:19559 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R19629:19646 VST.floyd.local2ptree_typecheck <> msubst_tc_exprlist def
R19666:19667 VST.floyd.go_lower <> es:253 var
R19663:19664 VST.floyd.go_lower <> ts:252 var
R19660:19661 VST.floyd.go_lower <> GV:241 var
R19657:19658 VST.floyd.go_lower <> T2:240 var
R19654:19655 VST.floyd.go_lower <> T1:239 var
R19648:19652 VST.floyd.go_lower <> Delta:238 var
R19577:19592 VST.veric.SeparationLogic <> denote_tc_assert def
R19595:19612 VST.veric.expr <> typecheck_exprlist def
R19623:19624 VST.floyd.go_lower <> es:253 var
R19620:19621 VST.floyd.go_lower <> ts:252 var
R19614:19618 VST.floyd.go_lower <> Delta:238 var
R19573:19574 VST.floyd.go_lower <> GV:241 var
R19570:19571 VST.floyd.go_lower <> T2:240 var
R19567:19568 VST.floyd.go_lower <> T1:239 var
R19561:19565 VST.floyd.go_lower <> Delta:238 var
binder 19709:19709 <> e:254
binder 19711:19711 <> t:255
R19714:19730 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R19771:19787 VST.floyd.local2ptree_typecheck <> msubst_tc_expropt def
R19806:19806 VST.floyd.go_lower <> t:255 var
R19804:19804 VST.floyd.go_lower <> e:254 var
R19801:19802 VST.floyd.go_lower <> GV:241 var
R19798:19799 VST.floyd.go_lower <> T2:240 var
R19795:19796 VST.floyd.go_lower <> T1:239 var
R19789:19793 VST.floyd.go_lower <> Delta:238 var
R19748:19757 VST.veric.SeparationLogic <> tc_expropt def
R19767:19767 VST.floyd.go_lower <> t:255 var
R19765:19765 VST.floyd.go_lower <> e:254 var
R19759:19763 VST.floyd.go_lower <> Delta:238 var
R19744:19745 VST.floyd.go_lower <> GV:241 var
R19741:19742 VST.floyd.go_lower <> T2:240 var
R19738:19739 VST.floyd.go_lower <> T1:239 var
R19732:19736 VST.floyd.go_lower <> Delta:238 var
binder 19844:19844 <> P:256
binder 19846:19846 <> Q:257
binder 19848:19848 <> R:258
R19851:19867 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R19915:19933 VST.floyd.client_lemmas <> fold_right_PROP_SEP def
R19981:19981 VST.floyd.go_lower <> R:258 var
R19937:19940 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19936:19936 VST.floyd.go_lower <> P:256 var
R19941:19961 VST.floyd.go_lower <> msubst_extract_locals def
R19978:19978 VST.floyd.go_lower <> Q:257 var
R19975:19976 VST.floyd.go_lower <> GV:241 var
R19972:19973 VST.floyd.go_lower <> T2:240 var
R19969:19970 VST.floyd.go_lower <> T1:239 var
R19963:19967 VST.floyd.go_lower <> Delta:238 var
R19885:19889 VST.floyd.canon <> PROPx def
R19894:19899 VST.floyd.canon <> LOCALx def
R19904:19907 VST.floyd.canon <> SEPx def
R19909:19909 VST.floyd.go_lower <> R:258 var
R19901:19901 VST.floyd.go_lower <> Q:257 var
R19891:19891 VST.floyd.go_lower <> P:256 var
R19881:19882 VST.floyd.go_lower <> GV:241 var
R19878:19879 VST.floyd.go_lower <> T2:240 var
R19875:19876 VST.floyd.go_lower <> T1:239 var
R19869:19873 VST.floyd.go_lower <> Delta:238 var
binder 20024:20024 <> e:259
binder 20026:20026 <> u:260
binder 20028:20028 <> v:261
R20075:20078 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20079:20095 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R20147:20150 VST.msl.seplog <> ::logic:'!!'_x not
R20156:20156 VST.msl.seplog <> ::logic:'!!'_x not
R20152:20154 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20151:20151 VST.floyd.go_lower <> u:260 var
R20155:20155 VST.floyd.go_lower <> v:261 var
R20113:20117 VST.veric.SeparationLogic <> local def
R20120:20121 VST.veric.lift LiftNotation :::'`('_x_')' not
R20126:20142 VST.veric.lift LiftNotation :::'`('_x_')' not
R20122:20123 Coq.Init.Logic <> eq ind
R20125:20125 VST.floyd.go_lower <> v:261 var
R20129:20139 VST.veric.expr <> eval_lvalue def
R20141:20141 VST.floyd.go_lower <> e:259 var
R20109:20110 VST.floyd.go_lower <> GV:241 var
R20106:20107 VST.floyd.go_lower <> T2:240 var
R20103:20104 VST.floyd.go_lower <> T1:239 var
R20097:20101 VST.floyd.go_lower <> Delta:238 var
R20066:20068 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20031:20048 VST.floyd.local2ptree_eval <> msubst_eval_lvalue def
R20065:20065 VST.floyd.go_lower <> e:259 var
R20062:20063 VST.floyd.go_lower <> GV:241 var
R20059:20060 VST.floyd.go_lower <> T2:240 var
R20056:20057 VST.floyd.go_lower <> T1:239 var
R20050:20054 VST.floyd.go_lower <> Delta:238 var
R20069:20072 Coq.Init.Datatypes <> Some constr
R20074:20074 VST.floyd.go_lower <> u:260 var
binder 20197:20197 <> e:262
binder 20199:20199 <> u:263
binder 20201:20201 <> v:264
R20246:20249 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20250:20266 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R20316:20319 VST.msl.seplog <> ::logic:'!!'_x not
R20325:20325 VST.msl.seplog <> ::logic:'!!'_x not
R20321:20323 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20320:20320 VST.floyd.go_lower <> u:263 var
R20324:20324 VST.floyd.go_lower <> v:264 var
R20284:20288 VST.veric.SeparationLogic <> local def
R20291:20292 VST.veric.lift LiftNotation :::'`('_x_')' not
R20297:20311 VST.veric.lift LiftNotation :::'`('_x_')' not
R20293:20294 Coq.Init.Logic <> eq ind
R20296:20296 VST.floyd.go_lower <> v:264 var
R20300:20308 VST.veric.expr <> eval_expr def
R20310:20310 VST.floyd.go_lower <> e:262 var
R20280:20281 VST.floyd.go_lower <> GV:241 var
R20277:20278 VST.floyd.go_lower <> T2:240 var
R20274:20275 VST.floyd.go_lower <> T1:239 var
R20268:20272 VST.floyd.go_lower <> Delta:238 var
R20237:20239 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20204:20219 VST.floyd.local2ptree_eval <> msubst_eval_expr def
R20236:20236 VST.floyd.go_lower <> e:262 var
R20233:20234 VST.floyd.go_lower <> GV:241 var
R20230:20231 VST.floyd.go_lower <> T2:240 var
R20227:20228 VST.floyd.go_lower <> T1:239 var
R20221:20225 VST.floyd.go_lower <> Delta:238 var
R20240:20243 Coq.Init.Datatypes <> Some constr
R20245:20245 VST.floyd.go_lower <> u:263 var
binder 20361:20362 <> P1:265
binder 20364:20365 <> P2:266
binder 20367:20368 <> Q1:267
binder 20370:20371 <> Q2:268
R20412:20415 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20454:20457 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20458:20474 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R20505:20508 VST.msl.seplog <> ::logic:x_'&&'_x not
R20503:20504 VST.floyd.go_lower <> Q1:267 var
R20509:20510 VST.floyd.go_lower <> Q2:268 var
R20494:20497 VST.msl.seplog <> ::logic:x_'&&'_x not
R20492:20493 VST.floyd.go_lower <> P1:265 var
R20498:20499 VST.floyd.go_lower <> P2:266 var
R20488:20489 VST.floyd.go_lower <> GV:241 var
R20485:20486 VST.floyd.go_lower <> T2:240 var
R20482:20483 VST.floyd.go_lower <> T1:239 var
R20476:20480 VST.floyd.go_lower <> Delta:238 var
R20416:20432 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R20452:20453 VST.floyd.go_lower <> Q2:268 var
R20449:20450 VST.floyd.go_lower <> P2:266 var
R20446:20447 VST.floyd.go_lower <> GV:241 var
R20443:20444 VST.floyd.go_lower <> T2:240 var
R20440:20441 VST.floyd.go_lower <> T1:239 var
R20434:20438 VST.floyd.go_lower <> Delta:238 var
R20374:20390 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R20410:20411 VST.floyd.go_lower <> Q1:267 var
R20407:20408 VST.floyd.go_lower <> P1:265 var
R20404:20405 VST.floyd.go_lower <> GV:241 var
R20401:20402 VST.floyd.go_lower <> T2:240 var
R20398:20399 VST.floyd.go_lower <> T1:239 var
R20392:20396 VST.floyd.go_lower <> Delta:238 var
binder 20545:20545 <> A:269
R20552:20555 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20563:20566 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20567:20571 VST.veric.mpred <> mpred def
R20556:20562 VST.veric.mpred <> environ ind
R20551:20551 VST.floyd.go_lower <> A:269 var
binder 20548:20548 <> P:270
R20579:20582 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20583:20587 VST.veric.mpred <> mpred def
R20578:20578 VST.floyd.go_lower <> A:269 var
binder 20575:20575 <> Q:271
R20591:20591 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20646:20650 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20651:20667 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R20693:20695 VST.msl.seplog <> exp meth
R20697:20697 VST.floyd.go_lower <> Q:271 var
R20685:20687 VST.msl.seplog <> exp meth
R20689:20689 VST.floyd.go_lower <> P:270 var
R20681:20682 VST.floyd.go_lower <> GV:241 var
R20678:20679 VST.floyd.go_lower <> T2:240 var
R20675:20676 VST.floyd.go_lower <> T1:239 var
R20669:20673 VST.floyd.go_lower <> Delta:238 var
binder 20599:20599 <> a:272
R20602:20618 VST.floyd.go_lower <> clean_LOCAL_right:242 ind
R20642:20642 VST.floyd.go_lower <> Q:271 var
R20644:20644 VST.floyd.go_lower <> a:272 var
R20636:20636 VST.floyd.go_lower <> P:270 var
R20638:20638 VST.floyd.go_lower <> a:272 var
R20632:20633 VST.floyd.go_lower <> GV:241 var
R20629:20630 VST.floyd.go_lower <> T2:240 var
R20626:20627 VST.floyd.go_lower <> T1:239 var
R20620:20624 VST.floyd.go_lower <> Delta:238 var
prf 20708:20727 <> clean_LOCAL_right_TT
R20734:20742 VST.veric.mpred <> compspecs class
binder 20730:20731 <> cs:273
R20754:20762 VST.veric.seplog <> tycontext ind
binder 20746:20750 <> Delta:274
R20771:20777 compcert.lib.Maps PTree t def
R20779:20781 compcert.common.Values <> val ind
binder 20766:20767 <> T1:275
R20790:20796 compcert.lib.Maps PTree t def
R20803:20805 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R20799:20802 compcert.cfrontend.Ctypes <> type ind
R20806:20808 compcert.common.Values <> val ind
binder 20785:20786 <> T2:276
R20818:20823 Coq.Init.Datatypes <> option ind
R20825:20831 VST.veric.SeparationLogic <> globals def
binder 20813:20814 <> GV:277
R20835:20851 VST.floyd.go_lower <> clean_LOCAL_right ind
R20871:20872 VST.msl.seplog <> TT meth
R20868:20869 VST.msl.seplog <> TT meth
R20865:20866 VST.floyd.go_lower <> GV:277 var
R20862:20863 VST.floyd.go_lower <> T2:276 var
R20859:20860 VST.floyd.go_lower <> T1:275 var
R20853:20857 VST.floyd.go_lower <> Delta:274 var
R20901:20926 VST.floyd.go_lower <> clean_LOCAL_right_sep_lift constr
R20936:20937 VST.msl.seplog <> TT meth
R20901:20926 VST.floyd.go_lower <> clean_LOCAL_right_sep_lift constr
R20936:20937 VST.msl.seplog <> TT meth
prf 20953:20972 <> clean_LOCAL_right_FF
R20979:20987 VST.veric.mpred <> compspecs class
binder 20975:20976 <> cs:278
R20999:21007 VST.veric.seplog <> tycontext ind
binder 20991:20995 <> Delta:279
R21016:21022 compcert.lib.Maps PTree t def
R21024:21026 compcert.common.Values <> val ind
binder 21011:21012 <> T1:280
R21035:21041 compcert.lib.Maps PTree t def
R21048:21050 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R21044:21047 compcert.cfrontend.Ctypes <> type ind
R21051:21053 compcert.common.Values <> val ind
binder 21030:21031 <> T2:281
R21063:21068 Coq.Init.Datatypes <> option ind
R21070:21076 VST.veric.SeparationLogic <> globals def
binder 21058:21059 <> GV:282
R21080:21096 VST.floyd.go_lower <> clean_LOCAL_right ind
R21116:21117 VST.msl.seplog <> FF meth
R21113:21114 VST.msl.seplog <> FF meth
R21110:21111 VST.floyd.go_lower <> GV:282 var
R21107:21108 VST.floyd.go_lower <> T2:281 var
R21104:21105 VST.floyd.go_lower <> T1:280 var
R21098:21102 VST.floyd.go_lower <> Delta:279 var
R21146:21171 VST.floyd.go_lower <> clean_LOCAL_right_sep_lift constr
R21181:21182 VST.msl.seplog <> FF meth
R21146:21171 VST.floyd.go_lower <> clean_LOCAL_right_sep_lift constr
R21181:21182 VST.msl.seplog <> FF meth
prf 21198:21220 <> clean_LOCAL_right_canon
R21227:21235 VST.veric.mpred <> compspecs class
binder 21223:21224 <> cs:283
R21247:21255 VST.veric.seplog <> tycontext ind
binder 21239:21243 <> Delta:284
R21264:21270 compcert.lib.Maps PTree t def
R21272:21274 compcert.common.Values <> val ind
binder 21259:21260 <> T1:285
R21283:21289 compcert.lib.Maps PTree t def
R21296:21298 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R21292:21295 compcert.cfrontend.Ctypes <> type ind
R21299:21301 compcert.common.Values <> val ind
binder 21278:21279 <> T2:286
R21311:21316 Coq.Init.Datatypes <> option ind
R21318:21324 VST.veric.SeparationLogic <> globals def
binder 21306:21307 <> GV:287
binder 21335:21335 <> P:288
binder 21337:21337 <> Q:289
binder 21339:21339 <> R:290
binder 21341:21343 <> Res:291
R21434:21437 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21438:21454 VST.floyd.go_lower <> clean_LOCAL_right ind
R21501:21503 VST.floyd.go_lower <> Res:291 var
R21472:21476 VST.floyd.canon <> PROPx def
R21481:21486 VST.floyd.canon <> LOCALx def
R21491:21494 VST.floyd.canon <> SEPx def
R21496:21496 VST.floyd.go_lower <> R:290 var
R21488:21488 VST.floyd.go_lower <> Q:289 var
R21478:21478 VST.floyd.go_lower <> P:288 var
R21468:21469 VST.floyd.go_lower <> GV:287 var
R21465:21466 VST.floyd.go_lower <> T2:286 var
R21462:21463 VST.floyd.go_lower <> T1:285 var
R21456:21460 VST.floyd.go_lower <> Delta:284 var
R21346:21346 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21427:21430 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21347:21365 VST.floyd.client_lemmas <> fold_right_PROP_SEP def
R21426:21426 VST.floyd.go_lower <> R:290 var
R21368:21380 VST.floyd.computable_functions <> VST_floyd_app def
R21385:21405 VST.floyd.go_lower <> msubst_extract_locals def
R21422:21422 VST.floyd.go_lower <> Q:289 var
R21419:21420 VST.floyd.go_lower <> GV:287 var
R21416:21417 VST.floyd.go_lower <> T2:286 var
R21413:21414 VST.floyd.go_lower <> T1:285 var
R21407:21411 VST.floyd.go_lower <> Delta:284 var
R21382:21382 VST.floyd.go_lower <> P:288 var
R21431:21433 VST.floyd.go_lower <> Res:291 var
R21544:21567 VST.floyd.go_lower <> clean_LOCAL_right_canon' constr
R21544:21567 VST.floyd.go_lower <> clean_LOCAL_right_canon' constr
prf 21582:21606 <> clean_LOCAL_right_tc_andp
R21613:21621 VST.veric.mpred <> compspecs class
binder 21609:21610 <> cs:292
R21633:21641 VST.veric.seplog <> tycontext ind
binder 21625:21629 <> Delta:293
R21650:21656 compcert.lib.Maps PTree t def
R21658:21660 compcert.common.Values <> val ind
binder 21645:21646 <> T1:294
R21669:21675 compcert.lib.Maps PTree t def
R21682:21684 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R21678:21681 compcert.cfrontend.Ctypes <> type ind
R21685:21687 compcert.common.Values <> val ind
binder 21664:21665 <> T2:295
R21697:21702 Coq.Init.Datatypes <> option ind
R21704:21710 VST.veric.SeparationLogic <> globals def
binder 21692:21693 <> GV:296
binder 21721:21722 <> P1:297
binder 21724:21725 <> P2:298
binder 21727:21728 <> Q1:299
binder 21730:21731 <> Q2:300
R21791:21794 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21852:21855 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21856:21872 VST.floyd.go_lower <> clean_LOCAL_right ind
R21927:21930 VST.msl.seplog <> ::logic:x_'&&'_x not
R21925:21926 VST.floyd.go_lower <> Q1:299 var
R21931:21932 VST.floyd.go_lower <> Q2:300 var
R21890:21905 VST.veric.SeparationLogic <> denote_tc_assert def
R21908:21914 VST.veric.expr <> tc_andp def
R21919:21920 VST.floyd.go_lower <> P2:298 var
R21916:21917 VST.floyd.go_lower <> P1:297 var
R21886:21887 VST.floyd.go_lower <> GV:296 var
R21883:21884 VST.floyd.go_lower <> T2:295 var
R21880:21881 VST.floyd.go_lower <> T1:294 var
R21874:21878 VST.floyd.go_lower <> Delta:293 var
R21795:21811 VST.floyd.go_lower <> clean_LOCAL_right ind
R21850:21851 VST.floyd.go_lower <> Q2:300 var
R21829:21844 VST.veric.SeparationLogic <> denote_tc_assert def
R21846:21847 VST.floyd.go_lower <> P2:298 var
R21825:21826 VST.floyd.go_lower <> GV:296 var
R21822:21823 VST.floyd.go_lower <> T2:295 var
R21819:21820 VST.floyd.go_lower <> T1:294 var
R21813:21817 VST.floyd.go_lower <> Delta:293 var
R21734:21750 VST.floyd.go_lower <> clean_LOCAL_right ind
R21789:21790 VST.floyd.go_lower <> Q1:299 var
R21768:21783 VST.veric.SeparationLogic <> denote_tc_assert def
R21785:21786 VST.floyd.go_lower <> P1:297 var
R21764:21765 VST.floyd.go_lower <> GV:296 var
R21761:21762 VST.floyd.go_lower <> T2:295 var
R21758:21759 VST.floyd.go_lower <> T1:294 var
R21752:21756 VST.floyd.go_lower <> Delta:293 var
R21963:21983 VST.floyd.typecheck_lemmas <> denote_tc_assert_andp thm
R21963:21983 VST.floyd.typecheck_lemmas <> denote_tc_assert_andp thm
R21963:21983 VST.floyd.typecheck_lemmas <> denote_tc_assert_andp thm
R21994:22015 VST.floyd.go_lower <> clean_LOCAL_right_andp constr
R21994:22015 VST.floyd.go_lower <> clean_LOCAL_right_andp constr
prf 22036:22055 <> clean_LOCAL_right_EX
R22070:22078 VST.veric.mpred <> compspecs class
binder 22066:22067 <> cs:301
R22089:22097 VST.veric.seplog <> tycontext ind
binder 22082:22086 <> Delta:302
R22105:22111 compcert.lib.Maps PTree t def
R22113:22115 compcert.common.Values <> val ind
binder 22101:22102 <> T1:303
R22123:22129 compcert.lib.Maps PTree t def
R22136:22138 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R22132:22135 compcert.cfrontend.Ctypes <> type ind
R22139:22141 compcert.common.Values <> val ind
binder 22119:22120 <> T2:304
R22150:22155 Coq.Init.Datatypes <> option ind
R22157:22163 VST.veric.SeparationLogic <> globals def
binder 22146:22147 <> GV:305
binder 22166:22166 <> A:306
R22173:22176 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22184:22187 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22188:22192 VST.veric.mpred <> mpred def
R22177:22183 VST.veric.mpred <> environ ind
R22172:22172 VST.floyd.go_lower <> A:306 var
binder 22169:22169 <> P:307
R22200:22203 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22204:22208 VST.veric.mpred <> mpred def
R22199:22199 VST.floyd.go_lower <> A:306 var
binder 22196:22196 <> Q:308
R22214:22214 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22289:22295 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22296:22312 VST.floyd.go_lower <> clean_LOCAL_right ind
R22338:22340 VST.msl.seplog <> exp meth
R22342:22342 VST.floyd.go_lower <> Q:308 var
R22330:22332 VST.msl.seplog <> exp meth
R22334:22334 VST.floyd.go_lower <> P:307 var
R22326:22327 VST.floyd.go_lower <> GV:305 var
R22323:22324 VST.floyd.go_lower <> T2:304 var
R22320:22321 VST.floyd.go_lower <> T1:303 var
R22314:22318 VST.floyd.go_lower <> Delta:302 var
binder 22222:22222 <> a:309
R22225:22231 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R22234:22235 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 22232:22233 <> Q':310
R22277:22280 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R22236:22252 VST.floyd.go_lower <> clean_LOCAL_right ind
R22275:22276 VST.floyd.go_lower <> Q':310 var
R22270:22270 VST.floyd.go_lower <> P:307 var
R22272:22272 VST.floyd.go_lower <> a:309 var
R22266:22267 VST.floyd.go_lower <> GV:305 var
R22263:22264 VST.floyd.go_lower <> T2:304 var
R22260:22261 VST.floyd.go_lower <> T1:303 var
R22254:22258 VST.floyd.go_lower <> Delta:302 var
R22283:22285 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22281:22282 VST.floyd.go_lower <> Q':310 var
R22286:22286 VST.floyd.go_lower <> Q:308 var
R22288:22288 VST.floyd.go_lower <> a:309 var
R22371:22391 VST.floyd.go_lower <> clean_LOCAL_right_EX' constr
R22371:22391 VST.floyd.go_lower <> clean_LOCAL_right_EX' constr
prf 22476:22496 <> clean_LOCAL_right_aux
R22511:22519 VST.veric.mpred <> compspecs class
binder 22507:22508 <> cs:311
binder 22522:22531 <> gvar_ident:312
R22541:22549 VST.veric.seplog <> tycontext ind
binder 22534:22538 <> Delta:313
R22557:22563 compcert.lib.Maps PTree t def
R22565:22567 compcert.common.Values <> val ind
binder 22553:22554 <> T1:314
R22575:22581 compcert.lib.Maps PTree t def
R22588:22590 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R22584:22587 compcert.cfrontend.Ctypes <> type ind
R22591:22593 compcert.common.Values <> val ind
binder 22571:22572 <> T2:315
R22602:22607 Coq.Init.Datatypes <> option ind
R22609:22615 VST.veric.SeparationLogic <> globals def
binder 22598:22599 <> GV:316
binder 22618:22618 <> P:317
binder 22620:22620 <> Q:318
binder 22622:22622 <> R:319
binder 22624:22624 <> S:320
binder 22626:22627 <> S':321
R22701:22703 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22639:22648 Coq.Lists.List <> fold_right def
R22661:22663 Coq.Lists.List <> map def
R22690:22699 VST.floyd.go_lower <> gvar_ident:312 var
R22666:22681 VST.floyd.go_lower <> legal_glob_ident def
R22683:22687 VST.floyd.go_lower <> Delta:313 var
R22655:22658 Coq.Init.Datatypes <> true constr
R22650:22653 Coq.Init.Datatypes <> andb def
R22704:22707 Coq.Init.Datatypes <> true constr
binder 22632:22636 <> LEGAL:322
R22746:22751 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22789:22794 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22858:22862 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R22850:22853 VST.msl.seplog <> ::logic:x_'&&'_x not
R22819:22822 VST.msl.seplog <> ::logic:x_'&&'_x not
R22795:22799 VST.veric.SeparationLogic <> local def
R22802:22811 VST.veric.SeparationLogic <> tc_environ def
R22813:22817 VST.floyd.go_lower <> Delta:313 var
R22823:22827 VST.floyd.canon <> PROPx def
R22832:22837 VST.floyd.canon <> LOCALx def
R22842:22845 VST.floyd.canon <> SEPx def
R22847:22847 VST.floyd.go_lower <> R:319 var
R22839:22839 VST.floyd.go_lower <> Q:318 var
R22829:22829 VST.floyd.go_lower <> P:317 var
R22854:22855 VST.veric.lift LiftNotation :::'`'_x not
R22856:22857 VST.floyd.go_lower <> S':321 var
R22863:22863 VST.floyd.go_lower <> S:320 var
R22752:22768 VST.floyd.go_lower <> clean_LOCAL_right ind
R22787:22788 VST.floyd.go_lower <> S':321 var
R22785:22785 VST.floyd.go_lower <> S:320 var
R22782:22783 VST.floyd.go_lower <> GV:316 var
R22779:22780 VST.floyd.go_lower <> T2:315 var
R22776:22777 VST.floyd.go_lower <> T1:314 var
R22770:22774 VST.floyd.go_lower <> Delta:313 var
R22726:22728 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22713:22723 VST.floyd.local2ptree_denote <> local2ptree def
R22725:22725 VST.floyd.go_lower <> Q:318 var
R22729:22729 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22732:22733 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22736:22737 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22741:22742 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22745:22745 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22730:22731 VST.floyd.go_lower <> T1:314 var
R22734:22735 VST.floyd.go_lower <> T2:315 var
R22738:22740 Coq.Init.Datatypes <> nil constr
R22743:22744 VST.floyd.go_lower <> GV:316 var
R22909:22918 VST.msl.seplog <> andp_left2 meth
R22909:22918 VST.msl.seplog <> andp_left2 meth
R22927:22938 VST.msl.seplog <> derives_refl meth
R22927:22938 VST.msl.seplog <> derives_refl meth
R22951:22960 VST.msl.seplog <> andp_left2 meth
R22951:22960 VST.msl.seplog <> andp_left2 meth
R22969:22980 VST.msl.seplog <> derives_refl meth
R22969:22980 VST.msl.seplog <> derives_refl meth
R22993:23002 VST.msl.seplog <> andp_left2 meth
R22993:23002 VST.msl.seplog <> andp_left2 meth
R23011:23022 VST.msl.seplog <> derives_refl meth
R23011:23022 VST.msl.seplog <> derives_refl meth
R23036:23068 VST.floyd.go_lower <> go_lower_localdef_canon_tc_lvalue thm
R23036:23068 VST.floyd.go_lower <> go_lower_localdef_canon_tc_lvalue thm
R23089:23119 VST.floyd.go_lower <> go_lower_localdef_canon_tc_expr thm
R23089:23119 VST.floyd.go_lower <> go_lower_localdef_canon_tc_expr thm
R23140:23168 VST.floyd.go_lower <> go_lower_localdef_canon_tc_LR thm
R23140:23168 VST.floyd.go_lower <> go_lower_localdef_canon_tc_LR thm
R23189:23221 VST.floyd.go_lower <> go_lower_localdef_canon_tc_efield thm
R23189:23221 VST.floyd.go_lower <> go_lower_localdef_canon_tc_efield thm
R23242:23276 VST.floyd.go_lower <> go_lower_localdef_canon_tc_exprlist thm
R23242:23276 VST.floyd.go_lower <> go_lower_localdef_canon_tc_exprlist thm
R23297:23330 VST.floyd.go_lower <> go_lower_localdef_canon_tc_expropt thm
R23297:23330 VST.floyd.go_lower <> go_lower_localdef_canon_tc_expropt thm
R23351:23363 VST.msl.seplog <> derives_trans meth
R23377:23405 VST.floyd.go_lower <> go_lower_localdef_canon_canon thm
R23351:23363 VST.msl.seplog <> derives_trans meth
R23377:23405 VST.floyd.go_lower <> go_lower_localdef_canon_canon thm
R23439:23448 VST.msl.seplog <> andp_right meth
R23458:23467 VST.msl.seplog <> andp_left1 meth
R23439:23448 VST.msl.seplog <> andp_right meth
R23458:23467 VST.msl.seplog <> andp_left1 meth
R23506:23529 VST.floyd.client_lemmas <> fold_right_PROP_SEP_spec thm
R23506:23529 VST.floyd.client_lemmas <> fold_right_PROP_SEP_spec thm
R23506:23529 VST.floyd.client_lemmas <> fold_right_PROP_SEP_spec thm
R23574:23608 VST.floyd.go_lower <> go_lower_localdef_canon_eval_lvalue thm
R23574:23608 VST.floyd.go_lower <> go_lower_localdef_canon_eval_lvalue thm
R23629:23661 VST.floyd.go_lower <> go_lower_localdef_canon_eval_expr thm
R23629:23661 VST.floyd.go_lower <> go_lower_localdef_canon_eval_expr thm
R23681:23690 VST.msl.seplog <> andp_right meth
R23681:23690 VST.msl.seplog <> andp_right meth
R23706:23718 VST.msl.seplog <> derives_trans meth
R23706:23718 VST.msl.seplog <> derives_trans meth
R23822:23834 VST.msl.seplog <> derives_trans meth
R23822:23834 VST.msl.seplog <> derives_trans meth
R23951:23959 VST.msl.seplog <> exp_right meth
R23951:23959 VST.msl.seplog <> exp_right meth
prf 23991:24012 <> clean_LOCAL_right_spec
R24027:24035 VST.veric.mpred <> compspecs class
binder 24023:24024 <> cs:323
binder 24038:24047 <> gvar_ident:324
R24057:24065 VST.veric.seplog <> tycontext ind
binder 24050:24054 <> Delta:325
R24073:24079 compcert.lib.Maps PTree t def
R24081:24083 compcert.common.Values <> val ind
binder 24069:24070 <> T1:326
R24091:24097 compcert.lib.Maps PTree t def
R24104:24106 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R24100:24103 compcert.cfrontend.Ctypes <> type ind
R24107:24109 compcert.common.Values <> val ind
binder 24087:24088 <> T2:327
R24118:24123 Coq.Init.Datatypes <> option ind
R24125:24131 VST.veric.SeparationLogic <> globals def
binder 24114:24115 <> GV:328
binder 24134:24134 <> P:329
binder 24136:24136 <> Q:330
binder 24138:24138 <> R:331
binder 24140:24140 <> S:332
binder 24142:24143 <> S':333
R24217:24219 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24155:24164 Coq.Lists.List <> fold_right def
R24177:24179 Coq.Lists.List <> map def
R24206:24215 VST.floyd.go_lower <> gvar_ident:324 var
R24182:24197 VST.floyd.go_lower <> legal_glob_ident def
R24199:24203 VST.floyd.go_lower <> Delta:325 var
R24171:24174 Coq.Init.Datatypes <> true constr
R24166:24169 Coq.Init.Datatypes <> andb def
R24220:24223 Coq.Init.Datatypes <> true constr
binder 24148:24152 <> LEGAL:334
R24262:24267 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24305:24310 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24427:24432 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24488:24492 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R24457:24460 VST.msl.seplog <> ::logic:x_'&&'_x not
R24433:24437 VST.veric.SeparationLogic <> local def
R24440:24449 VST.veric.SeparationLogic <> tc_environ def
R24451:24455 VST.floyd.go_lower <> Delta:325 var
R24461:24465 VST.floyd.canon <> PROPx def
R24470:24475 VST.floyd.canon <> LOCALx def
R24480:24483 VST.floyd.canon <> SEPx def
R24485:24485 VST.floyd.go_lower <> R:331 var
R24477:24477 VST.floyd.go_lower <> Q:330 var
R24467:24467 VST.floyd.go_lower <> P:329 var
R24493:24493 VST.floyd.go_lower <> S:332 var
R24418:24422 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R24335:24338 VST.msl.seplog <> ::logic:x_'&&'_x not
R24311:24315 VST.veric.SeparationLogic <> local def
R24318:24327 VST.veric.SeparationLogic <> tc_environ def
R24329:24333 VST.floyd.go_lower <> Delta:325 var
R24339:24343 VST.floyd.canon <> PROPx def
R24398:24403 VST.floyd.canon <> LOCALx def
R24410:24413 VST.floyd.canon <> SEPx def
R24415:24415 VST.floyd.go_lower <> R:331 var
R24405:24407 Coq.Init.Datatypes <> nil constr
R24346:24358 VST.floyd.computable_functions <> VST_floyd_app def
R24363:24374 VST.floyd.go_lower <> localdefs_tc def
R24393:24393 VST.floyd.go_lower <> Q:330 var
R24382:24391 VST.floyd.go_lower <> gvar_ident:324 var
R24376:24380 VST.floyd.go_lower <> Delta:325 var
R24360:24360 VST.floyd.go_lower <> P:329 var
R24423:24424 VST.veric.lift LiftNotation :::'`'_x not
R24425:24426 VST.floyd.go_lower <> S':333 var
R24268:24284 VST.floyd.go_lower <> clean_LOCAL_right ind
R24303:24304 VST.floyd.go_lower <> S':333 var
R24301:24301 VST.floyd.go_lower <> S:332 var
R24298:24299 VST.floyd.go_lower <> GV:328 var
R24295:24296 VST.floyd.go_lower <> T2:327 var
R24292:24293 VST.floyd.go_lower <> T1:326 var
R24286:24290 VST.floyd.go_lower <> Delta:325 var
R24242:24244 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24229:24239 VST.floyd.local2ptree_denote <> local2ptree def
R24241:24241 VST.floyd.go_lower <> Q:330 var
R24245:24245 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24248:24249 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24252:24253 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24257:24258 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24261:24261 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24246:24247 VST.floyd.go_lower <> T1:326 var
R24250:24251 VST.floyd.go_lower <> T2:327 var
R24254:24256 Coq.Init.Datatypes <> nil constr
R24259:24260 VST.floyd.go_lower <> GV:328 var
R24523:24529 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R24535:24536 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R24564:24568 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R24537:24541 VST.floyd.canon <> PROPx def
R24546:24551 VST.floyd.canon <> LOCALx def
R24556:24559 VST.floyd.canon <> SEPx def
R24569:24569 VST.veric.lift LiftNotation :::'`'_x not
R24589:24616 VST.floyd.go_lower <> go_lower_localdef_canon_left thm
R24523:24529 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R24535:24536 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R24564:24568 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R24537:24541 VST.floyd.canon <> PROPx def
R24546:24551 VST.floyd.canon <> LOCALx def
R24556:24559 VST.floyd.canon <> SEPx def
R24569:24569 VST.veric.lift LiftNotation :::'`'_x not
R24589:24616 VST.floyd.go_lower <> go_lower_localdef_canon_left thm
R24638:24645 VST.msl.log_normalize <> add_andp thm
R24638:24645 VST.msl.log_normalize <> add_andp thm
R24638:24645 VST.msl.log_normalize <> add_andp thm
R24678:24698 VST.floyd.go_lower <> clean_LOCAL_right_aux thm
R24678:24698 VST.floyd.go_lower <> clean_LOCAL_right_aux thm
prf 24720:24746 <> clean_LOCAL_right_bupd_spec
R24761:24769 VST.veric.mpred <> compspecs class
binder 24757:24758 <> cs:335
binder 24772:24781 <> gvar_ident:336
R24791:24799 VST.veric.seplog <> tycontext ind
binder 24784:24788 <> Delta:337
R24807:24813 compcert.lib.Maps PTree t def
R24815:24817 compcert.common.Values <> val ind
binder 24803:24804 <> T1:338
R24825:24831 compcert.lib.Maps PTree t def
R24838:24840 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R24834:24837 compcert.cfrontend.Ctypes <> type ind
R24841:24843 compcert.common.Values <> val ind
binder 24821:24822 <> T2:339
R24852:24857 Coq.Init.Datatypes <> option ind
R24859:24865 VST.veric.SeparationLogic <> globals def
binder 24848:24849 <> GV:340
binder 24868:24868 <> P:341
binder 24870:24870 <> Q:342
binder 24872:24872 <> R:343
binder 24874:24874 <> S:344
binder 24876:24877 <> S':345
R24951:24953 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24889:24898 Coq.Lists.List <> fold_right def
R24911:24913 Coq.Lists.List <> map def
R24940:24949 VST.floyd.go_lower <> gvar_ident:336 var
R24916:24931 VST.floyd.go_lower <> legal_glob_ident def
R24933:24937 VST.floyd.go_lower <> Delta:337 var
R24905:24908 Coq.Init.Datatypes <> true constr
R24900:24903 Coq.Init.Datatypes <> andb def
R24954:24957 Coq.Init.Datatypes <> true constr
binder 24882:24886 <> LEGAL:346
R24996:25001 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25039:25044 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25166:25171 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25227:25231 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R25196:25199 VST.msl.seplog <> ::logic:x_'&&'_x not
R25172:25176 VST.veric.SeparationLogic <> local def
R25179:25188 VST.veric.SeparationLogic <> tc_environ def
R25190:25194 VST.floyd.go_lower <> Delta:337 var
R25200:25204 VST.floyd.canon <> PROPx def
R25209:25214 VST.floyd.canon <> LOCALx def
R25219:25222 VST.floyd.canon <> SEPx def
R25224:25224 VST.floyd.go_lower <> R:343 var
R25216:25216 VST.floyd.go_lower <> Q:342 var
R25206:25206 VST.floyd.go_lower <> P:341 var
R25232:25236 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R25237:25237 VST.floyd.go_lower <> S:344 var
R25152:25156 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R25069:25072 VST.msl.seplog <> ::logic:x_'&&'_x not
R25045:25049 VST.veric.SeparationLogic <> local def
R25052:25061 VST.veric.SeparationLogic <> tc_environ def
R25063:25067 VST.floyd.go_lower <> Delta:337 var
R25073:25077 VST.floyd.canon <> PROPx def
R25132:25137 VST.floyd.canon <> LOCALx def
R25144:25147 VST.floyd.canon <> SEPx def
R25149:25149 VST.floyd.go_lower <> R:343 var
R25139:25141 Coq.Init.Datatypes <> nil constr
R25080:25092 VST.floyd.computable_functions <> VST_floyd_app def
R25097:25108 VST.floyd.go_lower <> localdefs_tc def
R25127:25127 VST.floyd.go_lower <> Q:342 var
R25116:25125 VST.floyd.go_lower <> gvar_ident:336 var
R25110:25114 VST.floyd.go_lower <> Delta:337 var
R25094:25094 VST.floyd.go_lower <> P:341 var
R25157:25161 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R25162:25163 VST.veric.lift LiftNotation :::'`'_x not
R25164:25165 VST.floyd.go_lower <> S':345 var
R25002:25018 VST.floyd.go_lower <> clean_LOCAL_right ind
R25037:25038 VST.floyd.go_lower <> S':345 var
R25035:25035 VST.floyd.go_lower <> S:344 var
R25032:25033 VST.floyd.go_lower <> GV:340 var
R25029:25030 VST.floyd.go_lower <> T2:339 var
R25026:25027 VST.floyd.go_lower <> T1:338 var
R25020:25024 VST.floyd.go_lower <> Delta:337 var
R24976:24978 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24963:24973 VST.floyd.local2ptree_denote <> local2ptree def
R24975:24975 VST.floyd.go_lower <> Q:342 var
R24979:24979 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24982:24983 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24986:24987 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24991:24992 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24995:24995 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24980:24981 VST.floyd.go_lower <> T1:338 var
R24984:24985 VST.floyd.go_lower <> T2:339 var
R24988:24990 Coq.Init.Datatypes <> nil constr
R24993:24994 VST.floyd.go_lower <> GV:340 var
R25267:25273 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R25279:25280 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R25308:25312 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R25281:25285 VST.floyd.canon <> PROPx def
R25290:25295 VST.floyd.canon <> LOCALx def
R25300:25303 VST.floyd.canon <> SEPx def
R25313:25317 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R25318:25318 VST.veric.lift LiftNotation :::'`'_x not
R25338:25365 VST.floyd.go_lower <> go_lower_localdef_canon_left thm
R25267:25273 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R25279:25280 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R25308:25312 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R25281:25285 VST.floyd.canon <> PROPx def
R25290:25295 VST.floyd.canon <> LOCALx def
R25300:25303 VST.floyd.canon <> SEPx def
R25313:25317 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R25318:25318 VST.veric.lift LiftNotation :::'`'_x not
R25338:25365 VST.floyd.go_lower <> go_lower_localdef_canon_left thm
R25389:25409 VST.floyd.go_lower <> clean_LOCAL_right_aux thm
R25428:25431 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R25426:25427 VST.msl.seplog <> TT meth
R25432:25434 Coq.Init.Datatypes <> nil constr
R25389:25409 VST.floyd.go_lower <> clean_LOCAL_right_aux thm
R25428:25431 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R25426:25427 VST.msl.seplog <> TT meth
R25432:25434 Coq.Init.Datatypes <> nil constr
R25464:25471 VST.msl.log_normalize <> add_andp thm
R25464:25471 VST.msl.log_normalize <> add_andp thm
R25464:25471 VST.msl.log_normalize <> add_andp thm
R25504:25516 VST.msl.seplog <> derives_trans meth
R25504:25516 VST.msl.seplog <> derives_trans meth
R25529:25540 VST.msl.log_normalize <> andp_derives thm
R25552:25563 VST.msl.seplog <> derives_refl meth
R25529:25540 VST.msl.log_normalize <> andp_derives thm
R25552:25563 VST.msl.seplog <> derives_refl meth
R25577:25588 VST.msl.log_normalize <> andp_derives thm
R25598:25609 VST.msl.seplog <> derives_refl meth
R25577:25588 VST.msl.log_normalize <> andp_derives thm
R25598:25609 VST.msl.seplog <> derives_refl meth
R25637:25641 VST.floyd.canon <> PROPx def
R25646:25651 VST.floyd.canon <> LOCALx def
R25656:25659 VST.floyd.canon <> SEPx def
R25664:25665 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R25662:25663 VST.msl.seplog <> TT meth
R25666:25668 Coq.Init.Datatypes <> nil constr
R25685:25696 VST.msl.log_normalize <> andp_derives thm
R25685:25696 VST.msl.log_normalize <> andp_derives thm
R25715:25726 VST.msl.log_normalize <> andp_derives thm
R25715:25726 VST.msl.log_normalize <> andp_derives thm
R25746:25749 VST.floyd.canon <> SEPx def
R25771:25780 VST.msl.seplog <> sepcon_emp meth
R25771:25780 VST.msl.seplog <> sepcon_emp meth
R25771:25780 VST.msl.seplog <> sepcon_emp meth
R25801:25809 VST.msl.log_normalize <> andp_comm thm
R25801:25809 VST.msl.log_normalize <> andp_comm thm
R25801:25809 VST.msl.log_normalize <> andp_comm thm
R25823:25835 VST.msl.seplog <> derives_trans meth
R25845:25862 VST.msl.log_normalize <> bupd_andp2_corable thm
R25823:25835 VST.msl.seplog <> derives_trans meth
R25845:25862 VST.msl.log_normalize <> bupd_andp2_corable thm
R25880:25891 VST.msl.seplog <> corable_andp meth
R25908:25919 VST.msl.seplog <> corable_prop meth
R25880:25891 VST.msl.seplog <> corable_andp meth
R25908:25919 VST.msl.seplog <> corable_prop meth
R25937:25948 VST.msl.seplog <> corable_andp meth
R25972:25983 VST.msl.seplog <> corable_prop meth
R25937:25948 VST.msl.seplog <> corable_andp meth
R25972:25983 VST.msl.seplog <> corable_prop meth
R26001:26012 VST.msl.seplog <> corable_andp meth
R26036:26047 VST.msl.seplog <> corable_prop meth
R26001:26012 VST.msl.seplog <> corable_andp meth
R26036:26047 VST.msl.seplog <> corable_prop meth
R26066:26069 VST.floyd.canon <> SEPx def
R26093:26102 VST.msl.seplog <> sepcon_emp meth
R26093:26102 VST.msl.seplog <> sepcon_emp meth
R26093:26102 VST.msl.seplog <> sepcon_emp meth
R26131:26142 VST.msl.seplog <> corable_prop meth
R26131:26142 VST.msl.seplog <> corable_prop meth
R26157:26165 VST.msl.ghost_seplog <> bupd_mono meth
R26157:26165 VST.msl.ghost_seplog <> bupd_mono meth
R26182:26190 VST.msl.log_normalize <> andp_comm thm
R26182:26190 VST.msl.log_normalize <> andp_comm thm
R26182:26190 VST.msl.log_normalize <> andp_comm thm
R26264:26266 Coq.Init.Datatypes <> nil constr
R26264:26266 Coq.Init.Datatypes <> nil constr
R26281:26284 Coq.Init.Datatypes <> cons constr
R26281:26284 Coq.Init.Datatypes <> cons constr
R26321:26324 VST.floyd.canon <> temp constr
R26321:26324 VST.floyd.canon <> temp constr
R26355:26358 VST.floyd.canon <> lvar constr
R26355:26358 VST.floyd.canon <> lvar constr
R26544:26546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26500:26518 VST.floyd.client_lemmas <> fold_right_PROP_SEP def
R26521:26533 VST.floyd.computable_functions <> VST_floyd_app def
R26544:26546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26500:26518 VST.floyd.client_lemmas <> fold_right_PROP_SEP def
R26521:26533 VST.floyd.computable_functions <> VST_floyd_app def
R26587:26587 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R26595:26599 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R26590:26592 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26587:26587 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R26595:26599 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R26590:26592 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26712:26732 VST.floyd.go_lower <> msubst_extract_locals def
R26735:26754 VST.floyd.go_lower <> msubst_extract_local def
R26757:26769 VST.floyd.computable_functions <> VST_floyd_map def
R26889:26914 VST.floyd.go_lower <> clean_LOCAL_right_sep_lift constr
R26935:26962 VST.floyd.go_lower <> clean_LOCAL_right_local_lift constr
R26983:27004 VST.floyd.go_lower <> clean_LOCAL_right_prop constr
R27025:27044 VST.floyd.go_lower <> clean_LOCAL_right_TT thm
R27065:27084 VST.floyd.go_lower <> clean_LOCAL_right_FF thm
R27103:27111 VST.veric.SeparationLogic <> tc_lvalue def
R27127:27153 VST.floyd.go_lower <> clean_LOCAL_right_tc_lvalue constr
R27172:27178 VST.veric.SeparationLogic <> tc_expr def
R27194:27218 VST.floyd.go_lower <> clean_LOCAL_right_tc_expr constr
R27237:27241 VST.floyd.typecheck_lemmas <> tc_LR def
R27257:27279 VST.floyd.go_lower <> clean_LOCAL_right_tc_LR constr
R27298:27306 VST.floyd.efield_lemmas <> tc_efield def
R27322:27348 VST.floyd.go_lower <> clean_LOCAL_right_tc_efield constr
R27367:27377 VST.veric.SeparationLogic <> tc_exprlist def
R27393:27421 VST.floyd.go_lower <> clean_LOCAL_right_tc_exprlist constr
R27442:27469 VST.floyd.go_lower <> clean_LOCAL_right_tc_expropt constr
R27490:27512 VST.floyd.go_lower <> clean_LOCAL_right_canon thm
R27590:27602 VST.floyd.computable_functions <> VST_floyd_app def
R27618:27636 VST.floyd.client_lemmas <> fold_right_PROP_SEP def
R27639:27657 VST.floyd.client_lemmas <> fold_right_and_True def
R27673:27689 VST.floyd.base <> fold_right_sepcon def
R27697:27713 VST.floyd.base <> fold_right_sepcon def
R27725:27734 VST.msl.seplog <> sepcon_emp meth
R27774:27802 VST.floyd.go_lower <> clean_LOCAL_right_eval_lvalue constr
R27849:27875 VST.floyd.go_lower <> clean_LOCAL_right_eval_expr constr
R27920:27941 VST.floyd.go_lower <> clean_LOCAL_right_andp constr
R27987:28011 VST.floyd.go_lower <> clean_LOCAL_right_tc_andp thm
R28057:28076 VST.floyd.go_lower <> clean_LOCAL_right_EX thm
R28221:28223 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28221:28223 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28966:28970 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R28971:28975 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R28966:28970 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R28971:28975 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R29044:29065 VST.floyd.go_lower <> clean_LOCAL_right_spec thm
R28989:29015 VST.floyd.go_lower <> clean_LOCAL_right_bupd_spec thm
R28900:28903 Coq.Init.Datatypes <> cons constr
R28905:28909 compcert.common.AST <> ident def
R28750:28753 Coq.Init.Datatypes <> cons constr
R28755:28759 compcert.common.AST <> ident def
R29163:29167 VST.floyd.canon <> gvars constr
R29163:29167 VST.floyd.canon <> gvars constr
R29267:29271 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R29272:29276 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R29267:29271 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R29272:29276 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R29347:29368 VST.floyd.go_lower <> clean_LOCAL_right_spec thm
R29370:29372 Coq.Init.Datatypes <> nil constr
R29290:29316 VST.floyd.go_lower <> clean_LOCAL_right_bupd_spec thm
R29318:29320 Coq.Init.Datatypes <> nil constr
R29216:29218 Coq.Init.Datatypes <> nil constr
R29220:29224 compcert.common.AST <> ident def
R29436:29447 VST.floyd.go_lower <> localdefs_tc def
R29450:29460 VST.floyd.go_lower <> localdef_tc def
R29472:29484 VST.floyd.computable_functions <> VST_floyd_map def
R29487:29502 VST.floyd.computable_functions <> VST_floyd_concat def
R29505:29517 VST.floyd.computable_functions <> VST_floyd_app def
R29666:29672 VST.veric.SeparationLogic <> globals def
R29666:29672 VST.veric.SeparationLogic <> globals def
R29709:29711 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29677:29686 Coq.Lists.List <> fold_right def
R29699:29701 Coq.Lists.List <> map def
R29693:29696 Coq.Init.Datatypes <> true constr
R29688:29691 Coq.Init.Datatypes <> andb def
R29712:29715 Coq.Init.Datatypes <> true constr
R29709:29711 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29677:29686 Coq.Lists.List <> fold_right def
R29699:29701 Coq.Lists.List <> map def
R29693:29696 Coq.Init.Datatypes <> true constr
R29688:29691 Coq.Init.Datatypes <> andb def
R29712:29715 Coq.Init.Datatypes <> true constr
R29740:29750 Coq.Lists.List <> filter def
R29753:29766 Coq.Program.Basics <> compose def
R29768:29771 Coq.Init.Datatypes <> negb def
prf 30294:30310 <> is_int_Vint_intro
binder 30320:30321 <> sz:347
binder 30323:30324 <> sg:348
binder 30326:30326 <> v:349
binder 30329:30329 <> P:350
R30341:30341 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30394:30401 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30421:30421 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30416:30419 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30420:30420 VST.floyd.go_lower <> P:350 var
R30402:30407 VST.veric.Cop2 <> is_int def
R30415:30415 VST.floyd.go_lower <> v:349 var
R30412:30413 VST.floyd.go_lower <> sg:348 var
R30409:30410 VST.floyd.go_lower <> sz:347 var
R30342:30342 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30388:30392 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30393:30393 VST.floyd.go_lower <> P:350 var
R30343:30349 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R30351:30352 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 30350:30350 <> i:351
R30363:30366 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R30354:30356 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30353:30353 VST.floyd.go_lower <> v:349 var
R30357:30360 compcert.common.Values <> Vint constr
R30362:30362 VST.floyd.go_lower <> i:351 var
R30367:30372 VST.veric.Cop2 <> is_int def
R30381:30384 compcert.common.Values <> Vint constr
R30386:30386 VST.floyd.go_lower <> i:351 var
R30377:30378 VST.floyd.go_lower <> sg:348 var
R30374:30375 VST.floyd.go_lower <> sz:347 var
R30559:30559 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30579:30583 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30560:30565 VST.veric.Cop2 <> tc_val def
R30571:30574 compcert.common.Values <> Vint constr
R30559:30559 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30579:30583 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30560:30565 VST.veric.Cop2 <> tc_val def
R30571:30574 compcert.common.Values <> Vint constr
R30735:30735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30748:30752 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30736:30741 VST.veric.Cop2 <> tc_val def
R30735:30735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30748:30752 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30736:30741 VST.veric.Cop2 <> tc_val def
R31648:31648 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31661:31665 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31649:31654 VST.veric.Cop2 <> tc_val def
R31648:31648 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31661:31665 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31649:31654 VST.veric.Cop2 <> tc_val def
R31733:31738 VST.veric.Cop2 <> tc_val def
R31766:31769 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30831:30834 compcert.cfrontend.Ctypes <> Tint constr
R30831:30834 compcert.cfrontend.Ctypes <> Tint constr
R31186:31193 compcert.cfrontend.Ctypes <> Tpointer constr
R31186:31193 compcert.cfrontend.Ctypes <> Tpointer constr
R31544:31549 VST.veric.Cop2 <> tc_val def
R31585:31588 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31240:31247 VST.veric.Cop2 <> eqb_type def
R31252:31266 VST.veric.Cop2 <> int_or_ptr_type def
R31315:31318 Coq.Init.Datatypes <> true constr
R31315:31318 Coq.Init.Datatypes <> true constr
R31395:31399 Coq.Init.Datatypes <> false constr
R31395:31399 Coq.Init.Datatypes <> false constr
R31432:31435 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31412:31429 VST.veric.val_lemmas <> is_pointer_or_null def
R31354:31357 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31331:31351 VST.veric.val_lemmas <> is_pointer_or_integer def
R30909:30912 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30895:30900 VST.veric.Cop2 <> is_int def
R30944:30960 VST.floyd.go_lower <> is_int_Vint_intro thm
R30652:30657 VST.veric.Cop2 <> tc_val def
R30662:30665 compcert.common.Values <> Vint constr
R30693:30696 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31884:31887 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31884:31887 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R32155:32157 Coq.Init.Datatypes <> nil constr
R32155:32157 Coq.Init.Datatypes <> nil constr
R32239:32242 Coq.Init.Datatypes <> list ind
R32244:32248 VST.veric.mpred <> mpred def
R32541:32545 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R32509:32512 VST.msl.seplog <> ::logic:x_'&&'_x not
R32502:32506 VST.veric.SeparationLogic <> local def
R32513:32517 VST.floyd.canon <> PROPx def
R32522:32527 VST.floyd.canon <> LOCALx def
R32532:32535 VST.floyd.canon <> SEPx def
R32541:32545 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R32509:32512 VST.msl.seplog <> ::logic:x_'&&'_x not
R32502:32506 VST.veric.SeparationLogic <> local def
R32513:32517 VST.floyd.canon <> PROPx def
R32522:32527 VST.floyd.canon <> LOCALx def
R32532:32535 VST.floyd.canon <> SEPx def
R32572:32578 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R32580:32581 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R32610:32614 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R32582:32586 VST.floyd.canon <> PROPx def
R32591:32596 VST.floyd.canon <> LOCALx def
R32601:32604 VST.floyd.canon <> SEPx def
R32572:32578 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R32580:32581 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R32610:32614 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R32582:32586 VST.floyd.canon <> PROPx def
R32591:32596 VST.floyd.canon <> LOCALx def
R32601:32604 VST.floyd.canon <> SEPx def
R32641:32647 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R32649:32650 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R32652:32656 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R32641:32647 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R32649:32650 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R32652:32656 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R32874:32893 VST.floyd.client_lemmas <> derives_extract_PROP thm
R32967:32984 VST.floyd.go_lower <> quick_finish_lower thm
R33030:33041 VST.floyd.go_lower <> finish_lower thm
R33100:33104 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R33080:33080 VST.msl.seplog <> ::logic:x_'&&'_x not
R33082:33085 VST.msl.seplog <> ::logic:x_'&&'_x not
R33097:33099 VST.msl.seplog <> ::logic:x_'&&'_x not
R33086:33090 VST.floyd.canon <> PROPx def
R33092:33094 Coq.Init.Datatypes <> nil constr
R33100:33104 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R33080:33080 VST.msl.seplog <> ::logic:x_'&&'_x not
R33082:33085 VST.msl.seplog <> ::logic:x_'&&'_x not
R33097:33099 VST.msl.seplog <> ::logic:x_'&&'_x not
R33086:33090 VST.floyd.canon <> PROPx def
R33092:33094 Coq.Init.Datatypes <> nil constr
R33285:33301 VST.floyd.base <> fold_right_sepcon def
R33309:33325 VST.floyd.base <> fold_right_sepcon def
R33337:33346 VST.msl.seplog <> sepcon_emp meth
R33528:33538 VST.floyd.client_lemmas <> SEP_entail' thm
R33785:33789 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R33785:33789 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R33850:33854 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R33921:33925 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R33921:33925 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R33994:34010 VST.floyd.base <> fold_right_sepcon def
R34040:34056 VST.floyd.base <> fold_right_sepcon def
R34068:34077 VST.msl.seplog <> sepcon_emp meth
R34118:34129 VST.msl.seplog <> derives_refl meth
R34185:34193 VST.floyd.canon <> semax_pre thm
R34279:34285 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R34287:34289 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R34291:34295 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R34279:34285 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R34287:34289 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R34291:34295 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R34368:34374 VST.msl.seplog <> derives meth
R34376:34380 VST.veric.mpred <> mpred def
R34368:34374 VST.msl.seplog <> derives meth
R34376:34380 VST.veric.mpred <> mpred def
R34423:34427 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R34423:34427 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R34308:34319 VST.floyd.assert_lemmas <> ENTAIL_trans thm
R34539:34549 VST.floyd.client_lemmas <> SEP_entail' thm
R34799:34803 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R34799:34803 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R34865:34869 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R34961:34965 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R34961:34965 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R35037:35053 VST.floyd.base <> fold_right_sepcon def
R35084:35100 VST.floyd.base <> fold_right_sepcon def
R35112:35121 VST.msl.seplog <> sepcon_emp meth
R35164:35175 VST.msl.seplog <> derives_refl meth
R35254:35262 VST.floyd.canon <> semax_pre thm
R35398:35404 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R35406:35408 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R35410:35414 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R35398:35404 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R35406:35408 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R35410:35414 VST.floyd.canon <> :::'ENTAIL'_x_','_x_'|--'_x not
R35509:35515 VST.msl.seplog <> derives meth
R35517:35521 VST.veric.mpred <> mpred def
R35509:35515 VST.msl.seplog <> derives meth
R35517:35521 VST.veric.mpred <> mpred def
R35587:35591 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R35587:35591 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax defax
R35427:35438 VST.floyd.assert_lemmas <> ENTAIL_trans thm
