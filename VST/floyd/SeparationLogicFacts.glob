DIGEST f1a7841035aef07b92cc845325624f6a
FVST.floyd.SeparationLogicFacts
R29:38 compcert.exportclight.Clightdefs <> <> lib
R56:80 VST.veric.SeparationLogic <> <> lib
R98:119 VST.msl.Extensionality <> <> lib
R137:155 compcert.lib.Coqlib <> <> lib
R173:187 VST.msl.Coqlib2 <> <> lib
R189:205 VST.veric.coqlib4 <> <> lib
R207:223 VST.floyd.coqlib3 <> <> lib
R241:261 VST.floyd.jmeq_lemmas <> <> lib
R279:303 VST.floyd.find_nth_tactic <> <> lib
R321:343 VST.veric.juicy_extspec <> <> lib
R361:383 VST.veric.NullExtension <> <> lib
R402:424 VST.floyd.assert_lemmas <> <> lib
prf 500:510 <> exp_derives
binder 528:528 <> A:1
R543:548 VST.msl.seplog <> NatDed class
R550:550 VST.floyd.SeparationLogicFacts <> A:1 var
binder 539:540 <> NA:2
binder 554:554 <> B:3
R570:573 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R574:574 VST.floyd.SeparationLogicFacts <> A:1 var
R569:569 VST.floyd.SeparationLogicFacts <> B:3 var
binder 564:564 <> P:4
binder 566:566 <> Q:5
R593:593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R617:622 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R638:638 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R628:632 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R623:625 VST.msl.seplog <> exp meth
R627:627 VST.floyd.SeparationLogicFacts <> P:4 var
R633:635 VST.msl.seplog <> exp meth
R637:637 VST.floyd.SeparationLogicFacts <> Q:5 var
R603:603 VST.floyd.SeparationLogicFacts <> B:3 var
binder 601:601 <> x:6
R609:613 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R606:606 VST.floyd.SeparationLogicFacts <> P:4 var
R608:608 VST.floyd.SeparationLogicFacts <> x:6 var
R614:614 VST.floyd.SeparationLogicFacts <> Q:5 var
R616:616 VST.floyd.SeparationLogicFacts <> x:6 var
R662:669 VST.msl.seplog <> exp_left meth
R687:695 VST.msl.seplog <> exp_right meth
R662:669 VST.msl.seplog <> exp_left meth
R687:695 VST.msl.seplog <> exp_right meth
prf 777:792 <> closed_wrt_subst
binder 805:805 <> A:7
binder 808:809 <> id:8
binder 811:811 <> e:9
R824:827 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R828:828 VST.floyd.SeparationLogicFacts <> A:7 var
R817:823 VST.veric.mpred <> environ ind
binder 814:814 <> P:10
R857:860 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R873:875 Coq.Init.Logic <> ::type_scope:x_'='_x not
R861:865 VST.veric.seplog <> subst def
R872:872 VST.floyd.SeparationLogicFacts <> P:10 var
R870:870 VST.floyd.SeparationLogicFacts <> e:9 var
R867:868 VST.floyd.SeparationLogicFacts <> id:8 var
R876:876 VST.floyd.SeparationLogicFacts <> P:10 var
R832:846 VST.veric.SeparationLogic <> closed_wrt_vars def
R856:856 VST.floyd.SeparationLogicFacts <> P:10 var
R849:850 Coq.Init.Logic <> eq ind
R852:853 VST.floyd.SeparationLogicFacts <> id:8 var
R901:905 VST.veric.seplog <> subst def
R908:922 VST.veric.SeparationLogic <> closed_wrt_vars def
R987:992 VST.msl.eq_dec <> eq_dec def
R987:992 VST.msl.eq_dec <> eq_dec def
R1022:1028 VST.veric.mpred Map gso thm
R1022:1028 VST.veric.mpred Map gso thm
R1022:1028 VST.veric.mpred Map gso thm
R1022:1028 VST.veric.mpred Map gso thm
prf 1092:1101 <> subst_self
binder 1112:1112 <> A:11
R1132:1135 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1136:1136 VST.floyd.SeparationLogicFacts <> A:11 var
R1125:1131 VST.veric.mpred <> environ ind
binder 1122:1122 <> P:12
binder 1139:1139 <> t:13
binder 1141:1142 <> id:14
binder 1144:1144 <> v:15
binder 1146:1150 <> Delta:16
binder 1152:1154 <> rho:17
R1191:1196 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1217:1222 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1245:1250 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1267:1269 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1251:1255 VST.veric.seplog <> subst def
R1264:1266 VST.floyd.SeparationLogicFacts <> rho:17 var
R1262:1262 VST.floyd.SeparationLogicFacts <> P:12 var
R1260:1260 VST.floyd.SeparationLogicFacts <> v:15 var
R1257:1258 VST.floyd.SeparationLogicFacts <> id:14 var
R1270:1270 VST.floyd.SeparationLogicFacts <> P:12 var
R1272:1274 VST.floyd.SeparationLogicFacts <> rho:17 var
R1228:1230 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1223:1223 VST.floyd.SeparationLogicFacts <> v:15 var
R1225:1227 VST.floyd.SeparationLogicFacts <> rho:17 var
R1231:1237 VST.veric.mpred <> eval_id def
R1242:1244 VST.floyd.SeparationLogicFacts <> rho:17 var
R1239:1240 VST.floyd.SeparationLogicFacts <> id:14 var
R1197:1206 VST.veric.SeparationLogic <> tc_environ def
R1214:1216 VST.floyd.SeparationLogicFacts <> rho:17 var
R1208:1212 VST.floyd.SeparationLogicFacts <> Delta:16 var
R1182:1184 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1159:1159 compcert.lib.Maps <> :::x_'!'_x not
R1176:1179 compcert.lib.Maps <> :::x_'!'_x not
R1180:1181 VST.floyd.SeparationLogicFacts <> id:14 var
R1160:1169 VST.veric.seplog <> temp_types def
R1171:1175 VST.floyd.SeparationLogicFacts <> Delta:16 var
R1185:1188 Coq.Init.Datatypes <> Some constr
R1190:1190 VST.floyd.SeparationLogicFacts <> t:13 var
R1381:1385 VST.veric.seplog <> subst def
R1408:1414 VST.veric.mpred <> env_set def
R1417:1423 VST.veric.mpred <> eval_id def
R1503:1509 VST.veric.mpred Map ext thm
R1503:1509 VST.veric.mpred Map ext thm
R1534:1543 Coq.PArith.BinPos Pos eq_dec thm
R1534:1543 Coq.PArith.BinPos Pos eq_dec thm
R1575:1581 VST.veric.mpred Map gss thm
R1575:1581 VST.veric.mpred Map gss thm
R1575:1581 VST.veric.mpred Map gss thm
R1612:1618 VST.veric.mpred Map gso thm
R1612:1618 VST.veric.mpred Map gso thm
R1612:1618 VST.veric.mpred Map gso thm
def 1656:1659 <> obox
R1669:1677 VST.veric.seplog <> tycontext ind
binder 1662:1666 <> Delta:18
R1684:1688 compcert.common.AST <> ident def
binder 1681:1681 <> i:19
R1702:1705 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1706:1710 VST.veric.mpred <> mpred def
R1695:1701 VST.veric.mpred <> environ ind
binder 1692:1692 <> P:20
R1721:1724 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1725:1729 VST.veric.mpred <> mpred def
R1714:1720 VST.veric.mpred <> environ ind
R1736:1739 VST.msl.seplog <> ::logic:'ALL'_x_'..'_x_','_x not
R1744:1749 VST.msl.seplog <> ::logic:'ALL'_x_'..'_x_','_x not
binder 1740:1740 <> v:21
R1757:1757 compcert.lib.Maps <> :::x_'!'_x not
R1774:1777 compcert.lib.Maps <> :::x_'!'_x not
R1778:1778 VST.floyd.SeparationLogicFacts <> i:19 var
R1758:1767 VST.veric.seplog <> temp_types def
R1769:1773 VST.floyd.SeparationLogicFacts <> Delta:18 var
R1792:1795 Coq.Init.Datatypes <> Some constr
R1818:1822 VST.msl.seplog <> ::logic:x_'-->'_x not
R1802:1805 VST.msl.seplog <> ::logic:'!!'_x not
R1817:1817 VST.msl.seplog <> ::logic:'!!'_x not
R1806:1812 VST.veric.Cop2 <> tc_val' def
R1816:1816 VST.floyd.SeparationLogicFacts <> v:21 var
R1823:1827 VST.veric.seplog <> subst def
R1836:1836 VST.floyd.SeparationLogicFacts <> P:20 var
R1832:1832 VST.veric.lift LiftNotation :::'`'_x not
R1833:1833 VST.floyd.SeparationLogicFacts <> v:21 var
R1829:1829 VST.floyd.SeparationLogicFacts <> i:19 var
R1849:1850 VST.msl.seplog <> TT meth
def 1873:1876 <> odia
R1886:1894 VST.veric.seplog <> tycontext ind
binder 1879:1883 <> Delta:22
R1901:1905 compcert.common.AST <> ident def
binder 1898:1898 <> i:23
R1919:1922 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1923:1927 VST.veric.mpred <> mpred def
R1912:1918 VST.veric.mpred <> environ ind
binder 1909:1909 <> P:24
R1938:1941 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1942:1946 VST.veric.mpred <> mpred def
R1931:1937 VST.veric.mpred <> environ ind
R1953:1955 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R1960:1965 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 1956:1956 <> v:25
R1973:1973 compcert.lib.Maps <> :::x_'!'_x not
R1990:1993 compcert.lib.Maps <> :::x_'!'_x not
R1994:1994 VST.floyd.SeparationLogicFacts <> i:23 var
R1974:1983 VST.veric.seplog <> temp_types def
R1985:1989 VST.floyd.SeparationLogicFacts <> Delta:22 var
R2008:2011 Coq.Init.Datatypes <> Some constr
R2034:2037 VST.msl.seplog <> ::logic:x_'&&'_x not
R2018:2021 VST.msl.seplog <> ::logic:'!!'_x not
R2033:2033 VST.msl.seplog <> ::logic:'!!'_x not
R2022:2028 VST.veric.Cop2 <> tc_val' def
R2032:2032 VST.floyd.SeparationLogicFacts <> v:25 var
R2038:2042 VST.veric.seplog <> subst def
R2051:2051 VST.floyd.SeparationLogicFacts <> P:24 var
R2047:2047 VST.veric.lift LiftNotation :::'`'_x not
R2048:2048 VST.floyd.SeparationLogicFacts <> v:25 var
R2044:2044 VST.floyd.SeparationLogicFacts <> i:23 var
R2064:2065 VST.msl.seplog <> FF meth
prf 2083:2097 <> obox_closed_wrt
binder 2107:2111 <> Delta:26
binder 2113:2114 <> id:27
binder 2116:2116 <> P:28
R2119:2133 VST.veric.SeparationLogic <> closed_wrt_vars def
R2144:2147 VST.floyd.SeparationLogicFacts <> obox def
R2158:2158 VST.floyd.SeparationLogicFacts <> P:28 var
R2155:2156 VST.floyd.SeparationLogicFacts <> id:27 var
R2149:2153 VST.floyd.SeparationLogicFacts <> Delta:26 var
R2136:2137 Coq.Init.Logic <> eq ind
R2139:2140 VST.floyd.SeparationLogicFacts <> id:27 var
R2203:2206 VST.floyd.SeparationLogicFacts <> obox def
R2224:2233 VST.msl.log_normalize <> allp_congr thm
R2224:2233 VST.msl.log_normalize <> allp_congr thm
R2253:2257 VST.veric.seplog <> subst def
R2272:2272 compcert.lib.Maps <> :::x_'!'_x not
R2289:2292 compcert.lib.Maps <> :::x_'!'_x not
R2273:2282 VST.veric.seplog <> temp_types def
R2272:2272 compcert.lib.Maps <> :::x_'!'_x not
R2289:2292 compcert.lib.Maps <> :::x_'!'_x not
R2273:2282 VST.veric.seplog <> temp_types def
R2350:2356 VST.veric.mpred <> env_set def
R2387:2393 VST.veric.mpred Map ext thm
R2387:2393 VST.veric.mpred Map ext thm
R2418:2425 compcert.common.AST <> ident_eq def
R2418:2425 compcert.common.AST <> ident_eq def
R2458:2464 VST.veric.mpred Map gss thm
R2458:2464 VST.veric.mpred Map gss thm
R2458:2464 VST.veric.mpred Map gss thm
R2458:2464 VST.veric.mpred Map gss thm
R2458:2464 VST.veric.mpred Map gss thm
R2486:2492 VST.veric.mpred Map gso thm
R2486:2492 VST.veric.mpred Map gso thm
R2486:2492 VST.veric.mpred Map gso thm
R2486:2492 VST.veric.mpred Map gso thm
R2486:2492 VST.veric.mpred Map gso thm
prf 2567:2581 <> odia_closed_wrt
binder 2591:2595 <> Delta:29
binder 2597:2598 <> id:30
binder 2600:2600 <> P:31
R2603:2617 VST.veric.SeparationLogic <> closed_wrt_vars def
R2628:2631 VST.floyd.SeparationLogicFacts <> odia def
R2642:2642 VST.floyd.SeparationLogicFacts <> P:31 var
R2639:2640 VST.floyd.SeparationLogicFacts <> id:30 var
R2633:2637 VST.floyd.SeparationLogicFacts <> Delta:29 var
R2620:2621 Coq.Init.Logic <> eq ind
R2623:2624 VST.floyd.SeparationLogicFacts <> id:30 var
R2687:2690 VST.floyd.SeparationLogicFacts <> odia def
R2708:2716 VST.msl.log_normalize <> exp_congr thm
R2708:2716 VST.msl.log_normalize <> exp_congr thm
R2739:2739 compcert.lib.Maps <> :::x_'!'_x not
R2756:2759 compcert.lib.Maps <> :::x_'!'_x not
R2740:2749 VST.veric.seplog <> temp_types def
R2739:2739 compcert.lib.Maps <> :::x_'!'_x not
R2756:2759 compcert.lib.Maps <> :::x_'!'_x not
R2740:2749 VST.veric.seplog <> temp_types def
R2791:2795 VST.veric.seplog <> subst def
R2842:2848 VST.veric.mpred <> env_set def
R2879:2885 VST.veric.mpred Map ext thm
R2879:2885 VST.veric.mpred Map ext thm
R2910:2917 compcert.common.AST <> ident_eq def
R2910:2917 compcert.common.AST <> ident_eq def
R2950:2956 VST.veric.mpred Map gss thm
R2950:2956 VST.veric.mpred Map gss thm
R2950:2956 VST.veric.mpred Map gss thm
R2950:2956 VST.veric.mpred Map gss thm
R2950:2956 VST.veric.mpred Map gss thm
R2978:2984 VST.veric.mpred Map gso thm
R2978:2984 VST.veric.mpred Map gso thm
R2978:2984 VST.veric.mpred Map gso thm
R2978:2984 VST.veric.mpred Map gso thm
R2978:2984 VST.veric.mpred Map gso thm
prf 3059:3068 <> subst_obox
binder 3078:3082 <> Delta:32
binder 3084:3085 <> id:33
binder 3087:3087 <> v:34
R3100:3103 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3104:3108 VST.veric.mpred <> mpred def
R3093:3099 VST.veric.mpred <> environ ind
binder 3090:3090 <> P:35
R3143:3145 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3112:3116 VST.veric.seplog <> subst def
R3127:3130 VST.floyd.SeparationLogicFacts <> obox def
R3141:3141 VST.floyd.SeparationLogicFacts <> P:35 var
R3138:3139 VST.floyd.SeparationLogicFacts <> id:33 var
R3132:3136 VST.floyd.SeparationLogicFacts <> Delta:32 var
R3122:3122 VST.veric.lift LiftNotation :::'`'_x not
R3123:3123 VST.floyd.SeparationLogicFacts <> v:34 var
R3118:3119 VST.floyd.SeparationLogicFacts <> id:33 var
R3146:3149 VST.floyd.SeparationLogicFacts <> obox def
R3160:3160 VST.floyd.SeparationLogicFacts <> P:35 var
R3157:3158 VST.floyd.SeparationLogicFacts <> id:33 var
R3151:3155 VST.floyd.SeparationLogicFacts <> Delta:32 var
R3188:3203 VST.floyd.SeparationLogicFacts <> closed_wrt_subst thm
R3188:3203 VST.floyd.SeparationLogicFacts <> closed_wrt_subst thm
R3214:3228 VST.floyd.SeparationLogicFacts <> obox_closed_wrt thm
R3214:3228 VST.floyd.SeparationLogicFacts <> obox_closed_wrt thm
prf 3243:3252 <> subst_odia
binder 3262:3266 <> Delta:36
binder 3268:3269 <> id:37
binder 3271:3271 <> v:38
R3284:3287 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3288:3292 VST.veric.mpred <> mpred def
R3277:3283 VST.veric.mpred <> environ ind
binder 3274:3274 <> P:39
R3327:3329 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3296:3300 VST.veric.seplog <> subst def
R3311:3314 VST.floyd.SeparationLogicFacts <> odia def
R3325:3325 VST.floyd.SeparationLogicFacts <> P:39 var
R3322:3323 VST.floyd.SeparationLogicFacts <> id:37 var
R3316:3320 VST.floyd.SeparationLogicFacts <> Delta:36 var
R3306:3306 VST.veric.lift LiftNotation :::'`'_x not
R3307:3307 VST.floyd.SeparationLogicFacts <> v:38 var
R3302:3303 VST.floyd.SeparationLogicFacts <> id:37 var
R3330:3333 VST.floyd.SeparationLogicFacts <> odia def
R3344:3344 VST.floyd.SeparationLogicFacts <> P:39 var
R3341:3342 VST.floyd.SeparationLogicFacts <> id:37 var
R3335:3339 VST.floyd.SeparationLogicFacts <> Delta:36 var
R3372:3387 VST.floyd.SeparationLogicFacts <> closed_wrt_subst thm
R3372:3387 VST.floyd.SeparationLogicFacts <> closed_wrt_subst thm
R3398:3412 VST.floyd.SeparationLogicFacts <> odia_closed_wrt thm
R3398:3412 VST.floyd.SeparationLogicFacts <> odia_closed_wrt thm
def 3432:3441 <> temp_guard
R3452:3460 VST.veric.seplog <> tycontext ind
binder 3444:3448 <> Delta:40
R3467:3471 compcert.common.AST <> ident def
binder 3464:3464 <> i:41
R3507:3510 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R3485:3485 compcert.lib.Maps <> :::x_'!'_x not
R3502:3505 compcert.lib.Maps <> :::x_'!'_x not
R3506:3506 VST.floyd.SeparationLogicFacts <> i:41 var
R3486:3495 VST.veric.seplog <> temp_types def
R3497:3501 VST.floyd.SeparationLogicFacts <> Delta:40 var
R3511:3514 Coq.Init.Datatypes <> None constr
prf 3524:3534 <> obox_closed
binder 3544:3548 <> Delta:42
binder 3550:3550 <> i:43
binder 3552:3552 <> P:44
R3573:3576 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3601:3604 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3619:3621 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3605:3608 VST.floyd.SeparationLogicFacts <> obox def
R3618:3618 VST.floyd.SeparationLogicFacts <> P:44 var
R3616:3616 VST.floyd.SeparationLogicFacts <> i:43 var
R3610:3614 VST.floyd.SeparationLogicFacts <> Delta:42 var
R3622:3622 VST.floyd.SeparationLogicFacts <> P:44 var
R3577:3591 VST.veric.SeparationLogic <> closed_wrt_vars def
R3600:3600 VST.floyd.SeparationLogicFacts <> P:44 var
R3594:3595 Coq.Init.Logic <> eq ind
R3597:3597 VST.floyd.SeparationLogicFacts <> i:43 var
R3555:3564 VST.floyd.SeparationLogicFacts <> temp_guard def
R3572:3572 VST.floyd.SeparationLogicFacts <> i:43 var
R3566:3570 VST.floyd.SeparationLogicFacts <> Delta:42 var
R3651:3654 VST.floyd.SeparationLogicFacts <> obox def
R3681:3681 compcert.lib.Maps <> :::x_'!'_x not
R3698:3701 compcert.lib.Maps <> :::x_'!'_x not
R3682:3691 VST.veric.seplog <> temp_types def
R3681:3681 compcert.lib.Maps <> :::x_'!'_x not
R3698:3701 compcert.lib.Maps <> :::x_'!'_x not
R3682:3691 VST.veric.seplog <> temp_types def
R3725:3732 VST.msl.seplog <> pred_ext meth
R3725:3732 VST.msl.seplog <> pred_ext meth
R3746:3754 VST.msl.seplog <> allp_left meth
R3758:3763 compcert.common.Values <> Vundef constr
R3746:3754 VST.msl.seplog <> allp_left meth
R3758:3763 compcert.common.Values <> Vundef constr
R3779:3794 VST.floyd.SeparationLogicFacts <> closed_wrt_subst thm
R3779:3794 VST.floyd.SeparationLogicFacts <> closed_wrt_subst thm
R3779:3794 VST.floyd.SeparationLogicFacts <> closed_wrt_subst thm
R3815:3827 VST.msl.log_normalize <> derives_refl' thm
R3815:3827 VST.msl.log_normalize <> derives_refl' thm
R3840:3847 VST.msl.log_normalize <> prop_imp thm
R3850:3863 VST.veric.Cop2 <> tc_val'_Vundef thm
R3840:3847 VST.msl.log_normalize <> prop_imp thm
R3850:3863 VST.veric.Cop2 <> tc_val'_Vundef thm
R3876:3885 VST.msl.seplog <> allp_right meth
R3876:3885 VST.msl.seplog <> allp_right meth
R3908:3923 VST.floyd.SeparationLogicFacts <> closed_wrt_subst thm
R3908:3923 VST.floyd.SeparationLogicFacts <> closed_wrt_subst thm
R3908:3923 VST.floyd.SeparationLogicFacts <> closed_wrt_subst thm
R3944:3953 VST.msl.log_normalize <> imp_right2 thm
R3944:3953 VST.msl.log_normalize <> imp_right2 thm
prf 3968:3976 <> obox_odia
binder 3986:3990 <> Delta:45
binder 3992:3992 <> i:46
binder 3994:3994 <> P:47
R4015:4018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4048:4050 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4019:4022 VST.floyd.SeparationLogicFacts <> obox def
R4033:4036 VST.floyd.SeparationLogicFacts <> odia def
R4046:4046 VST.floyd.SeparationLogicFacts <> P:47 var
R4044:4044 VST.floyd.SeparationLogicFacts <> i:46 var
R4038:4042 VST.floyd.SeparationLogicFacts <> Delta:45 var
R4030:4030 VST.floyd.SeparationLogicFacts <> i:46 var
R4024:4028 VST.floyd.SeparationLogicFacts <> Delta:45 var
R4051:4054 VST.floyd.SeparationLogicFacts <> odia def
R4064:4064 VST.floyd.SeparationLogicFacts <> P:47 var
R4062:4062 VST.floyd.SeparationLogicFacts <> i:46 var
R4056:4060 VST.floyd.SeparationLogicFacts <> Delta:45 var
R3997:4006 VST.floyd.SeparationLogicFacts <> temp_guard def
R4014:4014 VST.floyd.SeparationLogicFacts <> i:46 var
R4008:4012 VST.floyd.SeparationLogicFacts <> Delta:45 var
R4092:4102 VST.floyd.SeparationLogicFacts <> obox_closed thm
R4092:4102 VST.floyd.SeparationLogicFacts <> obox_closed thm
R4119:4133 VST.floyd.SeparationLogicFacts <> odia_closed_wrt thm
R4119:4133 VST.floyd.SeparationLogicFacts <> odia_closed_wrt thm
prf 4148:4153 <> obox_K
binder 4163:4167 <> Delta:48
binder 4169:4169 <> i:49
binder 4171:4171 <> P:50
binder 4173:4173 <> Q:51
R4183:4186 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4201:4205 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R4187:4190 VST.floyd.SeparationLogicFacts <> obox def
R4200:4200 VST.floyd.SeparationLogicFacts <> P:50 var
R4198:4198 VST.floyd.SeparationLogicFacts <> i:49 var
R4192:4196 VST.floyd.SeparationLogicFacts <> Delta:48 var
R4206:4209 VST.floyd.SeparationLogicFacts <> obox def
R4219:4219 VST.floyd.SeparationLogicFacts <> Q:51 var
R4217:4217 VST.floyd.SeparationLogicFacts <> i:49 var
R4211:4215 VST.floyd.SeparationLogicFacts <> Delta:48 var
R4177:4181 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R4176:4176 VST.floyd.SeparationLogicFacts <> P:50 var
R4182:4182 VST.floyd.SeparationLogicFacts <> Q:51 var
R4261:4264 VST.floyd.SeparationLogicFacts <> obox def
R4267:4271 VST.veric.seplog <> subst def
R4289:4300 VST.msl.log_normalize <> allp_derives thm
R4289:4300 VST.msl.log_normalize <> allp_derives thm
R4323:4323 compcert.lib.Maps <> :::x_'!'_x not
R4340:4343 compcert.lib.Maps <> :::x_'!'_x not
R4324:4333 VST.veric.seplog <> temp_types def
R4323:4323 compcert.lib.Maps <> :::x_'!'_x not
R4340:4343 compcert.lib.Maps <> :::x_'!'_x not
R4324:4333 VST.veric.seplog <> temp_types def
R4362:4372 VST.msl.log_normalize <> imp_derives thm
R4362:4372 VST.msl.log_normalize <> imp_derives thm
prf 4393:4398 <> obox_T
binder 4408:4412 <> Delta:52
binder 4414:4414 <> i:53
R4427:4430 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4431:4435 VST.veric.mpred <> mpred def
R4420:4426 VST.veric.mpred <> environ ind
binder 4417:4417 <> P:54
R4459:4464 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4507:4511 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R4489:4492 VST.msl.seplog <> ::logic:x_'&&'_x not
R4465:4469 VST.veric.SeparationLogic <> local def
R4472:4481 VST.veric.SeparationLogic <> tc_environ def
R4483:4487 VST.floyd.SeparationLogicFacts <> Delta:52 var
R4493:4496 VST.floyd.SeparationLogicFacts <> obox def
R4506:4506 VST.floyd.SeparationLogicFacts <> P:54 var
R4504:4504 VST.floyd.SeparationLogicFacts <> i:53 var
R4498:4502 VST.floyd.SeparationLogicFacts <> Delta:52 var
R4512:4512 VST.floyd.SeparationLogicFacts <> P:54 var
R4441:4450 VST.floyd.SeparationLogicFacts <> temp_guard def
R4458:4458 VST.floyd.SeparationLogicFacts <> i:53 var
R4452:4456 VST.floyd.SeparationLogicFacts <> Delta:52 var
R4561:4565 VST.veric.SeparationLogic <> local def
R4568:4572 VST.veric.mpred <> lift1 def
R4658:4661 VST.floyd.SeparationLogicFacts <> obox def
R4683:4683 compcert.lib.Maps <> :::x_'!'_x not
R4700:4703 compcert.lib.Maps <> :::x_'!'_x not
R4684:4693 VST.veric.seplog <> temp_types def
R4683:4683 compcert.lib.Maps <> :::x_'!'_x not
R4700:4703 compcert.lib.Maps <> :::x_'!'_x not
R4684:4693 VST.veric.seplog <> temp_types def
R4738:4744 Coq.Init.Logic <> eq_refl constr
R4738:4744 Coq.Init.Logic <> eq_refl constr
R4785:4793 VST.msl.seplog <> allp_left meth
R4785:4793 VST.msl.seplog <> allp_left meth
R4811:4818 VST.msl.log_normalize <> prop_imp thm
R4811:4818 VST.msl.log_normalize <> prop_imp thm
R4811:4818 VST.msl.log_normalize <> prop_imp thm
R4838:4842 VST.veric.seplog <> subst def
R4853:4865 VST.msl.log_normalize <> derives_refl' thm
R4853:4865 VST.msl.log_normalize <> derives_refl' thm
R4919:4925 VST.veric.mpred <> env_set def
R4959:4965 VST.veric.mpred Map ext thm
R4959:4965 VST.veric.mpred Map ext thm
R4989:4996 compcert.common.AST <> ident_eq def
R4989:4996 compcert.common.AST <> ident_eq def
R5027:5033 VST.veric.mpred Map gss thm
R5027:5033 VST.veric.mpred Map gss thm
R5027:5033 VST.veric.mpred Map gss thm
R5054:5060 VST.veric.mpred Map gso thm
R5054:5060 VST.veric.mpred Map gso thm
R5054:5060 VST.veric.mpred Map gso thm
prf 5093:5098 <> odia_D
binder 5108:5112 <> Delta:55
binder 5114:5114 <> i:56
R5127:5130 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5131:5135 VST.veric.mpred <> mpred def
R5120:5126 VST.veric.mpred <> environ ind
binder 5117:5117 <> P:57
R5159:5164 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5194:5198 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R5189:5192 VST.msl.seplog <> ::logic:x_'&&'_x not
R5165:5169 VST.veric.SeparationLogic <> local def
R5172:5181 VST.veric.SeparationLogic <> tc_environ def
R5183:5187 VST.floyd.SeparationLogicFacts <> Delta:55 var
R5193:5193 VST.floyd.SeparationLogicFacts <> P:57 var
R5199:5202 VST.floyd.SeparationLogicFacts <> odia def
R5212:5212 VST.floyd.SeparationLogicFacts <> P:57 var
R5210:5210 VST.floyd.SeparationLogicFacts <> i:56 var
R5204:5208 VST.floyd.SeparationLogicFacts <> Delta:55 var
R5141:5150 VST.floyd.SeparationLogicFacts <> temp_guard def
R5158:5158 VST.floyd.SeparationLogicFacts <> i:56 var
R5152:5156 VST.floyd.SeparationLogicFacts <> Delta:55 var
R5261:5265 VST.veric.SeparationLogic <> local def
R5268:5272 VST.veric.mpred <> lift1 def
R5358:5361 VST.floyd.SeparationLogicFacts <> odia def
R5383:5383 compcert.lib.Maps <> :::x_'!'_x not
R5400:5403 compcert.lib.Maps <> :::x_'!'_x not
R5384:5393 VST.veric.seplog <> temp_types def
R5383:5383 compcert.lib.Maps <> :::x_'!'_x not
R5400:5403 compcert.lib.Maps <> :::x_'!'_x not
R5384:5393 VST.veric.seplog <> temp_types def
R5438:5444 Coq.Init.Logic <> eq_refl constr
R5438:5444 Coq.Init.Logic <> eq_refl constr
R5485:5493 VST.msl.seplog <> exp_right meth
R5485:5493 VST.msl.seplog <> exp_right meth
R5509:5522 VST.msl.log_normalize <> prop_true_andp thm
R5509:5522 VST.msl.log_normalize <> prop_true_andp thm
R5509:5522 VST.msl.log_normalize <> prop_true_andp thm
R5542:5546 VST.veric.seplog <> subst def
R5557:5569 VST.msl.log_normalize <> derives_refl' thm
R5557:5569 VST.msl.log_normalize <> derives_refl' thm
R5623:5629 VST.veric.mpred <> env_set def
R5663:5669 VST.veric.mpred Map ext thm
R5663:5669 VST.veric.mpred Map ext thm
R5693:5700 compcert.common.AST <> ident_eq def
R5693:5700 compcert.common.AST <> ident_eq def
R5731:5737 VST.veric.mpred Map gss thm
R5731:5737 VST.veric.mpred Map gss thm
R5731:5737 VST.veric.mpred Map gss thm
R5758:5764 VST.veric.mpred Map gso thm
R5758:5764 VST.veric.mpred Map gso thm
R5758:5764 VST.veric.mpred Map gso thm
prf 5797:5817 <> odia_derives_EX_subst
binder 5827:5831 <> Delta:58
binder 5833:5833 <> i:59
binder 5835:5835 <> P:60
R5854:5858 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R5840:5843 VST.floyd.SeparationLogicFacts <> odia def
R5853:5853 VST.floyd.SeparationLogicFacts <> P:60 var
R5851:5851 VST.floyd.SeparationLogicFacts <> i:59 var
R5845:5849 VST.floyd.SeparationLogicFacts <> Delta:58 var
R5859:5861 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R5869:5870 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R5866:5868 compcert.common.Values <> val ind
binder 5862:5862 <> v:61
R5871:5875 VST.veric.seplog <> subst def
R5885:5885 VST.floyd.SeparationLogicFacts <> P:60 var
R5880:5881 VST.veric.lift LiftNotation :::'`'_x not
R5882:5882 VST.floyd.SeparationLogicFacts <> v:61 var
R5877:5877 VST.floyd.SeparationLogicFacts <> i:59 var
R5914:5917 VST.floyd.SeparationLogicFacts <> odia def
R5928:5938 VST.floyd.SeparationLogicFacts <> exp_derives thm
R5928:5938 VST.floyd.SeparationLogicFacts <> exp_derives thm
R5965:5965 compcert.lib.Maps <> :::x_'!'_x not
R5982:5985 compcert.lib.Maps <> :::x_'!'_x not
R5966:5975 VST.veric.seplog <> temp_types def
R5999:6005 VST.msl.log_normalize <> FF_left thm
R5965:5965 compcert.lib.Maps <> :::x_'!'_x not
R5982:5985 compcert.lib.Maps <> :::x_'!'_x not
R5966:5975 VST.veric.seplog <> temp_types def
R5999:6005 VST.msl.log_normalize <> FF_left thm
R6017:6026 VST.msl.seplog <> andp_left2 meth
R6017:6026 VST.msl.seplog <> andp_left2 meth
prf 6047:6056 <> obox_left2
binder 6066:6070 <> Delta:62
binder 6072:6072 <> i:63
binder 6074:6074 <> P:64
binder 6076:6076 <> Q:65
R6099:6104 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6140:6147 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6190:6194 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R6172:6175 VST.msl.seplog <> ::logic:x_'&&'_x not
R6148:6152 VST.veric.SeparationLogic <> local def
R6155:6164 VST.veric.SeparationLogic <> tc_environ def
R6166:6170 VST.floyd.SeparationLogicFacts <> Delta:62 var
R6176:6179 VST.floyd.SeparationLogicFacts <> obox def
R6189:6189 VST.floyd.SeparationLogicFacts <> P:64 var
R6187:6187 VST.floyd.SeparationLogicFacts <> i:63 var
R6181:6185 VST.floyd.SeparationLogicFacts <> Delta:62 var
R6195:6198 VST.floyd.SeparationLogicFacts <> obox def
R6208:6208 VST.floyd.SeparationLogicFacts <> Q:65 var
R6206:6206 VST.floyd.SeparationLogicFacts <> i:63 var
R6200:6204 VST.floyd.SeparationLogicFacts <> Delta:62 var
R6134:6138 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R6129:6132 VST.msl.seplog <> ::logic:x_'&&'_x not
R6105:6109 VST.veric.SeparationLogic <> local def
R6112:6121 VST.veric.SeparationLogic <> tc_environ def
R6123:6127 VST.floyd.SeparationLogicFacts <> Delta:62 var
R6133:6133 VST.floyd.SeparationLogicFacts <> P:64 var
R6139:6139 VST.floyd.SeparationLogicFacts <> Q:65 var
R6081:6090 VST.floyd.SeparationLogicFacts <> temp_guard def
R6098:6098 VST.floyd.SeparationLogicFacts <> i:63 var
R6092:6096 VST.floyd.SeparationLogicFacts <> Delta:62 var
R6237:6241 VST.veric.SeparationLogic <> local def
R6244:6248 VST.veric.mpred <> lift1 def
R6298:6301 VST.floyd.SeparationLogicFacts <> obox def
R6319:6330 VST.msl.log_normalize <> allp_derives thm
R6319:6330 VST.msl.log_normalize <> allp_derives thm
R6355:6355 compcert.lib.Maps <> :::x_'!'_x not
R6372:6375 compcert.lib.Maps <> :::x_'!'_x not
R6356:6365 VST.veric.seplog <> temp_types def
R6355:6355 compcert.lib.Maps <> :::x_'!'_x not
R6372:6375 compcert.lib.Maps <> :::x_'!'_x not
R6356:6365 VST.veric.seplog <> temp_types def
R6406:6421 VST.msl.seplog <> imp_andp_adjoint meth
R6406:6421 VST.msl.seplog <> imp_andp_adjoint meth
R6406:6421 VST.msl.seplog <> imp_andp_adjoint meth
R6446:6447 VST.msl.seplog <> TT meth
R6458:6465 VST.msl.log_normalize <> prop_imp thm
R6458:6465 VST.msl.log_normalize <> prop_imp thm
R6458:6465 VST.msl.log_normalize <> prop_imp thm
R6485:6489 VST.veric.seplog <> subst def
R6523:6529 VST.veric.mpred <> env_set def
R6523:6529 VST.veric.mpred <> env_set def
R6567:6576 VST.veric.SeparationLogic <> tc_environ def
R6585:6591 VST.veric.mpred <> env_set def
R6567:6576 VST.veric.SeparationLogic <> tc_environ def
R6585:6591 VST.veric.mpred <> env_set def
R6819:6826 compcert.common.AST <> ident_eq def
R6819:6826 compcert.common.AST <> ident_eq def
R6909:6915 VST.veric.mpred Map gss thm
R6909:6915 VST.veric.mpred Map gss thm
R6909:6915 VST.veric.mpred Map gss thm
R6967:6973 VST.veric.mpred Map gso thm
R6967:6973 VST.veric.mpred Map gso thm
R6967:6973 VST.veric.mpred Map gso thm
prf 7038:7048 <> obox_left2'
binder 7058:7062 <> Delta:66
binder 7064:7064 <> i:67
binder 7066:7066 <> P:68
binder 7068:7068 <> Q:69
R7091:7096 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7155:7162 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7228:7232 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R7187:7191 VST.msl.seplog <> ::logic:x_'&&'_x not
R7227:7227 VST.msl.seplog <> ::logic:x_'&&'_x not
R7163:7167 VST.veric.SeparationLogic <> local def
R7170:7179 VST.veric.SeparationLogic <> tc_environ def
R7181:7185 VST.floyd.SeparationLogicFacts <> Delta:66 var
R7209:7212 VST.msl.seplog <> ::logic:x_'&&'_x not
R7192:7202 VST.veric.SeparationLogic <> allp_fun_id def
R7204:7208 VST.floyd.SeparationLogicFacts <> Delta:66 var
R7213:7216 VST.floyd.SeparationLogicFacts <> obox def
R7226:7226 VST.floyd.SeparationLogicFacts <> P:68 var
R7224:7224 VST.floyd.SeparationLogicFacts <> i:67 var
R7218:7222 VST.floyd.SeparationLogicFacts <> Delta:66 var
R7233:7236 VST.floyd.SeparationLogicFacts <> obox def
R7246:7246 VST.floyd.SeparationLogicFacts <> Q:69 var
R7244:7244 VST.floyd.SeparationLogicFacts <> i:67 var
R7238:7242 VST.floyd.SeparationLogicFacts <> Delta:66 var
R7149:7153 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R7121:7125 VST.msl.seplog <> ::logic:x_'&&'_x not
R7148:7148 VST.msl.seplog <> ::logic:x_'&&'_x not
R7097:7101 VST.veric.SeparationLogic <> local def
R7104:7113 VST.veric.SeparationLogic <> tc_environ def
R7115:7119 VST.floyd.SeparationLogicFacts <> Delta:66 var
R7143:7146 VST.msl.seplog <> ::logic:x_'&&'_x not
R7126:7136 VST.veric.SeparationLogic <> allp_fun_id def
R7138:7142 VST.floyd.SeparationLogicFacts <> Delta:66 var
R7147:7147 VST.floyd.SeparationLogicFacts <> P:68 var
R7154:7154 VST.floyd.SeparationLogicFacts <> Q:69 var
R7073:7082 VST.floyd.SeparationLogicFacts <> temp_guard def
R7090:7090 VST.floyd.SeparationLogicFacts <> i:67 var
R7084:7088 VST.floyd.SeparationLogicFacts <> Delta:66 var
R7275:7279 VST.veric.SeparationLogic <> local def
R7282:7286 VST.veric.mpred <> lift1 def
R7336:7339 VST.floyd.SeparationLogicFacts <> obox def
R7357:7366 VST.msl.seplog <> allp_right meth
R7357:7366 VST.msl.seplog <> allp_right meth
R7389:7397 VST.msl.log_normalize <> andp_comm thm
R7406:7421 VST.msl.seplog <> imp_andp_adjoint meth
R7389:7397 VST.msl.log_normalize <> andp_comm thm
R7389:7397 VST.msl.log_normalize <> andp_comm thm
R7406:7421 VST.msl.seplog <> imp_andp_adjoint meth
R7433:7441 VST.msl.seplog <> allp_left meth
R7433:7441 VST.msl.seplog <> allp_left meth
R7457:7472 VST.msl.seplog <> imp_andp_adjoint meth
R7483:7491 VST.msl.log_normalize <> andp_comm thm
R7457:7472 VST.msl.seplog <> imp_andp_adjoint meth
R7483:7491 VST.msl.log_normalize <> andp_comm thm
R7483:7491 VST.msl.log_normalize <> andp_comm thm
R7506:7506 compcert.lib.Maps <> :::x_'!'_x not
R7523:7526 compcert.lib.Maps <> :::x_'!'_x not
R7507:7516 VST.veric.seplog <> temp_types def
R7547:7556 VST.msl.seplog <> prop_right meth
R7506:7506 compcert.lib.Maps <> :::x_'!'_x not
R7523:7526 compcert.lib.Maps <> :::x_'!'_x not
R7507:7516 VST.veric.seplog <> temp_types def
R7547:7556 VST.msl.seplog <> prop_right meth
R7579:7594 VST.msl.seplog <> imp_andp_adjoint meth
R7579:7594 VST.msl.seplog <> imp_andp_adjoint meth
R7579:7594 VST.msl.seplog <> imp_andp_adjoint meth
R7619:7620 VST.msl.seplog <> TT meth
R7631:7638 VST.msl.log_normalize <> prop_imp thm
R7631:7638 VST.msl.log_normalize <> prop_imp thm
R7631:7638 VST.msl.log_normalize <> prop_imp thm
R7658:7662 VST.veric.seplog <> subst def
R7696:7702 VST.veric.mpred <> env_set def
R7696:7702 VST.veric.mpred <> env_set def
R7740:7749 VST.veric.SeparationLogic <> tc_environ def
R7758:7764 VST.veric.mpred <> env_set def
R7740:7749 VST.veric.SeparationLogic <> tc_environ def
R7758:7764 VST.veric.mpred <> env_set def
R7992:7999 compcert.common.AST <> ident_eq def
R7992:7999 compcert.common.AST <> ident_eq def
R8082:8088 VST.veric.mpred Map gss thm
R8082:8088 VST.veric.mpred Map gss thm
R8082:8088 VST.veric.mpred Map gss thm
R8140:8146 VST.veric.mpred Map gso thm
R8140:8146 VST.veric.mpred Map gso thm
R8140:8146 VST.veric.mpred Map gso thm
prf 8211:8221 <> obox_sepcon
binder 8231:8235 <> Delta:70
binder 8237:8237 <> i:71
binder 8239:8239 <> P:72
binder 8241:8241 <> Q:73
R8277:8281 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R8260:8262 VST.msl.seplog <> ::logic:x_'*'_x not
R8246:8249 VST.floyd.SeparationLogicFacts <> obox def
R8259:8259 VST.floyd.SeparationLogicFacts <> P:72 var
R8257:8257 VST.floyd.SeparationLogicFacts <> i:71 var
R8251:8255 VST.floyd.SeparationLogicFacts <> Delta:70 var
R8263:8266 VST.floyd.SeparationLogicFacts <> obox def
R8276:8276 VST.floyd.SeparationLogicFacts <> Q:73 var
R8274:8274 VST.floyd.SeparationLogicFacts <> i:71 var
R8268:8272 VST.floyd.SeparationLogicFacts <> Delta:70 var
R8282:8285 VST.floyd.SeparationLogicFacts <> obox def
R8297:8299 VST.msl.seplog <> ::logic:x_'*'_x not
R8296:8296 VST.floyd.SeparationLogicFacts <> P:72 var
R8300:8300 VST.floyd.SeparationLogicFacts <> Q:73 var
R8293:8293 VST.floyd.SeparationLogicFacts <> i:71 var
R8287:8291 VST.floyd.SeparationLogicFacts <> Delta:70 var
R8330:8333 VST.floyd.SeparationLogicFacts <> obox def
R8344:8353 VST.msl.seplog <> allp_right meth
R8344:8353 VST.msl.seplog <> allp_right meth
R8376:8394 VST.msl.seplog <> wand_sepcon_adjoint meth
R8376:8394 VST.msl.seplog <> wand_sepcon_adjoint meth
R8406:8414 VST.msl.seplog <> allp_left meth
R8406:8414 VST.msl.seplog <> allp_left meth
R8430:8448 VST.msl.seplog <> wand_sepcon_adjoint meth
R8430:8448 VST.msl.seplog <> wand_sepcon_adjoint meth
R8461:8471 VST.msl.seplog <> sepcon_comm meth
R8461:8471 VST.msl.seplog <> sepcon_comm meth
R8461:8471 VST.msl.seplog <> sepcon_comm meth
R8482:8500 VST.msl.seplog <> wand_sepcon_adjoint meth
R8482:8500 VST.msl.seplog <> wand_sepcon_adjoint meth
R8512:8520 VST.msl.seplog <> allp_left meth
R8512:8520 VST.msl.seplog <> allp_left meth
R8536:8554 VST.msl.seplog <> wand_sepcon_adjoint meth
R8536:8554 VST.msl.seplog <> wand_sepcon_adjoint meth
R8567:8577 VST.msl.seplog <> sepcon_comm meth
R8567:8577 VST.msl.seplog <> sepcon_comm meth
R8567:8577 VST.msl.seplog <> sepcon_comm meth
R8592:8592 compcert.lib.Maps <> :::x_'!'_x not
R8609:8612 compcert.lib.Maps <> :::x_'!'_x not
R8593:8602 VST.veric.seplog <> temp_types def
R8626:8633 VST.msl.log_normalize <> TT_right thm
R8592:8592 compcert.lib.Maps <> :::x_'!'_x not
R8609:8612 compcert.lib.Maps <> :::x_'!'_x not
R8593:8602 VST.veric.seplog <> temp_types def
R8626:8633 VST.msl.log_normalize <> TT_right thm
R8645:8660 VST.msl.seplog <> imp_andp_adjoint meth
R8645:8660 VST.msl.seplog <> imp_andp_adjoint meth
R8685:8686 VST.msl.seplog <> TT meth
R8700:8707 VST.msl.log_normalize <> prop_imp thm
R8700:8707 VST.msl.log_normalize <> prop_imp thm
R8700:8707 VST.msl.log_normalize <> prop_imp thm
R8700:8707 VST.msl.log_normalize <> prop_imp thm
R8700:8707 VST.msl.log_normalize <> prop_imp thm
R8728:8739 VST.floyd.assert_lemmas <> subst_sepcon thm
R8728:8739 VST.floyd.assert_lemmas <> subst_sepcon thm
R8728:8739 VST.floyd.assert_lemmas <> subst_sepcon thm
def 8769:8775 <> oboxopt
binder 8777:8781 <> Delta:74
binder 8783:8785 <> ret:75
binder 8787:8787 <> P:76
R8800:8802 VST.floyd.SeparationLogicFacts <> ret:75 var
R8813:8816 Coq.Init.Datatypes <> Some constr
R8824:8827 VST.floyd.SeparationLogicFacts <> obox def
R8838:8838 VST.floyd.SeparationLogicFacts <> P:76 var
R8829:8833 VST.floyd.SeparationLogicFacts <> Delta:74 var
R8849:8849 VST.floyd.SeparationLogicFacts <> P:76 var
def 8870:8876 <> odiaopt
binder 8878:8882 <> Delta:78
binder 8884:8886 <> ret:79
binder 8888:8888 <> P:80
R8901:8903 VST.floyd.SeparationLogicFacts <> ret:79 var
R8914:8917 Coq.Init.Datatypes <> Some constr
R8925:8928 VST.floyd.SeparationLogicFacts <> odia def
R8939:8939 VST.floyd.SeparationLogicFacts <> P:80 var
R8930:8934 VST.floyd.SeparationLogicFacts <> Delta:78 var
R8950:8950 VST.floyd.SeparationLogicFacts <> P:80 var
def 8971:8984 <> temp_guard_opt
R8995:9003 VST.veric.seplog <> tycontext ind
binder 8987:8991 <> Delta:82
R9010:9015 Coq.Init.Datatypes <> option ind
R9017:9021 compcert.common.AST <> ident def
binder 9007:9007 <> i:83
R9041:9041 VST.floyd.SeparationLogicFacts <> i:83 var
R9052:9055 Coq.Init.Datatypes <> Some constr
R9062:9071 VST.floyd.SeparationLogicFacts <> temp_guard def
R9079:9079 VST.floyd.SeparationLogicFacts <> i:83 var
R9073:9077 VST.floyd.SeparationLogicFacts <> Delta:82 var
R9085:9088 Coq.Init.Datatypes <> None constr
R9093:9096 Coq.Init.Logic <> True ind
prf 9112:9127 <> substopt_oboxopt
binder 9137:9141 <> Delta:85
binder 9143:9144 <> id:86
binder 9146:9146 <> v:87
R9159:9162 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9163:9167 VST.veric.mpred <> mpred def
R9152:9158 VST.veric.mpred <> environ ind
binder 9149:9149 <> P:88
R9208:9210 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9171:9178 VST.veric.SeparationLogic <> substopt def
R9189:9195 VST.floyd.SeparationLogicFacts <> oboxopt def
R9206:9206 VST.floyd.SeparationLogicFacts <> P:88 var
R9203:9204 VST.floyd.SeparationLogicFacts <> id:86 var
R9197:9201 VST.floyd.SeparationLogicFacts <> Delta:85 var
R9184:9184 VST.veric.lift LiftNotation :::'`'_x not
R9185:9185 VST.floyd.SeparationLogicFacts <> v:87 var
R9180:9181 VST.floyd.SeparationLogicFacts <> id:86 var
R9211:9217 VST.floyd.SeparationLogicFacts <> oboxopt def
R9228:9228 VST.floyd.SeparationLogicFacts <> P:88 var
R9225:9226 VST.floyd.SeparationLogicFacts <> id:86 var
R9219:9223 VST.floyd.SeparationLogicFacts <> Delta:85 var
R9281:9290 VST.floyd.SeparationLogicFacts <> subst_obox thm
R9281:9290 VST.floyd.SeparationLogicFacts <> subst_obox thm
prf 9305:9318 <> oboxopt_closed
binder 9328:9332 <> Delta:89
binder 9334:9334 <> i:90
binder 9336:9336 <> P:91
R9363:9368 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9480:9485 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9503:9505 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9486:9492 VST.floyd.SeparationLogicFacts <> oboxopt def
R9502:9502 VST.floyd.SeparationLogicFacts <> P:91 var
R9500:9500 VST.floyd.SeparationLogicFacts <> i:90 var
R9494:9498 VST.floyd.SeparationLogicFacts <> Delta:89 var
R9506:9506 VST.floyd.SeparationLogicFacts <> P:91 var
R9369:9383 VST.veric.SeparationLogic <> closed_wrt_vars def
R9479:9479 VST.floyd.SeparationLogicFacts <> P:91 var
binder 9390:9391 <> id:92
R9396:9401 VST.veric.coqlib4 <> isSome def
R9403:9403 compcert.lib.Maps <> :::x_'!'_x not
R9471:9474 compcert.lib.Maps <> :::x_'!'_x not
R9475:9476 VST.floyd.SeparationLogicFacts <> id:92 var
R9410:9410 VST.floyd.SeparationLogicFacts <> i:90 var
R9417:9420 Coq.Init.Datatypes <> Some constr
R9428:9439 VST.veric.mpred <> insert_idset def
R9444:9449 VST.veric.mpred <> idset0 def
R9453:9456 Coq.Init.Datatypes <> None constr
R9461:9466 VST.veric.mpred <> idset0 def
R9341:9354 VST.floyd.SeparationLogicFacts <> temp_guard_opt def
R9362:9362 VST.floyd.SeparationLogicFacts <> i:90 var
R9356:9360 VST.floyd.SeparationLogicFacts <> Delta:89 var
R9572:9582 VST.floyd.SeparationLogicFacts <> obox_closed thm
R9572:9582 VST.floyd.SeparationLogicFacts <> obox_closed thm
R9604:9605 Coq.Init.Logic <> eq ind
R9626:9630 compcert.common.AST <> ident def
binder 9621:9622 <> id:94
R9635:9640 VST.veric.coqlib4 <> isSome def
R9642:9642 compcert.lib.Maps <> :::x_'!'_x not
R9664:9667 compcert.lib.Maps <> :::x_'!'_x not
R9668:9669 VST.floyd.SeparationLogicFacts <> id:94 var
R9643:9654 VST.veric.mpred <> insert_idset def
R9658:9663 VST.veric.mpred <> idset0 def
R9604:9605 Coq.Init.Logic <> eq ind
R9626:9630 compcert.common.AST <> ident def
binder 9621:9622 <> id:95
R9635:9640 VST.veric.coqlib4 <> isSome def
R9642:9642 compcert.lib.Maps <> :::x_'!'_x not
R9664:9667 compcert.lib.Maps <> :::x_'!'_x not
R9668:9669 VST.floyd.SeparationLogicFacts <> id:95 var
R9643:9654 VST.veric.mpred <> insert_idset def
R9658:9663 VST.veric.mpred <> idset0 def
R9714:9725 VST.veric.mpred <> insert_idset def
R9742:9749 compcert.common.AST <> ident_eq def
R9742:9749 compcert.common.AST <> ident_eq def
R9785:9793 compcert.lib.Maps PTree gss thm
R9785:9793 compcert.lib.Maps PTree gss thm
R9785:9793 compcert.lib.Maps PTree gss thm
R9821:9828 VST.msl.Axioms <> prop_ext prfax
R9821:9828 VST.msl.Axioms <> prop_ext prfax
R9858:9866 compcert.lib.Maps PTree gso thm
R9858:9866 compcert.lib.Maps PTree gso thm
R9858:9866 compcert.lib.Maps PTree gso thm
R9890:9895 VST.veric.mpred <> idset0 def
R9912:9923 compcert.lib.Maps PTree gempty thm
R9912:9923 compcert.lib.Maps PTree gempty thm
R9912:9923 compcert.lib.Maps PTree gempty thm
R9954:9957 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R9954:9957 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R9989:9996 VST.msl.Axioms <> prop_ext prfax
R9989:9996 VST.msl.Axioms <> prop_ext prfax
prf 10034:10042 <> oboxopt_T
binder 10052:10056 <> Delta:96
binder 10058:10058 <> i:97
R10071:10074 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10075:10079 VST.veric.mpred <> mpred def
R10064:10070 VST.veric.mpred <> environ ind
binder 10061:10061 <> P:98
R10107:10112 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10158:10162 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R10137:10140 VST.msl.seplog <> ::logic:x_'&&'_x not
R10113:10117 VST.veric.SeparationLogic <> local def
R10120:10129 VST.veric.SeparationLogic <> tc_environ def
R10131:10135 VST.floyd.SeparationLogicFacts <> Delta:96 var
R10141:10147 VST.floyd.SeparationLogicFacts <> oboxopt def
R10157:10157 VST.floyd.SeparationLogicFacts <> P:98 var
R10155:10155 VST.floyd.SeparationLogicFacts <> i:97 var
R10149:10153 VST.floyd.SeparationLogicFacts <> Delta:96 var
R10163:10163 VST.floyd.SeparationLogicFacts <> P:98 var
R10085:10098 VST.floyd.SeparationLogicFacts <> temp_guard_opt def
R10106:10106 VST.floyd.SeparationLogicFacts <> i:97 var
R10100:10104 VST.floyd.SeparationLogicFacts <> Delta:96 var
R10206:10215 VST.msl.seplog <> andp_left2 meth
R10218:10229 VST.msl.seplog <> derives_refl meth
R10206:10215 VST.msl.seplog <> andp_left2 meth
R10218:10229 VST.msl.seplog <> derives_refl meth
R10241:10246 VST.floyd.SeparationLogicFacts <> obox_T thm
R10241:10246 VST.floyd.SeparationLogicFacts <> obox_T thm
prf 10267:10275 <> odiaopt_D
binder 10285:10289 <> Delta:99
binder 10291:10291 <> i:100
R10304:10307 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10308:10312 VST.veric.mpred <> mpred def
R10297:10303 VST.veric.mpred <> environ ind
binder 10294:10294 <> P:101
R10340:10345 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10375:10379 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R10370:10373 VST.msl.seplog <> ::logic:x_'&&'_x not
R10346:10350 VST.veric.SeparationLogic <> local def
R10353:10362 VST.veric.SeparationLogic <> tc_environ def
R10364:10368 VST.floyd.SeparationLogicFacts <> Delta:99 var
R10374:10374 VST.floyd.SeparationLogicFacts <> P:101 var
R10380:10386 VST.floyd.SeparationLogicFacts <> odiaopt def
R10396:10396 VST.floyd.SeparationLogicFacts <> P:101 var
R10394:10394 VST.floyd.SeparationLogicFacts <> i:100 var
R10388:10392 VST.floyd.SeparationLogicFacts <> Delta:99 var
R10318:10331 VST.floyd.SeparationLogicFacts <> temp_guard_opt def
R10339:10339 VST.floyd.SeparationLogicFacts <> i:100 var
R10333:10337 VST.floyd.SeparationLogicFacts <> Delta:99 var
R10439:10448 VST.msl.seplog <> andp_left2 meth
R10451:10462 VST.msl.seplog <> derives_refl meth
R10439:10448 VST.msl.seplog <> andp_left2 meth
R10451:10462 VST.msl.seplog <> derives_refl meth
R10474:10479 VST.floyd.SeparationLogicFacts <> odia_D thm
R10474:10479 VST.floyd.SeparationLogicFacts <> odia_D thm
prf 10500:10514 <> oboxopt_odiaopt
binder 10524:10528 <> Delta:102
binder 10530:10530 <> i:103
binder 10532:10532 <> P:104
R10557:10560 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10596:10598 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10561:10567 VST.floyd.SeparationLogicFacts <> oboxopt def
R10578:10584 VST.floyd.SeparationLogicFacts <> odiaopt def
R10594:10594 VST.floyd.SeparationLogicFacts <> P:104 var
R10592:10592 VST.floyd.SeparationLogicFacts <> i:103 var
R10586:10590 VST.floyd.SeparationLogicFacts <> Delta:102 var
R10575:10575 VST.floyd.SeparationLogicFacts <> i:103 var
R10569:10573 VST.floyd.SeparationLogicFacts <> Delta:102 var
R10599:10605 VST.floyd.SeparationLogicFacts <> odiaopt def
R10615:10615 VST.floyd.SeparationLogicFacts <> P:104 var
R10613:10613 VST.floyd.SeparationLogicFacts <> i:103 var
R10607:10611 VST.floyd.SeparationLogicFacts <> Delta:102 var
R10535:10548 VST.floyd.SeparationLogicFacts <> temp_guard_opt def
R10556:10556 VST.floyd.SeparationLogicFacts <> i:103 var
R10550:10554 VST.floyd.SeparationLogicFacts <> Delta:102 var
R10663:10671 VST.floyd.SeparationLogicFacts <> obox_odia thm
R10663:10671 VST.floyd.SeparationLogicFacts <> obox_odia thm
prf 10692:10700 <> oboxopt_K
binder 10710:10714 <> Delta:105
binder 10716:10716 <> i:106
binder 10718:10718 <> P:107
binder 10720:10720 <> Q:108
R10730:10733 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10751:10755 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R10734:10740 VST.floyd.SeparationLogicFacts <> oboxopt def
R10750:10750 VST.floyd.SeparationLogicFacts <> P:107 var
R10748:10748 VST.floyd.SeparationLogicFacts <> i:106 var
R10742:10746 VST.floyd.SeparationLogicFacts <> Delta:105 var
R10756:10762 VST.floyd.SeparationLogicFacts <> oboxopt def
R10772:10772 VST.floyd.SeparationLogicFacts <> Q:108 var
R10770:10770 VST.floyd.SeparationLogicFacts <> i:106 var
R10764:10768 VST.floyd.SeparationLogicFacts <> Delta:105 var
R10724:10728 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R10723:10723 VST.floyd.SeparationLogicFacts <> P:107 var
R10729:10729 VST.floyd.SeparationLogicFacts <> Q:108 var
R10833:10838 VST.floyd.SeparationLogicFacts <> obox_K thm
R10833:10838 VST.floyd.SeparationLogicFacts <> obox_K thm
prf 10859:10885 <> odiaopt_derives_EX_substopt
binder 10895:10899 <> Delta:109
binder 10901:10901 <> i:110
binder 10903:10903 <> P:111
R10925:10929 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R10908:10914 VST.floyd.SeparationLogicFacts <> odiaopt def
R10924:10924 VST.floyd.SeparationLogicFacts <> P:111 var
R10922:10922 VST.floyd.SeparationLogicFacts <> i:110 var
R10916:10920 VST.floyd.SeparationLogicFacts <> Delta:109 var
R10930:10932 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R10940:10941 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R10937:10939 compcert.common.Values <> val ind
binder 10933:10933 <> v:112
R10942:10949 VST.veric.SeparationLogic <> substopt def
R10959:10959 VST.floyd.SeparationLogicFacts <> P:111 var
R10954:10955 VST.veric.lift LiftNotation :::'`'_x not
R10956:10956 VST.floyd.SeparationLogicFacts <> v:112 var
R10951:10951 VST.floyd.SeparationLogicFacts <> i:110 var
R11000:11020 VST.floyd.SeparationLogicFacts <> odia_derives_EX_subst thm
R11000:11020 VST.floyd.SeparationLogicFacts <> odia_derives_EX_subst thm
R11052:11060 VST.msl.seplog <> exp_right meth
R11062:11067 compcert.common.Values <> Vundef constr
R11052:11060 VST.msl.seplog <> exp_right meth
R11062:11067 compcert.common.Values <> Vundef constr
prf 11089:11101 <> oboxopt_left2
binder 11111:11115 <> Delta:113
binder 11117:11117 <> i:114
binder 11119:11119 <> P:115
binder 11121:11121 <> Q:116
R11148:11153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11189:11196 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11242:11246 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R11221:11224 VST.msl.seplog <> ::logic:x_'&&'_x not
R11197:11201 VST.veric.SeparationLogic <> local def
R11204:11213 VST.veric.SeparationLogic <> tc_environ def
R11215:11219 VST.floyd.SeparationLogicFacts <> Delta:113 var
R11225:11231 VST.floyd.SeparationLogicFacts <> oboxopt def
R11241:11241 VST.floyd.SeparationLogicFacts <> P:115 var
R11239:11239 VST.floyd.SeparationLogicFacts <> i:114 var
R11233:11237 VST.floyd.SeparationLogicFacts <> Delta:113 var
R11247:11253 VST.floyd.SeparationLogicFacts <> oboxopt def
R11263:11263 VST.floyd.SeparationLogicFacts <> Q:116 var
R11261:11261 VST.floyd.SeparationLogicFacts <> i:114 var
R11255:11259 VST.floyd.SeparationLogicFacts <> Delta:113 var
R11183:11187 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R11178:11181 VST.msl.seplog <> ::logic:x_'&&'_x not
R11154:11158 VST.veric.SeparationLogic <> local def
R11161:11170 VST.veric.SeparationLogic <> tc_environ def
R11172:11176 VST.floyd.SeparationLogicFacts <> Delta:113 var
R11182:11182 VST.floyd.SeparationLogicFacts <> P:115 var
R11188:11188 VST.floyd.SeparationLogicFacts <> Q:116 var
R11126:11139 VST.floyd.SeparationLogicFacts <> temp_guard_opt def
R11147:11147 VST.floyd.SeparationLogicFacts <> i:114 var
R11141:11145 VST.floyd.SeparationLogicFacts <> Delta:113 var
R11304:11313 VST.floyd.SeparationLogicFacts <> obox_left2 thm
R11304:11313 VST.floyd.SeparationLogicFacts <> obox_left2 thm
prf 11345:11358 <> oboxopt_left2'
binder 11368:11372 <> Delta:117
binder 11374:11374 <> i:118
binder 11376:11376 <> P:119
binder 11378:11378 <> Q:120
R11405:11410 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11469:11476 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11545:11549 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R11501:11505 VST.msl.seplog <> ::logic:x_'&&'_x not
R11544:11544 VST.msl.seplog <> ::logic:x_'&&'_x not
R11477:11481 VST.veric.SeparationLogic <> local def
R11484:11493 VST.veric.SeparationLogic <> tc_environ def
R11495:11499 VST.floyd.SeparationLogicFacts <> Delta:117 var
R11523:11526 VST.msl.seplog <> ::logic:x_'&&'_x not
R11506:11516 VST.veric.SeparationLogic <> allp_fun_id def
R11518:11522 VST.floyd.SeparationLogicFacts <> Delta:117 var
R11527:11533 VST.floyd.SeparationLogicFacts <> oboxopt def
R11543:11543 VST.floyd.SeparationLogicFacts <> P:119 var
R11541:11541 VST.floyd.SeparationLogicFacts <> i:118 var
R11535:11539 VST.floyd.SeparationLogicFacts <> Delta:117 var
R11550:11556 VST.floyd.SeparationLogicFacts <> oboxopt def
R11566:11566 VST.floyd.SeparationLogicFacts <> Q:120 var
R11564:11564 VST.floyd.SeparationLogicFacts <> i:118 var
R11558:11562 VST.floyd.SeparationLogicFacts <> Delta:117 var
R11463:11467 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R11435:11439 VST.msl.seplog <> ::logic:x_'&&'_x not
R11462:11462 VST.msl.seplog <> ::logic:x_'&&'_x not
R11411:11415 VST.veric.SeparationLogic <> local def
R11418:11427 VST.veric.SeparationLogic <> tc_environ def
R11429:11433 VST.floyd.SeparationLogicFacts <> Delta:117 var
R11457:11460 VST.msl.seplog <> ::logic:x_'&&'_x not
R11440:11450 VST.veric.SeparationLogic <> allp_fun_id def
R11452:11456 VST.floyd.SeparationLogicFacts <> Delta:117 var
R11461:11461 VST.floyd.SeparationLogicFacts <> P:119 var
R11468:11468 VST.floyd.SeparationLogicFacts <> Q:120 var
R11383:11396 VST.floyd.SeparationLogicFacts <> temp_guard_opt def
R11404:11404 VST.floyd.SeparationLogicFacts <> i:118 var
R11398:11402 VST.floyd.SeparationLogicFacts <> Delta:117 var
R11607:11617 VST.floyd.SeparationLogicFacts <> obox_left2' thm
R11607:11617 VST.floyd.SeparationLogicFacts <> obox_left2' thm
prf 11649:11662 <> oboxopt_sepcon
binder 11672:11676 <> Delta:121
binder 11678:11678 <> i:122
binder 11680:11680 <> P:123
binder 11682:11682 <> Q:124
R11724:11728 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R11704:11706 VST.msl.seplog <> ::logic:x_'*'_x not
R11687:11693 VST.floyd.SeparationLogicFacts <> oboxopt def
R11703:11703 VST.floyd.SeparationLogicFacts <> P:123 var
R11701:11701 VST.floyd.SeparationLogicFacts <> i:122 var
R11695:11699 VST.floyd.SeparationLogicFacts <> Delta:121 var
R11707:11713 VST.floyd.SeparationLogicFacts <> oboxopt def
R11723:11723 VST.floyd.SeparationLogicFacts <> Q:124 var
R11721:11721 VST.floyd.SeparationLogicFacts <> i:122 var
R11715:11719 VST.floyd.SeparationLogicFacts <> Delta:121 var
R11729:11735 VST.floyd.SeparationLogicFacts <> oboxopt def
R11747:11749 VST.msl.seplog <> ::logic:x_'*'_x not
R11746:11746 VST.floyd.SeparationLogicFacts <> P:123 var
R11750:11750 VST.floyd.SeparationLogicFacts <> Q:124 var
R11743:11743 VST.floyd.SeparationLogicFacts <> i:122 var
R11737:11741 VST.floyd.SeparationLogicFacts <> Delta:121 var
R11795:11805 VST.floyd.SeparationLogicFacts <> obox_sepcon thm
R11795:11805 VST.floyd.SeparationLogicFacts <> obox_sepcon thm
R11818:11829 VST.msl.seplog <> derives_refl meth
R11818:11829 VST.msl.seplog <> derives_refl meth
modtype 11850:11899 <> CLIGHT_SEPARATION_HOARE_LOGIC_COMPLETE_CONSEQUENCE
R11928:11960 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 11918:11925 <> CLIGHT_SEPARATION_HOARE_LOGIC_COMPLETE_CONSEQUENCE.CSHL_Def
ax 11988:11999 CLIGHT_SEPARATION_HOARE_LOGIC_COMPLETE_CONSEQUENCE semax_conseq
R12016:12024 VST.veric.mpred <> compspecs class
binder 12012:12013 <> CS:125
R12035:12044 VST.veric.juicy_extspec <> OracleKind class
binder 12028:12032 <> Espec:126
R12055:12063 VST.veric.seplog <> tycontext ind
binder 12048:12052 <> Delta:127
binder 12076:12077 <> P':128
R12084:12093 VST.veric.tycontext <> ret_assert rec
binder 12080:12081 <> R':129
binder 12096:12096 <> P:130
binder 12098:12098 <> c:131
R12104:12113 VST.veric.tycontext <> ret_assert rec
binder 12101:12101 <> R:132
R12197:12204 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12300:12307 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12401:12408 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12508:12515 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12516:12516 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12629:12636 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12666:12669 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12671:12675 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_COMPLETE_CONSEQUENCE semax defax
R12696:12696 VST.floyd.SeparationLogicFacts <> R:132 var
R12694:12694 VST.floyd.SeparationLogicFacts <> c:131 var
R12692:12692 VST.floyd.SeparationLogicFacts <> P:130 var
R12686:12690 VST.floyd.SeparationLogicFacts <> Delta:127 var
R12680:12684 VST.floyd.SeparationLogicFacts <> Espec:126 var
R12677:12678 VST.floyd.SeparationLogicFacts <> CS:125 var
R12638:12642 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_COMPLETE_CONSEQUENCE semax defax
R12664:12665 VST.floyd.SeparationLogicFacts <> R':129 var
R12662:12662 VST.floyd.SeparationLogicFacts <> c:131 var
R12659:12660 VST.floyd.SeparationLogicFacts <> P':128 var
R12653:12657 VST.floyd.SeparationLogicFacts <> Delta:127 var
R12647:12651 VST.floyd.SeparationLogicFacts <> Espec:126 var
R12644:12645 VST.floyd.SeparationLogicFacts <> CS:125 var
binder 12524:12525 <> vl:133
R12596:12600 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R12552:12556 VST.msl.seplog <> ::logic:x_'&&'_x not
R12595:12595 VST.msl.seplog <> ::logic:x_'&&'_x not
R12528:12532 VST.veric.SeparationLogic <> local def
R12535:12544 VST.veric.SeparationLogic <> tc_environ def
R12546:12550 VST.floyd.SeparationLogicFacts <> Delta:127 var
R12557:12557 VST.msl.seplog <> ::logic:x_'&&'_x not
R12575:12579 VST.msl.seplog <> ::logic:x_'&&'_x not
R12558:12568 VST.veric.SeparationLogic <> allp_fun_id def
R12570:12574 VST.floyd.SeparationLogicFacts <> Delta:127 var
R12580:12588 VST.veric.tycontext <> RA_return proj
R12593:12594 VST.floyd.SeparationLogicFacts <> vl:133 var
R12590:12591 VST.floyd.SeparationLogicFacts <> R':129 var
R12601:12605 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R12611:12614 VST.msl.seplog <> ::logic:x_'||'_x not
R12606:12608 VST.msl.seplog <> ::logic:'|>'_x not
R12609:12610 VST.msl.seplog <> FF meth
R12615:12623 VST.veric.tycontext <> RA_return proj
R12627:12628 VST.floyd.SeparationLogicFacts <> vl:133 var
R12625:12625 VST.floyd.SeparationLogicFacts <> R:132 var
R12476:12480 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R12433:12437 VST.msl.seplog <> ::logic:x_'&&'_x not
R12475:12475 VST.msl.seplog <> ::logic:x_'&&'_x not
R12409:12413 VST.veric.SeparationLogic <> local def
R12416:12425 VST.veric.SeparationLogic <> tc_environ def
R12427:12431 VST.floyd.SeparationLogicFacts <> Delta:127 var
R12438:12438 VST.msl.seplog <> ::logic:x_'&&'_x not
R12456:12460 VST.msl.seplog <> ::logic:x_'&&'_x not
R12439:12449 VST.veric.SeparationLogic <> allp_fun_id def
R12451:12455 VST.floyd.SeparationLogicFacts <> Delta:127 var
R12461:12471 VST.veric.tycontext <> RA_continue proj
R12473:12474 VST.floyd.SeparationLogicFacts <> R':129 var
R12481:12485 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R12491:12494 VST.msl.seplog <> ::logic:x_'||'_x not
R12486:12488 VST.msl.seplog <> ::logic:'|>'_x not
R12489:12490 VST.msl.seplog <> FF meth
R12495:12505 VST.veric.tycontext <> RA_continue proj
R12507:12507 VST.floyd.SeparationLogicFacts <> R:132 var
R12372:12376 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R12332:12336 VST.msl.seplog <> ::logic:x_'&&'_x not
R12371:12371 VST.msl.seplog <> ::logic:x_'&&'_x not
R12308:12312 VST.veric.SeparationLogic <> local def
R12315:12324 VST.veric.SeparationLogic <> tc_environ def
R12326:12330 VST.floyd.SeparationLogicFacts <> Delta:127 var
R12337:12337 VST.msl.seplog <> ::logic:x_'&&'_x not
R12355:12359 VST.msl.seplog <> ::logic:x_'&&'_x not
R12338:12348 VST.veric.SeparationLogic <> allp_fun_id def
R12350:12354 VST.floyd.SeparationLogicFacts <> Delta:127 var
R12360:12367 VST.veric.tycontext <> RA_break proj
R12369:12370 VST.floyd.SeparationLogicFacts <> R':129 var
R12377:12381 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R12387:12390 VST.msl.seplog <> ::logic:x_'||'_x not
R12382:12384 VST.msl.seplog <> ::logic:'|>'_x not
R12385:12386 VST.msl.seplog <> FF meth
R12391:12398 VST.veric.tycontext <> RA_break proj
R12400:12400 VST.floyd.SeparationLogicFacts <> R:132 var
R12270:12274 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R12229:12233 VST.msl.seplog <> ::logic:x_'&&'_x not
R12269:12269 VST.msl.seplog <> ::logic:x_'&&'_x not
R12205:12209 VST.veric.SeparationLogic <> local def
R12212:12221 VST.veric.SeparationLogic <> tc_environ def
R12223:12227 VST.floyd.SeparationLogicFacts <> Delta:127 var
R12234:12234 VST.msl.seplog <> ::logic:x_'&&'_x not
R12252:12256 VST.msl.seplog <> ::logic:x_'&&'_x not
R12235:12245 VST.veric.SeparationLogic <> allp_fun_id def
R12247:12251 VST.floyd.SeparationLogicFacts <> Delta:127 var
R12257:12265 VST.veric.tycontext <> RA_normal proj
R12267:12268 VST.floyd.SeparationLogicFacts <> R':129 var
R12275:12279 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R12285:12288 VST.msl.seplog <> ::logic:x_'||'_x not
R12280:12282 VST.msl.seplog <> ::logic:'|>'_x not
R12283:12284 VST.msl.seplog <> FF meth
R12289:12297 VST.veric.tycontext <> RA_normal proj
R12299:12299 VST.floyd.SeparationLogicFacts <> R:132 var
R12176:12180 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R12146:12150 VST.msl.seplog <> ::logic:x_'&&'_x not
R12175:12175 VST.msl.seplog <> ::logic:x_'&&'_x not
R12122:12126 VST.veric.SeparationLogic <> local def
R12129:12138 VST.veric.SeparationLogic <> tc_environ def
R12140:12144 VST.floyd.SeparationLogicFacts <> Delta:127 var
R12151:12151 VST.msl.seplog <> ::logic:x_'&&'_x not
R12169:12173 VST.msl.seplog <> ::logic:x_'&&'_x not
R12152:12162 VST.veric.SeparationLogic <> allp_fun_id def
R12164:12168 VST.floyd.SeparationLogicFacts <> Delta:127 var
R12174:12174 VST.floyd.SeparationLogicFacts <> P:130 var
R12181:12185 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R12191:12194 VST.msl.seplog <> ::logic:x_'||'_x not
R12186:12188 VST.msl.seplog <> ::logic:'|>'_x not
R12189:12190 VST.msl.seplog <> FF meth
R12195:12196 VST.floyd.SeparationLogicFacts <> P':128 var
R12704:12753 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_COMPLETE_CONSEQUENCE <> modtype
R12793:12825 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R12845:12894 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_COMPLETE_CONSEQUENCE <> mod
R12920:12922 VST.floyd.SeparationLogicFacts Def <> modtype
mod 12764:12778 <> GenCConseqFacts
prf 12962:12988 GenCConseqFacts semax_pre_post_indexed_bupd
R13005:13013 VST.veric.mpred <> compspecs class
binder 13001:13002 <> CS:135
R13024:13033 VST.veric.juicy_extspec <> OracleKind class
binder 13017:13021 <> Espec:136
R13044:13052 VST.veric.seplog <> tycontext ind
binder 13037:13041 <> Delta:137
binder 13064:13065 <> P':138
R13072:13081 VST.veric.tycontext <> ret_assert rec
binder 13068:13069 <> R':139
binder 13084:13084 <> P:140
binder 13086:13086 <> c:141
R13092:13101 VST.veric.tycontext <> ret_assert rec
binder 13089:13089 <> R:142
R13160:13167 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13238:13245 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13314:13321 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13396:13403 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13404:13404 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13492:13499 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13529:13532 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13534:13538 VST.floyd.SeparationLogicFacts Def semax defax
R13559:13559 VST.floyd.SeparationLogicFacts <> R:142 var
R13557:13557 VST.floyd.SeparationLogicFacts <> c:141 var
R13555:13555 VST.floyd.SeparationLogicFacts <> P:140 var
R13549:13553 VST.floyd.SeparationLogicFacts <> Delta:137 var
R13543:13547 VST.floyd.SeparationLogicFacts <> Espec:136 var
R13540:13541 VST.floyd.SeparationLogicFacts <> CS:135 var
R13501:13505 VST.floyd.SeparationLogicFacts Def semax defax
R13527:13528 VST.floyd.SeparationLogicFacts <> R':139 var
R13525:13525 VST.floyd.SeparationLogicFacts <> c:141 var
R13522:13523 VST.floyd.SeparationLogicFacts <> P':138 var
R13516:13520 VST.floyd.SeparationLogicFacts <> Delta:137 var
R13510:13514 VST.floyd.SeparationLogicFacts <> Espec:136 var
R13507:13508 VST.floyd.SeparationLogicFacts <> CS:135 var
binder 13412:13413 <> vl:143
R13459:13463 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R13440:13443 VST.msl.seplog <> ::logic:x_'&&'_x not
R13416:13420 VST.veric.SeparationLogic <> local def
R13423:13432 VST.veric.SeparationLogic <> tc_environ def
R13434:13438 VST.floyd.SeparationLogicFacts <> Delta:137 var
R13444:13452 VST.veric.tycontext <> RA_return proj
R13457:13458 VST.floyd.SeparationLogicFacts <> vl:143 var
R13454:13455 VST.floyd.SeparationLogicFacts <> R':139 var
R13464:13468 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R13474:13477 VST.msl.seplog <> ::logic:x_'||'_x not
R13469:13471 VST.msl.seplog <> ::logic:'|>'_x not
R13472:13473 VST.msl.seplog <> FF meth
R13478:13486 VST.veric.tycontext <> RA_return proj
R13490:13491 VST.floyd.SeparationLogicFacts <> vl:143 var
R13488:13488 VST.floyd.SeparationLogicFacts <> R:142 var
R13364:13368 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R13346:13349 VST.msl.seplog <> ::logic:x_'&&'_x not
R13322:13326 VST.veric.SeparationLogic <> local def
R13329:13338 VST.veric.SeparationLogic <> tc_environ def
R13340:13344 VST.floyd.SeparationLogicFacts <> Delta:137 var
R13350:13360 VST.veric.tycontext <> RA_continue proj
R13362:13363 VST.floyd.SeparationLogicFacts <> R':139 var
R13369:13373 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R13379:13382 VST.msl.seplog <> ::logic:x_'||'_x not
R13374:13376 VST.msl.seplog <> ::logic:'|>'_x not
R13377:13378 VST.msl.seplog <> FF meth
R13383:13393 VST.veric.tycontext <> RA_continue proj
R13395:13395 VST.floyd.SeparationLogicFacts <> R:142 var
R13285:13289 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R13270:13273 VST.msl.seplog <> ::logic:x_'&&'_x not
R13246:13250 VST.veric.SeparationLogic <> local def
R13253:13262 VST.veric.SeparationLogic <> tc_environ def
R13264:13268 VST.floyd.SeparationLogicFacts <> Delta:137 var
R13274:13281 VST.veric.tycontext <> RA_break proj
R13283:13284 VST.floyd.SeparationLogicFacts <> R':139 var
R13290:13294 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R13300:13303 VST.msl.seplog <> ::logic:x_'||'_x not
R13295:13297 VST.msl.seplog <> ::logic:'|>'_x not
R13298:13299 VST.msl.seplog <> FF meth
R13304:13311 VST.veric.tycontext <> RA_break proj
R13313:13313 VST.floyd.SeparationLogicFacts <> R:142 var
R13208:13212 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R13192:13195 VST.msl.seplog <> ::logic:x_'&&'_x not
R13168:13172 VST.veric.SeparationLogic <> local def
R13175:13184 VST.veric.SeparationLogic <> tc_environ def
R13186:13190 VST.floyd.SeparationLogicFacts <> Delta:137 var
R13196:13204 VST.veric.tycontext <> RA_normal proj
R13206:13207 VST.floyd.SeparationLogicFacts <> R':139 var
R13213:13217 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R13223:13226 VST.msl.seplog <> ::logic:x_'||'_x not
R13218:13220 VST.msl.seplog <> ::logic:'|>'_x not
R13221:13222 VST.msl.seplog <> FF meth
R13227:13235 VST.veric.tycontext <> RA_normal proj
R13237:13237 VST.floyd.SeparationLogicFacts <> R:142 var
R13139:13143 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R13134:13137 VST.msl.seplog <> ::logic:x_'&&'_x not
R13110:13114 VST.veric.SeparationLogic <> local def
R13117:13126 VST.veric.SeparationLogic <> tc_environ def
R13128:13132 VST.floyd.SeparationLogicFacts <> Delta:137 var
R13138:13138 VST.floyd.SeparationLogicFacts <> P:140 var
R13144:13148 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R13154:13157 VST.msl.seplog <> ::logic:x_'||'_x not
R13149:13151 VST.msl.seplog <> ::logic:'|>'_x not
R13152:13153 VST.msl.seplog <> FF meth
R13158:13159 VST.floyd.SeparationLogicFacts <> P':138 var
R13588:13599 VST.floyd.SeparationLogicFacts CConseq semax_conseq prfax
R13671:13675 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R13658:13662 VST.msl.seplog <> ::logic:x_'&&'_x not
R13670:13670 VST.msl.seplog <> ::logic:x_'&&'_x not
R13664:13667 VST.msl.seplog <> ::logic:x_'&&'_x not
R13671:13675 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R13658:13662 VST.msl.seplog <> ::logic:x_'&&'_x not
R13670:13670 VST.msl.seplog <> ::logic:x_'&&'_x not
R13664:13667 VST.msl.seplog <> ::logic:x_'&&'_x not
R13708:13711 VST.msl.seplog <> ::logic:x_'&&'_x not
R13687:13699 VST.msl.seplog <> derives_trans meth
R13588:13599 VST.floyd.SeparationLogicFacts CConseq semax_conseq prfax
R13708:13711 VST.msl.seplog <> ::logic:x_'&&'_x not
R13687:13699 VST.msl.seplog <> derives_trans meth
R13708:13711 VST.msl.seplog <> ::logic:x_'&&'_x not
R13687:13699 VST.msl.seplog <> derives_trans meth
R13708:13711 VST.msl.seplog <> ::logic:x_'&&'_x not
R13687:13699 VST.msl.seplog <> derives_trans meth
R13708:13711 VST.msl.seplog <> ::logic:x_'&&'_x not
R13687:13699 VST.msl.seplog <> derives_trans meth
R13708:13711 VST.msl.seplog <> ::logic:x_'&&'_x not
R13687:13699 VST.msl.seplog <> derives_trans meth
prf 13755:13773 GenCConseqFacts semax_pre_post_bupd
R13790:13798 VST.veric.mpred <> compspecs class
binder 13786:13787 <> CS:144
R13809:13818 VST.veric.juicy_extspec <> OracleKind class
binder 13802:13806 <> Espec:145
R13829:13837 VST.veric.seplog <> tycontext ind
binder 13822:13826 <> Delta:146
binder 13849:13850 <> P':147
R13857:13866 VST.veric.tycontext <> ret_assert rec
binder 13853:13854 <> R':148
binder 13869:13869 <> P:149
binder 13871:13871 <> c:150
R13877:13886 VST.veric.tycontext <> ret_assert rec
binder 13874:13874 <> R:151
R13936:13943 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14005:14012 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14072:14079 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14145:14152 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14153:14153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14232:14239 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14269:14272 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14274:14278 VST.floyd.SeparationLogicFacts Def semax defax
R14299:14299 VST.floyd.SeparationLogicFacts <> R:151 var
R14297:14297 VST.floyd.SeparationLogicFacts <> c:150 var
R14295:14295 VST.floyd.SeparationLogicFacts <> P:149 var
R14289:14293 VST.floyd.SeparationLogicFacts <> Delta:146 var
R14283:14287 VST.floyd.SeparationLogicFacts <> Espec:145 var
R14280:14281 VST.floyd.SeparationLogicFacts <> CS:144 var
R14241:14245 VST.floyd.SeparationLogicFacts Def semax defax
R14267:14268 VST.floyd.SeparationLogicFacts <> R':148 var
R14265:14265 VST.floyd.SeparationLogicFacts <> c:150 var
R14262:14263 VST.floyd.SeparationLogicFacts <> P':147 var
R14256:14260 VST.floyd.SeparationLogicFacts <> Delta:146 var
R14250:14254 VST.floyd.SeparationLogicFacts <> Espec:145 var
R14247:14248 VST.floyd.SeparationLogicFacts <> CS:144 var
binder 14161:14162 <> vl:152
R14208:14212 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R14189:14192 VST.msl.seplog <> ::logic:x_'&&'_x not
R14165:14169 VST.veric.SeparationLogic <> local def
R14172:14181 VST.veric.SeparationLogic <> tc_environ def
R14183:14187 VST.floyd.SeparationLogicFacts <> Delta:146 var
R14193:14201 VST.veric.tycontext <> RA_return proj
R14206:14207 VST.floyd.SeparationLogicFacts <> vl:152 var
R14203:14204 VST.floyd.SeparationLogicFacts <> R':148 var
R14213:14217 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R14218:14226 VST.veric.tycontext <> RA_return proj
R14230:14231 VST.floyd.SeparationLogicFacts <> vl:152 var
R14228:14228 VST.floyd.SeparationLogicFacts <> R:151 var
R14122:14126 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R14104:14107 VST.msl.seplog <> ::logic:x_'&&'_x not
R14080:14084 VST.veric.SeparationLogic <> local def
R14087:14096 VST.veric.SeparationLogic <> tc_environ def
R14098:14102 VST.floyd.SeparationLogicFacts <> Delta:146 var
R14108:14118 VST.veric.tycontext <> RA_continue proj
R14120:14121 VST.floyd.SeparationLogicFacts <> R':148 var
R14127:14131 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R14132:14142 VST.veric.tycontext <> RA_continue proj
R14144:14144 VST.floyd.SeparationLogicFacts <> R:151 var
R14052:14056 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R14037:14040 VST.msl.seplog <> ::logic:x_'&&'_x not
R14013:14017 VST.veric.SeparationLogic <> local def
R14020:14029 VST.veric.SeparationLogic <> tc_environ def
R14031:14035 VST.floyd.SeparationLogicFacts <> Delta:146 var
R14041:14048 VST.veric.tycontext <> RA_break proj
R14050:14051 VST.floyd.SeparationLogicFacts <> R':148 var
R14057:14061 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R14062:14069 VST.veric.tycontext <> RA_break proj
R14071:14071 VST.floyd.SeparationLogicFacts <> R:151 var
R13984:13988 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R13968:13971 VST.msl.seplog <> ::logic:x_'&&'_x not
R13944:13948 VST.veric.SeparationLogic <> local def
R13951:13960 VST.veric.SeparationLogic <> tc_environ def
R13962:13966 VST.floyd.SeparationLogicFacts <> Delta:146 var
R13972:13980 VST.veric.tycontext <> RA_normal proj
R13982:13983 VST.floyd.SeparationLogicFacts <> R':148 var
R13989:13993 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R13994:14002 VST.veric.tycontext <> RA_normal proj
R14004:14004 VST.floyd.SeparationLogicFacts <> R:151 var
R13924:13928 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R13919:13922 VST.msl.seplog <> ::logic:x_'&&'_x not
R13895:13899 VST.veric.SeparationLogic <> local def
R13902:13911 VST.veric.SeparationLogic <> tc_environ def
R13913:13917 VST.floyd.SeparationLogicFacts <> Delta:146 var
R13923:13923 VST.floyd.SeparationLogicFacts <> P:149 var
R13929:13933 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R13934:13935 VST.floyd.SeparationLogicFacts <> P':147 var
R14328:14354 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_pre_post_indexed_bupd thm
R14398:14423 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R14328:14354 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_pre_post_indexed_bupd thm
R14398:14423 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R14398:14423 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R14398:14423 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R14398:14423 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R14398:14423 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
prf 14444:14465 GenCConseqFacts semax_pre_indexed_bupd
binder 14476:14477 <> P':153
binder 14479:14483 <> Espec:154
R14490:14498 VST.veric.mpred <> compspecs class
binder 14486:14487 <> cs:155
binder 14501:14505 <> Delta:156
binder 14507:14507 <> P:157
binder 14509:14509 <> c:158
binder 14511:14511 <> R:159
R14569:14577 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14606:14610 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14612:14616 VST.floyd.SeparationLogicFacts Def semax defax
R14637:14637 VST.floyd.SeparationLogicFacts <> R:159 var
R14635:14635 VST.floyd.SeparationLogicFacts <> c:158 var
R14633:14633 VST.floyd.SeparationLogicFacts <> P:157 var
R14627:14631 VST.floyd.SeparationLogicFacts <> Delta:156 var
R14621:14625 VST.floyd.SeparationLogicFacts <> Espec:154 var
R14618:14619 VST.floyd.SeparationLogicFacts <> cs:155 var
R14579:14583 VST.floyd.SeparationLogicFacts Def semax defax
R14605:14605 VST.floyd.SeparationLogicFacts <> R:159 var
R14603:14603 VST.floyd.SeparationLogicFacts <> c:158 var
R14600:14601 VST.floyd.SeparationLogicFacts <> P':153 var
R14594:14598 VST.floyd.SeparationLogicFacts <> Delta:156 var
R14588:14592 VST.floyd.SeparationLogicFacts <> Espec:154 var
R14585:14586 VST.floyd.SeparationLogicFacts <> cs:155 var
R14548:14552 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R14543:14546 VST.msl.seplog <> ::logic:x_'&&'_x not
R14519:14523 VST.veric.SeparationLogic <> local def
R14526:14535 VST.veric.SeparationLogic <> tc_environ def
R14537:14541 VST.floyd.SeparationLogicFacts <> Delta:156 var
R14547:14547 VST.floyd.SeparationLogicFacts <> P:157 var
R14553:14557 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R14563:14566 VST.msl.seplog <> ::logic:x_'||'_x not
R14558:14560 VST.msl.seplog <> ::logic:'|>'_x not
R14561:14562 VST.msl.seplog <> FF meth
R14567:14568 VST.floyd.SeparationLogicFacts <> P':153 var
R14664:14690 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_pre_post_indexed_bupd thm
R14732:14743 VST.msl.seplog <> derives_refl meth
R14664:14690 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_pre_post_indexed_bupd thm
R14732:14743 VST.msl.seplog <> derives_refl meth
R14732:14743 VST.msl.seplog <> derives_refl meth
R14732:14743 VST.msl.seplog <> derives_refl meth
R14732:14743 VST.msl.seplog <> derives_refl meth
prf 14758:14780 GenCConseqFacts semax_post_indexed_bupd
R14796:14805 VST.veric.tycontext <> ret_assert rec
binder 14792:14793 <> R':160
binder 14808:14812 <> Espec:161
R14819:14827 VST.veric.mpred <> compspecs class
binder 14815:14816 <> cs:162
binder 14830:14834 <> Delta:163
R14840:14849 VST.veric.tycontext <> ret_assert rec
binder 14837:14837 <> R:164
binder 14852:14852 <> P:165
binder 14854:14854 <> c:166
R14930:14936 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15005:15011 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15086:15092 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15093:15093 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15181:15188 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15217:15221 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15223:15227 VST.floyd.SeparationLogicFacts Def semax defax
R15248:15248 VST.floyd.SeparationLogicFacts <> R:164 var
R15246:15246 VST.floyd.SeparationLogicFacts <> c:166 var
R15244:15244 VST.floyd.SeparationLogicFacts <> P:165 var
R15238:15242 VST.floyd.SeparationLogicFacts <> Delta:163 var
R15232:15236 VST.floyd.SeparationLogicFacts <> Espec:161 var
R15229:15230 VST.floyd.SeparationLogicFacts <> cs:162 var
R15190:15194 VST.floyd.SeparationLogicFacts Def semax defax
R15215:15216 VST.floyd.SeparationLogicFacts <> R':160 var
R15213:15213 VST.floyd.SeparationLogicFacts <> c:166 var
R15211:15211 VST.floyd.SeparationLogicFacts <> P:165 var
R15205:15209 VST.floyd.SeparationLogicFacts <> Delta:163 var
R15199:15203 VST.floyd.SeparationLogicFacts <> Espec:161 var
R15196:15197 VST.floyd.SeparationLogicFacts <> cs:162 var
binder 15101:15102 <> vl:167
R15148:15152 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R15129:15132 VST.msl.seplog <> ::logic:x_'&&'_x not
R15105:15109 VST.veric.SeparationLogic <> local def
R15112:15121 VST.veric.SeparationLogic <> tc_environ def
R15123:15127 VST.floyd.SeparationLogicFacts <> Delta:163 var
R15133:15141 VST.veric.tycontext <> RA_return proj
R15146:15147 VST.floyd.SeparationLogicFacts <> vl:167 var
R15143:15144 VST.floyd.SeparationLogicFacts <> R':160 var
R15153:15157 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R15163:15166 VST.msl.seplog <> ::logic:x_'||'_x not
R15158:15160 VST.msl.seplog <> ::logic:'|>'_x not
R15161:15162 VST.msl.seplog <> FF meth
R15167:15175 VST.veric.tycontext <> RA_return proj
R15179:15180 VST.floyd.SeparationLogicFacts <> vl:167 var
R15177:15177 VST.floyd.SeparationLogicFacts <> R:164 var
R15054:15058 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R15036:15039 VST.msl.seplog <> ::logic:x_'&&'_x not
R15012:15016 VST.veric.SeparationLogic <> local def
R15019:15028 VST.veric.SeparationLogic <> tc_environ def
R15030:15034 VST.floyd.SeparationLogicFacts <> Delta:163 var
R15040:15050 VST.veric.tycontext <> RA_continue proj
R15052:15053 VST.floyd.SeparationLogicFacts <> R':160 var
R15059:15063 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R15069:15072 VST.msl.seplog <> ::logic:x_'||'_x not
R15064:15066 VST.msl.seplog <> ::logic:'|>'_x not
R15067:15068 VST.msl.seplog <> FF meth
R15073:15083 VST.veric.tycontext <> RA_continue proj
R15085:15085 VST.floyd.SeparationLogicFacts <> R:164 var
R14976:14980 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R14961:14964 VST.msl.seplog <> ::logic:x_'&&'_x not
R14937:14941 VST.veric.SeparationLogic <> local def
R14944:14953 VST.veric.SeparationLogic <> tc_environ def
R14955:14959 VST.floyd.SeparationLogicFacts <> Delta:163 var
R14965:14972 VST.veric.tycontext <> RA_break proj
R14974:14975 VST.floyd.SeparationLogicFacts <> R':160 var
R14981:14985 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R14991:14994 VST.msl.seplog <> ::logic:x_'||'_x not
R14986:14988 VST.msl.seplog <> ::logic:'|>'_x not
R14989:14990 VST.msl.seplog <> FF meth
R14995:15002 VST.veric.tycontext <> RA_break proj
R15004:15004 VST.floyd.SeparationLogicFacts <> R:164 var
R14900:14904 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R14884:14887 VST.msl.seplog <> ::logic:x_'&&'_x not
R14860:14864 VST.veric.SeparationLogic <> local def
R14867:14876 VST.veric.SeparationLogic <> tc_environ def
R14878:14882 VST.floyd.SeparationLogicFacts <> Delta:163 var
R14888:14896 VST.veric.tycontext <> RA_normal proj
R14898:14899 VST.floyd.SeparationLogicFacts <> R':160 var
R14905:14909 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R14915:14918 VST.msl.seplog <> ::logic:x_'||'_x not
R14910:14912 VST.msl.seplog <> ::logic:'|>'_x not
R14913:14914 VST.msl.seplog <> FF meth
R14919:14927 VST.veric.tycontext <> RA_normal proj
R14929:14929 VST.floyd.SeparationLogicFacts <> R:164 var
R15275:15301 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_pre_post_indexed_bupd thm
R15275:15301 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_pre_post_indexed_bupd thm
R15329:15346 VST.floyd.assert_lemmas <> derives_bupd0_refl thm
R15329:15346 VST.floyd.assert_lemmas <> derives_bupd0_refl thm
prf 15361:15385 GenCConseqFacts semax_post''_indexed_bupd
binder 15395:15396 <> R':168
binder 15398:15402 <> Espec:169
R15409:15417 VST.veric.mpred <> compspecs class
binder 15405:15406 <> cs:170
binder 15420:15424 <> Delta:171
binder 15426:15426 <> R:172
binder 15428:15428 <> P:173
binder 15430:15430 <> c:174
R15504:15513 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15562:15571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15573:15577 VST.floyd.SeparationLogicFacts Def semax defax
R15598:15598 VST.floyd.SeparationLogicFacts <> R:172 var
R15596:15596 VST.floyd.SeparationLogicFacts <> c:174 var
R15594:15594 VST.floyd.SeparationLogicFacts <> P:173 var
R15588:15592 VST.floyd.SeparationLogicFacts <> Delta:171 var
R15582:15586 VST.floyd.SeparationLogicFacts <> Espec:169 var
R15579:15580 VST.floyd.SeparationLogicFacts <> cs:170 var
R15515:15519 VST.floyd.SeparationLogicFacts Def semax defax
R15541:15557 VST.veric.SeparationLogic <> normal_ret_assert def
R15559:15560 VST.floyd.SeparationLogicFacts <> R':168 var
R15538:15538 VST.floyd.SeparationLogicFacts <> c:174 var
R15536:15536 VST.floyd.SeparationLogicFacts <> P:173 var
R15530:15534 VST.floyd.SeparationLogicFacts <> Delta:171 var
R15524:15528 VST.floyd.SeparationLogicFacts <> Espec:169 var
R15521:15522 VST.floyd.SeparationLogicFacts <> cs:170 var
R15474:15478 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R15468:15471 VST.msl.seplog <> ::logic:x_'&&'_x not
R15444:15448 VST.veric.SeparationLogic <> local def
R15451:15460 VST.veric.SeparationLogic <> tc_environ def
R15462:15466 VST.floyd.SeparationLogicFacts <> Delta:171 var
R15472:15473 VST.floyd.SeparationLogicFacts <> R':168 var
R15479:15483 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R15489:15492 VST.msl.seplog <> ::logic:x_'||'_x not
R15484:15486 VST.msl.seplog <> ::logic:'|>'_x not
R15487:15488 VST.msl.seplog <> FF meth
R15493:15501 VST.veric.tycontext <> RA_normal proj
R15503:15503 VST.floyd.SeparationLogicFacts <> R:172 var
R15623:15645 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_post_indexed_bupd thm
R15623:15645 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_post_indexed_bupd thm
prf 15789:15802 GenCConseqFacts semax_pre_bupd
binder 15813:15814 <> P':175
binder 15816:15820 <> Espec:176
R15827:15835 VST.veric.mpred <> compspecs class
binder 15823:15824 <> cs:177
binder 15838:15842 <> Delta:178
binder 15844:15844 <> P:179
binder 15846:15846 <> c:180
binder 15848:15848 <> R:181
R15897:15905 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15934:15938 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15940:15944 VST.floyd.SeparationLogicFacts Def semax defax
R15965:15965 VST.floyd.SeparationLogicFacts <> R:181 var
R15963:15963 VST.floyd.SeparationLogicFacts <> c:180 var
R15961:15961 VST.floyd.SeparationLogicFacts <> P:179 var
R15955:15959 VST.floyd.SeparationLogicFacts <> Delta:178 var
R15949:15953 VST.floyd.SeparationLogicFacts <> Espec:176 var
R15946:15947 VST.floyd.SeparationLogicFacts <> cs:177 var
R15907:15911 VST.floyd.SeparationLogicFacts Def semax defax
R15933:15933 VST.floyd.SeparationLogicFacts <> R:181 var
R15931:15931 VST.floyd.SeparationLogicFacts <> c:180 var
R15928:15929 VST.floyd.SeparationLogicFacts <> P':175 var
R15922:15926 VST.floyd.SeparationLogicFacts <> Delta:178 var
R15916:15920 VST.floyd.SeparationLogicFacts <> Espec:176 var
R15913:15914 VST.floyd.SeparationLogicFacts <> cs:177 var
R15885:15889 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R15880:15883 VST.msl.seplog <> ::logic:x_'&&'_x not
R15856:15860 VST.veric.SeparationLogic <> local def
R15863:15872 VST.veric.SeparationLogic <> tc_environ def
R15874:15878 VST.floyd.SeparationLogicFacts <> Delta:178 var
R15884:15884 VST.floyd.SeparationLogicFacts <> P:179 var
R15890:15894 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R15895:15896 VST.floyd.SeparationLogicFacts <> P':175 var
R15990:16008 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_pre_post_bupd thm
R16032:16041 VST.msl.seplog <> andp_left2 meth
R16044:16053 VST.msl.ghost_seplog <> bupd_intro meth
R15990:16008 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_pre_post_bupd thm
R16032:16041 VST.msl.seplog <> andp_left2 meth
R16044:16053 VST.msl.ghost_seplog <> bupd_intro meth
R16032:16041 VST.msl.seplog <> andp_left2 meth
R16044:16053 VST.msl.ghost_seplog <> bupd_intro meth
R16032:16041 VST.msl.seplog <> andp_left2 meth
R16044:16053 VST.msl.ghost_seplog <> bupd_intro meth
R16032:16041 VST.msl.seplog <> andp_left2 meth
R16044:16053 VST.msl.ghost_seplog <> bupd_intro meth
prf 16074:16088 GenCConseqFacts semax_post_bupd
R16104:16113 VST.veric.tycontext <> ret_assert rec
binder 16100:16101 <> R':182
binder 16116:16120 <> Espec:183
R16127:16135 VST.veric.mpred <> compspecs class
binder 16123:16124 <> cs:184
binder 16138:16142 <> Delta:185
R16148:16157 VST.veric.tycontext <> ret_assert rec
binder 16145:16145 <> R:186
binder 16160:16160 <> P:187
binder 16162:16162 <> c:188
R16229:16235 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16295:16301 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16367:16373 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16374:16374 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16453:16460 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16489:16493 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16495:16499 VST.floyd.SeparationLogicFacts Def semax defax
R16520:16520 VST.floyd.SeparationLogicFacts <> R:186 var
R16518:16518 VST.floyd.SeparationLogicFacts <> c:188 var
R16516:16516 VST.floyd.SeparationLogicFacts <> P:187 var
R16510:16514 VST.floyd.SeparationLogicFacts <> Delta:185 var
R16504:16508 VST.floyd.SeparationLogicFacts <> Espec:183 var
R16501:16502 VST.floyd.SeparationLogicFacts <> cs:184 var
R16462:16466 VST.floyd.SeparationLogicFacts Def semax defax
R16487:16488 VST.floyd.SeparationLogicFacts <> R':182 var
R16485:16485 VST.floyd.SeparationLogicFacts <> c:188 var
R16483:16483 VST.floyd.SeparationLogicFacts <> P:187 var
R16477:16481 VST.floyd.SeparationLogicFacts <> Delta:185 var
R16471:16475 VST.floyd.SeparationLogicFacts <> Espec:183 var
R16468:16469 VST.floyd.SeparationLogicFacts <> cs:184 var
binder 16382:16383 <> vl:189
R16429:16433 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R16410:16413 VST.msl.seplog <> ::logic:x_'&&'_x not
R16386:16390 VST.veric.SeparationLogic <> local def
R16393:16402 VST.veric.SeparationLogic <> tc_environ def
R16404:16408 VST.floyd.SeparationLogicFacts <> Delta:185 var
R16414:16422 VST.veric.tycontext <> RA_return proj
R16427:16428 VST.floyd.SeparationLogicFacts <> vl:189 var
R16424:16425 VST.floyd.SeparationLogicFacts <> R':182 var
R16434:16438 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R16439:16447 VST.veric.tycontext <> RA_return proj
R16451:16452 VST.floyd.SeparationLogicFacts <> vl:189 var
R16449:16449 VST.floyd.SeparationLogicFacts <> R:186 var
R16344:16348 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R16326:16329 VST.msl.seplog <> ::logic:x_'&&'_x not
R16302:16306 VST.veric.SeparationLogic <> local def
R16309:16318 VST.veric.SeparationLogic <> tc_environ def
R16320:16324 VST.floyd.SeparationLogicFacts <> Delta:185 var
R16330:16340 VST.veric.tycontext <> RA_continue proj
R16342:16343 VST.floyd.SeparationLogicFacts <> R':182 var
R16349:16353 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R16354:16364 VST.veric.tycontext <> RA_continue proj
R16366:16366 VST.floyd.SeparationLogicFacts <> R:186 var
R16275:16279 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R16260:16263 VST.msl.seplog <> ::logic:x_'&&'_x not
R16236:16240 VST.veric.SeparationLogic <> local def
R16243:16252 VST.veric.SeparationLogic <> tc_environ def
R16254:16258 VST.floyd.SeparationLogicFacts <> Delta:185 var
R16264:16271 VST.veric.tycontext <> RA_break proj
R16273:16274 VST.floyd.SeparationLogicFacts <> R':182 var
R16280:16284 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R16285:16292 VST.veric.tycontext <> RA_break proj
R16294:16294 VST.floyd.SeparationLogicFacts <> R:186 var
R16208:16212 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R16192:16195 VST.msl.seplog <> ::logic:x_'&&'_x not
R16168:16172 VST.veric.SeparationLogic <> local def
R16175:16184 VST.veric.SeparationLogic <> tc_environ def
R16186:16190 VST.floyd.SeparationLogicFacts <> Delta:185 var
R16196:16204 VST.veric.tycontext <> RA_normal proj
R16206:16207 VST.floyd.SeparationLogicFacts <> R':182 var
R16213:16217 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R16218:16226 VST.veric.tycontext <> RA_normal proj
R16228:16228 VST.floyd.SeparationLogicFacts <> R:186 var
R16547:16565 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_pre_post_bupd thm
R16547:16565 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_pre_post_bupd thm
R16593:16609 VST.floyd.assert_lemmas <> derives_bupd_refl thm
R16593:16609 VST.floyd.assert_lemmas <> derives_bupd_refl thm
prf 16624:16639 GenCConseqFacts semax_post'_bupd
binder 16649:16650 <> R':190
binder 16652:16656 <> Espec:191
R16663:16671 VST.veric.mpred <> compspecs class
binder 16659:16660 <> cs:192
binder 16674:16678 <> Delta:193
binder 16680:16680 <> R:194
binder 16682:16682 <> P:195
binder 16684:16684 <> c:196
R16739:16748 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16797:16806 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16808:16812 VST.floyd.SeparationLogicFacts Def semax defax
R16834:16850 VST.veric.SeparationLogic <> normal_ret_assert def
R16852:16852 VST.floyd.SeparationLogicFacts <> R:194 var
R16831:16831 VST.floyd.SeparationLogicFacts <> c:196 var
R16829:16829 VST.floyd.SeparationLogicFacts <> P:195 var
R16823:16827 VST.floyd.SeparationLogicFacts <> Delta:193 var
R16817:16821 VST.floyd.SeparationLogicFacts <> Espec:191 var
R16814:16815 VST.floyd.SeparationLogicFacts <> cs:192 var
R16750:16754 VST.floyd.SeparationLogicFacts Def semax defax
R16776:16792 VST.veric.SeparationLogic <> normal_ret_assert def
R16794:16795 VST.floyd.SeparationLogicFacts <> R':190 var
R16773:16773 VST.floyd.SeparationLogicFacts <> c:196 var
R16771:16771 VST.floyd.SeparationLogicFacts <> P:195 var
R16765:16769 VST.floyd.SeparationLogicFacts <> Delta:193 var
R16759:16763 VST.floyd.SeparationLogicFacts <> Espec:191 var
R16756:16757 VST.floyd.SeparationLogicFacts <> cs:192 var
R16728:16732 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R16722:16725 VST.msl.seplog <> ::logic:x_'&&'_x not
R16698:16702 VST.veric.SeparationLogic <> local def
R16705:16714 VST.veric.SeparationLogic <> tc_environ def
R16716:16720 VST.floyd.SeparationLogicFacts <> Delta:193 var
R16726:16727 VST.floyd.SeparationLogicFacts <> R':190 var
R16733:16737 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R16738:16738 VST.floyd.SeparationLogicFacts <> R:194 var
R16878:16892 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_post_bupd thm
R16878:16892 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_post_bupd thm
prf 17036:17052 GenCConseqFacts semax_post''_bupd
binder 17062:17063 <> R':197
binder 17065:17069 <> Espec:198
R17076:17084 VST.veric.mpred <> compspecs class
binder 17072:17073 <> cs:199
binder 17087:17091 <> Delta:200
binder 17093:17093 <> R:201
binder 17095:17095 <> P:202
binder 17097:17097 <> c:203
R17162:17171 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17220:17229 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17231:17235 VST.floyd.SeparationLogicFacts Def semax defax
R17256:17256 VST.floyd.SeparationLogicFacts <> R:201 var
R17254:17254 VST.floyd.SeparationLogicFacts <> c:203 var
R17252:17252 VST.floyd.SeparationLogicFacts <> P:202 var
R17246:17250 VST.floyd.SeparationLogicFacts <> Delta:200 var
R17240:17244 VST.floyd.SeparationLogicFacts <> Espec:198 var
R17237:17238 VST.floyd.SeparationLogicFacts <> cs:199 var
R17173:17177 VST.floyd.SeparationLogicFacts Def semax defax
R17199:17215 VST.veric.SeparationLogic <> normal_ret_assert def
R17217:17218 VST.floyd.SeparationLogicFacts <> R':197 var
R17196:17196 VST.floyd.SeparationLogicFacts <> c:203 var
R17194:17194 VST.floyd.SeparationLogicFacts <> P:202 var
R17188:17192 VST.floyd.SeparationLogicFacts <> Delta:200 var
R17182:17186 VST.floyd.SeparationLogicFacts <> Espec:198 var
R17179:17180 VST.floyd.SeparationLogicFacts <> cs:199 var
R17141:17145 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R17135:17138 VST.msl.seplog <> ::logic:x_'&&'_x not
R17111:17115 VST.veric.SeparationLogic <> local def
R17118:17127 VST.veric.SeparationLogic <> tc_environ def
R17129:17133 VST.floyd.SeparationLogicFacts <> Delta:200 var
R17139:17140 VST.floyd.SeparationLogicFacts <> R':197 var
R17146:17150 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R17151:17159 VST.veric.tycontext <> RA_normal proj
R17161:17161 VST.floyd.SeparationLogicFacts <> R:201 var
R17281:17295 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_post_bupd thm
R17281:17295 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_post_bupd thm
prf 17439:17458 GenCConseqFacts semax_pre_post'_bupd
binder 17468:17469 <> P':204
binder 17471:17472 <> R':205
binder 17474:17478 <> Espec:206
R17485:17493 VST.veric.mpred <> compspecs class
binder 17481:17482 <> cs:207
binder 17496:17500 <> Delta:208
binder 17502:17502 <> R:209
binder 17504:17504 <> P:210
binder 17506:17506 <> c:211
R17556:17565 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17607:17616 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17666:17675 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17677:17681 VST.floyd.SeparationLogicFacts Def semax defax
R17703:17719 VST.veric.SeparationLogic <> normal_ret_assert def
R17721:17721 VST.floyd.SeparationLogicFacts <> R:209 var
R17700:17700 VST.floyd.SeparationLogicFacts <> c:211 var
R17698:17698 VST.floyd.SeparationLogicFacts <> P:210 var
R17692:17696 VST.floyd.SeparationLogicFacts <> Delta:208 var
R17686:17690 VST.floyd.SeparationLogicFacts <> Espec:206 var
R17683:17684 VST.floyd.SeparationLogicFacts <> cs:207 var
R17618:17622 VST.floyd.SeparationLogicFacts Def semax defax
R17645:17661 VST.veric.SeparationLogic <> normal_ret_assert def
R17663:17664 VST.floyd.SeparationLogicFacts <> R':205 var
R17642:17642 VST.floyd.SeparationLogicFacts <> c:211 var
R17639:17640 VST.floyd.SeparationLogicFacts <> P':204 var
R17633:17637 VST.floyd.SeparationLogicFacts <> Delta:208 var
R17627:17631 VST.floyd.SeparationLogicFacts <> Espec:206 var
R17624:17625 VST.floyd.SeparationLogicFacts <> cs:207 var
R17596:17600 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R17590:17593 VST.msl.seplog <> ::logic:x_'&&'_x not
R17566:17570 VST.veric.SeparationLogic <> local def
R17573:17582 VST.veric.SeparationLogic <> tc_environ def
R17584:17588 VST.floyd.SeparationLogicFacts <> Delta:208 var
R17594:17595 VST.floyd.SeparationLogicFacts <> R':205 var
R17601:17605 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R17606:17606 VST.floyd.SeparationLogicFacts <> R:209 var
R17544:17548 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R17539:17542 VST.msl.seplog <> ::logic:x_'&&'_x not
R17515:17519 VST.veric.SeparationLogic <> local def
R17522:17531 VST.veric.SeparationLogic <> tc_environ def
R17533:17537 VST.floyd.SeparationLogicFacts <> Delta:208 var
R17543:17543 VST.floyd.SeparationLogicFacts <> P:210 var
R17549:17553 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R17554:17555 VST.floyd.SeparationLogicFacts <> P':204 var
R17748:17761 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_pre_bupd thm
R17748:17761 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_pre_bupd thm
R17779:17794 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_post'_bupd thm
R17779:17794 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_post'_bupd thm
prf 17816:17836 GenCConseqFacts semax_pre_post''_bupd
binder 17846:17847 <> P':212
binder 17849:17850 <> R':213
binder 17852:17856 <> Espec:214
R17863:17871 VST.veric.mpred <> compspecs class
binder 17859:17860 <> cs:215
binder 17874:17878 <> Delta:216
binder 17880:17880 <> R:217
binder 17882:17882 <> P:218
binder 17884:17884 <> c:219
R17934:17943 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17995:18004 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18054:18063 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18065:18069 VST.floyd.SeparationLogicFacts Def semax defax
R18090:18090 VST.floyd.SeparationLogicFacts <> R:217 var
R18088:18088 VST.floyd.SeparationLogicFacts <> c:219 var
R18086:18086 VST.floyd.SeparationLogicFacts <> P:218 var
R18080:18084 VST.floyd.SeparationLogicFacts <> Delta:216 var
R18074:18078 VST.floyd.SeparationLogicFacts <> Espec:214 var
R18071:18072 VST.floyd.SeparationLogicFacts <> cs:215 var
R18006:18010 VST.floyd.SeparationLogicFacts Def semax defax
R18033:18049 VST.veric.SeparationLogic <> normal_ret_assert def
R18051:18052 VST.floyd.SeparationLogicFacts <> R':213 var
R18030:18030 VST.floyd.SeparationLogicFacts <> c:219 var
R18027:18028 VST.floyd.SeparationLogicFacts <> P':212 var
R18021:18025 VST.floyd.SeparationLogicFacts <> Delta:216 var
R18015:18019 VST.floyd.SeparationLogicFacts <> Espec:214 var
R18012:18013 VST.floyd.SeparationLogicFacts <> cs:215 var
R17974:17978 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R17968:17971 VST.msl.seplog <> ::logic:x_'&&'_x not
R17944:17948 VST.veric.SeparationLogic <> local def
R17951:17960 VST.veric.SeparationLogic <> tc_environ def
R17962:17966 VST.floyd.SeparationLogicFacts <> Delta:216 var
R17972:17973 VST.floyd.SeparationLogicFacts <> R':213 var
R17979:17983 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R17984:17992 VST.veric.tycontext <> RA_normal proj
R17994:17994 VST.floyd.SeparationLogicFacts <> R:217 var
R17922:17926 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R17917:17920 VST.msl.seplog <> ::logic:x_'&&'_x not
R17893:17897 VST.veric.SeparationLogic <> local def
R17900:17909 VST.veric.SeparationLogic <> tc_environ def
R17911:17915 VST.floyd.SeparationLogicFacts <> Delta:216 var
R17921:17921 VST.floyd.SeparationLogicFacts <> P:218 var
R17927:17931 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R17932:17933 VST.floyd.SeparationLogicFacts <> P':212 var
R18116:18129 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_pre_bupd thm
R18116:18129 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_pre_bupd thm
R18147:18163 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_post''_bupd thm
R18147:18163 VST.floyd.SeparationLogicFacts GenCConseqFacts semax_post''_bupd thm
R18183:18197 VST.floyd.SeparationLogicFacts GenCConseqFacts <> mod
modtype 18213:18253 <> CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE
R18282:18314 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 18272:18279 <> CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE.CSHL_Def
ax 18342:18355 CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE semax_pre_post
R18374:18383 VST.veric.juicy_extspec <> OracleKind class
binder 18367:18371 <> Espec:220
R18390:18398 VST.veric.mpred <> compspecs class
binder 18386:18387 <> CS:221
binder 18410:18411 <> P':222
R18418:18427 VST.veric.tycontext <> ret_assert rec
binder 18414:18415 <> R':223
binder 18430:18434 <> Delta:224
binder 18436:18436 <> P:225
binder 18438:18438 <> c:226
R18444:18453 VST.veric.tycontext <> ret_assert rec
binder 18441:18441 <> R:227
R18462:18462 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18499:18507 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18564:18571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18626:18633 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18694:18701 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18702:18702 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18776:18783 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18813:18816 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18818:18822 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE semax defax
R18843:18843 VST.floyd.SeparationLogicFacts <> R:227 var
R18841:18841 VST.floyd.SeparationLogicFacts <> c:226 var
R18839:18839 VST.floyd.SeparationLogicFacts <> P:225 var
R18833:18837 VST.floyd.SeparationLogicFacts <> Delta:224 var
R18827:18831 VST.floyd.SeparationLogicFacts <> Espec:220 var
R18824:18825 VST.floyd.SeparationLogicFacts <> CS:221 var
R18785:18789 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE semax defax
R18811:18812 VST.floyd.SeparationLogicFacts <> R':223 var
R18809:18809 VST.floyd.SeparationLogicFacts <> c:226 var
R18806:18807 VST.floyd.SeparationLogicFacts <> P':222 var
R18800:18804 VST.floyd.SeparationLogicFacts <> Delta:224 var
R18794:18798 VST.floyd.SeparationLogicFacts <> Espec:220 var
R18791:18792 VST.floyd.SeparationLogicFacts <> CS:221 var
binder 18710:18711 <> vl:228
R18757:18761 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R18738:18741 VST.msl.seplog <> ::logic:x_'&&'_x not
R18714:18718 VST.veric.SeparationLogic <> local def
R18721:18730 VST.veric.SeparationLogic <> tc_environ def
R18732:18736 VST.floyd.SeparationLogicFacts <> Delta:224 var
R18742:18750 VST.veric.tycontext <> RA_return proj
R18755:18756 VST.floyd.SeparationLogicFacts <> vl:228 var
R18752:18753 VST.floyd.SeparationLogicFacts <> R':223 var
R18762:18770 VST.veric.tycontext <> RA_return proj
R18774:18775 VST.floyd.SeparationLogicFacts <> vl:228 var
R18772:18772 VST.floyd.SeparationLogicFacts <> R:227 var
R18676:18680 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R18658:18661 VST.msl.seplog <> ::logic:x_'&&'_x not
R18634:18638 VST.veric.SeparationLogic <> local def
R18641:18650 VST.veric.SeparationLogic <> tc_environ def
R18652:18656 VST.floyd.SeparationLogicFacts <> Delta:224 var
R18662:18672 VST.veric.tycontext <> RA_continue proj
R18674:18675 VST.floyd.SeparationLogicFacts <> R':223 var
R18681:18691 VST.veric.tycontext <> RA_continue proj
R18693:18693 VST.floyd.SeparationLogicFacts <> R:227 var
R18611:18615 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R18596:18599 VST.msl.seplog <> ::logic:x_'&&'_x not
R18572:18576 VST.veric.SeparationLogic <> local def
R18579:18588 VST.veric.SeparationLogic <> tc_environ def
R18590:18594 VST.floyd.SeparationLogicFacts <> Delta:224 var
R18600:18607 VST.veric.tycontext <> RA_break proj
R18609:18610 VST.floyd.SeparationLogicFacts <> R':223 var
R18616:18623 VST.veric.tycontext <> RA_break proj
R18625:18625 VST.floyd.SeparationLogicFacts <> R:227 var
R18548:18552 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R18532:18535 VST.msl.seplog <> ::logic:x_'&&'_x not
R18508:18512 VST.veric.SeparationLogic <> local def
R18515:18524 VST.veric.SeparationLogic <> tc_environ def
R18526:18530 VST.floyd.SeparationLogicFacts <> Delta:224 var
R18536:18544 VST.veric.tycontext <> RA_normal proj
R18546:18547 VST.floyd.SeparationLogicFacts <> R':223 var
R18553:18561 VST.veric.tycontext <> RA_normal proj
R18563:18563 VST.floyd.SeparationLogicFacts <> R:227 var
R18492:18496 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R18487:18490 VST.msl.seplog <> ::logic:x_'&&'_x not
R18463:18467 VST.veric.SeparationLogic <> local def
R18470:18479 VST.veric.SeparationLogic <> tc_environ def
R18481:18485 VST.floyd.SeparationLogicFacts <> Delta:224 var
R18491:18491 VST.floyd.SeparationLogicFacts <> P:225 var
R18497:18498 VST.floyd.SeparationLogicFacts <> P':222 var
R18851:18891 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> modtype
R18925:18957 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R18977:19026 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_COMPLETE_CONSEQUENCE <> mod
R19052:19054 VST.floyd.SeparationLogicFacts Def <> modtype
R19058:19098 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R19124:19126 VST.floyd.SeparationLogicFacts Def <> modtype
mod 18902:18910 <> GenConseq
R19149:19151 VST.floyd.SeparationLogicFacts Def <> modtype
mod 19137:19144 <> GenConseq.CSHL_Def
R19177:19191 VST.floyd.SeparationLogicFacts GenCConseqFacts <> modtype
R19194:19196 VST.floyd.SeparationLogicFacts Def <> modtype
R19200:19206 VST.floyd.SeparationLogicFacts CConseq <> modtype
mod 19161:19172 <> GenConseq.CConseqFacts
prf 19271:19284 GenConseq semax_pre_post
R19303:19312 VST.veric.juicy_extspec <> OracleKind class
binder 19296:19300 <> Espec:230
R19319:19327 VST.veric.mpred <> compspecs class
binder 19315:19316 <> CS:231
binder 19339:19340 <> P':232
R19347:19356 VST.veric.tycontext <> ret_assert rec
binder 19343:19344 <> R':233
binder 19359:19363 <> Delta:234
binder 19365:19365 <> P:235
binder 19367:19367 <> c:236
R19373:19382 VST.veric.tycontext <> ret_assert rec
binder 19370:19370 <> R:237
R19391:19391 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19428:19436 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19493:19500 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19555:19562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19623:19630 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19631:19631 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19705:19712 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19742:19745 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19747:19751 VST.floyd.SeparationLogicFacts GenConseq semax defax
R19772:19772 VST.floyd.SeparationLogicFacts <> R:237 var
R19770:19770 VST.floyd.SeparationLogicFacts <> c:236 var
R19768:19768 VST.floyd.SeparationLogicFacts <> P:235 var
R19762:19766 VST.floyd.SeparationLogicFacts <> Delta:234 var
R19756:19760 VST.floyd.SeparationLogicFacts <> Espec:230 var
R19753:19754 VST.floyd.SeparationLogicFacts <> CS:231 var
R19714:19718 VST.floyd.SeparationLogicFacts GenConseq semax defax
R19740:19741 VST.floyd.SeparationLogicFacts <> R':233 var
R19738:19738 VST.floyd.SeparationLogicFacts <> c:236 var
R19735:19736 VST.floyd.SeparationLogicFacts <> P':232 var
R19729:19733 VST.floyd.SeparationLogicFacts <> Delta:234 var
R19723:19727 VST.floyd.SeparationLogicFacts <> Espec:230 var
R19720:19721 VST.floyd.SeparationLogicFacts <> CS:231 var
binder 19639:19640 <> vl:238
R19686:19690 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R19667:19670 VST.msl.seplog <> ::logic:x_'&&'_x not
R19643:19647 VST.veric.SeparationLogic <> local def
R19650:19659 VST.veric.SeparationLogic <> tc_environ def
R19661:19665 VST.floyd.SeparationLogicFacts <> Delta:234 var
R19671:19679 VST.veric.tycontext <> RA_return proj
R19684:19685 VST.floyd.SeparationLogicFacts <> vl:238 var
R19681:19682 VST.floyd.SeparationLogicFacts <> R':233 var
R19691:19699 VST.veric.tycontext <> RA_return proj
R19703:19704 VST.floyd.SeparationLogicFacts <> vl:238 var
R19701:19701 VST.floyd.SeparationLogicFacts <> R:237 var
R19605:19609 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R19587:19590 VST.msl.seplog <> ::logic:x_'&&'_x not
R19563:19567 VST.veric.SeparationLogic <> local def
R19570:19579 VST.veric.SeparationLogic <> tc_environ def
R19581:19585 VST.floyd.SeparationLogicFacts <> Delta:234 var
R19591:19601 VST.veric.tycontext <> RA_continue proj
R19603:19604 VST.floyd.SeparationLogicFacts <> R':233 var
R19610:19620 VST.veric.tycontext <> RA_continue proj
R19622:19622 VST.floyd.SeparationLogicFacts <> R:237 var
R19540:19544 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R19525:19528 VST.msl.seplog <> ::logic:x_'&&'_x not
R19501:19505 VST.veric.SeparationLogic <> local def
R19508:19517 VST.veric.SeparationLogic <> tc_environ def
R19519:19523 VST.floyd.SeparationLogicFacts <> Delta:234 var
R19529:19536 VST.veric.tycontext <> RA_break proj
R19538:19539 VST.floyd.SeparationLogicFacts <> R':233 var
R19545:19552 VST.veric.tycontext <> RA_break proj
R19554:19554 VST.floyd.SeparationLogicFacts <> R:237 var
R19477:19481 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R19461:19464 VST.msl.seplog <> ::logic:x_'&&'_x not
R19437:19441 VST.veric.SeparationLogic <> local def
R19444:19453 VST.veric.SeparationLogic <> tc_environ def
R19455:19459 VST.floyd.SeparationLogicFacts <> Delta:234 var
R19465:19473 VST.veric.tycontext <> RA_normal proj
R19475:19476 VST.floyd.SeparationLogicFacts <> R':233 var
R19482:19490 VST.veric.tycontext <> RA_normal proj
R19492:19492 VST.floyd.SeparationLogicFacts <> R:237 var
R19421:19425 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R19416:19419 VST.msl.seplog <> ::logic:x_'&&'_x not
R19392:19396 VST.veric.SeparationLogic <> local def
R19399:19408 VST.veric.SeparationLogic <> tc_environ def
R19410:19414 VST.floyd.SeparationLogicFacts <> Delta:234 var
R19420:19420 VST.floyd.SeparationLogicFacts <> P:235 var
R19426:19427 VST.floyd.SeparationLogicFacts <> P':232 var
R19799:19817 VST.floyd.SeparationLogicFacts GenConseq semax_pre_post_bupd thm
R19842:19854 VST.msl.seplog <> derives_trans meth
R19857:19866 VST.msl.ghost_seplog <> bupd_intro meth
R19799:19817 VST.floyd.SeparationLogicFacts GenConseq semax_pre_post_bupd thm
R19842:19854 VST.msl.seplog <> derives_trans meth
R19857:19866 VST.msl.ghost_seplog <> bupd_intro meth
R19842:19854 VST.msl.seplog <> derives_trans meth
R19857:19866 VST.msl.ghost_seplog <> bupd_intro meth
R19842:19854 VST.msl.seplog <> derives_trans meth
R19857:19866 VST.msl.ghost_seplog <> bupd_intro meth
R19842:19854 VST.msl.seplog <> derives_trans meth
R19857:19866 VST.msl.ghost_seplog <> bupd_intro meth
R19842:19854 VST.msl.seplog <> derives_trans meth
R19857:19866 VST.msl.ghost_seplog <> bupd_intro meth
R19885:19893 VST.floyd.SeparationLogicFacts GenConseq <> mod
R19932:19964 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R19983:20023 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R20049:20051 VST.floyd.SeparationLogicFacts Def <> modtype
mod 19904:19917 <> GenConseqFacts
prf 20117:20125 GenConseqFacts semax_pre
R20143:20152 VST.veric.juicy_extspec <> OracleKind class
binder 20136:20140 <> Espec:239
R20159:20167 VST.veric.mpred <> compspecs class
binder 20155:20156 <> cs:240
binder 20179:20180 <> P':241
binder 20182:20186 <> Delta:242
binder 20188:20188 <> P:243
binder 20190:20190 <> c:244
binder 20192:20192 <> R:245
R20236:20244 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20273:20277 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20279:20283 VST.floyd.SeparationLogicFacts Def semax defax
R20304:20304 VST.floyd.SeparationLogicFacts <> R:245 var
R20302:20302 VST.floyd.SeparationLogicFacts <> c:244 var
R20300:20300 VST.floyd.SeparationLogicFacts <> P:243 var
R20294:20298 VST.floyd.SeparationLogicFacts <> Delta:242 var
R20288:20292 VST.floyd.SeparationLogicFacts <> Espec:239 var
R20285:20286 VST.floyd.SeparationLogicFacts <> cs:240 var
R20246:20250 VST.floyd.SeparationLogicFacts Def semax defax
R20272:20272 VST.floyd.SeparationLogicFacts <> R:245 var
R20270:20270 VST.floyd.SeparationLogicFacts <> c:244 var
R20267:20268 VST.floyd.SeparationLogicFacts <> P':241 var
R20261:20265 VST.floyd.SeparationLogicFacts <> Delta:242 var
R20255:20259 VST.floyd.SeparationLogicFacts <> Espec:239 var
R20252:20253 VST.floyd.SeparationLogicFacts <> cs:240 var
R20229:20233 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R20224:20227 VST.msl.seplog <> ::logic:x_'&&'_x not
R20200:20204 VST.veric.SeparationLogic <> local def
R20207:20216 VST.veric.SeparationLogic <> tc_environ def
R20218:20222 VST.floyd.SeparationLogicFacts <> Delta:242 var
R20228:20228 VST.floyd.SeparationLogicFacts <> P:243 var
R20234:20235 VST.floyd.SeparationLogicFacts <> P':241 var
R20331:20344 VST.floyd.SeparationLogicFacts Conseq semax_pre_post prfax
R20370:20380 VST.floyd.assert_lemmas <> ENTAIL_refl thm
R20331:20344 VST.floyd.SeparationLogicFacts Conseq semax_pre_post prfax
R20370:20380 VST.floyd.assert_lemmas <> ENTAIL_refl thm
R20370:20380 VST.floyd.assert_lemmas <> ENTAIL_refl thm
R20370:20380 VST.floyd.assert_lemmas <> ENTAIL_refl thm
R20370:20380 VST.floyd.assert_lemmas <> ENTAIL_refl thm
prf 20395:20410 GenConseqFacts semax_pre_simple
R20428:20437 VST.veric.juicy_extspec <> OracleKind class
binder 20421:20425 <> Espec:246
R20444:20452 VST.veric.mpred <> compspecs class
binder 20440:20441 <> cs:247
binder 20464:20465 <> P':248
binder 20467:20471 <> Delta:249
binder 20473:20473 <> P:250
binder 20475:20475 <> c:251
binder 20477:20477 <> R:252
R20493:20501 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20530:20534 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20536:20540 VST.floyd.SeparationLogicFacts Def semax defax
R20561:20561 VST.floyd.SeparationLogicFacts <> R:252 var
R20559:20559 VST.floyd.SeparationLogicFacts <> c:251 var
R20557:20557 VST.floyd.SeparationLogicFacts <> P:250 var
R20551:20555 VST.floyd.SeparationLogicFacts <> Delta:249 var
R20545:20549 VST.floyd.SeparationLogicFacts <> Espec:246 var
R20542:20543 VST.floyd.SeparationLogicFacts <> cs:247 var
R20503:20507 VST.floyd.SeparationLogicFacts Def semax defax
R20529:20529 VST.floyd.SeparationLogicFacts <> R:252 var
R20527:20527 VST.floyd.SeparationLogicFacts <> c:251 var
R20524:20525 VST.floyd.SeparationLogicFacts <> P':248 var
R20518:20522 VST.floyd.SeparationLogicFacts <> Delta:249 var
R20512:20516 VST.floyd.SeparationLogicFacts <> Espec:246 var
R20509:20510 VST.floyd.SeparationLogicFacts <> cs:247 var
R20486:20490 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R20485:20485 VST.floyd.SeparationLogicFacts <> P:250 var
R20491:20492 VST.floyd.SeparationLogicFacts <> P':248 var
R20586:20594 VST.floyd.SeparationLogicFacts GenConseqFacts semax_pre thm
R20586:20594 VST.floyd.SeparationLogicFacts GenConseqFacts semax_pre thm
R20614:20623 VST.msl.seplog <> andp_left2 meth
R20614:20623 VST.msl.seplog <> andp_left2 meth
prf 20644:20653 GenConseqFacts semax_post
R20669:20678 VST.veric.tycontext <> ret_assert rec
binder 20665:20666 <> R':253
binder 20681:20685 <> Espec:254
R20692:20700 VST.veric.mpred <> compspecs class
binder 20688:20689 <> cs:255
binder 20703:20707 <> Delta:256
R20713:20722 VST.veric.tycontext <> ret_assert rec
binder 20710:20710 <> R:257
binder 20725:20725 <> P:258
binder 20727:20727 <> c:259
R20789:20795 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20850:20856 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20917:20923 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20924:20924 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20998:21005 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21034:21038 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21040:21044 VST.floyd.SeparationLogicFacts Def semax defax
R21065:21065 VST.floyd.SeparationLogicFacts <> R:257 var
R21063:21063 VST.floyd.SeparationLogicFacts <> c:259 var
R21061:21061 VST.floyd.SeparationLogicFacts <> P:258 var
R21055:21059 VST.floyd.SeparationLogicFacts <> Delta:256 var
R21049:21053 VST.floyd.SeparationLogicFacts <> Espec:254 var
R21046:21047 VST.floyd.SeparationLogicFacts <> cs:255 var
R21007:21011 VST.floyd.SeparationLogicFacts Def semax defax
R21032:21033 VST.floyd.SeparationLogicFacts <> R':253 var
R21030:21030 VST.floyd.SeparationLogicFacts <> c:259 var
R21028:21028 VST.floyd.SeparationLogicFacts <> P:258 var
R21022:21026 VST.floyd.SeparationLogicFacts <> Delta:256 var
R21016:21020 VST.floyd.SeparationLogicFacts <> Espec:254 var
R21013:21014 VST.floyd.SeparationLogicFacts <> cs:255 var
binder 20932:20933 <> vl:260
R20979:20983 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R20960:20963 VST.msl.seplog <> ::logic:x_'&&'_x not
R20936:20940 VST.veric.SeparationLogic <> local def
R20943:20952 VST.veric.SeparationLogic <> tc_environ def
R20954:20958 VST.floyd.SeparationLogicFacts <> Delta:256 var
R20964:20972 VST.veric.tycontext <> RA_return proj
R20977:20978 VST.floyd.SeparationLogicFacts <> vl:260 var
R20974:20975 VST.floyd.SeparationLogicFacts <> R':253 var
R20984:20992 VST.veric.tycontext <> RA_return proj
R20996:20997 VST.floyd.SeparationLogicFacts <> vl:260 var
R20994:20994 VST.floyd.SeparationLogicFacts <> R:257 var
R20899:20903 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R20881:20884 VST.msl.seplog <> ::logic:x_'&&'_x not
R20857:20861 VST.veric.SeparationLogic <> local def
R20864:20873 VST.veric.SeparationLogic <> tc_environ def
R20875:20879 VST.floyd.SeparationLogicFacts <> Delta:256 var
R20885:20895 VST.veric.tycontext <> RA_continue proj
R20897:20898 VST.floyd.SeparationLogicFacts <> R':253 var
R20904:20914 VST.veric.tycontext <> RA_continue proj
R20916:20916 VST.floyd.SeparationLogicFacts <> R:257 var
R20835:20839 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R20820:20823 VST.msl.seplog <> ::logic:x_'&&'_x not
R20796:20800 VST.veric.SeparationLogic <> local def
R20803:20812 VST.veric.SeparationLogic <> tc_environ def
R20814:20818 VST.floyd.SeparationLogicFacts <> Delta:256 var
R20824:20831 VST.veric.tycontext <> RA_break proj
R20833:20834 VST.floyd.SeparationLogicFacts <> R':253 var
R20840:20847 VST.veric.tycontext <> RA_break proj
R20849:20849 VST.floyd.SeparationLogicFacts <> R:257 var
R20773:20777 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R20757:20760 VST.msl.seplog <> ::logic:x_'&&'_x not
R20733:20737 VST.veric.SeparationLogic <> local def
R20740:20749 VST.veric.SeparationLogic <> tc_environ def
R20751:20755 VST.floyd.SeparationLogicFacts <> Delta:256 var
R20761:20769 VST.veric.tycontext <> RA_normal proj
R20771:20772 VST.floyd.SeparationLogicFacts <> R':253 var
R20778:20786 VST.veric.tycontext <> RA_normal proj
R20788:20788 VST.floyd.SeparationLogicFacts <> R:257 var
R21090:21103 VST.floyd.SeparationLogicFacts Conseq semax_pre_post prfax
R21090:21103 VST.floyd.SeparationLogicFacts Conseq semax_pre_post prfax
R21129:21139 VST.floyd.assert_lemmas <> ENTAIL_refl thm
R21129:21139 VST.floyd.assert_lemmas <> ENTAIL_refl thm
prf 21154:21170 GenConseqFacts semax_post_simple
R21186:21195 VST.veric.tycontext <> ret_assert rec
binder 21182:21183 <> R':261
binder 21198:21202 <> Espec:262
R21209:21217 VST.veric.mpred <> compspecs class
binder 21205:21206 <> cs:263
binder 21220:21224 <> Delta:264
R21230:21239 VST.veric.tycontext <> ret_assert rec
binder 21227:21227 <> R:265
binder 21242:21242 <> P:266
binder 21244:21244 <> c:267
R21278:21284 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21311:21317 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21350:21356 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21357:21357 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21403:21410 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21439:21443 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21445:21449 VST.floyd.SeparationLogicFacts Def semax defax
R21470:21470 VST.floyd.SeparationLogicFacts <> R:265 var
R21468:21468 VST.floyd.SeparationLogicFacts <> c:267 var
R21466:21466 VST.floyd.SeparationLogicFacts <> P:266 var
R21460:21464 VST.floyd.SeparationLogicFacts <> Delta:264 var
R21454:21458 VST.floyd.SeparationLogicFacts <> Espec:262 var
R21451:21452 VST.floyd.SeparationLogicFacts <> cs:263 var
R21412:21416 VST.floyd.SeparationLogicFacts Def semax defax
R21437:21438 VST.floyd.SeparationLogicFacts <> R':261 var
R21435:21435 VST.floyd.SeparationLogicFacts <> c:267 var
R21433:21433 VST.floyd.SeparationLogicFacts <> P:266 var
R21427:21431 VST.floyd.SeparationLogicFacts <> Delta:264 var
R21421:21425 VST.floyd.SeparationLogicFacts <> Espec:262 var
R21418:21419 VST.floyd.SeparationLogicFacts <> cs:263 var
binder 21365:21366 <> vl:268
R21384:21388 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R21369:21377 VST.veric.tycontext <> RA_return proj
R21382:21383 VST.floyd.SeparationLogicFacts <> vl:268 var
R21379:21380 VST.floyd.SeparationLogicFacts <> R':261 var
R21389:21397 VST.veric.tycontext <> RA_return proj
R21401:21402 VST.floyd.SeparationLogicFacts <> vl:268 var
R21399:21399 VST.floyd.SeparationLogicFacts <> R:265 var
R21332:21336 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R21318:21328 VST.veric.tycontext <> RA_continue proj
R21330:21331 VST.floyd.SeparationLogicFacts <> R':261 var
R21337:21347 VST.veric.tycontext <> RA_continue proj
R21349:21349 VST.floyd.SeparationLogicFacts <> R:265 var
R21296:21300 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R21285:21292 VST.veric.tycontext <> RA_break proj
R21294:21295 VST.floyd.SeparationLogicFacts <> R':261 var
R21301:21308 VST.veric.tycontext <> RA_break proj
R21310:21310 VST.floyd.SeparationLogicFacts <> R:265 var
R21262:21266 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R21250:21258 VST.veric.tycontext <> RA_normal proj
R21260:21261 VST.floyd.SeparationLogicFacts <> R':261 var
R21267:21275 VST.veric.tycontext <> RA_normal proj
R21277:21277 VST.floyd.SeparationLogicFacts <> R:265 var
R21497:21506 VST.floyd.SeparationLogicFacts GenConseqFacts semax_post thm
R21497:21506 VST.floyd.SeparationLogicFacts GenConseqFacts semax_post thm
prf 21565:21575 GenConseqFacts semax_post'
binder 21585:21586 <> R':269
binder 21588:21592 <> Espec:270
R21599:21607 VST.veric.mpred <> compspecs class
binder 21595:21596 <> cs:271
binder 21610:21614 <> Delta:272
binder 21616:21616 <> R:273
binder 21618:21618 <> P:274
binder 21620:21620 <> c:275
R21670:21679 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21728:21737 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21739:21743 VST.floyd.SeparationLogicFacts Def semax defax
R21765:21781 VST.veric.SeparationLogic <> normal_ret_assert def
R21783:21783 VST.floyd.SeparationLogicFacts <> R:273 var
R21762:21762 VST.floyd.SeparationLogicFacts <> c:275 var
R21760:21760 VST.floyd.SeparationLogicFacts <> P:274 var
R21754:21758 VST.floyd.SeparationLogicFacts <> Delta:272 var
R21748:21752 VST.floyd.SeparationLogicFacts <> Espec:270 var
R21745:21746 VST.floyd.SeparationLogicFacts <> cs:271 var
R21681:21685 VST.floyd.SeparationLogicFacts Def semax defax
R21707:21723 VST.veric.SeparationLogic <> normal_ret_assert def
R21725:21726 VST.floyd.SeparationLogicFacts <> R':269 var
R21704:21704 VST.floyd.SeparationLogicFacts <> c:275 var
R21702:21702 VST.floyd.SeparationLogicFacts <> P:274 var
R21696:21700 VST.floyd.SeparationLogicFacts <> Delta:272 var
R21690:21694 VST.floyd.SeparationLogicFacts <> Espec:270 var
R21687:21688 VST.floyd.SeparationLogicFacts <> cs:271 var
R21664:21668 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R21658:21661 VST.msl.seplog <> ::logic:x_'&&'_x not
R21634:21638 VST.veric.SeparationLogic <> local def
R21641:21650 VST.veric.SeparationLogic <> tc_environ def
R21652:21656 VST.floyd.SeparationLogicFacts <> Delta:272 var
R21662:21663 VST.floyd.SeparationLogicFacts <> R':269 var
R21669:21669 VST.floyd.SeparationLogicFacts <> R:273 var
R21809:21818 VST.floyd.SeparationLogicFacts GenConseqFacts semax_post thm
R21809:21818 VST.floyd.SeparationLogicFacts GenConseqFacts semax_post thm
prf 21962:21976 GenConseqFacts semax_pre_post'
binder 21986:21987 <> P':276
binder 21989:21990 <> R':277
binder 21992:21996 <> Espec:278
R22003:22011 VST.veric.mpred <> compspecs class
binder 21999:22000 <> cs:279
binder 22014:22018 <> Delta:280
binder 22020:22020 <> R:281
binder 22022:22022 <> P:282
binder 22024:22024 <> c:283
R22069:22078 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22115:22124 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22174:22183 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22185:22189 VST.floyd.SeparationLogicFacts Def semax defax
R22211:22227 VST.veric.SeparationLogic <> normal_ret_assert def
R22229:22229 VST.floyd.SeparationLogicFacts <> R:281 var
R22208:22208 VST.floyd.SeparationLogicFacts <> c:283 var
R22206:22206 VST.floyd.SeparationLogicFacts <> P:282 var
R22200:22204 VST.floyd.SeparationLogicFacts <> Delta:280 var
R22194:22198 VST.floyd.SeparationLogicFacts <> Espec:278 var
R22191:22192 VST.floyd.SeparationLogicFacts <> cs:279 var
R22126:22130 VST.floyd.SeparationLogicFacts Def semax defax
R22153:22169 VST.veric.SeparationLogic <> normal_ret_assert def
R22171:22172 VST.floyd.SeparationLogicFacts <> R':277 var
R22150:22150 VST.floyd.SeparationLogicFacts <> c:283 var
R22147:22148 VST.floyd.SeparationLogicFacts <> P':276 var
R22141:22145 VST.floyd.SeparationLogicFacts <> Delta:280 var
R22135:22139 VST.floyd.SeparationLogicFacts <> Espec:278 var
R22132:22133 VST.floyd.SeparationLogicFacts <> cs:279 var
R22109:22113 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R22103:22106 VST.msl.seplog <> ::logic:x_'&&'_x not
R22079:22083 VST.veric.SeparationLogic <> local def
R22086:22095 VST.veric.SeparationLogic <> tc_environ def
R22097:22101 VST.floyd.SeparationLogicFacts <> Delta:280 var
R22107:22108 VST.floyd.SeparationLogicFacts <> R':277 var
R22114:22114 VST.floyd.SeparationLogicFacts <> R:281 var
R22062:22066 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R22057:22060 VST.msl.seplog <> ::logic:x_'&&'_x not
R22033:22037 VST.veric.SeparationLogic <> local def
R22040:22049 VST.veric.SeparationLogic <> tc_environ def
R22051:22055 VST.floyd.SeparationLogicFacts <> Delta:280 var
R22061:22061 VST.floyd.SeparationLogicFacts <> P:282 var
R22067:22068 VST.floyd.SeparationLogicFacts <> P':276 var
R22256:22264 VST.floyd.SeparationLogicFacts GenConseqFacts semax_pre thm
R22256:22264 VST.floyd.SeparationLogicFacts GenConseqFacts semax_pre thm
R22282:22292 VST.floyd.SeparationLogicFacts GenConseqFacts semax_post' thm
R22282:22292 VST.floyd.SeparationLogicFacts GenConseqFacts semax_post' thm
prf 22346:22357 GenConseqFacts semax_post''
binder 22367:22368 <> R':284
binder 22370:22374 <> Espec:285
R22381:22389 VST.veric.mpred <> compspecs class
binder 22377:22378 <> cs:286
binder 22392:22396 <> Delta:287
binder 22398:22398 <> R:288
binder 22400:22400 <> P:289
binder 22402:22402 <> c:290
R22462:22471 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22520:22529 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22531:22535 VST.floyd.SeparationLogicFacts Def semax defax
R22556:22556 VST.floyd.SeparationLogicFacts <> R:288 var
R22554:22554 VST.floyd.SeparationLogicFacts <> c:290 var
R22552:22552 VST.floyd.SeparationLogicFacts <> P:289 var
R22546:22550 VST.floyd.SeparationLogicFacts <> Delta:287 var
R22540:22544 VST.floyd.SeparationLogicFacts <> Espec:285 var
R22537:22538 VST.floyd.SeparationLogicFacts <> cs:286 var
R22473:22477 VST.floyd.SeparationLogicFacts Def semax defax
R22499:22515 VST.veric.SeparationLogic <> normal_ret_assert def
R22517:22518 VST.floyd.SeparationLogicFacts <> R':284 var
R22496:22496 VST.floyd.SeparationLogicFacts <> c:290 var
R22494:22494 VST.floyd.SeparationLogicFacts <> P:289 var
R22488:22492 VST.floyd.SeparationLogicFacts <> Delta:287 var
R22482:22486 VST.floyd.SeparationLogicFacts <> Espec:285 var
R22479:22480 VST.floyd.SeparationLogicFacts <> cs:286 var
R22446:22450 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R22440:22443 VST.msl.seplog <> ::logic:x_'&&'_x not
R22416:22420 VST.veric.SeparationLogic <> local def
R22423:22432 VST.veric.SeparationLogic <> tc_environ def
R22434:22438 VST.floyd.SeparationLogicFacts <> Delta:287 var
R22444:22445 VST.floyd.SeparationLogicFacts <> R':284 var
R22451:22459 VST.veric.tycontext <> RA_normal proj
R22461:22461 VST.floyd.SeparationLogicFacts <> R:288 var
R22581:22590 VST.floyd.SeparationLogicFacts GenConseqFacts semax_post thm
R22581:22590 VST.floyd.SeparationLogicFacts GenConseqFacts semax_post thm
prf 22734:22749 GenConseqFacts semax_pre_post''
binder 22759:22760 <> P':291
binder 22762:22763 <> R':292
binder 22765:22769 <> Espec:293
R22776:22784 VST.veric.mpred <> compspecs class
binder 22772:22773 <> cs:294
binder 22787:22791 <> Delta:295
binder 22793:22793 <> R:296
binder 22795:22795 <> P:297
binder 22797:22797 <> c:298
R22842:22851 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22898:22907 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22957:22966 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22968:22972 VST.floyd.SeparationLogicFacts Def semax defax
R22993:22993 VST.floyd.SeparationLogicFacts <> R:296 var
R22991:22991 VST.floyd.SeparationLogicFacts <> c:298 var
R22989:22989 VST.floyd.SeparationLogicFacts <> P:297 var
R22983:22987 VST.floyd.SeparationLogicFacts <> Delta:295 var
R22977:22981 VST.floyd.SeparationLogicFacts <> Espec:293 var
R22974:22975 VST.floyd.SeparationLogicFacts <> cs:294 var
R22909:22913 VST.floyd.SeparationLogicFacts Def semax defax
R22936:22952 VST.veric.SeparationLogic <> normal_ret_assert def
R22954:22955 VST.floyd.SeparationLogicFacts <> R':292 var
R22933:22933 VST.floyd.SeparationLogicFacts <> c:298 var
R22930:22931 VST.floyd.SeparationLogicFacts <> P':291 var
R22924:22928 VST.floyd.SeparationLogicFacts <> Delta:295 var
R22918:22922 VST.floyd.SeparationLogicFacts <> Espec:293 var
R22915:22916 VST.floyd.SeparationLogicFacts <> cs:294 var
R22882:22886 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R22876:22879 VST.msl.seplog <> ::logic:x_'&&'_x not
R22852:22856 VST.veric.SeparationLogic <> local def
R22859:22868 VST.veric.SeparationLogic <> tc_environ def
R22870:22874 VST.floyd.SeparationLogicFacts <> Delta:295 var
R22880:22881 VST.floyd.SeparationLogicFacts <> R':292 var
R22887:22895 VST.veric.tycontext <> RA_normal proj
R22897:22897 VST.floyd.SeparationLogicFacts <> R:296 var
R22835:22839 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R22830:22833 VST.msl.seplog <> ::logic:x_'&&'_x not
R22806:22810 VST.veric.SeparationLogic <> local def
R22813:22822 VST.veric.SeparationLogic <> tc_environ def
R22824:22828 VST.floyd.SeparationLogicFacts <> Delta:295 var
R22834:22834 VST.floyd.SeparationLogicFacts <> P:297 var
R22840:22841 VST.floyd.SeparationLogicFacts <> P':291 var
R23019:23027 VST.floyd.SeparationLogicFacts GenConseqFacts semax_pre thm
R23019:23027 VST.floyd.SeparationLogicFacts GenConseqFacts semax_pre thm
R23045:23056 VST.floyd.SeparationLogicFacts GenConseqFacts semax_post'' thm
R23045:23056 VST.floyd.SeparationLogicFacts GenConseqFacts semax_post'' thm
R23076:23089 VST.floyd.SeparationLogicFacts GenConseqFacts <> mod
modtype 23105:23144 <> CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION
R23173:23205 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 23163:23170 <> CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION.CSHL_Def
ax 23233:23252 CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION semax_extract_exists
R23269:23277 VST.veric.mpred <> compspecs class
binder 23265:23266 <> CS:299
R23288:23297 VST.veric.juicy_extspec <> OracleKind class
binder 23281:23285 <> Espec:300
binder 23311:23311 <> A:301
R23328:23331 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23339:23340 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23341:23345 VST.veric.mpred <> mpred def
R23332:23338 VST.veric.mpred <> environ ind
R23327:23327 VST.floyd.SeparationLogicFacts <> A:301 var
binder 23323:23323 <> P:302
binder 23348:23348 <> c:303
R23358:23366 VST.veric.seplog <> tycontext ind
binder 23351:23355 <> Delta:304
R23373:23382 VST.veric.tycontext <> ret_assert rec
binder 23370:23370 <> R:305
R23388:23388 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23430:23437 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23439:23443 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION semax defax
R23476:23476 VST.floyd.SeparationLogicFacts <> R:305 var
R23474:23474 VST.floyd.SeparationLogicFacts <> c:303 var
R23461:23463 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R23467:23468 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R23466:23466 VST.floyd.SeparationLogicFacts <> A:301 var
binder 23464:23464 <> x:306
R23469:23469 VST.floyd.SeparationLogicFacts <> P:302 var
R23471:23471 VST.floyd.SeparationLogicFacts <> x:306 var
R23454:23458 VST.floyd.SeparationLogicFacts <> Delta:304 var
R23448:23452 VST.floyd.SeparationLogicFacts <> Espec:300 var
R23445:23446 VST.floyd.SeparationLogicFacts <> CS:299 var
binder 23396:23396 <> x:307
R23400:23404 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION semax defax
R23429:23429 VST.floyd.SeparationLogicFacts <> R:305 var
R23427:23427 VST.floyd.SeparationLogicFacts <> c:303 var
R23422:23422 VST.floyd.SeparationLogicFacts <> P:302 var
R23424:23424 VST.floyd.SeparationLogicFacts <> x:307 var
R23415:23419 VST.floyd.SeparationLogicFacts <> Delta:304 var
R23409:23413 VST.floyd.SeparationLogicFacts <> Espec:300 var
R23406:23407 VST.floyd.SeparationLogicFacts <> CS:299 var
R23484:23523 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION <> modtype
R23560:23592 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R23611:23651 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R23677:23679 VST.floyd.SeparationLogicFacts Def <> modtype
R23696:23735 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION <> mod
R23761:23763 VST.floyd.SeparationLogicFacts Def <> modtype
mod 23534:23545 <> GenExtrFacts
R23790:23803 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R23806:23808 VST.floyd.SeparationLogicFacts Def <> modtype
R23812:23817 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 23775:23785 <> GenExtrFacts.ConseqFacts
prf 23888:23905 GenExtrFacts semax_extract_prop
R23922:23930 VST.veric.mpred <> compspecs class
binder 23918:23919 <> CS:309
R23941:23950 VST.veric.juicy_extspec <> OracleKind class
binder 23934:23938 <> Espec:310
binder 23963:23967 <> Delta:311
binder 23970:23971 <> PP:312
binder 23980:23980 <> P:313
binder 23982:23982 <> c:314
binder 23984:23984 <> Q:315
R23998:23998 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24032:24047 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24049:24053 VST.floyd.SeparationLogicFacts Def semax defax
R24084:24084 VST.floyd.SeparationLogicFacts <> Q:315 var
R24082:24082 VST.floyd.SeparationLogicFacts <> c:314 var
R24075:24078 VST.msl.seplog <> ::logic:x_'&&'_x not
R24071:24072 VST.msl.seplog <> ::logic:'!!'_x not
R24073:24074 VST.floyd.SeparationLogicFacts <> PP:312 var
R24079:24079 VST.floyd.SeparationLogicFacts <> P:313 var
R24064:24068 VST.floyd.SeparationLogicFacts <> Delta:311 var
R24058:24062 VST.floyd.SeparationLogicFacts <> Espec:310 var
R24055:24056 VST.floyd.SeparationLogicFacts <> CS:309 var
R24001:24004 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24006:24010 VST.floyd.SeparationLogicFacts Def semax defax
R24031:24031 VST.floyd.SeparationLogicFacts <> Q:315 var
R24029:24029 VST.floyd.SeparationLogicFacts <> c:314 var
R24027:24027 VST.floyd.SeparationLogicFacts <> P:313 var
R24021:24025 VST.floyd.SeparationLogicFacts <> Delta:311 var
R24015:24019 VST.floyd.SeparationLogicFacts <> Espec:310 var
R24012:24013 VST.floyd.SeparationLogicFacts <> CS:309 var
R23999:24000 VST.floyd.SeparationLogicFacts <> PP:312 var
R24129:24131 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R24137:24138 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 24132:24132 <> H:316
R24113:24121 VST.floyd.SeparationLogicFacts GenExtrFacts semax_pre thm
R24129:24131 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R24137:24138 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 24132:24132 <> H:317
R24113:24121 VST.floyd.SeparationLogicFacts GenExtrFacts semax_pre thm
R24153:24162 VST.msl.seplog <> andp_left2 meth
R24153:24162 VST.msl.seplog <> andp_left2 meth
R24175:24194 VST.msl.log_normalize <> derives_extract_prop thm
R24175:24194 VST.msl.log_normalize <> derives_extract_prop thm
R24216:24224 VST.msl.seplog <> exp_right meth
R24231:24242 VST.msl.seplog <> derives_refl meth
R24216:24224 VST.msl.seplog <> exp_right meth
R24231:24242 VST.msl.seplog <> derives_refl meth
R24255:24274 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R24255:24274 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
prf 24292:24300 GenExtrFacts semax_orp
R24317:24325 VST.veric.mpred <> compspecs class
binder 24313:24314 <> CS:318
R24336:24345 VST.veric.juicy_extspec <> OracleKind class
binder 24329:24333 <> Espec:319
binder 24358:24362 <> Delta:320
binder 24364:24365 <> P1:321
binder 24367:24368 <> P2:322
binder 24370:24370 <> c:323
binder 24372:24372 <> Q:324
R24414:24428 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24457:24471 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24473:24477 VST.floyd.SeparationLogicFacts Def semax defax
R24507:24507 VST.floyd.SeparationLogicFacts <> Q:324 var
R24505:24505 VST.floyd.SeparationLogicFacts <> c:323 var
R24497:24500 VST.msl.seplog <> ::logic:x_'||'_x not
R24495:24496 VST.floyd.SeparationLogicFacts <> P1:321 var
R24501:24502 VST.floyd.SeparationLogicFacts <> P2:322 var
R24488:24492 VST.floyd.SeparationLogicFacts <> Delta:320 var
R24482:24486 VST.floyd.SeparationLogicFacts <> Espec:319 var
R24479:24480 VST.floyd.SeparationLogicFacts <> CS:318 var
R24430:24434 VST.floyd.SeparationLogicFacts Def semax defax
R24456:24456 VST.floyd.SeparationLogicFacts <> Q:324 var
R24454:24454 VST.floyd.SeparationLogicFacts <> c:323 var
R24451:24452 VST.floyd.SeparationLogicFacts <> P2:322 var
R24445:24449 VST.floyd.SeparationLogicFacts <> Delta:320 var
R24439:24443 VST.floyd.SeparationLogicFacts <> Espec:319 var
R24436:24437 VST.floyd.SeparationLogicFacts <> CS:318 var
R24387:24391 VST.floyd.SeparationLogicFacts Def semax defax
R24413:24413 VST.floyd.SeparationLogicFacts <> Q:324 var
R24411:24411 VST.floyd.SeparationLogicFacts <> c:323 var
R24408:24409 VST.floyd.SeparationLogicFacts <> P1:321 var
R24402:24406 VST.floyd.SeparationLogicFacts <> Delta:320 var
R24396:24400 VST.floyd.SeparationLogicFacts <> Espec:319 var
R24393:24394 VST.floyd.SeparationLogicFacts <> CS:318 var
R24552:24554 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R24562:24563 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R24558:24561 Coq.Init.Datatypes <> bool ind
binder 24555:24555 <> b:325
R24567:24567 VST.floyd.SeparationLogicFacts <> b:325 var
R24536:24544 VST.floyd.SeparationLogicFacts GenExtrFacts semax_pre thm
R24552:24554 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R24562:24563 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R24558:24561 Coq.Init.Datatypes <> bool ind
binder 24555:24555 <> b:326
R24567:24567 VST.floyd.SeparationLogicFacts <> b:326 var
R24536:24544 VST.floyd.SeparationLogicFacts GenExtrFacts semax_pre thm
R24597:24606 VST.msl.seplog <> andp_left2 meth
R24597:24606 VST.msl.seplog <> andp_left2 meth
R24619:24626 VST.msl.seplog <> orp_left meth
R24619:24626 VST.msl.seplog <> orp_left meth
R24642:24650 VST.msl.seplog <> exp_right meth
R24652:24655 Coq.Init.Datatypes <> true constr
R24659:24670 VST.msl.seplog <> derives_refl meth
R24642:24650 VST.msl.seplog <> exp_right meth
R24652:24655 Coq.Init.Datatypes <> true constr
R24659:24670 VST.msl.seplog <> derives_refl meth
R24686:24694 VST.msl.seplog <> exp_right meth
R24696:24700 Coq.Init.Datatypes <> false constr
R24704:24715 VST.msl.seplog <> derives_refl meth
R24686:24694 VST.msl.seplog <> exp_right meth
R24696:24700 Coq.Init.Datatypes <> false constr
R24704:24715 VST.msl.seplog <> derives_refl meth
R24728:24747 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R24728:24747 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R24794:24805 VST.floyd.SeparationLogicFacts GenExtrFacts <> mod
R24843:24875 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R24895:24944 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_COMPLETE_CONSEQUENCE <> mod
R24970:24972 VST.floyd.SeparationLogicFacts Def <> modtype
R24989:25028 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION <> mod
R25054:25056 VST.floyd.SeparationLogicFacts Def <> modtype
mod 24816:24828 <> GenIExtrFacts
R25078:25086 VST.floyd.SeparationLogicFacts GenConseq <> modtype
R25089:25091 VST.floyd.SeparationLogicFacts Def <> modtype
R25095:25101 VST.floyd.SeparationLogicFacts CConseq <> modtype
mod 25068:25073 <> GenIExtrFacts.Conseq
R25128:25142 VST.floyd.SeparationLogicFacts GenCConseqFacts <> modtype
R25145:25147 VST.floyd.SeparationLogicFacts Def <> modtype
R25151:25157 VST.floyd.SeparationLogicFacts CConseq <> modtype
mod 25112:25123 <> GenIExtrFacts.CConseqFacts
R25181:25192 VST.floyd.SeparationLogicFacts GenExtrFacts <> modtype
R25195:25197 VST.floyd.SeparationLogicFacts Def <> modtype
R25201:25206 VST.floyd.SeparationLogicFacts GenIExtrFacts.Conseq <> modtype
R25210:25213 VST.floyd.SeparationLogicFacts Extr <> modtype
mod 25168:25176 <> GenIExtrFacts.ExtrFacts
prf 25304:25327 GenIExtrFacts semax_extract_later_prop
R25344:25352 VST.veric.mpred <> compspecs class
binder 25340:25341 <> CS:327
R25363:25372 VST.veric.juicy_extspec <> OracleKind class
binder 25356:25360 <> Espec:328
binder 25385:25389 <> Delta:329
binder 25392:25393 <> PP:330
binder 25402:25402 <> P:331
binder 25404:25404 <> c:332
binder 25406:25406 <> Q:333
R25420:25420 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25454:25469 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25471:25475 VST.floyd.SeparationLogicFacts Def semax defax
R25511:25511 VST.floyd.SeparationLogicFacts <> Q:333 var
R25509:25509 VST.floyd.SeparationLogicFacts <> c:332 var
R25493:25493 VST.msl.seplog <> ::logic:x_'&&'_x not
R25501:25505 VST.msl.seplog <> ::logic:x_'&&'_x not
R25494:25496 VST.msl.seplog <> ::logic:'|>'_x not
R25497:25498 VST.msl.seplog <> ::logic:'!!'_x not
R25499:25500 VST.floyd.SeparationLogicFacts <> PP:330 var
R25506:25506 VST.floyd.SeparationLogicFacts <> P:331 var
R25486:25490 VST.floyd.SeparationLogicFacts <> Delta:329 var
R25480:25484 VST.floyd.SeparationLogicFacts <> Espec:328 var
R25477:25478 VST.floyd.SeparationLogicFacts <> CS:327 var
R25423:25426 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25428:25432 VST.floyd.SeparationLogicFacts Def semax defax
R25453:25453 VST.floyd.SeparationLogicFacts <> Q:333 var
R25451:25451 VST.floyd.SeparationLogicFacts <> c:332 var
R25449:25449 VST.floyd.SeparationLogicFacts <> P:331 var
R25443:25447 VST.floyd.SeparationLogicFacts <> Delta:329 var
R25437:25441 VST.floyd.SeparationLogicFacts <> Espec:328 var
R25434:25435 VST.floyd.SeparationLogicFacts <> CS:327 var
R25421:25422 VST.floyd.SeparationLogicFacts <> PP:330 var
R25539:25556 VST.floyd.SeparationLogicFacts GenIExtrFacts semax_extract_prop thm
R25539:25556 VST.floyd.SeparationLogicFacts GenIExtrFacts semax_extract_prop thm
R25573:25599 VST.floyd.SeparationLogicFacts GenIExtrFacts semax_pre_post_indexed_bupd thm
R25573:25599 VST.floyd.SeparationLogicFacts GenIExtrFacts semax_pre_post_indexed_bupd thm
R25628:25637 VST.msl.seplog <> andp_left2 meth
R25628:25637 VST.msl.seplog <> andp_left2 meth
R25651:25663 VST.msl.seplog <> derives_trans meth
R25675:25684 VST.msl.ghost_seplog <> bupd_intro meth
R25651:25663 VST.msl.seplog <> derives_trans meth
R25675:25684 VST.msl.ghost_seplog <> bupd_intro meth
R25700:25707 VST.msl.seplog <> orp_comm thm
R25710:25725 VST.msl.log_normalize <> distrib_andp_orp thm
R25700:25707 VST.msl.seplog <> orp_comm thm
R25700:25707 VST.msl.seplog <> orp_comm thm
R25710:25725 VST.msl.log_normalize <> distrib_andp_orp thm
R25710:25725 VST.msl.log_normalize <> distrib_andp_orp thm
R25738:25747 VST.msl.seplog <> andp_right meth
R25738:25747 VST.msl.seplog <> andp_right meth
R25762:25771 VST.msl.seplog <> andp_left1 meth
R25762:25771 VST.msl.seplog <> andp_left1 meth
R25786:25795 VST.msl.seplog <> later_prop meth
R25786:25795 VST.msl.seplog <> later_prop meth
R25810:25819 VST.msl.seplog <> orp_right1 meth
R25810:25819 VST.msl.seplog <> orp_right1 meth
R25850:25867 VST.floyd.assert_lemmas <> derives_bupd0_refl thm
R25850:25867 VST.floyd.assert_lemmas <> derives_bupd0_refl thm
R25880:25897 VST.floyd.assert_lemmas <> derives_bupd0_refl thm
R25880:25897 VST.floyd.assert_lemmas <> derives_bupd0_refl thm
R25910:25927 VST.floyd.assert_lemmas <> derives_bupd0_refl thm
R25910:25927 VST.floyd.assert_lemmas <> derives_bupd0_refl thm
R25948:25965 VST.floyd.assert_lemmas <> derives_bupd0_refl thm
R25948:25965 VST.floyd.assert_lemmas <> derives_bupd0_refl thm
R25978:25990 VST.floyd.SeparationLogicFacts GenIExtrFacts <> mod
modtype 26006:26048 <> CLIGHT_SEPARATION_HOARE_LOGIC_STORE_FORWARD
R26077:26109 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 26067:26074 <> CLIGHT_SEPARATION_HOARE_LOGIC_STORE_FORWARD.CSHL_Def
ax 26137:26155 CLIGHT_SEPARATION_HOARE_LOGIC_STORE_FORWARD semax_store_forward
R26172:26180 VST.veric.mpred <> compspecs class
binder 26168:26169 <> CS:334
R26191:26200 VST.veric.juicy_extspec <> OracleKind class
binder 26184:26188 <> Espec:335
R26211:26219 VST.veric.seplog <> tycontext ind
binder 26204:26208 <> Delta:336
binder 26231:26232 <> e1:337
binder 26234:26235 <> e2:338
binder 26237:26238 <> sh:339
binder 26240:26240 <> P:340
R26263:26269 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26271:26275 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_FORWARD semax defax
R26477:26493 VST.veric.SeparationLogic <> normal_ret_assert def
R26616:26618 VST.msl.seplog <> ::logic:x_'*'_x not
R26509:26510 VST.veric.lift LiftNotation :::'`('_x_')' not
R26532:26615 VST.veric.lift LiftNotation :::'`('_x_')' not
R26511:26516 VST.veric.SeparationLogic <> mapsto def
R26522:26527 compcert.cfrontend.Clight <> typeof def
R26529:26530 VST.floyd.SeparationLogicFacts <> e1:337 var
R26518:26519 VST.floyd.SeparationLogicFacts <> sh:339 var
R26552:26552 VST.veric.lift LiftNotation :::'`'_x not
R26562:26614 VST.veric.lift LiftNotation :::'`'_x not
R26553:26561 VST.veric.val_lemmas <> force_val def
R26564:26565 VST.veric.lift LiftNotation :::'`('_x_')' not
R26598:26613 VST.veric.lift LiftNotation :::'`('_x_')' not
R26566:26573 VST.veric.Clight_Cop2 <> sem_cast def
R26588:26593 compcert.cfrontend.Clight <> typeof def
R26595:26596 VST.floyd.SeparationLogicFacts <> e1:337 var
R26576:26581 compcert.cfrontend.Clight <> typeof def
R26583:26584 VST.floyd.SeparationLogicFacts <> e2:338 var
R26601:26609 VST.veric.expr <> eval_expr def
R26611:26612 VST.floyd.SeparationLogicFacts <> e2:338 var
R26535:26545 VST.veric.expr <> eval_lvalue def
R26547:26548 VST.floyd.SeparationLogicFacts <> e1:337 var
R26619:26619 VST.floyd.SeparationLogicFacts <> P:340 var
R26451:26457 compcert.cfrontend.Clight <> Sassign constr
R26462:26463 VST.floyd.SeparationLogicFacts <> e2:338 var
R26459:26460 VST.floyd.SeparationLogicFacts <> e1:337 var
R26303:26307 VST.msl.seplog <> ::logic:'|>'_x not
R26437:26437 VST.msl.seplog <> ::logic:'|>'_x not
R26371:26389 VST.msl.seplog <> ::logic:x_'&&'_x not
R26436:26436 VST.msl.seplog <> ::logic:x_'&&'_x not
R26308:26308 VST.msl.seplog <> ::logic:x_'&&'_x not
R26327:26333 VST.msl.seplog <> ::logic:x_'&&'_x not
R26370:26370 VST.msl.seplog <> ::logic:x_'&&'_x not
R26309:26317 VST.veric.SeparationLogic <> tc_lvalue def
R26325:26326 VST.floyd.SeparationLogicFacts <> e1:337 var
R26319:26323 VST.floyd.SeparationLogicFacts <> Delta:336 var
R26334:26340 VST.veric.SeparationLogic <> tc_expr def
R26349:26353 compcert.cfrontend.Clight <> Ecast constr
R26359:26364 compcert.cfrontend.Clight <> typeof def
R26366:26367 VST.floyd.SeparationLogicFacts <> e1:337 var
R26355:26356 VST.floyd.SeparationLogicFacts <> e2:338 var
R26342:26346 VST.floyd.SeparationLogicFacts <> Delta:336 var
R26432:26434 VST.msl.seplog <> ::logic:x_'*'_x not
R26390:26391 VST.veric.lift LiftNotation :::'`('_x_')' not
R26414:26431 VST.veric.lift LiftNotation :::'`('_x_')' not
R26392:26398 VST.veric.SeparationLogic <> mapsto_ def
R26404:26409 compcert.cfrontend.Clight <> typeof def
R26411:26412 VST.floyd.SeparationLogicFacts <> e1:337 var
R26400:26401 VST.floyd.SeparationLogicFacts <> sh:339 var
R26417:26427 VST.veric.expr <> eval_lvalue def
R26429:26430 VST.floyd.SeparationLogicFacts <> e1:337 var
R26435:26435 VST.floyd.SeparationLogicFacts <> P:340 var
R26286:26290 VST.floyd.SeparationLogicFacts <> Delta:336 var
R26280:26284 VST.floyd.SeparationLogicFacts <> Espec:335 var
R26277:26278 VST.floyd.SeparationLogicFacts <> CS:334 var
R26246:26259 VST.veric.shares <> writable_share def
R26261:26262 VST.floyd.SeparationLogicFacts <> sh:339 var
R26629:26671 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_FORWARD <> modtype
modtype 26687:26730 <> CLIGHT_SEPARATION_HOARE_LOGIC_STORE_BACKWARD
R26759:26791 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 26749:26756 <> CLIGHT_SEPARATION_HOARE_LOGIC_STORE_BACKWARD.CSHL_Def
ax 26819:26838 CLIGHT_SEPARATION_HOARE_LOGIC_STORE_BACKWARD semax_store_backward
R26853:26861 VST.veric.mpred <> compspecs class
binder 26849:26850 <> CS:342
R26872:26881 VST.veric.juicy_extspec <> OracleKind class
binder 26865:26869 <> Espec:343
R26892:26900 VST.veric.seplog <> tycontext ind
binder 26885:26889 <> Delta:344
binder 26903:26904 <> e1:345
binder 26906:26907 <> e2:346
binder 26909:26909 <> P:347
R26916:26920 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_BACKWARD semax defax
R27275:27291 VST.veric.SeparationLogic <> normal_ret_assert def
R27293:27293 VST.floyd.SeparationLogicFacts <> P:347 var
R27249:27255 compcert.cfrontend.Clight <> Sassign constr
R27260:27261 VST.floyd.SeparationLogicFacts <> e2:346 var
R27257:27258 VST.floyd.SeparationLogicFacts <> e1:345 var
R26948:26950 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R26960:26961 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R26955:26959 VST.msl.shares <> share def
binder 26951:26952 <> sh:348
R26982:26985 VST.msl.seplog <> ::logic:x_'&&'_x not
R26962:26964 VST.msl.seplog <> ::logic:'!!'_x not
R26965:26978 VST.veric.shares <> writable_share def
R26980:26981 VST.floyd.SeparationLogicFacts <> sh:348 var
R26986:26990 VST.msl.seplog <> ::logic:'|>'_x not
R27235:27235 VST.msl.seplog <> ::logic:'|>'_x not
R27054:27072 VST.msl.seplog <> ::logic:x_'&&'_x not
R27234:27234 VST.msl.seplog <> ::logic:x_'&&'_x not
R26991:26991 VST.msl.seplog <> ::logic:x_'&&'_x not
R27010:27016 VST.msl.seplog <> ::logic:x_'&&'_x not
R27053:27053 VST.msl.seplog <> ::logic:x_'&&'_x not
R26992:27000 VST.veric.SeparationLogic <> tc_lvalue def
R27008:27009 VST.floyd.SeparationLogicFacts <> e1:345 var
R27002:27006 VST.floyd.SeparationLogicFacts <> Delta:344 var
R27017:27023 VST.veric.SeparationLogic <> tc_expr def
R27032:27036 compcert.cfrontend.Clight <> Ecast constr
R27042:27047 compcert.cfrontend.Clight <> typeof def
R27049:27050 VST.floyd.SeparationLogicFacts <> e1:345 var
R27038:27039 VST.floyd.SeparationLogicFacts <> e2:346 var
R27025:27029 VST.floyd.SeparationLogicFacts <> Delta:344 var
R27073:27073 VST.msl.seplog <> ::logic:x_'*'_x not
R27116:27120 VST.msl.seplog <> ::logic:x_'*'_x not
R27233:27233 VST.msl.seplog <> ::logic:x_'*'_x not
R27074:27075 VST.veric.lift LiftNotation :::'`('_x_')' not
R27098:27115 VST.veric.lift LiftNotation :::'`('_x_')' not
R27076:27082 VST.veric.SeparationLogic <> mapsto_ def
R27088:27093 compcert.cfrontend.Clight <> typeof def
R27095:27096 VST.floyd.SeparationLogicFacts <> e1:345 var
R27084:27085 VST.floyd.SeparationLogicFacts <> sh:348 var
R27101:27111 VST.veric.expr <> eval_lvalue def
R27113:27114 VST.floyd.SeparationLogicFacts <> e1:345 var
R27228:27231 VST.msl.seplog <> ::logic:x_'-*'_x not
R27121:27122 VST.veric.lift LiftNotation :::'`('_x_')' not
R27144:27227 VST.veric.lift LiftNotation :::'`('_x_')' not
R27123:27128 VST.veric.SeparationLogic <> mapsto def
R27134:27139 compcert.cfrontend.Clight <> typeof def
R27141:27142 VST.floyd.SeparationLogicFacts <> e1:345 var
R27130:27131 VST.floyd.SeparationLogicFacts <> sh:348 var
R27164:27164 VST.veric.lift LiftNotation :::'`'_x not
R27174:27226 VST.veric.lift LiftNotation :::'`'_x not
R27165:27173 VST.veric.val_lemmas <> force_val def
R27176:27177 VST.veric.lift LiftNotation :::'`('_x_')' not
R27210:27225 VST.veric.lift LiftNotation :::'`('_x_')' not
R27178:27185 VST.veric.Clight_Cop2 <> sem_cast def
R27200:27205 compcert.cfrontend.Clight <> typeof def
R27207:27208 VST.floyd.SeparationLogicFacts <> e1:345 var
R27188:27193 compcert.cfrontend.Clight <> typeof def
R27195:27196 VST.floyd.SeparationLogicFacts <> e2:346 var
R27213:27221 VST.veric.expr <> eval_expr def
R27223:27224 VST.floyd.SeparationLogicFacts <> e2:346 var
R27147:27157 VST.veric.expr <> eval_lvalue def
R27159:27160 VST.floyd.SeparationLogicFacts <> e1:345 var
R27232:27232 VST.floyd.SeparationLogicFacts <> P:347 var
R26931:26935 VST.floyd.SeparationLogicFacts <> Delta:344 var
R26925:26929 VST.floyd.SeparationLogicFacts <> Espec:343 var
R26922:26923 VST.floyd.SeparationLogicFacts <> CS:342 var
R27302:27345 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_BACKWARD <> modtype
R27378:27410 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R27429:27469 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R27495:27497 VST.floyd.SeparationLogicFacts Def <> modtype
R27514:27553 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION <> mod
R27579:27581 VST.floyd.SeparationLogicFacts Def <> modtype
R27600:27642 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_FORWARD <> mod
R27668:27670 VST.floyd.SeparationLogicFacts Def <> modtype
R27681:27724 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_BACKWARD <> mod
R27750:27752 VST.floyd.SeparationLogicFacts Def <> modtype
mod 27356:27363 <> StoreF2B
R27775:27777 VST.floyd.SeparationLogicFacts Def <> modtype
mod 27763:27770 <> StoreF2B.CSHL_Def
R27802:27815 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R27818:27820 VST.floyd.SeparationLogicFacts Def <> modtype
R27824:27829 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 27787:27797 <> StoreF2B.ConseqFacts
R27853:27864 VST.floyd.SeparationLogicFacts GenExtrFacts <> modtype
R27867:27869 VST.floyd.SeparationLogicFacts Def <> modtype
R27873:27878 VST.floyd.SeparationLogicFacts Conseq <> modtype
R27882:27885 VST.floyd.SeparationLogicFacts Extr <> modtype
mod 27840:27848 <> StoreF2B.ExtrFacts
prf 27991:28010 StoreF2B semax_store_backward
R28025:28033 VST.veric.mpred <> compspecs class
binder 28021:28022 <> CS:350
R28044:28053 VST.veric.juicy_extspec <> OracleKind class
binder 28037:28041 <> Espec:351
R28064:28072 VST.veric.seplog <> tycontext ind
binder 28057:28061 <> Delta:352
binder 28075:28076 <> e1:353
binder 28078:28079 <> e2:354
binder 28081:28081 <> P:355
R28088:28092 VST.floyd.SeparationLogicFacts Def semax defax
R28447:28463 VST.veric.SeparationLogic <> normal_ret_assert def
R28465:28465 VST.floyd.SeparationLogicFacts <> P:355 var
R28421:28427 compcert.cfrontend.Clight <> Sassign constr
R28432:28433 VST.floyd.SeparationLogicFacts <> e2:354 var
R28429:28430 VST.floyd.SeparationLogicFacts <> e1:353 var
R28120:28122 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R28132:28133 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R28127:28131 VST.msl.shares <> share def
binder 28123:28124 <> sh:356
R28154:28157 VST.msl.seplog <> ::logic:x_'&&'_x not
R28134:28136 VST.msl.seplog <> ::logic:'!!'_x not
R28137:28150 VST.veric.shares <> writable_share def
R28152:28153 VST.floyd.SeparationLogicFacts <> sh:356 var
R28158:28162 VST.msl.seplog <> ::logic:'|>'_x not
R28407:28407 VST.msl.seplog <> ::logic:'|>'_x not
R28226:28244 VST.msl.seplog <> ::logic:x_'&&'_x not
R28406:28406 VST.msl.seplog <> ::logic:x_'&&'_x not
R28163:28163 VST.msl.seplog <> ::logic:x_'&&'_x not
R28182:28188 VST.msl.seplog <> ::logic:x_'&&'_x not
R28225:28225 VST.msl.seplog <> ::logic:x_'&&'_x not
R28164:28172 VST.veric.SeparationLogic <> tc_lvalue def
R28180:28181 VST.floyd.SeparationLogicFacts <> e1:353 var
R28174:28178 VST.floyd.SeparationLogicFacts <> Delta:352 var
R28189:28195 VST.veric.SeparationLogic <> tc_expr def
R28204:28208 compcert.cfrontend.Clight <> Ecast constr
R28214:28219 compcert.cfrontend.Clight <> typeof def
R28221:28222 VST.floyd.SeparationLogicFacts <> e1:353 var
R28210:28211 VST.floyd.SeparationLogicFacts <> e2:354 var
R28197:28201 VST.floyd.SeparationLogicFacts <> Delta:352 var
R28245:28245 VST.msl.seplog <> ::logic:x_'*'_x not
R28288:28292 VST.msl.seplog <> ::logic:x_'*'_x not
R28405:28405 VST.msl.seplog <> ::logic:x_'*'_x not
R28246:28247 VST.veric.lift LiftNotation :::'`('_x_')' not
R28270:28287 VST.veric.lift LiftNotation :::'`('_x_')' not
R28248:28254 VST.veric.SeparationLogic <> mapsto_ def
R28260:28265 compcert.cfrontend.Clight <> typeof def
R28267:28268 VST.floyd.SeparationLogicFacts <> e1:353 var
R28256:28257 VST.floyd.SeparationLogicFacts <> sh:356 var
R28273:28283 VST.veric.expr <> eval_lvalue def
R28285:28286 VST.floyd.SeparationLogicFacts <> e1:353 var
R28400:28403 VST.msl.seplog <> ::logic:x_'-*'_x not
R28293:28294 VST.veric.lift LiftNotation :::'`('_x_')' not
R28316:28399 VST.veric.lift LiftNotation :::'`('_x_')' not
R28295:28300 VST.veric.SeparationLogic <> mapsto def
R28306:28311 compcert.cfrontend.Clight <> typeof def
R28313:28314 VST.floyd.SeparationLogicFacts <> e1:353 var
R28302:28303 VST.floyd.SeparationLogicFacts <> sh:356 var
R28336:28336 VST.veric.lift LiftNotation :::'`'_x not
R28346:28398 VST.veric.lift LiftNotation :::'`'_x not
R28337:28345 VST.veric.val_lemmas <> force_val def
R28348:28349 VST.veric.lift LiftNotation :::'`('_x_')' not
R28382:28397 VST.veric.lift LiftNotation :::'`('_x_')' not
R28350:28357 VST.veric.Clight_Cop2 <> sem_cast def
R28372:28377 compcert.cfrontend.Clight <> typeof def
R28379:28380 VST.floyd.SeparationLogicFacts <> e1:353 var
R28360:28365 compcert.cfrontend.Clight <> typeof def
R28367:28368 VST.floyd.SeparationLogicFacts <> e2:354 var
R28385:28393 VST.veric.expr <> eval_expr def
R28395:28396 VST.floyd.SeparationLogicFacts <> e2:354 var
R28319:28329 VST.veric.expr <> eval_lvalue def
R28331:28332 VST.floyd.SeparationLogicFacts <> e1:353 var
R28404:28404 VST.floyd.SeparationLogicFacts <> P:355 var
R28103:28107 VST.floyd.SeparationLogicFacts <> Delta:352 var
R28097:28101 VST.floyd.SeparationLogicFacts <> Espec:351 var
R28094:28095 VST.floyd.SeparationLogicFacts <> CS:350 var
R28495:28505 VST.floyd.SeparationLogicFacts StoreF2B semax_post' thm
R28522:28541 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R28552:28568 VST.veric.SeparationLogic <> normal_ret_assert def
R28495:28505 VST.floyd.SeparationLogicFacts StoreF2B semax_post' thm
R28522:28541 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R28552:28568 VST.veric.SeparationLogic <> normal_ret_assert def
R28586:28595 VST.msl.seplog <> andp_left2 meth
R28586:28595 VST.msl.seplog <> andp_left2 meth
R28608:28619 VST.msl.seplog <> derives_refl meth
R28608:28619 VST.msl.seplog <> derives_refl meth
R28647:28664 VST.floyd.SeparationLogicFacts StoreF2B semax_extract_prop thm
R28647:28664 VST.floyd.SeparationLogicFacts StoreF2B semax_extract_prop thm
R28688:28698 VST.floyd.SeparationLogicFacts StoreF2B semax_post' thm
R28714:28732 VST.floyd.SeparationLogicFacts StoreF semax_store_forward prfax
R28688:28698 VST.floyd.SeparationLogicFacts StoreF2B semax_post' thm
R28714:28732 VST.floyd.SeparationLogicFacts StoreF semax_store_forward prfax
R28752:28761 VST.msl.seplog <> andp_left2 meth
R28752:28761 VST.msl.seplog <> andp_left2 meth
R28774:28790 VST.msl.log_normalize <> modus_ponens_wand thm
R28774:28790 VST.msl.log_normalize <> modus_ponens_wand thm
R28803:28810 VST.floyd.SeparationLogicFacts StoreF2B <> mod
R28843:28875 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R28894:28934 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R28960:28962 VST.floyd.SeparationLogicFacts Def <> modtype
R28981:29024 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_BACKWARD <> mod
R29050:29052 VST.floyd.SeparationLogicFacts Def <> modtype
R29063:29105 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_FORWARD <> mod
R29131:29133 VST.floyd.SeparationLogicFacts Def <> modtype
mod 28821:28828 <> StoreB2F
R29156:29158 VST.floyd.SeparationLogicFacts Def <> modtype
mod 29144:29151 <> StoreB2F.CSHL_Def
R29183:29196 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R29199:29201 VST.floyd.SeparationLogicFacts Def <> modtype
R29205:29210 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 29168:29178 <> StoreB2F.ConseqFacts
prf 29285:29303 StoreB2F semax_store_forward
R29320:29328 VST.veric.mpred <> compspecs class
binder 29316:29317 <> CS:357
R29339:29348 VST.veric.juicy_extspec <> OracleKind class
binder 29332:29336 <> Espec:358
R29359:29367 VST.veric.seplog <> tycontext ind
binder 29352:29356 <> Delta:359
binder 29379:29380 <> e1:360
binder 29382:29383 <> e2:361
binder 29385:29386 <> sh:362
binder 29388:29388 <> P:363
R29411:29417 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29419:29423 VST.floyd.SeparationLogicFacts Def semax defax
R29625:29641 VST.veric.SeparationLogic <> normal_ret_assert def
R29764:29766 VST.msl.seplog <> ::logic:x_'*'_x not
R29657:29658 VST.veric.lift LiftNotation :::'`('_x_')' not
R29680:29763 VST.veric.lift LiftNotation :::'`('_x_')' not
R29659:29664 VST.veric.SeparationLogic <> mapsto def
R29670:29675 compcert.cfrontend.Clight <> typeof def
R29677:29678 VST.floyd.SeparationLogicFacts <> e1:360 var
R29666:29667 VST.floyd.SeparationLogicFacts <> sh:362 var
R29700:29700 VST.veric.lift LiftNotation :::'`'_x not
R29710:29762 VST.veric.lift LiftNotation :::'`'_x not
R29701:29709 VST.veric.val_lemmas <> force_val def
R29712:29713 VST.veric.lift LiftNotation :::'`('_x_')' not
R29746:29761 VST.veric.lift LiftNotation :::'`('_x_')' not
R29714:29721 VST.veric.Clight_Cop2 <> sem_cast def
R29736:29741 compcert.cfrontend.Clight <> typeof def
R29743:29744 VST.floyd.SeparationLogicFacts <> e1:360 var
R29724:29729 compcert.cfrontend.Clight <> typeof def
R29731:29732 VST.floyd.SeparationLogicFacts <> e2:361 var
R29749:29757 VST.veric.expr <> eval_expr def
R29759:29760 VST.floyd.SeparationLogicFacts <> e2:361 var
R29683:29693 VST.veric.expr <> eval_lvalue def
R29695:29696 VST.floyd.SeparationLogicFacts <> e1:360 var
R29767:29767 VST.floyd.SeparationLogicFacts <> P:363 var
R29599:29605 compcert.cfrontend.Clight <> Sassign constr
R29610:29611 VST.floyd.SeparationLogicFacts <> e2:361 var
R29607:29608 VST.floyd.SeparationLogicFacts <> e1:360 var
R29451:29455 VST.msl.seplog <> ::logic:'|>'_x not
R29585:29585 VST.msl.seplog <> ::logic:'|>'_x not
R29519:29537 VST.msl.seplog <> ::logic:x_'&&'_x not
R29584:29584 VST.msl.seplog <> ::logic:x_'&&'_x not
R29456:29456 VST.msl.seplog <> ::logic:x_'&&'_x not
R29475:29481 VST.msl.seplog <> ::logic:x_'&&'_x not
R29518:29518 VST.msl.seplog <> ::logic:x_'&&'_x not
R29457:29465 VST.veric.SeparationLogic <> tc_lvalue def
R29473:29474 VST.floyd.SeparationLogicFacts <> e1:360 var
R29467:29471 VST.floyd.SeparationLogicFacts <> Delta:359 var
R29482:29488 VST.veric.SeparationLogic <> tc_expr def
R29497:29501 compcert.cfrontend.Clight <> Ecast constr
R29507:29512 compcert.cfrontend.Clight <> typeof def
R29514:29515 VST.floyd.SeparationLogicFacts <> e1:360 var
R29503:29504 VST.floyd.SeparationLogicFacts <> e2:361 var
R29490:29494 VST.floyd.SeparationLogicFacts <> Delta:359 var
R29580:29582 VST.msl.seplog <> ::logic:x_'*'_x not
R29538:29539 VST.veric.lift LiftNotation :::'`('_x_')' not
R29562:29579 VST.veric.lift LiftNotation :::'`('_x_')' not
R29540:29546 VST.veric.SeparationLogic <> mapsto_ def
R29552:29557 compcert.cfrontend.Clight <> typeof def
R29559:29560 VST.floyd.SeparationLogicFacts <> e1:360 var
R29548:29549 VST.floyd.SeparationLogicFacts <> sh:362 var
R29565:29575 VST.veric.expr <> eval_lvalue def
R29577:29578 VST.floyd.SeparationLogicFacts <> e1:360 var
R29583:29583 VST.floyd.SeparationLogicFacts <> P:363 var
R29434:29438 VST.floyd.SeparationLogicFacts <> Delta:359 var
R29428:29432 VST.floyd.SeparationLogicFacts <> Espec:358 var
R29425:29426 VST.floyd.SeparationLogicFacts <> CS:357 var
R29394:29407 VST.veric.shares <> writable_share def
R29409:29410 VST.floyd.SeparationLogicFacts <> sh:362 var
R29798:29806 VST.floyd.SeparationLogicFacts StoreB2F semax_pre thm
R29818:29837 VST.floyd.SeparationLogicFacts StoreB semax_store_backward prfax
R29798:29806 VST.floyd.SeparationLogicFacts StoreB2F semax_pre thm
R29818:29837 VST.floyd.SeparationLogicFacts StoreB semax_store_backward prfax
R29850:29858 VST.msl.seplog <> exp_right meth
R29850:29858 VST.msl.seplog <> exp_right meth
R29886:29895 VST.msl.seplog <> andp_left2 meth
R29886:29895 VST.msl.seplog <> andp_left2 meth
R29906:29918 VST.msl.log_normalize <> later_derives thm
R29906:29918 VST.msl.log_normalize <> later_derives thm
R29929:29940 VST.msl.log_normalize <> andp_derives thm
R29929:29940 VST.msl.log_normalize <> andp_derives thm
R29957:29970 VST.msl.seplog <> sepcon_derives meth
R29957:29970 VST.msl.seplog <> sepcon_derives meth
R29987:30005 VST.msl.seplog <> wand_sepcon_adjoint meth
R29987:30005 VST.msl.seplog <> wand_sepcon_adjoint meth
R30018:30028 VST.msl.seplog <> sepcon_comm meth
R30018:30028 VST.msl.seplog <> sepcon_comm meth
R30018:30028 VST.msl.seplog <> sepcon_comm meth
R30039:30050 VST.msl.seplog <> derives_refl meth
R30039:30050 VST.msl.seplog <> derives_refl meth
R30063:30070 VST.floyd.SeparationLogicFacts StoreB2F <> mod
modtype 30086:30139 <> CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_FORWARD
R30168:30200 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 30158:30165 <> CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_FORWARD.CSHL_Def
ax 30228:30257 CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_FORWARD semax_store_union_hack_forward
R30274:30282 VST.veric.mpred <> compspecs class
binder 30270:30271 <> CS:364
R30293:30302 VST.veric.juicy_extspec <> OracleKind class
binder 30286:30290 <> Espec:365
R30313:30321 VST.veric.seplog <> tycontext ind
binder 30306:30310 <> Delta:366
R30342:30345 compcert.cfrontend.Clight <> expr ind
binder 30334:30335 <> e1:367
binder 30337:30338 <> e2:368
R30353:30356 compcert.cfrontend.Ctypes <> type ind
binder 30349:30350 <> t2:369
R30369:30380 compcert.common.AST <> memory_chunk ind
binder 30360:30361 <> ch:370
binder 30363:30365 <> ch':371
R30389:30393 VST.msl.shares <> share def
binder 30384:30385 <> sh:372
R30401:30411 VST.veric.mpred <> LiftEnviron canonstruc
R30413:30417 VST.veric.mpred <> mpred def
binder 30397:30397 <> P:373
R30485:30495 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30533:30543 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30573:30583 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30611:30621 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30639:30649 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30650:30654 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_FORWARD semax defax
R30909:30925 VST.veric.SeparationLogic <> normal_ret_assert def
R30940:30942 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R30949:30965 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R30946:30948 compcert.common.Values <> val ind
binder 30943:30944 <> v':374
R30966:30969 VST.msl.seplog <> andp meth
R31176:31178 VST.msl.seplog <> ::logic:x_'*'_x not
R31135:31138 VST.veric.lift LiftNotation :::'`'_x not
R31151:31175 VST.veric.lift LiftNotation :::'`'_x not
R31139:31144 VST.veric.SeparationLogic <> mapsto def
R31149:31150 VST.floyd.SeparationLogicFacts <> t2:369 var
R31146:31147 VST.floyd.SeparationLogicFacts <> sh:372 var
R31172:31172 VST.veric.lift LiftNotation :::'`'_x not
R31173:31174 VST.floyd.SeparationLogicFacts <> v':374 var
R31155:31165 VST.veric.expr <> eval_lvalue def
R31167:31168 VST.floyd.SeparationLogicFacts <> e1:367 var
R31179:31179 VST.floyd.SeparationLogicFacts <> P:373 var
R30972:30976 VST.veric.SeparationLogic <> local def
R30980:30981 VST.veric.lift LiftNotation :::'`'_x not
R30999:31115 VST.veric.lift LiftNotation :::'`'_x not
R30982:30998 compcert.common.Memdata <> decode_encode_val def
R31112:31112 VST.veric.lift LiftNotation :::'`'_x not
R31113:31114 VST.floyd.SeparationLogicFacts <> v':374 var
R31105:31105 VST.veric.lift LiftNotation :::'`'_x not
R31106:31108 VST.floyd.SeparationLogicFacts <> ch':371 var
R31099:31099 VST.veric.lift LiftNotation :::'`'_x not
R31100:31101 VST.floyd.SeparationLogicFacts <> ch:370 var
R31028:31030 VST.veric.lift LiftNotation :::'`'_x not
R31040:31095 VST.veric.lift LiftNotation :::'`'_x not
R31031:31039 VST.veric.val_lemmas <> force_val def
R31043:31045 VST.veric.lift LiftNotation :::'`('_x_')' not
R31078:31094 VST.veric.lift LiftNotation :::'`('_x_')' not
R31046:31053 VST.veric.Clight_Cop2 <> sem_cast def
R31068:31073 compcert.cfrontend.Clight <> typeof def
R31075:31076 VST.floyd.SeparationLogicFacts <> e1:367 var
R31056:31061 compcert.cfrontend.Clight <> typeof def
R31063:31064 VST.floyd.SeparationLogicFacts <> e2:368 var
R31082:31090 VST.veric.expr <> eval_expr def
R31092:31093 VST.floyd.SeparationLogicFacts <> e2:368 var
R30884:30890 compcert.cfrontend.Clight <> Sassign constr
R30895:30896 VST.floyd.SeparationLogicFacts <> e2:368 var
R30892:30893 VST.floyd.SeparationLogicFacts <> e1:367 var
R30672:30675 VST.msl.seplog <> ::logic:'|>'_x not
R30871:30871 VST.msl.seplog <> ::logic:'|>'_x not
R30734:30752 VST.msl.seplog <> ::logic:x_'&&'_x not
R30870:30870 VST.msl.seplog <> ::logic:x_'&&'_x not
R30694:30697 VST.msl.seplog <> ::logic:x_'&&'_x not
R30676:30684 VST.veric.SeparationLogic <> tc_lvalue def
R30692:30693 VST.floyd.SeparationLogicFacts <> e1:367 var
R30686:30690 VST.floyd.SeparationLogicFacts <> Delta:366 var
R30698:30704 VST.veric.SeparationLogic <> tc_expr def
R30713:30717 compcert.cfrontend.Clight <> Ecast constr
R30723:30728 compcert.cfrontend.Clight <> typeof def
R30730:30731 VST.floyd.SeparationLogicFacts <> e1:367 var
R30719:30720 VST.floyd.SeparationLogicFacts <> e2:368 var
R30706:30710 VST.floyd.SeparationLogicFacts <> Delta:366 var
R30753:30753 VST.msl.seplog <> ::logic:x_'*'_x not
R30850:30868 VST.msl.seplog <> ::logic:x_'*'_x not
R30796:30816 VST.msl.seplog <> ::logic:x_'&&'_x not
R30754:30755 VST.veric.lift LiftNotation :::'`('_x_')' not
R30778:30795 VST.veric.lift LiftNotation :::'`('_x_')' not
R30756:30762 VST.veric.SeparationLogic <> mapsto_ def
R30768:30773 compcert.cfrontend.Clight <> typeof def
R30775:30776 VST.floyd.SeparationLogicFacts <> e1:367 var
R30764:30765 VST.floyd.SeparationLogicFacts <> sh:372 var
R30781:30791 VST.veric.expr <> eval_lvalue def
R30793:30794 VST.floyd.SeparationLogicFacts <> e1:367 var
R30817:30818 VST.veric.lift LiftNotation :::'`('_x_')' not
R30832:30849 VST.veric.lift LiftNotation :::'`('_x_')' not
R30819:30825 VST.veric.SeparationLogic <> mapsto_ def
R30830:30831 VST.floyd.SeparationLogicFacts <> t2:369 var
R30827:30828 VST.floyd.SeparationLogicFacts <> sh:372 var
R30835:30845 VST.veric.expr <> eval_lvalue def
R30847:30848 VST.floyd.SeparationLogicFacts <> e1:367 var
R30869:30869 VST.floyd.SeparationLogicFacts <> P:373 var
R30656:30660 VST.floyd.SeparationLogicFacts <> Delta:366 var
R30622:30635 VST.veric.shares <> writable_share def
R30637:30638 VST.floyd.SeparationLogicFacts <> sh:372 var
R30584:30603 VST.veric.SeparationLogic <> decode_encode_val_ok def
R30608:30610 VST.floyd.SeparationLogicFacts <> ch':371 var
R30605:30606 VST.floyd.SeparationLogicFacts <> ch:370 var
R30558:30560 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30544:30554 compcert.cfrontend.Ctypes <> access_mode def
R30556:30557 VST.floyd.SeparationLogicFacts <> t2:369 var
R30561:30568 compcert.cfrontend.Ctypes <> By_value constr
R30570:30572 VST.floyd.SeparationLogicFacts <> ch':371 var
R30519:30521 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30496:30506 compcert.cfrontend.Ctypes <> access_mode def
R30509:30514 compcert.cfrontend.Clight <> typeof def
R30516:30517 VST.floyd.SeparationLogicFacts <> e1:367 var
R30522:30529 compcert.cfrontend.Ctypes <> By_value constr
R30531:30532 VST.floyd.SeparationLogicFacts <> ch:370 var
R30478:30480 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30453:30456 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R30429:30440 VST.veric.SeparationLogic <> numeric_type def
R30443:30448 compcert.cfrontend.Clight <> typeof def
R30450:30451 VST.floyd.SeparationLogicFacts <> e1:367 var
R30457:30468 VST.veric.SeparationLogic <> numeric_type def
R30470:30471 VST.floyd.SeparationLogicFacts <> t2:369 var
R30481:30484 Coq.Init.Datatypes <> true constr
R31190:31243 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_FORWARD <> modtype
modtype 31259:31313 <> CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_BACKWARD
R31342:31374 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 31332:31339 <> CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_BACKWARD.CSHL_Def
ax 31402:31432 CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_BACKWARD semax_store_union_hack_backward
R31448:31456 VST.veric.mpred <> compspecs class
binder 31444:31445 <> CS:376
R31467:31476 VST.veric.juicy_extspec <> OracleKind class
binder 31460:31464 <> Espec:377
R31487:31495 VST.veric.seplog <> tycontext ind
binder 31480:31484 <> Delta:378
binder 31498:31499 <> e1:379
binder 31501:31502 <> e2:380
binder 31504:31504 <> P:381
R31511:31515 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_BACKWARD semax defax
R32399:32415 VST.veric.SeparationLogic <> normal_ret_assert def
R32417:32417 VST.floyd.SeparationLogicFacts <> P:381 var
R32373:32379 compcert.cfrontend.Clight <> Sassign constr
R32384:32385 VST.floyd.SeparationLogicFacts <> e2:380 var
R32381:32382 VST.floyd.SeparationLogicFacts <> e1:379 var
R31543:31546 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R31589:31604 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R31550:31553 compcert.cfrontend.Ctypes <> type ind
binder 31547:31548 <> t2:382
R31565:31576 compcert.common.AST <> memory_chunk ind
binder 31557:31558 <> ch:383
R31565:31576 compcert.common.AST <> memory_chunk ind
binder 31560:31562 <> ch':384
R31584:31588 VST.msl.shares <> share def
binder 31580:31581 <> sh:385
R31861:31877 VST.msl.seplog <> ::logic:x_'&&'_x not
R31605:31608 VST.msl.seplog <> ::logic:'!!'_x not
R31860:31860 VST.msl.seplog <> ::logic:'!!'_x not
R31666:31686 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R31659:31661 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31634:31637 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R31610:31621 VST.veric.SeparationLogic <> numeric_type def
R31624:31629 compcert.cfrontend.Clight <> typeof def
R31631:31632 VST.floyd.SeparationLogicFacts <> e1:379 var
R31638:31649 VST.veric.SeparationLogic <> numeric_type def
R31651:31652 VST.floyd.SeparationLogicFacts <> t2:382 var
R31662:31665 Coq.Init.Datatypes <> true constr
R31724:31744 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R31710:31712 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31687:31697 compcert.cfrontend.Ctypes <> access_mode def
R31700:31705 compcert.cfrontend.Clight <> typeof def
R31707:31708 VST.floyd.SeparationLogicFacts <> e1:379 var
R31713:31720 compcert.cfrontend.Ctypes <> By_value constr
R31722:31723 VST.floyd.SeparationLogicFacts <> ch:383 var
R31774:31794 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R31759:31761 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31745:31755 compcert.cfrontend.Ctypes <> access_mode def
R31757:31758 VST.floyd.SeparationLogicFacts <> t2:382 var
R31762:31769 compcert.cfrontend.Ctypes <> By_value constr
R31771:31773 VST.floyd.SeparationLogicFacts <> ch':384 var
R31822:31842 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R31795:31814 VST.veric.SeparationLogic <> decode_encode_val_ok def
R31819:31821 VST.floyd.SeparationLogicFacts <> ch':384 var
R31816:31817 VST.floyd.SeparationLogicFacts <> ch:383 var
R31843:31856 VST.veric.shares <> writable_share def
R31858:31859 VST.floyd.SeparationLogicFacts <> sh:385 var
R31878:31882 VST.msl.seplog <> ::logic:'|>'_x not
R32359:32359 VST.msl.seplog <> ::logic:'|>'_x not
R31946:31964 VST.msl.seplog <> ::logic:x_'&&'_x not
R32358:32358 VST.msl.seplog <> ::logic:x_'&&'_x not
R31883:31883 VST.msl.seplog <> ::logic:x_'&&'_x not
R31902:31908 VST.msl.seplog <> ::logic:x_'&&'_x not
R31945:31945 VST.msl.seplog <> ::logic:x_'&&'_x not
R31884:31892 VST.veric.SeparationLogic <> tc_lvalue def
R31900:31901 VST.floyd.SeparationLogicFacts <> e1:379 var
R31894:31898 VST.floyd.SeparationLogicFacts <> Delta:378 var
R31909:31915 VST.veric.SeparationLogic <> tc_expr def
R31924:31928 compcert.cfrontend.Clight <> Ecast constr
R31934:31939 compcert.cfrontend.Clight <> typeof def
R31941:31942 VST.floyd.SeparationLogicFacts <> e1:379 var
R31930:31931 VST.floyd.SeparationLogicFacts <> e2:380 var
R31917:31921 VST.floyd.SeparationLogicFacts <> Delta:378 var
R31965:31965 VST.msl.seplog <> ::logic:x_'*'_x not
R32068:32086 VST.msl.seplog <> ::logic:x_'*'_x not
R32357:32357 VST.msl.seplog <> ::logic:x_'*'_x not
R32008:32034 VST.msl.seplog <> ::logic:x_'&&'_x not
R31966:31967 VST.veric.lift LiftNotation :::'`('_x_')' not
R31990:32007 VST.veric.lift LiftNotation :::'`('_x_')' not
R31968:31974 VST.veric.SeparationLogic <> mapsto_ def
R31980:31985 compcert.cfrontend.Clight <> typeof def
R31987:31988 VST.floyd.SeparationLogicFacts <> e1:379 var
R31976:31977 VST.floyd.SeparationLogicFacts <> sh:385 var
R31993:32003 VST.veric.expr <> eval_lvalue def
R32005:32006 VST.floyd.SeparationLogicFacts <> e1:379 var
R32035:32036 VST.veric.lift LiftNotation :::'`('_x_')' not
R32050:32067 VST.veric.lift LiftNotation :::'`('_x_')' not
R32037:32043 VST.veric.SeparationLogic <> mapsto_ def
R32048:32049 VST.floyd.SeparationLogicFacts <> t2:382 var
R32045:32046 VST.floyd.SeparationLogicFacts <> sh:385 var
R32053:32063 VST.veric.expr <> eval_lvalue def
R32065:32066 VST.floyd.SeparationLogicFacts <> e1:379 var
R32087:32090 VST.msl.seplog <> ::logic:'ALL'_x_'..'_x_','_x not
R32098:32116 VST.msl.seplog <> ::logic:'ALL'_x_'..'_x_','_x not
R32095:32097 compcert.common.Values <> val ind
binder 32091:32092 <> v':386
R32155:32176 VST.msl.seplog <> ::logic:x_'-*'_x not
R32117:32118 VST.veric.lift LiftNotation :::'`('_x_')' not
R32131:32154 VST.veric.lift LiftNotation :::'`('_x_')' not
R32119:32124 VST.veric.SeparationLogic <> mapsto def
R32129:32130 VST.floyd.SeparationLogicFacts <> t2:382 var
R32126:32127 VST.floyd.SeparationLogicFacts <> sh:385 var
R32151:32151 VST.veric.lift LiftNotation :::'`'_x not
R32152:32153 VST.floyd.SeparationLogicFacts <> v':386 var
R32134:32144 VST.veric.expr <> eval_lvalue def
R32146:32147 VST.floyd.SeparationLogicFacts <> e1:379 var
R32177:32179 VST.msl.seplog <> imp meth
R32355:32355 VST.floyd.SeparationLogicFacts <> P:381 var
R32182:32186 VST.veric.SeparationLogic <> local def
R32190:32191 VST.veric.lift LiftNotation :::'`'_x not
R32209:32325 VST.veric.lift LiftNotation :::'`'_x not
R32192:32208 compcert.common.Memdata <> decode_encode_val def
R32322:32322 VST.veric.lift LiftNotation :::'`'_x not
R32323:32324 VST.floyd.SeparationLogicFacts <> v':386 var
R32315:32315 VST.veric.lift LiftNotation :::'`'_x not
R32316:32318 VST.floyd.SeparationLogicFacts <> ch':384 var
R32309:32309 VST.veric.lift LiftNotation :::'`'_x not
R32310:32311 VST.floyd.SeparationLogicFacts <> ch:383 var
R32238:32240 VST.veric.lift LiftNotation :::'`'_x not
R32250:32305 VST.veric.lift LiftNotation :::'`'_x not
R32241:32249 VST.veric.val_lemmas <> force_val def
R32253:32255 VST.veric.lift LiftNotation :::'`('_x_')' not
R32288:32304 VST.veric.lift LiftNotation :::'`('_x_')' not
R32256:32263 VST.veric.Clight_Cop2 <> sem_cast def
R32278:32283 compcert.cfrontend.Clight <> typeof def
R32285:32286 VST.floyd.SeparationLogicFacts <> e1:379 var
R32266:32271 compcert.cfrontend.Clight <> typeof def
R32273:32274 VST.floyd.SeparationLogicFacts <> e2:380 var
R32292:32300 VST.veric.expr <> eval_expr def
R32302:32303 VST.floyd.SeparationLogicFacts <> e2:380 var
R31526:31530 VST.floyd.SeparationLogicFacts <> Delta:378 var
R31520:31524 VST.floyd.SeparationLogicFacts <> Espec:377 var
R31517:31518 VST.floyd.SeparationLogicFacts <> CS:376 var
R32426:32480 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_BACKWARD <> modtype
R32522:32554 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R32573:32613 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R32639:32641 VST.floyd.SeparationLogicFacts Def <> modtype
R32658:32697 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION <> mod
R32723:32725 VST.floyd.SeparationLogicFacts Def <> modtype
R32753:32806 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_FORWARD <> mod
R32832:32834 VST.floyd.SeparationLogicFacts Def <> modtype
R32845:32899 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_BACKWARD <> mod
R32925:32927 VST.floyd.SeparationLogicFacts Def <> modtype
mod 32491:32507 <> StoreUnionHackF2B
R32950:32952 VST.floyd.SeparationLogicFacts Def <> modtype
mod 32938:32945 <> StoreUnionHackF2B.CSHL_Def
R32977:32990 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R32993:32995 VST.floyd.SeparationLogicFacts Def <> modtype
R32999:33004 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 32962:32972 <> StoreUnionHackF2B.ConseqFacts
R33028:33039 VST.floyd.SeparationLogicFacts GenExtrFacts <> modtype
R33042:33044 VST.floyd.SeparationLogicFacts Def <> modtype
R33048:33053 VST.floyd.SeparationLogicFacts Conseq <> modtype
R33057:33060 VST.floyd.SeparationLogicFacts Extr <> modtype
mod 33015:33023 <> StoreUnionHackF2B.ExtrFacts
prf 33175:33205 StoreUnionHackF2B semax_store_union_hack_backward
R33221:33229 VST.veric.mpred <> compspecs class
binder 33217:33218 <> CS:388
R33240:33249 VST.veric.juicy_extspec <> OracleKind class
binder 33233:33237 <> Espec:389
R33260:33268 VST.veric.seplog <> tycontext ind
binder 33253:33257 <> Delta:390
binder 33271:33272 <> e1:391
binder 33274:33275 <> e2:392
binder 33277:33277 <> P:393
R33284:33288 VST.floyd.SeparationLogicFacts Def semax defax
R34172:34188 VST.veric.SeparationLogic <> normal_ret_assert def
R34190:34190 VST.floyd.SeparationLogicFacts <> P:393 var
R34146:34152 compcert.cfrontend.Clight <> Sassign constr
R34157:34158 VST.floyd.SeparationLogicFacts <> e2:392 var
R34154:34155 VST.floyd.SeparationLogicFacts <> e1:391 var
R33316:33319 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R33362:33377 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R33323:33326 compcert.cfrontend.Ctypes <> type ind
binder 33320:33321 <> t2:394
R33338:33349 compcert.common.AST <> memory_chunk ind
binder 33330:33331 <> ch:395
R33338:33349 compcert.common.AST <> memory_chunk ind
binder 33333:33335 <> ch':396
R33357:33361 VST.msl.shares <> share def
binder 33353:33354 <> sh:397
R33634:33650 VST.msl.seplog <> ::logic:x_'&&'_x not
R33378:33381 VST.msl.seplog <> ::logic:'!!'_x not
R33633:33633 VST.msl.seplog <> ::logic:'!!'_x not
R33439:33459 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R33432:33434 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33407:33410 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R33383:33394 VST.veric.SeparationLogic <> numeric_type def
R33397:33402 compcert.cfrontend.Clight <> typeof def
R33404:33405 VST.floyd.SeparationLogicFacts <> e1:391 var
R33411:33422 VST.veric.SeparationLogic <> numeric_type def
R33424:33425 VST.floyd.SeparationLogicFacts <> t2:394 var
R33435:33438 Coq.Init.Datatypes <> true constr
R33497:33517 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R33483:33485 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33460:33470 compcert.cfrontend.Ctypes <> access_mode def
R33473:33478 compcert.cfrontend.Clight <> typeof def
R33480:33481 VST.floyd.SeparationLogicFacts <> e1:391 var
R33486:33493 compcert.cfrontend.Ctypes <> By_value constr
R33495:33496 VST.floyd.SeparationLogicFacts <> ch:395 var
R33547:33567 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R33532:33534 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33518:33528 compcert.cfrontend.Ctypes <> access_mode def
R33530:33531 VST.floyd.SeparationLogicFacts <> t2:394 var
R33535:33542 compcert.cfrontend.Ctypes <> By_value constr
R33544:33546 VST.floyd.SeparationLogicFacts <> ch':396 var
R33595:33615 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R33568:33587 VST.veric.SeparationLogic <> decode_encode_val_ok def
R33592:33594 VST.floyd.SeparationLogicFacts <> ch':396 var
R33589:33590 VST.floyd.SeparationLogicFacts <> ch:395 var
R33616:33629 VST.veric.shares <> writable_share def
R33631:33632 VST.floyd.SeparationLogicFacts <> sh:397 var
R33651:33655 VST.msl.seplog <> ::logic:'|>'_x not
R34132:34132 VST.msl.seplog <> ::logic:'|>'_x not
R33719:33737 VST.msl.seplog <> ::logic:x_'&&'_x not
R34131:34131 VST.msl.seplog <> ::logic:x_'&&'_x not
R33656:33656 VST.msl.seplog <> ::logic:x_'&&'_x not
R33675:33681 VST.msl.seplog <> ::logic:x_'&&'_x not
R33718:33718 VST.msl.seplog <> ::logic:x_'&&'_x not
R33657:33665 VST.veric.SeparationLogic <> tc_lvalue def
R33673:33674 VST.floyd.SeparationLogicFacts <> e1:391 var
R33667:33671 VST.floyd.SeparationLogicFacts <> Delta:390 var
R33682:33688 VST.veric.SeparationLogic <> tc_expr def
R33697:33701 compcert.cfrontend.Clight <> Ecast constr
R33707:33712 compcert.cfrontend.Clight <> typeof def
R33714:33715 VST.floyd.SeparationLogicFacts <> e1:391 var
R33703:33704 VST.floyd.SeparationLogicFacts <> e2:392 var
R33690:33694 VST.floyd.SeparationLogicFacts <> Delta:390 var
R33738:33738 VST.msl.seplog <> ::logic:x_'*'_x not
R33841:33859 VST.msl.seplog <> ::logic:x_'*'_x not
R34130:34130 VST.msl.seplog <> ::logic:x_'*'_x not
R33781:33807 VST.msl.seplog <> ::logic:x_'&&'_x not
R33739:33740 VST.veric.lift LiftNotation :::'`('_x_')' not
R33763:33780 VST.veric.lift LiftNotation :::'`('_x_')' not
R33741:33747 VST.veric.SeparationLogic <> mapsto_ def
R33753:33758 compcert.cfrontend.Clight <> typeof def
R33760:33761 VST.floyd.SeparationLogicFacts <> e1:391 var
R33749:33750 VST.floyd.SeparationLogicFacts <> sh:397 var
R33766:33776 VST.veric.expr <> eval_lvalue def
R33778:33779 VST.floyd.SeparationLogicFacts <> e1:391 var
R33808:33809 VST.veric.lift LiftNotation :::'`('_x_')' not
R33823:33840 VST.veric.lift LiftNotation :::'`('_x_')' not
R33810:33816 VST.veric.SeparationLogic <> mapsto_ def
R33821:33822 VST.floyd.SeparationLogicFacts <> t2:394 var
R33818:33819 VST.floyd.SeparationLogicFacts <> sh:397 var
R33826:33836 VST.veric.expr <> eval_lvalue def
R33838:33839 VST.floyd.SeparationLogicFacts <> e1:391 var
R33860:33863 VST.msl.seplog <> ::logic:'ALL'_x_'..'_x_','_x not
R33871:33889 VST.msl.seplog <> ::logic:'ALL'_x_'..'_x_','_x not
R33868:33870 compcert.common.Values <> val ind
binder 33864:33865 <> v':398
R33928:33951 VST.msl.seplog <> ::logic:x_'-*'_x not
R33890:33891 VST.veric.lift LiftNotation :::'`('_x_')' not
R33904:33927 VST.veric.lift LiftNotation :::'`('_x_')' not
R33892:33897 VST.veric.SeparationLogic <> mapsto def
R33902:33903 VST.floyd.SeparationLogicFacts <> t2:394 var
R33899:33900 VST.floyd.SeparationLogicFacts <> sh:397 var
R33924:33924 VST.veric.lift LiftNotation :::'`'_x not
R33925:33926 VST.floyd.SeparationLogicFacts <> v':398 var
R33907:33917 VST.veric.expr <> eval_lvalue def
R33919:33920 VST.floyd.SeparationLogicFacts <> e1:391 var
R33952:33954 VST.msl.seplog <> imp meth
R34128:34128 VST.floyd.SeparationLogicFacts <> P:393 var
R33957:33961 VST.veric.SeparationLogic <> local def
R33965:33966 VST.veric.lift LiftNotation :::'`'_x not
R33984:34100 VST.veric.lift LiftNotation :::'`'_x not
R33967:33983 compcert.common.Memdata <> decode_encode_val def
R34097:34097 VST.veric.lift LiftNotation :::'`'_x not
R34098:34099 VST.floyd.SeparationLogicFacts <> v':398 var
R34090:34090 VST.veric.lift LiftNotation :::'`'_x not
R34091:34093 VST.floyd.SeparationLogicFacts <> ch':396 var
R34084:34084 VST.veric.lift LiftNotation :::'`'_x not
R34085:34086 VST.floyd.SeparationLogicFacts <> ch:395 var
R34013:34015 VST.veric.lift LiftNotation :::'`'_x not
R34025:34080 VST.veric.lift LiftNotation :::'`'_x not
R34016:34024 VST.veric.val_lemmas <> force_val def
R34028:34030 VST.veric.lift LiftNotation :::'`('_x_')' not
R34063:34079 VST.veric.lift LiftNotation :::'`('_x_')' not
R34031:34038 VST.veric.Clight_Cop2 <> sem_cast def
R34053:34058 compcert.cfrontend.Clight <> typeof def
R34060:34061 VST.floyd.SeparationLogicFacts <> e1:391 var
R34041:34046 compcert.cfrontend.Clight <> typeof def
R34048:34049 VST.floyd.SeparationLogicFacts <> e2:392 var
R34067:34075 VST.veric.expr <> eval_expr def
R34077:34078 VST.floyd.SeparationLogicFacts <> e2:392 var
R33299:33303 VST.floyd.SeparationLogicFacts <> Delta:390 var
R33293:33297 VST.floyd.SeparationLogicFacts <> Espec:389 var
R33290:33291 VST.floyd.SeparationLogicFacts <> CS:388 var
R34220:34230 VST.floyd.SeparationLogicFacts StoreUnionHackF2B semax_post' thm
R34247:34266 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R34277:34293 VST.veric.SeparationLogic <> normal_ret_assert def
R34312:34321 VST.msl.seplog <> andp_left2 meth
R34330:34341 VST.msl.seplog <> derives_refl meth
R34220:34230 VST.floyd.SeparationLogicFacts StoreUnionHackF2B semax_post' thm
R34247:34266 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R34277:34293 VST.veric.SeparationLogic <> normal_ret_assert def
R34312:34321 VST.msl.seplog <> andp_left2 meth
R34330:34341 VST.msl.seplog <> derives_refl meth
R34365:34375 VST.floyd.SeparationLogicFacts StoreUnionHackF2B semax_post' thm
R34392:34411 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R34422:34438 VST.veric.SeparationLogic <> normal_ret_assert def
R34457:34466 VST.msl.seplog <> andp_left2 meth
R34475:34486 VST.msl.seplog <> derives_refl meth
R34365:34375 VST.floyd.SeparationLogicFacts StoreUnionHackF2B semax_post' thm
R34392:34411 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R34422:34438 VST.veric.SeparationLogic <> normal_ret_assert def
R34457:34466 VST.msl.seplog <> andp_left2 meth
R34475:34486 VST.msl.seplog <> derives_refl meth
R34510:34520 VST.floyd.SeparationLogicFacts StoreUnionHackF2B semax_post' thm
R34537:34556 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R34567:34583 VST.veric.SeparationLogic <> normal_ret_assert def
R34602:34611 VST.msl.seplog <> andp_left2 meth
R34620:34631 VST.msl.seplog <> derives_refl meth
R34510:34520 VST.floyd.SeparationLogicFacts StoreUnionHackF2B semax_post' thm
R34537:34556 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R34567:34583 VST.veric.SeparationLogic <> normal_ret_assert def
R34602:34611 VST.msl.seplog <> andp_left2 meth
R34620:34631 VST.msl.seplog <> derives_refl meth
R34656:34666 VST.floyd.SeparationLogicFacts StoreUnionHackF2B semax_post' thm
R34683:34702 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R34713:34729 VST.veric.SeparationLogic <> normal_ret_assert def
R34748:34757 VST.msl.seplog <> andp_left2 meth
R34766:34777 VST.msl.seplog <> derives_refl meth
R34656:34666 VST.floyd.SeparationLogicFacts StoreUnionHackF2B semax_post' thm
R34683:34702 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R34713:34729 VST.veric.SeparationLogic <> normal_ret_assert def
R34748:34757 VST.msl.seplog <> andp_left2 meth
R34766:34777 VST.msl.seplog <> derives_refl meth
R34800:34817 VST.floyd.SeparationLogicFacts StoreUnionHackF2B semax_extract_prop thm
R34800:34817 VST.floyd.SeparationLogicFacts StoreUnionHackF2B semax_extract_prop thm
R34856:34866 VST.floyd.SeparationLogicFacts StoreUnionHackF2B semax_post' thm
R34882:34911 VST.floyd.SeparationLogicFacts StoreUnionHackF semax_store_union_hack_forward prfax
R34856:34866 VST.floyd.SeparationLogicFacts StoreUnionHackF2B semax_post' thm
R34882:34911 VST.floyd.SeparationLogicFacts StoreUnionHackF semax_store_union_hack_forward prfax
R34930:34939 VST.msl.seplog <> andp_left2 meth
R34930:34939 VST.msl.seplog <> andp_left2 meth
R34950:34957 VST.msl.seplog <> exp_left meth
R34950:34957 VST.msl.seplog <> exp_left meth
R34981:34989 VST.msl.log_normalize <> andp_comm thm
R34981:34989 VST.msl.log_normalize <> andp_comm thm
R34981:34989 VST.msl.log_normalize <> andp_comm thm
R35000:35015 VST.msl.seplog <> imp_andp_adjoint meth
R35000:35015 VST.msl.seplog <> imp_andp_adjoint meth
R35028:35038 VST.msl.seplog <> sepcon_comm meth
R35028:35038 VST.msl.seplog <> sepcon_comm meth
R35028:35038 VST.msl.seplog <> sepcon_comm meth
R35049:35067 VST.msl.seplog <> wand_sepcon_adjoint meth
R35049:35067 VST.msl.seplog <> wand_sepcon_adjoint meth
R35078:35086 VST.msl.seplog <> allp_left meth
R35078:35086 VST.msl.seplog <> allp_left meth
R35105:35116 VST.msl.seplog <> derives_refl meth
R35105:35116 VST.msl.seplog <> derives_refl meth
R35129:35145 VST.floyd.SeparationLogicFacts StoreUnionHackF2B <> mod
R35187:35219 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R35238:35278 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R35304:35306 VST.floyd.SeparationLogicFacts Def <> modtype
R35334:35388 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_BACKWARD <> mod
R35414:35416 VST.floyd.SeparationLogicFacts Def <> modtype
R35427:35480 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_FORWARD <> mod
R35506:35508 VST.floyd.SeparationLogicFacts Def <> modtype
mod 35156:35172 <> StoreUnionHackB2F
R35531:35533 VST.floyd.SeparationLogicFacts Def <> modtype
mod 35519:35526 <> StoreUnionHackB2F.CSHL_Def
R35558:35571 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R35574:35576 VST.floyd.SeparationLogicFacts Def <> modtype
R35580:35585 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 35543:35553 <> StoreUnionHackB2F.ConseqFacts
prf 35669:35698 StoreUnionHackB2F semax_store_union_hack_forward
R35715:35723 VST.veric.mpred <> compspecs class
binder 35711:35712 <> CS:399
R35734:35743 VST.veric.juicy_extspec <> OracleKind class
binder 35727:35731 <> Espec:400
R35754:35762 VST.veric.seplog <> tycontext ind
binder 35747:35751 <> Delta:401
R35783:35786 compcert.cfrontend.Clight <> expr ind
binder 35775:35776 <> e1:402
binder 35778:35779 <> e2:403
R35794:35797 compcert.cfrontend.Ctypes <> type ind
binder 35790:35791 <> t2:404
R35810:35821 compcert.common.AST <> memory_chunk ind
binder 35801:35802 <> ch:405
binder 35804:35806 <> ch':406
R35830:35834 VST.msl.shares <> share def
binder 35825:35826 <> sh:407
R35842:35852 VST.veric.mpred <> LiftEnviron canonstruc
R35854:35858 VST.veric.mpred <> mpred def
binder 35838:35838 <> P:408
R35926:35936 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35974:35984 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36014:36024 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36052:36062 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36080:36090 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36091:36095 VST.floyd.SeparationLogicFacts Def semax defax
R36350:36366 VST.veric.SeparationLogic <> normal_ret_assert def
R36381:36383 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R36390:36406 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R36387:36389 compcert.common.Values <> val ind
binder 36384:36385 <> v':409
R36407:36410 VST.msl.seplog <> andp meth
R36617:36619 VST.msl.seplog <> ::logic:x_'*'_x not
R36576:36579 VST.veric.lift LiftNotation :::'`'_x not
R36592:36616 VST.veric.lift LiftNotation :::'`'_x not
R36580:36585 VST.veric.SeparationLogic <> mapsto def
R36590:36591 VST.floyd.SeparationLogicFacts <> t2:404 var
R36587:36588 VST.floyd.SeparationLogicFacts <> sh:407 var
R36613:36613 VST.veric.lift LiftNotation :::'`'_x not
R36614:36615 VST.floyd.SeparationLogicFacts <> v':409 var
R36596:36606 VST.veric.expr <> eval_lvalue def
R36608:36609 VST.floyd.SeparationLogicFacts <> e1:402 var
R36620:36620 VST.floyd.SeparationLogicFacts <> P:408 var
R36413:36417 VST.veric.SeparationLogic <> local def
R36421:36422 VST.veric.lift LiftNotation :::'`'_x not
R36440:36556 VST.veric.lift LiftNotation :::'`'_x not
R36423:36439 compcert.common.Memdata <> decode_encode_val def
R36553:36553 VST.veric.lift LiftNotation :::'`'_x not
R36554:36555 VST.floyd.SeparationLogicFacts <> v':409 var
R36546:36546 VST.veric.lift LiftNotation :::'`'_x not
R36547:36549 VST.floyd.SeparationLogicFacts <> ch':406 var
R36540:36540 VST.veric.lift LiftNotation :::'`'_x not
R36541:36542 VST.floyd.SeparationLogicFacts <> ch:405 var
R36469:36471 VST.veric.lift LiftNotation :::'`'_x not
R36481:36536 VST.veric.lift LiftNotation :::'`'_x not
R36472:36480 VST.veric.val_lemmas <> force_val def
R36484:36486 VST.veric.lift LiftNotation :::'`('_x_')' not
R36519:36535 VST.veric.lift LiftNotation :::'`('_x_')' not
R36487:36494 VST.veric.Clight_Cop2 <> sem_cast def
R36509:36514 compcert.cfrontend.Clight <> typeof def
R36516:36517 VST.floyd.SeparationLogicFacts <> e1:402 var
R36497:36502 compcert.cfrontend.Clight <> typeof def
R36504:36505 VST.floyd.SeparationLogicFacts <> e2:403 var
R36523:36531 VST.veric.expr <> eval_expr def
R36533:36534 VST.floyd.SeparationLogicFacts <> e2:403 var
R36325:36331 compcert.cfrontend.Clight <> Sassign constr
R36336:36337 VST.floyd.SeparationLogicFacts <> e2:403 var
R36333:36334 VST.floyd.SeparationLogicFacts <> e1:402 var
R36113:36116 VST.msl.seplog <> ::logic:'|>'_x not
R36312:36312 VST.msl.seplog <> ::logic:'|>'_x not
R36175:36193 VST.msl.seplog <> ::logic:x_'&&'_x not
R36311:36311 VST.msl.seplog <> ::logic:x_'&&'_x not
R36135:36138 VST.msl.seplog <> ::logic:x_'&&'_x not
R36117:36125 VST.veric.SeparationLogic <> tc_lvalue def
R36133:36134 VST.floyd.SeparationLogicFacts <> e1:402 var
R36127:36131 VST.floyd.SeparationLogicFacts <> Delta:401 var
R36139:36145 VST.veric.SeparationLogic <> tc_expr def
R36154:36158 compcert.cfrontend.Clight <> Ecast constr
R36164:36169 compcert.cfrontend.Clight <> typeof def
R36171:36172 VST.floyd.SeparationLogicFacts <> e1:402 var
R36160:36161 VST.floyd.SeparationLogicFacts <> e2:403 var
R36147:36151 VST.floyd.SeparationLogicFacts <> Delta:401 var
R36194:36194 VST.msl.seplog <> ::logic:x_'*'_x not
R36291:36309 VST.msl.seplog <> ::logic:x_'*'_x not
R36237:36257 VST.msl.seplog <> ::logic:x_'&&'_x not
R36195:36196 VST.veric.lift LiftNotation :::'`('_x_')' not
R36219:36236 VST.veric.lift LiftNotation :::'`('_x_')' not
R36197:36203 VST.veric.SeparationLogic <> mapsto_ def
R36209:36214 compcert.cfrontend.Clight <> typeof def
R36216:36217 VST.floyd.SeparationLogicFacts <> e1:402 var
R36205:36206 VST.floyd.SeparationLogicFacts <> sh:407 var
R36222:36232 VST.veric.expr <> eval_lvalue def
R36234:36235 VST.floyd.SeparationLogicFacts <> e1:402 var
R36258:36259 VST.veric.lift LiftNotation :::'`('_x_')' not
R36273:36290 VST.veric.lift LiftNotation :::'`('_x_')' not
R36260:36266 VST.veric.SeparationLogic <> mapsto_ def
R36271:36272 VST.floyd.SeparationLogicFacts <> t2:404 var
R36268:36269 VST.floyd.SeparationLogicFacts <> sh:407 var
R36276:36286 VST.veric.expr <> eval_lvalue def
R36288:36289 VST.floyd.SeparationLogicFacts <> e1:402 var
R36310:36310 VST.floyd.SeparationLogicFacts <> P:408 var
R36097:36101 VST.floyd.SeparationLogicFacts <> Delta:401 var
R36063:36076 VST.veric.shares <> writable_share def
R36078:36079 VST.floyd.SeparationLogicFacts <> sh:407 var
R36025:36044 VST.veric.SeparationLogic <> decode_encode_val_ok def
R36049:36051 VST.floyd.SeparationLogicFacts <> ch':406 var
R36046:36047 VST.floyd.SeparationLogicFacts <> ch:405 var
R35999:36001 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35985:35995 compcert.cfrontend.Ctypes <> access_mode def
R35997:35998 VST.floyd.SeparationLogicFacts <> t2:404 var
R36002:36009 compcert.cfrontend.Ctypes <> By_value constr
R36011:36013 VST.floyd.SeparationLogicFacts <> ch':406 var
R35960:35962 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35937:35947 compcert.cfrontend.Ctypes <> access_mode def
R35950:35955 compcert.cfrontend.Clight <> typeof def
R35957:35958 VST.floyd.SeparationLogicFacts <> e1:402 var
R35963:35970 compcert.cfrontend.Ctypes <> By_value constr
R35972:35973 VST.floyd.SeparationLogicFacts <> ch:405 var
R35919:35921 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35894:35897 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R35870:35881 VST.veric.SeparationLogic <> numeric_type def
R35884:35889 compcert.cfrontend.Clight <> typeof def
R35891:35892 VST.floyd.SeparationLogicFacts <> e1:402 var
R35898:35909 VST.veric.SeparationLogic <> numeric_type def
R35911:35912 VST.floyd.SeparationLogicFacts <> t2:404 var
R35922:35925 Coq.Init.Datatypes <> true constr
R36652:36660 VST.floyd.SeparationLogicFacts StoreUnionHackB2F semax_pre thm
R36672:36702 VST.floyd.SeparationLogicFacts StoreUnionHackB semax_store_union_hack_backward prfax
R36652:36660 VST.floyd.SeparationLogicFacts StoreUnionHackB2F semax_pre thm
R36672:36702 VST.floyd.SeparationLogicFacts StoreUnionHackB semax_store_union_hack_backward prfax
R36715:36723 VST.msl.seplog <> exp_right meth
R36715:36723 VST.msl.seplog <> exp_right meth
R36739:36747 VST.msl.seplog <> exp_right meth
R36739:36747 VST.msl.seplog <> exp_right meth
R36763:36771 VST.msl.seplog <> exp_right meth
R36763:36771 VST.msl.seplog <> exp_right meth
R36788:36796 VST.msl.seplog <> exp_right meth
R36788:36796 VST.msl.seplog <> exp_right meth
R36811:36820 VST.msl.seplog <> andp_right meth
R36830:36839 VST.msl.seplog <> prop_right meth
R36811:36820 VST.msl.seplog <> andp_right meth
R36830:36839 VST.msl.seplog <> prop_right meth
R36859:36868 VST.msl.seplog <> andp_left2 meth
R36859:36868 VST.msl.seplog <> andp_left2 meth
R36879:36891 VST.msl.log_normalize <> later_derives thm
R36879:36891 VST.msl.log_normalize <> later_derives thm
R36902:36913 VST.msl.log_normalize <> andp_derives thm
R36902:36913 VST.msl.log_normalize <> andp_derives thm
R36930:36943 VST.msl.seplog <> sepcon_derives meth
R36930:36943 VST.msl.seplog <> sepcon_derives meth
R36960:36969 VST.msl.seplog <> allp_right meth
R36960:36969 VST.msl.seplog <> allp_right meth
R36991:37009 VST.msl.seplog <> wand_sepcon_adjoint meth
R36991:37009 VST.msl.seplog <> wand_sepcon_adjoint meth
R37022:37032 VST.msl.seplog <> sepcon_comm meth
R37022:37032 VST.msl.seplog <> sepcon_comm meth
R37022:37032 VST.msl.seplog <> sepcon_comm meth
R37043:37058 VST.msl.seplog <> imp_andp_adjoint meth
R37043:37058 VST.msl.seplog <> imp_andp_adjoint meth
R37071:37079 VST.msl.log_normalize <> andp_comm thm
R37071:37079 VST.msl.log_normalize <> andp_comm thm
R37071:37079 VST.msl.log_normalize <> andp_comm thm
R37091:37099 VST.msl.seplog <> exp_right meth
R37091:37099 VST.msl.seplog <> exp_right meth
R37114:37125 VST.msl.seplog <> derives_refl meth
R37114:37125 VST.msl.seplog <> derives_refl meth
R37138:37154 VST.floyd.SeparationLogicFacts StoreUnionHackB2F <> mod
modtype 37170:37215 <> CLIGHT_SEPARATION_HOARE_LOGIC_SASSIGN_BACKWARD
R37244:37276 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 37234:37241 <> CLIGHT_SEPARATION_HOARE_LOGIC_SASSIGN_BACKWARD.CSHL_Def
ax 37304:37340 CLIGHT_SEPARATION_HOARE_LOGIC_SASSIGN_BACKWARD semax_store_store_union_hack_backward
R37355:37363 VST.veric.mpred <> compspecs class
binder 37351:37352 <> CS:410
R37374:37383 VST.veric.juicy_extspec <> OracleKind class
binder 37367:37371 <> Espec:411
R37394:37402 VST.veric.seplog <> tycontext ind
binder 37387:37391 <> Delta:412
R37426:37427 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37428:37432 VST.veric.mpred <> mpred def
R37419:37425 VST.veric.mpred <> environ ind
binder 37416:37416 <> P:413
binder 37435:37436 <> e1:414
binder 37438:37439 <> e2:415
R37447:37451 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SASSIGN_BACKWARD semax defax
R38661:38677 VST.veric.SeparationLogic <> normal_ret_assert def
R38679:38679 VST.floyd.SeparationLogicFacts <> P:413 var
R38645:38651 compcert.cfrontend.Clight <> Sassign constr
R38656:38657 VST.floyd.SeparationLogicFacts <> e2:415 var
R38653:38654 VST.floyd.SeparationLogicFacts <> e1:414 var
R37476:37476 VST.msl.seplog <> ::logic:x_'||'_x not
R37792:37807 VST.msl.seplog <> ::logic:x_'||'_x not
R38625:38625 VST.msl.seplog <> ::logic:x_'||'_x not
R37477:37479 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R37489:37490 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R37484:37488 VST.msl.shares <> share def
binder 37480:37481 <> sh:416
R37511:37527 VST.msl.seplog <> ::logic:x_'&&'_x not
R37491:37493 VST.msl.seplog <> ::logic:'!!'_x not
R37494:37507 VST.veric.shares <> writable_share def
R37509:37510 VST.floyd.SeparationLogicFacts <> sh:416 var
R37528:37532 VST.msl.seplog <> ::logic:'|>'_x not
R37791:37791 VST.msl.seplog <> ::logic:'|>'_x not
R37596:37614 VST.msl.seplog <> ::logic:x_'&&'_x not
R37790:37790 VST.msl.seplog <> ::logic:x_'&&'_x not
R37533:37533 VST.msl.seplog <> ::logic:x_'&&'_x not
R37552:37558 VST.msl.seplog <> ::logic:x_'&&'_x not
R37595:37595 VST.msl.seplog <> ::logic:x_'&&'_x not
R37534:37542 VST.veric.SeparationLogic <> tc_lvalue def
R37550:37551 VST.floyd.SeparationLogicFacts <> e1:414 var
R37544:37548 VST.floyd.SeparationLogicFacts <> Delta:412 var
R37559:37565 VST.veric.SeparationLogic <> tc_expr def
R37574:37578 compcert.cfrontend.Clight <> Ecast constr
R37584:37589 compcert.cfrontend.Clight <> typeof def
R37591:37592 VST.floyd.SeparationLogicFacts <> e1:414 var
R37580:37581 VST.floyd.SeparationLogicFacts <> e2:415 var
R37567:37571 VST.floyd.SeparationLogicFacts <> Delta:412 var
R37615:37615 VST.msl.seplog <> ::logic:x_'*'_x not
R37658:37676 VST.msl.seplog <> ::logic:x_'*'_x not
R37789:37789 VST.msl.seplog <> ::logic:x_'*'_x not
R37616:37617 VST.veric.lift LiftNotation :::'`('_x_')' not
R37640:37657 VST.veric.lift LiftNotation :::'`('_x_')' not
R37618:37624 VST.veric.SeparationLogic <> mapsto_ def
R37630:37635 compcert.cfrontend.Clight <> typeof def
R37637:37638 VST.floyd.SeparationLogicFacts <> e1:414 var
R37626:37627 VST.floyd.SeparationLogicFacts <> sh:416 var
R37643:37653 VST.veric.expr <> eval_lvalue def
R37655:37656 VST.floyd.SeparationLogicFacts <> e1:414 var
R37784:37787 VST.msl.seplog <> ::logic:x_'-*'_x not
R37677:37678 VST.veric.lift LiftNotation :::'`('_x_')' not
R37700:37783 VST.veric.lift LiftNotation :::'`('_x_')' not
R37679:37684 VST.veric.SeparationLogic <> mapsto def
R37690:37695 compcert.cfrontend.Clight <> typeof def
R37697:37698 VST.floyd.SeparationLogicFacts <> e1:414 var
R37686:37687 VST.floyd.SeparationLogicFacts <> sh:416 var
R37720:37720 VST.veric.lift LiftNotation :::'`'_x not
R37730:37782 VST.veric.lift LiftNotation :::'`'_x not
R37721:37729 VST.veric.val_lemmas <> force_val def
R37732:37733 VST.veric.lift LiftNotation :::'`('_x_')' not
R37766:37781 VST.veric.lift LiftNotation :::'`('_x_')' not
R37734:37741 VST.veric.Clight_Cop2 <> sem_cast def
R37756:37761 compcert.cfrontend.Clight <> typeof def
R37763:37764 VST.floyd.SeparationLogicFacts <> e1:414 var
R37744:37749 compcert.cfrontend.Clight <> typeof def
R37751:37752 VST.floyd.SeparationLogicFacts <> e2:415 var
R37769:37777 VST.veric.expr <> eval_expr def
R37779:37780 VST.floyd.SeparationLogicFacts <> e2:415 var
R37703:37713 VST.veric.expr <> eval_lvalue def
R37715:37716 VST.floyd.SeparationLogicFacts <> e1:414 var
R37788:37788 VST.floyd.SeparationLogicFacts <> P:413 var
R37808:37811 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R37854:37869 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R37815:37818 compcert.cfrontend.Ctypes <> type ind
binder 37812:37813 <> t2:417
R37830:37841 compcert.common.AST <> memory_chunk ind
binder 37822:37823 <> ch:418
R37830:37841 compcert.common.AST <> memory_chunk ind
binder 37825:37827 <> ch':419
R37849:37853 VST.msl.shares <> share def
binder 37845:37846 <> sh:420
R38126:38142 VST.msl.seplog <> ::logic:x_'&&'_x not
R37870:37873 VST.msl.seplog <> ::logic:'!!'_x not
R38125:38125 VST.msl.seplog <> ::logic:'!!'_x not
R37931:37951 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R37924:37926 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37899:37902 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R37875:37886 VST.veric.SeparationLogic <> numeric_type def
R37889:37894 compcert.cfrontend.Clight <> typeof def
R37896:37897 VST.floyd.SeparationLogicFacts <> e1:414 var
R37903:37914 VST.veric.SeparationLogic <> numeric_type def
R37916:37917 VST.floyd.SeparationLogicFacts <> t2:417 var
R37927:37930 Coq.Init.Datatypes <> true constr
R37989:38009 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R37975:37977 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37952:37962 compcert.cfrontend.Ctypes <> access_mode def
R37965:37970 compcert.cfrontend.Clight <> typeof def
R37972:37973 VST.floyd.SeparationLogicFacts <> e1:414 var
R37978:37985 compcert.cfrontend.Ctypes <> By_value constr
R37987:37988 VST.floyd.SeparationLogicFacts <> ch:418 var
R38039:38059 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R38024:38026 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38010:38020 compcert.cfrontend.Ctypes <> access_mode def
R38022:38023 VST.floyd.SeparationLogicFacts <> t2:417 var
R38027:38034 compcert.cfrontend.Ctypes <> By_value constr
R38036:38038 VST.floyd.SeparationLogicFacts <> ch':419 var
R38087:38107 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R38060:38079 VST.veric.SeparationLogic <> decode_encode_val_ok def
R38084:38086 VST.floyd.SeparationLogicFacts <> ch':419 var
R38081:38082 VST.floyd.SeparationLogicFacts <> ch:418 var
R38108:38121 VST.veric.shares <> writable_share def
R38123:38124 VST.floyd.SeparationLogicFacts <> sh:420 var
R38143:38147 VST.msl.seplog <> ::logic:'|>'_x not
R38624:38624 VST.msl.seplog <> ::logic:'|>'_x not
R38211:38229 VST.msl.seplog <> ::logic:x_'&&'_x not
R38623:38623 VST.msl.seplog <> ::logic:x_'&&'_x not
R38148:38148 VST.msl.seplog <> ::logic:x_'&&'_x not
R38167:38173 VST.msl.seplog <> ::logic:x_'&&'_x not
R38210:38210 VST.msl.seplog <> ::logic:x_'&&'_x not
R38149:38157 VST.veric.SeparationLogic <> tc_lvalue def
R38165:38166 VST.floyd.SeparationLogicFacts <> e1:414 var
R38159:38163 VST.floyd.SeparationLogicFacts <> Delta:412 var
R38174:38180 VST.veric.SeparationLogic <> tc_expr def
R38189:38193 compcert.cfrontend.Clight <> Ecast constr
R38199:38204 compcert.cfrontend.Clight <> typeof def
R38206:38207 VST.floyd.SeparationLogicFacts <> e1:414 var
R38195:38196 VST.floyd.SeparationLogicFacts <> e2:415 var
R38182:38186 VST.floyd.SeparationLogicFacts <> Delta:412 var
R38230:38230 VST.msl.seplog <> ::logic:x_'*'_x not
R38333:38351 VST.msl.seplog <> ::logic:x_'*'_x not
R38622:38622 VST.msl.seplog <> ::logic:x_'*'_x not
R38273:38299 VST.msl.seplog <> ::logic:x_'&&'_x not
R38231:38232 VST.veric.lift LiftNotation :::'`('_x_')' not
R38255:38272 VST.veric.lift LiftNotation :::'`('_x_')' not
R38233:38239 VST.veric.SeparationLogic <> mapsto_ def
R38245:38250 compcert.cfrontend.Clight <> typeof def
R38252:38253 VST.floyd.SeparationLogicFacts <> e1:414 var
R38241:38242 VST.floyd.SeparationLogicFacts <> sh:420 var
R38258:38268 VST.veric.expr <> eval_lvalue def
R38270:38271 VST.floyd.SeparationLogicFacts <> e1:414 var
R38300:38301 VST.veric.lift LiftNotation :::'`('_x_')' not
R38315:38332 VST.veric.lift LiftNotation :::'`('_x_')' not
R38302:38308 VST.veric.SeparationLogic <> mapsto_ def
R38313:38314 VST.floyd.SeparationLogicFacts <> t2:417 var
R38310:38311 VST.floyd.SeparationLogicFacts <> sh:420 var
R38318:38328 VST.veric.expr <> eval_lvalue def
R38330:38331 VST.floyd.SeparationLogicFacts <> e1:414 var
R38352:38355 VST.msl.seplog <> ::logic:'ALL'_x_'..'_x_','_x not
R38363:38381 VST.msl.seplog <> ::logic:'ALL'_x_'..'_x_','_x not
R38360:38362 compcert.common.Values <> val ind
binder 38356:38357 <> v':421
R38420:38443 VST.msl.seplog <> ::logic:x_'-*'_x not
R38382:38383 VST.veric.lift LiftNotation :::'`('_x_')' not
R38396:38419 VST.veric.lift LiftNotation :::'`('_x_')' not
R38384:38389 VST.veric.SeparationLogic <> mapsto def
R38394:38395 VST.floyd.SeparationLogicFacts <> t2:417 var
R38391:38392 VST.floyd.SeparationLogicFacts <> sh:420 var
R38416:38416 VST.veric.lift LiftNotation :::'`'_x not
R38417:38418 VST.floyd.SeparationLogicFacts <> v':421 var
R38399:38409 VST.veric.expr <> eval_lvalue def
R38411:38412 VST.floyd.SeparationLogicFacts <> e1:414 var
R38444:38446 VST.msl.seplog <> imp meth
R38620:38620 VST.floyd.SeparationLogicFacts <> P:413 var
R38449:38453 VST.veric.SeparationLogic <> local def
R38457:38458 VST.veric.lift LiftNotation :::'`'_x not
R38476:38592 VST.veric.lift LiftNotation :::'`'_x not
R38459:38475 compcert.common.Memdata <> decode_encode_val def
R38589:38589 VST.veric.lift LiftNotation :::'`'_x not
R38590:38591 VST.floyd.SeparationLogicFacts <> v':421 var
R38582:38582 VST.veric.lift LiftNotation :::'`'_x not
R38583:38585 VST.floyd.SeparationLogicFacts <> ch':419 var
R38576:38576 VST.veric.lift LiftNotation :::'`'_x not
R38577:38578 VST.floyd.SeparationLogicFacts <> ch:418 var
R38505:38507 VST.veric.lift LiftNotation :::'`'_x not
R38517:38572 VST.veric.lift LiftNotation :::'`'_x not
R38508:38516 VST.veric.val_lemmas <> force_val def
R38520:38522 VST.veric.lift LiftNotation :::'`('_x_')' not
R38555:38571 VST.veric.lift LiftNotation :::'`('_x_')' not
R38523:38530 VST.veric.Clight_Cop2 <> sem_cast def
R38545:38550 compcert.cfrontend.Clight <> typeof def
R38552:38553 VST.floyd.SeparationLogicFacts <> e1:414 var
R38533:38538 compcert.cfrontend.Clight <> typeof def
R38540:38541 VST.floyd.SeparationLogicFacts <> e2:415 var
R38559:38567 VST.veric.expr <> eval_expr def
R38569:38570 VST.floyd.SeparationLogicFacts <> e2:415 var
R37462:37466 VST.floyd.SeparationLogicFacts <> Delta:412 var
R37456:37460 VST.floyd.SeparationLogicFacts <> Espec:411 var
R37453:37454 VST.floyd.SeparationLogicFacts <> CS:410 var
R38688:38733 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SASSIGN_BACKWARD <> modtype
R38767:38799 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R38818:38858 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R38884:38886 VST.floyd.SeparationLogicFacts Def <> modtype
R38903:38942 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION <> mod
R38968:38970 VST.floyd.SeparationLogicFacts Def <> modtype
R38989:39032 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_BACKWARD <> mod
R39058:39060 VST.floyd.SeparationLogicFacts Def <> modtype
R39088:39142 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_BACKWARD <> mod
R39168:39170 VST.floyd.SeparationLogicFacts Def <> modtype
R39181:39226 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SASSIGN_BACKWARD <> mod
R39252:39254 VST.floyd.SeparationLogicFacts Def <> modtype
mod 38744:38752 <> ToSassign
R39277:39279 VST.floyd.SeparationLogicFacts Def <> modtype
mod 39265:39272 <> ToSassign.CSHL_Def
R39304:39317 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R39320:39322 VST.floyd.SeparationLogicFacts Def <> modtype
R39326:39331 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 39289:39299 <> ToSassign.ConseqFacts
R39355:39366 VST.floyd.SeparationLogicFacts GenExtrFacts <> modtype
R39369:39371 VST.floyd.SeparationLogicFacts Def <> modtype
R39375:39380 VST.floyd.SeparationLogicFacts Conseq <> modtype
R39384:39387 VST.floyd.SeparationLogicFacts Extr <> modtype
mod 39342:39350 <> ToSassign.ExtrFacts
prf 39505:39541 ToSassign semax_store_store_union_hack_backward
R39556:39564 VST.veric.mpred <> compspecs class
binder 39552:39553 <> CS:423
R39575:39584 VST.veric.juicy_extspec <> OracleKind class
binder 39568:39572 <> Espec:424
R39595:39603 VST.veric.seplog <> tycontext ind
binder 39588:39592 <> Delta:425
R39627:39628 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39629:39633 VST.veric.mpred <> mpred def
R39620:39626 VST.veric.mpred <> environ ind
binder 39617:39617 <> P:426
binder 39636:39637 <> e1:427
binder 39639:39640 <> e2:428
R39648:39652 VST.floyd.SeparationLogicFacts Def semax defax
R40862:40878 VST.veric.SeparationLogic <> normal_ret_assert def
R40880:40880 VST.floyd.SeparationLogicFacts <> P:426 var
R40846:40852 compcert.cfrontend.Clight <> Sassign constr
R40857:40858 VST.floyd.SeparationLogicFacts <> e2:428 var
R40854:40855 VST.floyd.SeparationLogicFacts <> e1:427 var
R39677:39677 VST.msl.seplog <> ::logic:x_'||'_x not
R39993:40008 VST.msl.seplog <> ::logic:x_'||'_x not
R40826:40826 VST.msl.seplog <> ::logic:x_'||'_x not
R39678:39680 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R39690:39691 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R39685:39689 VST.msl.shares <> share def
binder 39681:39682 <> sh:429
R39712:39728 VST.msl.seplog <> ::logic:x_'&&'_x not
R39692:39694 VST.msl.seplog <> ::logic:'!!'_x not
R39695:39708 VST.veric.shares <> writable_share def
R39710:39711 VST.floyd.SeparationLogicFacts <> sh:429 var
R39729:39733 VST.msl.seplog <> ::logic:'|>'_x not
R39992:39992 VST.msl.seplog <> ::logic:'|>'_x not
R39797:39815 VST.msl.seplog <> ::logic:x_'&&'_x not
R39991:39991 VST.msl.seplog <> ::logic:x_'&&'_x not
R39734:39734 VST.msl.seplog <> ::logic:x_'&&'_x not
R39753:39759 VST.msl.seplog <> ::logic:x_'&&'_x not
R39796:39796 VST.msl.seplog <> ::logic:x_'&&'_x not
R39735:39743 VST.veric.SeparationLogic <> tc_lvalue def
R39751:39752 VST.floyd.SeparationLogicFacts <> e1:427 var
R39745:39749 VST.floyd.SeparationLogicFacts <> Delta:425 var
R39760:39766 VST.veric.SeparationLogic <> tc_expr def
R39775:39779 compcert.cfrontend.Clight <> Ecast constr
R39785:39790 compcert.cfrontend.Clight <> typeof def
R39792:39793 VST.floyd.SeparationLogicFacts <> e1:427 var
R39781:39782 VST.floyd.SeparationLogicFacts <> e2:428 var
R39768:39772 VST.floyd.SeparationLogicFacts <> Delta:425 var
R39816:39816 VST.msl.seplog <> ::logic:x_'*'_x not
R39859:39877 VST.msl.seplog <> ::logic:x_'*'_x not
R39990:39990 VST.msl.seplog <> ::logic:x_'*'_x not
R39817:39818 VST.veric.lift LiftNotation :::'`('_x_')' not
R39841:39858 VST.veric.lift LiftNotation :::'`('_x_')' not
R39819:39825 VST.veric.SeparationLogic <> mapsto_ def
R39831:39836 compcert.cfrontend.Clight <> typeof def
R39838:39839 VST.floyd.SeparationLogicFacts <> e1:427 var
R39827:39828 VST.floyd.SeparationLogicFacts <> sh:429 var
R39844:39854 VST.veric.expr <> eval_lvalue def
R39856:39857 VST.floyd.SeparationLogicFacts <> e1:427 var
R39985:39988 VST.msl.seplog <> ::logic:x_'-*'_x not
R39878:39879 VST.veric.lift LiftNotation :::'`('_x_')' not
R39901:39984 VST.veric.lift LiftNotation :::'`('_x_')' not
R39880:39885 VST.veric.SeparationLogic <> mapsto def
R39891:39896 compcert.cfrontend.Clight <> typeof def
R39898:39899 VST.floyd.SeparationLogicFacts <> e1:427 var
R39887:39888 VST.floyd.SeparationLogicFacts <> sh:429 var
R39921:39921 VST.veric.lift LiftNotation :::'`'_x not
R39931:39983 VST.veric.lift LiftNotation :::'`'_x not
R39922:39930 VST.veric.val_lemmas <> force_val def
R39933:39934 VST.veric.lift LiftNotation :::'`('_x_')' not
R39967:39982 VST.veric.lift LiftNotation :::'`('_x_')' not
R39935:39942 VST.veric.Clight_Cop2 <> sem_cast def
R39957:39962 compcert.cfrontend.Clight <> typeof def
R39964:39965 VST.floyd.SeparationLogicFacts <> e1:427 var
R39945:39950 compcert.cfrontend.Clight <> typeof def
R39952:39953 VST.floyd.SeparationLogicFacts <> e2:428 var
R39970:39978 VST.veric.expr <> eval_expr def
R39980:39981 VST.floyd.SeparationLogicFacts <> e2:428 var
R39904:39914 VST.veric.expr <> eval_lvalue def
R39916:39917 VST.floyd.SeparationLogicFacts <> e1:427 var
R39989:39989 VST.floyd.SeparationLogicFacts <> P:426 var
R40009:40012 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R40055:40070 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R40016:40019 compcert.cfrontend.Ctypes <> type ind
binder 40013:40014 <> t2:430
R40031:40042 compcert.common.AST <> memory_chunk ind
binder 40023:40024 <> ch:431
R40031:40042 compcert.common.AST <> memory_chunk ind
binder 40026:40028 <> ch':432
R40050:40054 VST.msl.shares <> share def
binder 40046:40047 <> sh:433
R40327:40343 VST.msl.seplog <> ::logic:x_'&&'_x not
R40071:40074 VST.msl.seplog <> ::logic:'!!'_x not
R40326:40326 VST.msl.seplog <> ::logic:'!!'_x not
R40132:40152 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R40125:40127 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40100:40103 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40076:40087 VST.veric.SeparationLogic <> numeric_type def
R40090:40095 compcert.cfrontend.Clight <> typeof def
R40097:40098 VST.floyd.SeparationLogicFacts <> e1:427 var
R40104:40115 VST.veric.SeparationLogic <> numeric_type def
R40117:40118 VST.floyd.SeparationLogicFacts <> t2:430 var
R40128:40131 Coq.Init.Datatypes <> true constr
R40190:40210 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R40176:40178 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40153:40163 compcert.cfrontend.Ctypes <> access_mode def
R40166:40171 compcert.cfrontend.Clight <> typeof def
R40173:40174 VST.floyd.SeparationLogicFacts <> e1:427 var
R40179:40186 compcert.cfrontend.Ctypes <> By_value constr
R40188:40189 VST.floyd.SeparationLogicFacts <> ch:431 var
R40240:40260 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R40225:40227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40211:40221 compcert.cfrontend.Ctypes <> access_mode def
R40223:40224 VST.floyd.SeparationLogicFacts <> t2:430 var
R40228:40235 compcert.cfrontend.Ctypes <> By_value constr
R40237:40239 VST.floyd.SeparationLogicFacts <> ch':432 var
R40288:40308 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R40261:40280 VST.veric.SeparationLogic <> decode_encode_val_ok def
R40285:40287 VST.floyd.SeparationLogicFacts <> ch':432 var
R40282:40283 VST.floyd.SeparationLogicFacts <> ch:431 var
R40309:40322 VST.veric.shares <> writable_share def
R40324:40325 VST.floyd.SeparationLogicFacts <> sh:433 var
R40344:40348 VST.msl.seplog <> ::logic:'|>'_x not
R40825:40825 VST.msl.seplog <> ::logic:'|>'_x not
R40412:40430 VST.msl.seplog <> ::logic:x_'&&'_x not
R40824:40824 VST.msl.seplog <> ::logic:x_'&&'_x not
R40349:40349 VST.msl.seplog <> ::logic:x_'&&'_x not
R40368:40374 VST.msl.seplog <> ::logic:x_'&&'_x not
R40411:40411 VST.msl.seplog <> ::logic:x_'&&'_x not
R40350:40358 VST.veric.SeparationLogic <> tc_lvalue def
R40366:40367 VST.floyd.SeparationLogicFacts <> e1:427 var
R40360:40364 VST.floyd.SeparationLogicFacts <> Delta:425 var
R40375:40381 VST.veric.SeparationLogic <> tc_expr def
R40390:40394 compcert.cfrontend.Clight <> Ecast constr
R40400:40405 compcert.cfrontend.Clight <> typeof def
R40407:40408 VST.floyd.SeparationLogicFacts <> e1:427 var
R40396:40397 VST.floyd.SeparationLogicFacts <> e2:428 var
R40383:40387 VST.floyd.SeparationLogicFacts <> Delta:425 var
R40431:40431 VST.msl.seplog <> ::logic:x_'*'_x not
R40534:40552 VST.msl.seplog <> ::logic:x_'*'_x not
R40823:40823 VST.msl.seplog <> ::logic:x_'*'_x not
R40474:40500 VST.msl.seplog <> ::logic:x_'&&'_x not
R40432:40433 VST.veric.lift LiftNotation :::'`('_x_')' not
R40456:40473 VST.veric.lift LiftNotation :::'`('_x_')' not
R40434:40440 VST.veric.SeparationLogic <> mapsto_ def
R40446:40451 compcert.cfrontend.Clight <> typeof def
R40453:40454 VST.floyd.SeparationLogicFacts <> e1:427 var
R40442:40443 VST.floyd.SeparationLogicFacts <> sh:433 var
R40459:40469 VST.veric.expr <> eval_lvalue def
R40471:40472 VST.floyd.SeparationLogicFacts <> e1:427 var
R40501:40502 VST.veric.lift LiftNotation :::'`('_x_')' not
R40516:40533 VST.veric.lift LiftNotation :::'`('_x_')' not
R40503:40509 VST.veric.SeparationLogic <> mapsto_ def
R40514:40515 VST.floyd.SeparationLogicFacts <> t2:430 var
R40511:40512 VST.floyd.SeparationLogicFacts <> sh:433 var
R40519:40529 VST.veric.expr <> eval_lvalue def
R40531:40532 VST.floyd.SeparationLogicFacts <> e1:427 var
R40553:40556 VST.msl.seplog <> ::logic:'ALL'_x_'..'_x_','_x not
R40564:40582 VST.msl.seplog <> ::logic:'ALL'_x_'..'_x_','_x not
R40561:40563 compcert.common.Values <> val ind
binder 40557:40558 <> v':434
R40621:40644 VST.msl.seplog <> ::logic:x_'-*'_x not
R40583:40584 VST.veric.lift LiftNotation :::'`('_x_')' not
R40597:40620 VST.veric.lift LiftNotation :::'`('_x_')' not
R40585:40590 VST.veric.SeparationLogic <> mapsto def
R40595:40596 VST.floyd.SeparationLogicFacts <> t2:430 var
R40592:40593 VST.floyd.SeparationLogicFacts <> sh:433 var
R40617:40617 VST.veric.lift LiftNotation :::'`'_x not
R40618:40619 VST.floyd.SeparationLogicFacts <> v':434 var
R40600:40610 VST.veric.expr <> eval_lvalue def
R40612:40613 VST.floyd.SeparationLogicFacts <> e1:427 var
R40645:40647 VST.msl.seplog <> imp meth
R40821:40821 VST.floyd.SeparationLogicFacts <> P:426 var
R40650:40654 VST.veric.SeparationLogic <> local def
R40658:40659 VST.veric.lift LiftNotation :::'`'_x not
R40677:40793 VST.veric.lift LiftNotation :::'`'_x not
R40660:40676 compcert.common.Memdata <> decode_encode_val def
R40790:40790 VST.veric.lift LiftNotation :::'`'_x not
R40791:40792 VST.floyd.SeparationLogicFacts <> v':434 var
R40783:40783 VST.veric.lift LiftNotation :::'`'_x not
R40784:40786 VST.floyd.SeparationLogicFacts <> ch':432 var
R40777:40777 VST.veric.lift LiftNotation :::'`'_x not
R40778:40779 VST.floyd.SeparationLogicFacts <> ch:431 var
R40706:40708 VST.veric.lift LiftNotation :::'`'_x not
R40718:40773 VST.veric.lift LiftNotation :::'`'_x not
R40709:40717 VST.veric.val_lemmas <> force_val def
R40721:40723 VST.veric.lift LiftNotation :::'`('_x_')' not
R40756:40772 VST.veric.lift LiftNotation :::'`('_x_')' not
R40724:40731 VST.veric.Clight_Cop2 <> sem_cast def
R40746:40751 compcert.cfrontend.Clight <> typeof def
R40753:40754 VST.floyd.SeparationLogicFacts <> e1:427 var
R40734:40739 compcert.cfrontend.Clight <> typeof def
R40741:40742 VST.floyd.SeparationLogicFacts <> e2:428 var
R40760:40768 VST.veric.expr <> eval_expr def
R40770:40771 VST.floyd.SeparationLogicFacts <> e2:428 var
R39663:39667 VST.floyd.SeparationLogicFacts <> Delta:425 var
R39657:39661 VST.floyd.SeparationLogicFacts <> Espec:424 var
R39654:39655 VST.floyd.SeparationLogicFacts <> CS:423 var
R40909:40917 VST.floyd.SeparationLogicFacts ToSassign semax_orp thm
R40909:40917 VST.floyd.SeparationLogicFacts ToSassign semax_orp thm
R40930:40949 VST.floyd.SeparationLogicFacts StoreB semax_store_backward prfax
R40930:40949 VST.floyd.SeparationLogicFacts StoreB semax_store_backward prfax
R40962:40992 VST.floyd.SeparationLogicFacts StoreUnionHackB semax_store_union_hack_backward prfax
R40962:40992 VST.floyd.SeparationLogicFacts StoreUnionHackB semax_store_union_hack_backward prfax
R41005:41013 VST.floyd.SeparationLogicFacts ToSassign <> mod
R41051:41083 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R41102:41142 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R41168:41170 VST.floyd.SeparationLogicFacts Def <> modtype
R41190:41235 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SASSIGN_BACKWARD <> mod
R41261:41263 VST.floyd.SeparationLogicFacts Def <> modtype
R41274:41317 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_BACKWARD <> mod
R41343:41345 VST.floyd.SeparationLogicFacts Def <> modtype
mod 41024:41036 <> Sassign2Store
R41368:41370 VST.floyd.SeparationLogicFacts Def <> modtype
mod 41356:41363 <> Sassign2Store.CSHL_Def
R41395:41408 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R41411:41413 VST.floyd.SeparationLogicFacts Def <> modtype
R41417:41422 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 41380:41390 <> Sassign2Store.ConseqFacts
prf 41499:41518 Sassign2Store semax_store_backward
R41533:41541 VST.veric.mpred <> compspecs class
binder 41529:41530 <> CS:435
R41552:41561 VST.veric.juicy_extspec <> OracleKind class
binder 41545:41549 <> Espec:436
R41572:41580 VST.veric.seplog <> tycontext ind
binder 41565:41569 <> Delta:437
binder 41583:41584 <> e1:438
binder 41586:41587 <> e2:439
binder 41589:41589 <> P:440
R41596:41600 VST.floyd.SeparationLogicFacts Def semax defax
R41955:41971 VST.veric.SeparationLogic <> normal_ret_assert def
R41973:41973 VST.floyd.SeparationLogicFacts <> P:440 var
R41929:41935 compcert.cfrontend.Clight <> Sassign constr
R41940:41941 VST.floyd.SeparationLogicFacts <> e2:439 var
R41937:41938 VST.floyd.SeparationLogicFacts <> e1:438 var
R41628:41630 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R41640:41641 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R41635:41639 VST.msl.shares <> share def
binder 41631:41632 <> sh:441
R41662:41665 VST.msl.seplog <> ::logic:x_'&&'_x not
R41642:41644 VST.msl.seplog <> ::logic:'!!'_x not
R41645:41658 VST.veric.shares <> writable_share def
R41660:41661 VST.floyd.SeparationLogicFacts <> sh:441 var
R41666:41670 VST.msl.seplog <> ::logic:'|>'_x not
R41915:41915 VST.msl.seplog <> ::logic:'|>'_x not
R41734:41752 VST.msl.seplog <> ::logic:x_'&&'_x not
R41914:41914 VST.msl.seplog <> ::logic:x_'&&'_x not
R41671:41671 VST.msl.seplog <> ::logic:x_'&&'_x not
R41690:41696 VST.msl.seplog <> ::logic:x_'&&'_x not
R41733:41733 VST.msl.seplog <> ::logic:x_'&&'_x not
R41672:41680 VST.veric.SeparationLogic <> tc_lvalue def
R41688:41689 VST.floyd.SeparationLogicFacts <> e1:438 var
R41682:41686 VST.floyd.SeparationLogicFacts <> Delta:437 var
R41697:41703 VST.veric.SeparationLogic <> tc_expr def
R41712:41716 compcert.cfrontend.Clight <> Ecast constr
R41722:41727 compcert.cfrontend.Clight <> typeof def
R41729:41730 VST.floyd.SeparationLogicFacts <> e1:438 var
R41718:41719 VST.floyd.SeparationLogicFacts <> e2:439 var
R41705:41709 VST.floyd.SeparationLogicFacts <> Delta:437 var
R41753:41753 VST.msl.seplog <> ::logic:x_'*'_x not
R41796:41800 VST.msl.seplog <> ::logic:x_'*'_x not
R41913:41913 VST.msl.seplog <> ::logic:x_'*'_x not
R41754:41755 VST.veric.lift LiftNotation :::'`('_x_')' not
R41778:41795 VST.veric.lift LiftNotation :::'`('_x_')' not
R41756:41762 VST.veric.SeparationLogic <> mapsto_ def
R41768:41773 compcert.cfrontend.Clight <> typeof def
R41775:41776 VST.floyd.SeparationLogicFacts <> e1:438 var
R41764:41765 VST.floyd.SeparationLogicFacts <> sh:441 var
R41781:41791 VST.veric.expr <> eval_lvalue def
R41793:41794 VST.floyd.SeparationLogicFacts <> e1:438 var
R41908:41911 VST.msl.seplog <> ::logic:x_'-*'_x not
R41801:41802 VST.veric.lift LiftNotation :::'`('_x_')' not
R41824:41907 VST.veric.lift LiftNotation :::'`('_x_')' not
R41803:41808 VST.veric.SeparationLogic <> mapsto def
R41814:41819 compcert.cfrontend.Clight <> typeof def
R41821:41822 VST.floyd.SeparationLogicFacts <> e1:438 var
R41810:41811 VST.floyd.SeparationLogicFacts <> sh:441 var
R41844:41844 VST.veric.lift LiftNotation :::'`'_x not
R41854:41906 VST.veric.lift LiftNotation :::'`'_x not
R41845:41853 VST.veric.val_lemmas <> force_val def
R41856:41857 VST.veric.lift LiftNotation :::'`('_x_')' not
R41890:41905 VST.veric.lift LiftNotation :::'`('_x_')' not
R41858:41865 VST.veric.Clight_Cop2 <> sem_cast def
R41880:41885 compcert.cfrontend.Clight <> typeof def
R41887:41888 VST.floyd.SeparationLogicFacts <> e1:438 var
R41868:41873 compcert.cfrontend.Clight <> typeof def
R41875:41876 VST.floyd.SeparationLogicFacts <> e2:439 var
R41893:41901 VST.veric.expr <> eval_expr def
R41903:41904 VST.floyd.SeparationLogicFacts <> e2:439 var
R41827:41837 VST.veric.expr <> eval_lvalue def
R41839:41840 VST.floyd.SeparationLogicFacts <> e1:438 var
R41912:41912 VST.floyd.SeparationLogicFacts <> P:440 var
R41611:41615 VST.floyd.SeparationLogicFacts <> Delta:437 var
R41605:41609 VST.floyd.SeparationLogicFacts <> Espec:436 var
R41602:41603 VST.floyd.SeparationLogicFacts <> CS:435 var
R42003:42018 VST.floyd.SeparationLogicFacts Sassign2Store semax_pre_simple thm
R42030:42066 VST.floyd.SeparationLogicFacts Sassign semax_store_store_union_hack_backward prfax
R42003:42018 VST.floyd.SeparationLogicFacts Sassign2Store semax_pre_simple thm
R42030:42066 VST.floyd.SeparationLogicFacts Sassign semax_store_store_union_hack_backward prfax
R42078:42087 VST.msl.seplog <> orp_right1 meth
R42078:42087 VST.msl.seplog <> orp_right1 meth
R42106:42118 VST.floyd.SeparationLogicFacts Sassign2Store <> mod
R42165:42197 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R42216:42256 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R42282:42284 VST.floyd.SeparationLogicFacts Def <> modtype
R42304:42349 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SASSIGN_BACKWARD <> mod
R42375:42377 VST.floyd.SeparationLogicFacts Def <> modtype
R42388:42442 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_STORE_UNION_HACK_BACKWARD <> mod
R42468:42470 VST.floyd.SeparationLogicFacts Def <> modtype
mod 42129:42150 <> Sassign2StoreUnionHack
R42493:42495 VST.floyd.SeparationLogicFacts Def <> modtype
mod 42481:42488 <> Sassign2StoreUnionHack.CSHL_Def
R42520:42533 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R42536:42538 VST.floyd.SeparationLogicFacts Def <> modtype
R42542:42547 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 42505:42515 <> Sassign2StoreUnionHack.ConseqFacts
prf 42624:42654 Sassign2StoreUnionHack semax_store_union_hack_backward
R42670:42678 VST.veric.mpred <> compspecs class
binder 42666:42667 <> CS:442
R42689:42698 VST.veric.juicy_extspec <> OracleKind class
binder 42682:42686 <> Espec:443
R42709:42717 VST.veric.seplog <> tycontext ind
binder 42702:42706 <> Delta:444
binder 42720:42721 <> e1:445
binder 42723:42724 <> e2:446
binder 42726:42726 <> P:447
R42733:42737 VST.floyd.SeparationLogicFacts Def semax defax
R43621:43637 VST.veric.SeparationLogic <> normal_ret_assert def
R43639:43639 VST.floyd.SeparationLogicFacts <> P:447 var
R43595:43601 compcert.cfrontend.Clight <> Sassign constr
R43606:43607 VST.floyd.SeparationLogicFacts <> e2:446 var
R43603:43604 VST.floyd.SeparationLogicFacts <> e1:445 var
R42765:42768 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R42811:42826 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R42772:42775 compcert.cfrontend.Ctypes <> type ind
binder 42769:42770 <> t2:448
R42787:42798 compcert.common.AST <> memory_chunk ind
binder 42779:42780 <> ch:449
R42787:42798 compcert.common.AST <> memory_chunk ind
binder 42782:42784 <> ch':450
R42806:42810 VST.msl.shares <> share def
binder 42802:42803 <> sh:451
R43083:43099 VST.msl.seplog <> ::logic:x_'&&'_x not
R42827:42830 VST.msl.seplog <> ::logic:'!!'_x not
R43082:43082 VST.msl.seplog <> ::logic:'!!'_x not
R42888:42908 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R42881:42883 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42856:42859 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R42832:42843 VST.veric.SeparationLogic <> numeric_type def
R42846:42851 compcert.cfrontend.Clight <> typeof def
R42853:42854 VST.floyd.SeparationLogicFacts <> e1:445 var
R42860:42871 VST.veric.SeparationLogic <> numeric_type def
R42873:42874 VST.floyd.SeparationLogicFacts <> t2:448 var
R42884:42887 Coq.Init.Datatypes <> true constr
R42946:42966 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R42932:42934 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42909:42919 compcert.cfrontend.Ctypes <> access_mode def
R42922:42927 compcert.cfrontend.Clight <> typeof def
R42929:42930 VST.floyd.SeparationLogicFacts <> e1:445 var
R42935:42942 compcert.cfrontend.Ctypes <> By_value constr
R42944:42945 VST.floyd.SeparationLogicFacts <> ch:449 var
R42996:43016 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R42981:42983 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42967:42977 compcert.cfrontend.Ctypes <> access_mode def
R42979:42980 VST.floyd.SeparationLogicFacts <> t2:448 var
R42984:42991 compcert.cfrontend.Ctypes <> By_value constr
R42993:42995 VST.floyd.SeparationLogicFacts <> ch':450 var
R43044:43064 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R43017:43036 VST.veric.SeparationLogic <> decode_encode_val_ok def
R43041:43043 VST.floyd.SeparationLogicFacts <> ch':450 var
R43038:43039 VST.floyd.SeparationLogicFacts <> ch:449 var
R43065:43078 VST.veric.shares <> writable_share def
R43080:43081 VST.floyd.SeparationLogicFacts <> sh:451 var
R43100:43104 VST.msl.seplog <> ::logic:'|>'_x not
R43581:43581 VST.msl.seplog <> ::logic:'|>'_x not
R43168:43186 VST.msl.seplog <> ::logic:x_'&&'_x not
R43580:43580 VST.msl.seplog <> ::logic:x_'&&'_x not
R43105:43105 VST.msl.seplog <> ::logic:x_'&&'_x not
R43124:43130 VST.msl.seplog <> ::logic:x_'&&'_x not
R43167:43167 VST.msl.seplog <> ::logic:x_'&&'_x not
R43106:43114 VST.veric.SeparationLogic <> tc_lvalue def
R43122:43123 VST.floyd.SeparationLogicFacts <> e1:445 var
R43116:43120 VST.floyd.SeparationLogicFacts <> Delta:444 var
R43131:43137 VST.veric.SeparationLogic <> tc_expr def
R43146:43150 compcert.cfrontend.Clight <> Ecast constr
R43156:43161 compcert.cfrontend.Clight <> typeof def
R43163:43164 VST.floyd.SeparationLogicFacts <> e1:445 var
R43152:43153 VST.floyd.SeparationLogicFacts <> e2:446 var
R43139:43143 VST.floyd.SeparationLogicFacts <> Delta:444 var
R43187:43187 VST.msl.seplog <> ::logic:x_'*'_x not
R43290:43308 VST.msl.seplog <> ::logic:x_'*'_x not
R43579:43579 VST.msl.seplog <> ::logic:x_'*'_x not
R43230:43256 VST.msl.seplog <> ::logic:x_'&&'_x not
R43188:43189 VST.veric.lift LiftNotation :::'`('_x_')' not
R43212:43229 VST.veric.lift LiftNotation :::'`('_x_')' not
R43190:43196 VST.veric.SeparationLogic <> mapsto_ def
R43202:43207 compcert.cfrontend.Clight <> typeof def
R43209:43210 VST.floyd.SeparationLogicFacts <> e1:445 var
R43198:43199 VST.floyd.SeparationLogicFacts <> sh:451 var
R43215:43225 VST.veric.expr <> eval_lvalue def
R43227:43228 VST.floyd.SeparationLogicFacts <> e1:445 var
R43257:43258 VST.veric.lift LiftNotation :::'`('_x_')' not
R43272:43289 VST.veric.lift LiftNotation :::'`('_x_')' not
R43259:43265 VST.veric.SeparationLogic <> mapsto_ def
R43270:43271 VST.floyd.SeparationLogicFacts <> t2:448 var
R43267:43268 VST.floyd.SeparationLogicFacts <> sh:451 var
R43275:43285 VST.veric.expr <> eval_lvalue def
R43287:43288 VST.floyd.SeparationLogicFacts <> e1:445 var
R43309:43312 VST.msl.seplog <> ::logic:'ALL'_x_'..'_x_','_x not
R43320:43338 VST.msl.seplog <> ::logic:'ALL'_x_'..'_x_','_x not
R43317:43319 compcert.common.Values <> val ind
binder 43313:43314 <> v':452
R43377:43400 VST.msl.seplog <> ::logic:x_'-*'_x not
R43339:43340 VST.veric.lift LiftNotation :::'`('_x_')' not
R43353:43376 VST.veric.lift LiftNotation :::'`('_x_')' not
R43341:43346 VST.veric.SeparationLogic <> mapsto def
R43351:43352 VST.floyd.SeparationLogicFacts <> t2:448 var
R43348:43349 VST.floyd.SeparationLogicFacts <> sh:451 var
R43373:43373 VST.veric.lift LiftNotation :::'`'_x not
R43374:43375 VST.floyd.SeparationLogicFacts <> v':452 var
R43356:43366 VST.veric.expr <> eval_lvalue def
R43368:43369 VST.floyd.SeparationLogicFacts <> e1:445 var
R43401:43403 VST.msl.seplog <> imp meth
R43577:43577 VST.floyd.SeparationLogicFacts <> P:447 var
R43406:43410 VST.veric.SeparationLogic <> local def
R43414:43415 VST.veric.lift LiftNotation :::'`'_x not
R43433:43549 VST.veric.lift LiftNotation :::'`'_x not
R43416:43432 compcert.common.Memdata <> decode_encode_val def
R43546:43546 VST.veric.lift LiftNotation :::'`'_x not
R43547:43548 VST.floyd.SeparationLogicFacts <> v':452 var
R43539:43539 VST.veric.lift LiftNotation :::'`'_x not
R43540:43542 VST.floyd.SeparationLogicFacts <> ch':450 var
R43533:43533 VST.veric.lift LiftNotation :::'`'_x not
R43534:43535 VST.floyd.SeparationLogicFacts <> ch:449 var
R43462:43464 VST.veric.lift LiftNotation :::'`'_x not
R43474:43529 VST.veric.lift LiftNotation :::'`'_x not
R43465:43473 VST.veric.val_lemmas <> force_val def
R43477:43479 VST.veric.lift LiftNotation :::'`('_x_')' not
R43512:43528 VST.veric.lift LiftNotation :::'`('_x_')' not
R43480:43487 VST.veric.Clight_Cop2 <> sem_cast def
R43502:43507 compcert.cfrontend.Clight <> typeof def
R43509:43510 VST.floyd.SeparationLogicFacts <> e1:445 var
R43490:43495 compcert.cfrontend.Clight <> typeof def
R43497:43498 VST.floyd.SeparationLogicFacts <> e2:446 var
R43516:43524 VST.veric.expr <> eval_expr def
R43526:43527 VST.floyd.SeparationLogicFacts <> e2:446 var
R42748:42752 VST.floyd.SeparationLogicFacts <> Delta:444 var
R42742:42746 VST.floyd.SeparationLogicFacts <> Espec:443 var
R42739:42740 VST.floyd.SeparationLogicFacts <> CS:442 var
R43669:43684 VST.floyd.SeparationLogicFacts Sassign2StoreUnionHack semax_pre_simple thm
R43696:43732 VST.floyd.SeparationLogicFacts Sassign semax_store_store_union_hack_backward prfax
R43669:43684 VST.floyd.SeparationLogicFacts Sassign2StoreUnionHack semax_pre_simple thm
R43696:43732 VST.floyd.SeparationLogicFacts Sassign semax_store_store_union_hack_backward prfax
R43744:43753 VST.msl.seplog <> orp_right2 meth
R43744:43753 VST.msl.seplog <> orp_right2 meth
R43772:43793 VST.floyd.SeparationLogicFacts Sassign2StoreUnionHack <> mod
modtype 43809:43850 <> CLIGHT_SEPARATION_HOARE_LOGIC_CALL_FORWARD
R43879:43911 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 43869:43876 <> CLIGHT_SEPARATION_HOARE_LOGIC_CALL_FORWARD.CSHL_Def
ax 43939:43956 CLIGHT_SEPARATION_HOARE_LOGIC_CALL_FORWARD semax_call_forward
R43971:43979 VST.veric.mpred <> compspecs class
binder 43967:43968 <> CS:453
R43990:43999 VST.veric.juicy_extspec <> OracleKind class
binder 43983:43987 <> Espec:454
R44010:44018 VST.veric.seplog <> tycontext ind
binder 44003:44007 <> Delta:455
binder 44033:44033 <> A:456
binder 44035:44035 <> P:457
binder 44037:44037 <> Q:458
binder 44039:44041 <> NEP:459
binder 44043:44045 <> NEQ:460
binder 44047:44048 <> ts:461
binder 44050:44050 <> x:462
R44063:44066 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44067:44071 VST.veric.mpred <> mpred def
R44056:44062 VST.veric.mpred <> environ ind
binder 44053:44053 <> F:463
binder 44074:44076 <> ret:464
binder 44078:44083 <> argsig:465
binder 44085:44090 <> retsig:466
binder 44092:44093 <> cc:467
binder 44095:44095 <> a:468
binder 44097:44098 <> bl:469
R44208:44222 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44223:44223 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44259:44273 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44303:44308 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44310:44314 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CALL_FORWARD semax defax
R44613:44629 VST.veric.SeparationLogic <> normal_ret_assert def
R44644:44646 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R44654:44655 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R44651:44653 compcert.common.Values <> val ind
binder 44647:44649 <> old:470
R44677:44679 VST.msl.seplog <> ::logic:x_'*'_x not
R44656:44663 VST.veric.SeparationLogic <> substopt def
R44676:44676 VST.floyd.SeparationLogicFacts <> F:463 var
R44670:44670 VST.veric.lift LiftNotation :::'`'_x not
R44671:44673 VST.floyd.SeparationLogicFacts <> old:470 var
R44665:44667 VST.floyd.SeparationLogicFacts <> ret:464 var
R44680:44691 VST.veric.SeparationLogic <> maybe_retval def
R44709:44711 VST.floyd.SeparationLogicFacts <> ret:464 var
R44702:44707 VST.floyd.SeparationLogicFacts <> retsig:466 var
R44694:44694 VST.floyd.SeparationLogicFacts <> Q:458 var
R44699:44699 VST.floyd.SeparationLogicFacts <> x:462 var
R44696:44697 VST.floyd.SeparationLogicFacts <> ts:461 var
R44587:44591 compcert.cfrontend.Clight <> Scall constr
R44599:44600 VST.floyd.SeparationLogicFacts <> bl:469 var
R44597:44597 VST.floyd.SeparationLogicFacts <> a:468 var
R44593:44595 VST.floyd.SeparationLogicFacts <> ret:464 var
R44342:44349 VST.msl.seplog <> ::logic:x_'&&'_x not
R44400:44416 VST.msl.seplog <> ::logic:x_'&&'_x not
R44574:44574 VST.msl.seplog <> ::logic:x_'&&'_x not
R44350:44350 VST.msl.seplog <> ::logic:x_'&&'_x not
R44366:44371 VST.msl.seplog <> ::logic:x_'&&'_x not
R44399:44399 VST.msl.seplog <> ::logic:x_'&&'_x not
R44351:44357 VST.veric.SeparationLogic <> tc_expr def
R44365:44365 VST.floyd.SeparationLogicFacts <> a:468 var
R44359:44363 VST.floyd.SeparationLogicFacts <> Delta:455 var
R44372:44382 VST.veric.SeparationLogic <> tc_exprlist def
R44397:44398 VST.floyd.SeparationLogicFacts <> bl:469 var
R44390:44395 VST.floyd.SeparationLogicFacts <> argsig:465 var
R44384:44388 VST.floyd.SeparationLogicFacts <> Delta:455 var
R44489:44503 VST.msl.seplog <> ::logic:x_'&&'_x not
R44573:44573 VST.msl.seplog <> ::logic:x_'&&'_x not
R44417:44418 VST.veric.lift LiftNotation :::'`('_x_')' not
R44474:44488 VST.veric.lift LiftNotation :::'`('_x_')' not
R44419:44426 VST.veric.SeparationLogic <> func_ptr def
R44429:44438 VST.veric.mpred <> mk_funspec constr
R44470:44472 VST.floyd.SeparationLogicFacts <> NEQ:460 var
R44466:44468 VST.floyd.SeparationLogicFacts <> NEP:459 var
R44464:44464 VST.floyd.SeparationLogicFacts <> Q:458 var
R44462:44462 VST.floyd.SeparationLogicFacts <> P:457 var
R44460:44460 VST.floyd.SeparationLogicFacts <> A:456 var
R44457:44458 VST.floyd.SeparationLogicFacts <> cc:467 var
R44441:44441 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44448:44448 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44455:44455 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44442:44447 VST.floyd.SeparationLogicFacts <> argsig:465 var
R44449:44454 VST.floyd.SeparationLogicFacts <> retsig:466 var
R44477:44485 VST.veric.expr <> eval_expr def
R44487:44487 VST.floyd.SeparationLogicFacts <> a:468 var
R44504:44507 VST.msl.seplog <> ::logic:'|>'_x not
R44572:44572 VST.msl.seplog <> ::logic:'|>'_x not
R44509:44512 VST.msl.seplog <> ::logic:x_'*'_x not
R44571:44571 VST.msl.seplog <> ::logic:x_'*'_x not
R44508:44508 VST.floyd.SeparationLogicFacts <> F:463 var
binder 44517:44519 <> rho:471
R44524:44524 VST.floyd.SeparationLogicFacts <> P:457 var
R44531:44531 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44541:44542 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44570:44570 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44532:44536 VST.veric.mpred <> ge_of def
R44538:44540 VST.floyd.SeparationLogicFacts <> rho:471 var
R44543:44555 VST.veric.expr <> eval_exprlist def
R44567:44569 VST.floyd.SeparationLogicFacts <> rho:471 var
R44564:44565 VST.floyd.SeparationLogicFacts <> bl:469 var
R44557:44562 VST.floyd.SeparationLogicFacts <> argsig:465 var
R44529:44529 VST.floyd.SeparationLogicFacts <> x:462 var
R44526:44527 VST.floyd.SeparationLogicFacts <> ts:461 var
R44325:44329 VST.floyd.SeparationLogicFacts <> Delta:455 var
R44319:44323 VST.floyd.SeparationLogicFacts <> Espec:454 var
R44316:44317 VST.floyd.SeparationLogicFacts <> CS:453 var
R44274:44285 VST.veric.SeparationLogic <> tc_fn_return def
R44297:44302 VST.floyd.SeparationLogicFacts <> retsig:466 var
R44293:44295 VST.floyd.SeparationLogicFacts <> ret:464 var
R44287:44291 VST.floyd.SeparationLogicFacts <> Delta:455 var
R44245:44248 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44252:44254 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44249:44251 VST.floyd.SeparationLogicFacts <> ret:464 var
R44255:44258 Coq.Init.Datatypes <> None constr
R44230:44232 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44224:44229 VST.floyd.SeparationLogicFacts <> retsig:466 var
R44233:44244 compcert.cfrontend.Ctypes <> Tvoid constr
R44139:44152 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44112:44127 compcert.cfrontend.Cop <> classify_fun def
R44130:44135 compcert.cfrontend.Clight <> typeof def
R44137:44137 VST.floyd.SeparationLogicFacts <> a:468 var
R44153:44166 compcert.cfrontend.Cop <> fun_case_f constr
R44206:44207 VST.floyd.SeparationLogicFacts <> cc:467 var
R44199:44204 VST.floyd.SeparationLogicFacts <> retsig:466 var
R44169:44189 VST.veric.mpred <> typelist_of_type_list def
R44191:44196 VST.floyd.SeparationLogicFacts <> argsig:465 var
R44721:44762 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CALL_FORWARD <> modtype
modtype 44778:44820 <> CLIGHT_SEPARATION_HOARE_LOGIC_CALL_BACKWARD
R44849:44881 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 44839:44846 <> CLIGHT_SEPARATION_HOARE_LOGIC_CALL_BACKWARD.CSHL_Def
ax 44909:44927 CLIGHT_SEPARATION_HOARE_LOGIC_CALL_BACKWARD semax_call_backward
R44942:44950 VST.veric.mpred <> compspecs class
binder 44938:44939 <> CS:473
R44961:44970 VST.veric.juicy_extspec <> OracleKind class
binder 44954:44958 <> Espec:474
R44981:44989 VST.veric.seplog <> tycontext ind
binder 44974:44978 <> Delta:475
binder 45004:45006 <> ret:476
binder 45008:45008 <> a:477
binder 45010:45011 <> bl:478
binder 45013:45013 <> R:479
R45019:45023 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CALL_BACKWARD semax defax
R45716:45732 VST.veric.SeparationLogic <> normal_ret_assert def
R45734:45734 VST.floyd.SeparationLogicFacts <> R:479 var
R45690:45694 compcert.cfrontend.Clight <> Scall constr
R45702:45703 VST.floyd.SeparationLogicFacts <> bl:478 var
R45700:45700 VST.floyd.SeparationLogicFacts <> a:477 var
R45696:45698 VST.floyd.SeparationLogicFacts <> ret:476 var
R45050:45052 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R45062:45063 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 45053:45058 <> argsig:480
R45064:45066 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R45076:45077 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 45067:45072 <> retsig:481
R45078:45080 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R45086:45097 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 45081:45082 <> cc:482
R45098:45100 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R45105:45106 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 45101:45101 <> A:483
R45107:45109 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R45114:45115 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 45110:45110 <> P:484
R45116:45118 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R45123:45124 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 45119:45119 <> Q:485
R45125:45127 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R45134:45135 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 45128:45130 <> NEP:486
R45136:45138 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R45145:45146 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 45139:45141 <> NEQ:487
R45147:45149 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R45155:45156 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 45150:45151 <> ts:488
R45157:45159 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R45164:45174 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 45160:45160 <> x:489
R45538:45551 VST.msl.seplog <> ::logic:x_'&&'_x not
R45452:45465 VST.msl.seplog <> ::logic:x_'&&'_x not
R45378:45399 VST.msl.seplog <> ::logic:x_'&&'_x not
R45450:45451 VST.msl.seplog <> ::logic:x_'&&'_x not
R45175:45178 VST.msl.seplog <> ::logic:'!!'_x not
R45377:45377 VST.msl.seplog <> ::logic:'!!'_x not
R45277:45293 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R45206:45221 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45179:45194 compcert.cfrontend.Cop <> classify_fun def
R45197:45202 compcert.cfrontend.Clight <> typeof def
R45204:45204 VST.floyd.SeparationLogicFacts <> a:477 var
R45222:45235 compcert.cfrontend.Cop <> fun_case_f constr
R45275:45276 VST.floyd.SeparationLogicFacts <> cc:482 var
R45268:45273 VST.floyd.SeparationLogicFacts <> retsig:481 var
R45238:45258 VST.veric.mpred <> typelist_of_type_list def
R45260:45265 VST.floyd.SeparationLogicFacts <> argsig:480 var
R45294:45294 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R45330:45347 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R45316:45319 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45323:45325 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45320:45322 VST.floyd.SeparationLogicFacts <> ret:476 var
R45326:45329 Coq.Init.Datatypes <> None constr
R45301:45303 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45295:45300 VST.floyd.SeparationLogicFacts <> retsig:481 var
R45304:45315 compcert.cfrontend.Ctypes <> Tvoid constr
R45348:45359 VST.veric.SeparationLogic <> tc_fn_return def
R45371:45376 VST.floyd.SeparationLogicFacts <> retsig:481 var
R45367:45369 VST.floyd.SeparationLogicFacts <> ret:476 var
R45361:45365 VST.floyd.SeparationLogicFacts <> Delta:475 var
R45400:45400 VST.msl.seplog <> ::logic:x_'&&'_x not
R45416:45421 VST.msl.seplog <> ::logic:x_'&&'_x not
R45449:45449 VST.msl.seplog <> ::logic:x_'&&'_x not
R45401:45407 VST.veric.SeparationLogic <> tc_expr def
R45415:45415 VST.floyd.SeparationLogicFacts <> a:477 var
R45409:45413 VST.floyd.SeparationLogicFacts <> Delta:475 var
R45422:45432 VST.veric.SeparationLogic <> tc_exprlist def
R45447:45448 VST.floyd.SeparationLogicFacts <> bl:478 var
R45440:45445 VST.floyd.SeparationLogicFacts <> argsig:480 var
R45434:45438 VST.floyd.SeparationLogicFacts <> Delta:475 var
R45466:45467 VST.veric.lift LiftNotation :::'`('_x_')' not
R45523:45537 VST.veric.lift LiftNotation :::'`('_x_')' not
R45468:45475 VST.veric.SeparationLogic <> func_ptr def
R45478:45487 VST.veric.mpred <> mk_funspec constr
R45519:45521 VST.floyd.SeparationLogicFacts <> NEQ:487 var
R45515:45517 VST.floyd.SeparationLogicFacts <> NEP:486 var
R45513:45513 VST.floyd.SeparationLogicFacts <> Q:485 var
R45511:45511 VST.floyd.SeparationLogicFacts <> P:484 var
R45509:45509 VST.floyd.SeparationLogicFacts <> A:483 var
R45506:45507 VST.floyd.SeparationLogicFacts <> cc:482 var
R45490:45490 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45497:45497 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45504:45504 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45491:45496 VST.floyd.SeparationLogicFacts <> argsig:480 var
R45498:45503 VST.floyd.SeparationLogicFacts <> retsig:481 var
R45526:45534 VST.veric.expr <> eval_expr def
R45536:45536 VST.floyd.SeparationLogicFacts <> a:477 var
R45552:45554 VST.msl.seplog <> ::logic:'|>'_x not
R45677:45677 VST.msl.seplog <> ::logic:'|>'_x not
R45555:45555 VST.msl.seplog <> ::logic:x_'*'_x not
R45616:45619 VST.msl.seplog <> ::logic:x_'*'_x not
binder 45560:45562 <> rho:490
R45568:45568 VST.floyd.SeparationLogicFacts <> P:484 var
R45575:45575 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45585:45586 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45614:45614 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45576:45580 VST.veric.mpred <> ge_of def
R45582:45584 VST.floyd.SeparationLogicFacts <> rho:490 var
R45587:45599 VST.veric.expr <> eval_exprlist def
R45611:45613 VST.floyd.SeparationLogicFacts <> rho:490 var
R45608:45609 VST.floyd.SeparationLogicFacts <> bl:478 var
R45601:45606 VST.floyd.SeparationLogicFacts <> argsig:480 var
R45573:45573 VST.floyd.SeparationLogicFacts <> x:489 var
R45570:45571 VST.floyd.SeparationLogicFacts <> ts:488 var
R45620:45626 VST.floyd.SeparationLogicFacts <> oboxopt def
R45671:45674 VST.msl.seplog <> ::logic:x_'-*'_x not
R45639:45650 VST.veric.SeparationLogic <> maybe_retval def
R45668:45670 VST.floyd.SeparationLogicFacts <> ret:476 var
R45661:45666 VST.floyd.SeparationLogicFacts <> retsig:481 var
R45653:45653 VST.floyd.SeparationLogicFacts <> Q:485 var
R45658:45658 VST.floyd.SeparationLogicFacts <> x:489 var
R45655:45656 VST.floyd.SeparationLogicFacts <> ts:488 var
R45675:45675 VST.floyd.SeparationLogicFacts <> R:479 var
R45634:45636 VST.floyd.SeparationLogicFacts <> ret:476 var
R45628:45632 VST.floyd.SeparationLogicFacts <> Delta:475 var
R45034:45038 VST.floyd.SeparationLogicFacts <> Delta:475 var
R45028:45032 VST.floyd.SeparationLogicFacts <> Espec:474 var
R45025:45026 VST.floyd.SeparationLogicFacts <> CS:473 var
R45743:45785 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CALL_BACKWARD <> modtype
R45817:45849 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R45868:45908 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R45934:45936 VST.floyd.SeparationLogicFacts Def <> modtype
R45953:45992 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION <> mod
R46018:46020 VST.floyd.SeparationLogicFacts Def <> modtype
R46038:46079 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CALL_FORWARD <> mod
R46105:46107 VST.floyd.SeparationLogicFacts Def <> modtype
R46118:46160 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CALL_BACKWARD <> mod
R46186:46188 VST.floyd.SeparationLogicFacts Def <> modtype
mod 45796:45802 <> CallF2B
R46211:46213 VST.floyd.SeparationLogicFacts Def <> modtype
mod 46199:46206 <> CallF2B.CSHL_Def
R46238:46251 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R46254:46256 VST.floyd.SeparationLogicFacts Def <> modtype
R46260:46265 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 46223:46233 <> CallF2B.ConseqFacts
R46289:46300 VST.floyd.SeparationLogicFacts GenExtrFacts <> modtype
R46303:46305 VST.floyd.SeparationLogicFacts Def <> modtype
R46309:46314 VST.floyd.SeparationLogicFacts Conseq <> modtype
R46318:46321 VST.floyd.SeparationLogicFacts Extr <> modtype
mod 46276:46284 <> CallF2B.ExtrFacts
prf 46428:46446 CallF2B semax_call_backward
R46461:46469 VST.veric.mpred <> compspecs class
binder 46457:46458 <> CS:492
R46480:46489 VST.veric.juicy_extspec <> OracleKind class
binder 46473:46477 <> Espec:493
R46500:46508 VST.veric.seplog <> tycontext ind
binder 46493:46497 <> Delta:494
binder 46523:46525 <> ret:495
binder 46527:46527 <> a:496
binder 46529:46530 <> bl:497
binder 46532:46532 <> R:498
R46538:46542 VST.floyd.SeparationLogicFacts Def semax defax
R47233:47249 VST.veric.SeparationLogic <> normal_ret_assert def
R47251:47251 VST.floyd.SeparationLogicFacts <> R:498 var
R47207:47211 compcert.cfrontend.Clight <> Scall constr
R47219:47220 VST.floyd.SeparationLogicFacts <> bl:497 var
R47217:47217 VST.floyd.SeparationLogicFacts <> a:496 var
R47213:47215 VST.floyd.SeparationLogicFacts <> ret:495 var
R46569:46571 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R46581:46582 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 46572:46577 <> argsig:499
R46583:46585 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R46595:46596 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 46586:46591 <> retsig:500
R46597:46599 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R46605:46616 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 46600:46601 <> cc:501
R46617:46619 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R46624:46625 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 46620:46620 <> A:502
R46626:46628 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R46633:46634 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 46629:46629 <> P:503
R46635:46637 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R46642:46643 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 46638:46638 <> Q:504
R46644:46646 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R46653:46654 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 46647:46649 <> NEP:505
R46655:46657 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R46664:46665 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 46658:46660 <> NEQ:506
R46666:46668 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R46674:46675 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 46669:46670 <> ts:507
R46676:46678 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R46683:46693 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
binder 46679:46679 <> x:508
R47057:47070 VST.msl.seplog <> ::logic:x_'&&'_x not
R46971:46984 VST.msl.seplog <> ::logic:x_'&&'_x not
R46897:46918 VST.msl.seplog <> ::logic:x_'&&'_x not
R46969:46970 VST.msl.seplog <> ::logic:x_'&&'_x not
R46694:46697 VST.msl.seplog <> ::logic:'!!'_x not
R46896:46896 VST.msl.seplog <> ::logic:'!!'_x not
R46796:46812 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R46725:46740 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46698:46713 compcert.cfrontend.Cop <> classify_fun def
R46716:46721 compcert.cfrontend.Clight <> typeof def
R46723:46723 VST.floyd.SeparationLogicFacts <> a:496 var
R46741:46754 compcert.cfrontend.Cop <> fun_case_f constr
R46794:46795 VST.floyd.SeparationLogicFacts <> cc:501 var
R46787:46792 VST.floyd.SeparationLogicFacts <> retsig:500 var
R46757:46777 VST.veric.mpred <> typelist_of_type_list def
R46779:46784 VST.floyd.SeparationLogicFacts <> argsig:499 var
R46813:46813 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R46849:46866 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R46835:46838 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46842:46844 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46839:46841 VST.floyd.SeparationLogicFacts <> ret:495 var
R46845:46848 Coq.Init.Datatypes <> None constr
R46820:46822 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46814:46819 VST.floyd.SeparationLogicFacts <> retsig:500 var
R46823:46834 compcert.cfrontend.Ctypes <> Tvoid constr
R46867:46878 VST.veric.SeparationLogic <> tc_fn_return def
R46890:46895 VST.floyd.SeparationLogicFacts <> retsig:500 var
R46886:46888 VST.floyd.SeparationLogicFacts <> ret:495 var
R46880:46884 VST.floyd.SeparationLogicFacts <> Delta:494 var
R46919:46919 VST.msl.seplog <> ::logic:x_'&&'_x not
R46935:46940 VST.msl.seplog <> ::logic:x_'&&'_x not
R46968:46968 VST.msl.seplog <> ::logic:x_'&&'_x not
R46920:46926 VST.veric.SeparationLogic <> tc_expr def
R46934:46934 VST.floyd.SeparationLogicFacts <> a:496 var
R46928:46932 VST.floyd.SeparationLogicFacts <> Delta:494 var
R46941:46951 VST.veric.SeparationLogic <> tc_exprlist def
R46966:46967 VST.floyd.SeparationLogicFacts <> bl:497 var
R46959:46964 VST.floyd.SeparationLogicFacts <> argsig:499 var
R46953:46957 VST.floyd.SeparationLogicFacts <> Delta:494 var
R46985:46986 VST.veric.lift LiftNotation :::'`('_x_')' not
R47042:47056 VST.veric.lift LiftNotation :::'`('_x_')' not
R46987:46994 VST.veric.SeparationLogic <> func_ptr def
R46997:47006 VST.veric.mpred <> mk_funspec constr
R47038:47040 VST.floyd.SeparationLogicFacts <> NEQ:506 var
R47034:47036 VST.floyd.SeparationLogicFacts <> NEP:505 var
R47032:47032 VST.floyd.SeparationLogicFacts <> Q:504 var
R47030:47030 VST.floyd.SeparationLogicFacts <> P:503 var
R47028:47028 VST.floyd.SeparationLogicFacts <> A:502 var
R47025:47026 VST.floyd.SeparationLogicFacts <> cc:501 var
R47009:47009 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47016:47016 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47023:47023 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47010:47015 VST.floyd.SeparationLogicFacts <> argsig:499 var
R47017:47022 VST.floyd.SeparationLogicFacts <> retsig:500 var
R47045:47053 VST.veric.expr <> eval_expr def
R47055:47055 VST.floyd.SeparationLogicFacts <> a:496 var
R47071:47073 VST.msl.seplog <> ::logic:'|>'_x not
R47194:47194 VST.msl.seplog <> ::logic:'|>'_x not
R47074:47074 VST.msl.seplog <> ::logic:x_'*'_x not
R47133:47136 VST.msl.seplog <> ::logic:x_'*'_x not
binder 47079:47081 <> rho:509
R47086:47086 VST.floyd.SeparationLogicFacts <> P:503 var
R47093:47093 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47103:47104 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47132:47132 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47094:47098 VST.veric.mpred <> ge_of def
R47100:47102 VST.floyd.SeparationLogicFacts <> rho:509 var
R47105:47117 VST.veric.expr <> eval_exprlist def
R47129:47131 VST.floyd.SeparationLogicFacts <> rho:509 var
R47126:47127 VST.floyd.SeparationLogicFacts <> bl:497 var
R47119:47124 VST.floyd.SeparationLogicFacts <> argsig:499 var
R47091:47091 VST.floyd.SeparationLogicFacts <> x:508 var
R47088:47089 VST.floyd.SeparationLogicFacts <> ts:507 var
R47137:47143 VST.floyd.SeparationLogicFacts <> oboxopt def
R47188:47191 VST.msl.seplog <> ::logic:x_'-*'_x not
R47156:47167 VST.veric.SeparationLogic <> maybe_retval def
R47185:47187 VST.floyd.SeparationLogicFacts <> ret:495 var
R47178:47183 VST.floyd.SeparationLogicFacts <> retsig:500 var
R47170:47170 VST.floyd.SeparationLogicFacts <> Q:504 var
R47175:47175 VST.floyd.SeparationLogicFacts <> x:508 var
R47172:47173 VST.floyd.SeparationLogicFacts <> ts:507 var
R47192:47192 VST.floyd.SeparationLogicFacts <> R:498 var
R47151:47153 VST.floyd.SeparationLogicFacts <> ret:495 var
R47145:47149 VST.floyd.SeparationLogicFacts <> Delta:494 var
R46553:46557 VST.floyd.SeparationLogicFacts <> Delta:494 var
R46547:46551 VST.floyd.SeparationLogicFacts <> Espec:493 var
R46544:46545 VST.floyd.SeparationLogicFacts <> CS:492 var
R47280:47299 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47280:47299 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47324:47343 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47324:47343 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47368:47387 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47368:47387 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47408:47427 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47408:47427 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47447:47466 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47447:47466 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47486:47505 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47486:47505 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47525:47544 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47525:47544 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47566:47585 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47566:47585 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47607:47626 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47607:47626 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47647:47666 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47647:47666 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R47689:47698 VST.msl.log_normalize <> andp_assoc thm
R47689:47698 VST.msl.log_normalize <> andp_assoc thm
R47689:47698 VST.msl.log_normalize <> andp_assoc thm
R47689:47698 VST.msl.log_normalize <> andp_assoc thm
R47689:47698 VST.msl.log_normalize <> andp_assoc thm
R47689:47698 VST.msl.log_normalize <> andp_assoc thm
R47709:47726 VST.floyd.SeparationLogicFacts CallF2B semax_extract_prop thm
R47709:47726 VST.floyd.SeparationLogicFacts CallF2B semax_extract_prop thm
R47756:47770 VST.floyd.SeparationLogicFacts CallF2B semax_pre_post' thm
R47785:47802 VST.floyd.SeparationLogicFacts CallF semax_call_forward prfax
R47756:47770 VST.floyd.SeparationLogicFacts CallF2B semax_pre_post' thm
R47785:47802 VST.floyd.SeparationLogicFacts CallF semax_call_forward prfax
R47822:47831 VST.msl.seplog <> andp_left2 meth
R47822:47831 VST.msl.seplog <> andp_left2 meth
R47842:47851 VST.msl.log_normalize <> andp_assoc thm
R47842:47851 VST.msl.log_normalize <> andp_assoc thm
R47842:47851 VST.msl.log_normalize <> andp_assoc thm
R47864:47875 VST.msl.log_normalize <> andp_derives thm
R47885:47896 VST.msl.seplog <> derives_refl meth
R47864:47875 VST.msl.log_normalize <> andp_derives thm
R47885:47896 VST.msl.seplog <> derives_refl meth
R47912:47923 VST.msl.log_normalize <> andp_derives thm
R47933:47944 VST.msl.seplog <> derives_refl meth
R47912:47923 VST.msl.log_normalize <> andp_derives thm
R47933:47944 VST.msl.seplog <> derives_refl meth
R47960:47971 VST.msl.log_normalize <> andp_derives thm
R47981:47992 VST.msl.seplog <> derives_refl meth
R47960:47971 VST.msl.log_normalize <> andp_derives thm
R47981:47992 VST.msl.seplog <> derives_refl meth
R48008:48020 VST.msl.log_normalize <> later_derives thm
R48008:48020 VST.msl.log_normalize <> later_derives thm
R48035:48045 VST.msl.seplog <> sepcon_comm meth
R48035:48045 VST.msl.seplog <> sepcon_comm meth
R48035:48045 VST.msl.seplog <> sepcon_comm meth
R48058:48069 VST.msl.seplog <> derives_refl meth
R48058:48069 VST.msl.seplog <> derives_refl meth
R48083:48091 VST.veric.tycontext <> RA_normal proj
R48094:48110 VST.veric.SeparationLogic <> normal_ret_assert def
R48128:48138 VST.msl.log_normalize <> exp_sepcon1 thm
R48128:48138 VST.msl.log_normalize <> exp_sepcon1 thm
R48128:48138 VST.msl.log_normalize <> exp_sepcon1 thm
R48194:48205 VST.msl.seplog <> corable_prop meth
R48156:48175 VST.msl.seplog <> corable_andp_sepcon1 meth
R48156:48175 VST.msl.seplog <> corable_andp_sepcon1 meth
R48194:48205 VST.msl.seplog <> corable_prop meth
R48156:48175 VST.msl.seplog <> corable_andp_sepcon1 meth
R48221:48239 VST.msl.seplog <> wand_sepcon_adjoint meth
R48221:48239 VST.msl.seplog <> wand_sepcon_adjoint meth
R48221:48239 VST.msl.seplog <> wand_sepcon_adjoint meth
R48254:48262 VST.msl.log_normalize <> exp_andp2 thm
R48271:48278 VST.msl.seplog <> exp_left meth
R48254:48262 VST.msl.log_normalize <> exp_andp2 thm
R48254:48262 VST.msl.log_normalize <> exp_andp2 thm
R48271:48278 VST.msl.seplog <> exp_left meth
R48305:48320 VST.floyd.SeparationLogicFacts <> substopt_oboxopt thm
R48305:48320 VST.floyd.SeparationLogicFacts <> substopt_oboxopt thm
R48305:48320 VST.floyd.SeparationLogicFacts <> substopt_oboxopt thm
R48333:48341 VST.floyd.SeparationLogicFacts <> oboxopt_T thm
R48333:48341 VST.floyd.SeparationLogicFacts <> oboxopt_T thm
R48389:48389 compcert.lib.Maps <> :::x_'!'_x not
R48406:48409 compcert.lib.Maps <> :::x_'!'_x not
R48390:48399 VST.veric.seplog <> temp_types def
R48389:48389 compcert.lib.Maps <> :::x_'!'_x not
R48406:48409 compcert.lib.Maps <> :::x_'!'_x not
R48390:48399 VST.veric.seplog <> temp_types def
R48475:48481 VST.floyd.SeparationLogicFacts CallF2B <> mod
R48513:48545 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R48564:48604 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R48630:48632 VST.floyd.SeparationLogicFacts Def <> modtype
R48650:48692 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CALL_BACKWARD <> mod
R48718:48720 VST.floyd.SeparationLogicFacts Def <> modtype
R48731:48772 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CALL_FORWARD <> mod
R48798:48800 VST.floyd.SeparationLogicFacts Def <> modtype
mod 48492:48498 <> CallB2F
R48823:48825 VST.floyd.SeparationLogicFacts Def <> modtype
mod 48811:48818 <> CallB2F.CSHL_Def
R48850:48863 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R48866:48868 VST.floyd.SeparationLogicFacts Def <> modtype
R48872:48877 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 48835:48845 <> CallB2F.ConseqFacts
prf 50838:50855 CallB2F semax_call_forward
R50870:50878 VST.veric.mpred <> compspecs class
binder 50866:50867 <> CS:510
R50889:50898 VST.veric.juicy_extspec <> OracleKind class
binder 50882:50886 <> Espec:511
R50909:50917 VST.veric.seplog <> tycontext ind
binder 50902:50906 <> Delta:512
binder 50932:50932 <> A:513
binder 50934:50934 <> P:514
binder 50936:50936 <> Q:515
binder 50938:50940 <> NEP:516
binder 50942:50944 <> NEQ:517
binder 50946:50947 <> ts:518
binder 50949:50949 <> x:519
R50962:50965 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50966:50970 VST.veric.mpred <> mpred def
R50955:50961 VST.veric.mpred <> environ ind
binder 50952:50952 <> F:520
binder 50973:50975 <> ret:521
binder 50977:50982 <> argsig:522
binder 50984:50989 <> retsig:523
binder 50991:50992 <> cc:524
binder 50994:50994 <> a:525
binder 50996:50997 <> bl:526
R51109:51123 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51124:51124 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51160:51174 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51204:51209 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51211:51215 VST.floyd.SeparationLogicFacts Def semax defax
R51512:51528 VST.veric.SeparationLogic <> normal_ret_assert def
R51543:51545 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R51553:51554 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R51550:51552 compcert.common.Values <> val ind
binder 51546:51548 <> old:527
R51576:51578 VST.msl.seplog <> ::logic:x_'*'_x not
R51555:51562 VST.veric.SeparationLogic <> substopt def
R51575:51575 VST.floyd.SeparationLogicFacts <> F:520 var
R51569:51569 VST.veric.lift LiftNotation :::'`'_x not
R51570:51572 VST.floyd.SeparationLogicFacts <> old:527 var
R51564:51566 VST.floyd.SeparationLogicFacts <> ret:521 var
R51579:51590 VST.veric.SeparationLogic <> maybe_retval def
R51608:51610 VST.floyd.SeparationLogicFacts <> ret:521 var
R51601:51606 VST.floyd.SeparationLogicFacts <> retsig:523 var
R51593:51593 VST.floyd.SeparationLogicFacts <> Q:515 var
R51598:51598 VST.floyd.SeparationLogicFacts <> x:519 var
R51595:51596 VST.floyd.SeparationLogicFacts <> ts:518 var
R51486:51490 compcert.cfrontend.Clight <> Scall constr
R51498:51499 VST.floyd.SeparationLogicFacts <> bl:526 var
R51496:51496 VST.floyd.SeparationLogicFacts <> a:525 var
R51492:51494 VST.floyd.SeparationLogicFacts <> ret:521 var
R51243:51250 VST.msl.seplog <> ::logic:x_'&&'_x not
R51301:51317 VST.msl.seplog <> ::logic:x_'&&'_x not
R51472:51472 VST.msl.seplog <> ::logic:x_'&&'_x not
R51251:51251 VST.msl.seplog <> ::logic:x_'&&'_x not
R51267:51272 VST.msl.seplog <> ::logic:x_'&&'_x not
R51300:51300 VST.msl.seplog <> ::logic:x_'&&'_x not
R51252:51258 VST.veric.SeparationLogic <> tc_expr def
R51266:51266 VST.floyd.SeparationLogicFacts <> a:525 var
R51260:51264 VST.floyd.SeparationLogicFacts <> Delta:512 var
R51273:51283 VST.veric.SeparationLogic <> tc_exprlist def
R51298:51299 VST.floyd.SeparationLogicFacts <> bl:526 var
R51291:51296 VST.floyd.SeparationLogicFacts <> argsig:522 var
R51285:51289 VST.floyd.SeparationLogicFacts <> Delta:512 var
R51390:51403 VST.msl.seplog <> ::logic:x_'&&'_x not
R51318:51319 VST.veric.lift LiftNotation :::'`('_x_')' not
R51375:51389 VST.veric.lift LiftNotation :::'`('_x_')' not
R51320:51327 VST.veric.SeparationLogic <> func_ptr def
R51330:51339 VST.veric.mpred <> mk_funspec constr
R51371:51373 VST.floyd.SeparationLogicFacts <> NEQ:517 var
R51367:51369 VST.floyd.SeparationLogicFacts <> NEP:516 var
R51365:51365 VST.floyd.SeparationLogicFacts <> Q:515 var
R51363:51363 VST.floyd.SeparationLogicFacts <> P:514 var
R51361:51361 VST.floyd.SeparationLogicFacts <> A:513 var
R51358:51359 VST.floyd.SeparationLogicFacts <> cc:524 var
R51342:51342 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51349:51349 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51356:51356 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51343:51348 VST.floyd.SeparationLogicFacts <> argsig:522 var
R51350:51355 VST.floyd.SeparationLogicFacts <> retsig:523 var
R51378:51386 VST.veric.expr <> eval_expr def
R51388:51388 VST.floyd.SeparationLogicFacts <> a:525 var
R51404:51406 VST.msl.seplog <> ::logic:'|>'_x not
R51471:51471 VST.msl.seplog <> ::logic:'|>'_x not
R51408:51411 VST.msl.seplog <> ::logic:x_'*'_x not
R51470:51470 VST.msl.seplog <> ::logic:x_'*'_x not
R51407:51407 VST.floyd.SeparationLogicFacts <> F:520 var
binder 51416:51418 <> rho:528
R51423:51423 VST.floyd.SeparationLogicFacts <> P:514 var
R51430:51430 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51440:51441 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51469:51469 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51431:51435 VST.veric.mpred <> ge_of def
R51437:51439 VST.floyd.SeparationLogicFacts <> rho:528 var
R51442:51454 VST.veric.expr <> eval_exprlist def
R51466:51468 VST.floyd.SeparationLogicFacts <> rho:528 var
R51463:51464 VST.floyd.SeparationLogicFacts <> bl:526 var
R51456:51461 VST.floyd.SeparationLogicFacts <> argsig:522 var
R51428:51428 VST.floyd.SeparationLogicFacts <> x:519 var
R51425:51426 VST.floyd.SeparationLogicFacts <> ts:518 var
R51226:51230 VST.floyd.SeparationLogicFacts <> Delta:512 var
R51220:51224 VST.floyd.SeparationLogicFacts <> Espec:511 var
R51217:51218 VST.floyd.SeparationLogicFacts <> CS:510 var
R51175:51186 VST.veric.SeparationLogic <> tc_fn_return def
R51198:51203 VST.floyd.SeparationLogicFacts <> retsig:523 var
R51194:51196 VST.floyd.SeparationLogicFacts <> ret:521 var
R51188:51192 VST.floyd.SeparationLogicFacts <> Delta:512 var
R51146:51149 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51153:51155 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51150:51152 VST.floyd.SeparationLogicFacts <> ret:521 var
R51156:51159 Coq.Init.Datatypes <> None constr
R51131:51133 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51125:51130 VST.floyd.SeparationLogicFacts <> retsig:523 var
R51134:51145 compcert.cfrontend.Ctypes <> Tvoid constr
R51038:51053 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51011:51026 compcert.cfrontend.Cop <> classify_fun def
R51029:51034 compcert.cfrontend.Clight <> typeof def
R51036:51036 VST.floyd.SeparationLogicFacts <> a:525 var
R51054:51067 compcert.cfrontend.Cop <> fun_case_f constr
R51107:51108 VST.floyd.SeparationLogicFacts <> cc:524 var
R51100:51105 VST.floyd.SeparationLogicFacts <> retsig:523 var
R51070:51090 VST.veric.mpred <> typelist_of_type_list def
R51092:51097 VST.floyd.SeparationLogicFacts <> argsig:522 var
R51641:51649 VST.floyd.SeparationLogicFacts CallB2F semax_pre thm
R51661:51679 VST.floyd.SeparationLogicFacts CallB semax_call_backward prfax
R51641:51649 VST.floyd.SeparationLogicFacts CallB2F semax_pre thm
R51661:51679 VST.floyd.SeparationLogicFacts CallB semax_call_backward prfax
R51692:51700 VST.msl.seplog <> exp_right meth
R51712:51720 VST.msl.seplog <> exp_right meth
R51732:51740 VST.msl.seplog <> exp_right meth
R51748:51756 VST.msl.seplog <> exp_right meth
R51763:51771 VST.msl.seplog <> exp_right meth
R51778:51786 VST.msl.seplog <> exp_right meth
R51793:51801 VST.msl.seplog <> exp_right meth
R51810:51818 VST.msl.seplog <> exp_right meth
R51827:51835 VST.msl.seplog <> exp_right meth
R51843:51851 VST.msl.seplog <> exp_right meth
R51692:51700 VST.msl.seplog <> exp_right meth
R51712:51720 VST.msl.seplog <> exp_right meth
R51732:51740 VST.msl.seplog <> exp_right meth
R51748:51756 VST.msl.seplog <> exp_right meth
R51763:51771 VST.msl.seplog <> exp_right meth
R51778:51786 VST.msl.seplog <> exp_right meth
R51793:51801 VST.msl.seplog <> exp_right meth
R51810:51818 VST.msl.seplog <> exp_right meth
R51827:51835 VST.msl.seplog <> exp_right meth
R51843:51851 VST.msl.seplog <> exp_right meth
R51868:51877 VST.msl.log_normalize <> andp_assoc thm
R51868:51877 VST.msl.log_normalize <> andp_assoc thm
R51868:51877 VST.msl.log_normalize <> andp_assoc thm
R51868:51877 VST.msl.log_normalize <> andp_assoc thm
R51868:51877 VST.msl.log_normalize <> andp_assoc thm
R51868:51877 VST.msl.log_normalize <> andp_assoc thm
R51868:51877 VST.msl.log_normalize <> andp_assoc thm
R51888:51897 VST.msl.seplog <> andp_right meth
R51907:51916 VST.msl.seplog <> prop_right meth
R51888:51897 VST.msl.seplog <> andp_right meth
R51907:51916 VST.msl.seplog <> prop_right meth
R51936:51945 VST.msl.seplog <> andp_right meth
R51936:51945 VST.msl.seplog <> andp_right meth
R51972:51981 VST.msl.seplog <> andp_right meth
R51972:51981 VST.msl.seplog <> andp_right meth
R52011:52019 VST.msl.log_normalize <> andp_comm thm
R52022:52037 VST.msl.seplog <> imp_andp_adjoint meth
R52011:52019 VST.msl.log_normalize <> andp_comm thm
R52011:52019 VST.msl.log_normalize <> andp_comm thm
R52022:52037 VST.msl.seplog <> imp_andp_adjoint meth
R52022:52037 VST.msl.seplog <> imp_andp_adjoint meth
R52048:52057 VST.msl.seplog <> andp_left2 meth
R52048:52057 VST.msl.seplog <> andp_left2 meth
R52068:52077 VST.msl.seplog <> andp_left2 meth
R52068:52077 VST.msl.seplog <> andp_left2 meth
R52093:52108 VST.msl.seplog <> imp_andp_adjoint meth
R52111:52119 VST.msl.log_normalize <> andp_comm thm
R52093:52108 VST.msl.seplog <> imp_andp_adjoint meth
R52093:52108 VST.msl.seplog <> imp_andp_adjoint meth
R52111:52119 VST.msl.log_normalize <> andp_comm thm
R52111:52119 VST.msl.log_normalize <> andp_comm thm
R52130:52139 VST.msl.seplog <> andp_right meth
R52130:52139 VST.msl.seplog <> andp_right meth
R52165:52173 VST.msl.log_normalize <> andp_comm thm
R52176:52191 VST.msl.seplog <> imp_andp_adjoint meth
R52165:52173 VST.msl.log_normalize <> andp_comm thm
R52165:52173 VST.msl.log_normalize <> andp_comm thm
R52176:52191 VST.msl.seplog <> imp_andp_adjoint meth
R52176:52191 VST.msl.seplog <> imp_andp_adjoint meth
R52200:52209 VST.msl.seplog <> andp_left2 meth
R52200:52209 VST.msl.seplog <> andp_left2 meth
R52225:52240 VST.msl.seplog <> imp_andp_adjoint meth
R52243:52251 VST.msl.log_normalize <> andp_comm thm
R52225:52240 VST.msl.seplog <> imp_andp_adjoint meth
R52225:52240 VST.msl.seplog <> imp_andp_adjoint meth
R52243:52251 VST.msl.log_normalize <> andp_comm thm
R52243:52251 VST.msl.log_normalize <> andp_comm thm
R52262:52272 VST.msl.log_normalize <> later_left2 thm
R52262:52272 VST.msl.log_normalize <> later_left2 thm
R52326:52337 VST.msl.seplog <> corable_prop meth
R52288:52307 VST.msl.seplog <> corable_andp_sepcon1 meth
R52288:52307 VST.msl.seplog <> corable_andp_sepcon1 meth
R52326:52337 VST.msl.seplog <> corable_prop meth
R52288:52307 VST.msl.seplog <> corable_andp_sepcon1 meth
R52351:52361 VST.msl.seplog <> sepcon_comm meth
R52351:52361 VST.msl.seplog <> sepcon_comm meth
R52351:52361 VST.msl.seplog <> sepcon_comm meth
R52372:52385 VST.msl.seplog <> sepcon_derives meth
R52372:52385 VST.msl.seplog <> sepcon_derives meth
R52403:52415 VST.msl.seplog <> derives_trans meth
R52426:52434 VST.floyd.SeparationLogicFacts <> odiaopt_D thm
R52403:52415 VST.msl.seplog <> derives_trans meth
R52426:52434 VST.floyd.SeparationLogicFacts <> odiaopt_D thm
R52495:52495 compcert.lib.Maps <> :::x_'!'_x not
R52512:52515 compcert.lib.Maps <> :::x_'!'_x not
R52496:52505 VST.veric.seplog <> temp_types def
R52495:52495 compcert.lib.Maps <> :::x_'!'_x not
R52512:52515 compcert.lib.Maps <> :::x_'!'_x not
R52496:52505 VST.veric.seplog <> temp_types def
R52554:52568 VST.floyd.SeparationLogicFacts <> oboxopt_odiaopt thm
R52554:52568 VST.floyd.SeparationLogicFacts <> oboxopt_odiaopt thm
R52554:52568 VST.floyd.SeparationLogicFacts <> oboxopt_odiaopt thm
R52554:52568 VST.floyd.SeparationLogicFacts <> oboxopt_odiaopt thm
R52619:52619 compcert.lib.Maps <> :::x_'!'_x not
R52636:52639 compcert.lib.Maps <> :::x_'!'_x not
R52620:52629 VST.veric.seplog <> temp_types def
R52619:52619 compcert.lib.Maps <> :::x_'!'_x not
R52636:52639 compcert.lib.Maps <> :::x_'!'_x not
R52620:52629 VST.veric.seplog <> temp_types def
R52673:52681 VST.floyd.SeparationLogicFacts <> oboxopt_K thm
R52673:52681 VST.floyd.SeparationLogicFacts <> oboxopt_K thm
R52697:52715 VST.msl.seplog <> wand_sepcon_adjoint meth
R52697:52715 VST.msl.seplog <> wand_sepcon_adjoint meth
R52697:52715 VST.msl.seplog <> wand_sepcon_adjoint meth
R52731:52741 VST.msl.log_normalize <> exp_sepcon1 thm
R52731:52741 VST.msl.log_normalize <> exp_sepcon1 thm
R52731:52741 VST.msl.log_normalize <> exp_sepcon1 thm
R52752:52765 VST.msl.seplog <> sepcon_derives meth
R52752:52765 VST.msl.seplog <> sepcon_derives meth
R52782:52808 VST.floyd.SeparationLogicFacts <> odiaopt_derives_EX_substopt thm
R52782:52808 VST.floyd.SeparationLogicFacts <> odiaopt_derives_EX_substopt thm
R52821:52827 VST.floyd.SeparationLogicFacts CallB2F <> mod
modtype 52843:52883 <> CLIGHT_SEPARATION_HOARE_LOGIC_SET_FORWARD
R52912:52944 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 52902:52909 <> CLIGHT_SEPARATION_HOARE_LOGIC_SET_FORWARD.CSHL_Def
ax 52972:52988 CLIGHT_SEPARATION_HOARE_LOGIC_SET_FORWARD semax_set_forward
R53003:53011 VST.veric.mpred <> compspecs class
binder 52999:53000 <> CS:529
R53022:53031 VST.veric.juicy_extspec <> OracleKind class
binder 53015:53019 <> Espec:530
R53042:53050 VST.veric.seplog <> tycontext ind
binder 53035:53039 <> Delta:531
R53074:53075 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53076:53080 VST.veric.mpred <> mpred def
R53067:53073 VST.veric.mpred <> environ ind
binder 53064:53064 <> P:532
binder 53083:53084 <> id:533
binder 53086:53086 <> e:534
R53094:53098 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SET_FORWARD semax defax
R53246:53262 VST.veric.SeparationLogic <> normal_ret_assert def
R53275:53277 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R53285:53286 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R53282:53284 compcert.common.Values <> val ind
binder 53278:53280 <> old:535
R53343:53374 VST.msl.seplog <> ::logic:x_'&&'_x not
R53287:53291 VST.veric.SeparationLogic <> local def
R53294:53294 VST.veric.lift LiftNotation :::'`'_x not
R53297:53341 VST.veric.lift LiftNotation :::'`'_x not
R53295:53296 Coq.Init.Logic <> eq ind
R53312:53316 VST.veric.seplog <> subst def
R53329:53337 VST.veric.expr <> eval_expr def
R53339:53339 VST.floyd.SeparationLogicFacts <> e:534 var
R53322:53322 VST.veric.lift LiftNotation :::'`'_x not
R53323:53325 VST.floyd.SeparationLogicFacts <> old:535 var
R53318:53319 VST.floyd.SeparationLogicFacts <> id:533 var
R53299:53305 VST.veric.mpred <> eval_id def
R53307:53308 VST.floyd.SeparationLogicFacts <> id:533 var
R53375:53379 VST.veric.seplog <> subst def
R53391:53391 VST.floyd.SeparationLogicFacts <> P:532 var
R53385:53385 VST.veric.lift LiftNotation :::'`'_x not
R53386:53388 VST.floyd.SeparationLogicFacts <> old:535 var
R53381:53382 VST.floyd.SeparationLogicFacts <> id:533 var
R53226:53229 compcert.cfrontend.Clight <> Sset constr
R53234:53234 VST.floyd.SeparationLogicFacts <> e:534 var
R53231:53232 VST.floyd.SeparationLogicFacts <> id:533 var
R53124:53128 VST.msl.seplog <> ::logic:'|>'_x not
R53212:53212 VST.msl.seplog <> ::logic:'|>'_x not
R53197:53210 VST.msl.seplog <> ::logic:x_'&&'_x not
R53129:53129 VST.msl.seplog <> ::logic:x_'&&'_x not
R53145:53163 VST.msl.seplog <> ::logic:x_'&&'_x not
R53196:53196 VST.msl.seplog <> ::logic:x_'&&'_x not
R53130:53136 VST.veric.SeparationLogic <> tc_expr def
R53144:53144 VST.floyd.SeparationLogicFacts <> e:534 var
R53138:53142 VST.floyd.SeparationLogicFacts <> Delta:531 var
R53164:53173 VST.veric.SeparationLogic <> tc_temp_id def
R53195:53195 VST.floyd.SeparationLogicFacts <> e:534 var
R53189:53193 VST.floyd.SeparationLogicFacts <> Delta:531 var
R53179:53184 compcert.cfrontend.Clight <> typeof def
R53186:53186 VST.floyd.SeparationLogicFacts <> e:534 var
R53175:53176 VST.floyd.SeparationLogicFacts <> id:533 var
R53211:53211 VST.floyd.SeparationLogicFacts <> P:532 var
R53109:53113 VST.floyd.SeparationLogicFacts <> Delta:531 var
R53103:53107 VST.floyd.SeparationLogicFacts <> Espec:530 var
R53100:53101 VST.floyd.SeparationLogicFacts <> CS:529 var
R53401:53441 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SET_FORWARD <> modtype
modtype 53457:53498 <> CLIGHT_SEPARATION_HOARE_LOGIC_SET_BACKWARD
R53527:53559 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 53517:53524 <> CLIGHT_SEPARATION_HOARE_LOGIC_SET_BACKWARD.CSHL_Def
ax 53587:53604 CLIGHT_SEPARATION_HOARE_LOGIC_SET_BACKWARD semax_set_backward
R53619:53627 VST.veric.mpred <> compspecs class
binder 53615:53616 <> CS:537
R53638:53647 VST.veric.juicy_extspec <> OracleKind class
binder 53631:53635 <> Espec:538
R53658:53666 VST.veric.seplog <> tycontext ind
binder 53651:53655 <> Delta:539
R53690:53691 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53692:53696 VST.veric.mpred <> mpred def
R53683:53689 VST.veric.mpred <> environ ind
binder 53680:53680 <> P:540
binder 53699:53700 <> id:541
binder 53702:53702 <> e:542
R53710:53714 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SET_BACKWARD semax defax
R53880:53896 VST.veric.SeparationLogic <> normal_ret_assert def
R53898:53898 VST.floyd.SeparationLogicFacts <> P:540 var
R53868:53871 compcert.cfrontend.Clight <> Sset constr
R53876:53876 VST.floyd.SeparationLogicFacts <> e:542 var
R53873:53874 VST.floyd.SeparationLogicFacts <> id:541 var
R53740:53744 VST.msl.seplog <> ::logic:'|>'_x not
R53854:53854 VST.msl.seplog <> ::logic:'|>'_x not
R53813:53829 VST.msl.seplog <> ::logic:x_'&&'_x not
R53745:53745 VST.msl.seplog <> ::logic:x_'&&'_x not
R53761:53779 VST.msl.seplog <> ::logic:x_'&&'_x not
R53812:53812 VST.msl.seplog <> ::logic:x_'&&'_x not
R53746:53752 VST.veric.SeparationLogic <> tc_expr def
R53760:53760 VST.floyd.SeparationLogicFacts <> e:542 var
R53754:53758 VST.floyd.SeparationLogicFacts <> Delta:539 var
R53780:53789 VST.veric.SeparationLogic <> tc_temp_id def
R53811:53811 VST.floyd.SeparationLogicFacts <> e:542 var
R53805:53809 VST.floyd.SeparationLogicFacts <> Delta:539 var
R53795:53800 compcert.cfrontend.Clight <> typeof def
R53802:53802 VST.floyd.SeparationLogicFacts <> e:542 var
R53791:53792 VST.floyd.SeparationLogicFacts <> id:541 var
R53830:53834 VST.veric.seplog <> subst def
R53853:53853 VST.floyd.SeparationLogicFacts <> P:540 var
R53840:53848 VST.veric.expr <> eval_expr def
R53850:53850 VST.floyd.SeparationLogicFacts <> e:542 var
R53836:53837 VST.floyd.SeparationLogicFacts <> id:541 var
R53725:53729 VST.floyd.SeparationLogicFacts <> Delta:539 var
R53719:53723 VST.floyd.SeparationLogicFacts <> Espec:538 var
R53716:53717 VST.floyd.SeparationLogicFacts <> CS:537 var
R53907:53948 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SET_BACKWARD <> modtype
modtype 53964:54005 <> CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_FORWARD
R54034:54066 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 54024:54031 <> CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_FORWARD.CSHL_Def
ax 54094:54111 CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_FORWARD semax_load_forward
R54126:54134 VST.veric.mpred <> compspecs class
binder 54122:54123 <> CS:544
R54145:54154 VST.veric.juicy_extspec <> OracleKind class
binder 54138:54142 <> Espec:545
R54165:54173 VST.veric.seplog <> tycontext ind
binder 54158:54162 <> Delta:546
binder 54187:54188 <> sh:547
binder 54190:54191 <> id:548
binder 54193:54193 <> P:549
binder 54195:54196 <> e1:550
binder 54198:54199 <> t2:551
R54206:54208 compcert.common.Values <> val ind
binder 54202:54203 <> v2:552
R54246:54253 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54291:54298 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54316:54323 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54411:54418 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54420:54424 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_FORWARD semax defax
R54563:54579 VST.veric.SeparationLogic <> normal_ret_assert def
R54582:54584 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R54592:54593 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R54589:54591 compcert.common.Values <> val ind
binder 54585:54587 <> old:553
R54625:54671 VST.msl.seplog <> ::logic:x_'&&'_x not
R54689:54689 VST.msl.seplog <> ::logic:x_'&&'_x not
R54594:54598 VST.veric.SeparationLogic <> local def
R54601:54601 VST.veric.lift LiftNotation :::'`'_x not
R54604:54623 VST.veric.lift LiftNotation :::'`'_x not
R54602:54603 Coq.Init.Logic <> eq ind
R54619:54620 VST.veric.lift LiftNotation :::'`'_x not
R54621:54622 VST.floyd.SeparationLogicFacts <> v2:552 var
R54606:54612 VST.veric.mpred <> eval_id def
R54614:54615 VST.floyd.SeparationLogicFacts <> id:548 var
R54672:54676 VST.veric.seplog <> subst def
R54688:54688 VST.floyd.SeparationLogicFacts <> P:549 var
R54682:54682 VST.veric.lift LiftNotation :::'`'_x not
R54683:54685 VST.floyd.SeparationLogicFacts <> old:553 var
R54678:54679 VST.floyd.SeparationLogicFacts <> id:548 var
R54543:54546 compcert.cfrontend.Clight <> Sset constr
R54551:54552 VST.floyd.SeparationLogicFacts <> e1:550 var
R54548:54549 VST.floyd.SeparationLogicFacts <> id:548 var
R54449:54453 VST.msl.seplog <> ::logic:'|>'_x not
R54532:54532 VST.msl.seplog <> ::logic:'|>'_x not
R54517:54530 VST.msl.seplog <> ::logic:x_'&&'_x not
R54454:54454 VST.msl.seplog <> ::logic:x_'&&'_x not
R54473:54484 VST.msl.seplog <> ::logic:x_'&&'_x not
R54455:54463 VST.veric.SeparationLogic <> tc_lvalue def
R54471:54472 VST.floyd.SeparationLogicFacts <> e1:550 var
R54465:54469 VST.floyd.SeparationLogicFacts <> Delta:546 var
R54485:54489 VST.veric.SeparationLogic <> local def
R54492:54493 VST.veric.lift LiftNotation :::'`('_x_')' not
R54515:54515 VST.veric.lift LiftNotation :::'`('_x_')' not
R54494:54499 VST.veric.Cop2 <> tc_val def
R54513:54514 VST.floyd.SeparationLogicFacts <> v2:552 var
R54502:54507 compcert.cfrontend.Clight <> typeof def
R54509:54510 VST.floyd.SeparationLogicFacts <> e1:550 var
R54531:54531 VST.floyd.SeparationLogicFacts <> P:549 var
R54435:54439 VST.floyd.SeparationLogicFacts <> Delta:546 var
R54429:54433 VST.floyd.SeparationLogicFacts <> Espec:545 var
R54426:54427 VST.floyd.SeparationLogicFacts <> CS:544 var
R54353:54357 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R54348:54351 VST.msl.seplog <> ::logic:x_'&&'_x not
R54324:54328 VST.veric.SeparationLogic <> local def
R54331:54340 VST.veric.SeparationLogic <> tc_environ def
R54342:54346 VST.floyd.SeparationLogicFacts <> Delta:546 var
R54352:54352 VST.floyd.SeparationLogicFacts <> P:549 var
R54406:54408 VST.msl.seplog <> ::logic:x_'*'_x not
R54358:54359 VST.veric.lift LiftNotation :::'`('_x_')' not
R54381:54405 VST.veric.lift LiftNotation :::'`('_x_')' not
R54360:54365 VST.veric.SeparationLogic <> mapsto def
R54371:54376 compcert.cfrontend.Clight <> typeof def
R54378:54379 VST.floyd.SeparationLogicFacts <> e1:550 var
R54367:54368 VST.floyd.SeparationLogicFacts <> sh:547 var
R54401:54402 VST.veric.lift LiftNotation :::'`'_x not
R54403:54404 VST.floyd.SeparationLogicFacts <> v2:552 var
R54384:54394 VST.veric.expr <> eval_lvalue def
R54396:54397 VST.floyd.SeparationLogicFacts <> e1:550 var
R54409:54410 VST.msl.seplog <> TT meth
R54299:54312 VST.veric.shares <> readable_share def
R54314:54315 VST.floyd.SeparationLogicFacts <> sh:547 var
R54284:54286 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54254:54268 VST.veric.expr <> is_neutral_cast def
R54282:54283 VST.floyd.SeparationLogicFacts <> t2:551 var
R54271:54276 compcert.cfrontend.Clight <> typeof def
R54278:54279 VST.floyd.SeparationLogicFacts <> e1:550 var
R54287:54290 Coq.Init.Datatypes <> true constr
R54236:54238 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54216:54226 VST.veric.SeparationLogic <> typeof_temp def
R54234:54235 VST.floyd.SeparationLogicFacts <> id:548 var
R54228:54232 VST.floyd.SeparationLogicFacts <> Delta:546 var
R54239:54242 Coq.Init.Datatypes <> Some constr
R54244:54245 VST.floyd.SeparationLogicFacts <> t2:551 var
R54699:54740 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_FORWARD <> modtype
modtype 54756:54798 <> CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_BACKWARD
R54827:54859 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 54817:54824 <> CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_BACKWARD.CSHL_Def
ax 54887:54905 CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_BACKWARD semax_load_backward
R54920:54928 VST.veric.mpred <> compspecs class
binder 54916:54917 <> CS:555
R54939:54948 VST.veric.juicy_extspec <> OracleKind class
binder 54932:54936 <> Espec:556
R54959:54967 VST.veric.seplog <> tycontext ind
binder 54952:54956 <> Delta:557
R54991:54992 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54993:54997 VST.veric.mpred <> mpred def
R54984:54990 VST.veric.mpred <> environ ind
binder 54981:54981 <> P:558
binder 55000:55001 <> id:559
binder 55003:55004 <> e1:560
R55012:55016 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_BACKWARD semax defax
R55447:55463 VST.veric.SeparationLogic <> normal_ret_assert def
R55465:55465 VST.floyd.SeparationLogicFacts <> P:558 var
R55434:55437 compcert.cfrontend.Clight <> Sset constr
R55442:55443 VST.floyd.SeparationLogicFacts <> e1:560 var
R55439:55440 VST.floyd.SeparationLogicFacts <> id:559 var
R55042:55044 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R55054:55055 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R55049:55053 VST.msl.shares <> share def
binder 55045:55046 <> sh:561
R55056:55058 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R55067:55068 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R55063:55066 compcert.cfrontend.Ctypes <> type ind
binder 55059:55060 <> t2:562
R55069:55071 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R55079:55094 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R55076:55078 compcert.common.Values <> val ind
binder 55072:55073 <> v2:563
R55228:55240 VST.msl.seplog <> ::logic:x_'&&'_x not
R55095:55098 VST.msl.seplog <> ::logic:'!!'_x not
R55227:55227 VST.msl.seplog <> ::logic:'!!'_x not
R55129:55150 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R55119:55121 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55099:55109 VST.veric.SeparationLogic <> typeof_temp def
R55117:55118 VST.floyd.SeparationLogicFacts <> id:559 var
R55111:55115 VST.floyd.SeparationLogicFacts <> Delta:557 var
R55122:55125 Coq.Init.Datatypes <> Some constr
R55127:55128 VST.floyd.SeparationLogicFacts <> t2:562 var
R55188:55209 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R55181:55183 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55151:55165 VST.veric.expr <> is_neutral_cast def
R55179:55180 VST.floyd.SeparationLogicFacts <> t2:562 var
R55168:55173 compcert.cfrontend.Clight <> typeof def
R55175:55176 VST.floyd.SeparationLogicFacts <> e1:560 var
R55184:55187 Coq.Init.Datatypes <> true constr
R55210:55223 VST.veric.shares <> readable_share def
R55225:55226 VST.floyd.SeparationLogicFacts <> sh:561 var
R55241:55245 VST.msl.seplog <> ::logic:'|>'_x not
R55422:55422 VST.msl.seplog <> ::logic:'|>'_x not
R55388:55405 VST.msl.seplog <> ::logic:x_'&&'_x not
R55316:55334 VST.msl.seplog <> ::logic:x_'&&'_x not
R55387:55387 VST.msl.seplog <> ::logic:x_'&&'_x not
R55246:55246 VST.msl.seplog <> ::logic:x_'&&'_x not
R55265:55283 VST.msl.seplog <> ::logic:x_'&&'_x not
R55247:55255 VST.veric.SeparationLogic <> tc_lvalue def
R55263:55264 VST.floyd.SeparationLogicFacts <> e1:560 var
R55257:55261 VST.floyd.SeparationLogicFacts <> Delta:557 var
R55284:55288 VST.veric.SeparationLogic <> local def
R55291:55292 VST.veric.lift LiftNotation :::'`('_x_')' not
R55314:55314 VST.veric.lift LiftNotation :::'`('_x_')' not
R55293:55298 VST.veric.Cop2 <> tc_val def
R55312:55313 VST.floyd.SeparationLogicFacts <> v2:563 var
R55301:55306 compcert.cfrontend.Clight <> typeof def
R55308:55309 VST.floyd.SeparationLogicFacts <> e1:560 var
R55382:55384 VST.msl.seplog <> ::logic:x_'*'_x not
R55335:55336 VST.veric.lift LiftNotation :::'`('_x_')' not
R55358:55381 VST.veric.lift LiftNotation :::'`('_x_')' not
R55337:55342 VST.veric.SeparationLogic <> mapsto def
R55348:55353 compcert.cfrontend.Clight <> typeof def
R55355:55356 VST.floyd.SeparationLogicFacts <> e1:560 var
R55344:55345 VST.floyd.SeparationLogicFacts <> sh:561 var
R55378:55378 VST.veric.lift LiftNotation :::'`'_x not
R55379:55380 VST.floyd.SeparationLogicFacts <> v2:563 var
R55361:55371 VST.veric.expr <> eval_lvalue def
R55373:55374 VST.floyd.SeparationLogicFacts <> e1:560 var
R55385:55386 VST.msl.seplog <> TT meth
R55406:55410 VST.veric.seplog <> subst def
R55421:55421 VST.floyd.SeparationLogicFacts <> P:558 var
R55416:55416 VST.veric.lift LiftNotation :::'`'_x not
R55417:55418 VST.floyd.SeparationLogicFacts <> v2:563 var
R55412:55413 VST.floyd.SeparationLogicFacts <> id:559 var
R55027:55031 VST.floyd.SeparationLogicFacts <> Delta:557 var
R55021:55025 VST.floyd.SeparationLogicFacts <> Espec:556 var
R55018:55019 VST.floyd.SeparationLogicFacts <> CS:555 var
R55474:55516 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_BACKWARD <> modtype
modtype 55532:55578 <> CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_FORWARD
R55607:55639 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 55597:55604 <> CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_FORWARD.CSHL_Def
ax 55667:55689 CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_FORWARD semax_cast_load_forward
R55704:55712 VST.veric.mpred <> compspecs class
binder 55700:55701 <> CS:565
R55723:55732 VST.veric.juicy_extspec <> OracleKind class
binder 55716:55720 <> Espec:566
R55743:55751 VST.veric.seplog <> tycontext ind
binder 55736:55740 <> Delta:567
binder 55764:55765 <> sh:568
binder 55767:55768 <> id:569
binder 55770:55770 <> P:570
binder 55772:55773 <> e1:571
binder 55775:55776 <> t1:572
R55783:55785 compcert.common.Values <> val ind
binder 55779:55780 <> v2:573
R55823:55829 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55873:55880 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55898:55905 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55992:55999 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56001:56005 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_FORWARD semax defax
R56176:56192 VST.veric.SeparationLogic <> normal_ret_assert def
R56195:56197 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R56205:56206 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R56202:56204 compcert.common.Values <> val ind
binder 56198:56200 <> old:574
R56282:56328 VST.msl.seplog <> ::logic:x_'&&'_x not
R56346:56346 VST.msl.seplog <> ::logic:x_'&&'_x not
R56207:56211 VST.veric.SeparationLogic <> local def
R56214:56214 VST.veric.lift LiftNotation :::'`'_x not
R56217:56280 VST.veric.lift LiftNotation :::'`'_x not
R56215:56216 Coq.Init.Logic <> eq ind
R56232:56236 VST.veric.seplog <> subst def
R56249:56250 VST.veric.lift LiftNotation :::'`('_x_')' not
R56278:56278 VST.veric.lift LiftNotation :::'`('_x_')' not
R56251:56259 VST.veric.expr <> eval_cast def
R56276:56277 VST.floyd.SeparationLogicFacts <> v2:573 var
R56273:56274 VST.floyd.SeparationLogicFacts <> t1:572 var
R56262:56267 compcert.cfrontend.Clight <> typeof def
R56269:56270 VST.floyd.SeparationLogicFacts <> e1:571 var
R56242:56242 VST.veric.lift LiftNotation :::'`'_x not
R56243:56245 VST.floyd.SeparationLogicFacts <> old:574 var
R56238:56239 VST.floyd.SeparationLogicFacts <> id:569 var
R56219:56225 VST.veric.mpred <> eval_id def
R56227:56228 VST.floyd.SeparationLogicFacts <> id:569 var
R56329:56333 VST.veric.seplog <> subst def
R56345:56345 VST.floyd.SeparationLogicFacts <> P:570 var
R56339:56339 VST.veric.lift LiftNotation :::'`'_x not
R56340:56342 VST.floyd.SeparationLogicFacts <> old:574 var
R56335:56336 VST.floyd.SeparationLogicFacts <> id:569 var
R56145:56148 compcert.cfrontend.Clight <> Sset constr
R56154:56158 compcert.cfrontend.Clight <> Ecast constr
R56163:56164 VST.floyd.SeparationLogicFacts <> t1:572 var
R56160:56161 VST.floyd.SeparationLogicFacts <> e1:571 var
R56150:56151 VST.floyd.SeparationLogicFacts <> id:569 var
R56030:56034 VST.msl.seplog <> ::logic:'|>'_x not
R56134:56134 VST.msl.seplog <> ::logic:'|>'_x not
R56119:56132 VST.msl.seplog <> ::logic:x_'&&'_x not
R56035:56035 VST.msl.seplog <> ::logic:x_'&&'_x not
R56054:56065 VST.msl.seplog <> ::logic:x_'&&'_x not
R56036:56044 VST.veric.SeparationLogic <> tc_lvalue def
R56052:56053 VST.floyd.SeparationLogicFacts <> e1:571 var
R56046:56050 VST.floyd.SeparationLogicFacts <> Delta:567 var
R56066:56070 VST.veric.SeparationLogic <> local def
R56073:56074 VST.veric.lift LiftNotation :::'`('_x_')' not
R56084:56117 VST.veric.lift LiftNotation :::'`('_x_')' not
R56075:56080 VST.veric.Cop2 <> tc_val def
R56082:56083 VST.floyd.SeparationLogicFacts <> t1:572 var
R56087:56088 VST.veric.lift LiftNotation :::'`('_x_')' not
R56116:56116 VST.veric.lift LiftNotation :::'`('_x_')' not
R56089:56097 VST.veric.expr <> eval_cast def
R56114:56115 VST.floyd.SeparationLogicFacts <> v2:573 var
R56111:56112 VST.floyd.SeparationLogicFacts <> t1:572 var
R56100:56105 compcert.cfrontend.Clight <> typeof def
R56107:56108 VST.floyd.SeparationLogicFacts <> e1:571 var
R56133:56133 VST.floyd.SeparationLogicFacts <> P:570 var
R56016:56020 VST.floyd.SeparationLogicFacts <> Delta:567 var
R56010:56014 VST.floyd.SeparationLogicFacts <> Espec:566 var
R56007:56008 VST.floyd.SeparationLogicFacts <> CS:565 var
R55935:55939 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R55930:55933 VST.msl.seplog <> ::logic:x_'&&'_x not
R55906:55910 VST.veric.SeparationLogic <> local def
R55913:55922 VST.veric.SeparationLogic <> tc_environ def
R55924:55928 VST.floyd.SeparationLogicFacts <> Delta:567 var
R55934:55934 VST.floyd.SeparationLogicFacts <> P:570 var
R55987:55989 VST.msl.seplog <> ::logic:x_'*'_x not
R55940:55941 VST.veric.lift LiftNotation :::'`('_x_')' not
R55963:55986 VST.veric.lift LiftNotation :::'`('_x_')' not
R55942:55947 VST.veric.SeparationLogic <> mapsto def
R55953:55958 compcert.cfrontend.Clight <> typeof def
R55960:55961 VST.floyd.SeparationLogicFacts <> e1:571 var
R55949:55950 VST.floyd.SeparationLogicFacts <> sh:568 var
R55983:55983 VST.veric.lift LiftNotation :::'`'_x not
R55984:55985 VST.floyd.SeparationLogicFacts <> v2:573 var
R55966:55976 VST.veric.expr <> eval_lvalue def
R55978:55979 VST.floyd.SeparationLogicFacts <> e1:571 var
R55990:55991 VST.msl.seplog <> TT meth
R55881:55894 VST.veric.shares <> readable_share def
R55896:55897 VST.floyd.SeparationLogicFacts <> sh:568 var
R55865:55867 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55830:55849 VST.veric.SeparationLogic <> cast_pointer_to_bool def
R55863:55864 VST.floyd.SeparationLogicFacts <> t1:572 var
R55852:55857 compcert.cfrontend.Clight <> typeof def
R55859:55860 VST.floyd.SeparationLogicFacts <> e1:571 var
R55868:55872 Coq.Init.Datatypes <> false constr
R55813:55815 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55793:55803 VST.veric.SeparationLogic <> typeof_temp def
R55811:55812 VST.floyd.SeparationLogicFacts <> id:569 var
R55805:55809 VST.floyd.SeparationLogicFacts <> Delta:567 var
R55816:55819 Coq.Init.Datatypes <> Some constr
R55821:55822 VST.floyd.SeparationLogicFacts <> t1:572 var
R56356:56402 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_FORWARD <> modtype
modtype 56418:56465 <> CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_BACKWARD
R56494:56526 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 56484:56491 <> CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_BACKWARD.CSHL_Def
ax 56554:56577 CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_BACKWARD semax_cast_load_backward
R56592:56600 VST.veric.mpred <> compspecs class
binder 56588:56589 <> CS:576
R56611:56620 VST.veric.juicy_extspec <> OracleKind class
binder 56604:56608 <> Espec:577
R56631:56639 VST.veric.seplog <> tycontext ind
binder 56624:56628 <> Delta:578
R56663:56664 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56665:56669 VST.veric.mpred <> mpred def
R56656:56662 VST.veric.mpred <> environ ind
binder 56653:56653 <> P:579
binder 56672:56673 <> id:580
binder 56675:56675 <> e:581
R56683:56687 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_BACKWARD semax defax
R57232:57248 VST.veric.SeparationLogic <> normal_ret_assert def
R57250:57250 VST.floyd.SeparationLogicFacts <> P:579 var
R57220:57223 compcert.cfrontend.Clight <> Sset constr
R57228:57228 VST.floyd.SeparationLogicFacts <> e:581 var
R57225:57226 VST.floyd.SeparationLogicFacts <> id:580 var
R56713:56715 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R56725:56726 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R56720:56724 VST.msl.shares <> share def
binder 56716:56717 <> sh:582
R56727:56729 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R56738:56739 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R56734:56737 compcert.cfrontend.Clight <> expr ind
binder 56730:56731 <> e1:583
R56740:56742 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R56751:56752 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R56747:56750 compcert.cfrontend.Ctypes <> type ind
binder 56743:56744 <> t1:584
R56753:56755 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R56763:56778 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R56760:56762 compcert.common.Values <> val ind
binder 56756:56757 <> v2:585
R56955:56967 VST.msl.seplog <> ::logic:x_'&&'_x not
R56779:56782 VST.msl.seplog <> ::logic:'!!'_x not
R56954:56954 VST.msl.seplog <> ::logic:'!!'_x not
R56798:56819 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R56784:56786 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56783:56783 VST.floyd.SeparationLogicFacts <> e:581 var
R56787:56791 compcert.cfrontend.Clight <> Ecast constr
R56796:56797 VST.floyd.SeparationLogicFacts <> t1:584 var
R56793:56794 VST.floyd.SeparationLogicFacts <> e1:583 var
R56850:56871 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R56840:56842 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56820:56830 VST.veric.SeparationLogic <> typeof_temp def
R56838:56839 VST.floyd.SeparationLogicFacts <> id:580 var
R56832:56836 VST.floyd.SeparationLogicFacts <> Delta:578 var
R56843:56846 Coq.Init.Datatypes <> Some constr
R56848:56849 VST.floyd.SeparationLogicFacts <> t1:584 var
R56915:56936 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R56907:56909 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56872:56891 VST.veric.SeparationLogic <> cast_pointer_to_bool def
R56905:56906 VST.floyd.SeparationLogicFacts <> t1:584 var
R56894:56899 compcert.cfrontend.Clight <> typeof def
R56901:56902 VST.floyd.SeparationLogicFacts <> e1:583 var
R56910:56914 Coq.Init.Datatypes <> false constr
R56937:56950 VST.veric.shares <> readable_share def
R56952:56953 VST.floyd.SeparationLogicFacts <> sh:582 var
R56968:56972 VST.msl.seplog <> ::logic:'|>'_x not
R57208:57208 VST.msl.seplog <> ::logic:'|>'_x not
R57136:57153 VST.msl.seplog <> ::logic:x_'&&'_x not
R57064:57082 VST.msl.seplog <> ::logic:x_'&&'_x not
R57135:57135 VST.msl.seplog <> ::logic:x_'&&'_x not
R56973:56973 VST.msl.seplog <> ::logic:x_'&&'_x not
R56992:57010 VST.msl.seplog <> ::logic:x_'&&'_x not
R56974:56982 VST.veric.SeparationLogic <> tc_lvalue def
R56990:56991 VST.floyd.SeparationLogicFacts <> e1:583 var
R56984:56988 VST.floyd.SeparationLogicFacts <> Delta:578 var
R57011:57015 VST.veric.SeparationLogic <> local def
R57018:57019 VST.veric.lift LiftNotation :::'`('_x_')' not
R57029:57062 VST.veric.lift LiftNotation :::'`('_x_')' not
R57020:57025 VST.veric.Cop2 <> tc_val def
R57027:57028 VST.floyd.SeparationLogicFacts <> t1:584 var
R57032:57033 VST.veric.lift LiftNotation :::'`('_x_')' not
R57061:57061 VST.veric.lift LiftNotation :::'`('_x_')' not
R57034:57042 VST.veric.expr <> eval_cast def
R57059:57060 VST.floyd.SeparationLogicFacts <> v2:585 var
R57056:57057 VST.floyd.SeparationLogicFacts <> t1:584 var
R57045:57050 compcert.cfrontend.Clight <> typeof def
R57052:57053 VST.floyd.SeparationLogicFacts <> e1:583 var
R57130:57132 VST.msl.seplog <> ::logic:x_'*'_x not
R57083:57084 VST.veric.lift LiftNotation :::'`('_x_')' not
R57106:57129 VST.veric.lift LiftNotation :::'`('_x_')' not
R57085:57090 VST.veric.SeparationLogic <> mapsto def
R57096:57101 compcert.cfrontend.Clight <> typeof def
R57103:57104 VST.floyd.SeparationLogicFacts <> e1:583 var
R57092:57093 VST.floyd.SeparationLogicFacts <> sh:582 var
R57126:57126 VST.veric.lift LiftNotation :::'`'_x not
R57127:57128 VST.floyd.SeparationLogicFacts <> v2:585 var
R57109:57119 VST.veric.expr <> eval_lvalue def
R57121:57122 VST.floyd.SeparationLogicFacts <> e1:583 var
R57133:57134 VST.msl.seplog <> TT meth
R57154:57158 VST.veric.seplog <> subst def
R57207:57207 VST.floyd.SeparationLogicFacts <> P:579 var
R57164:57165 VST.veric.lift LiftNotation :::'`('_x_')' not
R57204:57204 VST.veric.lift LiftNotation :::'`('_x_')' not
R57166:57174 VST.veric.val_lemmas <> force_val def
R57177:57184 VST.veric.Clight_Cop2 <> sem_cast def
R57201:57202 VST.floyd.SeparationLogicFacts <> v2:585 var
R57198:57199 VST.floyd.SeparationLogicFacts <> t1:584 var
R57187:57192 compcert.cfrontend.Clight <> typeof def
R57194:57195 VST.floyd.SeparationLogicFacts <> e1:583 var
R57160:57161 VST.floyd.SeparationLogicFacts <> id:580 var
R56698:56702 VST.floyd.SeparationLogicFacts <> Delta:578 var
R56692:56696 VST.floyd.SeparationLogicFacts <> Espec:577 var
R56689:56690 VST.floyd.SeparationLogicFacts <> CS:576 var
R57259:57306 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_BACKWARD <> modtype
R57338:57370 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R57389:57429 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R57455:57457 VST.floyd.SeparationLogicFacts Def <> modtype
R57474:57513 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION <> mod
R57539:57541 VST.floyd.SeparationLogicFacts Def <> modtype
R57559:57600 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_FORWARD <> mod
R57626:57628 VST.floyd.SeparationLogicFacts Def <> modtype
R57639:57681 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_BACKWARD <> mod
R57707:57709 VST.floyd.SeparationLogicFacts Def <> modtype
mod 57317:57323 <> LoadF2B
R57732:57734 VST.floyd.SeparationLogicFacts Def <> modtype
mod 57720:57727 <> LoadF2B.CSHL_Def
R57759:57772 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R57775:57777 VST.floyd.SeparationLogicFacts Def <> modtype
R57781:57786 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 57744:57754 <> LoadF2B.ConseqFacts
R57810:57821 VST.floyd.SeparationLogicFacts GenExtrFacts <> modtype
R57824:57826 VST.floyd.SeparationLogicFacts Def <> modtype
R57830:57835 VST.floyd.SeparationLogicFacts Conseq <> modtype
R57839:57842 VST.floyd.SeparationLogicFacts Extr <> modtype
mod 57797:57805 <> LoadF2B.ExtrFacts
prf 57947:57965 LoadF2B semax_load_backward
R57980:57988 VST.veric.mpred <> compspecs class
binder 57976:57977 <> CS:587
R57999:58008 VST.veric.juicy_extspec <> OracleKind class
binder 57992:57996 <> Espec:588
R58019:58027 VST.veric.seplog <> tycontext ind
binder 58012:58016 <> Delta:589
R58051:58052 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58053:58057 VST.veric.mpred <> mpred def
R58044:58050 VST.veric.mpred <> environ ind
binder 58041:58041 <> P:590
binder 58060:58061 <> id:591
binder 58063:58064 <> e1:592
R58072:58076 VST.floyd.SeparationLogicFacts Def semax defax
R58507:58523 VST.veric.SeparationLogic <> normal_ret_assert def
R58525:58525 VST.floyd.SeparationLogicFacts <> P:590 var
R58494:58497 compcert.cfrontend.Clight <> Sset constr
R58502:58503 VST.floyd.SeparationLogicFacts <> e1:592 var
R58499:58500 VST.floyd.SeparationLogicFacts <> id:591 var
R58102:58104 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R58114:58115 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R58109:58113 VST.msl.shares <> share def
binder 58105:58106 <> sh:593
R58116:58118 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R58127:58128 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R58123:58126 compcert.cfrontend.Ctypes <> type ind
binder 58119:58120 <> t2:594
R58129:58131 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R58139:58154 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R58136:58138 compcert.common.Values <> val ind
binder 58132:58133 <> v2:595
R58288:58300 VST.msl.seplog <> ::logic:x_'&&'_x not
R58155:58158 VST.msl.seplog <> ::logic:'!!'_x not
R58287:58287 VST.msl.seplog <> ::logic:'!!'_x not
R58189:58210 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R58179:58181 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58159:58169 VST.veric.SeparationLogic <> typeof_temp def
R58177:58178 VST.floyd.SeparationLogicFacts <> id:591 var
R58171:58175 VST.floyd.SeparationLogicFacts <> Delta:589 var
R58182:58185 Coq.Init.Datatypes <> Some constr
R58187:58188 VST.floyd.SeparationLogicFacts <> t2:594 var
R58248:58269 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R58241:58243 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58211:58225 VST.veric.expr <> is_neutral_cast def
R58239:58240 VST.floyd.SeparationLogicFacts <> t2:594 var
R58228:58233 compcert.cfrontend.Clight <> typeof def
R58235:58236 VST.floyd.SeparationLogicFacts <> e1:592 var
R58244:58247 Coq.Init.Datatypes <> true constr
R58270:58283 VST.veric.shares <> readable_share def
R58285:58286 VST.floyd.SeparationLogicFacts <> sh:593 var
R58301:58305 VST.msl.seplog <> ::logic:'|>'_x not
R58482:58482 VST.msl.seplog <> ::logic:'|>'_x not
R58448:58465 VST.msl.seplog <> ::logic:x_'&&'_x not
R58376:58394 VST.msl.seplog <> ::logic:x_'&&'_x not
R58447:58447 VST.msl.seplog <> ::logic:x_'&&'_x not
R58306:58306 VST.msl.seplog <> ::logic:x_'&&'_x not
R58325:58343 VST.msl.seplog <> ::logic:x_'&&'_x not
R58307:58315 VST.veric.SeparationLogic <> tc_lvalue def
R58323:58324 VST.floyd.SeparationLogicFacts <> e1:592 var
R58317:58321 VST.floyd.SeparationLogicFacts <> Delta:589 var
R58344:58348 VST.veric.SeparationLogic <> local def
R58351:58352 VST.veric.lift LiftNotation :::'`('_x_')' not
R58374:58374 VST.veric.lift LiftNotation :::'`('_x_')' not
R58353:58358 VST.veric.Cop2 <> tc_val def
R58372:58373 VST.floyd.SeparationLogicFacts <> v2:595 var
R58361:58366 compcert.cfrontend.Clight <> typeof def
R58368:58369 VST.floyd.SeparationLogicFacts <> e1:592 var
R58442:58444 VST.msl.seplog <> ::logic:x_'*'_x not
R58395:58396 VST.veric.lift LiftNotation :::'`('_x_')' not
R58418:58441 VST.veric.lift LiftNotation :::'`('_x_')' not
R58397:58402 VST.veric.SeparationLogic <> mapsto def
R58408:58413 compcert.cfrontend.Clight <> typeof def
R58415:58416 VST.floyd.SeparationLogicFacts <> e1:592 var
R58404:58405 VST.floyd.SeparationLogicFacts <> sh:593 var
R58438:58438 VST.veric.lift LiftNotation :::'`'_x not
R58439:58440 VST.floyd.SeparationLogicFacts <> v2:595 var
R58421:58431 VST.veric.expr <> eval_lvalue def
R58433:58434 VST.floyd.SeparationLogicFacts <> e1:592 var
R58445:58446 VST.msl.seplog <> TT meth
R58466:58470 VST.veric.seplog <> subst def
R58481:58481 VST.floyd.SeparationLogicFacts <> P:590 var
R58476:58476 VST.veric.lift LiftNotation :::'`'_x not
R58477:58478 VST.floyd.SeparationLogicFacts <> v2:595 var
R58472:58473 VST.floyd.SeparationLogicFacts <> id:591 var
R58087:58091 VST.floyd.SeparationLogicFacts <> Delta:589 var
R58081:58085 VST.floyd.SeparationLogicFacts <> Espec:588 var
R58078:58079 VST.floyd.SeparationLogicFacts <> CS:587 var
R58554:58573 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R58554:58573 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R58594:58613 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R58594:58613 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R58634:58653 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R58634:58653 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R58674:58691 VST.floyd.SeparationLogicFacts LoadF2B semax_extract_prop thm
R58674:58691 VST.floyd.SeparationLogicFacts LoadF2B semax_extract_prop thm
R58723:58732 VST.msl.log_normalize <> andp_assoc thm
R58739:58743 VST.veric.seplog <> subst def
R58723:58732 VST.msl.log_normalize <> andp_assoc thm
R58739:58743 VST.veric.seplog <> subst def
R58723:58732 VST.msl.log_normalize <> andp_assoc thm
R58739:58743 VST.veric.seplog <> subst def
R58763:58773 VST.floyd.SeparationLogicFacts LoadF2B semax_post' thm
R58789:58806 VST.floyd.SeparationLogicFacts LoadF semax_load_forward prfax
R58763:58773 VST.floyd.SeparationLogicFacts LoadF2B semax_post' thm
R58789:58806 VST.floyd.SeparationLogicFacts LoadF semax_load_forward prfax
R58829:58837 VST.msl.log_normalize <> exp_andp2 thm
R58829:58837 VST.msl.log_normalize <> exp_andp2 thm
R58829:58837 VST.msl.log_normalize <> exp_andp2 thm
R58850:58857 VST.msl.seplog <> exp_left meth
R58850:58857 VST.msl.seplog <> exp_left meth
R58994:58997 VST.msl.seplog <> ::logic:x_'&&'_x not
R58954:58958 VST.msl.seplog <> ::logic:x_'&&'_x not
R58993:58993 VST.msl.seplog <> ::logic:x_'&&'_x not
R58930:58934 VST.veric.SeparationLogic <> local def
R58937:58946 VST.veric.SeparationLogic <> tc_environ def
R58959:58963 VST.veric.SeparationLogic <> local def
R58966:58968 VST.veric.lift LiftNotation :::'`'_x not
R58971:58991 VST.veric.lift LiftNotation :::'`'_x not
R58969:58970 Coq.Init.Logic <> eq ind
R58987:58988 VST.veric.lift LiftNotation :::'`'_x not
R58974:58980 VST.veric.mpred <> eval_id def
R58998:59002 VST.veric.seplog <> subst def
R59008:59009 VST.veric.lift LiftNotation :::'`'_x not
R58910:58922 VST.msl.seplog <> derives_trans meth
R58994:58997 VST.msl.seplog <> ::logic:x_'&&'_x not
R58954:58958 VST.msl.seplog <> ::logic:x_'&&'_x not
R58993:58993 VST.msl.seplog <> ::logic:x_'&&'_x not
R58930:58934 VST.veric.SeparationLogic <> local def
R58937:58946 VST.veric.SeparationLogic <> tc_environ def
R58959:58963 VST.veric.SeparationLogic <> local def
R58966:58968 VST.veric.lift LiftNotation :::'`'_x not
R58971:58991 VST.veric.lift LiftNotation :::'`'_x not
R58969:58970 Coq.Init.Logic <> eq ind
R58987:58988 VST.veric.lift LiftNotation :::'`'_x not
R58974:58980 VST.veric.mpred <> eval_id def
R58998:59002 VST.veric.seplog <> subst def
R59008:59009 VST.veric.lift LiftNotation :::'`'_x not
R58910:58922 VST.msl.seplog <> derives_trans meth
R59056:59060 VST.veric.SeparationLogic <> local def
R59063:59067 VST.veric.mpred <> lift1 def
R59101:59111 VST.veric.SeparationLogic <> typeof_temp def
R59133:59133 compcert.lib.Maps <> :::x_'!'_x not
R59150:59153 compcert.lib.Maps <> :::x_'!'_x not
R59134:59143 VST.veric.seplog <> temp_types def
R59133:59133 compcert.lib.Maps <> :::x_'!'_x not
R59150:59153 compcert.lib.Maps <> :::x_'!'_x not
R59134:59143 VST.veric.seplog <> temp_types def
R59201:59210 VST.floyd.SeparationLogicFacts <> subst_self thm
R59201:59210 VST.floyd.SeparationLogicFacts <> subst_self thm
R59201:59210 VST.floyd.SeparationLogicFacts <> subst_self thm
R59254:59260 VST.floyd.SeparationLogicFacts LoadF2B <> mod
R59292:59324 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R59343:59383 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R59409:59411 VST.floyd.SeparationLogicFacts Def <> modtype
R59429:59471 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_BACKWARD <> mod
R59497:59499 VST.floyd.SeparationLogicFacts Def <> modtype
R59510:59551 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_FORWARD <> mod
R59577:59579 VST.floyd.SeparationLogicFacts Def <> modtype
mod 59271:59277 <> LoadB2F
R59602:59604 VST.floyd.SeparationLogicFacts Def <> modtype
mod 59590:59597 <> LoadB2F.CSHL_Def
R59629:59642 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R59645:59647 VST.floyd.SeparationLogicFacts Def <> modtype
R59651:59656 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 59614:59624 <> LoadB2F.ConseqFacts
prf 59730:59747 LoadB2F semax_load_forward
R59762:59770 VST.veric.mpred <> compspecs class
binder 59758:59759 <> CS:596
R59781:59790 VST.veric.juicy_extspec <> OracleKind class
binder 59774:59778 <> Espec:597
R59801:59809 VST.veric.seplog <> tycontext ind
binder 59794:59798 <> Delta:598
binder 59823:59824 <> sh:599
binder 59826:59827 <> id:600
binder 59829:59829 <> P:601
binder 59831:59832 <> e1:602
binder 59834:59835 <> t2:603
R59842:59844 compcert.common.Values <> val ind
binder 59838:59839 <> v2:604
R59882:59889 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59927:59934 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59952:59959 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R60047:60054 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R60056:60060 VST.floyd.SeparationLogicFacts Def semax defax
R60199:60215 VST.veric.SeparationLogic <> normal_ret_assert def
R60218:60220 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R60228:60229 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R60225:60227 compcert.common.Values <> val ind
binder 60221:60223 <> old:605
R60261:60307 VST.msl.seplog <> ::logic:x_'&&'_x not
R60325:60325 VST.msl.seplog <> ::logic:x_'&&'_x not
R60230:60234 VST.veric.SeparationLogic <> local def
R60237:60237 VST.veric.lift LiftNotation :::'`'_x not
R60240:60259 VST.veric.lift LiftNotation :::'`'_x not
R60238:60239 Coq.Init.Logic <> eq ind
R60255:60256 VST.veric.lift LiftNotation :::'`'_x not
R60257:60258 VST.floyd.SeparationLogicFacts <> v2:604 var
R60242:60248 VST.veric.mpred <> eval_id def
R60250:60251 VST.floyd.SeparationLogicFacts <> id:600 var
R60308:60312 VST.veric.seplog <> subst def
R60324:60324 VST.floyd.SeparationLogicFacts <> P:601 var
R60318:60318 VST.veric.lift LiftNotation :::'`'_x not
R60319:60321 VST.floyd.SeparationLogicFacts <> old:605 var
R60314:60315 VST.floyd.SeparationLogicFacts <> id:600 var
R60179:60182 compcert.cfrontend.Clight <> Sset constr
R60187:60188 VST.floyd.SeparationLogicFacts <> e1:602 var
R60184:60185 VST.floyd.SeparationLogicFacts <> id:600 var
R60085:60089 VST.msl.seplog <> ::logic:'|>'_x not
R60168:60168 VST.msl.seplog <> ::logic:'|>'_x not
R60153:60166 VST.msl.seplog <> ::logic:x_'&&'_x not
R60090:60090 VST.msl.seplog <> ::logic:x_'&&'_x not
R60109:60120 VST.msl.seplog <> ::logic:x_'&&'_x not
R60091:60099 VST.veric.SeparationLogic <> tc_lvalue def
R60107:60108 VST.floyd.SeparationLogicFacts <> e1:602 var
R60101:60105 VST.floyd.SeparationLogicFacts <> Delta:598 var
R60121:60125 VST.veric.SeparationLogic <> local def
R60128:60129 VST.veric.lift LiftNotation :::'`('_x_')' not
R60151:60151 VST.veric.lift LiftNotation :::'`('_x_')' not
R60130:60135 VST.veric.Cop2 <> tc_val def
R60149:60150 VST.floyd.SeparationLogicFacts <> v2:604 var
R60138:60143 compcert.cfrontend.Clight <> typeof def
R60145:60146 VST.floyd.SeparationLogicFacts <> e1:602 var
R60167:60167 VST.floyd.SeparationLogicFacts <> P:601 var
R60071:60075 VST.floyd.SeparationLogicFacts <> Delta:598 var
R60065:60069 VST.floyd.SeparationLogicFacts <> Espec:597 var
R60062:60063 VST.floyd.SeparationLogicFacts <> CS:596 var
R59989:59993 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R59984:59987 VST.msl.seplog <> ::logic:x_'&&'_x not
R59960:59964 VST.veric.SeparationLogic <> local def
R59967:59976 VST.veric.SeparationLogic <> tc_environ def
R59978:59982 VST.floyd.SeparationLogicFacts <> Delta:598 var
R59988:59988 VST.floyd.SeparationLogicFacts <> P:601 var
R60042:60044 VST.msl.seplog <> ::logic:x_'*'_x not
R59994:59995 VST.veric.lift LiftNotation :::'`('_x_')' not
R60017:60041 VST.veric.lift LiftNotation :::'`('_x_')' not
R59996:60001 VST.veric.SeparationLogic <> mapsto def
R60007:60012 compcert.cfrontend.Clight <> typeof def
R60014:60015 VST.floyd.SeparationLogicFacts <> e1:602 var
R60003:60004 VST.floyd.SeparationLogicFacts <> sh:599 var
R60037:60038 VST.veric.lift LiftNotation :::'`'_x not
R60039:60040 VST.floyd.SeparationLogicFacts <> v2:604 var
R60020:60030 VST.veric.expr <> eval_lvalue def
R60032:60033 VST.floyd.SeparationLogicFacts <> e1:602 var
R60045:60046 VST.msl.seplog <> TT meth
R59935:59948 VST.veric.shares <> readable_share def
R59950:59951 VST.floyd.SeparationLogicFacts <> sh:599 var
R59920:59922 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59890:59904 VST.veric.expr <> is_neutral_cast def
R59918:59919 VST.floyd.SeparationLogicFacts <> t2:603 var
R59907:59912 compcert.cfrontend.Clight <> typeof def
R59914:59915 VST.floyd.SeparationLogicFacts <> e1:602 var
R59923:59926 Coq.Init.Datatypes <> true constr
R59872:59874 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59852:59862 VST.veric.SeparationLogic <> typeof_temp def
R59870:59871 VST.floyd.SeparationLogicFacts <> id:600 var
R59864:59868 VST.floyd.SeparationLogicFacts <> Delta:598 var
R59875:59878 Coq.Init.Datatypes <> Some constr
R59880:59881 VST.floyd.SeparationLogicFacts <> t2:603 var
R60356:60364 VST.floyd.SeparationLogicFacts LoadB2F semax_pre thm
R60376:60394 VST.floyd.SeparationLogicFacts LoadB semax_load_backward prfax
R60356:60364 VST.floyd.SeparationLogicFacts LoadB2F semax_pre thm
R60376:60394 VST.floyd.SeparationLogicFacts LoadB semax_load_backward prfax
R60407:60415 VST.msl.seplog <> exp_right meth
R60407:60415 VST.msl.seplog <> exp_right meth
R60431:60439 VST.msl.seplog <> exp_right meth
R60431:60439 VST.msl.seplog <> exp_right meth
R60455:60463 VST.msl.seplog <> exp_right meth
R60455:60463 VST.msl.seplog <> exp_right meth
R60478:60487 VST.msl.seplog <> andp_right meth
R60497:60506 VST.msl.seplog <> prop_right meth
R60478:60487 VST.msl.seplog <> andp_right meth
R60497:60506 VST.msl.seplog <> prop_right meth
R60526:60537 VST.floyd.assert_lemmas <> later_ENTAIL thm
R60526:60537 VST.floyd.assert_lemmas <> later_ENTAIL thm
R60551:60560 VST.msl.log_normalize <> andp_assoc thm
R60567:60571 VST.veric.seplog <> subst def
R60551:60560 VST.msl.log_normalize <> andp_assoc thm
R60567:60571 VST.veric.seplog <> subst def
R60551:60560 VST.msl.log_normalize <> andp_assoc thm
R60567:60571 VST.veric.seplog <> subst def
R60590:60600 VST.floyd.assert_lemmas <> andp_ENTAIL thm
R60610:60620 VST.floyd.assert_lemmas <> ENTAIL_refl thm
R60590:60600 VST.floyd.assert_lemmas <> andp_ENTAIL thm
R60610:60620 VST.floyd.assert_lemmas <> ENTAIL_refl thm
R60634:60643 VST.msl.seplog <> andp_right meth
R60634:60643 VST.msl.seplog <> andp_right meth
R60662:60670 VST.floyd.assert_lemmas <> subst_exp thm
R60662:60670 VST.floyd.assert_lemmas <> subst_exp thm
R60662:60670 VST.floyd.assert_lemmas <> subst_exp thm
R60734:60740 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R60725:60728 VST.msl.seplog <> ::logic:x_'&&'_x not
R60697:60701 VST.veric.SeparationLogic <> local def
R60704:60713 VST.veric.SeparationLogic <> tc_environ def
R60741:60743 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R60751:60759 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R60748:60750 compcert.common.Values <> val ind
binder 60744:60744 <> b:606
R60760:60764 VST.veric.seplog <> subst def
R60811:60814 VST.msl.seplog <> ::logic:x_'&&'_x not
R60777:60781 VST.veric.SeparationLogic <> local def
R60784:60786 VST.veric.lift LiftNotation :::'`'_x not
R60789:60809 VST.veric.lift LiftNotation :::'`'_x not
R60787:60788 Coq.Init.Logic <> eq ind
R60805:60806 VST.veric.lift LiftNotation :::'`'_x not
R60792:60798 VST.veric.mpred <> eval_id def
R60815:60819 VST.veric.seplog <> subst def
R60825:60826 VST.veric.lift LiftNotation :::'`'_x not
R60827:60827 VST.floyd.SeparationLogicFacts <> b:606 var
R60770:60771 VST.veric.lift LiftNotation :::'`'_x not
R60734:60740 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R60725:60728 VST.msl.seplog <> ::logic:x_'&&'_x not
R60697:60701 VST.veric.SeparationLogic <> local def
R60704:60713 VST.veric.SeparationLogic <> tc_environ def
R60741:60743 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R60751:60759 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R60748:60750 compcert.common.Values <> val ind
binder 60744:60744 <> b:607
R60760:60764 VST.veric.seplog <> subst def
R60811:60814 VST.msl.seplog <> ::logic:x_'&&'_x not
R60777:60781 VST.veric.SeparationLogic <> local def
R60784:60786 VST.veric.lift LiftNotation :::'`'_x not
R60789:60809 VST.veric.lift LiftNotation :::'`'_x not
R60787:60788 Coq.Init.Logic <> eq ind
R60805:60806 VST.veric.lift LiftNotation :::'`'_x not
R60792:60798 VST.veric.mpred <> eval_id def
R60815:60819 VST.veric.seplog <> subst def
R60825:60826 VST.veric.lift LiftNotation :::'`'_x not
R60827:60827 VST.floyd.SeparationLogicFacts <> b:607 var
R60770:60771 VST.veric.lift LiftNotation :::'`'_x not
R60848:60856 VST.msl.seplog <> exp_right meth
R60859:60865 VST.veric.mpred <> eval_id def
R60848:60856 VST.msl.seplog <> exp_right meth
R60859:60865 VST.veric.mpred <> eval_id def
R60912:60916 VST.veric.SeparationLogic <> local def
R60919:60923 VST.veric.mpred <> lift1 def
R60955:60965 VST.veric.SeparationLogic <> typeof_temp def
R60985:60985 compcert.lib.Maps <> :::x_'!'_x not
R61002:61005 compcert.lib.Maps <> :::x_'!'_x not
R60986:60995 VST.veric.seplog <> temp_types def
R60985:60985 compcert.lib.Maps <> :::x_'!'_x not
R61002:61005 compcert.lib.Maps <> :::x_'!'_x not
R60986:60995 VST.veric.seplog <> temp_types def
R61046:61055 VST.msl.seplog <> andp_right meth
R61070:61079 VST.floyd.SeparationLogicFacts <> subst_self thm
R61046:61055 VST.msl.seplog <> andp_right meth
R61070:61079 VST.floyd.SeparationLogicFacts <> subst_self thm
R61070:61079 VST.floyd.SeparationLogicFacts <> subst_self thm
R61106:61115 VST.msl.seplog <> prop_right meth
R61106:61115 VST.msl.seplog <> prop_right meth
R61127:61131 VST.veric.seplog <> subst def
R61142:61153 VST.veric.mpred <> eval_id_same thm
R61142:61153 VST.veric.mpred <> eval_id_same thm
R61166:61172 VST.floyd.SeparationLogicFacts LoadB2F <> mod
R61208:61240 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R61259:61299 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R61325:61327 VST.floyd.SeparationLogicFacts Def <> modtype
R61344:61383 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION <> mod
R61409:61411 VST.floyd.SeparationLogicFacts Def <> modtype
R61433:61479 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_FORWARD <> mod
R61505:61507 VST.floyd.SeparationLogicFacts Def <> modtype
R61518:61565 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_BACKWARD <> mod
R61591:61593 VST.floyd.SeparationLogicFacts Def <> modtype
mod 61183:61193 <> CastLoadF2B
R61616:61618 VST.floyd.SeparationLogicFacts Def <> modtype
mod 61604:61611 <> CastLoadF2B.CSHL_Def
R61643:61656 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R61659:61661 VST.floyd.SeparationLogicFacts Def <> modtype
R61665:61670 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 61628:61638 <> CastLoadF2B.ConseqFacts
R61694:61705 VST.floyd.SeparationLogicFacts GenExtrFacts <> modtype
R61708:61710 VST.floyd.SeparationLogicFacts Def <> modtype
R61714:61719 VST.floyd.SeparationLogicFacts Conseq <> modtype
R61723:61726 VST.floyd.SeparationLogicFacts Extr <> modtype
mod 61681:61689 <> CastLoadF2B.ExtrFacts
prf 61835:61858 CastLoadF2B semax_cast_load_backward
R61873:61881 VST.veric.mpred <> compspecs class
binder 61869:61870 <> CS:608
R61892:61901 VST.veric.juicy_extspec <> OracleKind class
binder 61885:61889 <> Espec:609
R61912:61920 VST.veric.seplog <> tycontext ind
binder 61905:61909 <> Delta:610
R61944:61945 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61946:61950 VST.veric.mpred <> mpred def
R61937:61943 VST.veric.mpred <> environ ind
binder 61934:61934 <> P:611
binder 61953:61954 <> id:612
binder 61956:61956 <> e:613
R61964:61968 VST.floyd.SeparationLogicFacts Def semax defax
R62513:62529 VST.veric.SeparationLogic <> normal_ret_assert def
R62531:62531 VST.floyd.SeparationLogicFacts <> P:611 var
R62501:62504 compcert.cfrontend.Clight <> Sset constr
R62509:62509 VST.floyd.SeparationLogicFacts <> e:613 var
R62506:62507 VST.floyd.SeparationLogicFacts <> id:612 var
R61994:61996 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R62006:62007 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R62001:62005 VST.msl.shares <> share def
binder 61997:61998 <> sh:614
R62008:62010 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R62019:62020 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R62015:62018 compcert.cfrontend.Clight <> expr ind
binder 62011:62012 <> e1:615
R62021:62023 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R62032:62033 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R62028:62031 compcert.cfrontend.Ctypes <> type ind
binder 62024:62025 <> t1:616
R62034:62036 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R62044:62059 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R62041:62043 compcert.common.Values <> val ind
binder 62037:62038 <> v2:617
R62236:62248 VST.msl.seplog <> ::logic:x_'&&'_x not
R62060:62063 VST.msl.seplog <> ::logic:'!!'_x not
R62235:62235 VST.msl.seplog <> ::logic:'!!'_x not
R62079:62100 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R62065:62067 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62064:62064 VST.floyd.SeparationLogicFacts <> e:613 var
R62068:62072 compcert.cfrontend.Clight <> Ecast constr
R62077:62078 VST.floyd.SeparationLogicFacts <> t1:616 var
R62074:62075 VST.floyd.SeparationLogicFacts <> e1:615 var
R62131:62152 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R62121:62123 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62101:62111 VST.veric.SeparationLogic <> typeof_temp def
R62119:62120 VST.floyd.SeparationLogicFacts <> id:612 var
R62113:62117 VST.floyd.SeparationLogicFacts <> Delta:610 var
R62124:62127 Coq.Init.Datatypes <> Some constr
R62129:62130 VST.floyd.SeparationLogicFacts <> t1:616 var
R62196:62217 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R62188:62190 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62153:62172 VST.veric.SeparationLogic <> cast_pointer_to_bool def
R62186:62187 VST.floyd.SeparationLogicFacts <> t1:616 var
R62175:62180 compcert.cfrontend.Clight <> typeof def
R62182:62183 VST.floyd.SeparationLogicFacts <> e1:615 var
R62191:62195 Coq.Init.Datatypes <> false constr
R62218:62231 VST.veric.shares <> readable_share def
R62233:62234 VST.floyd.SeparationLogicFacts <> sh:614 var
R62249:62253 VST.msl.seplog <> ::logic:'|>'_x not
R62489:62489 VST.msl.seplog <> ::logic:'|>'_x not
R62417:62434 VST.msl.seplog <> ::logic:x_'&&'_x not
R62345:62363 VST.msl.seplog <> ::logic:x_'&&'_x not
R62416:62416 VST.msl.seplog <> ::logic:x_'&&'_x not
R62254:62254 VST.msl.seplog <> ::logic:x_'&&'_x not
R62273:62291 VST.msl.seplog <> ::logic:x_'&&'_x not
R62255:62263 VST.veric.SeparationLogic <> tc_lvalue def
R62271:62272 VST.floyd.SeparationLogicFacts <> e1:615 var
R62265:62269 VST.floyd.SeparationLogicFacts <> Delta:610 var
R62292:62296 VST.veric.SeparationLogic <> local def
R62299:62300 VST.veric.lift LiftNotation :::'`('_x_')' not
R62310:62343 VST.veric.lift LiftNotation :::'`('_x_')' not
R62301:62306 VST.veric.Cop2 <> tc_val def
R62308:62309 VST.floyd.SeparationLogicFacts <> t1:616 var
R62313:62314 VST.veric.lift LiftNotation :::'`('_x_')' not
R62342:62342 VST.veric.lift LiftNotation :::'`('_x_')' not
R62315:62323 VST.veric.expr <> eval_cast def
R62340:62341 VST.floyd.SeparationLogicFacts <> v2:617 var
R62337:62338 VST.floyd.SeparationLogicFacts <> t1:616 var
R62326:62331 compcert.cfrontend.Clight <> typeof def
R62333:62334 VST.floyd.SeparationLogicFacts <> e1:615 var
R62411:62413 VST.msl.seplog <> ::logic:x_'*'_x not
R62364:62365 VST.veric.lift LiftNotation :::'`('_x_')' not
R62387:62410 VST.veric.lift LiftNotation :::'`('_x_')' not
R62366:62371 VST.veric.SeparationLogic <> mapsto def
R62377:62382 compcert.cfrontend.Clight <> typeof def
R62384:62385 VST.floyd.SeparationLogicFacts <> e1:615 var
R62373:62374 VST.floyd.SeparationLogicFacts <> sh:614 var
R62407:62407 VST.veric.lift LiftNotation :::'`'_x not
R62408:62409 VST.floyd.SeparationLogicFacts <> v2:617 var
R62390:62400 VST.veric.expr <> eval_lvalue def
R62402:62403 VST.floyd.SeparationLogicFacts <> e1:615 var
R62414:62415 VST.msl.seplog <> TT meth
R62435:62439 VST.veric.seplog <> subst def
R62488:62488 VST.floyd.SeparationLogicFacts <> P:611 var
R62445:62446 VST.veric.lift LiftNotation :::'`('_x_')' not
R62485:62485 VST.veric.lift LiftNotation :::'`('_x_')' not
R62447:62455 VST.veric.val_lemmas <> force_val def
R62458:62465 VST.veric.Clight_Cop2 <> sem_cast def
R62482:62483 VST.floyd.SeparationLogicFacts <> v2:617 var
R62479:62480 VST.floyd.SeparationLogicFacts <> t1:616 var
R62468:62473 compcert.cfrontend.Clight <> typeof def
R62475:62476 VST.floyd.SeparationLogicFacts <> e1:615 var
R62441:62442 VST.floyd.SeparationLogicFacts <> id:612 var
R61979:61983 VST.floyd.SeparationLogicFacts <> Delta:610 var
R61973:61977 VST.floyd.SeparationLogicFacts <> Espec:609 var
R61970:61971 VST.floyd.SeparationLogicFacts <> CS:608 var
R62560:62579 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R62560:62579 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R62600:62619 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R62600:62619 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R62640:62659 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R62640:62659 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R62680:62699 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R62680:62699 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R62720:62737 VST.floyd.SeparationLogicFacts CastLoadF2B semax_extract_prop thm
R62720:62737 VST.floyd.SeparationLogicFacts CastLoadF2B semax_extract_prop thm
R62785:62794 VST.msl.log_normalize <> andp_assoc thm
R62801:62805 VST.veric.seplog <> subst def
R62785:62794 VST.msl.log_normalize <> andp_assoc thm
R62801:62805 VST.veric.seplog <> subst def
R62785:62794 VST.msl.log_normalize <> andp_assoc thm
R62801:62805 VST.veric.seplog <> subst def
R62825:62835 VST.floyd.SeparationLogicFacts CastLoadF2B semax_post' thm
R62851:62873 VST.floyd.SeparationLogicFacts CastLoadF semax_cast_load_forward prfax
R62825:62835 VST.floyd.SeparationLogicFacts CastLoadF2B semax_post' thm
R62851:62873 VST.floyd.SeparationLogicFacts CastLoadF semax_cast_load_forward prfax
R62896:62904 VST.msl.log_normalize <> exp_andp2 thm
R62896:62904 VST.msl.log_normalize <> exp_andp2 thm
R62896:62904 VST.msl.log_normalize <> exp_andp2 thm
R62917:62924 VST.msl.seplog <> exp_left meth
R62917:62924 VST.msl.seplog <> exp_left meth
R63113:63116 VST.msl.seplog <> ::logic:x_'&&'_x not
R63021:63025 VST.msl.seplog <> ::logic:x_'&&'_x not
R63112:63112 VST.msl.seplog <> ::logic:x_'&&'_x not
R62997:63001 VST.veric.SeparationLogic <> local def
R63004:63013 VST.veric.SeparationLogic <> tc_environ def
R63026:63030 VST.veric.SeparationLogic <> local def
R63033:63035 VST.veric.lift LiftNotation :::'`'_x not
R63038:63110 VST.veric.lift LiftNotation :::'`'_x not
R63036:63037 Coq.Init.Logic <> eq ind
R63054:63058 VST.veric.seplog <> subst def
R63072:63075 VST.veric.lift LiftNotation :::'`'_x not
R63100:63108 VST.veric.lift LiftNotation :::'`'_x not
R63076:63084 VST.veric.expr <> eval_cast def
R63087:63092 compcert.cfrontend.Clight <> typeof def
R63104:63105 VST.veric.lift LiftNotation :::'`'_x not
R63064:63065 VST.veric.lift LiftNotation :::'`'_x not
R63041:63047 VST.veric.mpred <> eval_id def
R63117:63121 VST.veric.seplog <> subst def
R63127:63128 VST.veric.lift LiftNotation :::'`('_x_')' not
R63167:63167 VST.veric.lift LiftNotation :::'`('_x_')' not
R63129:63137 VST.veric.val_lemmas <> force_val def
R63140:63147 VST.veric.Clight_Cop2 <> sem_cast def
R63150:63155 compcert.cfrontend.Clight <> typeof def
R62977:62989 VST.msl.seplog <> derives_trans meth
R63113:63116 VST.msl.seplog <> ::logic:x_'&&'_x not
R63021:63025 VST.msl.seplog <> ::logic:x_'&&'_x not
R63112:63112 VST.msl.seplog <> ::logic:x_'&&'_x not
R62997:63001 VST.veric.SeparationLogic <> local def
R63004:63013 VST.veric.SeparationLogic <> tc_environ def
R63026:63030 VST.veric.SeparationLogic <> local def
R63033:63035 VST.veric.lift LiftNotation :::'`'_x not
R63038:63110 VST.veric.lift LiftNotation :::'`'_x not
R63036:63037 Coq.Init.Logic <> eq ind
R63054:63058 VST.veric.seplog <> subst def
R63072:63075 VST.veric.lift LiftNotation :::'`'_x not
R63100:63108 VST.veric.lift LiftNotation :::'`'_x not
R63076:63084 VST.veric.expr <> eval_cast def
R63087:63092 compcert.cfrontend.Clight <> typeof def
R63104:63105 VST.veric.lift LiftNotation :::'`'_x not
R63064:63065 VST.veric.lift LiftNotation :::'`'_x not
R63041:63047 VST.veric.mpred <> eval_id def
R63117:63121 VST.veric.seplog <> subst def
R63127:63128 VST.veric.lift LiftNotation :::'`('_x_')' not
R63167:63167 VST.veric.lift LiftNotation :::'`('_x_')' not
R63129:63137 VST.veric.val_lemmas <> force_val def
R63140:63147 VST.veric.Clight_Cop2 <> sem_cast def
R63150:63155 compcert.cfrontend.Clight <> typeof def
R62977:62989 VST.msl.seplog <> derives_trans meth
R63212:63216 VST.veric.SeparationLogic <> local def
R63219:63223 VST.veric.mpred <> lift1 def
R63257:63267 VST.veric.SeparationLogic <> typeof_temp def
R63289:63289 compcert.lib.Maps <> :::x_'!'_x not
R63306:63309 compcert.lib.Maps <> :::x_'!'_x not
R63290:63299 VST.veric.seplog <> temp_types def
R63289:63289 compcert.lib.Maps <> :::x_'!'_x not
R63306:63309 compcert.lib.Maps <> :::x_'!'_x not
R63290:63299 VST.veric.seplog <> temp_types def
R63357:63366 VST.floyd.SeparationLogicFacts <> subst_self thm
R63357:63366 VST.floyd.SeparationLogicFacts <> subst_self thm
R63357:63366 VST.floyd.SeparationLogicFacts <> subst_self thm
R63410:63420 VST.floyd.SeparationLogicFacts CastLoadF2B <> mod
R63456:63488 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R63507:63547 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R63573:63575 VST.floyd.SeparationLogicFacts Def <> modtype
R63597:63644 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_BACKWARD <> mod
R63670:63672 VST.floyd.SeparationLogicFacts Def <> modtype
R63683:63729 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_FORWARD <> mod
R63755:63757 VST.floyd.SeparationLogicFacts Def <> modtype
mod 63431:63441 <> CastLoadB2F
R63780:63782 VST.floyd.SeparationLogicFacts Def <> modtype
mod 63768:63775 <> CastLoadB2F.CSHL_Def
R63807:63820 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R63823:63825 VST.floyd.SeparationLogicFacts Def <> modtype
R63829:63834 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 63792:63802 <> CastLoadB2F.ConseqFacts
prf 63912:63934 CastLoadB2F semax_cast_load_forward
R63949:63957 VST.veric.mpred <> compspecs class
binder 63945:63946 <> CS:618
R63968:63977 VST.veric.juicy_extspec <> OracleKind class
binder 63961:63965 <> Espec:619
R63988:63996 VST.veric.seplog <> tycontext ind
binder 63981:63985 <> Delta:620
binder 64009:64010 <> sh:621
binder 64012:64013 <> id:622
binder 64015:64015 <> P:623
binder 64017:64018 <> e1:624
binder 64020:64021 <> t1:625
R64028:64030 compcert.common.Values <> val ind
binder 64024:64025 <> v2:626
R64068:64074 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R64118:64125 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R64143:64150 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R64237:64244 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R64246:64250 VST.floyd.SeparationLogicFacts Def semax defax
R64421:64437 VST.veric.SeparationLogic <> normal_ret_assert def
R64440:64442 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R64450:64451 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R64447:64449 compcert.common.Values <> val ind
binder 64443:64445 <> old:627
R64527:64573 VST.msl.seplog <> ::logic:x_'&&'_x not
R64591:64591 VST.msl.seplog <> ::logic:x_'&&'_x not
R64452:64456 VST.veric.SeparationLogic <> local def
R64459:64459 VST.veric.lift LiftNotation :::'`'_x not
R64462:64525 VST.veric.lift LiftNotation :::'`'_x not
R64460:64461 Coq.Init.Logic <> eq ind
R64477:64481 VST.veric.seplog <> subst def
R64494:64495 VST.veric.lift LiftNotation :::'`('_x_')' not
R64523:64523 VST.veric.lift LiftNotation :::'`('_x_')' not
R64496:64504 VST.veric.expr <> eval_cast def
R64521:64522 VST.floyd.SeparationLogicFacts <> v2:626 var
R64518:64519 VST.floyd.SeparationLogicFacts <> t1:625 var
R64507:64512 compcert.cfrontend.Clight <> typeof def
R64514:64515 VST.floyd.SeparationLogicFacts <> e1:624 var
R64487:64487 VST.veric.lift LiftNotation :::'`'_x not
R64488:64490 VST.floyd.SeparationLogicFacts <> old:627 var
R64483:64484 VST.floyd.SeparationLogicFacts <> id:622 var
R64464:64470 VST.veric.mpred <> eval_id def
R64472:64473 VST.floyd.SeparationLogicFacts <> id:622 var
R64574:64578 VST.veric.seplog <> subst def
R64590:64590 VST.floyd.SeparationLogicFacts <> P:623 var
R64584:64584 VST.veric.lift LiftNotation :::'`'_x not
R64585:64587 VST.floyd.SeparationLogicFacts <> old:627 var
R64580:64581 VST.floyd.SeparationLogicFacts <> id:622 var
R64390:64393 compcert.cfrontend.Clight <> Sset constr
R64399:64403 compcert.cfrontend.Clight <> Ecast constr
R64408:64409 VST.floyd.SeparationLogicFacts <> t1:625 var
R64405:64406 VST.floyd.SeparationLogicFacts <> e1:624 var
R64395:64396 VST.floyd.SeparationLogicFacts <> id:622 var
R64275:64279 VST.msl.seplog <> ::logic:'|>'_x not
R64379:64379 VST.msl.seplog <> ::logic:'|>'_x not
R64364:64377 VST.msl.seplog <> ::logic:x_'&&'_x not
R64280:64280 VST.msl.seplog <> ::logic:x_'&&'_x not
R64299:64310 VST.msl.seplog <> ::logic:x_'&&'_x not
R64281:64289 VST.veric.SeparationLogic <> tc_lvalue def
R64297:64298 VST.floyd.SeparationLogicFacts <> e1:624 var
R64291:64295 VST.floyd.SeparationLogicFacts <> Delta:620 var
R64311:64315 VST.veric.SeparationLogic <> local def
R64318:64319 VST.veric.lift LiftNotation :::'`('_x_')' not
R64329:64362 VST.veric.lift LiftNotation :::'`('_x_')' not
R64320:64325 VST.veric.Cop2 <> tc_val def
R64327:64328 VST.floyd.SeparationLogicFacts <> t1:625 var
R64332:64333 VST.veric.lift LiftNotation :::'`('_x_')' not
R64361:64361 VST.veric.lift LiftNotation :::'`('_x_')' not
R64334:64342 VST.veric.expr <> eval_cast def
R64359:64360 VST.floyd.SeparationLogicFacts <> v2:626 var
R64356:64357 VST.floyd.SeparationLogicFacts <> t1:625 var
R64345:64350 compcert.cfrontend.Clight <> typeof def
R64352:64353 VST.floyd.SeparationLogicFacts <> e1:624 var
R64378:64378 VST.floyd.SeparationLogicFacts <> P:623 var
R64261:64265 VST.floyd.SeparationLogicFacts <> Delta:620 var
R64255:64259 VST.floyd.SeparationLogicFacts <> Espec:619 var
R64252:64253 VST.floyd.SeparationLogicFacts <> CS:618 var
R64180:64184 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R64175:64178 VST.msl.seplog <> ::logic:x_'&&'_x not
R64151:64155 VST.veric.SeparationLogic <> local def
R64158:64167 VST.veric.SeparationLogic <> tc_environ def
R64169:64173 VST.floyd.SeparationLogicFacts <> Delta:620 var
R64179:64179 VST.floyd.SeparationLogicFacts <> P:623 var
R64232:64234 VST.msl.seplog <> ::logic:x_'*'_x not
R64185:64186 VST.veric.lift LiftNotation :::'`('_x_')' not
R64208:64231 VST.veric.lift LiftNotation :::'`('_x_')' not
R64187:64192 VST.veric.SeparationLogic <> mapsto def
R64198:64203 compcert.cfrontend.Clight <> typeof def
R64205:64206 VST.floyd.SeparationLogicFacts <> e1:624 var
R64194:64195 VST.floyd.SeparationLogicFacts <> sh:621 var
R64228:64228 VST.veric.lift LiftNotation :::'`'_x not
R64229:64230 VST.floyd.SeparationLogicFacts <> v2:626 var
R64211:64221 VST.veric.expr <> eval_lvalue def
R64223:64224 VST.floyd.SeparationLogicFacts <> e1:624 var
R64235:64236 VST.msl.seplog <> TT meth
R64126:64139 VST.veric.shares <> readable_share def
R64141:64142 VST.floyd.SeparationLogicFacts <> sh:621 var
R64110:64112 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64075:64094 VST.veric.SeparationLogic <> cast_pointer_to_bool def
R64108:64109 VST.floyd.SeparationLogicFacts <> t1:625 var
R64097:64102 compcert.cfrontend.Clight <> typeof def
R64104:64105 VST.floyd.SeparationLogicFacts <> e1:624 var
R64113:64117 Coq.Init.Datatypes <> false constr
R64058:64060 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64038:64048 VST.veric.SeparationLogic <> typeof_temp def
R64056:64057 VST.floyd.SeparationLogicFacts <> id:622 var
R64050:64054 VST.floyd.SeparationLogicFacts <> Delta:620 var
R64061:64064 Coq.Init.Datatypes <> Some constr
R64066:64067 VST.floyd.SeparationLogicFacts <> t1:625 var
R64622:64630 VST.floyd.SeparationLogicFacts CastLoadB2F semax_pre thm
R64642:64665 VST.floyd.SeparationLogicFacts CastLoadB semax_cast_load_backward prfax
R64622:64630 VST.floyd.SeparationLogicFacts CastLoadB2F semax_pre thm
R64642:64665 VST.floyd.SeparationLogicFacts CastLoadB semax_cast_load_backward prfax
R64678:64686 VST.msl.seplog <> exp_right meth
R64678:64686 VST.msl.seplog <> exp_right meth
R64702:64710 VST.msl.seplog <> exp_right meth
R64702:64710 VST.msl.seplog <> exp_right meth
R64726:64734 VST.msl.seplog <> exp_right meth
R64726:64734 VST.msl.seplog <> exp_right meth
R64750:64758 VST.msl.seplog <> exp_right meth
R64750:64758 VST.msl.seplog <> exp_right meth
R64773:64782 VST.msl.seplog <> andp_right meth
R64792:64801 VST.msl.seplog <> prop_right meth
R64773:64782 VST.msl.seplog <> andp_right meth
R64792:64801 VST.msl.seplog <> prop_right meth
R64821:64832 VST.floyd.assert_lemmas <> later_ENTAIL thm
R64821:64832 VST.floyd.assert_lemmas <> later_ENTAIL thm
R64846:64855 VST.msl.log_normalize <> andp_assoc thm
R64862:64866 VST.veric.seplog <> subst def
R64846:64855 VST.msl.log_normalize <> andp_assoc thm
R64862:64866 VST.veric.seplog <> subst def
R64846:64855 VST.msl.log_normalize <> andp_assoc thm
R64862:64866 VST.veric.seplog <> subst def
R64885:64895 VST.floyd.assert_lemmas <> andp_ENTAIL thm
R64905:64915 VST.floyd.assert_lemmas <> ENTAIL_refl thm
R64885:64895 VST.floyd.assert_lemmas <> andp_ENTAIL thm
R64905:64915 VST.floyd.assert_lemmas <> ENTAIL_refl thm
R64929:64938 VST.msl.seplog <> andp_right meth
R64929:64938 VST.msl.seplog <> andp_right meth
R64957:64965 VST.floyd.assert_lemmas <> subst_exp thm
R64957:64965 VST.floyd.assert_lemmas <> subst_exp thm
R64957:64965 VST.floyd.assert_lemmas <> subst_exp thm
R65029:65035 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R65020:65023 VST.msl.seplog <> ::logic:x_'&&'_x not
R64992:64996 VST.veric.SeparationLogic <> local def
R64999:65008 VST.veric.SeparationLogic <> tc_environ def
R65036:65038 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R65046:65054 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R65043:65045 compcert.common.Values <> val ind
binder 65039:65039 <> b:628
R65055:65059 VST.veric.seplog <> subst def
R65188:65191 VST.msl.seplog <> ::logic:x_'&&'_x not
R65110:65114 VST.veric.SeparationLogic <> local def
R65117:65119 VST.veric.lift LiftNotation :::'`'_x not
R65122:65186 VST.veric.lift LiftNotation :::'`'_x not
R65120:65121 Coq.Init.Logic <> eq ind
R65138:65142 VST.veric.seplog <> subst def
R65154:65156 VST.veric.lift LiftNotation :::'`'_x not
R65184:65184 VST.veric.lift LiftNotation :::'`'_x not
R65157:65165 VST.veric.expr <> eval_cast def
R65168:65173 compcert.cfrontend.Clight <> typeof def
R65148:65149 VST.veric.lift LiftNotation :::'`'_x not
R65150:65150 VST.floyd.SeparationLogicFacts <> b:628 var
R65125:65131 VST.veric.mpred <> eval_id def
R65192:65196 VST.veric.seplog <> subst def
R65202:65203 VST.veric.lift LiftNotation :::'`'_x not
R65204:65204 VST.floyd.SeparationLogicFacts <> b:628 var
R65065:65067 VST.veric.lift LiftNotation :::'`'_x not
R65106:65106 VST.veric.lift LiftNotation :::'`'_x not
R65068:65076 VST.veric.val_lemmas <> force_val def
R65079:65086 VST.veric.Clight_Cop2 <> sem_cast def
R65089:65094 compcert.cfrontend.Clight <> typeof def
R65029:65035 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R65020:65023 VST.msl.seplog <> ::logic:x_'&&'_x not
R64992:64996 VST.veric.SeparationLogic <> local def
R64999:65008 VST.veric.SeparationLogic <> tc_environ def
R65036:65038 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R65046:65054 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R65043:65045 compcert.common.Values <> val ind
binder 65039:65039 <> b:629
R65055:65059 VST.veric.seplog <> subst def
R65188:65191 VST.msl.seplog <> ::logic:x_'&&'_x not
R65110:65114 VST.veric.SeparationLogic <> local def
R65117:65119 VST.veric.lift LiftNotation :::'`'_x not
R65122:65186 VST.veric.lift LiftNotation :::'`'_x not
R65120:65121 Coq.Init.Logic <> eq ind
R65138:65142 VST.veric.seplog <> subst def
R65154:65156 VST.veric.lift LiftNotation :::'`'_x not
R65184:65184 VST.veric.lift LiftNotation :::'`'_x not
R65157:65165 VST.veric.expr <> eval_cast def
R65168:65173 compcert.cfrontend.Clight <> typeof def
R65148:65149 VST.veric.lift LiftNotation :::'`'_x not
R65150:65150 VST.floyd.SeparationLogicFacts <> b:629 var
R65125:65131 VST.veric.mpred <> eval_id def
R65192:65196 VST.veric.seplog <> subst def
R65202:65203 VST.veric.lift LiftNotation :::'`'_x not
R65204:65204 VST.floyd.SeparationLogicFacts <> b:629 var
R65065:65067 VST.veric.lift LiftNotation :::'`'_x not
R65106:65106 VST.veric.lift LiftNotation :::'`'_x not
R65068:65076 VST.veric.val_lemmas <> force_val def
R65079:65086 VST.veric.Clight_Cop2 <> sem_cast def
R65089:65094 compcert.cfrontend.Clight <> typeof def
R65225:65233 VST.msl.seplog <> exp_right meth
R65236:65242 VST.veric.mpred <> eval_id def
R65225:65233 VST.msl.seplog <> exp_right meth
R65236:65242 VST.veric.mpred <> eval_id def
R65289:65293 VST.veric.SeparationLogic <> local def
R65296:65300 VST.veric.mpred <> lift1 def
R65332:65342 VST.veric.SeparationLogic <> typeof_temp def
R65362:65362 compcert.lib.Maps <> :::x_'!'_x not
R65379:65382 compcert.lib.Maps <> :::x_'!'_x not
R65363:65372 VST.veric.seplog <> temp_types def
R65362:65362 compcert.lib.Maps <> :::x_'!'_x not
R65379:65382 compcert.lib.Maps <> :::x_'!'_x not
R65363:65372 VST.veric.seplog <> temp_types def
R65423:65432 VST.msl.seplog <> andp_right meth
R65447:65456 VST.floyd.SeparationLogicFacts <> subst_self thm
R65423:65432 VST.msl.seplog <> andp_right meth
R65447:65456 VST.floyd.SeparationLogicFacts <> subst_self thm
R65447:65456 VST.floyd.SeparationLogicFacts <> subst_self thm
R65483:65492 VST.msl.seplog <> prop_right meth
R65483:65492 VST.msl.seplog <> prop_right meth
R65504:65508 VST.veric.seplog <> subst def
R65519:65530 VST.veric.mpred <> eval_id_same thm
R65519:65530 VST.veric.mpred <> eval_id_same thm
R65543:65553 VST.floyd.SeparationLogicFacts CastLoadB2F <> mod
R65584:65616 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R65635:65675 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R65701:65703 VST.floyd.SeparationLogicFacts Def <> modtype
R65720:65759 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION <> mod
R65785:65787 VST.floyd.SeparationLogicFacts Def <> modtype
R65804:65844 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SET_FORWARD <> mod
R65870:65872 VST.floyd.SeparationLogicFacts Def <> modtype
R65883:65924 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SET_BACKWARD <> mod
R65950:65952 VST.floyd.SeparationLogicFacts Def <> modtype
mod 65564:65569 <> SetF2B
R65975:65977 VST.floyd.SeparationLogicFacts Def <> modtype
mod 65963:65970 <> SetF2B.CSHL_Def
R66002:66015 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R66018:66020 VST.floyd.SeparationLogicFacts Def <> modtype
R66024:66029 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 65987:65997 <> SetF2B.ConseqFacts
R66053:66064 VST.floyd.SeparationLogicFacts GenExtrFacts <> modtype
R66067:66069 VST.floyd.SeparationLogicFacts Def <> modtype
R66073:66078 VST.floyd.SeparationLogicFacts Conseq <> modtype
R66082:66085 VST.floyd.SeparationLogicFacts Extr <> modtype
mod 66040:66048 <> SetF2B.ExtrFacts
prf 66189:66206 SetF2B semax_set_backward
R66221:66229 VST.veric.mpred <> compspecs class
binder 66217:66218 <> CS:630
R66240:66249 VST.veric.juicy_extspec <> OracleKind class
binder 66233:66237 <> Espec:631
R66260:66268 VST.veric.seplog <> tycontext ind
binder 66253:66257 <> Delta:632
R66292:66293 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R66294:66298 VST.veric.mpred <> mpred def
R66285:66291 VST.veric.mpred <> environ ind
binder 66282:66282 <> P:633
binder 66301:66302 <> id:634
binder 66304:66304 <> e:635
R66312:66316 VST.floyd.SeparationLogicFacts Def semax defax
R66482:66498 VST.veric.SeparationLogic <> normal_ret_assert def
R66500:66500 VST.floyd.SeparationLogicFacts <> P:633 var
R66470:66473 compcert.cfrontend.Clight <> Sset constr
R66478:66478 VST.floyd.SeparationLogicFacts <> e:635 var
R66475:66476 VST.floyd.SeparationLogicFacts <> id:634 var
R66342:66346 VST.msl.seplog <> ::logic:'|>'_x not
R66456:66456 VST.msl.seplog <> ::logic:'|>'_x not
R66415:66431 VST.msl.seplog <> ::logic:x_'&&'_x not
R66347:66347 VST.msl.seplog <> ::logic:x_'&&'_x not
R66363:66381 VST.msl.seplog <> ::logic:x_'&&'_x not
R66414:66414 VST.msl.seplog <> ::logic:x_'&&'_x not
R66348:66354 VST.veric.SeparationLogic <> tc_expr def
R66362:66362 VST.floyd.SeparationLogicFacts <> e:635 var
R66356:66360 VST.floyd.SeparationLogicFacts <> Delta:632 var
R66382:66391 VST.veric.SeparationLogic <> tc_temp_id def
R66413:66413 VST.floyd.SeparationLogicFacts <> e:635 var
R66407:66411 VST.floyd.SeparationLogicFacts <> Delta:632 var
R66397:66402 compcert.cfrontend.Clight <> typeof def
R66404:66404 VST.floyd.SeparationLogicFacts <> e:635 var
R66393:66394 VST.floyd.SeparationLogicFacts <> id:634 var
R66432:66436 VST.veric.seplog <> subst def
R66455:66455 VST.floyd.SeparationLogicFacts <> P:633 var
R66442:66450 VST.veric.expr <> eval_expr def
R66452:66452 VST.floyd.SeparationLogicFacts <> e:635 var
R66438:66439 VST.floyd.SeparationLogicFacts <> id:634 var
R66327:66331 VST.floyd.SeparationLogicFacts <> Delta:632 var
R66321:66325 VST.floyd.SeparationLogicFacts <> Espec:631 var
R66318:66319 VST.floyd.SeparationLogicFacts <> CS:630 var
R66545:66548 VST.msl.seplog <> ::logic:'|>'_x not
R66683:66683 VST.msl.seplog <> ::logic:'|>'_x not
R66598:66602 VST.msl.seplog <> ::logic:x_'&&'_x not
R66682:66682 VST.msl.seplog <> ::logic:x_'&&'_x not
R66549:66552 VST.msl.seplog <> ::logic:'!!'_x not
R66597:66597 VST.msl.seplog <> ::logic:'!!'_x not
R66553:66559 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R66561:66563 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R66596:66596 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 66560:66560 <> t:636
R66587:66589 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66564:66564 compcert.lib.Maps <> :::x_'!'_x not
R66581:66584 compcert.lib.Maps <> :::x_'!'_x not
R66565:66574 VST.veric.seplog <> temp_types def
R66590:66593 Coq.Init.Datatypes <> Some constr
R66595:66595 VST.floyd.SeparationLogicFacts <> t:636 var
R66654:66657 VST.msl.seplog <> ::logic:x_'&&'_x not
R66618:66621 VST.msl.seplog <> ::logic:x_'&&'_x not
R66603:66609 VST.veric.SeparationLogic <> tc_expr def
R66622:66631 VST.veric.SeparationLogic <> tc_temp_id def
R66637:66642 compcert.cfrontend.Clight <> typeof def
R66658:66662 VST.veric.seplog <> subst def
R66668:66676 VST.veric.expr <> eval_expr def
R66529:66537 VST.floyd.SeparationLogicFacts SetF2B semax_pre thm
R66545:66548 VST.msl.seplog <> ::logic:'|>'_x not
R66683:66683 VST.msl.seplog <> ::logic:'|>'_x not
R66598:66602 VST.msl.seplog <> ::logic:x_'&&'_x not
R66682:66682 VST.msl.seplog <> ::logic:x_'&&'_x not
R66549:66552 VST.msl.seplog <> ::logic:'!!'_x not
R66597:66597 VST.msl.seplog <> ::logic:'!!'_x not
R66553:66559 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R66561:66563 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R66596:66596 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 66560:66560 <> t:637
R66587:66589 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66564:66564 compcert.lib.Maps <> :::x_'!'_x not
R66581:66584 compcert.lib.Maps <> :::x_'!'_x not
R66565:66574 VST.veric.seplog <> temp_types def
R66590:66593 Coq.Init.Datatypes <> Some constr
R66595:66595 VST.floyd.SeparationLogicFacts <> t:637 var
R66654:66657 VST.msl.seplog <> ::logic:x_'&&'_x not
R66618:66621 VST.msl.seplog <> ::logic:x_'&&'_x not
R66603:66609 VST.veric.SeparationLogic <> tc_expr def
R66622:66631 VST.veric.SeparationLogic <> tc_temp_id def
R66637:66642 compcert.cfrontend.Clight <> typeof def
R66658:66662 VST.veric.seplog <> subst def
R66668:66676 VST.veric.expr <> eval_expr def
R66529:66537 VST.floyd.SeparationLogicFacts SetF2B semax_pre thm
R66701:66712 VST.floyd.assert_lemmas <> later_ENTAIL thm
R66701:66712 VST.floyd.assert_lemmas <> later_ENTAIL thm
R66725:66734 VST.msl.seplog <> andp_right meth
R66725:66734 VST.msl.seplog <> andp_right meth
R66764:66773 VST.veric.SeparationLogic <> tc_temp_id def
R66776:66792 VST.veric.expr <> typecheck_temp_id def
R66809:66809 compcert.lib.Maps <> :::x_'!'_x not
R66826:66829 compcert.lib.Maps <> :::x_'!'_x not
R66810:66819 VST.veric.seplog <> temp_types def
R66809:66809 compcert.lib.Maps <> :::x_'!'_x not
R66826:66829 compcert.lib.Maps <> :::x_'!'_x not
R66810:66819 VST.veric.seplog <> temp_types def
R66847:66856 VST.msl.seplog <> prop_right meth
R66847:66856 VST.msl.seplog <> prop_right meth
R66941:66944 VST.msl.seplog <> ::logic:'|>'_x not
R67079:67079 VST.msl.seplog <> ::logic:'|>'_x not
R66996:67000 VST.msl.seplog <> ::logic:x_'&&'_x not
R67078:67078 VST.msl.seplog <> ::logic:x_'&&'_x not
R66960:66963 VST.msl.seplog <> ::logic:x_'&&'_x not
R66945:66951 VST.veric.SeparationLogic <> tc_expr def
R66964:66973 VST.veric.SeparationLogic <> tc_temp_id def
R66979:66984 compcert.cfrontend.Clight <> typeof def
R67050:67053 VST.msl.seplog <> ::logic:x_'&&'_x not
R67001:67004 VST.msl.seplog <> ::logic:'!!'_x not
R67049:67049 VST.msl.seplog <> ::logic:'!!'_x not
R67005:67011 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R67013:67015 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R67048:67048 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 67012:67012 <> t:638
R67039:67041 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67016:67016 compcert.lib.Maps <> :::x_'!'_x not
R67033:67036 compcert.lib.Maps <> :::x_'!'_x not
R67017:67026 VST.veric.seplog <> temp_types def
R67042:67045 Coq.Init.Datatypes <> Some constr
R67047:67047 VST.floyd.SeparationLogicFacts <> t:638 var
R67054:67058 VST.veric.seplog <> subst def
R67064:67072 VST.veric.expr <> eval_expr def
R66925:66933 VST.floyd.SeparationLogicFacts SetF2B semax_pre thm
R66941:66944 VST.msl.seplog <> ::logic:'|>'_x not
R67079:67079 VST.msl.seplog <> ::logic:'|>'_x not
R66996:67000 VST.msl.seplog <> ::logic:x_'&&'_x not
R67078:67078 VST.msl.seplog <> ::logic:x_'&&'_x not
R66960:66963 VST.msl.seplog <> ::logic:x_'&&'_x not
R66945:66951 VST.veric.SeparationLogic <> tc_expr def
R66964:66973 VST.veric.SeparationLogic <> tc_temp_id def
R66979:66984 compcert.cfrontend.Clight <> typeof def
R67050:67053 VST.msl.seplog <> ::logic:x_'&&'_x not
R67001:67004 VST.msl.seplog <> ::logic:'!!'_x not
R67049:67049 VST.msl.seplog <> ::logic:'!!'_x not
R67005:67011 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R67013:67015 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R67048:67048 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 67012:67012 <> t:639
R67039:67041 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67016:67016 compcert.lib.Maps <> :::x_'!'_x not
R67033:67036 compcert.lib.Maps <> :::x_'!'_x not
R67017:67026 VST.veric.seplog <> temp_types def
R67042:67045 Coq.Init.Datatypes <> Some constr
R67047:67047 VST.floyd.SeparationLogicFacts <> t:639 var
R67054:67058 VST.veric.seplog <> subst def
R67064:67072 VST.veric.expr <> eval_expr def
R66925:66933 VST.floyd.SeparationLogicFacts SetF2B semax_pre thm
R67097:67108 VST.floyd.assert_lemmas <> later_ENTAIL thm
R67097:67108 VST.floyd.assert_lemmas <> later_ENTAIL thm
R67140:67150 VST.floyd.SeparationLogicFacts SetF2B semax_post' thm
R67166:67182 VST.floyd.SeparationLogicFacts SetF semax_set_forward prfax
R67140:67150 VST.floyd.SeparationLogicFacts SetF2B semax_post' thm
R67166:67182 VST.floyd.SeparationLogicFacts SetF semax_set_forward prfax
R67203:67211 VST.msl.log_normalize <> exp_andp2 thm
R67203:67211 VST.msl.log_normalize <> exp_andp2 thm
R67203:67211 VST.msl.log_normalize <> exp_andp2 thm
R67222:67229 VST.msl.seplog <> exp_left meth
R67222:67229 VST.msl.seplog <> exp_left meth
R67424:67427 VST.msl.seplog <> ::logic:x_'&&'_x not
R67358:67362 VST.msl.seplog <> ::logic:x_'&&'_x not
R67423:67423 VST.msl.seplog <> ::logic:x_'&&'_x not
R67334:67338 VST.veric.SeparationLogic <> local def
R67341:67350 VST.veric.SeparationLogic <> tc_environ def
R67363:67367 VST.veric.SeparationLogic <> local def
R67370:67372 VST.veric.lift LiftNotation :::'`'_x not
R67375:67421 VST.veric.lift LiftNotation :::'`'_x not
R67373:67374 Coq.Init.Logic <> eq ind
R67391:67395 VST.veric.seplog <> subst def
R67409:67417 VST.veric.expr <> eval_expr def
R67401:67402 VST.veric.lift LiftNotation :::'`'_x not
R67378:67384 VST.veric.mpred <> eval_id def
R67428:67432 VST.veric.seplog <> subst def
R67446:67450 VST.veric.seplog <> subst def
R67456:67464 VST.veric.expr <> eval_expr def
R67438:67439 VST.veric.lift LiftNotation :::'`'_x not
R67314:67326 VST.msl.seplog <> derives_trans meth
R67424:67427 VST.msl.seplog <> ::logic:x_'&&'_x not
R67358:67362 VST.msl.seplog <> ::logic:x_'&&'_x not
R67423:67423 VST.msl.seplog <> ::logic:x_'&&'_x not
R67334:67338 VST.veric.SeparationLogic <> local def
R67341:67350 VST.veric.SeparationLogic <> tc_environ def
R67363:67367 VST.veric.SeparationLogic <> local def
R67370:67372 VST.veric.lift LiftNotation :::'`'_x not
R67375:67421 VST.veric.lift LiftNotation :::'`'_x not
R67373:67374 Coq.Init.Logic <> eq ind
R67391:67395 VST.veric.seplog <> subst def
R67409:67417 VST.veric.expr <> eval_expr def
R67401:67402 VST.veric.lift LiftNotation :::'`'_x not
R67378:67384 VST.veric.mpred <> eval_id def
R67428:67432 VST.veric.seplog <> subst def
R67446:67450 VST.veric.seplog <> subst def
R67456:67464 VST.veric.expr <> eval_expr def
R67438:67439 VST.veric.lift LiftNotation :::'`'_x not
R67314:67326 VST.msl.seplog <> derives_trans meth
R67502:67502 VST.veric.lift LiftNotation :::'`'_x not
R67502:67502 VST.veric.lift LiftNotation :::'`'_x not
R67529:67533 VST.veric.SeparationLogic <> local def
R67536:67540 VST.veric.mpred <> lift1 def
R67595:67606 VST.floyd.assert_lemmas <> resubst_full thm
R67595:67606 VST.floyd.assert_lemmas <> resubst_full thm
R67595:67606 VST.floyd.assert_lemmas <> resubst_full thm
R67620:67629 VST.floyd.SeparationLogicFacts <> subst_self thm
R67620:67629 VST.floyd.SeparationLogicFacts <> subst_self thm
R67620:67629 VST.floyd.SeparationLogicFacts <> subst_self thm
R67620:67629 VST.floyd.SeparationLogicFacts <> subst_self thm
R67620:67629 VST.floyd.SeparationLogicFacts <> subst_self thm
R67620:67629 VST.floyd.SeparationLogicFacts <> subst_self thm
R67649:67654 VST.floyd.SeparationLogicFacts SetF2B <> mod
R67685:67717 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R67736:67776 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R67802:67804 VST.floyd.SeparationLogicFacts Def <> modtype
R67821:67862 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SET_BACKWARD <> mod
R67888:67890 VST.floyd.SeparationLogicFacts Def <> modtype
R67901:67941 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SET_FORWARD <> mod
R67967:67969 VST.floyd.SeparationLogicFacts Def <> modtype
mod 67665:67670 <> SetB2F
R67992:67994 VST.floyd.SeparationLogicFacts Def <> modtype
mod 67980:67987 <> SetB2F.CSHL_Def
R68019:68032 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R68035:68037 VST.floyd.SeparationLogicFacts Def <> modtype
R68041:68046 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 68004:68014 <> SetB2F.ConseqFacts
prf 68119:68135 SetB2F semax_set_forward
R68150:68158 VST.veric.mpred <> compspecs class
binder 68146:68147 <> CS:640
R68169:68178 VST.veric.juicy_extspec <> OracleKind class
binder 68162:68166 <> Espec:641
R68189:68197 VST.veric.seplog <> tycontext ind
binder 68182:68186 <> Delta:642
R68221:68222 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68223:68227 VST.veric.mpred <> mpred def
R68214:68220 VST.veric.mpred <> environ ind
binder 68211:68211 <> P:643
binder 68230:68231 <> id:644
binder 68233:68233 <> e:645
R68241:68245 VST.floyd.SeparationLogicFacts Def semax defax
R68393:68409 VST.veric.SeparationLogic <> normal_ret_assert def
R68422:68424 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R68432:68433 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R68429:68431 compcert.common.Values <> val ind
binder 68425:68427 <> old:646
R68490:68521 VST.msl.seplog <> ::logic:x_'&&'_x not
R68434:68438 VST.veric.SeparationLogic <> local def
R68441:68441 VST.veric.lift LiftNotation :::'`'_x not
R68444:68488 VST.veric.lift LiftNotation :::'`'_x not
R68442:68443 Coq.Init.Logic <> eq ind
R68459:68463 VST.veric.seplog <> subst def
R68476:68484 VST.veric.expr <> eval_expr def
R68486:68486 VST.floyd.SeparationLogicFacts <> e:645 var
R68469:68469 VST.veric.lift LiftNotation :::'`'_x not
R68470:68472 VST.floyd.SeparationLogicFacts <> old:646 var
R68465:68466 VST.floyd.SeparationLogicFacts <> id:644 var
R68446:68452 VST.veric.mpred <> eval_id def
R68454:68455 VST.floyd.SeparationLogicFacts <> id:644 var
R68522:68526 VST.veric.seplog <> subst def
R68538:68538 VST.floyd.SeparationLogicFacts <> P:643 var
R68532:68532 VST.veric.lift LiftNotation :::'`'_x not
R68533:68535 VST.floyd.SeparationLogicFacts <> old:646 var
R68528:68529 VST.floyd.SeparationLogicFacts <> id:644 var
R68373:68376 compcert.cfrontend.Clight <> Sset constr
R68381:68381 VST.floyd.SeparationLogicFacts <> e:645 var
R68378:68379 VST.floyd.SeparationLogicFacts <> id:644 var
R68271:68275 VST.msl.seplog <> ::logic:'|>'_x not
R68359:68359 VST.msl.seplog <> ::logic:'|>'_x not
R68344:68357 VST.msl.seplog <> ::logic:x_'&&'_x not
R68276:68276 VST.msl.seplog <> ::logic:x_'&&'_x not
R68292:68310 VST.msl.seplog <> ::logic:x_'&&'_x not
R68343:68343 VST.msl.seplog <> ::logic:x_'&&'_x not
R68277:68283 VST.veric.SeparationLogic <> tc_expr def
R68291:68291 VST.floyd.SeparationLogicFacts <> e:645 var
R68285:68289 VST.floyd.SeparationLogicFacts <> Delta:642 var
R68311:68320 VST.veric.SeparationLogic <> tc_temp_id def
R68342:68342 VST.floyd.SeparationLogicFacts <> e:645 var
R68336:68340 VST.floyd.SeparationLogicFacts <> Delta:642 var
R68326:68331 compcert.cfrontend.Clight <> typeof def
R68333:68333 VST.floyd.SeparationLogicFacts <> e:645 var
R68322:68323 VST.floyd.SeparationLogicFacts <> id:644 var
R68358:68358 VST.floyd.SeparationLogicFacts <> P:643 var
R68256:68260 VST.floyd.SeparationLogicFacts <> Delta:642 var
R68250:68254 VST.floyd.SeparationLogicFacts <> Espec:641 var
R68247:68248 VST.floyd.SeparationLogicFacts <> CS:640 var
R68569:68577 VST.floyd.SeparationLogicFacts SetB2F semax_pre thm
R68589:68606 VST.floyd.SeparationLogicFacts SetB semax_set_backward prfax
R68569:68577 VST.floyd.SeparationLogicFacts SetB2F semax_pre thm
R68589:68606 VST.floyd.SeparationLogicFacts SetB semax_set_backward prfax
R68618:68629 VST.floyd.assert_lemmas <> later_ENTAIL thm
R68618:68629 VST.floyd.assert_lemmas <> later_ENTAIL thm
R68640:68649 VST.msl.seplog <> andp_right meth
R68640:68649 VST.msl.seplog <> andp_right meth
R68678:68686 VST.floyd.assert_lemmas <> subst_exp thm
R68678:68686 VST.floyd.assert_lemmas <> subst_exp thm
R68678:68686 VST.floyd.assert_lemmas <> subst_exp thm
R68720:68728 VST.msl.seplog <> exp_right meth
R68731:68737 VST.veric.mpred <> eval_id def
R68720:68728 VST.msl.seplog <> exp_right meth
R68731:68737 VST.veric.mpred <> eval_id def
R68771:68775 VST.veric.SeparationLogic <> local def
R68778:68782 VST.veric.mpred <> lift1 def
R68803:68807 VST.veric.seplog <> subst def
R68834:68848 VST.floyd.assert_lemmas <> env_set_env_set thm
R68834:68848 VST.floyd.assert_lemmas <> env_set_env_set thm
R68834:68848 VST.floyd.assert_lemmas <> env_set_env_set thm
R68834:68848 VST.floyd.assert_lemmas <> env_set_env_set thm
R68897:68901 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R68861:68870 VST.veric.SeparationLogic <> tc_temp_id def
R68876:68881 compcert.cfrontend.Clight <> typeof def
R68902:68905 VST.msl.seplog <> ::logic:'!!'_x not
R68943:68943 VST.msl.seplog <> ::logic:'!!'_x not
R68937:68939 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68906:68912 VST.veric.mpred <> env_set def
R68922:68928 VST.veric.mpred <> eval_id def
R68897:68901 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R68861:68870 VST.veric.SeparationLogic <> tc_temp_id def
R68876:68881 compcert.cfrontend.Clight <> typeof def
R68902:68905 VST.msl.seplog <> ::logic:'!!'_x not
R68943:68943 VST.msl.seplog <> ::logic:'!!'_x not
R68937:68939 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68906:68912 VST.veric.mpred <> env_set def
R68922:68928 VST.veric.mpred <> eval_id def
R68958:68967 VST.veric.SeparationLogic <> tc_temp_id def
R68970:68986 VST.veric.expr <> typecheck_temp_id def
R69003:69003 compcert.lib.Maps <> :::x_'!'_x not
R69020:69023 compcert.lib.Maps <> :::x_'!'_x not
R69004:69013 VST.veric.seplog <> temp_types def
R69045:69051 VST.msl.log_normalize <> FF_left thm
R69003:69003 compcert.lib.Maps <> :::x_'!'_x not
R69020:69023 compcert.lib.Maps <> :::x_'!'_x not
R69004:69013 VST.veric.seplog <> temp_types def
R69045:69051 VST.msl.log_normalize <> FF_left thm
R69065:69074 VST.msl.seplog <> prop_right meth
R69065:69074 VST.msl.seplog <> prop_right meth
R69088:69102 VST.floyd.assert_lemmas <> env_set_eval_id thm
R69088:69102 VST.floyd.assert_lemmas <> env_set_eval_id thm
R69125:69132 VST.msl.log_normalize <> add_andp thm
R69125:69132 VST.msl.log_normalize <> add_andp thm
R69125:69132 VST.msl.log_normalize <> add_andp thm
R69156:69165 VST.msl.log_normalize <> andp_assoc thm
R69156:69165 VST.msl.log_normalize <> andp_assoc thm
R69156:69165 VST.msl.log_normalize <> andp_assoc thm
R69156:69165 VST.msl.log_normalize <> andp_assoc thm
R69156:69165 VST.msl.log_normalize <> andp_assoc thm
R69178:69187 VST.msl.seplog <> andp_left2 meth
R69178:69187 VST.msl.seplog <> andp_left2 meth
R69200:69209 VST.msl.seplog <> andp_left2 meth
R69200:69209 VST.msl.seplog <> andp_left2 meth
R69268:69273 VST.floyd.SeparationLogicFacts SetB2F <> mod
modtype 69289:69333 <> CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_FORWARD
R69362:69394 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 69352:69359 <> CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_FORWARD.CSHL_Def
ax 69422:69446 CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_FORWARD semax_ptr_compare_forward
R69461:69469 VST.veric.mpred <> compspecs class
binder 69457:69458 <> CS:647
R69480:69489 VST.veric.juicy_extspec <> OracleKind class
binder 69473:69477 <> Espec:648
R69500:69508 VST.veric.seplog <> tycontext ind
binder 69493:69497 <> Delta:649
binder 69521:69521 <> P:650
binder 69523:69524 <> id:651
binder 69526:69528 <> cmp:652
binder 69530:69531 <> e1:653
binder 69533:69534 <> e2:654
binder 69536:69537 <> ty:655
binder 69539:69541 <> sh1:656
binder 69543:69545 <> sh2:657
R69574:69577 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69600:69606 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69631:69638 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69683:69689 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69734:69740 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69782:69788 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69790:69794 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_FORWARD semax defax
R70146:70162 VST.veric.SeparationLogic <> normal_ret_assert def
R70175:70177 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R70185:70203 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R70182:70184 compcert.common.Values <> val ind
binder 70178:70180 <> old:658
R70302:70328 VST.msl.seplog <> ::logic:x_'&&'_x not
R70204:70208 VST.veric.SeparationLogic <> local def
R70211:70211 VST.veric.lift LiftNotation :::'`'_x not
R70214:70300 VST.veric.lift LiftNotation :::'`'_x not
R70212:70213 Coq.Init.Logic <> eq ind
R70230:70234 VST.veric.seplog <> subst def
R70268:70276 VST.veric.expr <> eval_expr def
R70279:70284 compcert.cfrontend.Clight <> Ebinop constr
R70296:70297 VST.floyd.SeparationLogicFacts <> ty:655 var
R70293:70294 VST.floyd.SeparationLogicFacts <> e2:654 var
R70290:70291 VST.floyd.SeparationLogicFacts <> e1:653 var
R70286:70288 VST.floyd.SeparationLogicFacts <> cmp:652 var
R70239:70240 VST.veric.lift LiftNotation :::'`('_x_')' not
R70244:70244 VST.veric.lift LiftNotation :::'`('_x_')' not
R70241:70243 VST.floyd.SeparationLogicFacts <> old:658 var
R70236:70237 VST.floyd.SeparationLogicFacts <> id:651 var
R70216:70222 VST.veric.mpred <> eval_id def
R70224:70225 VST.floyd.SeparationLogicFacts <> id:651 var
R70329:70333 VST.veric.seplog <> subst def
R70345:70345 VST.floyd.SeparationLogicFacts <> P:650 var
R70338:70339 VST.veric.lift LiftNotation :::'`('_x_')' not
R70343:70343 VST.veric.lift LiftNotation :::'`('_x_')' not
R70340:70342 VST.floyd.SeparationLogicFacts <> old:658 var
R70335:70336 VST.floyd.SeparationLogicFacts <> id:651 var
R70106:70109 compcert.cfrontend.Clight <> Sset constr
R70115:70120 compcert.cfrontend.Clight <> Ebinop constr
R70132:70133 VST.floyd.SeparationLogicFacts <> ty:655 var
R70129:70130 VST.floyd.SeparationLogicFacts <> e2:654 var
R70126:70127 VST.floyd.SeparationLogicFacts <> e1:653 var
R70122:70124 VST.floyd.SeparationLogicFacts <> cmp:652 var
R70111:70112 VST.floyd.SeparationLogicFacts <> id:651 var
R69821:69825 VST.msl.seplog <> ::logic:'|>'_x not
R70092:70092 VST.msl.seplog <> ::logic:'|>'_x not
R70077:70090 VST.msl.seplog <> ::logic:x_'&&'_x not
R70015:70029 VST.msl.seplog <> ::logic:x_'&&'_x not
R70076:70076 VST.msl.seplog <> ::logic:x_'&&'_x not
R69953:69967 VST.msl.seplog <> ::logic:x_'&&'_x not
R70014:70014 VST.msl.seplog <> ::logic:x_'&&'_x not
R69880:69895 VST.msl.seplog <> ::logic:x_'&&'_x not
R69826:69826 VST.msl.seplog <> ::logic:x_'&&'_x not
R69843:69862 VST.msl.seplog <> ::logic:x_'&&'_x not
R69879:69879 VST.msl.seplog <> ::logic:x_'&&'_x not
R69827:69833 VST.veric.SeparationLogic <> tc_expr def
R69841:69842 VST.floyd.SeparationLogicFacts <> e1:653 var
R69835:69839 VST.floyd.SeparationLogicFacts <> Delta:649 var
R69863:69869 VST.veric.SeparationLogic <> tc_expr def
R69877:69878 VST.floyd.SeparationLogicFacts <> e2:654 var
R69871:69875 VST.floyd.SeparationLogicFacts <> Delta:649 var
R69896:69900 VST.veric.SeparationLogic <> local def
R69903:69904 VST.veric.lift LiftNotation :::'`('_x_')' not
R69921:69951 VST.veric.lift LiftNotation :::'`('_x_')' not
R69905:69916 VST.veric.SeparationLogic <> blocks_match def
R69918:69920 VST.floyd.SeparationLogicFacts <> cmp:652 var
R69939:69947 VST.veric.expr <> eval_expr def
R69949:69950 VST.floyd.SeparationLogicFacts <> e2:654 var
R69924:69932 VST.veric.expr <> eval_expr def
R69934:69935 VST.floyd.SeparationLogicFacts <> e1:653 var
R70009:70011 VST.msl.seplog <> ::logic:x_'*'_x not
R69968:69969 VST.veric.lift LiftNotation :::'`('_x_')' not
R69993:70008 VST.veric.lift LiftNotation :::'`('_x_')' not
R69970:69976 VST.veric.SeparationLogic <> mapsto_ def
R69983:69988 compcert.cfrontend.Clight <> typeof def
R69990:69991 VST.floyd.SeparationLogicFacts <> e1:653 var
R69978:69980 VST.floyd.SeparationLogicFacts <> sh1:656 var
R69996:70004 VST.veric.expr <> eval_expr def
R70006:70007 VST.floyd.SeparationLogicFacts <> e1:653 var
R70012:70013 VST.msl.seplog <> TT meth
R70071:70073 VST.msl.seplog <> ::logic:x_'*'_x not
R70030:70031 VST.veric.lift LiftNotation :::'`('_x_')' not
R70055:70070 VST.veric.lift LiftNotation :::'`('_x_')' not
R70032:70038 VST.veric.SeparationLogic <> mapsto_ def
R70045:70050 compcert.cfrontend.Clight <> typeof def
R70052:70053 VST.floyd.SeparationLogicFacts <> e2:654 var
R70040:70042 VST.floyd.SeparationLogicFacts <> sh2:657 var
R70058:70066 VST.veric.expr <> eval_expr def
R70068:70069 VST.floyd.SeparationLogicFacts <> e2:654 var
R70074:70075 VST.msl.seplog <> TT meth
R70091:70091 VST.floyd.SeparationLogicFacts <> P:650 var
R69805:69809 VST.floyd.SeparationLogicFacts <> Delta:649 var
R69799:69803 VST.floyd.SeparationLogicFacts <> Espec:648 var
R69796:69797 VST.floyd.SeparationLogicFacts <> CS:647 var
R69775:69777 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69741:69765 VST.veric.SeparationLogic <> typecheck_tid_ptr_compare def
R69773:69774 VST.floyd.SeparationLogicFacts <> id:651 var
R69767:69771 VST.floyd.SeparationLogicFacts <> Delta:649 var
R69778:69781 Coq.Init.Datatypes <> true constr
R69726:69728 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69690:69697 VST.veric.Cop2 <> eqb_type def
R69711:69725 VST.veric.Cop2 <> int_or_ptr_type def
R69700:69705 compcert.cfrontend.Clight <> typeof def
R69707:69708 VST.floyd.SeparationLogicFacts <> e2:654 var
R69729:69733 Coq.Init.Datatypes <> false constr
R69675:69677 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69639:69646 VST.veric.Cop2 <> eqb_type def
R69660:69674 VST.veric.Cop2 <> int_or_ptr_type def
R69649:69654 compcert.cfrontend.Clight <> typeof def
R69656:69657 VST.floyd.SeparationLogicFacts <> e1:653 var
R69678:69682 Coq.Init.Datatypes <> false constr
R69624:69626 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69607:69619 VST.veric.SeparationLogic <> is_comparison def
R69621:69623 VST.floyd.SeparationLogicFacts <> cmp:652 var
R69627:69630 Coq.Init.Datatypes <> true constr
R69578:69595 VST.msl.sepalg <> nonidentity def
R69597:69599 VST.floyd.SeparationLogicFacts <> sh2:657 var
R69552:69569 VST.msl.sepalg <> nonidentity def
R69571:69573 VST.floyd.SeparationLogicFacts <> sh1:656 var
R70355:70399 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_FORWARD <> modtype
modtype 70415:70460 <> CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_BACKWARD
R70489:70521 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 70479:70486 <> CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_BACKWARD.CSHL_Def
ax 70549:70574 CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_BACKWARD semax_ptr_compare_backward
R70589:70597 VST.veric.mpred <> compspecs class
binder 70585:70586 <> CS:660
R70608:70617 VST.veric.juicy_extspec <> OracleKind class
binder 70601:70605 <> Espec:661
R70628:70636 VST.veric.seplog <> tycontext ind
binder 70621:70625 <> Delta:662
binder 70649:70649 <> P:663
binder 70651:70652 <> id:664
binder 70654:70654 <> e:665
R70661:70665 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_BACKWARD semax defax
R71494:71510 VST.veric.SeparationLogic <> normal_ret_assert def
R71512:71512 VST.floyd.SeparationLogicFacts <> P:663 var
R71474:71477 compcert.cfrontend.Clight <> Sset constr
R71482:71482 VST.floyd.SeparationLogicFacts <> e:665 var
R71479:71480 VST.floyd.SeparationLogicFacts <> id:664 var
R70691:70693 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R70719:70720 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R70699:70718 compcert.cfrontend.Cop <> binary_operation ind
binder 70694:70696 <> cmp:666
R70721:70723 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R70732:70733 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R70728:70731 compcert.cfrontend.Clight <> expr ind
binder 70724:70725 <> e1:667
R70734:70736 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R70745:70755 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R70741:70744 compcert.cfrontend.Clight <> expr ind
binder 70737:70738 <> e2:668
R70756:70758 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R70767:70768 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R70763:70766 compcert.cfrontend.Ctypes <> type ind
binder 70759:70760 <> ty:669
R70769:70771 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R70782:70783 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R70777:70781 VST.msl.shares <> share def
binder 70772:70774 <> sh1:670
R70784:70786 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R70797:70808 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R70792:70796 VST.msl.shares <> share def
binder 70787:70789 <> sh2:671
R71128:71145 VST.msl.seplog <> ::logic:x_'&&'_x not
R71460:71460 VST.msl.seplog <> ::logic:x_'&&'_x not
R70809:70812 VST.msl.seplog <> ::logic:'!!'_x not
R71127:71127 VST.msl.seplog <> ::logic:'!!'_x not
R70836:70853 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R70814:70816 Coq.Init.Logic <> ::type_scope:x_'='_x not
R70813:70813 VST.floyd.SeparationLogicFacts <> e:665 var
R70817:70822 compcert.cfrontend.Clight <> Ebinop constr
R70834:70835 VST.floyd.SeparationLogicFacts <> ty:669 var
R70831:70832 VST.floyd.SeparationLogicFacts <> e2:668 var
R70828:70829 VST.floyd.SeparationLogicFacts <> e1:667 var
R70824:70826 VST.floyd.SeparationLogicFacts <> cmp:666 var
R70876:70879 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R70854:70871 VST.msl.sepalg <> nonidentity def
R70873:70875 VST.floyd.SeparationLogicFacts <> sh1:670 var
R70902:70919 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R70880:70897 VST.msl.sepalg <> nonidentity def
R70899:70901 VST.floyd.SeparationLogicFacts <> sh2:671 var
R70944:70961 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R70937:70939 Coq.Init.Logic <> ::type_scope:x_'='_x not
R70920:70932 VST.veric.SeparationLogic <> is_comparison def
R70934:70936 VST.floyd.SeparationLogicFacts <> cmp:666 var
R70940:70943 Coq.Init.Datatypes <> true constr
R71006:71023 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R70998:71000 Coq.Init.Logic <> ::type_scope:x_'='_x not
R70962:70969 VST.veric.Cop2 <> eqb_type def
R70983:70997 VST.veric.Cop2 <> int_or_ptr_type def
R70972:70977 compcert.cfrontend.Clight <> typeof def
R70979:70980 VST.floyd.SeparationLogicFacts <> e1:667 var
R71001:71005 Coq.Init.Datatypes <> false constr
R71068:71085 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R71060:71062 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71024:71031 VST.veric.Cop2 <> eqb_type def
R71045:71059 VST.veric.Cop2 <> int_or_ptr_type def
R71034:71039 compcert.cfrontend.Clight <> typeof def
R71041:71042 VST.floyd.SeparationLogicFacts <> e2:668 var
R71063:71067 Coq.Init.Datatypes <> false constr
R71120:71122 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71086:71110 VST.veric.SeparationLogic <> typecheck_tid_ptr_compare def
R71118:71119 VST.floyd.SeparationLogicFacts <> id:664 var
R71112:71116 VST.floyd.SeparationLogicFacts <> Delta:662 var
R71123:71126 Coq.Init.Datatypes <> true constr
R71146:71150 VST.msl.seplog <> ::logic:'|>'_x not
R71459:71459 VST.msl.seplog <> ::logic:'|>'_x not
R71401:71414 VST.msl.seplog <> ::logic:x_'&&'_x not
R71339:71353 VST.msl.seplog <> ::logic:x_'&&'_x not
R71400:71400 VST.msl.seplog <> ::logic:x_'&&'_x not
R71277:71291 VST.msl.seplog <> ::logic:x_'&&'_x not
R71338:71338 VST.msl.seplog <> ::logic:x_'&&'_x not
R71205:71219 VST.msl.seplog <> ::logic:x_'&&'_x not
R71151:71151 VST.msl.seplog <> ::logic:x_'&&'_x not
R71168:71187 VST.msl.seplog <> ::logic:x_'&&'_x not
R71204:71204 VST.msl.seplog <> ::logic:x_'&&'_x not
R71152:71158 VST.veric.SeparationLogic <> tc_expr def
R71166:71167 VST.floyd.SeparationLogicFacts <> e1:667 var
R71160:71164 VST.floyd.SeparationLogicFacts <> Delta:662 var
R71188:71194 VST.veric.SeparationLogic <> tc_expr def
R71202:71203 VST.floyd.SeparationLogicFacts <> e2:668 var
R71196:71200 VST.floyd.SeparationLogicFacts <> Delta:662 var
R71220:71224 VST.veric.SeparationLogic <> local def
R71227:71228 VST.veric.lift LiftNotation :::'`('_x_')' not
R71245:71275 VST.veric.lift LiftNotation :::'`('_x_')' not
R71229:71240 VST.veric.SeparationLogic <> blocks_match def
R71242:71244 VST.floyd.SeparationLogicFacts <> cmp:666 var
R71263:71271 VST.veric.expr <> eval_expr def
R71273:71274 VST.floyd.SeparationLogicFacts <> e2:668 var
R71248:71256 VST.veric.expr <> eval_expr def
R71258:71259 VST.floyd.SeparationLogicFacts <> e1:667 var
R71333:71335 VST.msl.seplog <> ::logic:x_'*'_x not
R71292:71293 VST.veric.lift LiftNotation :::'`('_x_')' not
R71317:71332 VST.veric.lift LiftNotation :::'`('_x_')' not
R71294:71300 VST.veric.SeparationLogic <> mapsto_ def
R71307:71312 compcert.cfrontend.Clight <> typeof def
R71314:71315 VST.floyd.SeparationLogicFacts <> e1:667 var
R71302:71304 VST.floyd.SeparationLogicFacts <> sh1:670 var
R71320:71328 VST.veric.expr <> eval_expr def
R71330:71331 VST.floyd.SeparationLogicFacts <> e1:667 var
R71336:71337 VST.msl.seplog <> TT meth
R71395:71397 VST.msl.seplog <> ::logic:x_'*'_x not
R71354:71355 VST.veric.lift LiftNotation :::'`('_x_')' not
R71379:71394 VST.veric.lift LiftNotation :::'`('_x_')' not
R71356:71362 VST.veric.SeparationLogic <> mapsto_ def
R71369:71374 compcert.cfrontend.Clight <> typeof def
R71376:71377 VST.floyd.SeparationLogicFacts <> e2:668 var
R71364:71366 VST.floyd.SeparationLogicFacts <> sh2:671 var
R71382:71390 VST.veric.expr <> eval_expr def
R71392:71393 VST.floyd.SeparationLogicFacts <> e2:668 var
R71398:71399 VST.msl.seplog <> TT meth
R71415:71419 VST.veric.seplog <> subst def
R71458:71458 VST.floyd.SeparationLogicFacts <> P:663 var
R71425:71433 VST.veric.expr <> eval_expr def
R71436:71441 compcert.cfrontend.Clight <> Ebinop constr
R71453:71454 VST.floyd.SeparationLogicFacts <> ty:669 var
R71450:71451 VST.floyd.SeparationLogicFacts <> e2:668 var
R71447:71448 VST.floyd.SeparationLogicFacts <> e1:667 var
R71443:71445 VST.floyd.SeparationLogicFacts <> cmp:666 var
R71421:71422 VST.floyd.SeparationLogicFacts <> id:664 var
R70676:70680 VST.floyd.SeparationLogicFacts <> Delta:662 var
R70670:70674 VST.floyd.SeparationLogicFacts <> Espec:661 var
R70667:70668 VST.floyd.SeparationLogicFacts <> CS:660 var
R71521:71566 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_BACKWARD <> modtype
R71600:71632 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R71651:71691 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R71717:71719 VST.floyd.SeparationLogicFacts Def <> modtype
R71736:71775 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION <> mod
R71801:71803 VST.floyd.SeparationLogicFacts Def <> modtype
R71823:71867 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_FORWARD <> mod
R71893:71895 VST.floyd.SeparationLogicFacts Def <> modtype
R71906:71951 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_BACKWARD <> mod
R71977:71979 VST.floyd.SeparationLogicFacts Def <> modtype
mod 71577:71585 <> PtrCmpF2B
R72002:72004 VST.floyd.SeparationLogicFacts Def <> modtype
mod 71990:71997 <> PtrCmpF2B.CSHL_Def
R72029:72042 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R72045:72047 VST.floyd.SeparationLogicFacts Def <> modtype
R72051:72056 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 72014:72024 <> PtrCmpF2B.ConseqFacts
R72080:72091 VST.floyd.SeparationLogicFacts GenExtrFacts <> modtype
R72094:72096 VST.floyd.SeparationLogicFacts Def <> modtype
R72100:72105 VST.floyd.SeparationLogicFacts Conseq <> modtype
R72109:72112 VST.floyd.SeparationLogicFacts Extr <> modtype
mod 72067:72075 <> PtrCmpF2B.ExtrFacts
prf 72219:72244 PtrCmpF2B semax_ptr_compare_backward
R72259:72267 VST.veric.mpred <> compspecs class
binder 72255:72256 <> CS:673
R72278:72287 VST.veric.juicy_extspec <> OracleKind class
binder 72271:72275 <> Espec:674
R72298:72306 VST.veric.seplog <> tycontext ind
binder 72291:72295 <> Delta:675
binder 72319:72319 <> P:676
binder 72321:72322 <> id:677
binder 72324:72324 <> e:678
R72331:72335 VST.floyd.SeparationLogicFacts Def semax defax
R73166:73182 VST.veric.SeparationLogic <> normal_ret_assert def
R73184:73184 VST.floyd.SeparationLogicFacts <> P:676 var
R73144:73147 compcert.cfrontend.Clight <> Sset constr
R73152:73152 VST.floyd.SeparationLogicFacts <> e:678 var
R73149:73150 VST.floyd.SeparationLogicFacts <> id:677 var
R72361:72363 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R72389:72390 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R72369:72388 compcert.cfrontend.Cop <> binary_operation ind
binder 72364:72366 <> cmp:679
R72391:72393 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R72402:72403 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R72398:72401 compcert.cfrontend.Clight <> expr ind
binder 72394:72395 <> e1:680
R72404:72406 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R72415:72425 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R72411:72414 compcert.cfrontend.Clight <> expr ind
binder 72407:72408 <> e2:681
R72426:72428 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R72437:72438 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R72433:72436 compcert.cfrontend.Ctypes <> type ind
binder 72429:72430 <> ty:682
R72439:72441 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R72452:72453 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R72447:72451 VST.msl.shares <> share def
binder 72442:72444 <> sh1:683
R72454:72456 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R72467:72478 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R72462:72466 VST.msl.shares <> share def
binder 72457:72459 <> sh2:684
R72798:72815 VST.msl.seplog <> ::logic:x_'&&'_x not
R73130:73130 VST.msl.seplog <> ::logic:x_'&&'_x not
R72479:72482 VST.msl.seplog <> ::logic:'!!'_x not
R72797:72797 VST.msl.seplog <> ::logic:'!!'_x not
R72506:72523 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R72484:72486 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72483:72483 VST.floyd.SeparationLogicFacts <> e:678 var
R72487:72492 compcert.cfrontend.Clight <> Ebinop constr
R72504:72505 VST.floyd.SeparationLogicFacts <> ty:682 var
R72501:72502 VST.floyd.SeparationLogicFacts <> e2:681 var
R72498:72499 VST.floyd.SeparationLogicFacts <> e1:680 var
R72494:72496 VST.floyd.SeparationLogicFacts <> cmp:679 var
R72546:72549 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R72524:72541 VST.msl.sepalg <> nonidentity def
R72543:72545 VST.floyd.SeparationLogicFacts <> sh1:683 var
R72572:72589 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R72550:72567 VST.msl.sepalg <> nonidentity def
R72569:72571 VST.floyd.SeparationLogicFacts <> sh2:684 var
R72614:72631 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R72607:72609 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72590:72602 VST.veric.SeparationLogic <> is_comparison def
R72604:72606 VST.floyd.SeparationLogicFacts <> cmp:679 var
R72610:72613 Coq.Init.Datatypes <> true constr
R72676:72693 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R72668:72670 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72632:72639 VST.veric.Cop2 <> eqb_type def
R72653:72667 VST.veric.Cop2 <> int_or_ptr_type def
R72642:72647 compcert.cfrontend.Clight <> typeof def
R72649:72650 VST.floyd.SeparationLogicFacts <> e1:680 var
R72671:72675 Coq.Init.Datatypes <> false constr
R72738:72755 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R72730:72732 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72694:72701 VST.veric.Cop2 <> eqb_type def
R72715:72729 VST.veric.Cop2 <> int_or_ptr_type def
R72704:72709 compcert.cfrontend.Clight <> typeof def
R72711:72712 VST.floyd.SeparationLogicFacts <> e2:681 var
R72733:72737 Coq.Init.Datatypes <> false constr
R72790:72792 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72756:72780 VST.veric.SeparationLogic <> typecheck_tid_ptr_compare def
R72788:72789 VST.floyd.SeparationLogicFacts <> id:677 var
R72782:72786 VST.floyd.SeparationLogicFacts <> Delta:675 var
R72793:72796 Coq.Init.Datatypes <> true constr
R72816:72820 VST.msl.seplog <> ::logic:'|>'_x not
R73129:73129 VST.msl.seplog <> ::logic:'|>'_x not
R73071:73084 VST.msl.seplog <> ::logic:x_'&&'_x not
R73009:73023 VST.msl.seplog <> ::logic:x_'&&'_x not
R73070:73070 VST.msl.seplog <> ::logic:x_'&&'_x not
R72947:72961 VST.msl.seplog <> ::logic:x_'&&'_x not
R73008:73008 VST.msl.seplog <> ::logic:x_'&&'_x not
R72875:72889 VST.msl.seplog <> ::logic:x_'&&'_x not
R72821:72821 VST.msl.seplog <> ::logic:x_'&&'_x not
R72838:72857 VST.msl.seplog <> ::logic:x_'&&'_x not
R72874:72874 VST.msl.seplog <> ::logic:x_'&&'_x not
R72822:72828 VST.veric.SeparationLogic <> tc_expr def
R72836:72837 VST.floyd.SeparationLogicFacts <> e1:680 var
R72830:72834 VST.floyd.SeparationLogicFacts <> Delta:675 var
R72858:72864 VST.veric.SeparationLogic <> tc_expr def
R72872:72873 VST.floyd.SeparationLogicFacts <> e2:681 var
R72866:72870 VST.floyd.SeparationLogicFacts <> Delta:675 var
R72890:72894 VST.veric.SeparationLogic <> local def
R72897:72898 VST.veric.lift LiftNotation :::'`('_x_')' not
R72915:72945 VST.veric.lift LiftNotation :::'`('_x_')' not
R72899:72910 VST.veric.SeparationLogic <> blocks_match def
R72912:72914 VST.floyd.SeparationLogicFacts <> cmp:679 var
R72933:72941 VST.veric.expr <> eval_expr def
R72943:72944 VST.floyd.SeparationLogicFacts <> e2:681 var
R72918:72926 VST.veric.expr <> eval_expr def
R72928:72929 VST.floyd.SeparationLogicFacts <> e1:680 var
R73003:73005 VST.msl.seplog <> ::logic:x_'*'_x not
R72962:72963 VST.veric.lift LiftNotation :::'`('_x_')' not
R72987:73002 VST.veric.lift LiftNotation :::'`('_x_')' not
R72964:72970 VST.veric.SeparationLogic <> mapsto_ def
R72977:72982 compcert.cfrontend.Clight <> typeof def
R72984:72985 VST.floyd.SeparationLogicFacts <> e1:680 var
R72972:72974 VST.floyd.SeparationLogicFacts <> sh1:683 var
R72990:72998 VST.veric.expr <> eval_expr def
R73000:73001 VST.floyd.SeparationLogicFacts <> e1:680 var
R73006:73007 VST.msl.seplog <> TT meth
R73065:73067 VST.msl.seplog <> ::logic:x_'*'_x not
R73024:73025 VST.veric.lift LiftNotation :::'`('_x_')' not
R73049:73064 VST.veric.lift LiftNotation :::'`('_x_')' not
R73026:73032 VST.veric.SeparationLogic <> mapsto_ def
R73039:73044 compcert.cfrontend.Clight <> typeof def
R73046:73047 VST.floyd.SeparationLogicFacts <> e2:681 var
R73034:73036 VST.floyd.SeparationLogicFacts <> sh2:684 var
R73052:73060 VST.veric.expr <> eval_expr def
R73062:73063 VST.floyd.SeparationLogicFacts <> e2:681 var
R73068:73069 VST.msl.seplog <> TT meth
R73085:73089 VST.veric.seplog <> subst def
R73128:73128 VST.floyd.SeparationLogicFacts <> P:676 var
R73095:73103 VST.veric.expr <> eval_expr def
R73106:73111 compcert.cfrontend.Clight <> Ebinop constr
R73123:73124 VST.floyd.SeparationLogicFacts <> ty:682 var
R73120:73121 VST.floyd.SeparationLogicFacts <> e2:681 var
R73117:73118 VST.floyd.SeparationLogicFacts <> e1:680 var
R73113:73115 VST.floyd.SeparationLogicFacts <> cmp:679 var
R73091:73092 VST.floyd.SeparationLogicFacts <> id:677 var
R72346:72350 VST.floyd.SeparationLogicFacts <> Delta:675 var
R72340:72344 VST.floyd.SeparationLogicFacts <> Espec:674 var
R72337:72338 VST.floyd.SeparationLogicFacts <> CS:673 var
R73213:73232 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R73213:73232 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R73254:73273 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R73254:73273 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R73294:73313 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R73294:73313 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R73334:73353 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R73334:73353 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R73374:73393 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R73374:73393 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R73415:73434 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R73415:73434 VST.floyd.SeparationLogicFacts Extr semax_extract_exists prfax
R73456:73473 VST.floyd.SeparationLogicFacts PtrCmpF2B semax_extract_prop thm
R73456:73473 VST.floyd.SeparationLogicFacts PtrCmpF2B semax_extract_prop thm
R73531:73541 VST.floyd.SeparationLogicFacts PtrCmpF2B semax_post' thm
R73557:73581 VST.floyd.SeparationLogicFacts PtrCmpF semax_ptr_compare_forward prfax
R73531:73541 VST.floyd.SeparationLogicFacts PtrCmpF2B semax_post' thm
R73557:73581 VST.floyd.SeparationLogicFacts PtrCmpF semax_ptr_compare_forward prfax
R73602:73610 VST.msl.log_normalize <> exp_andp2 thm
R73602:73610 VST.msl.log_normalize <> exp_andp2 thm
R73602:73610 VST.msl.log_normalize <> exp_andp2 thm
R73621:73628 VST.msl.seplog <> exp_left meth
R73621:73628 VST.msl.seplog <> exp_left meth
R73679:73690 VST.floyd.assert_lemmas <> resubst_full thm
R73679:73690 VST.floyd.assert_lemmas <> resubst_full thm
R73679:73690 VST.floyd.assert_lemmas <> resubst_full thm
R73713:73717 VST.veric.SeparationLogic <> local def
R73720:73724 VST.veric.mpred <> lift1 def
R73756:73780 VST.veric.SeparationLogic <> typecheck_tid_ptr_compare def
R73801:73801 compcert.lib.Maps <> :::x_'!'_x not
R73818:73821 compcert.lib.Maps <> :::x_'!'_x not
R73802:73811 VST.veric.seplog <> temp_types def
R73801:73801 compcert.lib.Maps <> :::x_'!'_x not
R73818:73821 compcert.lib.Maps <> :::x_'!'_x not
R73802:73811 VST.veric.seplog <> temp_types def
R73866:73875 VST.floyd.SeparationLogicFacts <> subst_self thm
R73866:73875 VST.floyd.SeparationLogicFacts <> subst_self thm
R73866:73875 VST.floyd.SeparationLogicFacts <> subst_self thm
R73905:73913 VST.floyd.SeparationLogicFacts PtrCmpF2B <> mod
R73947:73979 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R73998:74038 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R74064:74066 VST.floyd.SeparationLogicFacts Def <> modtype
R74086:74131 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_BACKWARD <> mod
R74157:74159 VST.floyd.SeparationLogicFacts Def <> modtype
R74170:74214 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_FORWARD <> mod
R74240:74242 VST.floyd.SeparationLogicFacts Def <> modtype
mod 73924:73932 <> PtrCmpB2F
R74265:74267 VST.floyd.SeparationLogicFacts Def <> modtype
mod 74253:74260 <> PtrCmpB2F.CSHL_Def
R74292:74305 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R74308:74310 VST.floyd.SeparationLogicFacts Def <> modtype
R74314:74319 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 74277:74287 <> PtrCmpB2F.ConseqFacts
prf 74395:74419 PtrCmpB2F semax_ptr_compare_forward
R74434:74442 VST.veric.mpred <> compspecs class
binder 74430:74431 <> CS:685
R74453:74462 VST.veric.juicy_extspec <> OracleKind class
binder 74446:74450 <> Espec:686
R74473:74481 VST.veric.seplog <> tycontext ind
binder 74466:74470 <> Delta:687
binder 74494:74494 <> P:688
binder 74496:74497 <> id:689
binder 74499:74501 <> cmp:690
binder 74503:74504 <> e1:691
binder 74506:74507 <> e2:692
binder 74509:74510 <> ty:693
binder 74512:74514 <> sh1:694
binder 74516:74518 <> sh2:695
R74547:74550 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74573:74579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74604:74611 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74656:74662 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74707:74713 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74755:74761 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74763:74767 VST.floyd.SeparationLogicFacts Def semax defax
R75119:75135 VST.veric.SeparationLogic <> normal_ret_assert def
R75148:75150 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R75158:75176 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R75155:75157 compcert.common.Values <> val ind
binder 75151:75153 <> old:696
R75275:75301 VST.msl.seplog <> ::logic:x_'&&'_x not
R75177:75181 VST.veric.SeparationLogic <> local def
R75184:75184 VST.veric.lift LiftNotation :::'`'_x not
R75187:75273 VST.veric.lift LiftNotation :::'`'_x not
R75185:75186 Coq.Init.Logic <> eq ind
R75203:75207 VST.veric.seplog <> subst def
R75241:75249 VST.veric.expr <> eval_expr def
R75252:75257 compcert.cfrontend.Clight <> Ebinop constr
R75269:75270 VST.floyd.SeparationLogicFacts <> ty:693 var
R75266:75267 VST.floyd.SeparationLogicFacts <> e2:692 var
R75263:75264 VST.floyd.SeparationLogicFacts <> e1:691 var
R75259:75261 VST.floyd.SeparationLogicFacts <> cmp:690 var
R75212:75213 VST.veric.lift LiftNotation :::'`('_x_')' not
R75217:75217 VST.veric.lift LiftNotation :::'`('_x_')' not
R75214:75216 VST.floyd.SeparationLogicFacts <> old:696 var
R75209:75210 VST.floyd.SeparationLogicFacts <> id:689 var
R75189:75195 VST.veric.mpred <> eval_id def
R75197:75198 VST.floyd.SeparationLogicFacts <> id:689 var
R75302:75306 VST.veric.seplog <> subst def
R75318:75318 VST.floyd.SeparationLogicFacts <> P:688 var
R75311:75312 VST.veric.lift LiftNotation :::'`('_x_')' not
R75316:75316 VST.veric.lift LiftNotation :::'`('_x_')' not
R75313:75315 VST.floyd.SeparationLogicFacts <> old:696 var
R75308:75309 VST.floyd.SeparationLogicFacts <> id:689 var
R75079:75082 compcert.cfrontend.Clight <> Sset constr
R75088:75093 compcert.cfrontend.Clight <> Ebinop constr
R75105:75106 VST.floyd.SeparationLogicFacts <> ty:693 var
R75102:75103 VST.floyd.SeparationLogicFacts <> e2:692 var
R75099:75100 VST.floyd.SeparationLogicFacts <> e1:691 var
R75095:75097 VST.floyd.SeparationLogicFacts <> cmp:690 var
R75084:75085 VST.floyd.SeparationLogicFacts <> id:689 var
R74794:74798 VST.msl.seplog <> ::logic:'|>'_x not
R75065:75065 VST.msl.seplog <> ::logic:'|>'_x not
R75050:75063 VST.msl.seplog <> ::logic:x_'&&'_x not
R74988:75002 VST.msl.seplog <> ::logic:x_'&&'_x not
R75049:75049 VST.msl.seplog <> ::logic:x_'&&'_x not
R74926:74940 VST.msl.seplog <> ::logic:x_'&&'_x not
R74987:74987 VST.msl.seplog <> ::logic:x_'&&'_x not
R74853:74868 VST.msl.seplog <> ::logic:x_'&&'_x not
R74799:74799 VST.msl.seplog <> ::logic:x_'&&'_x not
R74816:74835 VST.msl.seplog <> ::logic:x_'&&'_x not
R74852:74852 VST.msl.seplog <> ::logic:x_'&&'_x not
R74800:74806 VST.veric.SeparationLogic <> tc_expr def
R74814:74815 VST.floyd.SeparationLogicFacts <> e1:691 var
R74808:74812 VST.floyd.SeparationLogicFacts <> Delta:687 var
R74836:74842 VST.veric.SeparationLogic <> tc_expr def
R74850:74851 VST.floyd.SeparationLogicFacts <> e2:692 var
R74844:74848 VST.floyd.SeparationLogicFacts <> Delta:687 var
R74869:74873 VST.veric.SeparationLogic <> local def
R74876:74877 VST.veric.lift LiftNotation :::'`('_x_')' not
R74894:74924 VST.veric.lift LiftNotation :::'`('_x_')' not
R74878:74889 VST.veric.SeparationLogic <> blocks_match def
R74891:74893 VST.floyd.SeparationLogicFacts <> cmp:690 var
R74912:74920 VST.veric.expr <> eval_expr def
R74922:74923 VST.floyd.SeparationLogicFacts <> e2:692 var
R74897:74905 VST.veric.expr <> eval_expr def
R74907:74908 VST.floyd.SeparationLogicFacts <> e1:691 var
R74982:74984 VST.msl.seplog <> ::logic:x_'*'_x not
R74941:74942 VST.veric.lift LiftNotation :::'`('_x_')' not
R74966:74981 VST.veric.lift LiftNotation :::'`('_x_')' not
R74943:74949 VST.veric.SeparationLogic <> mapsto_ def
R74956:74961 compcert.cfrontend.Clight <> typeof def
R74963:74964 VST.floyd.SeparationLogicFacts <> e1:691 var
R74951:74953 VST.floyd.SeparationLogicFacts <> sh1:694 var
R74969:74977 VST.veric.expr <> eval_expr def
R74979:74980 VST.floyd.SeparationLogicFacts <> e1:691 var
R74985:74986 VST.msl.seplog <> TT meth
R75044:75046 VST.msl.seplog <> ::logic:x_'*'_x not
R75003:75004 VST.veric.lift LiftNotation :::'`('_x_')' not
R75028:75043 VST.veric.lift LiftNotation :::'`('_x_')' not
R75005:75011 VST.veric.SeparationLogic <> mapsto_ def
R75018:75023 compcert.cfrontend.Clight <> typeof def
R75025:75026 VST.floyd.SeparationLogicFacts <> e2:692 var
R75013:75015 VST.floyd.SeparationLogicFacts <> sh2:695 var
R75031:75039 VST.veric.expr <> eval_expr def
R75041:75042 VST.floyd.SeparationLogicFacts <> e2:692 var
R75047:75048 VST.msl.seplog <> TT meth
R75064:75064 VST.floyd.SeparationLogicFacts <> P:688 var
R74778:74782 VST.floyd.SeparationLogicFacts <> Delta:687 var
R74772:74776 VST.floyd.SeparationLogicFacts <> Espec:686 var
R74769:74770 VST.floyd.SeparationLogicFacts <> CS:685 var
R74748:74750 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74714:74738 VST.veric.SeparationLogic <> typecheck_tid_ptr_compare def
R74746:74747 VST.floyd.SeparationLogicFacts <> id:689 var
R74740:74744 VST.floyd.SeparationLogicFacts <> Delta:687 var
R74751:74754 Coq.Init.Datatypes <> true constr
R74699:74701 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74663:74670 VST.veric.Cop2 <> eqb_type def
R74684:74698 VST.veric.Cop2 <> int_or_ptr_type def
R74673:74678 compcert.cfrontend.Clight <> typeof def
R74680:74681 VST.floyd.SeparationLogicFacts <> e2:692 var
R74702:74706 Coq.Init.Datatypes <> false constr
R74648:74650 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74612:74619 VST.veric.Cop2 <> eqb_type def
R74633:74647 VST.veric.Cop2 <> int_or_ptr_type def
R74622:74627 compcert.cfrontend.Clight <> typeof def
R74629:74630 VST.floyd.SeparationLogicFacts <> e1:691 var
R74651:74655 Coq.Init.Datatypes <> false constr
R74597:74599 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74580:74592 VST.veric.SeparationLogic <> is_comparison def
R74594:74596 VST.floyd.SeparationLogicFacts <> cmp:690 var
R74600:74603 Coq.Init.Datatypes <> true constr
R74551:74568 VST.msl.sepalg <> nonidentity def
R74570:74572 VST.floyd.SeparationLogicFacts <> sh2:695 var
R74525:74542 VST.msl.sepalg <> nonidentity def
R74544:74546 VST.floyd.SeparationLogicFacts <> sh1:694 var
R75349:75357 VST.floyd.SeparationLogicFacts PtrCmpB2F semax_pre thm
R75369:75394 VST.floyd.SeparationLogicFacts PtrCmpB semax_ptr_compare_backward prfax
R75349:75357 VST.floyd.SeparationLogicFacts PtrCmpB2F semax_pre thm
R75369:75394 VST.floyd.SeparationLogicFacts PtrCmpB semax_ptr_compare_backward prfax
R75407:75415 VST.msl.seplog <> exp_right meth
R75407:75415 VST.msl.seplog <> exp_right meth
R75432:75440 VST.msl.seplog <> exp_right meth
R75432:75440 VST.msl.seplog <> exp_right meth
R75456:75464 VST.msl.seplog <> exp_right meth
R75456:75464 VST.msl.seplog <> exp_right meth
R75480:75488 VST.msl.seplog <> exp_right meth
R75480:75488 VST.msl.seplog <> exp_right meth
R75504:75512 VST.msl.seplog <> exp_right meth
R75504:75512 VST.msl.seplog <> exp_right meth
R75529:75537 VST.msl.seplog <> exp_right meth
R75529:75537 VST.msl.seplog <> exp_right meth
R75553:75562 VST.msl.seplog <> andp_right meth
R75572:75581 VST.msl.seplog <> prop_right meth
R75553:75562 VST.msl.seplog <> andp_right meth
R75572:75581 VST.msl.seplog <> prop_right meth
R75615:75626 VST.floyd.assert_lemmas <> later_ENTAIL thm
R75615:75626 VST.floyd.assert_lemmas <> later_ENTAIL thm
R75637:75647 VST.floyd.assert_lemmas <> andp_ENTAIL thm
R75657:75667 VST.floyd.assert_lemmas <> ENTAIL_refl thm
R75637:75647 VST.floyd.assert_lemmas <> andp_ENTAIL thm
R75657:75667 VST.floyd.assert_lemmas <> ENTAIL_refl thm
R75683:75691 VST.floyd.assert_lemmas <> subst_exp thm
R75683:75691 VST.floyd.assert_lemmas <> subst_exp thm
R75683:75691 VST.floyd.assert_lemmas <> subst_exp thm
R75755:75761 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R75746:75749 VST.msl.seplog <> ::logic:x_'&&'_x not
R75718:75722 VST.veric.SeparationLogic <> local def
R75725:75734 VST.veric.SeparationLogic <> tc_environ def
R75762:75764 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R75772:75780 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R75769:75771 compcert.common.Values <> val ind
binder 75765:75765 <> b:697
R75781:75785 VST.veric.seplog <> subst def
R75903:75906 VST.msl.seplog <> ::logic:x_'&&'_x not
R75825:75829 VST.veric.SeparationLogic <> local def
R75832:75834 VST.veric.lift LiftNotation :::'`'_x not
R75837:75901 VST.veric.lift LiftNotation :::'`'_x not
R75835:75836 Coq.Init.Logic <> eq ind
R75853:75857 VST.veric.seplog <> subst def
R75869:75877 VST.veric.expr <> eval_expr def
R75880:75885 compcert.cfrontend.Clight <> Ebinop constr
R75863:75864 VST.veric.lift LiftNotation :::'`'_x not
R75865:75865 VST.floyd.SeparationLogicFacts <> b:697 var
R75840:75846 VST.veric.mpred <> eval_id def
R75907:75911 VST.veric.seplog <> subst def
R75917:75918 VST.veric.lift LiftNotation :::'`'_x not
R75919:75919 VST.floyd.SeparationLogicFacts <> b:697 var
R75791:75799 VST.veric.expr <> eval_expr def
R75802:75807 compcert.cfrontend.Clight <> Ebinop constr
R75755:75761 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R75746:75749 VST.msl.seplog <> ::logic:x_'&&'_x not
R75718:75722 VST.veric.SeparationLogic <> local def
R75725:75734 VST.veric.SeparationLogic <> tc_environ def
R75762:75764 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R75772:75780 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R75769:75771 compcert.common.Values <> val ind
binder 75765:75765 <> b:698
R75781:75785 VST.veric.seplog <> subst def
R75903:75906 VST.msl.seplog <> ::logic:x_'&&'_x not
R75825:75829 VST.veric.SeparationLogic <> local def
R75832:75834 VST.veric.lift LiftNotation :::'`'_x not
R75837:75901 VST.veric.lift LiftNotation :::'`'_x not
R75835:75836 Coq.Init.Logic <> eq ind
R75853:75857 VST.veric.seplog <> subst def
R75869:75877 VST.veric.expr <> eval_expr def
R75880:75885 compcert.cfrontend.Clight <> Ebinop constr
R75863:75864 VST.veric.lift LiftNotation :::'`'_x not
R75865:75865 VST.floyd.SeparationLogicFacts <> b:698 var
R75840:75846 VST.veric.mpred <> eval_id def
R75907:75911 VST.veric.seplog <> subst def
R75917:75918 VST.veric.lift LiftNotation :::'`'_x not
R75919:75919 VST.floyd.SeparationLogicFacts <> b:698 var
R75791:75799 VST.veric.expr <> eval_expr def
R75802:75807 compcert.cfrontend.Clight <> Ebinop constr
R75940:75948 VST.msl.seplog <> exp_right meth
R75951:75957 VST.veric.mpred <> eval_id def
R75940:75948 VST.msl.seplog <> exp_right meth
R75951:75957 VST.veric.mpred <> eval_id def
R76004:76008 VST.veric.SeparationLogic <> local def
R76011:76015 VST.veric.mpred <> lift1 def
R76047:76071 VST.veric.SeparationLogic <> typecheck_tid_ptr_compare def
R76107:76107 compcert.lib.Maps <> :::x_'!'_x not
R76124:76127 compcert.lib.Maps <> :::x_'!'_x not
R76108:76117 VST.veric.seplog <> temp_types def
R76107:76107 compcert.lib.Maps <> :::x_'!'_x not
R76124:76127 compcert.lib.Maps <> :::x_'!'_x not
R76108:76117 VST.veric.seplog <> temp_types def
R76169:76178 VST.msl.seplog <> andp_right meth
R76169:76178 VST.msl.seplog <> andp_right meth
R76191:76200 VST.msl.seplog <> prop_right meth
R76191:76200 VST.msl.seplog <> prop_right meth
R76214:76218 VST.veric.seplog <> subst def
R76250:76264 VST.floyd.assert_lemmas <> env_set_env_set thm
R76250:76264 VST.floyd.assert_lemmas <> env_set_env_set thm
R76250:76264 VST.floyd.assert_lemmas <> env_set_env_set thm
R76279:76290 VST.veric.mpred <> eval_id_same thm
R76279:76290 VST.veric.mpred <> eval_id_same thm
R76279:76290 VST.veric.mpred <> eval_id_same thm
R76306:76320 VST.floyd.assert_lemmas <> env_set_eval_id thm
R76306:76320 VST.floyd.assert_lemmas <> env_set_eval_id thm
R76306:76320 VST.floyd.assert_lemmas <> env_set_eval_id thm
R76371:76382 VST.floyd.assert_lemmas <> resubst_full thm
R76371:76382 VST.floyd.assert_lemmas <> resubst_full thm
R76371:76382 VST.floyd.assert_lemmas <> resubst_full thm
R76398:76407 VST.floyd.SeparationLogicFacts <> subst_self thm
R76398:76407 VST.floyd.SeparationLogicFacts <> subst_self thm
R76398:76407 VST.floyd.SeparationLogicFacts <> subst_self thm
R76398:76407 VST.floyd.SeparationLogicFacts <> subst_self thm
R76398:76407 VST.floyd.SeparationLogicFacts <> subst_self thm
R76398:76407 VST.floyd.SeparationLogicFacts <> subst_self thm
R76427:76435 VST.floyd.SeparationLogicFacts PtrCmpB2F <> mod
modtype 76451:76493 <> CLIGHT_SEPARATION_HOARE_LOGIC_SSET_BACKWARD
R76522:76554 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
mod 76512:76519 <> CLIGHT_SEPARATION_HOARE_LOGIC_SSET_BACKWARD.CSHL_Def
ax 76582:76626 CLIGHT_SEPARATION_HOARE_LOGIC_SSET_BACKWARD semax_set_ptr_compare_load_cast_load_backward
R76641:76649 VST.veric.mpred <> compspecs class
binder 76637:76638 <> CS:699
R76660:76669 VST.veric.juicy_extspec <> OracleKind class
binder 76653:76657 <> Espec:700
R76680:76688 VST.veric.seplog <> tycontext ind
binder 76673:76677 <> Delta:701
R76712:76713 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R76714:76718 VST.veric.mpred <> mpred def
R76705:76711 VST.veric.mpred <> environ ind
binder 76702:76702 <> P:702
binder 76721:76722 <> id:703
binder 76724:76724 <> e:704
R76732:76736 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SSET_BACKWARD semax defax
R78585:78601 VST.veric.SeparationLogic <> normal_ret_assert def
R78603:78603 VST.floyd.SeparationLogicFacts <> P:702 var
R78573:78576 compcert.cfrontend.Clight <> Sset constr
R78581:78581 VST.floyd.SeparationLogicFacts <> e:704 var
R78578:78579 VST.floyd.SeparationLogicFacts <> id:703 var
R78052:78064 VST.msl.seplog <> ::logic:x_'||'_x not
R78561:78561 VST.msl.seplog <> ::logic:x_'||'_x not
R77662:77674 VST.msl.seplog <> ::logic:x_'||'_x not
R78051:78051 VST.msl.seplog <> ::logic:x_'||'_x not
R76761:76761 VST.msl.seplog <> ::logic:x_'||'_x not
R76877:76890 VST.msl.seplog <> ::logic:x_'||'_x not
R77661:77661 VST.msl.seplog <> ::logic:x_'||'_x not
R76762:76766 VST.msl.seplog <> ::logic:'|>'_x not
R76876:76876 VST.msl.seplog <> ::logic:'|>'_x not
R76835:76851 VST.msl.seplog <> ::logic:x_'&&'_x not
R76767:76767 VST.msl.seplog <> ::logic:x_'&&'_x not
R76783:76801 VST.msl.seplog <> ::logic:x_'&&'_x not
R76834:76834 VST.msl.seplog <> ::logic:x_'&&'_x not
R76768:76774 VST.veric.SeparationLogic <> tc_expr def
R76782:76782 VST.floyd.SeparationLogicFacts <> e:704 var
R76776:76780 VST.floyd.SeparationLogicFacts <> Delta:701 var
R76802:76811 VST.veric.SeparationLogic <> tc_temp_id def
R76833:76833 VST.floyd.SeparationLogicFacts <> e:704 var
R76827:76831 VST.floyd.SeparationLogicFacts <> Delta:701 var
R76817:76822 compcert.cfrontend.Clight <> typeof def
R76824:76824 VST.floyd.SeparationLogicFacts <> e:704 var
R76813:76814 VST.floyd.SeparationLogicFacts <> id:703 var
R76852:76856 VST.veric.seplog <> subst def
R76875:76875 VST.floyd.SeparationLogicFacts <> P:702 var
R76862:76870 VST.veric.expr <> eval_expr def
R76872:76872 VST.floyd.SeparationLogicFacts <> e:704 var
R76858:76859 VST.floyd.SeparationLogicFacts <> id:703 var
R76891:76893 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R76919:76920 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R76899:76918 compcert.cfrontend.Cop <> binary_operation ind
binder 76894:76896 <> cmp:705
R76921:76923 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R76932:76933 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R76928:76931 compcert.cfrontend.Clight <> expr ind
binder 76924:76925 <> e1:706
R76934:76936 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R76945:76955 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R76941:76944 compcert.cfrontend.Clight <> expr ind
binder 76937:76938 <> e2:707
R76956:76958 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R76967:76968 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R76963:76966 compcert.cfrontend.Ctypes <> type ind
binder 76959:76960 <> ty:708
R76969:76971 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R76982:76983 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R76977:76981 VST.msl.shares <> share def
binder 76972:76974 <> sh1:709
R76984:76986 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R76997:77008 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R76992:76996 VST.msl.shares <> share def
binder 76987:76989 <> sh2:710
R77328:77345 VST.msl.seplog <> ::logic:x_'&&'_x not
R77660:77660 VST.msl.seplog <> ::logic:x_'&&'_x not
R77009:77012 VST.msl.seplog <> ::logic:'!!'_x not
R77327:77327 VST.msl.seplog <> ::logic:'!!'_x not
R77036:77053 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R77014:77016 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77013:77013 VST.floyd.SeparationLogicFacts <> e:704 var
R77017:77022 compcert.cfrontend.Clight <> Ebinop constr
R77034:77035 VST.floyd.SeparationLogicFacts <> ty:708 var
R77031:77032 VST.floyd.SeparationLogicFacts <> e2:707 var
R77028:77029 VST.floyd.SeparationLogicFacts <> e1:706 var
R77024:77026 VST.floyd.SeparationLogicFacts <> cmp:705 var
R77076:77079 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R77054:77071 VST.msl.sepalg <> nonidentity def
R77073:77075 VST.floyd.SeparationLogicFacts <> sh1:709 var
R77102:77119 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R77080:77097 VST.msl.sepalg <> nonidentity def
R77099:77101 VST.floyd.SeparationLogicFacts <> sh2:710 var
R77144:77161 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R77137:77139 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77120:77132 VST.veric.SeparationLogic <> is_comparison def
R77134:77136 VST.floyd.SeparationLogicFacts <> cmp:705 var
R77140:77143 Coq.Init.Datatypes <> true constr
R77206:77223 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R77198:77200 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77162:77169 VST.veric.Cop2 <> eqb_type def
R77183:77197 VST.veric.Cop2 <> int_or_ptr_type def
R77172:77177 compcert.cfrontend.Clight <> typeof def
R77179:77180 VST.floyd.SeparationLogicFacts <> e1:706 var
R77201:77205 Coq.Init.Datatypes <> false constr
R77268:77285 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R77260:77262 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77224:77231 VST.veric.Cop2 <> eqb_type def
R77245:77259 VST.veric.Cop2 <> int_or_ptr_type def
R77234:77239 compcert.cfrontend.Clight <> typeof def
R77241:77242 VST.floyd.SeparationLogicFacts <> e2:707 var
R77263:77267 Coq.Init.Datatypes <> false constr
R77320:77322 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77286:77310 VST.veric.SeparationLogic <> typecheck_tid_ptr_compare def
R77318:77319 VST.floyd.SeparationLogicFacts <> id:703 var
R77312:77316 VST.floyd.SeparationLogicFacts <> Delta:701 var
R77323:77326 Coq.Init.Datatypes <> true constr
R77346:77350 VST.msl.seplog <> ::logic:'|>'_x not
R77659:77659 VST.msl.seplog <> ::logic:'|>'_x not
R77601:77614 VST.msl.seplog <> ::logic:x_'&&'_x not
R77539:77553 VST.msl.seplog <> ::logic:x_'&&'_x not
R77600:77600 VST.msl.seplog <> ::logic:x_'&&'_x not
R77477:77491 VST.msl.seplog <> ::logic:x_'&&'_x not
R77538:77538 VST.msl.seplog <> ::logic:x_'&&'_x not
R77405:77419 VST.msl.seplog <> ::logic:x_'&&'_x not
R77351:77351 VST.msl.seplog <> ::logic:x_'&&'_x not
R77368:77387 VST.msl.seplog <> ::logic:x_'&&'_x not
R77404:77404 VST.msl.seplog <> ::logic:x_'&&'_x not
R77352:77358 VST.veric.SeparationLogic <> tc_expr def
R77366:77367 VST.floyd.SeparationLogicFacts <> e1:706 var
R77360:77364 VST.floyd.SeparationLogicFacts <> Delta:701 var
R77388:77394 VST.veric.SeparationLogic <> tc_expr def
R77402:77403 VST.floyd.SeparationLogicFacts <> e2:707 var
R77396:77400 VST.floyd.SeparationLogicFacts <> Delta:701 var
R77420:77424 VST.veric.SeparationLogic <> local def
R77427:77428 VST.veric.lift LiftNotation :::'`('_x_')' not
R77445:77475 VST.veric.lift LiftNotation :::'`('_x_')' not
R77429:77440 VST.veric.SeparationLogic <> blocks_match def
R77442:77444 VST.floyd.SeparationLogicFacts <> cmp:705 var
R77463:77471 VST.veric.expr <> eval_expr def
R77473:77474 VST.floyd.SeparationLogicFacts <> e2:707 var
R77448:77456 VST.veric.expr <> eval_expr def
R77458:77459 VST.floyd.SeparationLogicFacts <> e1:706 var
R77533:77535 VST.msl.seplog <> ::logic:x_'*'_x not
R77492:77493 VST.veric.lift LiftNotation :::'`('_x_')' not
R77517:77532 VST.veric.lift LiftNotation :::'`('_x_')' not
R77494:77500 VST.veric.SeparationLogic <> mapsto_ def
R77507:77512 compcert.cfrontend.Clight <> typeof def
R77514:77515 VST.floyd.SeparationLogicFacts <> e1:706 var
R77502:77504 VST.floyd.SeparationLogicFacts <> sh1:709 var
R77520:77528 VST.veric.expr <> eval_expr def
R77530:77531 VST.floyd.SeparationLogicFacts <> e1:706 var
R77536:77537 VST.msl.seplog <> TT meth
R77595:77597 VST.msl.seplog <> ::logic:x_'*'_x not
R77554:77555 VST.veric.lift LiftNotation :::'`('_x_')' not
R77579:77594 VST.veric.lift LiftNotation :::'`('_x_')' not
R77556:77562 VST.veric.SeparationLogic <> mapsto_ def
R77569:77574 compcert.cfrontend.Clight <> typeof def
R77576:77577 VST.floyd.SeparationLogicFacts <> e2:707 var
R77564:77566 VST.floyd.SeparationLogicFacts <> sh2:710 var
R77582:77590 VST.veric.expr <> eval_expr def
R77592:77593 VST.floyd.SeparationLogicFacts <> e2:707 var
R77598:77599 VST.msl.seplog <> TT meth
R77615:77619 VST.veric.seplog <> subst def
R77658:77658 VST.floyd.SeparationLogicFacts <> P:702 var
R77625:77633 VST.veric.expr <> eval_expr def
R77636:77641 compcert.cfrontend.Clight <> Ebinop constr
R77653:77654 VST.floyd.SeparationLogicFacts <> ty:708 var
R77650:77651 VST.floyd.SeparationLogicFacts <> e2:707 var
R77647:77648 VST.floyd.SeparationLogicFacts <> e1:706 var
R77643:77645 VST.floyd.SeparationLogicFacts <> cmp:705 var
R77621:77622 VST.floyd.SeparationLogicFacts <> id:703 var
R77675:77677 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R77687:77688 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R77682:77686 VST.msl.shares <> share def
binder 77678:77679 <> sh:711
R77689:77691 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R77700:77701 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R77696:77699 compcert.cfrontend.Ctypes <> type ind
binder 77692:77693 <> t2:712
R77702:77704 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R77712:77727 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R77709:77711 compcert.common.Values <> val ind
binder 77705:77706 <> v2:713
R77860:77872 VST.msl.seplog <> ::logic:x_'&&'_x not
R77728:77731 VST.msl.seplog <> ::logic:'!!'_x not
R77859:77859 VST.msl.seplog <> ::logic:'!!'_x not
R77762:77783 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R77752:77754 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77732:77742 VST.veric.SeparationLogic <> typeof_temp def
R77750:77751 VST.floyd.SeparationLogicFacts <> id:703 var
R77744:77748 VST.floyd.SeparationLogicFacts <> Delta:701 var
R77755:77758 Coq.Init.Datatypes <> Some constr
R77760:77761 VST.floyd.SeparationLogicFacts <> t2:712 var
R77820:77841 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R77813:77815 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77784:77798 VST.veric.expr <> is_neutral_cast def
R77811:77812 VST.floyd.SeparationLogicFacts <> t2:712 var
R77801:77806 compcert.cfrontend.Clight <> typeof def
R77808:77808 VST.floyd.SeparationLogicFacts <> e:704 var
R77816:77819 Coq.Init.Datatypes <> true constr
R77842:77855 VST.veric.shares <> readable_share def
R77857:77858 VST.floyd.SeparationLogicFacts <> sh:711 var
R77873:77877 VST.msl.seplog <> ::logic:'|>'_x not
R78050:78050 VST.msl.seplog <> ::logic:'|>'_x not
R78016:78033 VST.msl.seplog <> ::logic:x_'&&'_x not
R77946:77964 VST.msl.seplog <> ::logic:x_'&&'_x not
R78015:78015 VST.msl.seplog <> ::logic:x_'&&'_x not
R77878:77878 VST.msl.seplog <> ::logic:x_'&&'_x not
R77896:77914 VST.msl.seplog <> ::logic:x_'&&'_x not
R77879:77887 VST.veric.SeparationLogic <> tc_lvalue def
R77895:77895 VST.floyd.SeparationLogicFacts <> e:704 var
R77889:77893 VST.floyd.SeparationLogicFacts <> Delta:701 var
R77915:77919 VST.veric.SeparationLogic <> local def
R77922:77923 VST.veric.lift LiftNotation :::'`('_x_')' not
R77944:77944 VST.veric.lift LiftNotation :::'`('_x_')' not
R77924:77929 VST.veric.Cop2 <> tc_val def
R77942:77943 VST.floyd.SeparationLogicFacts <> v2:713 var
R77932:77937 compcert.cfrontend.Clight <> typeof def
R77939:77939 VST.floyd.SeparationLogicFacts <> e:704 var
R78010:78012 VST.msl.seplog <> ::logic:x_'*'_x not
R77965:77966 VST.veric.lift LiftNotation :::'`('_x_')' not
R77987:78009 VST.veric.lift LiftNotation :::'`('_x_')' not
R77967:77972 VST.veric.SeparationLogic <> mapsto def
R77978:77983 compcert.cfrontend.Clight <> typeof def
R77985:77985 VST.floyd.SeparationLogicFacts <> e:704 var
R77974:77975 VST.floyd.SeparationLogicFacts <> sh:711 var
R78006:78006 VST.veric.lift LiftNotation :::'`'_x not
R78007:78008 VST.floyd.SeparationLogicFacts <> v2:713 var
R77990:78000 VST.veric.expr <> eval_lvalue def
R78002:78002 VST.floyd.SeparationLogicFacts <> e:704 var
R78013:78014 VST.msl.seplog <> TT meth
R78034:78038 VST.veric.seplog <> subst def
R78049:78049 VST.floyd.SeparationLogicFacts <> P:702 var
R78044:78044 VST.veric.lift LiftNotation :::'`'_x not
R78045:78046 VST.floyd.SeparationLogicFacts <> v2:713 var
R78040:78041 VST.floyd.SeparationLogicFacts <> id:703 var
R78065:78067 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R78077:78078 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R78072:78076 VST.msl.shares <> share def
binder 78068:78069 <> sh:714
R78079:78081 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R78090:78091 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R78086:78089 compcert.cfrontend.Clight <> expr ind
binder 78082:78083 <> e1:715
R78092:78094 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R78103:78104 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R78099:78102 compcert.cfrontend.Ctypes <> type ind
binder 78095:78096 <> t1:716
R78105:78107 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R78115:78130 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R78112:78114 compcert.common.Values <> val ind
binder 78108:78109 <> v2:717
R78307:78319 VST.msl.seplog <> ::logic:x_'&&'_x not
R78131:78134 VST.msl.seplog <> ::logic:'!!'_x not
R78306:78306 VST.msl.seplog <> ::logic:'!!'_x not
R78150:78171 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R78136:78138 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78135:78135 VST.floyd.SeparationLogicFacts <> e:704 var
R78139:78143 compcert.cfrontend.Clight <> Ecast constr
R78148:78149 VST.floyd.SeparationLogicFacts <> t1:716 var
R78145:78146 VST.floyd.SeparationLogicFacts <> e1:715 var
R78202:78223 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R78192:78194 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78172:78182 VST.veric.SeparationLogic <> typeof_temp def
R78190:78191 VST.floyd.SeparationLogicFacts <> id:703 var
R78184:78188 VST.floyd.SeparationLogicFacts <> Delta:701 var
R78195:78198 Coq.Init.Datatypes <> Some constr
R78200:78201 VST.floyd.SeparationLogicFacts <> t1:716 var
R78267:78288 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R78259:78261 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78224:78243 VST.veric.SeparationLogic <> cast_pointer_to_bool def
R78257:78258 VST.floyd.SeparationLogicFacts <> t1:716 var
R78246:78251 compcert.cfrontend.Clight <> typeof def
R78253:78254 VST.floyd.SeparationLogicFacts <> e1:715 var
R78262:78266 Coq.Init.Datatypes <> false constr
R78289:78302 VST.veric.shares <> readable_share def
R78304:78305 VST.floyd.SeparationLogicFacts <> sh:714 var
R78320:78324 VST.msl.seplog <> ::logic:'|>'_x not
R78560:78560 VST.msl.seplog <> ::logic:'|>'_x not
R78488:78505 VST.msl.seplog <> ::logic:x_'&&'_x not
R78416:78434 VST.msl.seplog <> ::logic:x_'&&'_x not
R78487:78487 VST.msl.seplog <> ::logic:x_'&&'_x not
R78325:78325 VST.msl.seplog <> ::logic:x_'&&'_x not
R78344:78362 VST.msl.seplog <> ::logic:x_'&&'_x not
R78326:78334 VST.veric.SeparationLogic <> tc_lvalue def
R78342:78343 VST.floyd.SeparationLogicFacts <> e1:715 var
R78336:78340 VST.floyd.SeparationLogicFacts <> Delta:701 var
R78363:78367 VST.veric.SeparationLogic <> local def
R78370:78371 VST.veric.lift LiftNotation :::'`('_x_')' not
R78381:78414 VST.veric.lift LiftNotation :::'`('_x_')' not
R78372:78377 VST.veric.Cop2 <> tc_val def
R78379:78380 VST.floyd.SeparationLogicFacts <> t1:716 var
R78384:78385 VST.veric.lift LiftNotation :::'`('_x_')' not
R78413:78413 VST.veric.lift LiftNotation :::'`('_x_')' not
R78386:78394 VST.veric.expr <> eval_cast def
R78411:78412 VST.floyd.SeparationLogicFacts <> v2:717 var
R78408:78409 VST.floyd.SeparationLogicFacts <> t1:716 var
R78397:78402 compcert.cfrontend.Clight <> typeof def
R78404:78405 VST.floyd.SeparationLogicFacts <> e1:715 var
R78482:78484 VST.msl.seplog <> ::logic:x_'*'_x not
R78435:78436 VST.veric.lift LiftNotation :::'`('_x_')' not
R78458:78481 VST.veric.lift LiftNotation :::'`('_x_')' not
R78437:78442 VST.veric.SeparationLogic <> mapsto def
R78448:78453 compcert.cfrontend.Clight <> typeof def
R78455:78456 VST.floyd.SeparationLogicFacts <> e1:715 var
R78444:78445 VST.floyd.SeparationLogicFacts <> sh:714 var
R78478:78478 VST.veric.lift LiftNotation :::'`'_x not
R78479:78480 VST.floyd.SeparationLogicFacts <> v2:717 var
R78461:78471 VST.veric.expr <> eval_lvalue def
R78473:78474 VST.floyd.SeparationLogicFacts <> e1:715 var
R78485:78486 VST.msl.seplog <> TT meth
R78506:78510 VST.veric.seplog <> subst def
R78559:78559 VST.floyd.SeparationLogicFacts <> P:702 var
R78516:78517 VST.veric.lift LiftNotation :::'`('_x_')' not
R78556:78556 VST.veric.lift LiftNotation :::'`('_x_')' not
R78518:78526 VST.veric.val_lemmas <> force_val def
R78529:78536 VST.veric.Clight_Cop2 <> sem_cast def
R78553:78554 VST.floyd.SeparationLogicFacts <> v2:717 var
R78550:78551 VST.floyd.SeparationLogicFacts <> t1:716 var
R78539:78544 compcert.cfrontend.Clight <> typeof def
R78546:78547 VST.floyd.SeparationLogicFacts <> e1:715 var
R78512:78513 VST.floyd.SeparationLogicFacts <> id:703 var
R76747:76751 VST.floyd.SeparationLogicFacts <> Delta:701 var
R76741:76745 VST.floyd.SeparationLogicFacts <> Espec:700 var
R76738:76739 VST.floyd.SeparationLogicFacts <> CS:699 var
R78612:78654 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SSET_BACKWARD <> modtype
R78685:78717 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R78736:78776 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R78802:78804 VST.floyd.SeparationLogicFacts Def <> modtype
R78821:78860 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_EXTRACTION <> mod
R78886:78888 VST.floyd.SeparationLogicFacts Def <> modtype
R78905:78946 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SET_BACKWARD <> mod
R78972:78974 VST.floyd.SeparationLogicFacts Def <> modtype
R78994:79039 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_BACKWARD <> mod
R79065:79067 VST.floyd.SeparationLogicFacts Def <> modtype
R79085:79127 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_BACKWARD <> mod
R79153:79155 VST.floyd.SeparationLogicFacts Def <> modtype
R79177:79224 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_BACKWARD <> mod
R79250:79252 VST.floyd.SeparationLogicFacts Def <> modtype
R79263:79305 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SSET_BACKWARD <> mod
R79331:79333 VST.floyd.SeparationLogicFacts Def <> modtype
mod 78665:78670 <> ToSset
R79356:79358 VST.floyd.SeparationLogicFacts Def <> modtype
mod 79344:79351 <> ToSset.CSHL_Def
R79383:79396 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R79399:79401 VST.floyd.SeparationLogicFacts Def <> modtype
R79405:79410 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 79368:79378 <> ToSset.ConseqFacts
R79434:79445 VST.floyd.SeparationLogicFacts GenExtrFacts <> modtype
R79448:79450 VST.floyd.SeparationLogicFacts Def <> modtype
R79454:79459 VST.floyd.SeparationLogicFacts Conseq <> modtype
R79463:79466 VST.floyd.SeparationLogicFacts Extr <> modtype
mod 79421:79429 <> ToSset.ExtrFacts
prf 79606:79650 ToSset semax_set_ptr_compare_load_cast_load_backward
R79665:79673 VST.veric.mpred <> compspecs class
binder 79661:79662 <> CS:719
R79684:79693 VST.veric.juicy_extspec <> OracleKind class
binder 79677:79681 <> Espec:720
R79704:79712 VST.veric.seplog <> tycontext ind
binder 79697:79701 <> Delta:721
R79736:79737 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79738:79742 VST.veric.mpred <> mpred def
R79729:79735 VST.veric.mpred <> environ ind
binder 79726:79726 <> P:722
binder 79745:79746 <> id:723
binder 79748:79748 <> e:724
R79756:79760 VST.floyd.SeparationLogicFacts Def semax defax
R81609:81625 VST.veric.SeparationLogic <> normal_ret_assert def
R81627:81627 VST.floyd.SeparationLogicFacts <> P:722 var
R81597:81600 compcert.cfrontend.Clight <> Sset constr
R81605:81605 VST.floyd.SeparationLogicFacts <> e:724 var
R81602:81603 VST.floyd.SeparationLogicFacts <> id:723 var
R81076:81088 VST.msl.seplog <> ::logic:x_'||'_x not
R81585:81585 VST.msl.seplog <> ::logic:x_'||'_x not
R80686:80698 VST.msl.seplog <> ::logic:x_'||'_x not
R81075:81075 VST.msl.seplog <> ::logic:x_'||'_x not
R79785:79785 VST.msl.seplog <> ::logic:x_'||'_x not
R79901:79914 VST.msl.seplog <> ::logic:x_'||'_x not
R80685:80685 VST.msl.seplog <> ::logic:x_'||'_x not
R79786:79790 VST.msl.seplog <> ::logic:'|>'_x not
R79900:79900 VST.msl.seplog <> ::logic:'|>'_x not
R79859:79875 VST.msl.seplog <> ::logic:x_'&&'_x not
R79791:79791 VST.msl.seplog <> ::logic:x_'&&'_x not
R79807:79825 VST.msl.seplog <> ::logic:x_'&&'_x not
R79858:79858 VST.msl.seplog <> ::logic:x_'&&'_x not
R79792:79798 VST.veric.SeparationLogic <> tc_expr def
R79806:79806 VST.floyd.SeparationLogicFacts <> e:724 var
R79800:79804 VST.floyd.SeparationLogicFacts <> Delta:721 var
R79826:79835 VST.veric.SeparationLogic <> tc_temp_id def
R79857:79857 VST.floyd.SeparationLogicFacts <> e:724 var
R79851:79855 VST.floyd.SeparationLogicFacts <> Delta:721 var
R79841:79846 compcert.cfrontend.Clight <> typeof def
R79848:79848 VST.floyd.SeparationLogicFacts <> e:724 var
R79837:79838 VST.floyd.SeparationLogicFacts <> id:723 var
R79876:79880 VST.veric.seplog <> subst def
R79899:79899 VST.floyd.SeparationLogicFacts <> P:722 var
R79886:79894 VST.veric.expr <> eval_expr def
R79896:79896 VST.floyd.SeparationLogicFacts <> e:724 var
R79882:79883 VST.floyd.SeparationLogicFacts <> id:723 var
R79915:79917 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R79943:79944 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R79923:79942 compcert.cfrontend.Cop <> binary_operation ind
binder 79918:79920 <> cmp:725
R79945:79947 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R79956:79957 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R79952:79955 compcert.cfrontend.Clight <> expr ind
binder 79948:79949 <> e1:726
R79958:79960 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R79969:79979 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R79965:79968 compcert.cfrontend.Clight <> expr ind
binder 79961:79962 <> e2:727
R79980:79982 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R79991:79992 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R79987:79990 compcert.cfrontend.Ctypes <> type ind
binder 79983:79984 <> ty:728
R79993:79995 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R80006:80007 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R80001:80005 VST.msl.shares <> share def
binder 79996:79998 <> sh1:729
R80008:80010 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R80021:80032 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R80016:80020 VST.msl.shares <> share def
binder 80011:80013 <> sh2:730
R80352:80369 VST.msl.seplog <> ::logic:x_'&&'_x not
R80684:80684 VST.msl.seplog <> ::logic:x_'&&'_x not
R80033:80036 VST.msl.seplog <> ::logic:'!!'_x not
R80351:80351 VST.msl.seplog <> ::logic:'!!'_x not
R80060:80077 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R80038:80040 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80037:80037 VST.floyd.SeparationLogicFacts <> e:724 var
R80041:80046 compcert.cfrontend.Clight <> Ebinop constr
R80058:80059 VST.floyd.SeparationLogicFacts <> ty:728 var
R80055:80056 VST.floyd.SeparationLogicFacts <> e2:727 var
R80052:80053 VST.floyd.SeparationLogicFacts <> e1:726 var
R80048:80050 VST.floyd.SeparationLogicFacts <> cmp:725 var
R80100:80103 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R80078:80095 VST.msl.sepalg <> nonidentity def
R80097:80099 VST.floyd.SeparationLogicFacts <> sh1:729 var
R80126:80143 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R80104:80121 VST.msl.sepalg <> nonidentity def
R80123:80125 VST.floyd.SeparationLogicFacts <> sh2:730 var
R80168:80185 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R80161:80163 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80144:80156 VST.veric.SeparationLogic <> is_comparison def
R80158:80160 VST.floyd.SeparationLogicFacts <> cmp:725 var
R80164:80167 Coq.Init.Datatypes <> true constr
R80230:80247 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R80222:80224 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80186:80193 VST.veric.Cop2 <> eqb_type def
R80207:80221 VST.veric.Cop2 <> int_or_ptr_type def
R80196:80201 compcert.cfrontend.Clight <> typeof def
R80203:80204 VST.floyd.SeparationLogicFacts <> e1:726 var
R80225:80229 Coq.Init.Datatypes <> false constr
R80292:80309 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R80284:80286 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80248:80255 VST.veric.Cop2 <> eqb_type def
R80269:80283 VST.veric.Cop2 <> int_or_ptr_type def
R80258:80263 compcert.cfrontend.Clight <> typeof def
R80265:80266 VST.floyd.SeparationLogicFacts <> e2:727 var
R80287:80291 Coq.Init.Datatypes <> false constr
R80344:80346 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80310:80334 VST.veric.SeparationLogic <> typecheck_tid_ptr_compare def
R80342:80343 VST.floyd.SeparationLogicFacts <> id:723 var
R80336:80340 VST.floyd.SeparationLogicFacts <> Delta:721 var
R80347:80350 Coq.Init.Datatypes <> true constr
R80370:80374 VST.msl.seplog <> ::logic:'|>'_x not
R80683:80683 VST.msl.seplog <> ::logic:'|>'_x not
R80625:80638 VST.msl.seplog <> ::logic:x_'&&'_x not
R80563:80577 VST.msl.seplog <> ::logic:x_'&&'_x not
R80624:80624 VST.msl.seplog <> ::logic:x_'&&'_x not
R80501:80515 VST.msl.seplog <> ::logic:x_'&&'_x not
R80562:80562 VST.msl.seplog <> ::logic:x_'&&'_x not
R80429:80443 VST.msl.seplog <> ::logic:x_'&&'_x not
R80375:80375 VST.msl.seplog <> ::logic:x_'&&'_x not
R80392:80411 VST.msl.seplog <> ::logic:x_'&&'_x not
R80428:80428 VST.msl.seplog <> ::logic:x_'&&'_x not
R80376:80382 VST.veric.SeparationLogic <> tc_expr def
R80390:80391 VST.floyd.SeparationLogicFacts <> e1:726 var
R80384:80388 VST.floyd.SeparationLogicFacts <> Delta:721 var
R80412:80418 VST.veric.SeparationLogic <> tc_expr def
R80426:80427 VST.floyd.SeparationLogicFacts <> e2:727 var
R80420:80424 VST.floyd.SeparationLogicFacts <> Delta:721 var
R80444:80448 VST.veric.SeparationLogic <> local def
R80451:80452 VST.veric.lift LiftNotation :::'`('_x_')' not
R80469:80499 VST.veric.lift LiftNotation :::'`('_x_')' not
R80453:80464 VST.veric.SeparationLogic <> blocks_match def
R80466:80468 VST.floyd.SeparationLogicFacts <> cmp:725 var
R80487:80495 VST.veric.expr <> eval_expr def
R80497:80498 VST.floyd.SeparationLogicFacts <> e2:727 var
R80472:80480 VST.veric.expr <> eval_expr def
R80482:80483 VST.floyd.SeparationLogicFacts <> e1:726 var
R80557:80559 VST.msl.seplog <> ::logic:x_'*'_x not
R80516:80517 VST.veric.lift LiftNotation :::'`('_x_')' not
R80541:80556 VST.veric.lift LiftNotation :::'`('_x_')' not
R80518:80524 VST.veric.SeparationLogic <> mapsto_ def
R80531:80536 compcert.cfrontend.Clight <> typeof def
R80538:80539 VST.floyd.SeparationLogicFacts <> e1:726 var
R80526:80528 VST.floyd.SeparationLogicFacts <> sh1:729 var
R80544:80552 VST.veric.expr <> eval_expr def
R80554:80555 VST.floyd.SeparationLogicFacts <> e1:726 var
R80560:80561 VST.msl.seplog <> TT meth
R80619:80621 VST.msl.seplog <> ::logic:x_'*'_x not
R80578:80579 VST.veric.lift LiftNotation :::'`('_x_')' not
R80603:80618 VST.veric.lift LiftNotation :::'`('_x_')' not
R80580:80586 VST.veric.SeparationLogic <> mapsto_ def
R80593:80598 compcert.cfrontend.Clight <> typeof def
R80600:80601 VST.floyd.SeparationLogicFacts <> e2:727 var
R80588:80590 VST.floyd.SeparationLogicFacts <> sh2:730 var
R80606:80614 VST.veric.expr <> eval_expr def
R80616:80617 VST.floyd.SeparationLogicFacts <> e2:727 var
R80622:80623 VST.msl.seplog <> TT meth
R80639:80643 VST.veric.seplog <> subst def
R80682:80682 VST.floyd.SeparationLogicFacts <> P:722 var
R80649:80657 VST.veric.expr <> eval_expr def
R80660:80665 compcert.cfrontend.Clight <> Ebinop constr
R80677:80678 VST.floyd.SeparationLogicFacts <> ty:728 var
R80674:80675 VST.floyd.SeparationLogicFacts <> e2:727 var
R80671:80672 VST.floyd.SeparationLogicFacts <> e1:726 var
R80667:80669 VST.floyd.SeparationLogicFacts <> cmp:725 var
R80645:80646 VST.floyd.SeparationLogicFacts <> id:723 var
R80699:80701 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R80711:80712 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R80706:80710 VST.msl.shares <> share def
binder 80702:80703 <> sh:731
R80713:80715 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R80724:80725 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R80720:80723 compcert.cfrontend.Ctypes <> type ind
binder 80716:80717 <> t2:732
R80726:80728 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R80736:80751 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R80733:80735 compcert.common.Values <> val ind
binder 80729:80730 <> v2:733
R80884:80896 VST.msl.seplog <> ::logic:x_'&&'_x not
R80752:80755 VST.msl.seplog <> ::logic:'!!'_x not
R80883:80883 VST.msl.seplog <> ::logic:'!!'_x not
R80786:80807 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R80776:80778 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80756:80766 VST.veric.SeparationLogic <> typeof_temp def
R80774:80775 VST.floyd.SeparationLogicFacts <> id:723 var
R80768:80772 VST.floyd.SeparationLogicFacts <> Delta:721 var
R80779:80782 Coq.Init.Datatypes <> Some constr
R80784:80785 VST.floyd.SeparationLogicFacts <> t2:732 var
R80844:80865 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R80837:80839 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80808:80822 VST.veric.expr <> is_neutral_cast def
R80835:80836 VST.floyd.SeparationLogicFacts <> t2:732 var
R80825:80830 compcert.cfrontend.Clight <> typeof def
R80832:80832 VST.floyd.SeparationLogicFacts <> e:724 var
R80840:80843 Coq.Init.Datatypes <> true constr
R80866:80879 VST.veric.shares <> readable_share def
R80881:80882 VST.floyd.SeparationLogicFacts <> sh:731 var
R80897:80901 VST.msl.seplog <> ::logic:'|>'_x not
R81074:81074 VST.msl.seplog <> ::logic:'|>'_x not
R81040:81057 VST.msl.seplog <> ::logic:x_'&&'_x not
R80970:80988 VST.msl.seplog <> ::logic:x_'&&'_x not
R81039:81039 VST.msl.seplog <> ::logic:x_'&&'_x not
R80902:80902 VST.msl.seplog <> ::logic:x_'&&'_x not
R80920:80938 VST.msl.seplog <> ::logic:x_'&&'_x not
R80903:80911 VST.veric.SeparationLogic <> tc_lvalue def
R80919:80919 VST.floyd.SeparationLogicFacts <> e:724 var
R80913:80917 VST.floyd.SeparationLogicFacts <> Delta:721 var
R80939:80943 VST.veric.SeparationLogic <> local def
R80946:80947 VST.veric.lift LiftNotation :::'`('_x_')' not
R80968:80968 VST.veric.lift LiftNotation :::'`('_x_')' not
R80948:80953 VST.veric.Cop2 <> tc_val def
R80966:80967 VST.floyd.SeparationLogicFacts <> v2:733 var
R80956:80961 compcert.cfrontend.Clight <> typeof def
R80963:80963 VST.floyd.SeparationLogicFacts <> e:724 var
R81034:81036 VST.msl.seplog <> ::logic:x_'*'_x not
R80989:80990 VST.veric.lift LiftNotation :::'`('_x_')' not
R81011:81033 VST.veric.lift LiftNotation :::'`('_x_')' not
R80991:80996 VST.veric.SeparationLogic <> mapsto def
R81002:81007 compcert.cfrontend.Clight <> typeof def
R81009:81009 VST.floyd.SeparationLogicFacts <> e:724 var
R80998:80999 VST.floyd.SeparationLogicFacts <> sh:731 var
R81030:81030 VST.veric.lift LiftNotation :::'`'_x not
R81031:81032 VST.floyd.SeparationLogicFacts <> v2:733 var
R81014:81024 VST.veric.expr <> eval_lvalue def
R81026:81026 VST.floyd.SeparationLogicFacts <> e:724 var
R81037:81038 VST.msl.seplog <> TT meth
R81058:81062 VST.veric.seplog <> subst def
R81073:81073 VST.floyd.SeparationLogicFacts <> P:722 var
R81068:81068 VST.veric.lift LiftNotation :::'`'_x not
R81069:81070 VST.floyd.SeparationLogicFacts <> v2:733 var
R81064:81065 VST.floyd.SeparationLogicFacts <> id:723 var
R81089:81091 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R81101:81102 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R81096:81100 VST.msl.shares <> share def
binder 81092:81093 <> sh:734
R81103:81105 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R81114:81115 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R81110:81113 compcert.cfrontend.Clight <> expr ind
binder 81106:81107 <> e1:735
R81116:81118 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R81127:81128 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R81123:81126 compcert.cfrontend.Ctypes <> type ind
binder 81119:81120 <> t1:736
R81129:81131 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R81139:81154 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R81136:81138 compcert.common.Values <> val ind
binder 81132:81133 <> v2:737
R81331:81343 VST.msl.seplog <> ::logic:x_'&&'_x not
R81155:81158 VST.msl.seplog <> ::logic:'!!'_x not
R81330:81330 VST.msl.seplog <> ::logic:'!!'_x not
R81174:81195 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R81160:81162 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81159:81159 VST.floyd.SeparationLogicFacts <> e:724 var
R81163:81167 compcert.cfrontend.Clight <> Ecast constr
R81172:81173 VST.floyd.SeparationLogicFacts <> t1:736 var
R81169:81170 VST.floyd.SeparationLogicFacts <> e1:735 var
R81226:81247 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R81216:81218 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81196:81206 VST.veric.SeparationLogic <> typeof_temp def
R81214:81215 VST.floyd.SeparationLogicFacts <> id:723 var
R81208:81212 VST.floyd.SeparationLogicFacts <> Delta:721 var
R81219:81222 Coq.Init.Datatypes <> Some constr
R81224:81225 VST.floyd.SeparationLogicFacts <> t1:736 var
R81291:81312 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R81283:81285 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81248:81267 VST.veric.SeparationLogic <> cast_pointer_to_bool def
R81281:81282 VST.floyd.SeparationLogicFacts <> t1:736 var
R81270:81275 compcert.cfrontend.Clight <> typeof def
R81277:81278 VST.floyd.SeparationLogicFacts <> e1:735 var
R81286:81290 Coq.Init.Datatypes <> false constr
R81313:81326 VST.veric.shares <> readable_share def
R81328:81329 VST.floyd.SeparationLogicFacts <> sh:734 var
R81344:81348 VST.msl.seplog <> ::logic:'|>'_x not
R81584:81584 VST.msl.seplog <> ::logic:'|>'_x not
R81512:81529 VST.msl.seplog <> ::logic:x_'&&'_x not
R81440:81458 VST.msl.seplog <> ::logic:x_'&&'_x not
R81511:81511 VST.msl.seplog <> ::logic:x_'&&'_x not
R81349:81349 VST.msl.seplog <> ::logic:x_'&&'_x not
R81368:81386 VST.msl.seplog <> ::logic:x_'&&'_x not
R81350:81358 VST.veric.SeparationLogic <> tc_lvalue def
R81366:81367 VST.floyd.SeparationLogicFacts <> e1:735 var
R81360:81364 VST.floyd.SeparationLogicFacts <> Delta:721 var
R81387:81391 VST.veric.SeparationLogic <> local def
R81394:81395 VST.veric.lift LiftNotation :::'`('_x_')' not
R81405:81438 VST.veric.lift LiftNotation :::'`('_x_')' not
R81396:81401 VST.veric.Cop2 <> tc_val def
R81403:81404 VST.floyd.SeparationLogicFacts <> t1:736 var
R81408:81409 VST.veric.lift LiftNotation :::'`('_x_')' not
R81437:81437 VST.veric.lift LiftNotation :::'`('_x_')' not
R81410:81418 VST.veric.expr <> eval_cast def
R81435:81436 VST.floyd.SeparationLogicFacts <> v2:737 var
R81432:81433 VST.floyd.SeparationLogicFacts <> t1:736 var
R81421:81426 compcert.cfrontend.Clight <> typeof def
R81428:81429 VST.floyd.SeparationLogicFacts <> e1:735 var
R81506:81508 VST.msl.seplog <> ::logic:x_'*'_x not
R81459:81460 VST.veric.lift LiftNotation :::'`('_x_')' not
R81482:81505 VST.veric.lift LiftNotation :::'`('_x_')' not
R81461:81466 VST.veric.SeparationLogic <> mapsto def
R81472:81477 compcert.cfrontend.Clight <> typeof def
R81479:81480 VST.floyd.SeparationLogicFacts <> e1:735 var
R81468:81469 VST.floyd.SeparationLogicFacts <> sh:734 var
R81502:81502 VST.veric.lift LiftNotation :::'`'_x not
R81503:81504 VST.floyd.SeparationLogicFacts <> v2:737 var
R81485:81495 VST.veric.expr <> eval_lvalue def
R81497:81498 VST.floyd.SeparationLogicFacts <> e1:735 var
R81509:81510 VST.msl.seplog <> TT meth
R81530:81534 VST.veric.seplog <> subst def
R81583:81583 VST.floyd.SeparationLogicFacts <> P:722 var
R81540:81541 VST.veric.lift LiftNotation :::'`('_x_')' not
R81580:81580 VST.veric.lift LiftNotation :::'`('_x_')' not
R81542:81550 VST.veric.val_lemmas <> force_val def
R81553:81560 VST.veric.Clight_Cop2 <> sem_cast def
R81577:81578 VST.floyd.SeparationLogicFacts <> v2:737 var
R81574:81575 VST.floyd.SeparationLogicFacts <> t1:736 var
R81563:81568 compcert.cfrontend.Clight <> typeof def
R81570:81571 VST.floyd.SeparationLogicFacts <> e1:735 var
R81536:81537 VST.floyd.SeparationLogicFacts <> id:723 var
R79771:79775 VST.floyd.SeparationLogicFacts <> Delta:721 var
R79765:79769 VST.floyd.SeparationLogicFacts <> Espec:720 var
R79762:79763 VST.floyd.SeparationLogicFacts <> CS:719 var
R81656:81664 VST.floyd.SeparationLogicFacts ToSset semax_orp thm
R81674:81682 VST.floyd.SeparationLogicFacts ToSset semax_orp thm
R81692:81700 VST.floyd.SeparationLogicFacts ToSset semax_orp thm
R81656:81664 VST.floyd.SeparationLogicFacts ToSset semax_orp thm
R81674:81682 VST.floyd.SeparationLogicFacts ToSset semax_orp thm
R81692:81700 VST.floyd.SeparationLogicFacts ToSset semax_orp thm
R81719:81736 VST.floyd.SeparationLogicFacts SetB semax_set_backward prfax
R81719:81736 VST.floyd.SeparationLogicFacts SetB semax_set_backward prfax
R81749:81774 VST.floyd.SeparationLogicFacts PtrCmpB semax_ptr_compare_backward prfax
R81749:81774 VST.floyd.SeparationLogicFacts PtrCmpB semax_ptr_compare_backward prfax
R81787:81805 VST.floyd.SeparationLogicFacts LoadB semax_load_backward prfax
R81787:81805 VST.floyd.SeparationLogicFacts LoadB semax_load_backward prfax
R81818:81841 VST.floyd.SeparationLogicFacts CastLoadB semax_cast_load_backward prfax
R81818:81841 VST.floyd.SeparationLogicFacts CastLoadB semax_cast_load_backward prfax
R81854:81859 VST.floyd.SeparationLogicFacts ToSset <> mod
R81892:81924 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R81943:81983 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R82009:82011 VST.floyd.SeparationLogicFacts Def <> modtype
R82028:82070 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SSET_BACKWARD <> mod
R82096:82098 VST.floyd.SeparationLogicFacts Def <> modtype
R82109:82150 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SET_BACKWARD <> mod
R82176:82178 VST.floyd.SeparationLogicFacts Def <> modtype
mod 81870:81877 <> Sset2Set
R82201:82203 VST.floyd.SeparationLogicFacts Def <> modtype
mod 82189:82196 <> Sset2Set.CSHL_Def
R82228:82241 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R82244:82246 VST.floyd.SeparationLogicFacts Def <> modtype
R82250:82255 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 82213:82223 <> Sset2Set.ConseqFacts
prf 82329:82346 Sset2Set semax_set_backward
R82361:82369 VST.veric.mpred <> compspecs class
binder 82357:82358 <> CS:738
R82380:82389 VST.veric.juicy_extspec <> OracleKind class
binder 82373:82377 <> Espec:739
R82400:82408 VST.veric.seplog <> tycontext ind
binder 82393:82397 <> Delta:740
R82432:82433 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R82434:82438 VST.veric.mpred <> mpred def
R82425:82431 VST.veric.mpred <> environ ind
binder 82422:82422 <> P:741
binder 82441:82442 <> id:742
binder 82444:82444 <> e:743
R82452:82456 VST.floyd.SeparationLogicFacts Def semax defax
R82622:82638 VST.veric.SeparationLogic <> normal_ret_assert def
R82640:82640 VST.floyd.SeparationLogicFacts <> P:741 var
R82610:82613 compcert.cfrontend.Clight <> Sset constr
R82618:82618 VST.floyd.SeparationLogicFacts <> e:743 var
R82615:82616 VST.floyd.SeparationLogicFacts <> id:742 var
R82482:82486 VST.msl.seplog <> ::logic:'|>'_x not
R82596:82596 VST.msl.seplog <> ::logic:'|>'_x not
R82555:82571 VST.msl.seplog <> ::logic:x_'&&'_x not
R82487:82487 VST.msl.seplog <> ::logic:x_'&&'_x not
R82503:82521 VST.msl.seplog <> ::logic:x_'&&'_x not
R82554:82554 VST.msl.seplog <> ::logic:x_'&&'_x not
R82488:82494 VST.veric.SeparationLogic <> tc_expr def
R82502:82502 VST.floyd.SeparationLogicFacts <> e:743 var
R82496:82500 VST.floyd.SeparationLogicFacts <> Delta:740 var
R82522:82531 VST.veric.SeparationLogic <> tc_temp_id def
R82553:82553 VST.floyd.SeparationLogicFacts <> e:743 var
R82547:82551 VST.floyd.SeparationLogicFacts <> Delta:740 var
R82537:82542 compcert.cfrontend.Clight <> typeof def
R82544:82544 VST.floyd.SeparationLogicFacts <> e:743 var
R82533:82534 VST.floyd.SeparationLogicFacts <> id:742 var
R82572:82576 VST.veric.seplog <> subst def
R82595:82595 VST.floyd.SeparationLogicFacts <> P:741 var
R82582:82590 VST.veric.expr <> eval_expr def
R82592:82592 VST.floyd.SeparationLogicFacts <> e:743 var
R82578:82579 VST.floyd.SeparationLogicFacts <> id:742 var
R82467:82471 VST.floyd.SeparationLogicFacts <> Delta:740 var
R82461:82465 VST.floyd.SeparationLogicFacts <> Espec:739 var
R82458:82459 VST.floyd.SeparationLogicFacts <> CS:738 var
R82670:82685 VST.floyd.SeparationLogicFacts Sset2Set semax_pre_simple thm
R82697:82741 VST.floyd.SeparationLogicFacts Sset semax_set_ptr_compare_load_cast_load_backward prfax
R82670:82685 VST.floyd.SeparationLogicFacts Sset2Set semax_pre_simple thm
R82697:82741 VST.floyd.SeparationLogicFacts Sset semax_set_ptr_compare_load_cast_load_backward prfax
R82753:82762 VST.msl.seplog <> orp_right1 meth
R82765:82774 VST.msl.seplog <> orp_right1 meth
R82777:82786 VST.msl.seplog <> orp_right1 meth
R82753:82762 VST.msl.seplog <> orp_right1 meth
R82765:82774 VST.msl.seplog <> orp_right1 meth
R82777:82786 VST.msl.seplog <> orp_right1 meth
R82805:82812 VST.floyd.SeparationLogicFacts Sset2Set <> mod
R82848:82880 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R82899:82939 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R82965:82967 VST.floyd.SeparationLogicFacts Def <> modtype
R82984:83026 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SSET_BACKWARD <> mod
R83052:83054 VST.floyd.SeparationLogicFacts Def <> modtype
R83065:83110 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_PTR_CMP_BACKWARD <> mod
R83136:83138 VST.floyd.SeparationLogicFacts Def <> modtype
mod 82823:82833 <> Sset2PtrCmp
R83161:83163 VST.floyd.SeparationLogicFacts Def <> modtype
mod 83149:83156 <> Sset2PtrCmp.CSHL_Def
R83188:83201 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R83204:83206 VST.floyd.SeparationLogicFacts Def <> modtype
R83210:83215 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 83173:83183 <> Sset2PtrCmp.ConseqFacts
prf 83289:83314 Sset2PtrCmp semax_ptr_compare_backward
R83329:83337 VST.veric.mpred <> compspecs class
binder 83325:83326 <> CS:744
R83348:83357 VST.veric.juicy_extspec <> OracleKind class
binder 83341:83345 <> Espec:745
R83368:83376 VST.veric.seplog <> tycontext ind
binder 83361:83365 <> Delta:746
binder 83389:83389 <> P:747
binder 83391:83392 <> id:748
binder 83394:83394 <> e:749
R83401:83405 VST.floyd.SeparationLogicFacts Def semax defax
R84234:84250 VST.veric.SeparationLogic <> normal_ret_assert def
R84252:84252 VST.floyd.SeparationLogicFacts <> P:747 var
R84214:84217 compcert.cfrontend.Clight <> Sset constr
R84222:84222 VST.floyd.SeparationLogicFacts <> e:749 var
R84219:84220 VST.floyd.SeparationLogicFacts <> id:748 var
R83431:83433 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R83459:83460 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R83439:83458 compcert.cfrontend.Cop <> binary_operation ind
binder 83434:83436 <> cmp:750
R83461:83463 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R83472:83473 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R83468:83471 compcert.cfrontend.Clight <> expr ind
binder 83464:83465 <> e1:751
R83474:83476 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R83485:83495 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R83481:83484 compcert.cfrontend.Clight <> expr ind
binder 83477:83478 <> e2:752
R83496:83498 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R83507:83508 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R83503:83506 compcert.cfrontend.Ctypes <> type ind
binder 83499:83500 <> ty:753
R83509:83511 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R83522:83523 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R83517:83521 VST.msl.shares <> share def
binder 83512:83514 <> sh1:754
R83524:83526 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R83537:83548 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R83532:83536 VST.msl.shares <> share def
binder 83527:83529 <> sh2:755
R83868:83885 VST.msl.seplog <> ::logic:x_'&&'_x not
R84200:84200 VST.msl.seplog <> ::logic:x_'&&'_x not
R83549:83552 VST.msl.seplog <> ::logic:'!!'_x not
R83867:83867 VST.msl.seplog <> ::logic:'!!'_x not
R83576:83593 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R83554:83556 Coq.Init.Logic <> ::type_scope:x_'='_x not
R83553:83553 VST.floyd.SeparationLogicFacts <> e:749 var
R83557:83562 compcert.cfrontend.Clight <> Ebinop constr
R83574:83575 VST.floyd.SeparationLogicFacts <> ty:753 var
R83571:83572 VST.floyd.SeparationLogicFacts <> e2:752 var
R83568:83569 VST.floyd.SeparationLogicFacts <> e1:751 var
R83564:83566 VST.floyd.SeparationLogicFacts <> cmp:750 var
R83616:83619 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R83594:83611 VST.msl.sepalg <> nonidentity def
R83613:83615 VST.floyd.SeparationLogicFacts <> sh1:754 var
R83642:83659 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R83620:83637 VST.msl.sepalg <> nonidentity def
R83639:83641 VST.floyd.SeparationLogicFacts <> sh2:755 var
R83684:83701 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R83677:83679 Coq.Init.Logic <> ::type_scope:x_'='_x not
R83660:83672 VST.veric.SeparationLogic <> is_comparison def
R83674:83676 VST.floyd.SeparationLogicFacts <> cmp:750 var
R83680:83683 Coq.Init.Datatypes <> true constr
R83746:83763 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R83738:83740 Coq.Init.Logic <> ::type_scope:x_'='_x not
R83702:83709 VST.veric.Cop2 <> eqb_type def
R83723:83737 VST.veric.Cop2 <> int_or_ptr_type def
R83712:83717 compcert.cfrontend.Clight <> typeof def
R83719:83720 VST.floyd.SeparationLogicFacts <> e1:751 var
R83741:83745 Coq.Init.Datatypes <> false constr
R83808:83825 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R83800:83802 Coq.Init.Logic <> ::type_scope:x_'='_x not
R83764:83771 VST.veric.Cop2 <> eqb_type def
R83785:83799 VST.veric.Cop2 <> int_or_ptr_type def
R83774:83779 compcert.cfrontend.Clight <> typeof def
R83781:83782 VST.floyd.SeparationLogicFacts <> e2:752 var
R83803:83807 Coq.Init.Datatypes <> false constr
R83860:83862 Coq.Init.Logic <> ::type_scope:x_'='_x not
R83826:83850 VST.veric.SeparationLogic <> typecheck_tid_ptr_compare def
R83858:83859 VST.floyd.SeparationLogicFacts <> id:748 var
R83852:83856 VST.floyd.SeparationLogicFacts <> Delta:746 var
R83863:83866 Coq.Init.Datatypes <> true constr
R83886:83890 VST.msl.seplog <> ::logic:'|>'_x not
R84199:84199 VST.msl.seplog <> ::logic:'|>'_x not
R84141:84154 VST.msl.seplog <> ::logic:x_'&&'_x not
R84079:84093 VST.msl.seplog <> ::logic:x_'&&'_x not
R84140:84140 VST.msl.seplog <> ::logic:x_'&&'_x not
R84017:84031 VST.msl.seplog <> ::logic:x_'&&'_x not
R84078:84078 VST.msl.seplog <> ::logic:x_'&&'_x not
R83945:83959 VST.msl.seplog <> ::logic:x_'&&'_x not
R83891:83891 VST.msl.seplog <> ::logic:x_'&&'_x not
R83908:83927 VST.msl.seplog <> ::logic:x_'&&'_x not
R83944:83944 VST.msl.seplog <> ::logic:x_'&&'_x not
R83892:83898 VST.veric.SeparationLogic <> tc_expr def
R83906:83907 VST.floyd.SeparationLogicFacts <> e1:751 var
R83900:83904 VST.floyd.SeparationLogicFacts <> Delta:746 var
R83928:83934 VST.veric.SeparationLogic <> tc_expr def
R83942:83943 VST.floyd.SeparationLogicFacts <> e2:752 var
R83936:83940 VST.floyd.SeparationLogicFacts <> Delta:746 var
R83960:83964 VST.veric.SeparationLogic <> local def
R83967:83968 VST.veric.lift LiftNotation :::'`('_x_')' not
R83985:84015 VST.veric.lift LiftNotation :::'`('_x_')' not
R83969:83980 VST.veric.SeparationLogic <> blocks_match def
R83982:83984 VST.floyd.SeparationLogicFacts <> cmp:750 var
R84003:84011 VST.veric.expr <> eval_expr def
R84013:84014 VST.floyd.SeparationLogicFacts <> e2:752 var
R83988:83996 VST.veric.expr <> eval_expr def
R83998:83999 VST.floyd.SeparationLogicFacts <> e1:751 var
R84073:84075 VST.msl.seplog <> ::logic:x_'*'_x not
R84032:84033 VST.veric.lift LiftNotation :::'`('_x_')' not
R84057:84072 VST.veric.lift LiftNotation :::'`('_x_')' not
R84034:84040 VST.veric.SeparationLogic <> mapsto_ def
R84047:84052 compcert.cfrontend.Clight <> typeof def
R84054:84055 VST.floyd.SeparationLogicFacts <> e1:751 var
R84042:84044 VST.floyd.SeparationLogicFacts <> sh1:754 var
R84060:84068 VST.veric.expr <> eval_expr def
R84070:84071 VST.floyd.SeparationLogicFacts <> e1:751 var
R84076:84077 VST.msl.seplog <> TT meth
R84135:84137 VST.msl.seplog <> ::logic:x_'*'_x not
R84094:84095 VST.veric.lift LiftNotation :::'`('_x_')' not
R84119:84134 VST.veric.lift LiftNotation :::'`('_x_')' not
R84096:84102 VST.veric.SeparationLogic <> mapsto_ def
R84109:84114 compcert.cfrontend.Clight <> typeof def
R84116:84117 VST.floyd.SeparationLogicFacts <> e2:752 var
R84104:84106 VST.floyd.SeparationLogicFacts <> sh2:755 var
R84122:84130 VST.veric.expr <> eval_expr def
R84132:84133 VST.floyd.SeparationLogicFacts <> e2:752 var
R84138:84139 VST.msl.seplog <> TT meth
R84155:84159 VST.veric.seplog <> subst def
R84198:84198 VST.floyd.SeparationLogicFacts <> P:747 var
R84165:84173 VST.veric.expr <> eval_expr def
R84176:84181 compcert.cfrontend.Clight <> Ebinop constr
R84193:84194 VST.floyd.SeparationLogicFacts <> ty:753 var
R84190:84191 VST.floyd.SeparationLogicFacts <> e2:752 var
R84187:84188 VST.floyd.SeparationLogicFacts <> e1:751 var
R84183:84185 VST.floyd.SeparationLogicFacts <> cmp:750 var
R84161:84162 VST.floyd.SeparationLogicFacts <> id:748 var
R83416:83420 VST.floyd.SeparationLogicFacts <> Delta:746 var
R83410:83414 VST.floyd.SeparationLogicFacts <> Espec:745 var
R83407:83408 VST.floyd.SeparationLogicFacts <> CS:744 var
R84282:84297 VST.floyd.SeparationLogicFacts Sset2PtrCmp semax_pre_simple thm
R84309:84353 VST.floyd.SeparationLogicFacts Sset semax_set_ptr_compare_load_cast_load_backward prfax
R84282:84297 VST.floyd.SeparationLogicFacts Sset2PtrCmp semax_pre_simple thm
R84309:84353 VST.floyd.SeparationLogicFacts Sset semax_set_ptr_compare_load_cast_load_backward prfax
R84365:84374 VST.msl.seplog <> orp_right1 meth
R84377:84386 VST.msl.seplog <> orp_right1 meth
R84389:84398 VST.msl.seplog <> orp_right2 meth
R84365:84374 VST.msl.seplog <> orp_right1 meth
R84377:84386 VST.msl.seplog <> orp_right1 meth
R84389:84398 VST.msl.seplog <> orp_right2 meth
R84417:84427 VST.floyd.SeparationLogicFacts Sset2PtrCmp <> mod
R84461:84493 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R84512:84552 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R84578:84580 VST.floyd.SeparationLogicFacts Def <> modtype
R84597:84639 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SSET_BACKWARD <> mod
R84665:84667 VST.floyd.SeparationLogicFacts Def <> modtype
R84678:84720 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_LOAD_BACKWARD <> mod
R84746:84748 VST.floyd.SeparationLogicFacts Def <> modtype
mod 84438:84446 <> Sset2Load
R84771:84773 VST.floyd.SeparationLogicFacts Def <> modtype
mod 84759:84766 <> Sset2Load.CSHL_Def
R84798:84811 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R84814:84816 VST.floyd.SeparationLogicFacts Def <> modtype
R84820:84825 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 84783:84793 <> Sset2Load.ConseqFacts
prf 84899:84917 Sset2Load semax_load_backward
R84932:84940 VST.veric.mpred <> compspecs class
binder 84928:84929 <> CS:756
R84951:84960 VST.veric.juicy_extspec <> OracleKind class
binder 84944:84948 <> Espec:757
R84971:84979 VST.veric.seplog <> tycontext ind
binder 84964:84968 <> Delta:758
R85003:85004 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R85005:85009 VST.veric.mpred <> mpred def
R84996:85002 VST.veric.mpred <> environ ind
binder 84993:84993 <> P:759
binder 85012:85013 <> id:760
binder 85015:85016 <> e1:761
R85024:85028 VST.floyd.SeparationLogicFacts Def semax defax
R85459:85475 VST.veric.SeparationLogic <> normal_ret_assert def
R85477:85477 VST.floyd.SeparationLogicFacts <> P:759 var
R85446:85449 compcert.cfrontend.Clight <> Sset constr
R85454:85455 VST.floyd.SeparationLogicFacts <> e1:761 var
R85451:85452 VST.floyd.SeparationLogicFacts <> id:760 var
R85054:85056 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R85066:85067 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R85061:85065 VST.msl.shares <> share def
binder 85057:85058 <> sh:762
R85068:85070 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R85079:85080 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R85075:85078 compcert.cfrontend.Ctypes <> type ind
binder 85071:85072 <> t2:763
R85081:85083 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R85091:85106 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R85088:85090 compcert.common.Values <> val ind
binder 85084:85085 <> v2:764
R85240:85252 VST.msl.seplog <> ::logic:x_'&&'_x not
R85107:85110 VST.msl.seplog <> ::logic:'!!'_x not
R85239:85239 VST.msl.seplog <> ::logic:'!!'_x not
R85141:85162 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R85131:85133 Coq.Init.Logic <> ::type_scope:x_'='_x not
R85111:85121 VST.veric.SeparationLogic <> typeof_temp def
R85129:85130 VST.floyd.SeparationLogicFacts <> id:760 var
R85123:85127 VST.floyd.SeparationLogicFacts <> Delta:758 var
R85134:85137 Coq.Init.Datatypes <> Some constr
R85139:85140 VST.floyd.SeparationLogicFacts <> t2:763 var
R85200:85221 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R85193:85195 Coq.Init.Logic <> ::type_scope:x_'='_x not
R85163:85177 VST.veric.expr <> is_neutral_cast def
R85191:85192 VST.floyd.SeparationLogicFacts <> t2:763 var
R85180:85185 compcert.cfrontend.Clight <> typeof def
R85187:85188 VST.floyd.SeparationLogicFacts <> e1:761 var
R85196:85199 Coq.Init.Datatypes <> true constr
R85222:85235 VST.veric.shares <> readable_share def
R85237:85238 VST.floyd.SeparationLogicFacts <> sh:762 var
R85253:85257 VST.msl.seplog <> ::logic:'|>'_x not
R85434:85434 VST.msl.seplog <> ::logic:'|>'_x not
R85400:85417 VST.msl.seplog <> ::logic:x_'&&'_x not
R85328:85346 VST.msl.seplog <> ::logic:x_'&&'_x not
R85399:85399 VST.msl.seplog <> ::logic:x_'&&'_x not
R85258:85258 VST.msl.seplog <> ::logic:x_'&&'_x not
R85277:85295 VST.msl.seplog <> ::logic:x_'&&'_x not
R85259:85267 VST.veric.SeparationLogic <> tc_lvalue def
R85275:85276 VST.floyd.SeparationLogicFacts <> e1:761 var
R85269:85273 VST.floyd.SeparationLogicFacts <> Delta:758 var
R85296:85300 VST.veric.SeparationLogic <> local def
R85303:85304 VST.veric.lift LiftNotation :::'`('_x_')' not
R85326:85326 VST.veric.lift LiftNotation :::'`('_x_')' not
R85305:85310 VST.veric.Cop2 <> tc_val def
R85324:85325 VST.floyd.SeparationLogicFacts <> v2:764 var
R85313:85318 compcert.cfrontend.Clight <> typeof def
R85320:85321 VST.floyd.SeparationLogicFacts <> e1:761 var
R85394:85396 VST.msl.seplog <> ::logic:x_'*'_x not
R85347:85348 VST.veric.lift LiftNotation :::'`('_x_')' not
R85370:85393 VST.veric.lift LiftNotation :::'`('_x_')' not
R85349:85354 VST.veric.SeparationLogic <> mapsto def
R85360:85365 compcert.cfrontend.Clight <> typeof def
R85367:85368 VST.floyd.SeparationLogicFacts <> e1:761 var
R85356:85357 VST.floyd.SeparationLogicFacts <> sh:762 var
R85390:85390 VST.veric.lift LiftNotation :::'`'_x not
R85391:85392 VST.floyd.SeparationLogicFacts <> v2:764 var
R85373:85383 VST.veric.expr <> eval_lvalue def
R85385:85386 VST.floyd.SeparationLogicFacts <> e1:761 var
R85397:85398 VST.msl.seplog <> TT meth
R85418:85422 VST.veric.seplog <> subst def
R85433:85433 VST.floyd.SeparationLogicFacts <> P:759 var
R85428:85428 VST.veric.lift LiftNotation :::'`'_x not
R85429:85430 VST.floyd.SeparationLogicFacts <> v2:764 var
R85424:85425 VST.floyd.SeparationLogicFacts <> id:760 var
R85039:85043 VST.floyd.SeparationLogicFacts <> Delta:758 var
R85033:85037 VST.floyd.SeparationLogicFacts <> Espec:757 var
R85030:85031 VST.floyd.SeparationLogicFacts <> CS:756 var
R85507:85522 VST.floyd.SeparationLogicFacts Sset2Load semax_pre_simple thm
R85534:85578 VST.floyd.SeparationLogicFacts Sset semax_set_ptr_compare_load_cast_load_backward prfax
R85507:85522 VST.floyd.SeparationLogicFacts Sset2Load semax_pre_simple thm
R85534:85578 VST.floyd.SeparationLogicFacts Sset semax_set_ptr_compare_load_cast_load_backward prfax
R85590:85599 VST.msl.seplog <> orp_right1 meth
R85602:85611 VST.msl.seplog <> orp_right2 meth
R85590:85599 VST.msl.seplog <> orp_right1 meth
R85602:85611 VST.msl.seplog <> orp_right2 meth
R85630:85638 VST.floyd.SeparationLogicFacts Sset2Load <> mod
R85676:85708 VST.veric.SeparationLogic CLIGHT_SEPARATION_HOARE_LOGIC_DEF <> mod
R85727:85767 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CONSEQUENCE <> mod
R85793:85795 VST.floyd.SeparationLogicFacts Def <> modtype
R85812:85854 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_SSET_BACKWARD <> mod
R85880:85882 VST.floyd.SeparationLogicFacts Def <> modtype
R85893:85940 VST.floyd.SeparationLogicFacts CLIGHT_SEPARATION_HOARE_LOGIC_CAST_LOAD_BACKWARD <> mod
R85966:85968 VST.floyd.SeparationLogicFacts Def <> modtype
mod 85649:85661 <> Sset2CastLoad
R85991:85993 VST.floyd.SeparationLogicFacts Def <> modtype
mod 85979:85986 <> Sset2CastLoad.CSHL_Def
R86018:86031 VST.floyd.SeparationLogicFacts GenConseqFacts <> modtype
R86034:86036 VST.floyd.SeparationLogicFacts Def <> modtype
R86040:86045 VST.floyd.SeparationLogicFacts Conseq <> modtype
mod 86003:86013 <> Sset2CastLoad.ConseqFacts
prf 86119:86142 Sset2CastLoad semax_cast_load_backward
R86157:86165 VST.veric.mpred <> compspecs class
binder 86153:86154 <> CS:765
R86176:86185 VST.veric.juicy_extspec <> OracleKind class
binder 86169:86173 <> Espec:766
R86196:86204 VST.veric.seplog <> tycontext ind
binder 86189:86193 <> Delta:767
R86228:86229 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R86230:86234 VST.veric.mpred <> mpred def
R86221:86227 VST.veric.mpred <> environ ind
binder 86218:86218 <> P:768
binder 86237:86238 <> id:769
binder 86240:86240 <> e:770
R86248:86252 VST.floyd.SeparationLogicFacts Def semax defax
R86797:86813 VST.veric.SeparationLogic <> normal_ret_assert def
R86815:86815 VST.floyd.SeparationLogicFacts <> P:768 var
R86785:86788 compcert.cfrontend.Clight <> Sset constr
R86793:86793 VST.floyd.SeparationLogicFacts <> e:770 var
R86790:86791 VST.floyd.SeparationLogicFacts <> id:769 var
R86278:86280 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R86290:86291 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R86285:86289 VST.msl.shares <> share def
binder 86281:86282 <> sh:771
R86292:86294 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R86303:86304 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R86299:86302 compcert.cfrontend.Clight <> expr ind
binder 86295:86296 <> e1:772
R86305:86307 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R86316:86317 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R86312:86315 compcert.cfrontend.Ctypes <> type ind
binder 86308:86309 <> t1:773
R86318:86320 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R86328:86343 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R86325:86327 compcert.common.Values <> val ind
binder 86321:86322 <> v2:774
R86520:86532 VST.msl.seplog <> ::logic:x_'&&'_x not
R86344:86347 VST.msl.seplog <> ::logic:'!!'_x not
R86519:86519 VST.msl.seplog <> ::logic:'!!'_x not
R86363:86384 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R86349:86351 Coq.Init.Logic <> ::type_scope:x_'='_x not
R86348:86348 VST.floyd.SeparationLogicFacts <> e:770 var
R86352:86356 compcert.cfrontend.Clight <> Ecast constr
R86361:86362 VST.floyd.SeparationLogicFacts <> t1:773 var
R86358:86359 VST.floyd.SeparationLogicFacts <> e1:772 var
R86415:86436 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R86405:86407 Coq.Init.Logic <> ::type_scope:x_'='_x not
R86385:86395 VST.veric.SeparationLogic <> typeof_temp def
R86403:86404 VST.floyd.SeparationLogicFacts <> id:769 var
R86397:86401 VST.floyd.SeparationLogicFacts <> Delta:767 var
R86408:86411 Coq.Init.Datatypes <> Some constr
R86413:86414 VST.floyd.SeparationLogicFacts <> t1:773 var
R86480:86501 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R86472:86474 Coq.Init.Logic <> ::type_scope:x_'='_x not
R86437:86456 VST.veric.SeparationLogic <> cast_pointer_to_bool def
R86470:86471 VST.floyd.SeparationLogicFacts <> t1:773 var
R86459:86464 compcert.cfrontend.Clight <> typeof def
R86466:86467 VST.floyd.SeparationLogicFacts <> e1:772 var
R86475:86479 Coq.Init.Datatypes <> false constr
R86502:86515 VST.veric.shares <> readable_share def
R86517:86518 VST.floyd.SeparationLogicFacts <> sh:771 var
R86533:86537 VST.msl.seplog <> ::logic:'|>'_x not
R86773:86773 VST.msl.seplog <> ::logic:'|>'_x not
R86701:86718 VST.msl.seplog <> ::logic:x_'&&'_x not
R86629:86647 VST.msl.seplog <> ::logic:x_'&&'_x not
R86700:86700 VST.msl.seplog <> ::logic:x_'&&'_x not
R86538:86538 VST.msl.seplog <> ::logic:x_'&&'_x not
R86557:86575 VST.msl.seplog <> ::logic:x_'&&'_x not
R86539:86547 VST.veric.SeparationLogic <> tc_lvalue def
R86555:86556 VST.floyd.SeparationLogicFacts <> e1:772 var
R86549:86553 VST.floyd.SeparationLogicFacts <> Delta:767 var
R86576:86580 VST.veric.SeparationLogic <> local def
R86583:86584 VST.veric.lift LiftNotation :::'`('_x_')' not
R86594:86627 VST.veric.lift LiftNotation :::'`('_x_')' not
R86585:86590 VST.veric.Cop2 <> tc_val def
R86592:86593 VST.floyd.SeparationLogicFacts <> t1:773 var
R86597:86598 VST.veric.lift LiftNotation :::'`('_x_')' not
R86626:86626 VST.veric.lift LiftNotation :::'`('_x_')' not
R86599:86607 VST.veric.expr <> eval_cast def
R86624:86625 VST.floyd.SeparationLogicFacts <> v2:774 var
R86621:86622 VST.floyd.SeparationLogicFacts <> t1:773 var
R86610:86615 compcert.cfrontend.Clight <> typeof def
R86617:86618 VST.floyd.SeparationLogicFacts <> e1:772 var
R86695:86697 VST.msl.seplog <> ::logic:x_'*'_x not
R86648:86649 VST.veric.lift LiftNotation :::'`('_x_')' not
R86671:86694 VST.veric.lift LiftNotation :::'`('_x_')' not
R86650:86655 VST.veric.SeparationLogic <> mapsto def
R86661:86666 compcert.cfrontend.Clight <> typeof def
R86668:86669 VST.floyd.SeparationLogicFacts <> e1:772 var
R86657:86658 VST.floyd.SeparationLogicFacts <> sh:771 var
R86691:86691 VST.veric.lift LiftNotation :::'`'_x not
R86692:86693 VST.floyd.SeparationLogicFacts <> v2:774 var
R86674:86684 VST.veric.expr <> eval_lvalue def
R86686:86687 VST.floyd.SeparationLogicFacts <> e1:772 var
R86698:86699 VST.msl.seplog <> TT meth
R86719:86723 VST.veric.seplog <> subst def
R86772:86772 VST.floyd.SeparationLogicFacts <> P:768 var
R86729:86730 VST.veric.lift LiftNotation :::'`('_x_')' not
R86769:86769 VST.veric.lift LiftNotation :::'`('_x_')' not
R86731:86739 VST.veric.val_lemmas <> force_val def
R86742:86749 VST.veric.Clight_Cop2 <> sem_cast def
R86766:86767 VST.floyd.SeparationLogicFacts <> v2:774 var
R86763:86764 VST.floyd.SeparationLogicFacts <> t1:773 var
R86752:86757 compcert.cfrontend.Clight <> typeof def
R86759:86760 VST.floyd.SeparationLogicFacts <> e1:772 var
R86725:86726 VST.floyd.SeparationLogicFacts <> id:769 var
R86263:86267 VST.floyd.SeparationLogicFacts <> Delta:767 var
R86257:86261 VST.floyd.SeparationLogicFacts <> Espec:766 var
R86254:86255 VST.floyd.SeparationLogicFacts <> CS:765 var
R86845:86860 VST.floyd.SeparationLogicFacts Sset2CastLoad semax_pre_simple thm
R86872:86916 VST.floyd.SeparationLogicFacts Sset semax_set_ptr_compare_load_cast_load_backward prfax
R86845:86860 VST.floyd.SeparationLogicFacts Sset2CastLoad semax_pre_simple thm
R86872:86916 VST.floyd.SeparationLogicFacts Sset semax_set_ptr_compare_load_cast_load_backward prfax
R86928:86937 VST.msl.seplog <> orp_right2 meth
R86928:86937 VST.msl.seplog <> orp_right2 meth
R86956:86968 VST.floyd.SeparationLogicFacts Sset2CastLoad <> mod
