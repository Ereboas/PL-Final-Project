DIGEST 8dc64455d98ea44658983cb90cf3646b
FVST.floyd.functional_base
R15:28 Coq.Lists.List <> <> lib
R46:62 Coq.ZArith.ZArith <> <> lib
R80:98 compcert.lib.Coqlib <> <> lib
R116:136 compcert.lib.Integers <> <> lib
R154:172 compcert.lib.Floats <> <> lib
R190:211 compcert.common.Values <> <> lib
R229:242 VST.msl.eq_dec <> <> lib
R260:274 VST.msl.Coqlib2 <> <> lib
R292:308 VST.floyd.coqlib3 <> <> lib
R326:342 VST.floyd.sublist <> <> lib
R360:362 Coq.micromega.Lia <> <> lib
R380:400 VST.floyd.list_solver <> <> lib
R466:485 VST.veric.val_lemmas <> <> lib
prf 495:508 <> Vint_injective
binder 510:510 <> i:1
binder 512:512 <> j:2
R524:526 Coq.Init.Logic <> ::type_scope:x_'='_x not
R518:521 compcert.common.Values <> Vint constr
R523:523 VST.floyd.functional_base <> i:1 var
R527:530 compcert.common.Values <> Vint constr
R532:532 VST.floyd.functional_base <> j:2 var
binder 515:515 <> H:3
R537:537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R536:536 VST.floyd.functional_base <> i:1 var
R538:538 VST.floyd.functional_base <> j:2 var
prf 577:594 <> map_Vint_injective
binder 604:604 <> l:4
binder 606:606 <> m:5
R632:635 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R637:637 Coq.Init.Logic <> ::type_scope:x_'='_x not
R636:636 VST.floyd.functional_base <> l:4 var
R638:638 VST.floyd.functional_base <> m:5 var
R619:621 Coq.Init.Logic <> ::type_scope:x_'='_x not
R609:611 Coq.Lists.List <> map def
R618:618 VST.floyd.functional_base <> l:4 var
R613:616 compcert.common.Values <> Vint constr
R622:624 Coq.Lists.List <> map def
R631:631 VST.floyd.functional_base <> m:5 var
R626:629 compcert.common.Values <> Vint constr
prf 749:756 <> cons_inv
binder 759:759 <> A:6
R768:768 VST.floyd.functional_base <> A:6 var
binder 763:763 <> a:7
binder 765:766 <> a':8
binder 771:771 <> l:9
binder 773:774 <> l':10
R790:793 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R798:801 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R795:795 Coq.Init.Logic <> ::type_scope:x_'='_x not
R794:794 VST.floyd.functional_base <> a:7 var
R796:797 VST.floyd.functional_base <> a':8 var
R803:803 Coq.Init.Logic <> ::type_scope:x_'='_x not
R802:802 VST.floyd.functional_base <> l:9 var
R804:805 VST.floyd.functional_base <> l':10 var
R781:783 Coq.Init.Logic <> ::type_scope:x_'='_x not
R778:779 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R777:777 VST.floyd.functional_base <> a:7 var
R780:780 VST.floyd.functional_base <> l:9 var
R786:787 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R784:785 VST.floyd.functional_base <> a':8 var
R788:789 VST.floyd.functional_base <> l':10 var
R862:869 VST.floyd.sublist <> Znth_map thm
R871:873 compcert.common.Values <> val ind
R880:887 VST.floyd.sublist <> Znth_map thm
R889:891 compcert.lib.Integers <> int syndef
R898:905 VST.floyd.sublist <> Znth_map thm
R907:910 compcert.lib.Integers <> byte syndef
R920:927 VST.floyd.sublist <> Znth_map thm
R929:933 compcert.lib.Integers <> int64 syndef
R940:947 VST.floyd.sublist <> Znth_map thm
R949:954 compcert.lib.Integers <> ptrofs syndef
R961:968 VST.floyd.sublist <> Znth_map thm
R970:974 compcert.lib.Floats <> float def
R984:991 VST.floyd.sublist <> Znth_map thm
R993:999 compcert.lib.Floats <> float32 def
R1030:1040 VST.floyd.sublist <> Zlength_map thm
R1030:1040 VST.floyd.sublist <> Zlength_map thm
R1030:1040 VST.floyd.sublist <> Zlength_map thm
R1030:1040 VST.floyd.sublist <> Zlength_map thm
R1030:1040 VST.floyd.sublist <> Zlength_map thm
R1030:1040 VST.floyd.sublist <> Zlength_map thm
R1030:1040 VST.floyd.sublist <> Zlength_map thm
R1030:1040 VST.floyd.sublist <> Zlength_map thm
R1030:1040 VST.floyd.sublist <> Zlength_map thm
R1030:1040 VST.floyd.sublist <> Zlength_map thm
R1030:1040 VST.floyd.sublist <> Zlength_map thm
R1030:1040 VST.floyd.sublist <> Zlength_map thm
R1030:1040 VST.floyd.sublist <> Zlength_map thm
R1030:1040 VST.floyd.sublist <> Zlength_map thm
prf 1089:1099 <> is_long_dec
binder 1101:1101 <> v:11
R1104:1104 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1114:1118 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1130:1130 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1105:1111 VST.veric.val_lemmas <> is_long def
R1113:1113 VST.floyd.functional_base <> v:11 var
R1119:1120 Coq.Init.Logic <> ::type_scope:'~'_x not
R1121:1127 VST.veric.val_lemmas <> is_long def
R1129:1129 VST.floyd.functional_base <> v:11 var
prf 1228:1240 <> is_single_dec
binder 1242:1242 <> v:12
R1245:1245 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1257:1261 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1275:1275 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1246:1254 VST.veric.val_lemmas <> is_single def
R1256:1256 VST.floyd.functional_base <> v:12 var
R1262:1263 Coq.Init.Logic <> ::type_scope:'~'_x not
R1264:1272 VST.veric.val_lemmas <> is_single def
R1274:1274 VST.floyd.functional_base <> v:12 var
prf 1373:1384 <> is_float_dec
binder 1386:1386 <> v:13
R1389:1389 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1400:1404 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1417:1417 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1390:1397 VST.veric.val_lemmas <> is_float def
R1399:1399 VST.floyd.functional_base <> v:13 var
R1405:1406 Coq.Init.Logic <> ::type_scope:'~'_x not
R1407:1414 VST.veric.val_lemmas <> is_float def
R1416:1416 VST.floyd.functional_base <> v:13 var
prf 1515:1539 <> is_pointer_or_integer_dec
binder 1541:1541 <> v:14
R1544:1544 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1568:1572 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1598:1598 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1545:1565 VST.veric.val_lemmas <> is_pointer_or_integer def
R1567:1567 VST.floyd.functional_base <> v:14 var
R1573:1574 Coq.Init.Logic <> ::type_scope:'~'_x not
R1575:1595 VST.veric.val_lemmas <> is_pointer_or_integer def
R1597:1597 VST.floyd.functional_base <> v:14 var
R1616:1636 VST.veric.val_lemmas <> is_pointer_or_integer def
R1648:1658 compcert.x86_32.Archi <> ptr64 def
R1648:1658 compcert.x86_32.Archi <> ptr64 def
prf 1756:1777 <> is_pointer_or_null_dec
binder 1779:1779 <> v:15
R1782:1782 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1803:1807 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1830:1830 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1783:1800 VST.veric.val_lemmas <> is_pointer_or_null def
R1802:1802 VST.floyd.functional_base <> v:15 var
R1808:1809 Coq.Init.Logic <> ::type_scope:'~'_x not
R1810:1827 VST.veric.val_lemmas <> is_pointer_or_null def
R1829:1829 VST.floyd.functional_base <> v:15 var
R1935:1944 compcert.lib.Integers Int eq_dec thm
R1997:2007 compcert.x86_32.Archi <> ptr64 def
R2022:2033 compcert.lib.Integers Int64 eq_dec thm
R1935:1944 compcert.lib.Integers Int eq_dec thm
prf 2095:2103 <> isptr_dec
binder 2105:2105 <> v:16
R2108:2108 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2116:2120 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2130:2130 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2109:2113 VST.veric.val_lemmas <> isptr def
R2115:2115 VST.floyd.functional_base <> v:16 var
R2121:2122 Coq.Init.Logic <> ::type_scope:'~'_x not
R2123:2127 VST.veric.val_lemmas <> isptr def
R2129:2129 VST.floyd.functional_base <> v:16 var
prf 2228:2244 <> isptr_offset_val'
binder 2255:2255 <> i:17
binder 2257:2257 <> p:18
R2267:2270 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2271:2275 VST.veric.val_lemmas <> isptr def
R2278:2287 VST.veric.val_lemmas <> offset_val def
R2291:2291 VST.floyd.functional_base <> p:18 var
R2289:2289 VST.floyd.functional_base <> i:17 var
R2260:2264 VST.veric.val_lemmas <> isptr def
R2266:2266 VST.floyd.functional_base <> p:18 var
R2347:2362 Coq.Init.Logic <> I constr
R2347:2362 Coq.Init.Logic <> I constr
R2385:2389 VST.veric.val_lemmas <> isptr def
R2392:2401 VST.veric.val_lemmas <> offset_val def
R2418:2434 VST.floyd.functional_base <> isptr_offset_val' thm
prf 2489:2508 <> offset_val_force_ptr
R2525:2527 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2513:2522 VST.veric.val_lemmas <> offset_val def
R2528:2536 VST.veric.val_lemmas <> force_ptr def
R2608:2622 compcert.lib.Integers Ptrofs add_zero thm
R2608:2622 compcert.lib.Integers Ptrofs add_zero thm
R2608:2622 compcert.lib.Integers Ptrofs add_zero thm
R2652:2671 VST.floyd.functional_base <> offset_val_force_ptr thm
prf 2688:2704 <> offset_offset_val
binder 2716:2716 <> v:19
binder 2718:2718 <> i:20
binder 2720:2720 <> j:21
R2752:2754 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2723:2732 VST.veric.val_lemmas <> offset_val def
R2737:2746 VST.veric.val_lemmas <> offset_val def
R2750:2750 VST.floyd.functional_base <> v:19 var
R2748:2748 VST.floyd.functional_base <> i:20 var
R2734:2734 VST.floyd.functional_base <> j:21 var
R2755:2764 VST.veric.val_lemmas <> offset_val def
R2774:2774 VST.floyd.functional_base <> v:19 var
R2768:2770 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R2767:2767 VST.floyd.functional_base <> i:20 var
R2771:2771 VST.floyd.functional_base <> j:21 var
R2799:2808 VST.veric.val_lemmas <> offset_val def
R2848:2863 compcert.lib.Integers Ptrofs add_assoc thm
R2848:2863 compcert.lib.Integers Ptrofs add_assoc thm
R2848:2863 compcert.lib.Integers Ptrofs add_assoc thm
R2881:2895 VST.floyd.coqlib3 <> ptrofs_add_repr thm
R2881:2895 VST.floyd.coqlib3 <> ptrofs_add_repr thm
R2916:2932 VST.floyd.functional_base <> offset_offset_val thm
R2955:2962 VST.floyd.coqlib3 <> add_repr thm
R2964:2973 VST.floyd.coqlib3 <> add64_repr thm
R2975:2989 VST.floyd.coqlib3 <> ptrofs_add_repr thm
R3012:3019 VST.floyd.coqlib3 <> mul_repr thm
R3021:3030 VST.floyd.coqlib3 <> mul64_repr thm
R3032:3046 VST.floyd.coqlib3 <> ptrofs_mul_repr thm
R3069:3076 VST.floyd.coqlib3 <> sub_repr thm
R3078:3087 VST.floyd.coqlib3 <> sub64_repr thm
R3089:3103 VST.floyd.coqlib3 <> ptrofs_sub_repr thm
R3126:3133 VST.floyd.coqlib3 <> and_repr thm
R3135:3144 VST.floyd.coqlib3 <> and64_repr thm
R3167:3173 VST.floyd.coqlib3 <> or_repr thm
R3175:3183 VST.floyd.coqlib3 <> or64_repr thm
R3206:3213 VST.floyd.coqlib3 <> neg_repr thm
R3215:3224 VST.floyd.coqlib3 <> neg64_repr thm
prf 3241:3248 <> ltu_repr
binder 3258:3258 <> i:22
binder 3260:3260 <> j:23
R3291:3296 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3323:3328 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3369:3372 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3374:3374 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R3373:3373 VST.floyd.functional_base <> i:22 var
R3375:3375 VST.floyd.functional_base <> j:23 var
R3362:3364 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3329:3335 compcert.lib.Integers Int ltu def
R3351:3358 compcert.lib.Integers Int repr def
R3360:3360 VST.floyd.functional_base <> j:23 var
R3338:3345 compcert.lib.Integers Int repr def
R3347:3347 VST.floyd.functional_base <> i:22 var
R3365:3368 Coq.Init.Datatypes <> true constr
R3298:3301 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3303:3306 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3302:3302 VST.floyd.functional_base <> j:23 var
R3302:3302 VST.floyd.functional_base <> j:23 var
R3307:3322 compcert.lib.Integers Int max_unsigned def
R3266:3269 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3271:3274 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3270:3270 VST.floyd.functional_base <> i:22 var
R3270:3270 VST.floyd.functional_base <> i:22 var
R3275:3290 compcert.lib.Integers Int max_unsigned def
R3403:3409 compcert.lib.Integers Int ltu def
R3455:3471 compcert.lib.Integers Int unsigned_repr thm
R3455:3471 compcert.lib.Integers Int unsigned_repr thm
R3455:3471 compcert.lib.Integers Int unsigned_repr thm
R3455:3471 compcert.lib.Integers Int unsigned_repr thm
R3455:3471 compcert.lib.Integers Int unsigned_repr thm
R3455:3471 compcert.lib.Integers Int unsigned_repr thm
prf 3512:3525 <> ltu_repr_false
binder 3535:3535 <> i:24
binder 3537:3537 <> j:25
R3568:3573 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3600:3605 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3647:3650 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3652:3653 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R3651:3651 VST.floyd.functional_base <> i:24 var
R3654:3654 VST.floyd.functional_base <> j:25 var
R3639:3641 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3606:3612 compcert.lib.Integers Int ltu def
R3628:3635 compcert.lib.Integers Int repr def
R3637:3637 VST.floyd.functional_base <> j:25 var
R3615:3622 compcert.lib.Integers Int repr def
R3624:3624 VST.floyd.functional_base <> i:24 var
R3642:3646 Coq.Init.Datatypes <> false constr
R3575:3578 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3580:3583 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3579:3579 VST.floyd.functional_base <> j:25 var
R3579:3579 VST.floyd.functional_base <> j:25 var
R3584:3599 compcert.lib.Integers Int max_unsigned def
R3543:3546 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3548:3551 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3547:3547 VST.floyd.functional_base <> i:24 var
R3547:3547 VST.floyd.functional_base <> i:24 var
R3552:3567 compcert.lib.Integers Int max_unsigned def
R3682:3688 compcert.lib.Integers Int ltu def
R3734:3750 compcert.lib.Integers Int unsigned_repr thm
R3734:3750 compcert.lib.Integers Int unsigned_repr thm
R3734:3750 compcert.lib.Integers Int unsigned_repr thm
R3734:3750 compcert.lib.Integers Int unsigned_repr thm
R3734:3750 compcert.lib.Integers Int unsigned_repr thm
R3734:3750 compcert.lib.Integers Int unsigned_repr thm
prf 3791:3804 <> int_add_assoc1
binder 3816:3816 <> z:26
binder 3818:3818 <> i:27
binder 3820:3820 <> j:28
R3868:3870 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3823:3829 compcert.lib.Integers Int add def
R3857:3864 compcert.lib.Integers Int repr def
R3866:3866 VST.floyd.functional_base <> j:28 var
R3832:3838 compcert.lib.Integers Int add def
R3843:3850 compcert.lib.Integers Int repr def
R3852:3852 VST.floyd.functional_base <> i:27 var
R3840:3840 VST.floyd.functional_base <> z:26 var
R3871:3877 compcert.lib.Integers Int add def
R3882:3889 compcert.lib.Integers Int repr def
R3893:3893 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3892:3892 VST.floyd.functional_base <> i:27 var
R3894:3894 VST.floyd.functional_base <> j:28 var
R3879:3879 VST.floyd.functional_base <> z:26 var
R3922:3934 compcert.lib.Integers Int add_assoc thm
R3922:3934 compcert.lib.Integers Int add_assoc thm
R3922:3934 compcert.lib.Integers Int add_assoc thm
R3952:3959 VST.floyd.coqlib3 <> add_repr thm
R3952:3959 VST.floyd.coqlib3 <> add_repr thm
R3980:3993 VST.floyd.functional_base <> int_add_assoc1 thm
prf 4010:4026 <> ptrofs_add_assoc1
binder 4038:4038 <> z:29
binder 4040:4040 <> i:30
binder 4042:4042 <> j:31
R4102:4104 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4045:4054 compcert.lib.Integers Ptrofs add def
R4088:4098 compcert.lib.Integers Ptrofs repr def
R4100:4100 VST.floyd.functional_base <> j:31 var
R4057:4066 compcert.lib.Integers Ptrofs add def
R4071:4081 compcert.lib.Integers Ptrofs repr def
R4083:4083 VST.floyd.functional_base <> i:30 var
R4068:4068 VST.floyd.functional_base <> z:29 var
R4105:4114 compcert.lib.Integers Ptrofs add def
R4119:4129 compcert.lib.Integers Ptrofs repr def
R4133:4133 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4132:4132 VST.floyd.functional_base <> i:30 var
R4134:4134 VST.floyd.functional_base <> j:31 var
R4116:4116 VST.floyd.functional_base <> z:29 var
R4162:4177 compcert.lib.Integers Ptrofs add_assoc thm
R4162:4177 compcert.lib.Integers Ptrofs add_assoc thm
R4162:4177 compcert.lib.Integers Ptrofs add_assoc thm
R4195:4209 VST.floyd.coqlib3 <> ptrofs_add_repr thm
R4195:4209 VST.floyd.coqlib3 <> ptrofs_add_repr thm
R4230:4246 VST.floyd.functional_base <> ptrofs_add_assoc1 thm
prf 4263:4278 <> divide_add_align
binder 4288:4288 <> a:32
binder 4290:4290 <> b:33
binder 4292:4292 <> c:34
R4307:4310 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4326:4328 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4312:4315 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4325:4325 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4311:4311 VST.floyd.functional_base <> a:32 var
R4316:4320 compcert.lib.Coqlib <> align def
R4324:4324 VST.floyd.functional_base <> b:33 var
R4322:4322 VST.floyd.functional_base <> c:34 var
R4329:4333 compcert.lib.Coqlib <> align def
R4343:4343 VST.floyd.functional_base <> b:33 var
R4337:4339 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4336:4336 VST.floyd.functional_base <> a:32 var
R4340:4340 VST.floyd.functional_base <> c:34 var
R4295:4302 Coq.ZArith.BinInt Z divide def
R4306:4306 VST.floyd.functional_base <> a:32 var
R4304:4304 VST.floyd.functional_base <> b:33 var
R4376:4378 compcert.lib.Coqlib <> zeq def
R4376:4378 compcert.lib.Coqlib <> zeq def
R4407:4414 Coq.ZArith.BinInt Z divide def
R4429:4433 compcert.lib.Coqlib <> align def
R4478:4485 Coq.ZArith.Zdiv <> Zdiv_0_r thm
R4478:4485 Coq.ZArith.Zdiv <> Zdiv_0_r thm
R4478:4485 Coq.ZArith.Zdiv <> Zdiv_0_r thm
R4478:4485 Coq.ZArith.Zdiv <> Zdiv_0_r thm
R4478:4485 Coq.ZArith.Zdiv <> Zdiv_0_r thm
R4478:4485 Coq.ZArith.Zdiv <> Zdiv_0_r thm
R4561:4563 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R4557:4559 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4553:4555 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4549:4551 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R4578:4581 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4591:4591 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4574:4576 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R4587:4589 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R4583:4585 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4561:4563 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R4557:4559 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4553:4555 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4549:4551 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R4578:4581 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4591:4591 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4574:4576 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R4587:4589 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R4583:4585 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4614:4630 Coq.ZArith.Zdiv <> Z_div_plus_full_l thm
R4614:4630 Coq.ZArith.Zdiv <> Z_div_plus_full_l thm
R4614:4630 Coq.ZArith.Zdiv <> Z_div_plus_full_l thm
R4614:4630 Coq.ZArith.Zdiv <> Z_div_plus_full_l thm
R4645:4661 Coq.ZArith.BinInt Z mul_add_distr_r thm
R4645:4661 Coq.ZArith.BinInt Z mul_add_distr_r thm
R4645:4661 Coq.ZArith.BinInt Z mul_add_distr_r thm
prf 4702:4712 <> force_val_e
binder 4723:4723 <> v:35
R4744:4746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4726:4734 VST.veric.val_lemmas <> force_val def
R4737:4740 Coq.Init.Datatypes <> Some constr
R4742:4742 VST.floyd.functional_base <> v:35 var
R4747:4747 VST.floyd.functional_base <> v:35 var
R4788:4798 VST.floyd.functional_base <> force_val_e thm
def 4819:4824 <> ptr_eq
R4834:4836 compcert.common.Values <> val ind
binder 4827:4828 <> v1:36
binder 4830:4831 <> v2:37
R4864:4865 VST.floyd.functional_base <> v2:37 var
R4861:4862 VST.floyd.functional_base <> v1:36 var
R4880:4883 compcert.common.Values <> Vint constr
R4889:4892 compcert.common.Values <> Vint constr
R4920:4923 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4912:4914 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4901:4911 compcert.x86_32.Archi <> ptr64 def
R4915:4919 Coq.Init.Datatypes <> false constr
R4949:4953 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4942:4944 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4924:4931 compcert.lib.Integers Int cmpu def
R4933:4935 compcert.lib.Integers <> Ceq constr
R4945:4948 Coq.Init.Datatypes <> true constr
R4982:4984 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4954:4961 compcert.lib.Integers Int cmpu def
R4971:4978 compcert.lib.Integers Int repr def
R4963:4965 compcert.lib.Integers <> Ceq constr
R4985:4988 Coq.Init.Datatypes <> true constr
R4998:5002 compcert.common.Values <> Vlong constr
R5008:5012 compcert.common.Values <> Vlong constr
R5039:5042 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5032:5034 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5021:5031 compcert.x86_32.Archi <> ptr64 def
R5035:5038 Coq.Init.Datatypes <> true constr
R5070:5074 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5063:5065 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5043:5052 compcert.lib.Integers Int64 cmpu def
R5054:5056 compcert.lib.Integers <> Ceq constr
R5066:5069 Coq.Init.Datatypes <> true constr
R5107:5109 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5075:5084 compcert.lib.Integers Int64 cmpu def
R5094:5103 compcert.lib.Integers Int64 repr def
R5086:5088 compcert.lib.Integers <> Ceq constr
R5110:5113 Coq.Init.Datatypes <> true constr
R5123:5126 compcert.common.Values <> Vptr constr
R5138:5141 compcert.common.Values <> Vptr constr
R5172:5175 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5169:5169 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5201:5203 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5176:5186 compcert.lib.Integers Ptrofs cmpu def
R5188:5190 compcert.lib.Integers <> Ceq constr
R5204:5207 Coq.Init.Datatypes <> true constr
R5224:5228 Coq.Init.Logic <> False ind
def 5253:5259 <> ptr_neq
R5269:5271 compcert.common.Values <> val ind
binder 5262:5263 <> v1:40
binder 5265:5266 <> v2:41
R5277:5278 Coq.Init.Logic <> ::type_scope:'~'_x not
R5279:5284 VST.floyd.functional_base <> ptr_eq def
R5289:5290 VST.floyd.functional_base <> v2:41 var
R5286:5287 VST.floyd.functional_base <> v1:40 var
prf 5300:5307 <> ptr_eq_e
binder 5317:5318 <> v1:42
binder 5320:5321 <> v2:43
R5336:5339 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5342:5342 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5340:5341 VST.floyd.functional_base <> v1:42 var
R5343:5344 VST.floyd.functional_base <> v2:43 var
R5324:5329 VST.floyd.functional_base <> ptr_eq def
R5334:5335 VST.floyd.functional_base <> v2:43 var
R5331:5332 VST.floyd.functional_base <> v1:42 var
R5433:5443 compcert.lib.Integers Int eq_spec thm
R5433:5443 compcert.lib.Integers Int eq_spec thm
R5522:5534 compcert.lib.Integers Int64 eq_spec thm
R5522:5534 compcert.lib.Integers Int64 eq_spec thm
R5641:5654 compcert.lib.Integers Ptrofs eq_spec thm
R5641:5654 compcert.lib.Integers Ptrofs eq_spec thm
prf 5698:5709 <> ptr_eq_True'
binder 5722:5722 <> p:44
R5732:5735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5746:5748 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5736:5741 VST.floyd.functional_base <> ptr_eq def
R5745:5745 VST.floyd.functional_base <> p:44 var
R5743:5743 VST.floyd.functional_base <> p:44 var
R5749:5752 Coq.Init.Logic <> True ind
R5725:5729 VST.veric.val_lemmas <> isptr def
R5731:5731 VST.floyd.functional_base <> p:44 var
R5777:5784 VST.msl.Axioms <> prop_ext prfax
R5777:5784 VST.msl.Axioms <> prop_ext prfax
R5839:5852 compcert.lib.Integers Ptrofs eq_true thm
R5839:5852 compcert.lib.Integers Ptrofs eq_true thm
R5839:5852 compcert.lib.Integers Ptrofs eq_true thm
prf 5931:5941 <> ptr_eq_True
binder 5954:5954 <> p:45
R5977:5980 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5991:5993 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5981:5986 VST.floyd.functional_base <> ptr_eq def
R5990:5990 VST.floyd.functional_base <> p:45 var
R5988:5988 VST.floyd.functional_base <> p:45 var
R5994:5997 Coq.Init.Logic <> True ind
R5957:5974 VST.veric.val_lemmas <> is_pointer_or_null def
R5976:5976 VST.floyd.functional_base <> p:45 var
R6022:6029 VST.msl.Axioms <> prop_ext prfax
R6022:6029 VST.msl.Axioms <> prop_ext prfax
R6084:6097 compcert.lib.Integers Ptrofs eq_true thm
R6084:6097 compcert.lib.Integers Ptrofs eq_true thm
R6084:6097 compcert.lib.Integers Ptrofs eq_true thm
R6124:6134 VST.floyd.functional_base <> ptr_eq_True thm
prf 6169:6193 <> ptr_eq_is_pointer_or_null
binder 6203:6203 <> x:46
binder 6205:6205 <> y:47
R6218:6221 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6222:6239 VST.veric.val_lemmas <> is_pointer_or_null def
R6241:6241 VST.floyd.functional_base <> x:46 var
R6208:6213 VST.floyd.functional_base <> ptr_eq def
R6217:6217 VST.floyd.functional_base <> y:47 var
R6215:6215 VST.floyd.functional_base <> x:46 var
R6270:6275 VST.floyd.functional_base <> ptr_eq def
R6278:6295 VST.veric.val_lemmas <> is_pointer_or_null def
R6389:6396 compcert.lib.Integers Int cmpu def
R6418:6428 compcert.lib.Integers Int eq_spec thm
R6433:6440 compcert.lib.Integers Int repr def
R6418:6428 compcert.lib.Integers Int eq_spec thm
R6433:6440 compcert.lib.Integers Int repr def
R6479:6488 compcert.lib.Integers Int64 cmpu def
R6510:6522 compcert.lib.Integers Int64 eq_spec thm
R6527:6536 compcert.lib.Integers Int64 repr def
R6510:6522 compcert.lib.Integers Int64 eq_spec thm
R6527:6536 compcert.lib.Integers Int64 repr def
prf 6578:6587 <> ptr_eq_sym
binder 6597:6597 <> x:48
binder 6599:6599 <> y:49
R6612:6615 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6616:6621 VST.floyd.functional_base <> ptr_eq def
R6625:6625 VST.floyd.functional_base <> x:48 var
R6623:6623 VST.floyd.functional_base <> y:49 var
R6602:6607 VST.floyd.functional_base <> ptr_eq def
R6611:6611 VST.floyd.functional_base <> y:49 var
R6609:6609 VST.floyd.functional_base <> x:48 var
R6660:6684 VST.floyd.functional_base <> ptr_eq_is_pointer_or_null thm
R6660:6684 VST.floyd.functional_base <> ptr_eq_is_pointer_or_null thm
R6702:6709 VST.floyd.functional_base <> ptr_eq_e thm
R6702:6709 VST.floyd.functional_base <> ptr_eq_e thm
R6747:6757 VST.floyd.functional_base <> ptr_eq_True thm
R6747:6757 VST.floyd.functional_base <> ptr_eq_True thm
R6747:6757 VST.floyd.functional_base <> ptr_eq_True thm
R6747:6757 VST.floyd.functional_base <> ptr_eq_True thm
prf 6779:6790 <> ptr_eq_trans
binder 6800:6800 <> x:50
binder 6802:6802 <> y:51
binder 6804:6804 <> z:52
R6817:6820 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6831:6834 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6835:6840 VST.floyd.functional_base <> ptr_eq def
R6844:6844 VST.floyd.functional_base <> z:52 var
R6842:6842 VST.floyd.functional_base <> x:50 var
R6821:6826 VST.floyd.functional_base <> ptr_eq def
R6830:6830 VST.floyd.functional_base <> z:52 var
R6828:6828 VST.floyd.functional_base <> y:51 var
R6807:6812 VST.floyd.functional_base <> ptr_eq def
R6816:6816 VST.floyd.functional_base <> y:51 var
R6814:6814 VST.floyd.functional_base <> x:50 var
R6879:6903 VST.floyd.functional_base <> ptr_eq_is_pointer_or_null thm
R6879:6903 VST.floyd.functional_base <> ptr_eq_is_pointer_or_null thm
R6921:6928 VST.floyd.functional_base <> ptr_eq_e thm
R6921:6928 VST.floyd.functional_base <> ptr_eq_e thm
R6945:6952 VST.floyd.functional_base <> ptr_eq_e thm
R6945:6952 VST.floyd.functional_base <> ptr_eq_e thm
R6982:6992 VST.floyd.functional_base <> ptr_eq_True thm
R6982:6992 VST.floyd.functional_base <> ptr_eq_True thm
R6982:6992 VST.floyd.functional_base <> ptr_eq_True thm
R6982:6992 VST.floyd.functional_base <> ptr_eq_True thm
prf 7014:7034 <> isptr_offset_val_zero
binder 7046:7046 <> v:53
R7056:7059 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7074:7076 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7060:7069 VST.veric.val_lemmas <> offset_val def
R7073:7073 VST.floyd.functional_base <> v:53 var
R7077:7077 VST.floyd.functional_base <> v:53 var
R7049:7053 VST.veric.val_lemmas <> isptr def
R7055:7055 VST.floyd.functional_base <> v:53 var
R7137:7151 compcert.lib.Integers Ptrofs add_zero thm
R7137:7151 compcert.lib.Integers Ptrofs add_zero thm
R7137:7151 compcert.lib.Integers Ptrofs add_zero thm
R7186:7206 VST.floyd.functional_base <> isptr_offset_val_zero thm
prf 7242:7257 <> isptr_offset_val
binder 7268:7268 <> i:54
binder 7270:7270 <> p:55
R7295:7297 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7273:7277 VST.veric.val_lemmas <> isptr def
R7280:7289 VST.veric.val_lemmas <> offset_val def
R7293:7293 VST.floyd.functional_base <> p:55 var
R7291:7291 VST.floyd.functional_base <> i:54 var
R7298:7302 VST.veric.val_lemmas <> isptr def
R7304:7304 VST.floyd.functional_base <> p:55 var
R7329:7333 VST.veric.val_lemmas <> isptr def
R7379:7394 VST.floyd.functional_base <> isptr_offset_val thm
prf 7411:7425 <> isptr_force_ptr
binder 7435:7435 <> v:56
R7445:7448 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7460:7462 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7449:7457 VST.veric.val_lemmas <> force_ptr def
R7459:7459 VST.floyd.functional_base <> v:56 var
R7463:7463 VST.floyd.functional_base <> v:56 var
R7438:7442 VST.veric.val_lemmas <> isptr def
R7444:7444 VST.floyd.functional_base <> v:56 var
R7524:7538 VST.floyd.functional_base <> isptr_force_ptr thm
prf 7574:7589 <> isptr_force_ptr'
binder 7600:7600 <> p:57
R7622:7625 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7603:7607 VST.veric.val_lemmas <> isptr def
R7610:7618 VST.veric.val_lemmas <> force_ptr def
R7620:7620 VST.floyd.functional_base <> p:57 var
R7626:7630 VST.veric.val_lemmas <> isptr def
R7632:7632 VST.floyd.functional_base <> p:57 var
R7693:7708 VST.floyd.functional_base <> isptr_force_ptr' thm
ind 7806:7815 <> computable
constr 7842:7855 <> computable_any
binder 7818:7818 <> t:58
R7829:7829 VST.floyd.functional_base <> t:58 var
binder 7827:7827 <> x:59
R7899:7899 Coq.Init.Datatypes <> O constr
R7899:7899 Coq.Init.Datatypes <> O constr
R7913:7913 Coq.Init.Datatypes <> S constr
R7913:7913 Coq.Init.Datatypes <> S constr
R7934:7937 Coq.ZArith.BinInt Z lt def
R7934:7937 Coq.ZArith.BinInt Z lt def
R7972:7975 Coq.ZArith.BinInt Z le def
R7972:7975 Coq.ZArith.BinInt Z le def
R8010:8013 Coq.ZArith.BinInt Z gt def
R8010:8013 Coq.ZArith.BinInt Z gt def
R8048:8051 Coq.ZArith.BinInt Z ge def
R8048:8051 Coq.ZArith.BinInt Z ge def
R8086:8087 Coq.Init.Logic <> eq ind
R8086:8087 Coq.Init.Logic <> eq ind
R8123:8126 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R8123:8126 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R8157:8160 Coq.Numbers.BinNums <> Zpos constr
R8157:8160 Coq.Numbers.BinNums <> Zpos constr
R8181:8184 Coq.Numbers.BinNums <> Zneg constr
R8181:8184 Coq.Numbers.BinNums <> Zneg constr
R8205:8206 Coq.Numbers.BinNums <> Z0 constr
R8205:8206 Coq.Numbers.BinNums <> Z0 constr
R8220:8221 Coq.Numbers.BinNums <> xH constr
R8220:8221 Coq.Numbers.BinNums <> xH constr
R8235:8236 Coq.Numbers.BinNums <> xI constr
R8235:8236 Coq.Numbers.BinNums <> xI constr
R8257:8258 Coq.Numbers.BinNums <> xO constr
R8257:8258 Coq.Numbers.BinNums <> xO constr
R8279:8283 Coq.ZArith.BinInt Z add def
R8279:8283 Coq.ZArith.BinInt Z add def
R8318:8322 Coq.ZArith.BinInt Z sub def
R8318:8322 Coq.ZArith.BinInt Z sub def
R8357:8361 Coq.ZArith.BinInt Z mul def
R8357:8361 Coq.ZArith.BinInt Z mul def
R8396:8400 Coq.ZArith.BinInt Z div def
R8396:8400 Coq.ZArith.BinInt Z div def
R8435:8438 Coq.ZArith.Zdiv <> Zmod syndef
R8435:8438 Coq.ZArith.Zdiv <> Zmod syndef
R8473:8477 Coq.ZArith.BinInt Z max def
R8473:8477 Coq.ZArith.BinInt Z max def
R8512:8516 Coq.ZArith.BinInt Z opp def
R8512:8516 Coq.ZArith.BinInt Z opp def
R8537:8539 compcert.lib.Integers <> Ceq constr
R8537:8539 compcert.lib.Integers <> Ceq constr
R8553:8555 compcert.lib.Integers <> Cne constr
R8553:8555 compcert.lib.Integers <> Cne constr
R8569:8571 compcert.lib.Integers <> Clt constr
R8569:8571 compcert.lib.Integers <> Clt constr
R8585:8587 compcert.lib.Integers <> Cle constr
R8585:8587 compcert.lib.Integers <> Cle constr
R8601:8603 compcert.lib.Integers <> Cgt constr
R8601:8603 compcert.lib.Integers <> Cgt constr
R8617:8619 compcert.lib.Integers <> Cge constr
R8617:8619 compcert.lib.Integers <> Cge constr
R8635:8638 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8635:8638 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8669:8681 Coq.ZArith.Zpower <> two_power_nat def
R8669:8681 Coq.ZArith.Zpower <> two_power_nat def
R8702:8707 compcert.lib.Integers Int eq def
R8702:8707 compcert.lib.Integers Int eq def
R8742:8749 compcert.lib.Integers Int64 eq def
R8742:8749 compcert.lib.Integers Int64 eq def
R8784:8792 compcert.lib.Integers Ptrofs eq def
R8784:8792 compcert.lib.Integers Ptrofs eq def
R8827:8832 compcert.lib.Integers Int lt def
R8827:8832 compcert.lib.Integers Int lt def
R8867:8874 compcert.lib.Integers Int64 lt def
R8867:8874 compcert.lib.Integers Int64 lt def
R8909:8917 compcert.lib.Integers Ptrofs lt def
R8909:8917 compcert.lib.Integers Ptrofs lt def
R8952:8958 compcert.lib.Integers Int ltu def
R8952:8958 compcert.lib.Integers Int ltu def
R8993:9001 compcert.lib.Integers Int64 ltu def
R8993:9001 compcert.lib.Integers Int64 ltu def
R9036:9045 compcert.lib.Integers Ptrofs ltu def
R9036:9045 compcert.lib.Integers Ptrofs ltu def
R9080:9086 compcert.lib.Integers Int add def
R9080:9086 compcert.lib.Integers Int add def
R9121:9129 compcert.lib.Integers Int64 add def
R9121:9129 compcert.lib.Integers Int64 add def
R9164:9173 compcert.lib.Integers Ptrofs add def
R9164:9173 compcert.lib.Integers Ptrofs add def
R9208:9214 compcert.lib.Integers Int sub def
R9208:9214 compcert.lib.Integers Int sub def
R9249:9257 compcert.lib.Integers Int64 sub def
R9249:9257 compcert.lib.Integers Int64 sub def
R9292:9301 compcert.lib.Integers Ptrofs sub def
R9292:9301 compcert.lib.Integers Ptrofs sub def
R9336:9342 compcert.lib.Integers Int mul def
R9336:9342 compcert.lib.Integers Int mul def
R9377:9385 compcert.lib.Integers Int64 mul def
R9377:9385 compcert.lib.Integers Int64 mul def
R9420:9429 compcert.lib.Integers Ptrofs mul def
R9420:9429 compcert.lib.Integers Ptrofs mul def
R9464:9470 compcert.lib.Integers Int neg def
R9464:9470 compcert.lib.Integers Int neg def
R9491:9499 compcert.lib.Integers Int64 neg def
R9491:9499 compcert.lib.Integers Int64 neg def
R9520:9529 compcert.lib.Integers Ptrofs neg def
R9520:9529 compcert.lib.Integers Ptrofs neg def
R9550:9556 compcert.lib.Integers Int cmp def
R9550:9556 compcert.lib.Integers Int cmp def
R9607:9615 compcert.lib.Integers Int64 cmp def
R9607:9615 compcert.lib.Integers Int64 cmp def
R9666:9675 compcert.lib.Integers Ptrofs cmp def
R9666:9675 compcert.lib.Integers Ptrofs cmp def
R9726:9733 compcert.lib.Integers Int cmpu def
R9726:9733 compcert.lib.Integers Int cmpu def
R9784:9793 compcert.lib.Integers Int64 cmpu def
R9784:9793 compcert.lib.Integers Int64 cmpu def
R9844:9854 compcert.lib.Integers Ptrofs cmpu def
R9844:9854 compcert.lib.Integers Ptrofs cmpu def
R9905:9912 compcert.lib.Integers Int repr def
R9905:9912 compcert.lib.Integers Int repr def
R9933:9942 compcert.lib.Integers Int64 repr def
R9933:9942 compcert.lib.Integers Int64 repr def
R9963:9973 compcert.lib.Integers Ptrofs repr def
R9963:9973 compcert.lib.Integers Ptrofs repr def
R9994:10003 compcert.lib.Integers Int signed def
R9994:10003 compcert.lib.Integers Int signed def
R10024:10035 compcert.lib.Integers Int64 signed def
R10024:10035 compcert.lib.Integers Int64 signed def
R10056:10068 compcert.lib.Integers Ptrofs signed def
R10056:10068 compcert.lib.Integers Ptrofs signed def
R10089:10100 compcert.lib.Integers Int unsigned def
R10089:10100 compcert.lib.Integers Int unsigned def
R10121:10134 compcert.lib.Integers Int64 unsigned def
R10121:10134 compcert.lib.Integers Int64 unsigned def
R10155:10169 compcert.lib.Integers Ptrofs unsigned def
R10155:10169 compcert.lib.Integers Ptrofs unsigned def
R10190:10202 Coq.ZArith.Zpower <> two_power_nat def
R10190:10202 Coq.ZArith.Zpower <> two_power_nat def
R10223:10238 compcert.lib.Integers Int max_unsigned def
R10223:10238 compcert.lib.Integers Int max_unsigned def
R10252:10269 compcert.lib.Integers Int64 max_unsigned def
R10252:10269 compcert.lib.Integers Int64 max_unsigned def
R10283:10301 compcert.lib.Integers Ptrofs max_unsigned def
R10283:10301 compcert.lib.Integers Ptrofs max_unsigned def
R10315:10328 compcert.lib.Integers Int min_signed def
R10315:10328 compcert.lib.Integers Int min_signed def
R10342:10357 compcert.lib.Integers Int64 min_signed def
R10342:10357 compcert.lib.Integers Int64 min_signed def
R10371:10387 compcert.lib.Integers Ptrofs min_signed def
R10371:10387 compcert.lib.Integers Ptrofs min_signed def
R10401:10414 compcert.lib.Integers Int max_signed def
R10401:10414 compcert.lib.Integers Int max_signed def
R10428:10443 compcert.lib.Integers Int64 max_signed def
R10428:10443 compcert.lib.Integers Int64 max_signed def
R10457:10473 compcert.lib.Integers Ptrofs max_signed def
R10457:10473 compcert.lib.Integers Ptrofs max_signed def
R10487:10497 compcert.lib.Integers Int modulus def
R10487:10497 compcert.lib.Integers Int modulus def
R10511:10523 compcert.lib.Integers Int64 modulus def
R10511:10523 compcert.lib.Integers Int64 modulus def
R10537:10550 compcert.lib.Integers Ptrofs modulus def
R10537:10550 compcert.lib.Integers Ptrofs modulus def
R10564:10576 compcert.lib.Integers Int zwordsize def
R10564:10576 compcert.lib.Integers Int zwordsize def
R10590:10604 compcert.lib.Integers Int64 zwordsize def
R10590:10604 compcert.lib.Integers Int64 zwordsize def
R10618:10633 compcert.lib.Integers Ptrofs zwordsize def
R10618:10633 compcert.lib.Integers Ptrofs zwordsize def
R10801:10810 VST.floyd.functional_base <> computable ind
R10902:10911 VST.floyd.functional_base <> computable ind
R10939:10952 VST.floyd.functional_base <> computable_any constr
R11119:11129 compcert.x86_32.Archi <> ptr64 def
R11119:11129 compcert.x86_32.Archi <> ptr64 def
R11164:11174 compcert.x86_32.Archi <> ptr64 def
R11164:11174 compcert.x86_32.Archi <> ptr64 def
R11181:11185 Coq.Init.Datatypes <> false constr
R11196:11206 compcert.x86_32.Archi <> ptr64 def
R11196:11206 compcert.x86_32.Archi <> ptr64 def
R11213:11216 Coq.Init.Datatypes <> true constr
prf 11277:11291 <> sign_ext_range2
binder 11304:11305 <> lo:62
binder 11307:11307 <> n:63
binder 11309:11309 <> i:64
binder 11311:11312 <> hi:65
R11342:11351 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11370:11379 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11400:11409 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11412:11415 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R11445:11448 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R11410:11411 VST.floyd.functional_base <> lo:62 var
R11416:11425 compcert.lib.Integers Int signed def
R11428:11439 compcert.lib.Integers Int sign_ext def
R11443:11443 VST.floyd.functional_base <> i:64 var
R11441:11441 VST.floyd.functional_base <> n:63 var
R11416:11425 compcert.lib.Integers Int signed def
R11428:11439 compcert.lib.Integers Int sign_ext def
R11443:11443 VST.floyd.functional_base <> i:64 var
R11441:11441 VST.floyd.functional_base <> n:63 var
R11449:11450 VST.floyd.functional_base <> hi:65 var
R11382:11384 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11380:11381 VST.floyd.functional_base <> hi:65 var
R11396:11398 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R11385:11389 Coq.ZArith.Zpower <> two_p def
R11393:11393 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R11392:11392 VST.floyd.functional_base <> n:63 var
R11354:11356 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11352:11353 VST.floyd.functional_base <> lo:62 var
R11357:11358 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R11359:11363 Coq.ZArith.Zpower <> two_p def
R11367:11367 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R11366:11366 VST.floyd.functional_base <> n:63 var
R11322:11324 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R11326:11328 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R11325:11325 VST.floyd.functional_base <> n:63 var
R11325:11325 VST.floyd.functional_base <> n:63 var
R11329:11341 compcert.lib.Integers Int zwordsize def
R11487:11504 compcert.lib.Integers Int sign_ext_range thm
R11487:11504 compcert.lib.Integers Int sign_ext_range thm
prf 11531:11545 <> zero_ext_range2
binder 11557:11557 <> n:66
binder 11559:11559 <> i:67
binder 11561:11562 <> lo:68
binder 11564:11565 <> hi:69
R11596:11605 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11612:11621 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11638:11647 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11650:11653 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R11685:11688 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R11648:11649 VST.floyd.functional_base <> lo:68 var
R11654:11665 compcert.lib.Integers Int unsigned def
R11668:11679 compcert.lib.Integers Int zero_ext def
R11683:11683 VST.floyd.functional_base <> i:67 var
R11681:11681 VST.floyd.functional_base <> n:66 var
R11654:11665 compcert.lib.Integers Int unsigned def
R11668:11679 compcert.lib.Integers Int zero_ext def
R11683:11683 VST.floyd.functional_base <> i:67 var
R11681:11681 VST.floyd.functional_base <> n:66 var
R11689:11690 VST.floyd.functional_base <> hi:69 var
R11624:11626 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11622:11623 VST.floyd.functional_base <> hi:69 var
R11634:11636 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R11627:11631 Coq.ZArith.Zpower <> two_p def
R11633:11633 VST.floyd.functional_base <> n:66 var
R11608:11610 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11606:11607 VST.floyd.functional_base <> lo:68 var
R11575:11578 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R11580:11582 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R11579:11579 VST.floyd.functional_base <> n:66 var
R11579:11579 VST.floyd.functional_base <> n:66 var
R11583:11595 compcert.lib.Integers Int zwordsize def
R11727:11744 compcert.lib.Integers Int zero_ext_range thm
R11727:11744 compcert.lib.Integers Int zero_ext_range thm
R11781:11784 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R11814:11817 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R11785:11794 compcert.lib.Integers Int signed def
R11797:11808 compcert.lib.Integers Int sign_ext def
R11785:11794 compcert.lib.Integers Int signed def
R11797:11808 compcert.lib.Integers Int sign_ext def
R11835:11849 VST.floyd.functional_base <> sign_ext_range2 thm
R11919:11922 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R11954:11957 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R11923:11934 compcert.lib.Integers Int unsigned def
R11937:11948 compcert.lib.Integers Int zero_ext def
R11923:11934 compcert.lib.Integers Int unsigned def
R11937:11948 compcert.lib.Integers Int zero_ext def
R11975:11989 VST.floyd.functional_base <> zero_ext_range2 thm
R12056:12071 VST.veric.val_lemmas <> sign_ext_inrange thm
R12111:12126 VST.veric.val_lemmas <> zero_ext_inrange thm
def 12166:12179 <> repable_signed
R12185:12185 Coq.Numbers.BinNums <> Z ind
binder 12182:12182 <> z:70
R12207:12210 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R12212:12215 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R12193:12206 compcert.lib.Integers Int min_signed def
R12211:12211 VST.floyd.functional_base <> z:70 var
R12211:12211 VST.floyd.functional_base <> z:70 var
R12216:12229 compcert.lib.Integers Int max_signed def
def 12244:12261 <> repable_signed_dec
R12267:12267 Coq.Numbers.BinNums <> Z ind
binder 12264:12264 <> z:71
R12272:12272 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R12289:12291 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R12309:12309 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R12273:12286 VST.floyd.functional_base <> repable_signed def
R12288:12288 VST.floyd.functional_base <> z:71 var
R12292:12292 Coq.Init.Logic <> ::type_scope:'~'_x not
R12293:12306 VST.floyd.functional_base <> repable_signed def
R12308:12308 VST.floyd.functional_base <> z:71 var
R12335:12348 VST.floyd.functional_base <> repable_signed def
R12362:12364 compcert.lib.Coqlib <> zlt def
R12368:12381 compcert.lib.Integers Int min_signed def
R12362:12364 compcert.lib.Coqlib <> zlt def
R12368:12381 compcert.lib.Integers Int min_signed def
R12414:12427 compcert.lib.Integers Int min_signed def
R12446:12448 compcert.lib.Coqlib <> zlt def
R12450:12463 compcert.lib.Integers Int max_signed def
R12446:12448 compcert.lib.Coqlib <> zlt def
R12450:12463 compcert.lib.Integers Int max_signed def
R12498:12511 compcert.lib.Integers Int max_signed def
prf 12555:12574 <> repable_signed_mult2
binder 12586:12586 <> i:72
binder 12588:12588 <> j:73
R12595:12598 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12599:12599 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12630:12637 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12658:12661 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12662:12675 VST.floyd.functional_base <> repable_signed def
R12677:12677 VST.floyd.functional_base <> j:73 var
R12638:12651 VST.floyd.functional_base <> repable_signed def
R12655:12655 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R12654:12654 VST.floyd.functional_base <> i:72 var
R12656:12656 VST.floyd.functional_base <> j:73 var
R12619:12622 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R12601:12604 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R12600:12600 VST.floyd.functional_base <> j:73 var
R12605:12618 compcert.lib.Integers Int max_signed def
R12624:12627 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R12623:12623 VST.floyd.functional_base <> i:72 var
R12592:12593 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R12591:12591 VST.floyd.functional_base <> i:72 var
R12737:12739 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R12740:12753 compcert.lib.Integers Int max_signed def
R12737:12739 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R12740:12753 compcert.lib.Integers Int max_signed def
R12803:12805 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R12789:12802 compcert.lib.Integers Int min_signed def
R12803:12805 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R12789:12802 compcert.lib.Integers Int min_signed def
R12856:12859 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R12852:12854 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R12861:12863 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R12856:12859 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R12852:12854 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R12861:12863 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R12913:12913 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12917:12918 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12915:12915 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R12913:12913 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12917:12918 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12915:12915 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R12944:12960 Coq.ZArith.BinInt Z mul_add_distr_r thm
R12944:12960 Coq.ZArith.BinInt Z mul_add_distr_r thm
R12944:12960 Coq.ZArith.BinInt Z mul_add_distr_r thm
R12977:12985 Coq.ZArith.BinInt Z mul_1_l thm
R12977:12985 Coq.ZArith.BinInt Z mul_1_l thm
R12977:12985 Coq.ZArith.BinInt Z mul_1_l thm
R13007:13010 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R13003:13005 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13012:13015 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13007:13010 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R13003:13005 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13012:13015 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13055:13058 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13048:13048 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13052:13053 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13050:13050 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13072:13090 Coq.ZArith.BinInt Z mul_nonneg_nonpos thm
R13055:13058 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13048:13048 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13052:13053 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13050:13050 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13072:13090 Coq.ZArith.BinInt Z mul_nonneg_nonpos thm
R13113:13116 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13117:13117 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13121:13122 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13119:13119 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13136:13154 Coq.ZArith.BinInt Z mul_nonneg_nonneg thm
R13113:13116 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13117:13117 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13121:13122 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13119:13119 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13136:13154 Coq.ZArith.BinInt Z mul_nonneg_nonneg thm
R13184:13184 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13188:13189 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13186:13186 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13184:13184 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13188:13189 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13186:13186 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13215:13231 Coq.ZArith.BinInt Z mul_sub_distr_r thm
R13215:13231 Coq.ZArith.BinInt Z mul_sub_distr_r thm
R13215:13231 Coq.ZArith.BinInt Z mul_sub_distr_r thm
R13248:13256 Coq.ZArith.BinInt Z mul_1_l thm
R13248:13256 Coq.ZArith.BinInt Z mul_1_l thm
R13248:13256 Coq.ZArith.BinInt Z mul_1_l thm
R13295:13297 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13281:13294 compcert.lib.Integers Int min_signed def
R13313:13315 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13298:13298 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R13299:13312 compcert.lib.Integers Int max_signed def
R13295:13297 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13281:13294 compcert.lib.Integers Int min_signed def
R13313:13315 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13298:13298 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R13299:13312 compcert.lib.Integers Int max_signed def
R13348:13351 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R13344:13346 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13353:13356 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13348:13351 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R13344:13346 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13353:13356 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13390:13393 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13394:13394 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13398:13399 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13396:13396 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13413:13431 Coq.ZArith.BinInt Z mul_nonpos_nonpos thm
R13390:13393 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13394:13394 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13398:13399 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13396:13396 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13413:13431 Coq.ZArith.BinInt Z mul_nonpos_nonpos thm
R13485:13488 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13478:13478 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13482:13483 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13480:13480 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13502:13520 Coq.ZArith.BinInt Z mul_nonpos_nonneg thm
R13485:13488 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13478:13478 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13482:13483 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13480:13480 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13502:13520 Coq.ZArith.BinInt Z mul_nonpos_nonneg thm
R13634:13637 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13618:13619 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R13620:13633 compcert.lib.Integers Int max_signed def
R13649:13651 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13639:13641 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13642:13642 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13646:13647 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13644:13644 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13634:13637 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13618:13619 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R13620:13633 compcert.lib.Integers Int max_signed def
R13649:13651 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13639:13641 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13642:13642 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13646:13647 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13644:13644 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13701:13704 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13697:13699 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13683:13685 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13686:13686 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13692:13695 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13688:13690 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13705:13718 compcert.lib.Integers Int max_signed def
R13701:13704 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13697:13699 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13683:13685 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13686:13686 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13692:13695 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13688:13690 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13705:13718 compcert.lib.Integers Int max_signed def
R13769:13771 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13769:13771 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13794:13796 compcert.lib.Coqlib <> zlt def
R13794:13796 compcert.lib.Coqlib <> zlt def
R13828:13830 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13821:13821 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13825:13826 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13823:13823 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13828:13830 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13821:13821 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13825:13826 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13823:13823 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13843:13859 Coq.ZArith.BinInt Z mul_add_distr_r thm
R13843:13859 Coq.ZArith.BinInt Z mul_add_distr_r thm
R13843:13859 Coq.ZArith.BinInt Z mul_add_distr_r thm
R13878:13878 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13882:13883 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13880:13880 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13878:13878 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13882:13883 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13880:13880 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13903:13919 Coq.ZArith.BinInt Z mul_sub_distr_r thm
R13903:13919 Coq.ZArith.BinInt Z mul_sub_distr_r thm
R13903:13919 Coq.ZArith.BinInt Z mul_sub_distr_r thm
R13937:13937 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13930:13930 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13934:13935 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13932:13932 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13937:13937 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13930:13930 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13934:13935 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13932:13932 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13958:13970 Coq.ZArith.BinInt Z mul_neg_pos thm
R13958:13970 Coq.ZArith.BinInt Z mul_neg_pos thm
prf 14001:14020 <> repable_signed_mult1
binder 14032:14032 <> i:74
binder 14034:14034 <> j:75
R14041:14045 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14046:14046 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14077:14095 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14116:14119 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14120:14133 VST.floyd.functional_base <> repable_signed def
R14135:14135 VST.floyd.functional_base <> i:74 var
R14096:14109 VST.floyd.functional_base <> repable_signed def
R14113:14113 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R14112:14112 VST.floyd.functional_base <> i:74 var
R14114:14114 VST.floyd.functional_base <> j:75 var
R14066:14069 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R14048:14051 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R14047:14047 VST.floyd.functional_base <> i:74 var
R14052:14065 compcert.lib.Integers Int max_signed def
R14071:14074 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R14070:14070 VST.floyd.functional_base <> j:75 var
R14038:14039 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R14037:14037 VST.floyd.functional_base <> j:75 var
R14162:14171 Coq.ZArith.BinInt <> Zmult_comm syndef
R14162:14171 Coq.ZArith.BinInt <> Zmult_comm syndef
R14162:14171 Coq.ZArith.BinInt <> Zmult_comm syndef
R14187:14206 VST.floyd.functional_base <> repable_signed_mult2 thm
R14187:14206 VST.floyd.functional_base <> repable_signed_mult2 thm
prf 14234:14251 <> force_signed_int_e
binder 14263:14263 <> i:76
R14291:14293 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14266:14281 VST.veric.val_lemmas <> force_signed_int def
R14284:14287 compcert.common.Values <> Vint constr
R14289:14289 VST.floyd.functional_base <> i:76 var
R14294:14303 compcert.lib.Integers Int signed def
R14305:14305 VST.floyd.functional_base <> i:76 var
R14346:14363 VST.floyd.functional_base <> force_signed_int_e thm
R14442:14444 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14487:14488 Coq.Numbers.BinNums <> Z0 constr
R14487:14488 Coq.Numbers.BinNums <> Z0 constr
R14503:14506 Coq.Numbers.BinNums <> Zpos constr
R14503:14506 Coq.Numbers.BinNums <> Zpos constr
R14528:14531 Coq.Numbers.BinNums <> Zneg constr
R14528:14531 Coq.Numbers.BinNums <> Zneg constr
R14554:14555 Coq.Numbers.BinNums <> xH constr
R14554:14555 Coq.Numbers.BinNums <> xH constr
R14570:14571 Coq.Numbers.BinNums <> xO constr
R14570:14571 Coq.Numbers.BinNums <> xO constr
R14593:14594 Coq.Numbers.BinNums <> xI constr
R14593:14594 Coq.Numbers.BinNums <> xI constr
R14654:14654 Coq.Init.Datatypes <> O constr
R14654:14654 Coq.Init.Datatypes <> O constr
R14667:14667 Coq.Init.Datatypes <> S constr
R14667:14667 Coq.Init.Datatypes <> S constr
R14760:14767 Coq.ZArith.BinInt Z of_nat def
R14760:14767 Coq.ZArith.BinInt Z of_nat def
R14923:14930 Coq.ZArith.BinInt Z of_nat def
R14923:14930 Coq.ZArith.BinInt Z of_nat def
R14991:14998 Coq.ZArith.BinInt Z of_nat def
R14833:14840 Coq.ZArith.BinInt Z of_nat def
R15287:15289 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15287:15289 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15386:15396 compcert.x86_32.Archi <> ptr64 def
R15386:15396 compcert.x86_32.Archi <> ptr64 def
R15466:15476 compcert.x86_32.Archi <> ptr64 def
R15478:15482 Coq.Init.Datatypes <> false constr
R15505:15509 Coq.Init.Datatypes <> false constr
R15599:15609 compcert.x86_32.Archi <> ptr64 def
R15611:15614 Coq.Init.Datatypes <> true constr
R15637:15640 Coq.Init.Datatypes <> true constr
R16065:16068 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R16065:16068 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R16132:16134 Coq.Init.Datatypes <> nil constr
R16132:16134 Coq.Init.Datatypes <> nil constr
R16236:16239 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16253:16254 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16266:16267 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16284:16285 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16302:16303 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16318:16319 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16334:16337 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16353:16354 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16368:16369 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16388:16389 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16408:16409 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16426:16427 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16444:16447 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16464:16465 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16480:16481 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16501:16502 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16522:16523 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16541:16542 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16560:16563 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16579:16580 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16596:16597 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16615:16616 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16629:16632 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16240:16252 compcert.lib.Integers Int zwordsize def
R16255:16265 compcert.lib.Integers Int modulus def
R16268:16283 compcert.lib.Integers Int half_modulus def
R16286:16301 compcert.lib.Integers Int max_unsigned def
R16304:16317 compcert.lib.Integers Int max_signed def
R16320:16333 compcert.lib.Integers Int min_signed def
R16338:16352 compcert.lib.Integers Int64 zwordsize def
R16355:16367 compcert.lib.Integers Int64 modulus def
R16370:16387 compcert.lib.Integers Int64 half_modulus def
R16390:16407 compcert.lib.Integers Int64 max_unsigned def
R16410:16425 compcert.lib.Integers Int64 max_signed def
R16428:16443 compcert.lib.Integers Int64 min_signed def
R16448:16463 compcert.lib.Integers Ptrofs zwordsize def
R16466:16479 compcert.lib.Integers Ptrofs modulus def
R16482:16500 compcert.lib.Integers Ptrofs half_modulus def
R16503:16521 compcert.lib.Integers Ptrofs max_unsigned def
R16524:16540 compcert.lib.Integers Ptrofs max_signed def
R16543:16559 compcert.lib.Integers Ptrofs min_signed def
R16564:16578 compcert.lib.Integers Byte min_signed def
R16581:16595 compcert.lib.Integers Byte max_signed def
R16598:16614 compcert.lib.Integers Byte max_unsigned def
R16617:16628 compcert.lib.Integers Byte modulus def
R16657:16657 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16670:16671 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16686:16687 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16703:16703 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R16658:16669 compcert.lib.Integers Int wordsize def
R16672:16685 compcert.lib.Integers Int64 wordsize def
R16688:16702 compcert.lib.Integers Ptrofs wordsize def
R16830:16833 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R16830:16833 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17262:17262 Coq.Numbers.BinNums <> Z ind
R17262:17262 Coq.Numbers.BinNums <> Z ind
R17274:17276 Coq.Init.Datatypes <> nat ind
R17274:17276 Coq.Init.Datatypes <> nat ind
R17460:17473 VST.floyd.functional_base <> repable_signed def
prf 18069:18084 <> Vubyte_injective
binder 18086:18086 <> i:77
binder 18088:18088 <> j:78
R18102:18104 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18094:18099 VST.floyd.list_solver <> Vubyte def
R18101:18101 VST.floyd.functional_base <> i:77 var
R18105:18110 VST.floyd.list_solver <> Vubyte def
R18112:18112 VST.floyd.functional_base <> j:78 var
binder 18091:18091 <> H:79
R18117:18117 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18116:18116 VST.floyd.functional_base <> i:77 var
R18118:18118 VST.floyd.functional_base <> j:78 var
R18155:18157 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18141:18154 compcert.lib.Integers Byte zwordsize def
R18155:18157 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18141:18154 compcert.lib.Integers Byte zwordsize def
R18203:18205 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18190:18202 compcert.lib.Integers Int zwordsize def
R18203:18205 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18190:18202 compcert.lib.Integers Int zwordsize def
R18234:18250 compcert.lib.Integers Byte same_bits_eq thm
R18234:18250 compcert.lib.Integers Byte same_bits_eq thm
R18274:18279 VST.floyd.list_solver <> Vubyte def
R18297:18304 compcert.lib.Integers Int repr def
R18307:18319 compcert.lib.Integers Byte unsigned def
R18297:18304 compcert.lib.Integers Int repr def
R18307:18319 compcert.lib.Integers Byte unsigned def
R18371:18382 compcert.lib.Integers Byte testbit def
R18394:18406 compcert.lib.Integers Byte unsigned def
R18442:18457 compcert.lib.Integers Int testbit_repr thm
R18442:18457 compcert.lib.Integers Int testbit_repr thm
R18442:18457 compcert.lib.Integers Int testbit_repr thm
R18442:18457 compcert.lib.Integers Int testbit_repr thm
R18442:18457 compcert.lib.Integers Int testbit_repr thm
R18442:18457 compcert.lib.Integers Int testbit_repr thm
prf 18491:18510 <> map_Vubyte_injective
binder 18520:18520 <> l:80
binder 18522:18522 <> m:81
R18552:18555 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18557:18557 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18556:18556 VST.floyd.functional_base <> l:80 var
R18558:18558 VST.floyd.functional_base <> m:81 var
R18537:18539 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18525:18527 Coq.Lists.List <> map def
R18536:18536 VST.floyd.functional_base <> l:80 var
R18529:18534 VST.floyd.list_solver <> Vubyte def
R18540:18542 Coq.Lists.List <> map def
R18551:18551 VST.floyd.functional_base <> m:81 var
R18544:18549 VST.floyd.list_solver <> Vubyte def
R18667:18674 Coq.Lists.List <> map_cons thm
R18667:18674 Coq.Lists.List <> map_cons thm
R18667:18674 Coq.Lists.List <> map_cons thm
R18667:18674 Coq.Lists.List <> map_cons thm
R18688:18695 VST.floyd.functional_base <> cons_inv thm
R18688:18695 VST.floyd.functional_base <> cons_inv thm
R18730:18745 VST.floyd.functional_base <> Vubyte_injective thm
R18730:18745 VST.floyd.functional_base <> Vubyte_injective thm
prf 18781:18795 <> Vbyte_injective
binder 18797:18797 <> a:82
binder 18799:18799 <> b:83
R18812:18814 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18805:18809 VST.floyd.list_solver <> Vbyte def
R18811:18811 VST.floyd.functional_base <> a:82 var
R18815:18819 VST.floyd.list_solver <> Vbyte def
R18821:18821 VST.floyd.functional_base <> b:83 var
binder 18802:18802 <> H:84
R18826:18826 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18825:18825 VST.floyd.functional_base <> a:82 var
R18827:18827 VST.floyd.functional_base <> b:83 var
R18844:18848 VST.floyd.list_solver <> Vbyte def
R18862:18875 VST.floyd.functional_base <> Vint_injective thm
R18862:18875 VST.floyd.functional_base <> Vint_injective thm
R18891:18907 compcert.lib.Integers Byte same_bits_eq thm
R18891:18907 compcert.lib.Integers Byte same_bits_eq thm
R18952:18954 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18938:18951 compcert.lib.Integers Int min_signed def
R18952:18954 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18938:18951 compcert.lib.Integers Int min_signed def
R19014:19016 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19000:19013 compcert.lib.Integers Int max_signed def
R19014:19016 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19000:19013 compcert.lib.Integers Int max_signed def
R19076:19078 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19061:19075 compcert.lib.Integers Byte min_signed def
R19076:19078 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19061:19075 compcert.lib.Integers Byte min_signed def
R19132:19134 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19117:19131 compcert.lib.Integers Byte max_signed def
R19132:19134 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19117:19131 compcert.lib.Integers Byte max_signed def
R19179:19181 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19166:19176 compcert.lib.Integers Byte signed def
R19182:19192 compcert.lib.Integers Byte signed def
R19179:19181 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19166:19176 compcert.lib.Integers Byte signed def
R19182:19192 compcert.lib.Integers Byte signed def
R19214:19228 compcert.lib.Integers Int signed_repr thm
R19231:19241 compcert.lib.Integers Byte signed def
R19214:19228 compcert.lib.Integers Int signed_repr thm
R19231:19241 compcert.lib.Integers Byte signed def
R19214:19228 compcert.lib.Integers Int signed_repr thm
R19231:19241 compcert.lib.Integers Byte signed def
R19214:19228 compcert.lib.Integers Int signed_repr thm
R19231:19241 compcert.lib.Integers Byte signed def
R19265:19279 compcert.lib.Integers Int signed_repr thm
R19282:19292 compcert.lib.Integers Byte signed def
R19265:19279 compcert.lib.Integers Int signed_repr thm
R19282:19292 compcert.lib.Integers Byte signed def
R19265:19279 compcert.lib.Integers Int signed_repr thm
R19282:19292 compcert.lib.Integers Byte signed def
R19265:19279 compcert.lib.Integers Int signed_repr thm
R19282:19292 compcert.lib.Integers Byte signed def
R19335:19351 compcert.lib.Integers Byte signed_range thm
R19335:19351 compcert.lib.Integers Byte signed_range thm
R19378:19394 compcert.lib.Integers Byte signed_range thm
R19378:19394 compcert.lib.Integers Byte signed_range thm
R19425:19436 compcert.lib.Integers Byte testbit def
R19449:19468 compcert.lib.Integers Byte unsigned_signed thm
R19449:19468 compcert.lib.Integers Byte unsigned_signed thm
R19449:19468 compcert.lib.Integers Byte unsigned_signed thm
R19449:19468 compcert.lib.Integers Byte unsigned_signed thm
R19481:19487 compcert.lib.Integers Byte lt def
prf 19524:19537 <> Znth_map_Vbyte
R19552:19552 Coq.Numbers.BinNums <> Z ind
binder 19548:19548 <> i:85
R19560:19563 Coq.Init.Datatypes <> list ind
R19565:19568 compcert.lib.Integers <> byte syndef
binder 19556:19556 <> l:86
R19592:19595 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19616:19619 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19596:19599 VST.floyd.sublist <> Znth def
R19604:19606 Coq.Lists.List <> map def
R19614:19614 VST.floyd.functional_base <> l:86 var
R19608:19612 VST.floyd.list_solver <> Vbyte def
R19601:19601 VST.floyd.functional_base <> i:85 var
R19620:19624 VST.floyd.list_solver <> Vbyte def
R19627:19630 VST.floyd.sublist <> Znth def
R19634:19634 VST.floyd.functional_base <> l:86 var
R19632:19632 VST.floyd.functional_base <> i:85 var
R19575:19578 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19580:19582 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19579:19579 VST.floyd.functional_base <> i:85 var
R19579:19579 VST.floyd.functional_base <> i:85 var
R19583:19589 Coq.ZArith.Zcomplements <> Zlength def
R19591:19591 VST.floyd.functional_base <> l:86 var
R19667:19674 VST.floyd.sublist <> Znth_map thm
R19667:19674 VST.floyd.sublist <> Znth_map thm
R19695:19708 VST.floyd.functional_base <> Znth_map_Vbyte thm
prf 19763:19777 <> Znth_map_Vubyte
R19792:19792 Coq.Numbers.BinNums <> Z ind
binder 19788:19788 <> i:87
R19800:19803 Coq.Init.Datatypes <> list ind
R19805:19808 compcert.lib.Integers <> byte syndef
binder 19796:19796 <> l:88
R19832:19835 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19857:19860 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19836:19839 VST.floyd.sublist <> Znth def
R19844:19846 Coq.Lists.List <> map def
R19855:19855 VST.floyd.functional_base <> l:88 var
R19848:19853 VST.floyd.list_solver <> Vubyte def
R19841:19841 VST.floyd.functional_base <> i:87 var
R19861:19866 VST.floyd.list_solver <> Vubyte def
R19869:19872 VST.floyd.sublist <> Znth def
R19876:19876 VST.floyd.functional_base <> l:88 var
R19874:19874 VST.floyd.functional_base <> i:87 var
R19815:19818 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19820:19822 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19819:19819 VST.floyd.functional_base <> i:87 var
R19819:19819 VST.floyd.functional_base <> i:87 var
R19823:19829 Coq.ZArith.Zcomplements <> Zlength def
R19831:19831 VST.floyd.functional_base <> l:88 var
R19909:19916 VST.floyd.sublist <> Znth_map thm
R19909:19916 VST.floyd.sublist <> Znth_map thm
R19937:19951 VST.floyd.functional_base <> Znth_map_Vubyte thm
prf 20006:20020 <> repr_inj_signed
binder 20032:20032 <> i:89
binder 20034:20034 <> j:90
R20057:20060 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20077:20080 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20104:20107 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20109:20109 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20108:20108 VST.floyd.functional_base <> i:89 var
R20110:20110 VST.floyd.functional_base <> j:90 var
R20091:20093 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20081:20088 compcert.lib.Integers Int repr def
R20090:20090 VST.floyd.functional_base <> i:89 var
R20094:20101 compcert.lib.Integers Int repr def
R20103:20103 VST.floyd.functional_base <> j:90 var
R20061:20074 VST.floyd.functional_base <> repable_signed def
R20076:20076 VST.floyd.functional_base <> j:90 var
R20041:20054 VST.floyd.functional_base <> repable_signed def
R20056:20056 VST.floyd.functional_base <> i:89 var
R20140:20154 compcert.lib.Integers Int signed_repr thm
R20140:20154 compcert.lib.Integers Int signed_repr thm
R20140:20154 compcert.lib.Integers Int signed_repr thm
R20183:20197 compcert.lib.Integers Int signed_repr thm
R20183:20197 compcert.lib.Integers Int signed_repr thm
R20183:20197 compcert.lib.Integers Int signed_repr thm
prf 20238:20254 <> repr_inj_unsigned
binder 20266:20266 <> i:91
binder 20268:20268 <> j:92
R20301:20308 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20335:20342 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20366:20369 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20371:20371 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20370:20370 VST.floyd.functional_base <> i:91 var
R20372:20372 VST.floyd.functional_base <> j:92 var
R20353:20355 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20343:20350 compcert.lib.Integers Int repr def
R20352:20352 VST.floyd.functional_base <> i:91 var
R20356:20363 compcert.lib.Integers Int repr def
R20365:20365 VST.floyd.functional_base <> j:92 var
R20310:20313 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R20315:20318 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R20314:20314 VST.floyd.functional_base <> j:92 var
R20314:20314 VST.floyd.functional_base <> j:92 var
R20319:20334 compcert.lib.Integers Int max_unsigned def
R20276:20279 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R20281:20284 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R20280:20280 VST.floyd.functional_base <> i:91 var
R20280:20280 VST.floyd.functional_base <> i:91 var
R20285:20300 compcert.lib.Integers Int max_unsigned def
R20402:20418 compcert.lib.Integers Int unsigned_repr thm
R20402:20418 compcert.lib.Integers Int unsigned_repr thm
R20402:20418 compcert.lib.Integers Int unsigned_repr thm
R20447:20463 compcert.lib.Integers Int unsigned_repr thm
R20447:20463 compcert.lib.Integers Int unsigned_repr thm
R20447:20463 compcert.lib.Integers Int unsigned_repr thm
prf 20505:20520 <> repr_inj_signed'
binder 20532:20532 <> i:93
binder 20534:20534 <> j:94
R20665:20668 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20685:20692 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20717:20720 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20722:20723 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R20721:20721 VST.floyd.functional_base <> i:93 var
R20724:20724 VST.floyd.functional_base <> j:94 var
R20703:20706 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R20693:20700 compcert.lib.Integers Int repr def
R20702:20702 VST.floyd.functional_base <> i:93 var
R20707:20714 compcert.lib.Integers Int repr def
R20716:20716 VST.floyd.functional_base <> j:94 var
R20669:20682 VST.floyd.functional_base <> repable_signed def
R20684:20684 VST.floyd.functional_base <> j:94 var
R20649:20662 VST.floyd.functional_base <> repable_signed def
R20664:20664 VST.floyd.functional_base <> i:93 var
prf 20766:20783 <> repr_inj_unsigned'
binder 20795:20795 <> i:95
binder 20797:20797 <> j:96
R20830:20837 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20864:20871 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20896:20899 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20901:20902 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R20900:20900 VST.floyd.functional_base <> i:95 var
R20903:20903 VST.floyd.functional_base <> j:96 var
R20882:20885 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R20872:20879 compcert.lib.Integers Int repr def
R20881:20881 VST.floyd.functional_base <> i:95 var
R20886:20893 compcert.lib.Integers Int repr def
R20895:20895 VST.floyd.functional_base <> j:96 var
R20839:20842 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R20844:20847 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R20843:20843 VST.floyd.functional_base <> j:96 var
R20843:20843 VST.floyd.functional_base <> j:96 var
R20848:20863 compcert.lib.Integers Int max_unsigned def
R20805:20808 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R20810:20813 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R20809:20809 VST.floyd.functional_base <> i:95 var
R20809:20809 VST.floyd.functional_base <> i:95 var
R20814:20829 compcert.lib.Integers Int max_unsigned def
prf 20945:20959 <> opaque_constant
binder 20962:20962 <> A:97
R20975:20975 VST.floyd.functional_base <> A:97 var
binder 20972:20972 <> N:98
R20980:20980 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R20982:20983 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R20985:20987 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R20991:20991 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R20984:20984 VST.floyd.functional_base <> A:97 var
binder 20981:20981 <> x:99
R20989:20989 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20988:20988 VST.floyd.functional_base <> x:99 var
R20990:20990 VST.floyd.functional_base <> N:98 var
