DIGEST ca4b09ea90a97348a6f01fb481e38b9f
Fcompcert.lib.Integers
R1125:1133 Coq.Logic.Eqdep_dec <> <> lib
R1135:1139 Coq.ZArith.Zquot <> <> lib
R1141:1143 Coq.ZArith.Zwf <> <> lib
R1161:1166 compcert.lib.Coqlib <> <> lib
R1168:1172 compcert.lib.Zbits <> <> lib
R1183:1187 compcert.x86_32.Archi <> <> lib
ind 1223:1232 <> comparison
constr 1248:1250 <> Ceq
constr 1296:1298 <> Cne
constr 1349:1351 <> Clt
constr 1402:1404 <> Cle
constr 1464:1466 <> Cgt
constr 1520:1522 <> Cge
R1254:1263 compcert.lib.Integers <> comparison:1 ind
R1302:1311 compcert.lib.Integers <> comparison:1 ind
R1355:1364 compcert.lib.Integers <> comparison:1 ind
R1408:1417 compcert.lib.Integers <> comparison:1 ind
R1470:1479 compcert.lib.Integers <> comparison:1 ind
R1526:1535 compcert.lib.Integers <> comparison:1 ind
def 1593:1609 <> negate_comparison
R1615:1624 compcert.lib.Integers <> comparison ind
binder 1612:1612 <> c:3
R1628:1637 compcert.lib.Integers <> comparison ind
R1650:1650 compcert.lib.Integers <> c:3 var
R1661:1663 compcert.lib.Integers <> Ceq constr
R1668:1670 compcert.lib.Integers <> Cne constr
R1676:1678 compcert.lib.Integers <> Cne constr
R1683:1685 compcert.lib.Integers <> Ceq constr
R1691:1693 compcert.lib.Integers <> Clt constr
R1698:1700 compcert.lib.Integers <> Cge constr
R1706:1708 compcert.lib.Integers <> Cle constr
R1713:1715 compcert.lib.Integers <> Cgt constr
R1721:1723 compcert.lib.Integers <> Cgt constr
R1728:1730 compcert.lib.Integers <> Cle constr
R1736:1738 compcert.lib.Integers <> Cge constr
R1743:1745 compcert.lib.Integers <> Clt constr
def 1766:1780 <> swap_comparison
R1786:1795 compcert.lib.Integers <> comparison ind
binder 1783:1783 <> c:5
R1799:1808 compcert.lib.Integers <> comparison ind
R1821:1821 compcert.lib.Integers <> c:5 var
R1832:1834 compcert.lib.Integers <> Ceq constr
R1839:1841 compcert.lib.Integers <> Ceq constr
R1847:1849 compcert.lib.Integers <> Cne constr
R1854:1856 compcert.lib.Integers <> Cne constr
R1862:1864 compcert.lib.Integers <> Clt constr
R1869:1871 compcert.lib.Integers <> Cgt constr
R1877:1879 compcert.lib.Integers <> Cle constr
R1884:1886 compcert.lib.Integers <> Cge constr
R1892:1894 compcert.lib.Integers <> Cgt constr
R1899:1901 compcert.lib.Integers <> Clt constr
R1907:1909 compcert.lib.Integers <> Cge constr
R1914:1916 compcert.lib.Integers <> Cle constr
modtype 1992:1999 <> WORDSIZE
ax 2014:2021 WORDSIZE wordsize
R2024:2026 Coq.Init.Datatypes <> nat ind
ax 2037:2053 WORDSIZE wordsize_not_zero
R2064:2067 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R2056:2063 compcert.lib.Integers WORDSIZE wordsize defax
R2079:2086 compcert.lib.Integers WORDSIZE <> modtype
R2242:2249 compcert.lib.Integers WORDSIZE <> mod
mod 2233:2236 <> Make
def 2265:2272 Make wordsize
R2275:2277 Coq.Init.Datatypes <> nat ind
R2282:2292 compcert.lib.Integers WS wordsize defax
def 2306:2314 Make zwordsize
R2317:2317 Coq.Numbers.BinNums <> Z ind
R2322:2329 Coq.ZArith.BinInt Z of_nat def
R2331:2338 compcert.lib.Integers Make wordsize def
def 2352:2358 Make modulus
R2362:2362 Coq.Numbers.BinNums <> Z ind
R2367:2379 Coq.ZArith.Zpower <> two_power_nat def
R2381:2388 compcert.lib.Integers Make wordsize def
def 2402:2413 Make half_modulus
R2417:2417 Coq.Numbers.BinNums <> Z ind
R2429:2431 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R2422:2428 compcert.lib.Integers Make modulus def
def 2446:2457 Make max_unsigned
R2461:2461 Coq.Numbers.BinNums <> Z ind
R2473:2475 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2466:2472 compcert.lib.Integers Make modulus def
def 2490:2499 Make max_signed
R2503:2503 Coq.Numbers.BinNums <> Z ind
R2520:2522 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2508:2519 compcert.lib.Integers Make half_modulus def
def 2537:2546 Make min_signed
R2550:2550 Coq.Numbers.BinNums <> Z ind
R2555:2556 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R2557:2568 compcert.lib.Integers Make half_modulus def
prf 2579:2590 Make wordsize_pos
R2602:2604 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R2593:2601 compcert.lib.Integers Make zwordsize def
R2624:2632 compcert.lib.Integers Make zwordsize def
R2635:2642 compcert.lib.Integers Make wordsize def
R2656:2675 compcert.lib.Integers WS wordsize_not_zero prfax
R2656:2675 compcert.lib.Integers WS wordsize_not_zero prfax
prf 2698:2710 Make modulus_power
R2720:2722 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2713:2719 compcert.lib.Integers Make modulus def
R2723:2727 Coq.ZArith.Zpower <> two_p def
R2729:2737 compcert.lib.Integers Make zwordsize def
R2756:2762 compcert.lib.Integers Make modulus def
R2771:2789 compcert.lib.Coqlib <> two_power_nat_two_p thm
R2771:2789 compcert.lib.Coqlib <> two_power_nat_two_p thm
prf 2805:2818 Make modulus_gt_one
R2828:2830 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R2821:2827 compcert.lib.Integers Make modulus def
R2851:2863 compcert.lib.Integers Make modulus_power thm
R2851:2863 compcert.lib.Integers Make modulus_power thm
R2851:2863 compcert.lib.Integers Make modulus_power thm
R2872:2878 Coq.ZArith.BinInt Z lt_gt thm
R2872:2878 Coq.ZArith.BinInt Z lt_gt thm
R2888:2908 compcert.lib.Coqlib <> two_p_monotone_strict thm
R2888:2908 compcert.lib.Coqlib <> two_p_monotone_strict thm
R2927:2938 compcert.lib.Integers Make wordsize_pos thm
R2927:2938 compcert.lib.Integers Make wordsize_pos thm
prf 2961:2971 Make modulus_pos
R2981:2983 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R2974:2980 compcert.lib.Integers Make modulus def
R3007:3020 compcert.lib.Integers Make modulus_gt_one thm
R3007:3020 compcert.lib.Integers Make modulus_gt_one thm
constr 3315:3319 Make mkint
rec 3302:3304 Make int
proj 3323:3328 Make intval
proj 3334:3341 Make intrange
R3331:3331 Coq.Numbers.BinNums <> Z ind
R3346:3348 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R3355:3357 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R3349:3354 compcert.lib.Integers <> intval:10 meth
R3349:3354 compcert.lib.Integers <> intval:10 meth
R3358:3364 compcert.lib.Integers Make modulus def
def 3428:3440 Make Z_mod_modulus
R3446:3446 Coq.Numbers.BinNums <> Z ind
binder 3443:3443 <> x:12
R3451:3451 Coq.Numbers.BinNums <> Z ind
R3464:3464 compcert.lib.Integers <> x:12 var
R3475:3476 Coq.Numbers.BinNums <> Z0 constr
R3487:3490 Coq.Numbers.BinNums <> Zpos constr
R3497:3507 compcert.lib.Zbits <> P_mod_two_p def
R3511:3518 compcert.lib.Integers Make wordsize def
R3524:3527 Coq.Numbers.BinNums <> Zneg constr
R3543:3553 compcert.lib.Zbits <> P_mod_two_p def
R3557:3564 compcert.lib.Integers Make wordsize def
binder 3538:3538 <> r:14
R3572:3574 compcert.lib.Coqlib <> zeq def
R3576:3576 compcert.lib.Integers <> r:14 var
R3599:3601 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R3592:3598 compcert.lib.Integers Make modulus def
R3602:3602 compcert.lib.Integers <> r:14 var
prf 3618:3636 Make Z_mod_modulus_range
binder 3648:3648 <> x:15
R3652:3655 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R3671:3673 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R3656:3668 compcert.lib.Integers Make Z_mod_modulus def
R3670:3670 compcert.lib.Integers <> x:15 var
R3656:3668 compcert.lib.Integers Make Z_mod_modulus def
R3670:3670 compcert.lib.Integers <> x:15 var
R3674:3680 compcert.lib.Integers Make modulus def
R3690:3706 compcert.lib.Zbits <> Z_mod_two_p_range thm
R3708:3715 compcert.lib.Integers Make wordsize def
prf 3726:3745 Make Z_mod_modulus_range'
binder 3757:3757 <> x:16
R3762:3764 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R3780:3782 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R3765:3777 compcert.lib.Integers Make Z_mod_modulus def
R3779:3779 compcert.lib.Integers <> x:16 var
R3765:3777 compcert.lib.Integers Make Z_mod_modulus def
R3779:3779 compcert.lib.Integers <> x:16 var
R3783:3789 compcert.lib.Integers Make modulus def
R3821:3839 compcert.lib.Integers Make Z_mod_modulus_range thm
R3821:3839 compcert.lib.Integers Make Z_mod_modulus_range thm
prf 3868:3883 Make Z_mod_modulus_eq
binder 3895:3895 <> x:17
R3913:3915 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3898:3910 compcert.lib.Integers Make Z_mod_modulus def
R3912:3912 compcert.lib.Integers <> x:17 var
R3917:3921 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R3916:3916 compcert.lib.Integers <> x:17 var
R3922:3928 compcert.lib.Integers Make modulus def
R3938:3951 compcert.lib.Zbits <> Z_mod_two_p_eq thm
R3953:3960 compcert.lib.Integers Make wordsize def
def 4141:4148 Make unsigned
R4154:4156 compcert.lib.Integers Make int rec
binder 4151:4151 <> n:18
R4161:4161 Coq.Numbers.BinNums <> Z ind
R4166:4171 compcert.lib.Integers Make intval proj
R4173:4173 compcert.lib.Integers <> n:18 var
def 4188:4193 Make signed
R4199:4201 compcert.lib.Integers Make int rec
binder 4196:4196 <> n:19
R4206:4206 Coq.Numbers.BinNums <> Z ind
R4222:4229 compcert.lib.Integers Make unsigned def
R4231:4231 compcert.lib.Integers <> n:19 var
binder 4217:4217 <> x:20
R4241:4243 compcert.lib.Coqlib <> zlt def
R4247:4258 compcert.lib.Integers Make half_modulus def
R4245:4245 compcert.lib.Integers <> x:20 var
R4273:4275 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R4272:4272 compcert.lib.Integers <> x:20 var
R4276:4282 compcert.lib.Integers Make modulus def
R4265:4265 compcert.lib.Integers <> x:20 var
def 4436:4439 Make repr
R4445:4445 Coq.Numbers.BinNums <> Z ind
binder 4442:4442 <> x:21
R4450:4452 compcert.lib.Integers Make int rec
R4459:4463 compcert.lib.Integers Make mkint constr
R4484:4503 compcert.lib.Integers Make Z_mod_modulus_range' thm
R4505:4505 compcert.lib.Integers <> x:21 var
R4466:4478 compcert.lib.Integers Make Z_mod_modulus def
R4480:4480 compcert.lib.Integers <> x:21 var
def 4521:4524 Make zero
R4529:4532 compcert.lib.Integers Make repr def
def 4548:4550 Make one
R4556:4559 compcert.lib.Integers Make repr def
def 4575:4578 Make mone
R4583:4586 compcert.lib.Integers Make repr def
def 4605:4613 Make iwordsize
R4618:4621 compcert.lib.Integers Make repr def
R4623:4631 compcert.lib.Integers Make zwordsize def
prf 4641:4648 Make mkint_eq
binder 4660:4660 <> x:22
binder 4662:4662 <> y:23
binder 4664:4665 <> Px:24
binder 4667:4668 <> Py:25
R4676:4679 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4690:4692 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4680:4684 compcert.lib.Integers Make mkint constr
R4688:4689 compcert.lib.Integers <> Px:24 var
R4686:4686 compcert.lib.Integers <> x:22 var
R4693:4697 compcert.lib.Integers Make mkint constr
R4701:4702 compcert.lib.Integers <> Py:25 var
R4699:4699 compcert.lib.Integers <> y:23 var
R4672:4674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4671:4671 compcert.lib.Integers <> x:22 var
R4675:4675 compcert.lib.Integers <> y:23 var
R4754:4754 Coq.Numbers.BinNums <> Z ind
binder 4749:4749 <> n:26
binder 4751:4751 <> m:27
R4766:4768 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R4765:4765 compcert.lib.Integers <> n:26 var
R4769:4769 compcert.lib.Integers <> m:27 var
binder 4758:4759 <> P1:28
binder 4761:4762 <> P2:29
R4775:4777 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4773:4774 compcert.lib.Integers <> P1:28 var
R4778:4779 compcert.lib.Integers <> P2:29 var
R4754:4754 Coq.Numbers.BinNums <> Z ind
binder 4749:4749 <> n:30
binder 4751:4751 <> m:31
R4766:4768 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R4765:4765 compcert.lib.Integers <> n:30 var
R4769:4769 compcert.lib.Integers <> m:31 var
binder 4758:4759 <> P1:32
binder 4761:4762 <> P2:33
R4775:4777 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4773:4774 compcert.lib.Integers <> P1:32 var
R4778:4779 compcert.lib.Integers <> P2:33 var
R4798:4801 Coq.ZArith.BinInt Z lt def
R4822:4838 Coq.Logic.Eqdep_dec <> eq_proofs_unicity thm
R4822:4838 Coq.Logic.Eqdep_dec <> eq_proofs_unicity thm
prf 5068:5073 Make eq_dec
R5089:5091 compcert.lib.Integers Make int rec
binder 5084:5084 <> x:34
binder 5086:5086 <> y:35
R5095:5095 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5101:5105 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5112:5112 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5097:5099 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5096:5096 compcert.lib.Integers <> x:34 var
R5100:5100 compcert.lib.Integers <> y:35 var
R5107:5110 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R5106:5106 compcert.lib.Integers <> x:34 var
R5111:5111 compcert.lib.Integers <> y:35 var
R5166:5168 compcert.lib.Coqlib <> zeq def
R5166:5168 compcert.lib.Coqlib <> zeq def
R5202:5209 compcert.lib.Integers Make mkint_eq thm
R5202:5209 compcert.lib.Integers Make mkint_eq thm
def 5348:5349 Make eq
R5357:5359 compcert.lib.Integers Make int rec
binder 5352:5352 <> x:36
binder 5354:5354 <> y:37
R5364:5367 Coq.Init.Datatypes <> bool ind
R5377:5379 compcert.lib.Coqlib <> zeq def
R5395:5402 compcert.lib.Integers Make unsigned def
R5404:5404 compcert.lib.Integers <> y:37 var
R5382:5389 compcert.lib.Integers Make unsigned def
R5391:5391 compcert.lib.Integers <> x:36 var
R5422:5426 Coq.Init.Datatypes <> false constr
R5412:5415 Coq.Init.Datatypes <> true constr
def 5440:5441 Make lt
R5449:5451 compcert.lib.Integers Make int rec
binder 5444:5444 <> x:38
binder 5446:5446 <> y:39
R5456:5459 Coq.Init.Datatypes <> bool ind
R5469:5471 compcert.lib.Coqlib <> zlt def
R5485:5490 compcert.lib.Integers Make signed def
R5492:5492 compcert.lib.Integers <> y:39 var
R5474:5479 compcert.lib.Integers Make signed def
R5481:5481 compcert.lib.Integers <> x:38 var
R5510:5514 Coq.Init.Datatypes <> false constr
R5500:5503 Coq.Init.Datatypes <> true constr
def 5528:5530 Make ltu
R5538:5540 compcert.lib.Integers Make int rec
binder 5533:5533 <> x:40
binder 5535:5535 <> y:41
R5545:5548 Coq.Init.Datatypes <> bool ind
R5558:5560 compcert.lib.Coqlib <> zlt def
R5576:5583 compcert.lib.Integers Make unsigned def
R5585:5585 compcert.lib.Integers <> y:41 var
R5563:5570 compcert.lib.Integers Make unsigned def
R5572:5572 compcert.lib.Integers <> x:40 var
R5603:5607 Coq.Init.Datatypes <> false constr
R5593:5596 Coq.Init.Datatypes <> true constr
def 5622:5624 Make neg
R5630:5632 compcert.lib.Integers Make int rec
binder 5627:5627 <> x:42
R5637:5639 compcert.lib.Integers Make int rec
R5644:5647 compcert.lib.Integers Make repr def
R5650:5651 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R5652:5659 compcert.lib.Integers Make unsigned def
R5661:5661 compcert.lib.Integers <> x:42 var
def 5677:5679 Make add
R5687:5689 compcert.lib.Integers Make int rec
binder 5682:5682 <> x:43
binder 5684:5684 <> y:44
R5694:5696 compcert.lib.Integers Make int rec
R5703:5706 compcert.lib.Integers Make repr def
R5719:5721 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R5709:5716 compcert.lib.Integers Make unsigned def
R5718:5718 compcert.lib.Integers <> x:43 var
R5722:5729 compcert.lib.Integers Make unsigned def
R5731:5731 compcert.lib.Integers <> y:44 var
def 5746:5748 Make sub
R5756:5758 compcert.lib.Integers Make int rec
binder 5751:5751 <> x:45
binder 5753:5753 <> y:46
R5763:5765 compcert.lib.Integers Make int rec
R5772:5775 compcert.lib.Integers Make repr def
R5788:5790 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R5778:5785 compcert.lib.Integers Make unsigned def
R5787:5787 compcert.lib.Integers <> x:45 var
R5791:5798 compcert.lib.Integers Make unsigned def
R5800:5800 compcert.lib.Integers <> y:46 var
def 5815:5817 Make mul
R5825:5827 compcert.lib.Integers Make int rec
binder 5820:5820 <> x:47
binder 5822:5822 <> y:48
R5832:5834 compcert.lib.Integers Make int rec
R5841:5844 compcert.lib.Integers Make repr def
R5857:5859 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R5847:5854 compcert.lib.Integers Make unsigned def
R5856:5856 compcert.lib.Integers <> x:47 var
R5860:5867 compcert.lib.Integers Make unsigned def
R5869:5869 compcert.lib.Integers <> y:48 var
def 5885:5888 Make divs
R5896:5898 compcert.lib.Integers Make int rec
binder 5891:5891 <> x:49
binder 5893:5893 <> y:50
R5903:5905 compcert.lib.Integers Make int rec
R5912:5915 compcert.lib.Integers Make repr def
R5918:5923 Coq.ZArith.BinInt Z quot def
R5937:5942 compcert.lib.Integers Make signed def
R5944:5944 compcert.lib.Integers <> y:50 var
R5926:5931 compcert.lib.Integers Make signed def
R5933:5933 compcert.lib.Integers <> x:49 var
def 5960:5963 Make mods
R5971:5973 compcert.lib.Integers Make int rec
binder 5966:5966 <> x:51
binder 5968:5968 <> y:52
R5978:5980 compcert.lib.Integers Make int rec
R5987:5990 compcert.lib.Integers Make repr def
R5993:5997 Coq.ZArith.BinInt Z rem def
R6011:6016 compcert.lib.Integers Make signed def
R6018:6018 compcert.lib.Integers <> y:52 var
R6000:6005 compcert.lib.Integers Make signed def
R6007:6007 compcert.lib.Integers <> x:51 var
def 6035:6038 Make divu
R6046:6048 compcert.lib.Integers Make int rec
binder 6041:6041 <> x:53
binder 6043:6043 <> y:54
R6053:6055 compcert.lib.Integers Make int rec
R6062:6065 compcert.lib.Integers Make repr def
R6078:6080 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R6068:6075 compcert.lib.Integers Make unsigned def
R6077:6077 compcert.lib.Integers <> x:53 var
R6081:6088 compcert.lib.Integers Make unsigned def
R6090:6090 compcert.lib.Integers <> y:54 var
def 6105:6108 Make modu
R6116:6118 compcert.lib.Integers Make int rec
binder 6111:6111 <> x:55
binder 6113:6113 <> y:56
R6123:6125 compcert.lib.Integers Make int rec
R6132:6135 compcert.lib.Integers Make repr def
R6138:6138 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R6149:6155 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R6166:6166 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R6139:6146 compcert.lib.Integers Make unsigned def
R6148:6148 compcert.lib.Integers <> x:55 var
R6156:6163 compcert.lib.Integers Make unsigned def
R6165:6165 compcert.lib.Integers <> y:56 var
def 6218:6220 Make and
R6228:6230 compcert.lib.Integers Make int rec
binder 6223:6223 <> x:57
binder 6225:6225 <> y:58
R6234:6236 compcert.lib.Integers Make int rec
R6241:6244 compcert.lib.Integers Make repr def
R6247:6252 Coq.ZArith.BinInt Z land def
R6268:6275 compcert.lib.Integers Make unsigned def
R6277:6277 compcert.lib.Integers <> y:58 var
R6255:6262 compcert.lib.Integers Make unsigned def
R6264:6264 compcert.lib.Integers <> x:57 var
def 6293:6294 Make or
R6302:6304 compcert.lib.Integers Make int rec
binder 6297:6297 <> x:59
binder 6299:6299 <> y:60
R6308:6310 compcert.lib.Integers Make int rec
R6315:6318 compcert.lib.Integers Make repr def
R6321:6325 Coq.ZArith.BinInt Z lor def
R6341:6348 compcert.lib.Integers Make unsigned def
R6350:6350 compcert.lib.Integers <> y:60 var
R6328:6335 compcert.lib.Integers Make unsigned def
R6337:6337 compcert.lib.Integers <> x:59 var
def 6366:6368 Make xor
R6376:6378 compcert.lib.Integers Make int rec
binder 6371:6371 <> x:61
binder 6373:6373 <> y:62
R6383:6385 compcert.lib.Integers Make int rec
R6390:6393 compcert.lib.Integers Make repr def
R6396:6401 Coq.ZArith.BinInt Z lxor def
R6417:6424 compcert.lib.Integers Make unsigned def
R6426:6426 compcert.lib.Integers <> y:62 var
R6404:6411 compcert.lib.Integers Make unsigned def
R6413:6413 compcert.lib.Integers <> x:61 var
def 6443:6445 Make not
R6451:6453 compcert.lib.Integers Make int rec
binder 6448:6448 <> x:63
R6458:6460 compcert.lib.Integers Make int rec
R6465:6467 compcert.lib.Integers Make xor def
R6471:6474 compcert.lib.Integers Make mone def
R6469:6469 compcert.lib.Integers <> x:63 var
def 6517:6519 Make shl
R6527:6529 compcert.lib.Integers Make int rec
binder 6522:6522 <> x:64
binder 6524:6524 <> y:65
R6533:6535 compcert.lib.Integers Make int rec
R6540:6543 compcert.lib.Integers Make repr def
R6546:6553 Coq.ZArith.BinInt Z shiftl def
R6569:6576 compcert.lib.Integers Make unsigned def
R6578:6578 compcert.lib.Integers <> y:65 var
R6556:6563 compcert.lib.Integers Make unsigned def
R6565:6565 compcert.lib.Integers <> x:64 var
def 6594:6597 Make shru
R6605:6607 compcert.lib.Integers Make int rec
binder 6600:6600 <> x:66
binder 6602:6602 <> y:67
R6611:6613 compcert.lib.Integers Make int rec
R6618:6621 compcert.lib.Integers Make repr def
R6624:6631 Coq.ZArith.BinInt Z shiftr def
R6647:6654 compcert.lib.Integers Make unsigned def
R6656:6656 compcert.lib.Integers <> y:67 var
R6634:6641 compcert.lib.Integers Make unsigned def
R6643:6643 compcert.lib.Integers <> x:66 var
def 6672:6674 Make shr
R6682:6684 compcert.lib.Integers Make int rec
binder 6677:6677 <> x:68
binder 6679:6679 <> y:69
R6688:6690 compcert.lib.Integers Make int rec
R6695:6698 compcert.lib.Integers Make repr def
R6701:6708 Coq.ZArith.BinInt Z shiftr def
R6722:6729 compcert.lib.Integers Make unsigned def
R6731:6731 compcert.lib.Integers <> y:69 var
R6711:6716 compcert.lib.Integers Make signed def
R6718:6718 compcert.lib.Integers <> x:68 var
def 6748:6750 Make rol
R6758:6760 compcert.lib.Integers Make int rec
binder 6753:6753 <> x:70
binder 6755:6755 <> y:71
R6765:6767 compcert.lib.Integers Make int rec
R6783:6783 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R6794:6799 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R6784:6791 compcert.lib.Integers Make unsigned def
R6793:6793 compcert.lib.Integers <> y:71 var
R6800:6808 compcert.lib.Integers Make zwordsize def
binder 6778:6778 <> n:72
R6815:6818 compcert.lib.Integers Make repr def
R6821:6825 Coq.ZArith.BinInt Z lor def
R6854:6861 Coq.ZArith.BinInt Z shiftr def
R6886:6888 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R6877:6885 compcert.lib.Integers Make zwordsize def
R6889:6889 compcert.lib.Integers <> n:72 var
R6864:6871 compcert.lib.Integers Make unsigned def
R6873:6873 compcert.lib.Integers <> x:70 var
R6828:6835 Coq.ZArith.BinInt Z shiftl def
R6850:6850 compcert.lib.Integers <> n:72 var
R6838:6845 compcert.lib.Integers Make unsigned def
R6847:6847 compcert.lib.Integers <> x:70 var
def 6906:6908 Make ror
R6916:6918 compcert.lib.Integers Make int rec
binder 6911:6911 <> x:73
binder 6913:6913 <> y:74
R6923:6925 compcert.lib.Integers Make int rec
R6941:6941 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R6952:6957 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R6942:6949 compcert.lib.Integers Make unsigned def
R6951:6951 compcert.lib.Integers <> y:74 var
R6958:6966 compcert.lib.Integers Make zwordsize def
binder 6936:6936 <> n:75
R6973:6976 compcert.lib.Integers Make repr def
R6979:6983 Coq.ZArith.BinInt Z lor def
R7012:7019 Coq.ZArith.BinInt Z shiftl def
R7044:7046 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R7035:7043 compcert.lib.Integers Make zwordsize def
R7047:7047 compcert.lib.Integers <> n:75 var
R7022:7029 compcert.lib.Integers Make unsigned def
R7031:7031 compcert.lib.Integers <> x:73 var
R6986:6993 Coq.ZArith.BinInt Z shiftr def
R7008:7008 compcert.lib.Integers <> n:75 var
R6996:7003 compcert.lib.Integers Make unsigned def
R7005:7005 compcert.lib.Integers <> x:73 var
def 7065:7068 Make rolm
R7078:7080 compcert.lib.Integers Make int rec
binder 7071:7071 <> x:76
binder 7073:7073 <> a:77
binder 7075:7075 <> m:78
R7084:7086 compcert.lib.Integers Make int rec
R7091:7093 compcert.lib.Integers Make and def
R7105:7105 compcert.lib.Integers <> m:78 var
R7096:7098 compcert.lib.Integers Make rol def
R7102:7102 compcert.lib.Integers <> a:77 var
R7100:7100 compcert.lib.Integers <> x:76 var
def 7246:7249 Make shrx
R7257:7259 compcert.lib.Integers Make int rec
binder 7252:7252 <> x:79
binder 7254:7254 <> y:80
R7263:7265 compcert.lib.Integers Make int rec
R7272:7275 compcert.lib.Integers Make divs def
R7280:7282 compcert.lib.Integers Make shl def
R7288:7288 compcert.lib.Integers <> y:80 var
R7284:7286 compcert.lib.Integers Make one def
R7277:7277 compcert.lib.Integers <> x:79 var
def 7340:7344 Make mulhu
R7352:7354 compcert.lib.Integers Make int rec
binder 7347:7347 <> x:81
binder 7349:7349 <> y:82
R7358:7360 compcert.lib.Integers Make int rec
R7365:7368 compcert.lib.Integers Make repr def
R7371:7371 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R7395:7398 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R7382:7384 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R7372:7379 compcert.lib.Integers Make unsigned def
R7381:7381 compcert.lib.Integers <> x:81 var
R7385:7392 compcert.lib.Integers Make unsigned def
R7394:7394 compcert.lib.Integers <> y:82 var
R7399:7405 compcert.lib.Integers Make modulus def
def 7420:7424 Make mulhs
R7432:7434 compcert.lib.Integers Make int rec
binder 7427:7427 <> x:83
binder 7429:7429 <> y:84
R7438:7440 compcert.lib.Integers Make int rec
R7445:7448 compcert.lib.Integers Make repr def
R7451:7451 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R7471:7474 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R7460:7462 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R7452:7457 compcert.lib.Integers Make signed def
R7459:7459 compcert.lib.Integers <> x:83 var
R7463:7468 compcert.lib.Integers Make signed def
R7470:7470 compcert.lib.Integers <> y:84 var
R7475:7481 compcert.lib.Integers Make modulus def
def 7521:7528 Make negative
R7534:7536 compcert.lib.Integers Make int rec
binder 7531:7531 <> x:85
R7540:7542 compcert.lib.Integers Make int rec
R7552:7553 compcert.lib.Integers Make lt def
R7557:7560 compcert.lib.Integers Make zero def
R7555:7555 compcert.lib.Integers <> x:85 var
R7576:7579 compcert.lib.Integers Make zero def
R7567:7569 compcert.lib.Integers Make one def
def 7594:7602 Make add_carry
R7614:7616 compcert.lib.Integers Make int rec
binder 7605:7605 <> x:86
binder 7607:7607 <> y:87
binder 7609:7611 <> cin:88
R7620:7622 compcert.lib.Integers Make int rec
R7632:7634 compcert.lib.Coqlib <> zlt def
R7677:7683 compcert.lib.Integers Make modulus def
R7660:7662 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R7647:7649 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R7637:7644 compcert.lib.Integers Make unsigned def
R7646:7646 compcert.lib.Integers <> x:86 var
R7650:7657 compcert.lib.Integers Make unsigned def
R7659:7659 compcert.lib.Integers <> y:87 var
R7663:7670 compcert.lib.Integers Make unsigned def
R7672:7674 compcert.lib.Integers <> cin:88 var
R7700:7702 compcert.lib.Integers Make one def
R7690:7693 compcert.lib.Integers Make zero def
def 7717:7728 Make add_overflow
R7740:7742 compcert.lib.Integers Make int rec
binder 7731:7731 <> x:89
binder 7733:7733 <> y:90
binder 7735:7737 <> cin:91
R7746:7748 compcert.lib.Integers Make int rec
R7783:7785 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R7772:7774 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R7764:7769 compcert.lib.Integers Make signed def
R7771:7771 compcert.lib.Integers <> x:89 var
R7775:7780 compcert.lib.Integers Make signed def
R7782:7782 compcert.lib.Integers <> y:90 var
R7786:7791 compcert.lib.Integers Make signed def
R7793:7795 compcert.lib.Integers <> cin:91 var
binder 7759:7759 <> s:92
R7821:7824 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R7805:7807 compcert.lib.Coqlib <> zle def
R7820:7820 compcert.lib.Integers <> s:92 var
R7809:7818 compcert.lib.Integers Make min_signed def
R7825:7827 compcert.lib.Coqlib <> zle def
R7831:7840 compcert.lib.Integers Make max_signed def
R7829:7829 compcert.lib.Integers <> s:92 var
R7857:7859 compcert.lib.Integers Make one def
R7847:7850 compcert.lib.Integers Make zero def
def 7874:7883 Make sub_borrow
R7895:7897 compcert.lib.Integers Make int rec
binder 7886:7886 <> x:93
binder 7888:7888 <> y:94
binder 7890:7892 <> bin:95
R7901:7903 compcert.lib.Integers Make int rec
R7913:7915 compcert.lib.Coqlib <> zlt def
R7941:7943 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R7928:7930 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R7918:7925 compcert.lib.Integers Make unsigned def
R7927:7927 compcert.lib.Integers <> x:93 var
R7931:7938 compcert.lib.Integers Make unsigned def
R7940:7940 compcert.lib.Integers <> y:94 var
R7944:7951 compcert.lib.Integers Make unsigned def
R7953:7955 compcert.lib.Integers <> bin:95 var
R7974:7977 compcert.lib.Integers Make zero def
R7965:7967 compcert.lib.Integers Make one def
def 7992:8003 Make sub_overflow
R8015:8017 compcert.lib.Integers Make int rec
binder 8006:8006 <> x:96
binder 8008:8008 <> y:97
binder 8010:8012 <> bin:98
R8021:8023 compcert.lib.Integers Make int rec
R8058:8060 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R8047:8049 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R8039:8044 compcert.lib.Integers Make signed def
R8046:8046 compcert.lib.Integers <> x:96 var
R8050:8055 compcert.lib.Integers Make signed def
R8057:8057 compcert.lib.Integers <> y:97 var
R8061:8066 compcert.lib.Integers Make signed def
R8068:8070 compcert.lib.Integers <> bin:98 var
binder 8034:8034 <> s:99
R8096:8099 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R8080:8082 compcert.lib.Coqlib <> zle def
R8095:8095 compcert.lib.Integers <> s:99 var
R8084:8093 compcert.lib.Integers Make min_signed def
R8100:8102 compcert.lib.Coqlib <> zle def
R8106:8115 compcert.lib.Integers Make max_signed def
R8104:8104 compcert.lib.Integers <> s:99 var
R8132:8134 compcert.lib.Integers Make one def
R8122:8125 compcert.lib.Integers Make zero def
def 8237:8245 Make shr_carry
R8253:8255 compcert.lib.Integers Make int rec
binder 8248:8248 <> x:100
binder 8250:8250 <> y:101
R8260:8262 compcert.lib.Integers Make int rec
R8281:8284 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R8272:8273 compcert.lib.Integers Make lt def
R8277:8280 compcert.lib.Integers Make zero def
R8275:8275 compcert.lib.Integers <> x:100 var
R8285:8288 Coq.Init.Datatypes <> negb def
R8291:8292 compcert.lib.Integers Make eq def
R8324:8327 compcert.lib.Integers Make zero def
R8295:8297 compcert.lib.Integers Make and def
R8302:8304 compcert.lib.Integers Make sub def
R8318:8320 compcert.lib.Integers Make one def
R8307:8309 compcert.lib.Integers Make shl def
R8315:8315 compcert.lib.Integers <> y:101 var
R8311:8313 compcert.lib.Integers Make one def
R8299:8299 compcert.lib.Integers <> x:100 var
R8346:8349 compcert.lib.Integers Make zero def
R8337:8339 compcert.lib.Integers Make one def
def 8397:8404 Make zero_ext
R8410:8410 Coq.Numbers.BinNums <> Z ind
binder 8407:8407 <> n:102
R8417:8419 compcert.lib.Integers Make int rec
binder 8414:8414 <> x:103
R8424:8426 compcert.lib.Integers Make int rec
R8431:8434 compcert.lib.Integers Make repr def
R8437:8445 compcert.lib.Zbits <> Zzero_ext def
R8450:8457 compcert.lib.Integers Make unsigned def
R8459:8459 compcert.lib.Integers <> x:103 var
R8447:8447 compcert.lib.Integers <> n:102 var
def 8475:8482 Make sign_ext
R8488:8488 Coq.Numbers.BinNums <> Z ind
binder 8485:8485 <> n:104
R8495:8497 compcert.lib.Integers Make int rec
binder 8492:8492 <> x:105
R8502:8504 compcert.lib.Integers Make int rec
R8509:8512 compcert.lib.Integers Make repr def
R8515:8523 compcert.lib.Zbits <> Zsign_ext def
R8528:8535 compcert.lib.Integers Make unsigned def
R8537:8537 compcert.lib.Integers <> x:105 var
R8525:8525 compcert.lib.Integers <> n:104 var
def 8615:8622 Make one_bits
R8628:8630 compcert.lib.Integers Make int rec
binder 8625:8625 <> x:106
R8635:8638 Coq.Init.Datatypes <> list ind
R8640:8642 compcert.lib.Integers Make int rec
R8649:8656 Coq.Lists.List <> map def
R8664:8673 compcert.lib.Zbits <> Z_one_bits def
R8685:8692 compcert.lib.Integers Make unsigned def
R8694:8694 compcert.lib.Integers <> x:106 var
R8675:8682 compcert.lib.Integers Make wordsize def
R8658:8661 compcert.lib.Integers Make repr def
def 8751:8759 Make is_power2
R8765:8767 compcert.lib.Integers Make int rec
binder 8762:8762 <> x:107
R8772:8777 Coq.Init.Datatypes <> option ind
R8779:8781 compcert.lib.Integers Make int rec
R8794:8804 compcert.lib.Zbits <> Z_is_power2 def
R8807:8814 compcert.lib.Integers Make unsigned def
R8816:8816 compcert.lib.Integers <> x:107 var
R8828:8831 Coq.Init.Datatypes <> Some constr
R8838:8841 Coq.Init.Datatypes <> Some constr
R8844:8847 compcert.lib.Integers Make repr def
R8856:8859 Coq.Init.Datatypes <> None constr
R8864:8867 Coq.Init.Datatypes <> None constr
def 8909:8911 Make cmp
R8917:8926 compcert.lib.Integers <> comparison ind
binder 8914:8914 <> c:108
R8935:8937 compcert.lib.Integers Make int rec
binder 8930:8930 <> x:109
binder 8932:8932 <> y:110
R8942:8945 Coq.Init.Datatypes <> bool ind
R8958:8958 compcert.lib.Integers <> c:108 var
R8969:8971 compcert.lib.Integers <> Ceq constr
R8976:8977 compcert.lib.Integers Make eq def
R8981:8981 compcert.lib.Integers <> y:110 var
R8979:8979 compcert.lib.Integers <> x:109 var
R8987:8989 compcert.lib.Integers <> Cne constr
R8994:8997 Coq.Init.Datatypes <> negb def
R9000:9001 compcert.lib.Integers Make eq def
R9005:9005 compcert.lib.Integers <> y:110 var
R9003:9003 compcert.lib.Integers <> x:109 var
R9012:9014 compcert.lib.Integers <> Clt constr
R9019:9020 compcert.lib.Integers Make lt def
R9024:9024 compcert.lib.Integers <> y:110 var
R9022:9022 compcert.lib.Integers <> x:109 var
R9030:9032 compcert.lib.Integers <> Cle constr
R9037:9040 Coq.Init.Datatypes <> negb def
R9043:9044 compcert.lib.Integers Make lt def
R9048:9048 compcert.lib.Integers <> x:109 var
R9046:9046 compcert.lib.Integers <> y:110 var
R9055:9057 compcert.lib.Integers <> Cgt constr
R9062:9063 compcert.lib.Integers Make lt def
R9067:9067 compcert.lib.Integers <> x:109 var
R9065:9065 compcert.lib.Integers <> y:110 var
R9073:9075 compcert.lib.Integers <> Cge constr
R9080:9083 Coq.Init.Datatypes <> negb def
R9086:9087 compcert.lib.Integers Make lt def
R9091:9091 compcert.lib.Integers <> y:110 var
R9089:9089 compcert.lib.Integers <> x:109 var
def 9113:9116 Make cmpu
R9122:9131 compcert.lib.Integers <> comparison ind
binder 9119:9119 <> c:112
R9140:9142 compcert.lib.Integers Make int rec
binder 9135:9135 <> x:113
binder 9137:9137 <> y:114
R9147:9150 Coq.Init.Datatypes <> bool ind
R9163:9163 compcert.lib.Integers <> c:112 var
R9174:9176 compcert.lib.Integers <> Ceq constr
R9181:9182 compcert.lib.Integers Make eq def
R9186:9186 compcert.lib.Integers <> y:114 var
R9184:9184 compcert.lib.Integers <> x:113 var
R9192:9194 compcert.lib.Integers <> Cne constr
R9199:9202 Coq.Init.Datatypes <> negb def
R9205:9206 compcert.lib.Integers Make eq def
R9210:9210 compcert.lib.Integers <> y:114 var
R9208:9208 compcert.lib.Integers <> x:113 var
R9217:9219 compcert.lib.Integers <> Clt constr
R9224:9226 compcert.lib.Integers Make ltu def
R9230:9230 compcert.lib.Integers <> y:114 var
R9228:9228 compcert.lib.Integers <> x:113 var
R9236:9238 compcert.lib.Integers <> Cle constr
R9243:9246 Coq.Init.Datatypes <> negb def
R9249:9251 compcert.lib.Integers Make ltu def
R9255:9255 compcert.lib.Integers <> x:113 var
R9253:9253 compcert.lib.Integers <> y:114 var
R9262:9264 compcert.lib.Integers <> Cgt constr
R9269:9271 compcert.lib.Integers Make ltu def
R9275:9275 compcert.lib.Integers <> x:113 var
R9273:9273 compcert.lib.Integers <> y:114 var
R9281:9283 compcert.lib.Integers <> Cge constr
R9288:9291 Coq.Init.Datatypes <> negb def
R9294:9296 compcert.lib.Integers Make ltu def
R9300:9300 compcert.lib.Integers <> y:114 var
R9298:9298 compcert.lib.Integers <> x:113 var
def 9322:9329 Make is_false
R9335:9337 compcert.lib.Integers Make int rec
binder 9332:9332 <> x:116
R9351:9353 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9350:9350 compcert.lib.Integers <> x:116 var
R9354:9357 compcert.lib.Integers Make zero def
def 9371:9377 Make is_true
R9384:9386 compcert.lib.Integers Make int rec
binder 9381:9381 <> x:117
R9400:9403 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R9399:9399 compcert.lib.Integers <> x:117 var
R9404:9407 compcert.lib.Integers Make zero def
def 9421:9427 Make notbool
R9434:9436 compcert.lib.Integers Make int rec
binder 9431:9431 <> x:118
R9441:9443 compcert.lib.Integers Make int rec
R9452:9453 compcert.lib.Integers Make eq def
R9457:9460 compcert.lib.Integers Make zero def
R9455:9455 compcert.lib.Integers <> x:118 var
R9476:9479 compcert.lib.Integers Make zero def
R9467:9469 compcert.lib.Integers Make one def
def 9542:9549 Make divmodu2
R9561:9563 compcert.lib.Integers Make int rec
binder 9552:9554 <> nhi:119
binder 9556:9558 <> nlo:120
R9570:9572 compcert.lib.Integers Make int rec
binder 9567:9567 <> d:121
R9577:9582 Coq.Init.Datatypes <> option ind
R9588:9590 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R9585:9587 compcert.lib.Integers Make int rec
R9591:9593 compcert.lib.Integers Make int rec
R9604:9609 compcert.lib.Integers Make eq_dec thm
R9613:9616 compcert.lib.Integers Make zero def
R9611:9611 compcert.lib.Integers <> d:121 var
R9651:9660 Coq.ZArith.BinInt Z div_eucl def
R9703:9710 compcert.lib.Integers Make unsigned def
R9712:9712 compcert.lib.Integers <> d:121 var
R9685:9687 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R9675:9677 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R9663:9670 compcert.lib.Integers Make unsigned def
R9672:9674 compcert.lib.Integers <> nhi:119 var
R9678:9684 compcert.lib.Integers Make modulus def
R9688:9695 compcert.lib.Integers Make unsigned def
R9697:9699 compcert.lib.Integers <> nlo:120 var
binder 9642:9642 <> q:122
binder 9645:9645 <> r:123
R9725:9727 compcert.lib.Coqlib <> zle def
R9731:9742 compcert.lib.Integers Make max_unsigned def
R9729:9729 compcert.lib.Integers <> q:122 var
R9775:9778 Coq.Init.Datatypes <> None constr
R9749:9752 Coq.Init.Datatypes <> Some constr
R9753:9753 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9760:9761 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9768:9768 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9754:9757 compcert.lib.Integers Make repr def
R9759:9759 compcert.lib.Integers <> q:122 var
R9762:9765 compcert.lib.Integers Make repr def
R9767:9767 compcert.lib.Integers <> r:123 var
R9623:9626 Coq.Init.Datatypes <> None constr
def 9794:9801 Make divmods2
R9813:9815 compcert.lib.Integers Make int rec
binder 9804:9806 <> nhi:124
binder 9808:9810 <> nlo:125
R9822:9824 compcert.lib.Integers Make int rec
binder 9819:9819 <> d:126
R9829:9834 Coq.Init.Datatypes <> option ind
R9840:9842 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R9837:9839 compcert.lib.Integers Make int rec
R9843:9845 compcert.lib.Integers Make int rec
R9856:9861 compcert.lib.Integers Make eq_dec thm
R9865:9868 compcert.lib.Integers Make zero def
R9863:9863 compcert.lib.Integers <> d:126 var
R9903:9911 Coq.ZArith.BinInt Z quotrem def
R9952:9957 compcert.lib.Integers Make signed def
R9959:9959 compcert.lib.Integers <> d:126 var
R9934:9936 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R9924:9926 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R9914:9919 compcert.lib.Integers Make signed def
R9921:9923 compcert.lib.Integers <> nhi:124 var
R9927:9933 compcert.lib.Integers Make modulus def
R9937:9944 compcert.lib.Integers Make unsigned def
R9946:9948 compcert.lib.Integers <> nlo:125 var
binder 9894:9894 <> q:127
binder 9897:9897 <> r:128
R9988:9991 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R9972:9974 compcert.lib.Coqlib <> zle def
R9987:9987 compcert.lib.Integers <> q:127 var
R9976:9985 compcert.lib.Integers Make min_signed def
R9992:9994 compcert.lib.Coqlib <> zle def
R9998:10007 compcert.lib.Integers Make max_signed def
R9996:9996 compcert.lib.Integers <> q:127 var
R10040:10043 Coq.Init.Datatypes <> None constr
R10014:10017 Coq.Init.Datatypes <> Some constr
R10018:10018 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10025:10026 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10033:10033 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10019:10022 compcert.lib.Integers Make repr def
R10024:10024 compcert.lib.Integers <> q:127 var
R10027:10030 compcert.lib.Integers Make repr def
R10032:10032 compcert.lib.Integers <> r:128 var
R9875:9878 Coq.Init.Datatypes <> None constr
prf 10168:10185 Make half_modulus_power
R10202:10204 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10190:10201 compcert.lib.Integers Make half_modulus def
R10205:10209 Coq.ZArith.Zpower <> two_p def
R10221:10223 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R10212:10220 compcert.lib.Integers Make zwordsize def
R10244:10255 compcert.lib.Integers Make half_modulus def
R10266:10278 compcert.lib.Integers Make modulus_power thm
R10266:10278 compcert.lib.Integers Make modulus_power thm
R10266:10278 compcert.lib.Integers Make modulus_power thm
R10304:10306 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R10295:10303 compcert.lib.Integers Make zwordsize def
R10304:10306 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R10295:10303 compcert.lib.Integers Make zwordsize def
R10322:10330 compcert.lib.Integers Make zwordsize def
R10339:10344 Coq.ZArith.BinInt Z succ def
R10322:10330 compcert.lib.Integers Make zwordsize def
R10339:10344 Coq.ZArith.BinInt Z succ def
R10362:10368 Coq.ZArith.Zpower <> two_p_S thm
R10362:10368 Coq.ZArith.Zpower <> two_p_S thm
R10362:10368 Coq.ZArith.Zpower <> two_p_S thm
R10362:10368 Coq.ZArith.Zpower <> two_p_S thm
R10379:10388 Coq.ZArith.BinInt Z mul_comm thm
R10379:10388 Coq.ZArith.BinInt Z mul_comm thm
R10379:10388 Coq.ZArith.BinInt Z mul_comm thm
R10397:10406 Coq.ZArith.Zdiv <> Z_div_mult thm
R10397:10406 Coq.ZArith.Zdiv <> Z_div_mult thm
R10441:10452 compcert.lib.Integers Make wordsize_pos thm
R10441:10452 compcert.lib.Integers Make wordsize_pos thm
prf 10496:10515 Make half_modulus_modulus
R10525:10527 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10518:10524 compcert.lib.Integers Make modulus def
R10529:10531 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R10532:10543 compcert.lib.Integers Make half_modulus def
R10563:10580 compcert.lib.Integers Make half_modulus_power thm
R10563:10580 compcert.lib.Integers Make half_modulus_power thm
R10563:10580 compcert.lib.Integers Make half_modulus_power thm
R10591:10603 compcert.lib.Integers Make modulus_power thm
R10591:10603 compcert.lib.Integers Make modulus_power thm
R10591:10603 compcert.lib.Integers Make modulus_power thm
R10619:10625 Coq.ZArith.Zpower <> two_p_S thm
R10619:10625 Coq.ZArith.Zpower <> two_p_S thm
R10619:10625 Coq.ZArith.Zpower <> two_p_S thm
R10619:10625 Coq.ZArith.Zpower <> two_p_S thm
R10634:10640 Coq.Init.Logic <> f_equal thm
R10634:10640 Coq.Init.Logic <> f_equal thm
R10663:10674 compcert.lib.Integers Make wordsize_pos thm
R10663:10674 compcert.lib.Integers Make wordsize_pos thm
prf 10853:10868 Make half_modulus_pos
R10883:10885 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R10871:10882 compcert.lib.Integers Make half_modulus def
R10906:10923 compcert.lib.Integers Make half_modulus_power thm
R10906:10923 compcert.lib.Integers Make half_modulus_power thm
R10906:10923 compcert.lib.Integers Make half_modulus_power thm
R10932:10944 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R10932:10944 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R10958:10969 compcert.lib.Integers Make wordsize_pos thm
R10958:10969 compcert.lib.Integers Make wordsize_pos thm
prf 10992:11005 Make min_signed_neg
R11018:11020 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11008:11017 compcert.lib.Integers Make min_signed def
R11040:11049 compcert.lib.Integers Make min_signed def
R11063:11078 compcert.lib.Integers Make half_modulus_pos thm
R11063:11078 compcert.lib.Integers Make half_modulus_pos thm
prf 11101:11114 Make max_signed_pos
R11127:11130 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R11117:11126 compcert.lib.Integers Make max_signed def
R11150:11159 compcert.lib.Integers Make max_signed def
R11173:11188 compcert.lib.Integers Make half_modulus_pos thm
R11173:11188 compcert.lib.Integers Make half_modulus_pos thm
prf 11211:11231 Make wordsize_max_unsigned
R11243:11246 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R11234:11242 compcert.lib.Integers Make zwordsize def
R11247:11258 compcert.lib.Integers Make max_unsigned def
R11287:11289 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11278:11286 compcert.lib.Integers Make zwordsize def
R11290:11296 compcert.lib.Integers Make modulus def
R11287:11289 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11278:11286 compcert.lib.Integers Make zwordsize def
R11290:11296 compcert.lib.Integers Make modulus def
R11312:11324 compcert.lib.Integers Make modulus_power thm
R11312:11324 compcert.lib.Integers Make modulus_power thm
R11312:11324 compcert.lib.Integers Make modulus_power thm
R11333:11344 compcert.lib.Coqlib <> two_p_strict thm
R11333:11344 compcert.lib.Coqlib <> two_p_strict thm
R11362:11373 compcert.lib.Integers Make wordsize_pos thm
R11362:11373 compcert.lib.Integers Make wordsize_pos thm
R11392:11403 compcert.lib.Integers Make max_unsigned def
prf 11426:11450 Make two_wordsize_max_unsigned
R11470:11473 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R11466:11468 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R11454:11456 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R11457:11465 compcert.lib.Integers Make zwordsize def
R11474:11485 compcert.lib.Integers Make max_unsigned def
R11522:11524 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11518:11520 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R11506:11508 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R11509:11517 compcert.lib.Integers Make zwordsize def
R11525:11531 compcert.lib.Integers Make modulus def
R11522:11524 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11518:11520 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R11506:11508 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R11509:11517 compcert.lib.Integers Make zwordsize def
R11525:11531 compcert.lib.Integers Make modulus def
R11547:11559 compcert.lib.Integers Make modulus_power thm
R11547:11559 compcert.lib.Integers Make modulus_power thm
R11547:11559 compcert.lib.Integers Make modulus_power thm
R11568:11581 compcert.lib.Coqlib <> two_p_strict_2 thm
R11568:11581 compcert.lib.Coqlib <> two_p_strict_2 thm
R11595:11606 compcert.lib.Integers Make wordsize_pos thm
R11595:11606 compcert.lib.Integers Make wordsize_pos thm
R11625:11636 compcert.lib.Integers Make max_unsigned def
prf 11659:11677 Make max_signed_unsigned
R11690:11692 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11680:11689 compcert.lib.Integers Make max_signed def
R11693:11704 compcert.lib.Integers Make max_unsigned def
R11723:11732 compcert.lib.Integers Make max_signed def
R11735:11746 compcert.lib.Integers Make max_unsigned def
R11757:11776 compcert.lib.Integers Make half_modulus_modulus thm
R11757:11776 compcert.lib.Integers Make half_modulus_modulus thm
R11757:11776 compcert.lib.Integers Make half_modulus_modulus thm
R11792:11807 compcert.lib.Integers Make half_modulus_pos thm
R11792:11807 compcert.lib.Integers Make half_modulus_pos thm
prf 11829:11844 Make unsigned_repr_eq
binder 11856:11856 <> x:129
R11876:11878 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11859:11866 compcert.lib.Integers Make unsigned def
R11869:11872 compcert.lib.Integers Make repr def
R11874:11874 compcert.lib.Integers <> x:129 var
R11879:11886 Coq.ZArith.BinInt Z modulo def
R11890:11896 compcert.lib.Integers Make modulus def
R11888:11888 compcert.lib.Integers <> x:129 var
R11929:11944 compcert.lib.Integers Make Z_mod_modulus_eq thm
R11929:11944 compcert.lib.Integers Make Z_mod_modulus_eq thm
prf 11959:11972 Make signed_repr_eq
binder 11984:11984 <> x:130
R12002:12004 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11987:11992 compcert.lib.Integers Make signed def
R11995:11998 compcert.lib.Integers Make repr def
R12000:12000 compcert.lib.Integers <> x:130 var
R12008:12010 compcert.lib.Coqlib <> zlt def
R12033:12044 compcert.lib.Integers Make half_modulus def
R12013:12020 Coq.ZArith.BinInt Z modulo def
R12024:12030 compcert.lib.Integers Make modulus def
R12022:12022 compcert.lib.Integers <> x:130 var
R12093:12095 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R12075:12082 Coq.ZArith.BinInt Z modulo def
R12086:12092 compcert.lib.Integers Make modulus def
R12084:12084 compcert.lib.Integers <> x:130 var
R12096:12102 compcert.lib.Integers Make modulus def
R12051:12058 Coq.ZArith.BinInt Z modulo def
R12062:12068 compcert.lib.Integers Make modulus def
R12060:12060 compcert.lib.Integers <> x:130 var
R12129:12134 compcert.lib.Integers Make signed def
R12145:12160 compcert.lib.Integers Make unsigned_repr_eq thm
R12145:12160 compcert.lib.Integers Make unsigned_repr_eq thm
R12145:12160 compcert.lib.Integers Make unsigned_repr_eq thm
def 12287:12289 Make eqm
R12294:12298 compcert.lib.Zbits <> eqmod def
R12300:12306 compcert.lib.Integers Make modulus def
prf 12316:12323 Make eqm_refl
binder 12333:12333 <> x:131
R12336:12338 compcert.lib.Integers Make eqm def
R12342:12342 compcert.lib.Integers <> x:131 var
R12340:12340 compcert.lib.Integers <> x:131 var
R12352:12361 compcert.lib.Zbits <> eqmod_refl thm
R12363:12369 compcert.lib.Integers Make modulus def
prf 12409:12417 Make eqm_refl2
binder 12429:12429 <> x:132
binder 12431:12431 <> y:133
R12439:12442 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12443:12445 compcert.lib.Integers Make eqm def
R12449:12449 compcert.lib.Integers <> y:133 var
R12447:12447 compcert.lib.Integers <> x:132 var
R12435:12437 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12434:12434 compcert.lib.Integers <> x:132 var
R12438:12438 compcert.lib.Integers <> y:133 var
R12459:12469 compcert.lib.Zbits <> eqmod_refl2 thm
R12471:12477 compcert.lib.Integers Make modulus def
prf 12518:12524 Make eqm_sym
binder 12534:12534 <> x:134
binder 12536:12536 <> y:135
R12546:12549 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12550:12552 compcert.lib.Integers Make eqm def
R12556:12556 compcert.lib.Integers <> x:134 var
R12554:12554 compcert.lib.Integers <> y:135 var
R12539:12541 compcert.lib.Integers Make eqm def
R12545:12545 compcert.lib.Integers <> y:135 var
R12543:12543 compcert.lib.Integers <> x:134 var
R12566:12574 compcert.lib.Zbits <> eqmod_sym thm
R12576:12582 compcert.lib.Integers Make modulus def
prf 12621:12629 Make eqm_trans
binder 12639:12639 <> x:136
binder 12641:12641 <> y:137
binder 12643:12643 <> z:138
R12653:12656 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12664:12667 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12668:12670 compcert.lib.Integers Make eqm def
R12674:12674 compcert.lib.Integers <> z:138 var
R12672:12672 compcert.lib.Integers <> x:136 var
R12657:12659 compcert.lib.Integers Make eqm def
R12663:12663 compcert.lib.Integers <> z:138 var
R12661:12661 compcert.lib.Integers <> y:137 var
R12646:12648 compcert.lib.Integers Make eqm def
R12652:12652 compcert.lib.Integers <> y:137 var
R12650:12650 compcert.lib.Integers <> x:136 var
R12684:12694 compcert.lib.Zbits <> eqmod_trans thm
R12696:12702 compcert.lib.Integers Make modulus def
prf 12743:12754 Make eqm_small_eq
binder 12766:12766 <> x:139
binder 12768:12768 <> y:140
R12778:12781 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12798:12801 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12818:12821 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12823:12825 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12822:12822 compcert.lib.Integers <> x:139 var
R12826:12826 compcert.lib.Integers <> y:140 var
R12803:12806 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R12808:12810 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R12807:12807 compcert.lib.Integers <> y:140 var
R12807:12807 compcert.lib.Integers <> y:140 var
R12811:12817 compcert.lib.Integers Make modulus def
R12783:12786 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R12788:12790 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R12787:12787 compcert.lib.Integers <> x:139 var
R12787:12787 compcert.lib.Integers <> x:139 var
R12791:12797 compcert.lib.Integers Make modulus def
R12771:12773 compcert.lib.Integers Make eqm def
R12777:12777 compcert.lib.Integers <> y:140 var
R12775:12775 compcert.lib.Integers <> x:139 var
R12836:12849 compcert.lib.Zbits <> eqmod_small_eq thm
R12851:12857 compcert.lib.Integers Make modulus def
prf 12901:12907 Make eqm_add
binder 12919:12919 <> a:141
binder 12921:12921 <> b:142
binder 12923:12923 <> c:143
binder 12925:12925 <> d:144
R12935:12938 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12946:12949 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12950:12952 compcert.lib.Integers Make eqm def
R12964:12966 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12963:12963 compcert.lib.Integers <> b:142 var
R12967:12967 compcert.lib.Integers <> d:144 var
R12956:12958 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12955:12955 compcert.lib.Integers <> a:141 var
R12959:12959 compcert.lib.Integers <> c:143 var
R12939:12941 compcert.lib.Integers Make eqm def
R12945:12945 compcert.lib.Integers <> d:144 var
R12943:12943 compcert.lib.Integers <> c:143 var
R12928:12930 compcert.lib.Integers Make eqm def
R12934:12934 compcert.lib.Integers <> b:142 var
R12932:12932 compcert.lib.Integers <> a:141 var
R12978:12986 compcert.lib.Zbits <> eqmod_add thm
R12988:12994 compcert.lib.Integers Make modulus def
prf 13033:13039 Make eqm_neg
binder 13051:13051 <> x:145
binder 13053:13053 <> y:146
R13063:13066 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13067:13069 compcert.lib.Integers Make eqm def
R13077:13077 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R13078:13078 compcert.lib.Integers <> y:146 var
R13072:13072 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R13073:13073 compcert.lib.Integers <> x:145 var
R13056:13058 compcert.lib.Integers Make eqm def
R13062:13062 compcert.lib.Integers <> y:146 var
R13060:13060 compcert.lib.Integers <> x:145 var
R13089:13097 compcert.lib.Zbits <> eqmod_neg thm
R13099:13105 compcert.lib.Integers Make modulus def
prf 13144:13150 Make eqm_sub
binder 13162:13162 <> a:147
binder 13164:13164 <> b:148
binder 13166:13166 <> c:149
binder 13168:13168 <> d:150
R13178:13181 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13189:13192 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13193:13195 compcert.lib.Integers Make eqm def
R13207:13209 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13206:13206 compcert.lib.Integers <> b:148 var
R13210:13210 compcert.lib.Integers <> d:150 var
R13199:13201 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13198:13198 compcert.lib.Integers <> a:147 var
R13202:13202 compcert.lib.Integers <> c:149 var
R13182:13184 compcert.lib.Integers Make eqm def
R13188:13188 compcert.lib.Integers <> d:150 var
R13186:13186 compcert.lib.Integers <> c:149 var
R13171:13173 compcert.lib.Integers Make eqm def
R13177:13177 compcert.lib.Integers <> b:148 var
R13175:13175 compcert.lib.Integers <> a:147 var
R13221:13229 compcert.lib.Zbits <> eqmod_sub thm
R13231:13237 compcert.lib.Integers Make modulus def
prf 13276:13283 Make eqm_mult
binder 13295:13295 <> a:151
binder 13297:13297 <> b:152
binder 13299:13299 <> c:153
binder 13301:13301 <> d:154
R13311:13314 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13322:13325 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13326:13328 compcert.lib.Integers Make eqm def
R13340:13342 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13339:13339 compcert.lib.Integers <> c:153 var
R13343:13343 compcert.lib.Integers <> d:154 var
R13332:13334 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13331:13331 compcert.lib.Integers <> a:151 var
R13335:13335 compcert.lib.Integers <> b:152 var
R13315:13317 compcert.lib.Integers Make eqm def
R13321:13321 compcert.lib.Integers <> d:154 var
R13319:13319 compcert.lib.Integers <> b:152 var
R13304:13306 compcert.lib.Integers Make eqm def
R13310:13310 compcert.lib.Integers <> c:153 var
R13308:13308 compcert.lib.Integers <> a:151 var
R13354:13363 compcert.lib.Zbits <> eqmod_mult thm
R13365:13371 compcert.lib.Integers Make modulus def
prf 13411:13423 Make eqm_same_bits
binder 13435:13435 <> x:155
binder 13437:13437 <> y:156
R13442:13442 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13504:13510 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13511:13513 compcert.lib.Integers Make eqm def
R13517:13517 compcert.lib.Integers <> y:156 var
R13515:13515 compcert.lib.Integers <> x:155 var
binder 13450:13450 <> i:157
R13471:13474 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13488:13490 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13475:13483 Coq.ZArith.BinInt Z testbit def
R13487:13487 compcert.lib.Integers <> i:157 var
R13485:13485 compcert.lib.Integers <> x:155 var
R13491:13499 Coq.ZArith.BinInt Z testbit def
R13503:13503 compcert.lib.Integers <> i:157 var
R13501:13501 compcert.lib.Integers <> y:156 var
R13454:13457 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R13459:13461 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R13458:13458 compcert.lib.Integers <> i:157 var
R13458:13458 compcert.lib.Integers <> i:157 var
R13462:13470 compcert.lib.Integers Make zwordsize def
R13527:13541 compcert.lib.Zbits <> eqmod_same_bits thm
R13543:13550 compcert.lib.Integers Make wordsize def
prf 13561:13573 Make same_bits_eqm
binder 13585:13585 <> x:158
binder 13587:13587 <> y:159
binder 13589:13589 <> i:160
R13601:13606 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13625:13630 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13644:13646 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13631:13639 Coq.ZArith.BinInt Z testbit def
R13643:13643 compcert.lib.Integers <> i:160 var
R13641:13641 compcert.lib.Integers <> x:158 var
R13647:13655 Coq.ZArith.BinInt Z testbit def
R13659:13659 compcert.lib.Integers <> i:160 var
R13657:13657 compcert.lib.Integers <> y:159 var
R13608:13611 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R13613:13615 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R13612:13612 compcert.lib.Integers <> i:160 var
R13612:13612 compcert.lib.Integers <> i:160 var
R13616:13624 compcert.lib.Integers Make zwordsize def
R13594:13596 compcert.lib.Integers Make eqm def
R13600:13600 compcert.lib.Integers <> y:159 var
R13598:13598 compcert.lib.Integers <> x:158 var
R13669:13683 compcert.lib.Zbits <> same_bits_eqmod thm
R13685:13692 compcert.lib.Integers Make wordsize def
prf 13764:13775 Make eqm_samerepr
binder 13785:13785 <> x:161
binder 13787:13787 <> y:162
R13797:13800 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13807:13809 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13801:13804 compcert.lib.Integers Make repr def
R13806:13806 compcert.lib.Integers <> x:161 var
R13810:13813 compcert.lib.Integers Make repr def
R13815:13815 compcert.lib.Integers <> y:162 var
R13790:13792 compcert.lib.Integers Make eqm def
R13796:13796 compcert.lib.Integers <> y:162 var
R13794:13794 compcert.lib.Integers <> x:161 var
R13842:13845 compcert.lib.Integers Make repr def
R13854:13861 compcert.lib.Integers Make mkint_eq thm
R13854:13861 compcert.lib.Integers Make mkint_eq thm
R13875:13890 compcert.lib.Integers Make Z_mod_modulus_eq thm
R13875:13890 compcert.lib.Integers Make Z_mod_modulus_eq thm
R13875:13890 compcert.lib.Integers Make Z_mod_modulus_eq thm
R13875:13890 compcert.lib.Integers Make Z_mod_modulus_eq thm
R13875:13890 compcert.lib.Integers Make Z_mod_modulus_eq thm
R13899:13910 compcert.lib.Zbits <> eqmod_mod_eq thm
R13899:13910 compcert.lib.Zbits <> eqmod_mod_eq thm
prf 13950:13966 Make eqm_unsigned_repr
binder 13978:13978 <> z:163
R13981:13983 compcert.lib.Integers Make eqm def
R13988:13995 compcert.lib.Integers Make unsigned def
R13998:14001 compcert.lib.Integers Make repr def
R14003:14003 compcert.lib.Integers <> z:163 var
R13985:13985 compcert.lib.Integers <> z:163 var
R14024:14026 compcert.lib.Integers Make eqm def
R14045:14060 compcert.lib.Integers Make unsigned_repr_eq thm
R14045:14060 compcert.lib.Integers Make unsigned_repr_eq thm
R14045:14060 compcert.lib.Integers Make unsigned_repr_eq thm
R14069:14077 compcert.lib.Zbits <> eqmod_mod thm
R14069:14077 compcert.lib.Zbits <> eqmod_mod thm
prf 14146:14164 Make eqm_unsigned_repr_l
binder 14176:14176 <> a:164
binder 14178:14178 <> b:165
R14188:14191 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14192:14194 compcert.lib.Integers Make eqm def
R14216:14216 compcert.lib.Integers <> b:165 var
R14197:14204 compcert.lib.Integers Make unsigned def
R14207:14210 compcert.lib.Integers Make repr def
R14212:14212 compcert.lib.Integers <> a:164 var
R14181:14183 compcert.lib.Integers Make eqm def
R14187:14187 compcert.lib.Integers <> b:165 var
R14185:14185 compcert.lib.Integers <> a:164 var
R14242:14250 compcert.lib.Integers Make eqm_trans thm
R14242:14250 compcert.lib.Integers Make eqm_trans thm
R14268:14274 compcert.lib.Integers Make eqm_sym thm
R14268:14274 compcert.lib.Integers Make eqm_sym thm
R14283:14299 compcert.lib.Integers Make eqm_unsigned_repr thm
R14283:14299 compcert.lib.Integers Make eqm_unsigned_repr thm
prf 14360:14378 Make eqm_unsigned_repr_r
binder 14390:14390 <> a:166
binder 14392:14392 <> b:167
R14402:14405 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14406:14408 compcert.lib.Integers Make eqm def
R14413:14420 compcert.lib.Integers Make unsigned def
R14423:14426 compcert.lib.Integers Make repr def
R14428:14428 compcert.lib.Integers <> b:167 var
R14410:14410 compcert.lib.Integers <> a:166 var
R14395:14397 compcert.lib.Integers Make eqm def
R14401:14401 compcert.lib.Integers <> b:167 var
R14399:14399 compcert.lib.Integers <> a:166 var
R14456:14464 compcert.lib.Integers Make eqm_trans thm
R14456:14464 compcert.lib.Integers Make eqm_trans thm
R14488:14504 compcert.lib.Integers Make eqm_unsigned_repr thm
R14488:14504 compcert.lib.Integers Make eqm_unsigned_repr thm
prf 14559:14577 Make eqm_signed_unsigned
binder 14589:14589 <> x:168
R14592:14594 compcert.lib.Integers Make eqm def
R14608:14615 compcert.lib.Integers Make unsigned def
R14617:14617 compcert.lib.Integers <> x:168 var
R14597:14602 compcert.lib.Integers Make signed def
R14604:14604 compcert.lib.Integers <> x:168 var
R14650:14655 compcert.lib.Integers Make signed def
R14668:14675 compcert.lib.Integers Make unsigned def
R14668:14675 compcert.lib.Integers Make unsigned def
R14689:14691 compcert.lib.Coqlib <> zlt def
R14695:14706 compcert.lib.Integers Make half_modulus def
R14689:14691 compcert.lib.Coqlib <> zlt def
R14695:14706 compcert.lib.Integers Make half_modulus def
R14725:14734 compcert.lib.Zbits <> eqmod_refl thm
R14725:14734 compcert.lib.Zbits <> eqmod_refl thm
prf 14775:14788 Make unsigned_range
binder 14800:14800 <> i:169
R14804:14807 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R14818:14820 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R14808:14815 compcert.lib.Integers Make unsigned def
R14817:14817 compcert.lib.Integers <> i:169 var
R14808:14815 compcert.lib.Integers Make unsigned def
R14817:14817 compcert.lib.Integers <> i:169 var
R14821:14827 compcert.lib.Integers Make modulus def
prf 14914:14929 Make unsigned_range_2
binder 14941:14941 <> i:170
R14945:14948 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R14959:14962 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R14949:14956 compcert.lib.Integers Make unsigned def
R14958:14958 compcert.lib.Integers <> i:170 var
R14949:14956 compcert.lib.Integers Make unsigned def
R14958:14958 compcert.lib.Integers <> i:170 var
R14963:14974 compcert.lib.Integers Make max_unsigned def
R15000:15011 compcert.lib.Integers Make max_unsigned def
R15028:15041 compcert.lib.Integers Make unsigned_range thm
R15028:15041 compcert.lib.Integers Make unsigned_range thm
prf 15105:15116 Make signed_range
binder 15128:15128 <> i:171
R15141:15144 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R15153:15156 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R15131:15140 compcert.lib.Integers Make min_signed def
R15145:15150 compcert.lib.Integers Make signed def
R15152:15152 compcert.lib.Integers <> i:171 var
R15145:15150 compcert.lib.Integers Make signed def
R15152:15152 compcert.lib.Integers <> i:171 var
R15157:15166 compcert.lib.Integers Make max_signed def
R15193:15198 compcert.lib.Integers Make signed def
R15215:15228 compcert.lib.Integers Make unsigned_range thm
R15215:15228 compcert.lib.Integers Make unsigned_range thm
R15244:15251 compcert.lib.Integers Make unsigned def
R15244:15251 compcert.lib.Integers Make unsigned def
R15273:15275 compcert.lib.Coqlib <> zlt def
R15279:15290 compcert.lib.Integers Make half_modulus def
R15273:15275 compcert.lib.Coqlib <> zlt def
R15279:15290 compcert.lib.Integers Make half_modulus def
R15310:15319 compcert.lib.Integers Make max_signed def
R15333:15346 compcert.lib.Integers Make min_signed_neg thm
R15333:15346 compcert.lib.Integers Make min_signed_neg thm
R15365:15374 compcert.lib.Integers Make min_signed def
R15377:15386 compcert.lib.Integers Make max_signed def
R15399:15418 compcert.lib.Integers Make half_modulus_modulus thm
R15399:15418 compcert.lib.Integers Make half_modulus_modulus thm
R15399:15418 compcert.lib.Integers Make half_modulus_modulus thm
prf 15447:15459 Make repr_unsigned
binder 15471:15471 <> i:172
R15491:15493 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15474:15477 compcert.lib.Integers Make repr def
R15480:15487 compcert.lib.Integers Make unsigned def
R15489:15489 compcert.lib.Integers <> i:172 var
R15494:15494 compcert.lib.Integers <> i:172 var
R15532:15535 compcert.lib.Integers Make repr def
R15544:15551 compcert.lib.Integers Make mkint_eq thm
R15544:15551 compcert.lib.Integers Make mkint_eq thm
R15564:15579 compcert.lib.Integers Make Z_mod_modulus_eq thm
R15564:15579 compcert.lib.Integers Make Z_mod_modulus_eq thm
R15564:15579 compcert.lib.Integers Make Z_mod_modulus_eq thm
R15588:15598 Coq.ZArith.BinInt Z mod_small thm
R15588:15598 Coq.ZArith.BinInt Z mod_small thm
prf 15654:15664 Make repr_signed
binder 15676:15676 <> i:173
R15694:15696 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15679:15682 compcert.lib.Integers Make repr def
R15685:15690 compcert.lib.Integers Make signed def
R15692:15692 compcert.lib.Integers <> i:173 var
R15697:15697 compcert.lib.Integers <> i:173 var
R15731:15734 compcert.lib.Integers Make repr def
R15737:15744 compcert.lib.Integers Make unsigned def
R15731:15734 compcert.lib.Integers Make repr def
R15737:15744 compcert.lib.Integers Make unsigned def
R15759:15770 compcert.lib.Integers Make eqm_samerepr thm
R15759:15770 compcert.lib.Integers Make eqm_samerepr thm
R15779:15797 compcert.lib.Integers Make eqm_signed_unsigned thm
R15779:15797 compcert.lib.Integers Make eqm_signed_unsigned thm
R15861:15864 compcert.lib.Integers Make repr def
prf 15874:15884 Make eqm_repr_eq
binder 15894:15894 <> x:174
binder 15896:15896 <> y:175
R15917:15920 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15927:15929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15921:15924 compcert.lib.Integers Make repr def
R15926:15926 compcert.lib.Integers <> x:174 var
R15930:15930 compcert.lib.Integers <> y:175 var
R15899:15901 compcert.lib.Integers Make eqm def
R15906:15913 compcert.lib.Integers Make unsigned def
R15915:15915 compcert.lib.Integers <> y:175 var
R15903:15903 compcert.lib.Integers <> x:174 var
R15962:15974 compcert.lib.Integers Make repr_unsigned thm
R15962:15974 compcert.lib.Integers Make repr_unsigned thm
R15962:15974 compcert.lib.Integers Make repr_unsigned thm
R15986:15997 compcert.lib.Integers Make eqm_samerepr thm
R15986:15997 compcert.lib.Integers Make eqm_samerepr thm
prf 16020:16032 Make unsigned_repr
binder 16044:16044 <> z:176
R16069:16072 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16090:16092 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16073:16080 compcert.lib.Integers Make unsigned def
R16083:16086 compcert.lib.Integers Make repr def
R16088:16088 compcert.lib.Integers <> z:176 var
R16093:16093 compcert.lib.Integers <> z:176 var
R16048:16051 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R16053:16056 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R16052:16052 compcert.lib.Integers <> z:176 var
R16052:16052 compcert.lib.Integers <> z:176 var
R16057:16068 compcert.lib.Integers Make max_unsigned def
R16121:16136 compcert.lib.Integers Make unsigned_repr_eq thm
R16121:16136 compcert.lib.Integers Make unsigned_repr_eq thm
R16121:16136 compcert.lib.Integers Make unsigned_repr_eq thm
R16147:16157 Coq.ZArith.BinInt Z mod_small thm
R16147:16157 Coq.ZArith.BinInt Z mod_small thm
R16167:16178 compcert.lib.Integers Make max_unsigned def
prf 16241:16251 Make signed_repr
binder 16263:16263 <> z:177
R16295:16298 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16314:16316 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16299:16304 compcert.lib.Integers Make signed def
R16307:16310 compcert.lib.Integers Make repr def
R16312:16312 compcert.lib.Integers <> z:177 var
R16317:16317 compcert.lib.Integers <> z:177 var
R16276:16279 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R16281:16284 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R16266:16275 compcert.lib.Integers Make min_signed def
R16280:16280 compcert.lib.Integers <> z:177 var
R16280:16280 compcert.lib.Integers <> z:177 var
R16285:16294 compcert.lib.Integers Make max_signed def
R16344:16349 compcert.lib.Integers Make signed def
R16362:16364 compcert.lib.Coqlib <> zle def
R16362:16364 compcert.lib.Coqlib <> zle def
R16383:16390 compcert.lib.Integers Make unsigned def
R16393:16396 compcert.lib.Integers Make repr def
R16383:16390 compcert.lib.Integers Make unsigned def
R16393:16396 compcert.lib.Integers Make repr def
R16420:16427 compcert.lib.Coqlib <> zlt_true thm
R16420:16427 compcert.lib.Coqlib <> zlt_true thm
R16420:16427 compcert.lib.Coqlib <> zlt_true thm
R16420:16427 compcert.lib.Coqlib <> zlt_true thm
R16443:16452 compcert.lib.Integers Make max_signed def
R16485:16497 compcert.lib.Integers Make unsigned_repr thm
R16485:16497 compcert.lib.Integers Make unsigned_repr thm
R16511:16529 compcert.lib.Integers Make max_signed_unsigned thm
R16511:16529 compcert.lib.Integers Make max_signed_unsigned thm
R16554:16556 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16557:16563 compcert.lib.Integers Make modulus def
R16554:16556 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16557:16563 compcert.lib.Integers Make modulus def
R16578:16581 compcert.lib.Integers Make repr def
R16592:16595 compcert.lib.Integers Make repr def
R16578:16581 compcert.lib.Integers Make repr def
R16592:16595 compcert.lib.Integers Make repr def
R16613:16620 compcert.lib.Integers Make unsigned def
R16623:16626 compcert.lib.Integers Make repr def
R16613:16620 compcert.lib.Integers Make unsigned def
R16623:16626 compcert.lib.Integers Make repr def
R16652:16660 compcert.lib.Coqlib <> zlt_false thm
R16652:16660 compcert.lib.Coqlib <> zlt_false thm
R16652:16660 compcert.lib.Coqlib <> zlt_false thm
R16652:16660 compcert.lib.Coqlib <> zlt_false thm
R16701:16710 compcert.lib.Integers Make min_signed def
R16728:16747 compcert.lib.Integers Make half_modulus_modulus thm
R16728:16747 compcert.lib.Integers Make half_modulus_modulus thm
R16728:16747 compcert.lib.Integers Make half_modulus_modulus thm
R16775:16787 compcert.lib.Integers Make unsigned_repr thm
R16775:16787 compcert.lib.Integers Make unsigned_repr thm
R16803:16814 compcert.lib.Integers Make max_unsigned def
R16824:16833 compcert.lib.Integers Make min_signed def
R16836:16845 compcert.lib.Integers Make max_signed def
R16863:16882 compcert.lib.Integers Make half_modulus_modulus thm
R16863:16882 compcert.lib.Integers Make half_modulus_modulus thm
R16863:16882 compcert.lib.Integers Make half_modulus_modulus thm
R16900:16911 compcert.lib.Integers Make eqm_samerepr thm
R16900:16911 compcert.lib.Integers Make eqm_samerepr thm
prf 16961:16978 Make signed_eq_unsigned
binder 16990:16990 <> x:178
R17017:17020 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17029:17031 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17021:17026 compcert.lib.Integers Make signed def
R17028:17028 compcert.lib.Integers <> x:178 var
R17032:17039 compcert.lib.Integers Make unsigned def
R17041:17041 compcert.lib.Integers <> x:178 var
R17003:17006 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R16993:17000 compcert.lib.Integers Make unsigned def
R17002:17002 compcert.lib.Integers <> x:178 var
R17007:17016 compcert.lib.Integers Make max_signed def
R17068:17073 compcert.lib.Integers Make signed def
R17086:17088 compcert.lib.Coqlib <> zlt def
R17103:17114 compcert.lib.Integers Make half_modulus def
R17091:17098 compcert.lib.Integers Make unsigned def
R17086:17088 compcert.lib.Coqlib <> zlt def
R17103:17114 compcert.lib.Integers Make half_modulus def
R17091:17098 compcert.lib.Integers Make unsigned def
R17133:17142 compcert.lib.Integers Make max_signed def
prf 17184:17198 Make signed_positive
binder 17210:17210 <> x:179
R17226:17230 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17221:17224 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R17213:17218 compcert.lib.Integers Make signed def
R17220:17220 compcert.lib.Integers <> x:179 var
R17241:17244 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R17231:17238 compcert.lib.Integers Make unsigned def
R17240:17240 compcert.lib.Integers <> x:179 var
R17245:17254 compcert.lib.Integers Make max_signed def
R17281:17286 compcert.lib.Integers Make signed def
R17289:17298 compcert.lib.Integers Make max_signed def
R17315:17328 compcert.lib.Integers Make unsigned_range thm
R17333:17352 compcert.lib.Integers Make half_modulus_modulus thm
R17354:17369 compcert.lib.Integers Make half_modulus_pos thm
R17315:17328 compcert.lib.Integers Make unsigned_range thm
R17333:17352 compcert.lib.Integers Make half_modulus_modulus thm
R17354:17369 compcert.lib.Integers Make half_modulus_pos thm
R17392:17394 compcert.lib.Coqlib <> zlt def
R17409:17420 compcert.lib.Integers Make half_modulus def
R17397:17404 compcert.lib.Integers Make unsigned def
R17392:17394 compcert.lib.Coqlib <> zlt def
R17409:17420 compcert.lib.Integers Make half_modulus def
R17397:17404 compcert.lib.Integers Make unsigned def
prf 17491:17503 Make unsigned_zero
R17519:17521 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17506:17513 compcert.lib.Integers Make unsigned def
R17515:17518 compcert.lib.Integers Make zero def
R17541:17544 compcert.lib.Integers Make zero def
R17555:17570 compcert.lib.Integers Make unsigned_repr_eq thm
R17555:17570 compcert.lib.Integers Make unsigned_repr_eq thm
R17555:17570 compcert.lib.Integers Make unsigned_repr_eq thm
R17579:17586 Coq.ZArith.Zdiv <> Zmod_0_l thm
R17579:17586 Coq.ZArith.Zdiv <> Zmod_0_l thm
prf 17603:17614 Make unsigned_one
R17629:17631 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17617:17624 compcert.lib.Integers Make unsigned def
R17626:17628 compcert.lib.Integers Make one def
R17651:17653 compcert.lib.Integers Make one def
R17664:17679 compcert.lib.Integers Make unsigned_repr_eq thm
R17664:17679 compcert.lib.Integers Make unsigned_repr_eq thm
R17664:17679 compcert.lib.Integers Make unsigned_repr_eq thm
R17688:17698 Coq.ZArith.BinInt Z mod_small thm
R17688:17698 Coq.ZArith.BinInt Z mod_small thm
R17724:17730 compcert.lib.Integers Make modulus def
R17741:17748 compcert.lib.Integers Make wordsize def
R17756:17756 Coq.Init.Datatypes <> S constr
R17758:17770 Coq.Init.Nat <> pred def
R17772:17779 compcert.lib.Integers Make wordsize def
R17741:17748 compcert.lib.Integers Make wordsize def
R17756:17756 Coq.Init.Datatypes <> S constr
R17758:17770 Coq.Init.Nat <> pred def
R17772:17779 compcert.lib.Integers Make wordsize def
R17794:17808 Coq.ZArith.Zpower <> two_power_nat_S thm
R17794:17808 Coq.ZArith.Zpower <> two_power_nat_S thm
R17794:17808 Coq.ZArith.Zpower <> two_power_nat_S thm
R17823:17839 compcert.lib.Coqlib <> two_power_nat_pos thm
R17842:17854 Coq.Init.Nat <> pred def
R17856:17863 compcert.lib.Integers Make wordsize def
R17823:17839 compcert.lib.Coqlib <> two_power_nat_pos thm
R17842:17854 Coq.Init.Nat <> pred def
R17856:17863 compcert.lib.Integers Make wordsize def
R17890:17901 compcert.lib.Integers Make wordsize_pos thm
R17890:17901 compcert.lib.Integers Make wordsize_pos thm
R17911:17919 compcert.lib.Integers Make zwordsize def
prf 17943:17955 Make unsigned_mone
R17971:17973 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17958:17965 compcert.lib.Integers Make unsigned def
R17967:17970 compcert.lib.Integers Make mone def
R17981:17983 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R17974:17980 compcert.lib.Integers Make modulus def
R18003:18006 compcert.lib.Integers Make mone def
R18017:18032 compcert.lib.Integers Make unsigned_repr_eq thm
R18017:18032 compcert.lib.Integers Make unsigned_repr_eq thm
R18017:18032 compcert.lib.Integers Make unsigned_repr_eq thm
R18056:18056 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18068:18071 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18064:18066 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18057:18063 compcert.lib.Integers Make modulus def
R18072:18072 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R18075:18078 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R18079:18085 compcert.lib.Integers Make modulus def
R18056:18056 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18068:18071 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18064:18066 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18057:18063 compcert.lib.Integers Make modulus def
R18072:18072 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R18075:18078 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R18079:18085 compcert.lib.Integers Make modulus def
R18099:18113 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R18099:18113 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R18099:18113 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R18122:18132 Coq.ZArith.BinInt Z mod_small thm
R18122:18132 Coq.ZArith.BinInt Z mod_small thm
R18148:18158 compcert.lib.Integers Make modulus_pos thm
R18148:18158 compcert.lib.Integers Make modulus_pos thm
prf 18189:18199 Make signed_zero
R18213:18215 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18202:18207 compcert.lib.Integers Make signed def
R18209:18212 compcert.lib.Integers Make zero def
R18235:18240 compcert.lib.Integers Make signed def
R18251:18263 compcert.lib.Integers Make unsigned_zero thm
R18251:18263 compcert.lib.Integers Make unsigned_zero thm
R18251:18263 compcert.lib.Integers Make unsigned_zero thm
R18272:18279 compcert.lib.Coqlib <> zlt_true thm
R18272:18279 compcert.lib.Coqlib <> zlt_true thm
R18293:18308 compcert.lib.Integers Make half_modulus_pos thm
R18293:18308 compcert.lib.Integers Make half_modulus_pos thm
prf 18332:18341 Make signed_one
R18357:18360 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18371:18373 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18361:18366 compcert.lib.Integers Make signed def
R18368:18370 compcert.lib.Integers Make one def
R18353:18355 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R18344:18352 compcert.lib.Integers Make zwordsize def
R18401:18406 compcert.lib.Integers Make signed def
R18417:18428 compcert.lib.Integers Make unsigned_one thm
R18417:18428 compcert.lib.Integers Make unsigned_one thm
R18417:18428 compcert.lib.Integers Make unsigned_one thm
R18437:18444 compcert.lib.Coqlib <> zlt_true thm
R18437:18444 compcert.lib.Coqlib <> zlt_true thm
R18465:18469 Coq.ZArith.Zpower <> two_p def
R18465:18469 Coq.ZArith.Zpower <> two_p def
R18483:18500 compcert.lib.Integers Make half_modulus_power thm
R18483:18500 compcert.lib.Integers Make half_modulus_power thm
R18483:18500 compcert.lib.Integers Make half_modulus_power thm
R18509:18529 compcert.lib.Coqlib <> two_p_monotone_strict thm
R18509:18529 compcert.lib.Coqlib <> two_p_monotone_strict thm
prf 18554:18564 Make signed_mone
R18578:18580 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18567:18572 compcert.lib.Integers Make signed def
R18574:18577 compcert.lib.Integers Make mone def
R18601:18606 compcert.lib.Integers Make signed def
R18617:18629 compcert.lib.Integers Make unsigned_mone thm
R18617:18629 compcert.lib.Integers Make unsigned_mone thm
R18617:18629 compcert.lib.Integers Make unsigned_mone thm
R18642:18650 compcert.lib.Coqlib <> zlt_false thm
R18642:18650 compcert.lib.Coqlib <> zlt_false thm
R18642:18650 compcert.lib.Coqlib <> zlt_false thm
R18642:18650 compcert.lib.Coqlib <> zlt_false thm
R18670:18689 compcert.lib.Integers Make half_modulus_modulus thm
R18670:18689 compcert.lib.Integers Make half_modulus_modulus thm
R18670:18689 compcert.lib.Integers Make half_modulus_modulus thm
R18703:18718 compcert.lib.Integers Make half_modulus_pos thm
R18703:18718 compcert.lib.Integers Make half_modulus_pos thm
prf 18742:18753 Make one_not_zero
R18759:18762 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R18756:18758 compcert.lib.Integers Make one def
R18763:18766 compcert.lib.Integers Make zero def
R18798:18801 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R18786:18793 compcert.lib.Integers Make unsigned def
R18795:18797 compcert.lib.Integers Make one def
R18802:18809 compcert.lib.Integers Make unsigned def
R18811:18814 compcert.lib.Integers Make zero def
R18798:18801 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R18786:18793 compcert.lib.Integers Make unsigned def
R18795:18797 compcert.lib.Integers Make one def
R18802:18809 compcert.lib.Integers Make unsigned def
R18811:18814 compcert.lib.Integers Make zero def
R18828:18839 compcert.lib.Integers Make unsigned_one thm
R18850:18862 compcert.lib.Integers Make unsigned_zero thm
R18828:18839 compcert.lib.Integers Make unsigned_one thm
R18828:18839 compcert.lib.Integers Make unsigned_one thm
R18850:18862 compcert.lib.Integers Make unsigned_zero thm
R18850:18862 compcert.lib.Integers Make unsigned_zero thm
prf 18905:18926 Make unsigned_repr_wordsize
R18949:18951 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18931:18938 compcert.lib.Integers Make unsigned def
R18940:18948 compcert.lib.Integers Make iwordsize def
R18952:18960 compcert.lib.Integers Make zwordsize def
R18979:18987 compcert.lib.Integers Make iwordsize def
R18998:19013 compcert.lib.Integers Make unsigned_repr_eq thm
R18998:19013 compcert.lib.Integers Make unsigned_repr_eq thm
R18998:19013 compcert.lib.Integers Make unsigned_repr_eq thm
R19022:19032 Coq.ZArith.BinInt Z mod_small thm
R19022:19032 Coq.ZArith.BinInt Z mod_small thm
R19048:19059 compcert.lib.Integers Make wordsize_pos thm
R19061:19081 compcert.lib.Integers Make wordsize_max_unsigned thm
R19091:19102 compcert.lib.Integers Make max_unsigned def
R19048:19059 compcert.lib.Integers Make wordsize_pos thm
R19061:19081 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 19160:19165 Make eq_sym
binder 19177:19177 <> x:180
binder 19179:19179 <> y:181
R19188:19190 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19182:19183 compcert.lib.Integers Make eq def
R19187:19187 compcert.lib.Integers <> y:181 var
R19185:19185 compcert.lib.Integers <> x:180 var
R19191:19192 compcert.lib.Integers Make eq def
R19196:19196 compcert.lib.Integers <> x:180 var
R19194:19194 compcert.lib.Integers <> y:181 var
R19223:19224 compcert.lib.Integers Make eq def
R19233:19235 compcert.lib.Coqlib <> zeq def
R19251:19258 compcert.lib.Integers Make unsigned def
R19238:19245 compcert.lib.Integers Make unsigned def
R19233:19235 compcert.lib.Coqlib <> zeq def
R19251:19258 compcert.lib.Integers Make unsigned def
R19238:19245 compcert.lib.Integers Make unsigned def
R19293:19300 compcert.lib.Coqlib <> zeq_true thm
R19293:19300 compcert.lib.Coqlib <> zeq_true thm
R19293:19300 compcert.lib.Coqlib <> zeq_true thm
R19319:19327 compcert.lib.Coqlib <> zeq_false thm
R19319:19327 compcert.lib.Coqlib <> zeq_false thm
R19319:19327 compcert.lib.Coqlib <> zeq_false thm
R19319:19327 compcert.lib.Coqlib <> zeq_false thm
prf 19356:19362 Make eq_spec
R19378:19380 compcert.lib.Integers Make int rec
binder 19373:19373 <> x:182
binder 19375:19375 <> y:183
R19387:19388 compcert.lib.Integers Make eq def
R19392:19392 compcert.lib.Integers <> y:183 var
R19390:19390 compcert.lib.Integers <> x:182 var
R19411:19414 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R19410:19410 compcert.lib.Integers <> x:182 var
R19415:19415 compcert.lib.Integers <> y:183 var
R19400:19402 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19399:19399 compcert.lib.Integers <> x:182 var
R19403:19403 compcert.lib.Integers <> y:183 var
R19442:19443 compcert.lib.Integers Make eq def
R19452:19457 compcert.lib.Integers Make eq_dec thm
R19452:19457 compcert.lib.Integers Make eq_dec thm
R19491:19498 compcert.lib.Coqlib <> zeq_true thm
R19491:19498 compcert.lib.Coqlib <> zeq_true thm
R19491:19498 compcert.lib.Coqlib <> zeq_true thm
R19517:19525 compcert.lib.Coqlib <> zeq_false thm
R19517:19525 compcert.lib.Coqlib <> zeq_false thm
R19517:19525 compcert.lib.Coqlib <> zeq_false thm
R19517:19525 compcert.lib.Coqlib <> zeq_false thm
R19595:19602 compcert.lib.Integers Make mkint_eq thm
R19595:19602 compcert.lib.Integers Make mkint_eq thm
prf 19625:19631 Make eq_true
binder 19641:19641 <> x:184
R19650:19652 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19644:19645 compcert.lib.Integers Make eq def
R19649:19649 compcert.lib.Integers <> x:184 var
R19647:19647 compcert.lib.Integers <> x:184 var
R19653:19656 Coq.Init.Datatypes <> true constr
R19688:19694 compcert.lib.Integers Make eq_spec thm
R19708:19709 compcert.lib.Integers Make eq def
R19688:19694 compcert.lib.Integers Make eq_spec thm
R19708:19709 compcert.lib.Integers Make eq def
prf 19751:19758 Make eq_false
binder 19768:19768 <> x:185
binder 19770:19770 <> y:186
R19779:19782 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19789:19791 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19783:19784 compcert.lib.Integers Make eq def
R19788:19788 compcert.lib.Integers <> y:186 var
R19786:19786 compcert.lib.Integers <> x:185 var
R19792:19796 Coq.Init.Datatypes <> false constr
R19774:19777 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R19773:19773 compcert.lib.Integers <> x:185 var
R19778:19778 compcert.lib.Integers <> y:186 var
R19828:19834 compcert.lib.Integers Make eq_spec thm
R19848:19849 compcert.lib.Integers Make eq def
R19828:19834 compcert.lib.Integers Make eq_spec thm
R19848:19849 compcert.lib.Integers Make eq def
prf 19891:19900 Make same_if_eq
binder 19910:19910 <> x:187
binder 19912:19912 <> y:188
R19928:19931 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19933:19935 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19932:19932 compcert.lib.Integers <> x:187 var
R19936:19936 compcert.lib.Integers <> y:188 var
R19921:19923 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19915:19916 compcert.lib.Integers Make eq def
R19920:19920 compcert.lib.Integers <> y:188 var
R19918:19918 compcert.lib.Integers <> x:187 var
R19924:19927 Coq.Init.Datatypes <> true constr
R19968:19974 compcert.lib.Integers Make eq_spec thm
R19968:19974 compcert.lib.Integers Make eq_spec thm
prf 20013:20021 Make eq_signed
binder 20033:20033 <> x:189
binder 20035:20035 <> y:190
R20044:20046 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20038:20039 compcert.lib.Integers Make eq def
R20043:20043 compcert.lib.Integers <> y:190 var
R20041:20041 compcert.lib.Integers <> x:189 var
R20050:20052 compcert.lib.Coqlib <> zeq def
R20066:20071 compcert.lib.Integers Make signed def
R20073:20073 compcert.lib.Integers <> y:190 var
R20055:20060 compcert.lib.Integers Make signed def
R20062:20062 compcert.lib.Integers <> x:189 var
R20091:20095 Coq.Init.Datatypes <> false constr
R20081:20084 Coq.Init.Datatypes <> true constr
R20124:20125 compcert.lib.Integers Make eq def
R20127:20133 compcert.lib.Integers Make eq_spec thm
R20159:20166 compcert.lib.Coqlib <> zeq_true thm
R20159:20166 compcert.lib.Coqlib <> zeq_true thm
R20159:20166 compcert.lib.Coqlib <> zeq_true thm
R20187:20189 compcert.lib.Coqlib <> zeq def
R20203:20208 compcert.lib.Integers Make signed def
R20192:20197 compcert.lib.Integers Make signed def
R20187:20189 compcert.lib.Coqlib <> zeq def
R20203:20208 compcert.lib.Integers Make signed def
R20192:20197 compcert.lib.Integers Make signed def
R20243:20253 compcert.lib.Integers Make repr_signed thm
R20243:20253 compcert.lib.Integers Make repr_signed thm
R20243:20253 compcert.lib.Integers Make repr_signed thm
R20271:20281 compcert.lib.Integers Make repr_signed thm
R20271:20281 compcert.lib.Integers Make repr_signed thm
R20271:20281 compcert.lib.Integers Make repr_signed thm
prf 20347:20358 Make add_unsigned
binder 20368:20368 <> x:191
binder 20370:20370 <> y:192
R20380:20382 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20373:20375 compcert.lib.Integers Make add def
R20379:20379 compcert.lib.Integers <> y:192 var
R20377:20377 compcert.lib.Integers <> x:191 var
R20383:20386 compcert.lib.Integers Make repr def
R20399:20401 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20389:20396 compcert.lib.Integers Make unsigned def
R20398:20398 compcert.lib.Integers <> x:191 var
R20402:20409 compcert.lib.Integers Make unsigned def
R20411:20411 compcert.lib.Integers <> y:192 var
prf 20457:20466 Make add_signed
binder 20476:20476 <> x:193
binder 20478:20478 <> y:194
R20488:20490 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20481:20483 compcert.lib.Integers Make add def
R20487:20487 compcert.lib.Integers <> y:194 var
R20485:20485 compcert.lib.Integers <> x:193 var
R20491:20494 compcert.lib.Integers Make repr def
R20505:20507 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20497:20502 compcert.lib.Integers Make signed def
R20504:20504 compcert.lib.Integers <> x:193 var
R20508:20513 compcert.lib.Integers Make signed def
R20515:20515 compcert.lib.Integers <> y:194 var
R20544:20555 compcert.lib.Integers Make add_unsigned thm
R20544:20555 compcert.lib.Integers Make add_unsigned thm
R20544:20555 compcert.lib.Integers Make add_unsigned thm
R20564:20575 compcert.lib.Integers Make eqm_samerepr thm
R20564:20575 compcert.lib.Integers Make eqm_samerepr thm
R20586:20592 compcert.lib.Integers Make eqm_add thm
R20601:20607 compcert.lib.Integers Make eqm_sym thm
R20616:20634 compcert.lib.Integers Make eqm_signed_unsigned thm
R20586:20592 compcert.lib.Integers Make eqm_add thm
R20601:20607 compcert.lib.Integers Make eqm_sym thm
R20601:20607 compcert.lib.Integers Make eqm_sym thm
R20616:20634 compcert.lib.Integers Make eqm_signed_unsigned thm
R20616:20634 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 20651:20660 Make add_commut
binder 20670:20670 <> x:195
binder 20672:20672 <> y:196
R20682:20684 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20675:20677 compcert.lib.Integers Make add def
R20681:20681 compcert.lib.Integers <> y:196 var
R20679:20679 compcert.lib.Integers <> x:195 var
R20685:20687 compcert.lib.Integers Make add def
R20691:20691 compcert.lib.Integers <> x:195 var
R20689:20689 compcert.lib.Integers <> y:196 var
R20716:20718 compcert.lib.Integers Make add def
prf 20749:20756 Make add_zero
binder 20766:20766 <> x:197
R20779:20781 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20769:20771 compcert.lib.Integers Make add def
R20775:20778 compcert.lib.Integers Make zero def
R20773:20773 compcert.lib.Integers <> x:197 var
R20782:20782 compcert.lib.Integers <> x:197 var
R20809:20811 compcert.lib.Integers Make add def
R20822:20834 compcert.lib.Integers Make unsigned_zero thm
R20822:20834 compcert.lib.Integers Make unsigned_zero thm
R20822:20834 compcert.lib.Integers Make unsigned_zero thm
R20847:20855 Coq.ZArith.BinInt Z add_0_r thm
R20847:20855 Coq.ZArith.BinInt Z add_0_r thm
R20847:20855 Coq.ZArith.BinInt Z add_0_r thm
R20864:20876 compcert.lib.Integers Make repr_unsigned thm
R20864:20876 compcert.lib.Integers Make repr_unsigned thm
prf 20893:20902 Make add_zero_l
binder 20912:20912 <> x:198
R20925:20927 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20915:20917 compcert.lib.Integers Make add def
R20924:20924 compcert.lib.Integers <> x:198 var
R20919:20922 compcert.lib.Integers Make zero def
R20928:20928 compcert.lib.Integers <> x:198 var
R20956:20965 compcert.lib.Integers Make add_commut thm
R20956:20965 compcert.lib.Integers Make add_commut thm
R20956:20965 compcert.lib.Integers Make add_commut thm
R20974:20981 compcert.lib.Integers Make add_zero thm
R20974:20981 compcert.lib.Integers Make add_zero thm
prf 20998:21006 Make add_assoc
binder 21016:21016 <> x:199
binder 21018:21018 <> y:200
binder 21020:21020 <> z:201
R21038:21040 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21023:21025 compcert.lib.Integers Make add def
R21037:21037 compcert.lib.Integers <> z:201 var
R21028:21030 compcert.lib.Integers Make add def
R21034:21034 compcert.lib.Integers <> y:200 var
R21032:21032 compcert.lib.Integers <> x:199 var
R21041:21043 compcert.lib.Integers Make add def
R21048:21050 compcert.lib.Integers Make add def
R21054:21054 compcert.lib.Integers <> z:201 var
R21052:21052 compcert.lib.Integers <> y:200 var
R21045:21045 compcert.lib.Integers <> x:199 var
R21082:21084 compcert.lib.Integers Make add def
R21100:21107 compcert.lib.Integers Make unsigned def
R21100:21107 compcert.lib.Integers Make unsigned def
R21126:21133 compcert.lib.Integers Make unsigned def
R21126:21133 compcert.lib.Integers Make unsigned def
R21152:21159 compcert.lib.Integers Make unsigned def
R21152:21159 compcert.lib.Integers Make unsigned def
R21173:21184 compcert.lib.Integers Make eqm_samerepr thm
R21173:21184 compcert.lib.Integers Make eqm_samerepr thm
R21211:21211 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21219:21222 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21214:21216 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21195:21203 compcert.lib.Integers Make eqm_trans thm
R21211:21211 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21219:21222 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21214:21216 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21195:21203 compcert.lib.Integers Make eqm_trans thm
R21259:21269 Coq.ZArith.BinInt Z add_assoc thm
R21259:21269 Coq.ZArith.BinInt Z add_assoc thm
R21259:21269 Coq.ZArith.BinInt Z add_assoc thm
prf 21302:21311 Make add_permut
binder 21321:21321 <> x:202
binder 21323:21323 <> y:203
binder 21325:21325 <> z:204
R21343:21345 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21328:21330 compcert.lib.Integers Make add def
R21335:21337 compcert.lib.Integers Make add def
R21341:21341 compcert.lib.Integers <> z:204 var
R21339:21339 compcert.lib.Integers <> y:203 var
R21332:21332 compcert.lib.Integers <> x:202 var
R21346:21348 compcert.lib.Integers Make add def
R21353:21355 compcert.lib.Integers Make add def
R21359:21359 compcert.lib.Integers <> z:204 var
R21357:21357 compcert.lib.Integers <> x:202 var
R21350:21350 compcert.lib.Integers <> y:203 var
R21389:21398 compcert.lib.Integers Make add_commut thm
R21389:21398 compcert.lib.Integers Make add_commut thm
R21389:21398 compcert.lib.Integers Make add_commut thm
R21417:21425 compcert.lib.Integers Make add_assoc thm
R21417:21425 compcert.lib.Integers Make add_assoc thm
R21417:21425 compcert.lib.Integers Make add_assoc thm
R21434:21443 compcert.lib.Integers Make add_commut thm
R21434:21443 compcert.lib.Integers Make add_commut thm
prf 21460:21471 Make add_neg_zero
binder 21481:21481 <> x:205
R21497:21499 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21484:21486 compcert.lib.Integers Make add def
R21491:21493 compcert.lib.Integers Make neg def
R21495:21495 compcert.lib.Integers <> x:205 var
R21488:21488 compcert.lib.Integers <> x:205 var
R21500:21503 compcert.lib.Integers Make zero def
R21530:21532 compcert.lib.Integers Make add def
R21535:21537 compcert.lib.Integers Make neg def
R21540:21543 compcert.lib.Integers Make zero def
R21552:21563 compcert.lib.Integers Make eqm_samerepr thm
R21552:21563 compcert.lib.Integers Make eqm_samerepr thm
R21594:21597 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21612:21612 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21584:21591 compcert.lib.Integers Make unsigned def
R21598:21600 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R21611:21611 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R21601:21608 compcert.lib.Integers Make unsigned def
R21594:21597 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21612:21612 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21584:21591 compcert.lib.Integers Make unsigned def
R21598:21600 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R21611:21611 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R21601:21608 compcert.lib.Integers Make unsigned def
prf 21655:21672 Make unsigned_add_carry
binder 21684:21684 <> x:206
binder 21686:21686 <> y:207
R21709:21711 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21691:21698 compcert.lib.Integers Make unsigned def
R21701:21703 compcert.lib.Integers Make add def
R21707:21707 compcert.lib.Integers <> y:207 var
R21705:21705 compcert.lib.Integers <> x:206 var
R21735:21737 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R21722:21724 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21712:21719 compcert.lib.Integers Make unsigned def
R21721:21721 compcert.lib.Integers <> x:206 var
R21725:21732 compcert.lib.Integers Make unsigned def
R21734:21734 compcert.lib.Integers <> y:207 var
R21767:21769 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R21738:21745 compcert.lib.Integers Make unsigned def
R21748:21756 compcert.lib.Integers Make add_carry def
R21762:21765 compcert.lib.Integers Make zero def
R21760:21760 compcert.lib.Integers <> y:207 var
R21758:21758 compcert.lib.Integers <> x:206 var
R21770:21776 compcert.lib.Integers Make modulus def
R21805:21807 compcert.lib.Integers Make add def
R21810:21818 compcert.lib.Integers Make add_carry def
R21829:21841 compcert.lib.Integers Make unsigned_zero thm
R21829:21841 compcert.lib.Integers Make unsigned_zero thm
R21829:21841 compcert.lib.Integers Make unsigned_zero thm
R21852:21860 Coq.ZArith.BinInt Z add_0_r thm
R21852:21860 Coq.ZArith.BinInt Z add_0_r thm
R21852:21860 Coq.ZArith.BinInt Z add_0_r thm
R21873:21888 compcert.lib.Integers Make unsigned_repr_eq thm
R21873:21888 compcert.lib.Integers Make unsigned_repr_eq thm
R21873:21888 compcert.lib.Integers Make unsigned_repr_eq thm
R21905:21918 compcert.lib.Integers Make unsigned_range thm
R21924:21937 compcert.lib.Integers Make unsigned_range thm
R21905:21918 compcert.lib.Integers Make unsigned_range thm
R21924:21937 compcert.lib.Integers Make unsigned_range thm
R21963:21965 compcert.lib.Coqlib <> zlt def
R21993:21999 compcert.lib.Integers Make modulus def
R21978:21980 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21968:21975 compcert.lib.Integers Make unsigned def
R21981:21988 compcert.lib.Integers Make unsigned def
R21963:21965 compcert.lib.Coqlib <> zlt def
R21993:21999 compcert.lib.Integers Make modulus def
R21978:21980 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21968:21975 compcert.lib.Integers Make unsigned def
R21981:21988 compcert.lib.Integers Make unsigned def
R22013:22025 compcert.lib.Integers Make unsigned_zero thm
R22013:22025 compcert.lib.Integers Make unsigned_zero thm
R22013:22025 compcert.lib.Integers Make unsigned_zero thm
R22034:22044 compcert.lib.Coqlib <> Zmod_unique thm
R22034:22044 compcert.lib.Coqlib <> Zmod_unique thm
R22078:22089 compcert.lib.Integers Make unsigned_one thm
R22078:22089 compcert.lib.Integers Make unsigned_one thm
R22078:22089 compcert.lib.Integers Make unsigned_one thm
R22098:22108 compcert.lib.Coqlib <> Zmod_unique thm
R22098:22108 compcert.lib.Coqlib <> Zmod_unique thm
prf 22148:22166 Make unsigned_add_either
binder 22178:22178 <> x:208
binder 22180:22180 <> y:209
R22229:22234 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R22203:22205 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22185:22192 compcert.lib.Integers Make unsigned def
R22195:22197 compcert.lib.Integers Make add def
R22201:22201 compcert.lib.Integers <> y:209 var
R22199:22199 compcert.lib.Integers <> x:208 var
R22216:22218 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22206:22213 compcert.lib.Integers Make unsigned def
R22215:22215 compcert.lib.Integers <> x:208 var
R22219:22226 compcert.lib.Integers Make unsigned def
R22228:22228 compcert.lib.Integers <> y:209 var
R22253:22255 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22235:22242 compcert.lib.Integers Make unsigned def
R22245:22247 compcert.lib.Integers Make add def
R22251:22251 compcert.lib.Integers <> y:209 var
R22249:22249 compcert.lib.Integers <> x:208 var
R22279:22281 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R22266:22268 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22256:22263 compcert.lib.Integers Make unsigned def
R22265:22265 compcert.lib.Integers <> x:208 var
R22269:22276 compcert.lib.Integers Make unsigned def
R22278:22278 compcert.lib.Integers <> y:209 var
R22282:22288 compcert.lib.Integers Make modulus def
R22316:22333 compcert.lib.Integers Make unsigned_add_carry thm
R22316:22333 compcert.lib.Integers Make unsigned_add_carry thm
R22316:22333 compcert.lib.Integers Make unsigned_add_carry thm
R22343:22351 compcert.lib.Integers Make add_carry def
R22364:22376 compcert.lib.Integers Make unsigned_zero thm
R22364:22376 compcert.lib.Integers Make unsigned_zero thm
R22364:22376 compcert.lib.Integers Make unsigned_zero thm
R22387:22395 Coq.ZArith.BinInt Z add_0_r thm
R22387:22395 Coq.ZArith.BinInt Z add_0_r thm
R22387:22395 Coq.ZArith.BinInt Z add_0_r thm
R22410:22412 compcert.lib.Coqlib <> zlt def
R22440:22446 compcert.lib.Integers Make modulus def
R22425:22427 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22415:22422 compcert.lib.Integers Make unsigned def
R22428:22435 compcert.lib.Integers Make unsigned def
R22410:22412 compcert.lib.Coqlib <> zlt def
R22440:22446 compcert.lib.Integers Make modulus def
R22425:22427 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22415:22422 compcert.lib.Integers Make unsigned def
R22428:22435 compcert.lib.Integers Make unsigned def
R22460:22472 compcert.lib.Integers Make unsigned_zero thm
R22460:22472 compcert.lib.Integers Make unsigned_zero thm
R22460:22472 compcert.lib.Integers Make unsigned_zero thm
R22498:22509 compcert.lib.Integers Make unsigned_one thm
R22498:22509 compcert.lib.Integers Make unsigned_one thm
R22498:22509 compcert.lib.Integers Make unsigned_one thm
prf 22574:22581 Make neg_repr
binder 22591:22591 <> z:210
R22606:22608 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22594:22596 compcert.lib.Integers Make neg def
R22599:22602 compcert.lib.Integers Make repr def
R22604:22604 compcert.lib.Integers <> z:210 var
R22609:22612 compcert.lib.Integers Make repr def
R22615:22615 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R22616:22616 compcert.lib.Integers <> z:210 var
R22644:22646 compcert.lib.Integers Make neg def
R22655:22666 compcert.lib.Integers Make eqm_samerepr thm
R22655:22666 compcert.lib.Integers Make eqm_samerepr thm
prf 22699:22706 Make neg_zero
R22717:22719 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22709:22711 compcert.lib.Integers Make neg def
R22713:22716 compcert.lib.Integers Make zero def
R22720:22723 compcert.lib.Integers Make zero def
R22742:22744 compcert.lib.Integers Make neg def
R22755:22767 compcert.lib.Integers Make unsigned_zero thm
R22755:22767 compcert.lib.Integers Make unsigned_zero thm
R22755:22767 compcert.lib.Integers Make unsigned_zero thm
prf 22790:22803 Make neg_involutive
binder 22813:22813 <> x:211
R22827:22829 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22816:22818 compcert.lib.Integers Make neg def
R22821:22823 compcert.lib.Integers Make neg def
R22825:22825 compcert.lib.Integers <> x:211 var
R22830:22830 compcert.lib.Integers <> x:211 var
R22857:22859 compcert.lib.Integers Make neg def
R22870:22880 compcert.lib.Integers Make eqm_repr_eq thm
R22870:22880 compcert.lib.Integers Make eqm_repr_eq thm
R22890:22898 compcert.lib.Integers Make eqm_trans thm
R22890:22898 compcert.lib.Integers Make eqm_trans thm
R22907:22913 compcert.lib.Integers Make eqm_neg thm
R22907:22913 compcert.lib.Integers Make eqm_neg thm
R22924:22942 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R22924:22942 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R22951:22958 compcert.lib.Integers Make eqm_refl thm
R22951:22958 compcert.lib.Integers Make eqm_refl thm
R22967:22975 compcert.lib.Integers Make eqm_refl2 thm
R22967:22975 compcert.lib.Integers Make eqm_refl2 thm
prf 22999:23011 Make neg_add_distr
binder 23021:23021 <> x:212
binder 23023:23023 <> y:213
R23038:23040 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23026:23028 compcert.lib.Integers Make neg def
R23030:23032 compcert.lib.Integers Make add def
R23036:23036 compcert.lib.Integers <> y:213 var
R23034:23034 compcert.lib.Integers <> x:212 var
R23041:23043 compcert.lib.Integers Make add def
R23054:23056 compcert.lib.Integers Make neg def
R23058:23058 compcert.lib.Integers <> y:213 var
R23046:23048 compcert.lib.Integers Make neg def
R23050:23050 compcert.lib.Integers <> x:212 var
R23086:23088 compcert.lib.Integers Make neg def
R23091:23093 compcert.lib.Integers Make add def
R23102:23113 compcert.lib.Integers Make eqm_samerepr thm
R23102:23113 compcert.lib.Integers Make eqm_samerepr thm
R23140:23142 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23166:23166 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23153:23155 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23143:23150 compcert.lib.Integers Make unsigned def
R23156:23163 compcert.lib.Integers Make unsigned def
R23124:23132 compcert.lib.Integers Make eqm_trans thm
R23140:23142 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23166:23166 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23153:23155 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23143:23150 compcert.lib.Integers Make unsigned def
R23156:23163 compcert.lib.Integers Make unsigned def
R23124:23132 compcert.lib.Integers Make eqm_trans thm
R23199:23201 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23225:23225 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23212:23214 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23202:23209 compcert.lib.Integers Make unsigned def
R23215:23222 compcert.lib.Integers Make unsigned def
R23239:23239 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23252:23256 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23269:23269 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23240:23241 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23242:23249 compcert.lib.Integers Make unsigned def
R23257:23258 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23259:23266 compcert.lib.Integers Make unsigned def
R23199:23201 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23225:23225 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23212:23214 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23202:23209 compcert.lib.Integers Make unsigned def
R23215:23222 compcert.lib.Integers Make unsigned def
R23239:23239 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23252:23256 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23269:23269 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23240:23241 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23242:23249 compcert.lib.Integers Make unsigned def
R23257:23258 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23259:23266 compcert.lib.Integers Make unsigned def
prf 23349:23358 Make sub_zero_l
binder 23368:23368 <> x:214
R23381:23383 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23371:23373 compcert.lib.Integers Make sub def
R23377:23380 compcert.lib.Integers Make zero def
R23375:23375 compcert.lib.Integers <> x:214 var
R23384:23384 compcert.lib.Integers <> x:214 var
R23411:23413 compcert.lib.Integers Make sub def
R23424:23436 compcert.lib.Integers Make unsigned_zero thm
R23424:23436 compcert.lib.Integers Make unsigned_zero thm
R23424:23436 compcert.lib.Integers Make unsigned_zero thm
R23460:23462 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R23450:23457 compcert.lib.Integers Make unsigned def
R23472:23479 compcert.lib.Integers Make unsigned def
R23460:23462 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R23450:23457 compcert.lib.Integers Make unsigned def
R23472:23479 compcert.lib.Integers Make unsigned def
R23500:23512 compcert.lib.Integers Make repr_unsigned thm
R23500:23512 compcert.lib.Integers Make repr_unsigned thm
prf 23529:23538 Make sub_zero_r
binder 23548:23548 <> x:215
R23561:23563 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23551:23553 compcert.lib.Integers Make sub def
R23560:23560 compcert.lib.Integers <> x:215 var
R23555:23558 compcert.lib.Integers Make zero def
R23564:23566 compcert.lib.Integers Make neg def
R23568:23568 compcert.lib.Integers <> x:215 var
R23595:23597 compcert.lib.Integers Make sub def
R23600:23602 compcert.lib.Integers Make neg def
R23613:23625 compcert.lib.Integers Make unsigned_zero thm
R23613:23625 compcert.lib.Integers Make unsigned_zero thm
R23613:23625 compcert.lib.Integers Make unsigned_zero thm
prf 23648:23658 Make sub_add_opp
binder 23668:23668 <> x:216
binder 23670:23670 <> y:217
R23680:23682 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23673:23675 compcert.lib.Integers Make sub def
R23679:23679 compcert.lib.Integers <> y:217 var
R23677:23677 compcert.lib.Integers <> x:216 var
R23683:23685 compcert.lib.Integers Make add def
R23690:23692 compcert.lib.Integers Make neg def
R23694:23694 compcert.lib.Integers <> y:217 var
R23687:23687 compcert.lib.Integers <> x:216 var
R23722:23724 compcert.lib.Integers Make sub def
R23727:23729 compcert.lib.Integers Make add def
R23732:23734 compcert.lib.Integers Make neg def
R23743:23754 compcert.lib.Integers Make eqm_samerepr thm
R23743:23754 compcert.lib.Integers Make eqm_samerepr thm
R23765:23771 compcert.lib.Integers Make eqm_add thm
R23765:23771 compcert.lib.Integers Make eqm_add thm
prf 23804:23811 Make sub_idem
binder 23821:23821 <> x:218
R23831:23833 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23824:23826 compcert.lib.Integers Make sub def
R23830:23830 compcert.lib.Integers <> x:218 var
R23828:23828 compcert.lib.Integers <> x:218 var
R23834:23837 compcert.lib.Integers Make zero def
R23864:23866 compcert.lib.Integers Make sub def
R23876:23879 compcert.lib.Integers Make zero def
prf 23910:23918 Make sub_add_l
binder 23928:23928 <> x:219
binder 23930:23930 <> y:220
binder 23932:23932 <> z:221
R23950:23952 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23935:23937 compcert.lib.Integers Make sub def
R23949:23949 compcert.lib.Integers <> z:221 var
R23940:23942 compcert.lib.Integers Make add def
R23946:23946 compcert.lib.Integers <> y:220 var
R23944:23944 compcert.lib.Integers <> x:219 var
R23953:23955 compcert.lib.Integers Make add def
R23967:23967 compcert.lib.Integers <> y:220 var
R23958:23960 compcert.lib.Integers Make sub def
R23964:23964 compcert.lib.Integers <> z:221 var
R23962:23962 compcert.lib.Integers <> x:219 var
R24002:24012 compcert.lib.Integers Make sub_add_opp thm
R24002:24012 compcert.lib.Integers Make sub_add_opp thm
R24002:24012 compcert.lib.Integers Make sub_add_opp thm
R24002:24012 compcert.lib.Integers Make sub_add_opp thm
R24002:24012 compcert.lib.Integers Make sub_add_opp thm
R24002:24012 compcert.lib.Integers Make sub_add_opp thm
R24032:24040 compcert.lib.Integers Make add_assoc thm
R24032:24040 compcert.lib.Integers Make add_assoc thm
R24032:24040 compcert.lib.Integers Make add_assoc thm
R24032:24040 compcert.lib.Integers Make add_assoc thm
R24032:24040 compcert.lib.Integers Make add_assoc thm
R24032:24040 compcert.lib.Integers Make add_assoc thm
R24056:24065 compcert.lib.Integers Make add_commut thm
R24056:24065 compcert.lib.Integers Make add_commut thm
prf 24082:24090 Make sub_add_r
binder 24100:24100 <> x:222
binder 24102:24102 <> y:223
binder 24104:24104 <> z:224
R24122:24124 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24107:24109 compcert.lib.Integers Make sub def
R24114:24116 compcert.lib.Integers Make add def
R24120:24120 compcert.lib.Integers <> z:224 var
R24118:24118 compcert.lib.Integers <> y:223 var
R24111:24111 compcert.lib.Integers <> x:222 var
R24125:24127 compcert.lib.Integers Make add def
R24140:24142 compcert.lib.Integers Make neg def
R24144:24144 compcert.lib.Integers <> y:223 var
R24130:24132 compcert.lib.Integers Make sub def
R24136:24136 compcert.lib.Integers <> z:224 var
R24134:24134 compcert.lib.Integers <> x:222 var
R24180:24190 compcert.lib.Integers Make sub_add_opp thm
R24180:24190 compcert.lib.Integers Make sub_add_opp thm
R24180:24190 compcert.lib.Integers Make sub_add_opp thm
R24180:24190 compcert.lib.Integers Make sub_add_opp thm
R24180:24190 compcert.lib.Integers Make sub_add_opp thm
R24180:24190 compcert.lib.Integers Make sub_add_opp thm
R24203:24215 compcert.lib.Integers Make neg_add_distr thm
R24203:24215 compcert.lib.Integers Make neg_add_distr thm
R24203:24215 compcert.lib.Integers Make neg_add_distr thm
R24226:24235 compcert.lib.Integers Make add_permut thm
R24226:24235 compcert.lib.Integers Make add_permut thm
R24226:24235 compcert.lib.Integers Make add_permut thm
R24244:24253 compcert.lib.Integers Make add_commut thm
R24244:24253 compcert.lib.Integers Make add_commut thm
prf 24270:24280 Make sub_shifted
binder 24292:24292 <> x:225
binder 24294:24294 <> y:226
binder 24296:24296 <> z:227
R24324:24326 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24301:24303 compcert.lib.Integers Make sub def
R24316:24318 compcert.lib.Integers Make add def
R24322:24322 compcert.lib.Integers <> z:227 var
R24320:24320 compcert.lib.Integers <> y:226 var
R24306:24308 compcert.lib.Integers Make add def
R24312:24312 compcert.lib.Integers <> z:227 var
R24310:24310 compcert.lib.Integers <> x:225 var
R24327:24329 compcert.lib.Integers Make sub def
R24333:24333 compcert.lib.Integers <> y:226 var
R24331:24331 compcert.lib.Integers <> x:225 var
R24361:24371 compcert.lib.Integers Make sub_add_opp thm
R24361:24371 compcert.lib.Integers Make sub_add_opp thm
R24361:24371 compcert.lib.Integers Make sub_add_opp thm
R24382:24394 compcert.lib.Integers Make neg_add_distr thm
R24382:24394 compcert.lib.Integers Make neg_add_distr thm
R24382:24394 compcert.lib.Integers Make neg_add_distr thm
R24407:24415 compcert.lib.Integers Make add_assoc thm
R24407:24415 compcert.lib.Integers Make add_assoc thm
R24407:24415 compcert.lib.Integers Make add_assoc thm
R24429:24438 compcert.lib.Integers Make add_commut thm
R24449:24451 compcert.lib.Integers Make neg def
R24441:24443 compcert.lib.Integers Make neg def
R24429:24438 compcert.lib.Integers Make add_commut thm
R24449:24451 compcert.lib.Integers Make neg def
R24441:24443 compcert.lib.Integers Make neg def
R24429:24438 compcert.lib.Integers Make add_commut thm
R24449:24451 compcert.lib.Integers Make neg def
R24441:24443 compcert.lib.Integers Make neg def
R24472:24480 compcert.lib.Integers Make add_assoc thm
R24472:24480 compcert.lib.Integers Make add_assoc thm
R24472:24480 compcert.lib.Integers Make add_assoc thm
R24494:24505 compcert.lib.Integers Make add_neg_zero thm
R24494:24505 compcert.lib.Integers Make add_neg_zero thm
R24494:24505 compcert.lib.Integers Make add_neg_zero thm
R24519:24528 compcert.lib.Integers Make add_commut thm
R24530:24533 compcert.lib.Integers Make zero def
R24519:24528 compcert.lib.Integers Make add_commut thm
R24530:24533 compcert.lib.Integers Make zero def
R24519:24528 compcert.lib.Integers Make add_commut thm
R24530:24533 compcert.lib.Integers Make zero def
R24545:24552 compcert.lib.Integers Make add_zero thm
R24545:24552 compcert.lib.Integers Make add_zero thm
R24545:24552 compcert.lib.Integers Make add_zero thm
R24573:24583 compcert.lib.Integers Make sub_add_opp thm
R24573:24583 compcert.lib.Integers Make sub_add_opp thm
prf 24600:24609 Make sub_signed
binder 24621:24621 <> x:228
binder 24623:24623 <> y:229
R24633:24635 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24626:24628 compcert.lib.Integers Make sub def
R24632:24632 compcert.lib.Integers <> y:229 var
R24630:24630 compcert.lib.Integers <> x:228 var
R24636:24639 compcert.lib.Integers Make repr def
R24650:24652 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R24642:24647 compcert.lib.Integers Make signed def
R24649:24649 compcert.lib.Integers <> x:228 var
R24653:24658 compcert.lib.Integers Make signed def
R24660:24660 compcert.lib.Integers <> y:229 var
R24688:24690 compcert.lib.Integers Make sub def
R24699:24710 compcert.lib.Integers Make eqm_samerepr thm
R24699:24710 compcert.lib.Integers Make eqm_samerepr thm
R24721:24727 compcert.lib.Integers Make eqm_sub thm
R24736:24742 compcert.lib.Integers Make eqm_sym thm
R24751:24769 compcert.lib.Integers Make eqm_signed_unsigned thm
R24721:24727 compcert.lib.Integers Make eqm_sub thm
R24736:24742 compcert.lib.Integers Make eqm_sym thm
R24736:24742 compcert.lib.Integers Make eqm_sym thm
R24751:24769 compcert.lib.Integers Make eqm_signed_unsigned thm
R24751:24769 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 24786:24804 Make unsigned_sub_borrow
binder 24816:24816 <> x:230
binder 24818:24818 <> y:231
R24841:24843 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24823:24830 compcert.lib.Integers Make unsigned def
R24833:24835 compcert.lib.Integers Make sub def
R24839:24839 compcert.lib.Integers <> y:231 var
R24837:24837 compcert.lib.Integers <> x:230 var
R24867:24869 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R24854:24856 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R24844:24851 compcert.lib.Integers Make unsigned def
R24853:24853 compcert.lib.Integers <> x:230 var
R24857:24864 compcert.lib.Integers Make unsigned def
R24866:24866 compcert.lib.Integers <> y:231 var
R24900:24902 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R24870:24877 compcert.lib.Integers Make unsigned def
R24880:24889 compcert.lib.Integers Make sub_borrow def
R24895:24898 compcert.lib.Integers Make zero def
R24893:24893 compcert.lib.Integers <> y:231 var
R24891:24891 compcert.lib.Integers <> x:230 var
R24903:24909 compcert.lib.Integers Make modulus def
R24938:24940 compcert.lib.Integers Make sub def
R24943:24952 compcert.lib.Integers Make sub_borrow def
R24963:24975 compcert.lib.Integers Make unsigned_zero thm
R24963:24975 compcert.lib.Integers Make unsigned_zero thm
R24963:24975 compcert.lib.Integers Make unsigned_zero thm
R24986:24994 Coq.ZArith.BinInt Z sub_0_r thm
R24986:24994 Coq.ZArith.BinInt Z sub_0_r thm
R24986:24994 Coq.ZArith.BinInt Z sub_0_r thm
R25007:25022 compcert.lib.Integers Make unsigned_repr_eq thm
R25007:25022 compcert.lib.Integers Make unsigned_repr_eq thm
R25007:25022 compcert.lib.Integers Make unsigned_repr_eq thm
R25039:25052 compcert.lib.Integers Make unsigned_range thm
R25058:25071 compcert.lib.Integers Make unsigned_range thm
R25039:25052 compcert.lib.Integers Make unsigned_range thm
R25058:25071 compcert.lib.Integers Make unsigned_range thm
R25097:25099 compcert.lib.Coqlib <> zlt def
R25112:25114 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R25102:25109 compcert.lib.Integers Make unsigned def
R25115:25122 compcert.lib.Integers Make unsigned def
R25097:25099 compcert.lib.Coqlib <> zlt def
R25112:25114 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R25102:25109 compcert.lib.Integers Make unsigned def
R25115:25122 compcert.lib.Integers Make unsigned def
R25141:25152 compcert.lib.Integers Make unsigned_one thm
R25141:25152 compcert.lib.Integers Make unsigned_one thm
R25141:25152 compcert.lib.Integers Make unsigned_one thm
R25161:25171 compcert.lib.Coqlib <> Zmod_unique thm
R25161:25171 compcert.lib.Coqlib <> Zmod_unique thm
R25208:25220 compcert.lib.Integers Make unsigned_zero thm
R25208:25220 compcert.lib.Integers Make unsigned_zero thm
R25208:25220 compcert.lib.Integers Make unsigned_zero thm
R25229:25239 compcert.lib.Coqlib <> Zmod_unique thm
R25229:25239 compcert.lib.Coqlib <> Zmod_unique thm
prf 25317:25326 Make mul_commut
binder 25336:25336 <> x:232
binder 25338:25338 <> y:233
R25348:25350 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25341:25343 compcert.lib.Integers Make mul def
R25347:25347 compcert.lib.Integers <> y:233 var
R25345:25345 compcert.lib.Integers <> x:232 var
R25351:25353 compcert.lib.Integers Make mul def
R25357:25357 compcert.lib.Integers <> x:232 var
R25355:25355 compcert.lib.Integers <> y:233 var
R25384:25386 compcert.lib.Integers Make mul def
prf 25416:25423 Make mul_zero
binder 25433:25433 <> x:234
R25446:25448 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25436:25438 compcert.lib.Integers Make mul def
R25442:25445 compcert.lib.Integers Make zero def
R25440:25440 compcert.lib.Integers <> x:234 var
R25449:25452 compcert.lib.Integers Make zero def
R25479:25481 compcert.lib.Integers Make mul def
R25492:25504 compcert.lib.Integers Make unsigned_zero thm
R25492:25504 compcert.lib.Integers Make unsigned_zero thm
R25492:25504 compcert.lib.Integers Make unsigned_zero thm
R25516:25519 compcert.lib.Integers Make zero def
prf 25549:25555 Make mul_one
binder 25565:25565 <> x:235
R25577:25579 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25568:25570 compcert.lib.Integers Make mul def
R25574:25576 compcert.lib.Integers Make one def
R25572:25572 compcert.lib.Integers <> x:235 var
R25580:25580 compcert.lib.Integers <> x:235 var
R25607:25609 compcert.lib.Integers Make mul def
R25620:25631 compcert.lib.Integers Make unsigned_one thm
R25620:25631 compcert.lib.Integers Make unsigned_one thm
R25620:25631 compcert.lib.Integers Make unsigned_one thm
R25650:25653 compcert.lib.Integers Make repr def
R25656:25663 compcert.lib.Integers Make unsigned def
R25650:25653 compcert.lib.Integers Make repr def
R25656:25663 compcert.lib.Integers Make unsigned def
R25691:25703 compcert.lib.Integers Make repr_unsigned thm
R25691:25703 compcert.lib.Integers Make repr_unsigned thm
prf 25720:25727 Make mul_mone
binder 25737:25737 <> x:236
R25750:25752 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25740:25742 compcert.lib.Integers Make mul def
R25746:25749 compcert.lib.Integers Make mone def
R25744:25744 compcert.lib.Integers <> x:236 var
R25753:25755 compcert.lib.Integers Make neg def
R25757:25757 compcert.lib.Integers <> x:236 var
R25784:25786 compcert.lib.Integers Make mul def
R25789:25791 compcert.lib.Integers Make neg def
R25802:25814 compcert.lib.Integers Make unsigned_mone thm
R25802:25814 compcert.lib.Integers Make unsigned_mone thm
R25802:25814 compcert.lib.Integers Make unsigned_mone thm
R25825:25836 compcert.lib.Integers Make eqm_samerepr thm
R25825:25836 compcert.lib.Integers Make eqm_samerepr thm
R25850:25850 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R25851:25858 compcert.lib.Integers Make unsigned def
R25870:25872 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R25873:25880 compcert.lib.Integers Make unsigned def
R25850:25850 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R25851:25858 compcert.lib.Integers Make unsigned def
R25870:25872 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R25873:25880 compcert.lib.Integers Make unsigned def
R25916:25919 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R25931:25931 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R25906:25913 compcert.lib.Integers Make unsigned def
R25927:25929 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R25920:25926 compcert.lib.Integers Make modulus def
R25960:25962 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R25950:25952 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R25940:25947 compcert.lib.Integers Make unsigned def
R25953:25959 compcert.lib.Integers Make modulus def
R25963:25970 compcert.lib.Integers Make unsigned def
R25916:25919 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R25931:25931 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R25906:25913 compcert.lib.Integers Make unsigned def
R25927:25929 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R25920:25926 compcert.lib.Integers Make modulus def
R25960:25962 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R25950:25952 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R25940:25947 compcert.lib.Integers Make unsigned def
R25953:25959 compcert.lib.Integers Make modulus def
R25963:25970 compcert.lib.Integers Make unsigned def
R25992:25998 compcert.lib.Integers Make eqm_sub thm
R25992:25998 compcert.lib.Integers Make eqm_sub thm
R26009:26016 compcert.lib.Integers Make unsigned def
R26009:26016 compcert.lib.Integers Make unsigned def
R26035:26042 compcert.lib.Integers Make eqm_refl thm
R26035:26042 compcert.lib.Integers Make eqm_refl thm
prf 26059:26067 Make mul_assoc
binder 26077:26077 <> x:237
binder 26079:26079 <> y:238
binder 26081:26081 <> z:239
R26099:26101 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26084:26086 compcert.lib.Integers Make mul def
R26098:26098 compcert.lib.Integers <> z:239 var
R26089:26091 compcert.lib.Integers Make mul def
R26095:26095 compcert.lib.Integers <> y:238 var
R26093:26093 compcert.lib.Integers <> x:237 var
R26102:26104 compcert.lib.Integers Make mul def
R26109:26111 compcert.lib.Integers Make mul def
R26115:26115 compcert.lib.Integers <> z:239 var
R26113:26113 compcert.lib.Integers <> y:238 var
R26106:26106 compcert.lib.Integers <> x:237 var
R26143:26145 compcert.lib.Integers Make mul def
R26161:26168 compcert.lib.Integers Make unsigned def
R26161:26168 compcert.lib.Integers Make unsigned def
R26187:26194 compcert.lib.Integers Make unsigned def
R26187:26194 compcert.lib.Integers Make unsigned def
R26213:26220 compcert.lib.Integers Make unsigned def
R26213:26220 compcert.lib.Integers Make unsigned def
R26234:26245 compcert.lib.Integers Make eqm_samerepr thm
R26234:26245 compcert.lib.Integers Make eqm_samerepr thm
R26270:26270 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26278:26281 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26273:26275 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26254:26262 compcert.lib.Integers Make eqm_trans thm
R26270:26270 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26278:26281 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26273:26275 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26254:26262 compcert.lib.Integers Make eqm_trans thm
R26318:26328 Coq.ZArith.BinInt Z mul_assoc thm
R26318:26328 Coq.ZArith.BinInt Z mul_assoc thm
R26318:26328 Coq.ZArith.BinInt Z mul_assoc thm
prf 26361:26375 Make mul_add_distr_l
binder 26387:26387 <> x:240
binder 26389:26389 <> y:241
binder 26391:26391 <> z:242
R26409:26411 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26394:26396 compcert.lib.Integers Make mul def
R26408:26408 compcert.lib.Integers <> z:242 var
R26399:26401 compcert.lib.Integers Make add def
R26405:26405 compcert.lib.Integers <> y:241 var
R26403:26403 compcert.lib.Integers <> x:240 var
R26412:26414 compcert.lib.Integers Make add def
R26427:26429 compcert.lib.Integers Make mul def
R26433:26433 compcert.lib.Integers <> z:242 var
R26431:26431 compcert.lib.Integers <> y:241 var
R26417:26419 compcert.lib.Integers Make mul def
R26423:26423 compcert.lib.Integers <> z:242 var
R26421:26421 compcert.lib.Integers <> x:240 var
R26461:26463 compcert.lib.Integers Make mul def
R26466:26468 compcert.lib.Integers Make add def
R26479:26490 compcert.lib.Integers Make eqm_samerepr thm
R26479:26490 compcert.lib.Integers Make eqm_samerepr thm
R26506:26513 compcert.lib.Integers Make unsigned def
R26506:26513 compcert.lib.Integers Make unsigned def
R26532:26539 compcert.lib.Integers Make unsigned def
R26532:26539 compcert.lib.Integers Make unsigned def
R26558:26565 compcert.lib.Integers Make unsigned def
R26558:26565 compcert.lib.Integers Make unsigned def
R26595:26595 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26603:26606 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26598:26600 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R26579:26587 compcert.lib.Integers Make eqm_trans thm
R26595:26595 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26603:26606 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26598:26600 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R26579:26587 compcert.lib.Integers Make eqm_trans thm
R26641:26641 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26649:26652 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26644:26646 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R26670:26672 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R26665:26667 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26675:26677 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26641:26641 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26649:26652 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26644:26646 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R26670:26672 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R26665:26667 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26675:26677 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
prf 26723:26737 Make mul_add_distr_r
binder 26749:26749 <> x:243
binder 26751:26751 <> y:244
binder 26753:26753 <> z:245
R26771:26773 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26756:26758 compcert.lib.Integers Make mul def
R26763:26765 compcert.lib.Integers Make add def
R26769:26769 compcert.lib.Integers <> z:245 var
R26767:26767 compcert.lib.Integers <> y:244 var
R26760:26760 compcert.lib.Integers <> x:243 var
R26774:26776 compcert.lib.Integers Make add def
R26789:26791 compcert.lib.Integers Make mul def
R26795:26795 compcert.lib.Integers <> z:245 var
R26793:26793 compcert.lib.Integers <> x:243 var
R26779:26781 compcert.lib.Integers Make mul def
R26785:26785 compcert.lib.Integers <> y:244 var
R26783:26783 compcert.lib.Integers <> x:243 var
R26824:26833 compcert.lib.Integers Make mul_commut thm
R26824:26833 compcert.lib.Integers Make mul_commut thm
R26824:26833 compcert.lib.Integers Make mul_commut thm
R26844:26858 compcert.lib.Integers Make mul_add_distr_l thm
R26844:26858 compcert.lib.Integers Make mul_add_distr_l thm
R26844:26858 compcert.lib.Integers Make mul_add_distr_l thm
R26876:26885 compcert.lib.Integers Make mul_commut thm
R26876:26885 compcert.lib.Integers Make mul_commut thm
R26876:26885 compcert.lib.Integers Make mul_commut thm
prf 26902:26916 Make neg_mul_distr_l
binder 26928:26928 <> x:246
binder 26930:26930 <> y:247
R26945:26947 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26933:26935 compcert.lib.Integers Make neg def
R26937:26939 compcert.lib.Integers Make mul def
R26943:26943 compcert.lib.Integers <> y:247 var
R26941:26941 compcert.lib.Integers <> x:246 var
R26948:26950 compcert.lib.Integers Make mul def
R26960:26960 compcert.lib.Integers <> y:247 var
R26953:26955 compcert.lib.Integers Make neg def
R26957:26957 compcert.lib.Integers <> x:246 var
R26987:26989 compcert.lib.Integers Make mul def
R26992:26994 compcert.lib.Integers Make neg def
R27010:27017 compcert.lib.Integers Make unsigned def
R27010:27017 compcert.lib.Integers Make unsigned def
R27035:27042 compcert.lib.Integers Make unsigned def
R27035:27042 compcert.lib.Integers Make unsigned def
R27056:27067 compcert.lib.Integers Make eqm_samerepr thm
R27056:27067 compcert.lib.Integers Make eqm_samerepr thm
R27092:27094 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27102:27102 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27097:27099 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27076:27084 compcert.lib.Integers Make eqm_trans thm
R27092:27094 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27102:27102 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27097:27099 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27076:27084 compcert.lib.Integers Make eqm_trans thm
R27135:27137 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27145:27145 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27140:27142 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27154:27154 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27158:27161 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27155:27155 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27135:27137 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27145:27145 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27140:27142 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27154:27154 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27158:27161 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27155:27155 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
prf 27207:27221 Make neg_mul_distr_r
binder 27234:27234 <> x:248
binder 27236:27236 <> y:249
R27251:27253 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27239:27241 compcert.lib.Integers Make neg def
R27243:27245 compcert.lib.Integers Make mul def
R27249:27249 compcert.lib.Integers <> y:249 var
R27247:27247 compcert.lib.Integers <> x:248 var
R27254:27256 compcert.lib.Integers Make mul def
R27261:27263 compcert.lib.Integers Make neg def
R27265:27265 compcert.lib.Integers <> y:249 var
R27258:27258 compcert.lib.Integers <> x:248 var
R27295:27304 compcert.lib.Integers Make mul_commut thm
R27295:27304 compcert.lib.Integers Make mul_commut thm
R27295:27304 compcert.lib.Integers Make mul_commut thm
R27321:27330 compcert.lib.Integers Make mul_commut thm
R27335:27337 compcert.lib.Integers Make neg def
R27321:27330 compcert.lib.Integers Make mul_commut thm
R27335:27337 compcert.lib.Integers Make neg def
R27321:27330 compcert.lib.Integers Make mul_commut thm
R27335:27337 compcert.lib.Integers Make neg def
R27352:27366 compcert.lib.Integers Make neg_mul_distr_l thm
R27352:27366 compcert.lib.Integers Make neg_mul_distr_l thm
prf 27383:27392 Make mul_signed
binder 27404:27404 <> x:250
binder 27406:27406 <> y:251
R27416:27418 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27409:27411 compcert.lib.Integers Make mul def
R27415:27415 compcert.lib.Integers <> y:251 var
R27413:27413 compcert.lib.Integers <> x:250 var
R27419:27422 compcert.lib.Integers Make repr def
R27433:27435 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27425:27430 compcert.lib.Integers Make signed def
R27432:27432 compcert.lib.Integers <> x:250 var
R27436:27441 compcert.lib.Integers Make signed def
R27443:27443 compcert.lib.Integers <> y:251 var
R27471:27473 compcert.lib.Integers Make mul def
R27482:27493 compcert.lib.Integers Make eqm_samerepr thm
R27482:27493 compcert.lib.Integers Make eqm_samerepr thm
R27504:27511 compcert.lib.Integers Make eqm_mult thm
R27520:27526 compcert.lib.Integers Make eqm_sym thm
R27535:27553 compcert.lib.Integers Make eqm_signed_unsigned thm
R27504:27511 compcert.lib.Integers Make eqm_mult thm
R27520:27526 compcert.lib.Integers Make eqm_sym thm
R27520:27526 compcert.lib.Integers Make eqm_sym thm
R27535:27553 compcert.lib.Integers Make eqm_signed_unsigned thm
R27535:27553 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 27614:27629 Make modu_divu_Euclid
binder 27641:27641 <> x:252
binder 27643:27643 <> y:253
R27655:27658 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27660:27662 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27659:27659 compcert.lib.Integers <> x:252 var
R27663:27665 compcert.lib.Integers Make add def
R27687:27690 compcert.lib.Integers Make modu def
R27694:27694 compcert.lib.Integers <> y:253 var
R27692:27692 compcert.lib.Integers <> x:252 var
R27668:27670 compcert.lib.Integers Make mul def
R27683:27683 compcert.lib.Integers <> y:253 var
R27673:27676 compcert.lib.Integers Make divu def
R27680:27680 compcert.lib.Integers <> y:253 var
R27678:27678 compcert.lib.Integers <> x:252 var
R27647:27650 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R27646:27646 compcert.lib.Integers <> y:253 var
R27651:27654 compcert.lib.Integers Make zero def
R27722:27724 compcert.lib.Integers Make add def
R27727:27729 compcert.lib.Integers Make mul def
R27732:27735 compcert.lib.Integers Make divu def
R27738:27741 compcert.lib.Integers Make modu def
R27760:27763 compcert.lib.Integers Make repr def
R27766:27773 compcert.lib.Integers Make unsigned def
R27760:27763 compcert.lib.Integers Make repr def
R27766:27773 compcert.lib.Integers Make unsigned def
R27804:27815 compcert.lib.Integers Make eqm_samerepr thm
R27804:27815 compcert.lib.Integers Make eqm_samerepr thm
R27831:27838 compcert.lib.Integers Make unsigned def
R27831:27838 compcert.lib.Integers Make unsigned def
R27855:27862 compcert.lib.Integers Make unsigned def
R27855:27862 compcert.lib.Integers Make unsigned def
R27906:27908 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27892:27892 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27900:27903 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27895:27897 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R27911:27915 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R27876:27884 compcert.lib.Integers Make eqm_trans thm
R27906:27908 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27892:27892 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27900:27903 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27895:27897 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R27911:27915 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R27876:27884 compcert.lib.Integers Make eqm_trans thm
R27929:27937 compcert.lib.Integers Make eqm_refl2 thm
R27929:27937 compcert.lib.Integers Make eqm_refl2 thm
R27948:27957 Coq.ZArith.BinInt Z mul_comm thm
R27948:27957 Coq.ZArith.BinInt Z mul_comm thm
R27948:27957 Coq.ZArith.BinInt Z mul_comm thm
R27966:27977 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R27966:27977 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R27994:28007 compcert.lib.Integers Make unsigned_range thm
R27994:28007 compcert.lib.Integers Make unsigned_range thm
R28040:28043 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R28030:28037 compcert.lib.Integers Make unsigned def
R28040:28043 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R28030:28037 compcert.lib.Integers Make unsigned def
R28082:28094 compcert.lib.Integers Make repr_unsigned thm
R28082:28094 compcert.lib.Integers Make repr_unsigned thm
R28082:28094 compcert.lib.Integers Make repr_unsigned thm
R28107:28110 compcert.lib.Integers Make zero def
prf 28177:28185 Make modu_divu
binder 28197:28197 <> x:254
binder 28199:28199 <> y:255
R28211:28214 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28223:28225 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28215:28218 compcert.lib.Integers Make modu def
R28222:28222 compcert.lib.Integers <> y:255 var
R28220:28220 compcert.lib.Integers <> x:254 var
R28226:28228 compcert.lib.Integers Make sub def
R28233:28235 compcert.lib.Integers Make mul def
R28248:28248 compcert.lib.Integers <> y:255 var
R28238:28241 compcert.lib.Integers Make divu def
R28245:28245 compcert.lib.Integers <> y:255 var
R28243:28243 compcert.lib.Integers <> x:254 var
R28230:28230 compcert.lib.Integers <> x:254 var
R28203:28206 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R28202:28202 compcert.lib.Integers <> y:255 var
R28207:28210 compcert.lib.Integers Make zero def
binder 28286:28286 <> a:256
binder 28288:28288 <> b:257
binder 28290:28290 <> c:258
R28304:28307 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28309:28311 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28308:28308 compcert.lib.Integers <> c:258 var
R28312:28314 compcert.lib.Integers Make sub def
R28318:28318 compcert.lib.Integers <> b:257 var
R28316:28316 compcert.lib.Integers <> a:256 var
R28294:28296 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28293:28293 compcert.lib.Integers <> a:256 var
R28297:28299 compcert.lib.Integers Make add def
R28303:28303 compcert.lib.Integers <> c:258 var
R28301:28301 compcert.lib.Integers <> b:257 var
binder 28286:28286 <> a:259
binder 28288:28288 <> b:260
binder 28290:28290 <> c:261
R28304:28307 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28309:28311 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28308:28308 compcert.lib.Integers <> c:261 var
R28312:28314 compcert.lib.Integers Make sub def
R28318:28318 compcert.lib.Integers <> b:260 var
R28316:28316 compcert.lib.Integers <> a:259 var
R28294:28296 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28293:28293 compcert.lib.Integers <> a:259 var
R28297:28299 compcert.lib.Integers Make add def
R28303:28303 compcert.lib.Integers <> c:261 var
R28301:28301 compcert.lib.Integers <> b:260 var
R28349:28357 compcert.lib.Integers Make sub_add_l thm
R28349:28357 compcert.lib.Integers Make sub_add_l thm
R28349:28357 compcert.lib.Integers Make sub_add_l thm
R28368:28375 compcert.lib.Integers Make sub_idem thm
R28368:28375 compcert.lib.Integers Make sub_idem thm
R28368:28375 compcert.lib.Integers Make sub_idem thm
R28388:28397 compcert.lib.Integers Make add_commut thm
R28388:28397 compcert.lib.Integers Make add_commut thm
R28388:28397 compcert.lib.Integers Make add_commut thm
R28408:28415 compcert.lib.Integers Make add_zero thm
R28408:28415 compcert.lib.Integers Make add_zero thm
R28408:28415 compcert.lib.Integers Make add_zero thm
R28442:28457 compcert.lib.Integers Make modu_divu_Euclid thm
R28442:28457 compcert.lib.Integers Make modu_divu_Euclid thm
prf 28478:28493 Make mods_divs_Euclid
binder 28505:28505 <> x:262
binder 28507:28507 <> y:263
R28511:28513 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28510:28510 compcert.lib.Integers <> x:262 var
R28514:28516 compcert.lib.Integers Make add def
R28538:28541 compcert.lib.Integers Make mods def
R28545:28545 compcert.lib.Integers <> y:263 var
R28543:28543 compcert.lib.Integers <> x:262 var
R28519:28521 compcert.lib.Integers Make mul def
R28534:28534 compcert.lib.Integers <> y:263 var
R28524:28527 compcert.lib.Integers Make divs def
R28531:28531 compcert.lib.Integers <> y:263 var
R28529:28529 compcert.lib.Integers <> x:262 var
R28573:28575 compcert.lib.Integers Make add def
R28578:28580 compcert.lib.Integers Make mul def
R28583:28586 compcert.lib.Integers Make divs def
R28589:28592 compcert.lib.Integers Make mods def
R28611:28614 compcert.lib.Integers Make repr def
R28617:28622 compcert.lib.Integers Make signed def
R28611:28614 compcert.lib.Integers Make repr def
R28617:28622 compcert.lib.Integers Make signed def
R28653:28664 compcert.lib.Integers Make eqm_samerepr thm
R28653:28664 compcert.lib.Integers Make eqm_samerepr thm
R28680:28685 compcert.lib.Integers Make signed def
R28680:28685 compcert.lib.Integers Make signed def
R28702:28707 compcert.lib.Integers Make signed def
R28702:28707 compcert.lib.Integers Make signed def
R28756:28758 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R28737:28737 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28750:28753 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28738:28743 Coq.ZArith.BinInt Z quot def
R28759:28763 Coq.ZArith.BinInt Z rem def
R28721:28729 compcert.lib.Integers Make eqm_trans thm
R28756:28758 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R28737:28737 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28750:28753 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28738:28743 Coq.ZArith.BinInt Z quot def
R28759:28763 Coq.ZArith.BinInt Z rem def
R28721:28729 compcert.lib.Integers Make eqm_trans thm
R28781:28789 compcert.lib.Integers Make eqm_refl2 thm
R28781:28789 compcert.lib.Integers Make eqm_refl2 thm
R28800:28809 Coq.ZArith.BinInt Z mul_comm thm
R28800:28809 Coq.ZArith.BinInt Z mul_comm thm
R28800:28809 Coq.ZArith.BinInt Z mul_comm thm
R28818:28828 Coq.ZArith.BinInt Z quot_rem' thm
R28818:28828 Coq.ZArith.BinInt Z quot_rem' thm
R28839:28845 compcert.lib.Integers Make eqm_add thm
R28839:28845 compcert.lib.Integers Make eqm_add thm
R28872:28890 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R28872:28890 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R28899:28906 compcert.lib.Integers Make eqm_mult thm
R28899:28906 compcert.lib.Integers Make eqm_mult thm
R28944:28962 compcert.lib.Integers Make eqm_signed_unsigned thm
R28944:28962 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 28979:28987 Make mods_divs
binder 28999:28999 <> x:264
binder 29001:29001 <> y:265
R29012:29014 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29004:29007 compcert.lib.Integers Make mods def
R29011:29011 compcert.lib.Integers <> y:265 var
R29009:29009 compcert.lib.Integers <> x:264 var
R29015:29017 compcert.lib.Integers Make sub def
R29022:29024 compcert.lib.Integers Make mul def
R29037:29037 compcert.lib.Integers <> y:265 var
R29027:29030 compcert.lib.Integers Make divs def
R29034:29034 compcert.lib.Integers <> y:265 var
R29032:29032 compcert.lib.Integers <> x:264 var
R29019:29019 compcert.lib.Integers <> x:264 var
binder 29075:29075 <> a:266
binder 29077:29077 <> b:267
binder 29079:29079 <> c:268
R29093:29096 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29098:29100 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29097:29097 compcert.lib.Integers <> c:268 var
R29101:29103 compcert.lib.Integers Make sub def
R29107:29107 compcert.lib.Integers <> b:267 var
R29105:29105 compcert.lib.Integers <> a:266 var
R29083:29085 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29082:29082 compcert.lib.Integers <> a:266 var
R29086:29088 compcert.lib.Integers Make add def
R29092:29092 compcert.lib.Integers <> c:268 var
R29090:29090 compcert.lib.Integers <> b:267 var
binder 29075:29075 <> a:269
binder 29077:29077 <> b:270
binder 29079:29079 <> c:271
R29093:29096 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29098:29100 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29097:29097 compcert.lib.Integers <> c:271 var
R29101:29103 compcert.lib.Integers Make sub def
R29107:29107 compcert.lib.Integers <> b:270 var
R29105:29105 compcert.lib.Integers <> a:269 var
R29083:29085 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29082:29082 compcert.lib.Integers <> a:269 var
R29086:29088 compcert.lib.Integers Make add def
R29092:29092 compcert.lib.Integers <> c:271 var
R29090:29090 compcert.lib.Integers <> b:270 var
R29138:29146 compcert.lib.Integers Make sub_add_l thm
R29138:29146 compcert.lib.Integers Make sub_add_l thm
R29138:29146 compcert.lib.Integers Make sub_add_l thm
R29157:29164 compcert.lib.Integers Make sub_idem thm
R29157:29164 compcert.lib.Integers Make sub_idem thm
R29157:29164 compcert.lib.Integers Make sub_idem thm
R29177:29186 compcert.lib.Integers Make add_commut thm
R29177:29186 compcert.lib.Integers Make add_commut thm
R29177:29186 compcert.lib.Integers Make add_commut thm
R29197:29204 compcert.lib.Integers Make add_zero thm
R29197:29204 compcert.lib.Integers Make add_zero thm
R29197:29204 compcert.lib.Integers Make add_zero thm
R29230:29245 compcert.lib.Integers Make mods_divs_Euclid thm
R29230:29245 compcert.lib.Integers Make mods_divs_Euclid thm
prf 29262:29269 Make divu_one
binder 29281:29281 <> x:272
R29294:29296 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29284:29287 compcert.lib.Integers Make divu def
R29291:29293 compcert.lib.Integers Make one def
R29289:29289 compcert.lib.Integers <> x:272 var
R29297:29297 compcert.lib.Integers <> x:272 var
R29316:29319 compcert.lib.Integers Make divu def
R29338:29349 compcert.lib.Integers Make unsigned_one thm
R29338:29349 compcert.lib.Integers Make unsigned_one thm
R29338:29349 compcert.lib.Integers Make unsigned_one thm
R29360:29367 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R29360:29367 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R29360:29367 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R29376:29388 compcert.lib.Integers Make repr_unsigned thm
R29376:29388 compcert.lib.Integers Make repr_unsigned thm
prf 29405:29412 Make divs_one
binder 29424:29424 <> x:273
R29440:29443 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29454:29456 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29444:29447 compcert.lib.Integers Make divs def
R29451:29453 compcert.lib.Integers Make one def
R29449:29449 compcert.lib.Integers <> x:273 var
R29457:29457 compcert.lib.Integers <> x:273 var
R29436:29438 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R29427:29435 compcert.lib.Integers Make zwordsize def
R29476:29479 compcert.lib.Integers Make divs def
R29498:29507 compcert.lib.Integers Make signed_one thm
R29498:29507 compcert.lib.Integers Make signed_one thm
R29498:29507 compcert.lib.Integers Make signed_one thm
R29498:29507 compcert.lib.Integers Make signed_one thm
R29518:29527 Coq.ZArith.BinInt Z quot_1_r thm
R29518:29527 Coq.ZArith.BinInt Z quot_1_r thm
R29518:29527 Coq.ZArith.BinInt Z quot_1_r thm
R29536:29546 compcert.lib.Integers Make repr_signed thm
R29536:29546 compcert.lib.Integers Make repr_signed thm
prf 29569:29576 Make modu_one
binder 29588:29588 <> x:274
R29601:29603 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29591:29594 compcert.lib.Integers Make modu def
R29598:29600 compcert.lib.Integers Make one def
R29596:29596 compcert.lib.Integers <> x:274 var
R29604:29607 compcert.lib.Integers Make zero def
R29635:29643 compcert.lib.Integers Make modu_divu thm
R29635:29643 compcert.lib.Integers Make modu_divu thm
R29635:29643 compcert.lib.Integers Make modu_divu thm
R29635:29643 compcert.lib.Integers Make modu_divu thm
R29654:29661 compcert.lib.Integers Make divu_one thm
R29654:29661 compcert.lib.Integers Make divu_one thm
R29654:29661 compcert.lib.Integers Make divu_one thm
R29672:29678 compcert.lib.Integers Make mul_one thm
R29672:29678 compcert.lib.Integers Make mul_one thm
R29672:29678 compcert.lib.Integers Make mul_one thm
R29687:29694 compcert.lib.Integers Make sub_idem thm
R29687:29694 compcert.lib.Integers Make sub_idem thm
R29705:29716 compcert.lib.Integers Make one_not_zero thm
R29705:29716 compcert.lib.Integers Make one_not_zero thm
prf 29733:29741 Make divs_mone
binder 29753:29753 <> x:275
R29767:29769 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29756:29759 compcert.lib.Integers Make divs def
R29763:29766 compcert.lib.Integers Make mone def
R29761:29761 compcert.lib.Integers <> x:275 var
R29770:29772 compcert.lib.Integers Make neg def
R29774:29774 compcert.lib.Integers <> x:275 var
R29793:29796 compcert.lib.Integers Make divs def
R29799:29801 compcert.lib.Integers Make neg def
R29822:29832 compcert.lib.Integers Make signed_mone thm
R29822:29832 compcert.lib.Integers Make signed_mone thm
R29822:29832 compcert.lib.Integers Make signed_mone thm
R29846:29851 Coq.ZArith.BinInt Z quot def
R29854:29859 compcert.lib.Integers Make signed def
R29876:29878 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R29887:29887 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R29879:29884 compcert.lib.Integers Make signed def
R29846:29851 Coq.ZArith.BinInt Z quot def
R29854:29859 compcert.lib.Integers Make signed def
R29876:29878 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R29887:29887 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R29879:29884 compcert.lib.Integers Make signed def
R29899:29910 compcert.lib.Integers Make eqm_samerepr thm
R29899:29910 compcert.lib.Integers Make eqm_samerepr thm
R29919:29925 compcert.lib.Integers Make eqm_neg thm
R29919:29925 compcert.lib.Integers Make eqm_neg thm
R29934:29952 compcert.lib.Integers Make eqm_signed_unsigned thm
R29934:29952 compcert.lib.Integers Make eqm_signed_unsigned thm
R29968:29973 compcert.lib.Integers Make signed def
R29968:29973 compcert.lib.Integers Make signed def
R30017:30018 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R30017:30018 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R30033:30043 Coq.ZArith.Zquot <> Zquot_opp_r thm
R30033:30043 Coq.ZArith.Zquot <> Zquot_opp_r thm
R30033:30043 Coq.ZArith.Zquot <> Zquot_opp_r thm
R30069:30071 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30056:30061 Coq.ZArith.BinInt Z quot def
R30069:30071 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30056:30061 Coq.ZArith.BinInt Z quot def
R30095:30111 Coq.ZArith.Zquot <> Zquot_unique_full thm
R30095:30111 Coq.ZArith.Zquot <> Zquot_unique_full thm
R30136:30140 Coq.ZArith.BinInt Z abs def
R30136:30140 Coq.ZArith.BinInt Z abs def
R30167:30169 compcert.lib.Coqlib <> zle def
R30167:30169 compcert.lib.Coqlib <> zle def
R30214:30216 compcert.lib.Integers Make one def
prf 30253:30261 Make mods_mone
binder 30273:30273 <> x:276
R30287:30289 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30276:30279 compcert.lib.Integers Make mods def
R30283:30286 compcert.lib.Integers Make mone def
R30281:30281 compcert.lib.Integers <> x:276 var
R30290:30293 compcert.lib.Integers Make zero def
R30321:30329 compcert.lib.Integers Make mods_divs thm
R30321:30329 compcert.lib.Integers Make mods_divs thm
R30321:30329 compcert.lib.Integers Make mods_divs thm
R30340:30348 compcert.lib.Integers Make divs_mone thm
R30340:30348 compcert.lib.Integers Make divs_mone thm
R30340:30348 compcert.lib.Integers Make divs_mone thm
R30364:30378 compcert.lib.Integers Make neg_mul_distr_l thm
R30364:30378 compcert.lib.Integers Make neg_mul_distr_l thm
R30364:30378 compcert.lib.Integers Make neg_mul_distr_l thm
R30389:30396 compcert.lib.Integers Make mul_mone thm
R30389:30396 compcert.lib.Integers Make mul_mone thm
R30389:30396 compcert.lib.Integers Make mul_mone thm
R30407:30420 compcert.lib.Integers Make neg_involutive thm
R30407:30420 compcert.lib.Integers Make neg_involutive thm
R30407:30420 compcert.lib.Integers Make neg_involutive thm
R30429:30436 compcert.lib.Integers Make sub_idem thm
R30429:30436 compcert.lib.Integers Make sub_idem thm
prf 30453:30470 Make divmodu2_divu_modu
binder 30482:30482 <> n:277
binder 30484:30484 <> d:278
R30498:30501 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30519:30521 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30502:30509 compcert.lib.Integers Make divmodu2 def
R30518:30518 compcert.lib.Integers <> d:278 var
R30516:30516 compcert.lib.Integers <> n:277 var
R30511:30514 compcert.lib.Integers Make zero def
R30522:30525 Coq.Init.Datatypes <> Some constr
R30527:30527 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30536:30537 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30546:30546 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30528:30531 compcert.lib.Integers Make divu def
R30535:30535 compcert.lib.Integers <> d:278 var
R30533:30533 compcert.lib.Integers <> n:277 var
R30538:30541 compcert.lib.Integers Make modu def
R30545:30545 compcert.lib.Integers <> d:278 var
R30543:30543 compcert.lib.Integers <> n:277 var
R30490:30493 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R30489:30489 compcert.lib.Integers <> d:278 var
R30494:30497 compcert.lib.Integers Make zero def
R30565:30572 compcert.lib.Integers Make divmodu2 def
R30575:30578 compcert.lib.Integers Make divu def
R30581:30584 compcert.lib.Integers Make modu def
R30605:30616 compcert.lib.Coqlib <> dec_eq_false thm
R30605:30616 compcert.lib.Coqlib <> dec_eq_false thm
R30605:30616 compcert.lib.Coqlib <> dec_eq_false thm
R30662:30664 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30652:30654 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30639:30646 compcert.lib.Integers Make unsigned def
R30648:30651 compcert.lib.Integers Make zero def
R30655:30661 compcert.lib.Integers Make modulus def
R30665:30672 compcert.lib.Integers Make unsigned def
R30662:30664 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30652:30654 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30639:30646 compcert.lib.Integers Make unsigned def
R30648:30651 compcert.lib.Integers Make zero def
R30655:30661 compcert.lib.Integers Make modulus def
R30665:30672 compcert.lib.Integers Make unsigned def
R30702:30704 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30692:30699 compcert.lib.Integers Make unsigned def
R30719:30719 Coq.Numbers.BinNums <> N ind
R30730:30742 compcert.lib.Integers Make unsigned_zero thm
R30702:30704 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30692:30699 compcert.lib.Integers Make unsigned def
R30730:30742 compcert.lib.Integers Make unsigned_zero thm
R30730:30742 compcert.lib.Integers Make unsigned_zero thm
R30778:30785 compcert.lib.Integers Make unsigned def
R30778:30785 compcert.lib.Integers Make unsigned def
R30804:30806 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R30822:30826 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R30804:30806 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R30822:30826 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R30859:30861 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30845:30854 Coq.ZArith.BinInt Z div_eucl def
R30862:30862 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30864:30865 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30867:30867 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30859:30861 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30845:30854 Coq.ZArith.BinInt Z div_eucl def
R30862:30862 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30864:30865 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30867:30867 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30888:30892 Coq.ZArith.BinInt Z div def
R30895:30902 Coq.ZArith.BinInt Z modulo def
R30915:30924 Coq.ZArith.BinInt Z div_eucl def
R30915:30924 Coq.ZArith.BinInt Z div_eucl def
R30962:30969 compcert.lib.Coqlib <> zle_true thm
R30962:30969 compcert.lib.Coqlib <> zle_true thm
R30962:30969 compcert.lib.Coqlib <> zle_true thm
R30962:30969 compcert.lib.Coqlib <> zle_true thm
R30998:31001 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R30988:30995 compcert.lib.Integers Make unsigned def
R30998:31001 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R30988:30995 compcert.lib.Integers Make unsigned def
R31043:31055 compcert.lib.Integers Make repr_unsigned thm
R31043:31055 compcert.lib.Integers Make repr_unsigned thm
R31043:31055 compcert.lib.Integers Make repr_unsigned thm
R31092:31094 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R31092:31094 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R31125:31138 compcert.lib.Integers Make unsigned_range thm
R31125:31138 compcert.lib.Integers Make unsigned_range thm
R31172:31175 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R31177:31180 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R31181:31192 compcert.lib.Integers Make max_unsigned def
R31172:31175 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R31177:31180 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R31181:31192 compcert.lib.Integers Make max_unsigned def
R31216:31230 compcert.lib.Coqlib <> Zdiv_interval_2 thm
R31216:31230 compcert.lib.Coqlib <> Zdiv_interval_2 thm
R31258:31273 compcert.lib.Integers Make unsigned_range_2 thm
R31258:31273 compcert.lib.Integers Make unsigned_range_2 thm
R31294:31305 compcert.lib.Integers Make max_unsigned def
R31319:31329 compcert.lib.Integers Make modulus_pos thm
R31319:31329 compcert.lib.Integers Make modulus_pos thm
prf 31369:31383 Make unsigned_signed
binder 31395:31395 <> n:279
R31408:31410 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31398:31405 compcert.lib.Integers Make unsigned def
R31407:31407 compcert.lib.Integers <> n:279 var
R31414:31415 compcert.lib.Integers Make lt def
R31419:31422 compcert.lib.Integers Make zero def
R31417:31417 compcert.lib.Integers <> n:279 var
R31453:31458 compcert.lib.Integers Make signed def
R31460:31460 compcert.lib.Integers <> n:279 var
R31437:31439 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R31429:31434 compcert.lib.Integers Make signed def
R31436:31436 compcert.lib.Integers <> n:279 var
R31440:31446 compcert.lib.Integers Make modulus def
R31487:31488 compcert.lib.Integers Make lt def
R31499:31509 compcert.lib.Integers Make signed_zero thm
R31499:31509 compcert.lib.Integers Make signed_zero thm
R31499:31509 compcert.lib.Integers Make signed_zero thm
R31519:31524 compcert.lib.Integers Make signed def
R31541:31554 compcert.lib.Integers Make unsigned_range thm
R31541:31554 compcert.lib.Integers Make unsigned_range thm
R31568:31587 compcert.lib.Integers Make half_modulus_modulus thm
R31568:31587 compcert.lib.Integers Make half_modulus_modulus thm
R31568:31587 compcert.lib.Integers Make half_modulus_modulus thm
R31610:31612 compcert.lib.Coqlib <> zlt def
R31627:31638 compcert.lib.Integers Make half_modulus def
R31615:31622 compcert.lib.Integers Make unsigned def
R31610:31612 compcert.lib.Coqlib <> zlt def
R31627:31638 compcert.lib.Integers Make half_modulus def
R31615:31622 compcert.lib.Integers Make unsigned def
R31652:31660 compcert.lib.Coqlib <> zlt_false thm
R31652:31660 compcert.lib.Coqlib <> zlt_false thm
R31652:31660 compcert.lib.Coqlib <> zlt_false thm
R31688:31695 compcert.lib.Coqlib <> zlt_true thm
R31688:31695 compcert.lib.Coqlib <> zlt_true thm
R31688:31695 compcert.lib.Coqlib <> zlt_true thm
prf 31727:31744 Make divmods2_divs_mods
binder 31756:31756 <> n:280
binder 31758:31758 <> d:281
R31772:31775 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31809:31814 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31862:31864 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31815:31822 compcert.lib.Integers Make divmods2 def
R31861:31861 compcert.lib.Integers <> d:281 var
R31859:31859 compcert.lib.Integers <> n:280 var
R31828:31829 compcert.lib.Integers Make lt def
R31833:31836 compcert.lib.Integers Make zero def
R31831:31831 compcert.lib.Integers <> n:280 var
R31853:31856 compcert.lib.Integers Make zero def
R31843:31846 compcert.lib.Integers Make mone def
R31865:31868 Coq.Init.Datatypes <> Some constr
R31870:31870 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31879:31880 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31889:31889 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31871:31874 compcert.lib.Integers Make divs def
R31878:31878 compcert.lib.Integers <> d:281 var
R31876:31876 compcert.lib.Integers <> n:280 var
R31881:31884 compcert.lib.Integers Make mods def
R31888:31888 compcert.lib.Integers <> d:281 var
R31886:31886 compcert.lib.Integers <> n:280 var
R31796:31799 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R31777:31780 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R31776:31776 compcert.lib.Integers <> n:280 var
R31781:31784 compcert.lib.Integers Make repr def
R31786:31795 compcert.lib.Integers Make min_signed def
R31801:31804 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R31800:31800 compcert.lib.Integers <> d:281 var
R31805:31808 compcert.lib.Integers Make mone def
R31764:31767 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R31763:31763 compcert.lib.Integers <> d:281 var
R31768:31771 compcert.lib.Integers Make zero def
R31908:31915 compcert.lib.Integers Make divmods2 def
R31918:31921 compcert.lib.Integers Make divs def
R31924:31927 compcert.lib.Integers Make mods def
R31948:31959 compcert.lib.Coqlib <> dec_eq_false thm
R31948:31959 compcert.lib.Coqlib <> dec_eq_false thm
R31948:31959 compcert.lib.Coqlib <> dec_eq_false thm
R32033:32035 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R32023:32025 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R31982:31987 compcert.lib.Integers Make signed def
R31993:31994 compcert.lib.Integers Make lt def
R31998:32001 compcert.lib.Integers Make zero def
R32018:32021 compcert.lib.Integers Make zero def
R32008:32011 compcert.lib.Integers Make mone def
R32026:32032 compcert.lib.Integers Make modulus def
R32036:32043 compcert.lib.Integers Make unsigned def
R32033:32035 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R32023:32025 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R31982:31987 compcert.lib.Integers Make signed def
R31993:31994 compcert.lib.Integers Make lt def
R31998:32001 compcert.lib.Integers Make zero def
R32018:32021 compcert.lib.Integers Make zero def
R32008:32011 compcert.lib.Integers Make mone def
R32026:32032 compcert.lib.Integers Make modulus def
R32036:32043 compcert.lib.Integers Make unsigned def
R32061:32066 compcert.lib.Integers Make signed def
R32061:32066 compcert.lib.Integers Make signed def
R32083:32086 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R32083:32086 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R32138:32148 compcert.lib.Integers Make repr_signed thm
R32138:32148 compcert.lib.Integers Make repr_signed thm
R32138:32148 compcert.lib.Integers Make repr_signed thm
R32185:32187 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32188:32193 compcert.lib.Integers Make signed def
R32185:32187 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32188:32193 compcert.lib.Integers Make signed def
R32210:32210 Coq.Numbers.BinNums <> N ind
R32221:32235 compcert.lib.Integers Make unsigned_signed thm
R32221:32235 compcert.lib.Integers Make unsigned_signed thm
R32221:32235 compcert.lib.Integers Make unsigned_signed thm
R32248:32249 compcert.lib.Integers Make lt def
R32253:32256 compcert.lib.Integers Make zero def
R32248:32249 compcert.lib.Integers Make lt def
R32253:32256 compcert.lib.Integers Make zero def
R32272:32282 compcert.lib.Integers Make signed_mone thm
R32272:32282 compcert.lib.Integers Make signed_mone thm
R32272:32282 compcert.lib.Integers Make signed_mone thm
R32303:32313 compcert.lib.Integers Make signed_zero thm
R32303:32313 compcert.lib.Integers Make signed_zero thm
R32303:32313 compcert.lib.Integers Make signed_zero thm
R32336:32341 Coq.ZArith.BinInt Z quot def
R32359:32363 Coq.ZArith.BinInt Z rem def
R32336:32341 Coq.ZArith.BinInt Z quot def
R32359:32363 Coq.ZArith.BinInt Z rem def
R32398:32400 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32385:32393 Coq.ZArith.BinInt Z quotrem def
R32401:32401 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32403:32404 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32406:32406 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32398:32400 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32385:32393 Coq.ZArith.BinInt Z quotrem def
R32401:32401 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32403:32404 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32406:32406 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32427:32432 Coq.ZArith.BinInt Z quot def
R32435:32439 Coq.ZArith.BinInt Z rem def
R32452:32460 Coq.ZArith.BinInt Z quotrem def
R32452:32460 Coq.ZArith.BinInt Z quotrem def
R32510:32513 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32515:32518 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32500:32509 compcert.lib.Integers Make min_signed def
R32519:32528 compcert.lib.Integers Make max_signed def
R32553:32564 compcert.lib.Integers Make signed_range thm
R32510:32513 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32515:32518 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32500:32509 compcert.lib.Integers Make min_signed def
R32519:32528 compcert.lib.Integers Make max_signed def
R32553:32564 compcert.lib.Integers Make signed_range thm
R32588:32591 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32593:32596 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32578:32587 compcert.lib.Integers Make min_signed def
R32597:32606 compcert.lib.Integers Make max_signed def
R32588:32591 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32593:32596 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32578:32587 compcert.lib.Integers Make min_signed def
R32597:32606 compcert.lib.Integers Make max_signed def
R32634:32636 compcert.lib.Coqlib <> zeq def
R32658:32660 compcert.lib.Coqlib <> zeq def
R32634:32636 compcert.lib.Coqlib <> zeq def
R32658:32660 compcert.lib.Coqlib <> zeq def
R32711:32720 Coq.ZArith.BinInt Z quot_1_r thm
R32711:32720 Coq.ZArith.BinInt Z quot_1_r thm
R32711:32720 Coq.ZArith.BinInt Z quot_1_r thm
R32779:32783 Coq.ZArith.BinInt Z opp def
R32779:32783 Coq.ZArith.BinInt Z opp def
R32779:32783 Coq.ZArith.BinInt Z opp def
R32797:32808 Coq.ZArith.BinInt Z quot_opp_r thm
R32797:32808 Coq.ZArith.BinInt Z quot_opp_r thm
R32797:32808 Coq.ZArith.BinInt Z quot_opp_r thm
R32832:32841 Coq.ZArith.BinInt Z quot_1_r thm
R32832:32841 Coq.ZArith.BinInt Z quot_1_r thm
R32832:32841 Coq.ZArith.BinInt Z quot_1_r thm
R32857:32860 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R32861:32870 compcert.lib.Integers Make min_signed def
R32857:32860 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R32861:32870 compcert.lib.Integers Make min_signed def
R32933:32943 compcert.lib.Integers Make repr_signed thm
R32933:32943 compcert.lib.Integers Make repr_signed thm
R32933:32943 compcert.lib.Integers Make repr_signed thm
R33009:33019 compcert.lib.Integers Make repr_signed thm
R33009:33019 compcert.lib.Integers Make repr_signed thm
R33009:33019 compcert.lib.Integers Make repr_signed thm
R33070:33079 compcert.lib.Integers Make min_signed def
R33082:33091 compcert.lib.Integers Make max_signed def
R33154:33156 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R33136:33140 Coq.ZArith.BinInt Z abs def
R33143:33148 Coq.ZArith.BinInt Z quot def
R33157:33168 compcert.lib.Integers Make half_modulus def
R33154:33156 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R33136:33140 Coq.ZArith.BinInt Z abs def
R33143:33148 Coq.ZArith.BinInt Z quot def
R33157:33168 compcert.lib.Integers Make half_modulus def
R33189:33198 Coq.ZArith.BinInt Z quot_abs thm
R33189:33198 Coq.ZArith.BinInt Z quot_abs thm
R33189:33198 Coq.ZArith.BinInt Z quot_abs thm
R33216:33235 Coq.ZArith.Zquot <> Zquot_lt_upper_bound thm
R33216:33235 Coq.ZArith.Zquot <> Zquot_lt_upper_bound thm
R33304:33306 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R33292:33303 compcert.lib.Integers Make half_modulus def
R33272:33284 Coq.ZArith.BinInt Z le_lt_trans thm
R33304:33306 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R33292:33303 compcert.lib.Integers Make half_modulus def
R33272:33284 Coq.ZArith.BinInt Z le_lt_trans thm
R33325:33333 Coq.ZArith.BinInt Z mul_1_r thm
R33325:33333 Coq.ZArith.BinInt Z mul_1_r thm
R33325:33333 Coq.ZArith.BinInt Z mul_1_r thm
R33343:33352 compcert.lib.Integers Make min_signed def
R33355:33364 compcert.lib.Integers Make max_signed def
R33393:33409 Coq.ZArith.Zorder <> Zmult_lt_compat_l thm
R33393:33409 Coq.ZArith.Zorder <> Zmult_lt_compat_l thm
R33423:33438 compcert.lib.Integers Make half_modulus_pos thm
R33423:33438 compcert.lib.Integers Make half_modulus_pos thm
R33470:33477 Coq.ZArith.BinInt Z abs_lt thm
R33470:33477 Coq.ZArith.BinInt Z abs_lt thm
R33470:33477 Coq.ZArith.BinInt Z abs_lt thm
R33497:33506 compcert.lib.Integers Make min_signed def
R33509:33518 compcert.lib.Integers Make max_signed def
R33541:33552 compcert.lib.Coqlib <> proj_sumbool def
R33565:33572 compcert.lib.Coqlib <> zle_true thm
R33565:33572 compcert.lib.Coqlib <> zle_true thm
R33565:33572 compcert.lib.Coqlib <> zle_true thm
R33565:33572 compcert.lib.Coqlib <> zle_true thm
R33565:33572 compcert.lib.Coqlib <> zle_true thm
def 33673:33679 Make testbit
R33685:33687 compcert.lib.Integers Make int rec
binder 33682:33682 <> x:282
R33694:33694 Coq.Numbers.BinNums <> Z ind
binder 33691:33691 <> i:283
R33699:33702 Coq.Init.Datatypes <> bool ind
R33707:33715 Coq.ZArith.BinInt Z testbit def
R33730:33730 compcert.lib.Integers <> i:283 var
R33718:33725 compcert.lib.Integers Make unsigned def
R33727:33727 compcert.lib.Integers <> x:282 var
prf 33740:33751 Make testbit_repr
binder 33763:33763 <> x:284
binder 33765:33765 <> i:285
R33788:33793 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33812:33814 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33794:33800 compcert.lib.Integers Make testbit def
R33811:33811 compcert.lib.Integers <> i:285 var
R33803:33806 compcert.lib.Integers Make repr def
R33808:33808 compcert.lib.Integers <> x:284 var
R33815:33823 Coq.ZArith.BinInt Z testbit def
R33827:33827 compcert.lib.Integers <> i:285 var
R33825:33825 compcert.lib.Integers <> x:284 var
R33771:33774 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R33776:33778 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R33775:33775 compcert.lib.Integers <> i:285 var
R33775:33775 compcert.lib.Integers <> i:285 var
R33779:33787 compcert.lib.Integers Make zwordsize def
R33854:33860 compcert.lib.Integers Make testbit def
R33869:33881 compcert.lib.Integers Make same_bits_eqm thm
R33869:33881 compcert.lib.Integers Make same_bits_eqm thm
prf 33912:33923 Make same_bits_eq
binder 33935:33935 <> x:286
binder 33937:33937 <> y:287
R33942:33942 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34000:34006 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34008:34010 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34007:34007 compcert.lib.Integers <> x:286 var
R34011:34011 compcert.lib.Integers <> y:287 var
binder 33950:33950 <> i:288
R33971:33974 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33986:33988 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33975:33981 compcert.lib.Integers Make testbit def
R33985:33985 compcert.lib.Integers <> i:288 var
R33983:33983 compcert.lib.Integers <> x:286 var
R33989:33995 compcert.lib.Integers Make testbit def
R33999:33999 compcert.lib.Integers <> i:288 var
R33997:33997 compcert.lib.Integers <> y:287 var
R33954:33957 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R33959:33961 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R33958:33958 compcert.lib.Integers <> i:288 var
R33958:33958 compcert.lib.Integers <> i:288 var
R33962:33970 compcert.lib.Integers Make zwordsize def
R34043:34055 compcert.lib.Integers Make repr_unsigned thm
R34043:34055 compcert.lib.Integers Make repr_unsigned thm
R34043:34055 compcert.lib.Integers Make repr_unsigned thm
R34073:34085 compcert.lib.Integers Make repr_unsigned thm
R34073:34085 compcert.lib.Integers Make repr_unsigned thm
R34073:34085 compcert.lib.Integers Make repr_unsigned thm
R34099:34110 compcert.lib.Integers Make eqm_samerepr thm
R34099:34110 compcert.lib.Integers Make eqm_samerepr thm
R34119:34131 compcert.lib.Integers Make eqm_same_bits thm
R34119:34131 compcert.lib.Integers Make eqm_same_bits thm
prf 34152:34161 Make bits_above
binder 34173:34173 <> x:289
binder 34175:34175 <> i:290
R34192:34195 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34207:34209 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34196:34202 compcert.lib.Integers Make testbit def
R34206:34206 compcert.lib.Integers <> i:290 var
R34204:34204 compcert.lib.Integers <> x:289 var
R34210:34214 Coq.Init.Datatypes <> false constr
R34179:34182 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R34178:34178 compcert.lib.Integers <> i:290 var
R34183:34191 compcert.lib.Integers Make zwordsize def
R34260:34267 compcert.lib.Integers Make wordsize def
R34240:34253 compcert.lib.Zbits <> Ztestbit_above thm
R34260:34267 compcert.lib.Integers Make wordsize def
R34240:34253 compcert.lib.Zbits <> Ztestbit_above thm
R34282:34295 compcert.lib.Integers Make unsigned_range thm
R34282:34295 compcert.lib.Integers Make unsigned_range thm
prf 34310:34319 Make bits_below
binder 34331:34331 <> x:291
binder 34333:34333 <> i:292
R34341:34344 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34356:34358 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34345:34351 compcert.lib.Integers Make testbit def
R34355:34355 compcert.lib.Integers <> i:292 var
R34353:34353 compcert.lib.Integers <> x:291 var
R34359:34363 Coq.Init.Datatypes <> false constr
R34337:34339 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R34336:34336 compcert.lib.Integers <> i:292 var
R34389:34403 Coq.ZArith.BinInt Z testbit_neg_r thm
R34389:34403 Coq.ZArith.BinInt Z testbit_neg_r thm
prf 34424:34432 Make bits_zero
binder 34444:34444 <> i:293
R34461:34463 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34447:34453 compcert.lib.Integers Make testbit def
R34460:34460 compcert.lib.Integers <> i:293 var
R34455:34458 compcert.lib.Integers Make zero def
R34464:34468 Coq.Init.Datatypes <> false constr
R34495:34501 compcert.lib.Integers Make testbit def
R34512:34524 compcert.lib.Integers Make unsigned_zero thm
R34512:34524 compcert.lib.Integers Make unsigned_zero thm
R34512:34524 compcert.lib.Integers Make unsigned_zero thm
R34533:34542 compcert.lib.Zbits <> Ztestbit_0 thm
R34533:34542 compcert.lib.Zbits <> Ztestbit_0 thm
prf 34558:34565 Make bits_one
binder 34575:34575 <> n:294
R34591:34593 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34578:34584 compcert.lib.Integers Make testbit def
R34590:34590 compcert.lib.Integers <> n:294 var
R34586:34588 compcert.lib.Integers Make one def
R34594:34596 compcert.lib.Coqlib <> zeq def
R34598:34598 compcert.lib.Integers <> n:294 var
R34619:34625 compcert.lib.Integers Make testbit def
R34644:34655 compcert.lib.Integers Make unsigned_one thm
R34644:34655 compcert.lib.Integers Make unsigned_one thm
R34644:34655 compcert.lib.Integers Make unsigned_one thm
R34664:34673 compcert.lib.Zbits <> Ztestbit_1 thm
R34664:34673 compcert.lib.Zbits <> Ztestbit_1 thm
prf 34688:34696 Make bits_mone
binder 34708:34708 <> i:295
R34729:34732 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34747:34749 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34733:34739 compcert.lib.Integers Make testbit def
R34746:34746 compcert.lib.Integers <> i:295 var
R34741:34744 compcert.lib.Integers Make mone def
R34750:34753 Coq.Init.Datatypes <> true constr
R34712:34715 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R34717:34719 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R34716:34716 compcert.lib.Integers <> i:295 var
R34716:34716 compcert.lib.Integers <> i:295 var
R34720:34728 compcert.lib.Integers Make zwordsize def
R34780:34783 compcert.lib.Integers Make mone def
R34794:34805 compcert.lib.Integers Make testbit_repr thm
R34794:34805 compcert.lib.Integers Make testbit_repr thm
R34794:34805 compcert.lib.Integers Make testbit_repr thm
R34794:34805 compcert.lib.Integers Make testbit_repr thm
R34820:34830 compcert.lib.Zbits <> Ztestbit_m1 thm
R34820:34830 compcert.lib.Zbits <> Ztestbit_m1 thm
R34859:34867 compcert.lib.Integers Make bits_zero thm
R34869:34877 compcert.lib.Integers Make bits_mone thm
R34922:34933 compcert.lib.Integers Make same_bits_eq thm
prf 34990:35009 Make sign_bit_of_unsigned
binder 35021:35021 <> x:296
R35049:35051 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35024:35030 compcert.lib.Integers Make testbit def
R35044:35046 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R35035:35043 compcert.lib.Integers Make zwordsize def
R35032:35032 compcert.lib.Integers <> x:296 var
R35055:35057 compcert.lib.Coqlib <> zlt def
R35072:35083 compcert.lib.Integers Make half_modulus def
R35060:35067 compcert.lib.Integers Make unsigned def
R35069:35069 compcert.lib.Integers <> x:296 var
R35101:35104 Coq.Init.Datatypes <> true constr
R35090:35094 Coq.Init.Datatypes <> false constr
R35131:35137 compcert.lib.Integers Make testbit def
R35154:35166 Coq.Init.Nat <> pred def
R35168:35175 compcert.lib.Integers Make wordsize def
R35154:35166 Coq.Init.Nat <> pred def
R35168:35175 compcert.lib.Integers Make wordsize def
R35202:35204 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35198:35200 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R35189:35197 compcert.lib.Integers Make zwordsize def
R35205:35212 Coq.ZArith.BinInt Z of_nat def
R35202:35204 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35198:35200 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R35189:35197 compcert.lib.Integers Make zwordsize def
R35205:35212 Coq.ZArith.BinInt Z of_nat def
R35231:35239 compcert.lib.Integers Make zwordsize def
R35247:35254 compcert.lib.Integers Make wordsize def
R35270:35280 compcert.lib.Integers WS wordsize defax
R35270:35280 compcert.lib.Integers WS wordsize defax
R35304:35323 compcert.lib.Integers WS wordsize_not_zero prfax
R35304:35323 compcert.lib.Integers WS wordsize_not_zero prfax
R35344:35357 Coq.ZArith.Znat Nat2Z inj_succ thm
R35344:35357 Coq.ZArith.Znat Nat2Z inj_succ thm
R35344:35357 Coq.ZArith.Znat Nat2Z inj_succ thm
R35396:35398 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35384:35395 compcert.lib.Integers Make half_modulus def
R35399:35411 Coq.ZArith.Zpower <> two_power_nat def
R35396:35398 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35384:35395 compcert.lib.Integers Make half_modulus def
R35399:35411 Coq.ZArith.Zpower <> two_power_nat def
R35431:35449 compcert.lib.Coqlib <> two_power_nat_two_p thm
R35431:35449 compcert.lib.Coqlib <> two_power_nat_two_p thm
R35431:35449 compcert.lib.Coqlib <> two_power_nat_two_p thm
R35472:35489 compcert.lib.Integers Make half_modulus_power thm
R35472:35489 compcert.lib.Integers Make half_modulus_power thm
R35525:35533 compcert.lib.Zbits <> Zsign_bit thm
R35525:35533 compcert.lib.Zbits <> Zsign_bit thm
R35544:35558 Coq.ZArith.Zpower <> two_power_nat_S thm
R35544:35558 Coq.ZArith.Zpower <> two_power_nat_S thm
R35544:35558 Coq.ZArith.Zpower <> two_power_nat_S thm
R35589:35608 compcert.lib.Integers Make half_modulus_modulus thm
R35589:35608 compcert.lib.Integers Make half_modulus_modulus thm
R35589:35608 compcert.lib.Integers Make half_modulus_modulus thm
R35617:35630 compcert.lib.Integers Make unsigned_range thm
R35617:35630 compcert.lib.Integers Make unsigned_range thm
prf 35645:35655 Make bits_signed
binder 35667:35667 <> x:297
binder 35669:35669 <> i:298
R35678:35683 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35706:35708 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35684:35692 Coq.ZArith.BinInt Z testbit def
R35705:35705 compcert.lib.Integers <> i:298 var
R35695:35700 compcert.lib.Integers Make signed def
R35702:35702 compcert.lib.Integers <> x:297 var
R35709:35715 compcert.lib.Integers Make testbit def
R35723:35725 compcert.lib.Coqlib <> zlt def
R35729:35737 compcert.lib.Integers Make zwordsize def
R35727:35727 compcert.lib.Integers <> i:298 var
R35760:35762 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R35751:35759 compcert.lib.Integers Make zwordsize def
R35744:35744 compcert.lib.Integers <> i:298 var
R35717:35717 compcert.lib.Integers <> x:297 var
R35673:35676 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R35677:35677 compcert.lib.Integers <> i:298 var
R35796:35798 compcert.lib.Coqlib <> zlt def
R35802:35810 compcert.lib.Integers Make zwordsize def
R35796:35798 compcert.lib.Coqlib <> zlt def
R35802:35810 compcert.lib.Integers Make zwordsize def
R35824:35836 compcert.lib.Integers Make same_bits_eqm thm
R35824:35836 compcert.lib.Integers Make same_bits_eqm thm
R35845:35863 compcert.lib.Integers Make eqm_signed_unsigned thm
R35845:35863 compcert.lib.Integers Make eqm_signed_unsigned thm
R35884:35889 compcert.lib.Integers Make signed def
R35900:35919 compcert.lib.Integers Make sign_bit_of_unsigned thm
R35900:35919 compcert.lib.Integers Make sign_bit_of_unsigned thm
R35900:35919 compcert.lib.Integers Make sign_bit_of_unsigned thm
R35932:35934 compcert.lib.Coqlib <> zlt def
R35949:35960 compcert.lib.Integers Make half_modulus def
R35937:35944 compcert.lib.Integers Make unsigned def
R35932:35934 compcert.lib.Coqlib <> zlt def
R35949:35960 compcert.lib.Integers Make half_modulus def
R35937:35944 compcert.lib.Integers Make unsigned def
R35996:36003 compcert.lib.Integers Make wordsize def
R35976:35989 compcert.lib.Zbits <> Ztestbit_above thm
R35996:36003 compcert.lib.Integers Make wordsize def
R35976:35989 compcert.lib.Zbits <> Ztestbit_above thm
R36012:36025 compcert.lib.Integers Make unsigned_range thm
R36012:36025 compcert.lib.Integers Make unsigned_range thm
R36070:36077 compcert.lib.Integers Make wordsize def
R36046:36063 compcert.lib.Zbits <> Ztestbit_above_neg thm
R36070:36077 compcert.lib.Integers Make wordsize def
R36046:36063 compcert.lib.Zbits <> Ztestbit_above_neg thm
R36091:36097 compcert.lib.Integers Make modulus def
R36091:36097 compcert.lib.Integers Make modulus def
R36112:36125 compcert.lib.Integers Make unsigned_range thm
R36112:36125 compcert.lib.Integers Make unsigned_range thm
prf 36156:36162 Make bits_le
binder 36174:36174 <> x:299
binder 36176:36176 <> y:300
R36181:36181 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36254:36260 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36271:36274 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R36261:36268 compcert.lib.Integers Make unsigned def
R36270:36270 compcert.lib.Integers <> x:299 var
R36275:36282 compcert.lib.Integers Make unsigned def
R36284:36284 compcert.lib.Integers <> y:300 var
binder 36189:36189 <> i:301
R36210:36213 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36232:36235 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36247:36249 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36236:36242 compcert.lib.Integers Make testbit def
R36246:36246 compcert.lib.Integers <> i:301 var
R36244:36244 compcert.lib.Integers <> y:300 var
R36250:36253 Coq.Init.Datatypes <> true constr
R36225:36227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36214:36220 compcert.lib.Integers Make testbit def
R36224:36224 compcert.lib.Integers <> i:301 var
R36222:36222 compcert.lib.Integers <> x:299 var
R36228:36231 Coq.Init.Datatypes <> true constr
R36193:36196 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R36198:36200 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R36197:36197 compcert.lib.Integers <> i:301 var
R36197:36197 compcert.lib.Integers <> i:301 var
R36201:36209 compcert.lib.Integers Make zwordsize def
R36310:36320 compcert.lib.Zbits <> Ztestbit_le thm
R36310:36320 compcert.lib.Zbits <> Ztestbit_le thm
R36335:36348 compcert.lib.Integers Make unsigned_range thm
R36335:36348 compcert.lib.Integers Make unsigned_range thm
R36377:36383 compcert.lib.Integers Make testbit def
R36377:36383 compcert.lib.Integers Make testbit def
R36401:36403 compcert.lib.Coqlib <> zlt def
R36407:36415 compcert.lib.Integers Make zwordsize def
R36401:36403 compcert.lib.Coqlib <> zlt def
R36407:36415 compcert.lib.Integers Make zwordsize def
R36451:36457 compcert.lib.Integers Make testbit def
R36451:36457 compcert.lib.Integers Make testbit def
R36479:36488 compcert.lib.Integers Make bits_above thm
R36479:36488 compcert.lib.Integers Make bits_above thm
R36479:36488 compcert.lib.Integers Make bits_above thm
R36479:36488 compcert.lib.Integers Make bits_above thm
prf 36573:36580 Make bits_and
binder 36592:36592 <> x:302
binder 36594:36594 <> y:303
binder 36596:36596 <> i:304
R36617:36622 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36642:36644 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36623:36629 compcert.lib.Integers Make testbit def
R36641:36641 compcert.lib.Integers <> i:304 var
R36632:36634 compcert.lib.Integers Make and def
R36638:36638 compcert.lib.Integers <> y:303 var
R36636:36636 compcert.lib.Integers <> x:302 var
R36656:36659 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R36645:36651 compcert.lib.Integers Make testbit def
R36655:36655 compcert.lib.Integers <> i:304 var
R36653:36653 compcert.lib.Integers <> x:302 var
R36660:36666 compcert.lib.Integers Make testbit def
R36670:36670 compcert.lib.Integers <> i:304 var
R36668:36668 compcert.lib.Integers <> y:303 var
R36600:36603 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R36605:36607 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R36604:36604 compcert.lib.Integers <> i:304 var
R36604:36604 compcert.lib.Integers <> i:304 var
R36608:36616 compcert.lib.Integers Make zwordsize def
R36697:36699 compcert.lib.Integers Make and def
R36710:36721 compcert.lib.Integers Make testbit_repr thm
R36710:36721 compcert.lib.Integers Make testbit_repr thm
R36710:36721 compcert.lib.Integers Make testbit_repr thm
R36710:36721 compcert.lib.Integers Make testbit_repr thm
R36738:36748 Coq.ZArith.BinInt Z land_spec thm
R36738:36748 Coq.ZArith.BinInt Z land_spec thm
R36738:36748 Coq.ZArith.BinInt Z land_spec thm
prf 36774:36780 Make bits_or
binder 36792:36792 <> x:305
binder 36794:36794 <> y:306
binder 36796:36796 <> i:307
R36817:36822 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36841:36843 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36823:36829 compcert.lib.Integers Make testbit def
R36840:36840 compcert.lib.Integers <> i:307 var
R36832:36833 compcert.lib.Integers Make or def
R36837:36837 compcert.lib.Integers <> y:306 var
R36835:36835 compcert.lib.Integers <> x:305 var
R36855:36858 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R36844:36850 compcert.lib.Integers Make testbit def
R36854:36854 compcert.lib.Integers <> i:307 var
R36852:36852 compcert.lib.Integers <> x:305 var
R36859:36865 compcert.lib.Integers Make testbit def
R36869:36869 compcert.lib.Integers <> i:307 var
R36867:36867 compcert.lib.Integers <> y:306 var
R36800:36803 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R36805:36807 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R36804:36804 compcert.lib.Integers <> i:307 var
R36804:36804 compcert.lib.Integers <> i:307 var
R36808:36816 compcert.lib.Integers Make zwordsize def
R36896:36897 compcert.lib.Integers Make or def
R36908:36919 compcert.lib.Integers Make testbit_repr thm
R36908:36919 compcert.lib.Integers Make testbit_repr thm
R36908:36919 compcert.lib.Integers Make testbit_repr thm
R36908:36919 compcert.lib.Integers Make testbit_repr thm
R36936:36945 Coq.ZArith.BinInt Z lor_spec thm
R36936:36945 Coq.ZArith.BinInt Z lor_spec thm
R36936:36945 Coq.ZArith.BinInt Z lor_spec thm
prf 36971:36978 Make bits_xor
binder 36990:36990 <> x:308
binder 36992:36992 <> y:309
binder 36994:36994 <> i:310
R37015:37020 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37040:37042 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37021:37027 compcert.lib.Integers Make testbit def
R37039:37039 compcert.lib.Integers <> i:310 var
R37030:37032 compcert.lib.Integers Make xor def
R37036:37036 compcert.lib.Integers <> y:309 var
R37034:37034 compcert.lib.Integers <> x:308 var
R37043:37046 Coq.Init.Datatypes <> xorb def
R37063:37069 compcert.lib.Integers Make testbit def
R37073:37073 compcert.lib.Integers <> i:310 var
R37071:37071 compcert.lib.Integers <> y:309 var
R37049:37055 compcert.lib.Integers Make testbit def
R37059:37059 compcert.lib.Integers <> i:310 var
R37057:37057 compcert.lib.Integers <> x:308 var
R36998:37001 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R37003:37005 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R37002:37002 compcert.lib.Integers <> i:310 var
R37002:37002 compcert.lib.Integers <> i:310 var
R37006:37014 compcert.lib.Integers Make zwordsize def
R37101:37103 compcert.lib.Integers Make xor def
R37114:37125 compcert.lib.Integers Make testbit_repr thm
R37114:37125 compcert.lib.Integers Make testbit_repr thm
R37114:37125 compcert.lib.Integers Make testbit_repr thm
R37114:37125 compcert.lib.Integers Make testbit_repr thm
R37142:37152 Coq.ZArith.BinInt Z lxor_spec thm
R37142:37152 Coq.ZArith.BinInt Z lxor_spec thm
R37142:37152 Coq.ZArith.BinInt Z lxor_spec thm
prf 37178:37185 Make bits_not
binder 37197:37197 <> x:311
binder 37199:37199 <> i:312
R37220:37225 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37243:37245 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37226:37232 compcert.lib.Integers Make testbit def
R37242:37242 compcert.lib.Integers <> i:312 var
R37235:37237 compcert.lib.Integers Make not def
R37239:37239 compcert.lib.Integers <> x:311 var
R37246:37249 Coq.Init.Datatypes <> negb def
R37252:37258 compcert.lib.Integers Make testbit def
R37262:37262 compcert.lib.Integers <> i:312 var
R37260:37260 compcert.lib.Integers <> x:311 var
R37203:37206 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R37208:37210 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R37207:37207 compcert.lib.Integers <> i:312 var
R37207:37207 compcert.lib.Integers <> i:312 var
R37211:37219 compcert.lib.Integers Make zwordsize def
R37290:37292 compcert.lib.Integers Make not def
R37303:37310 compcert.lib.Integers Make bits_xor thm
R37303:37310 compcert.lib.Integers Make bits_xor thm
R37303:37310 compcert.lib.Integers Make bits_xor thm
R37303:37310 compcert.lib.Integers Make bits_xor thm
R37327:37335 compcert.lib.Integers Make bits_mone thm
R37327:37335 compcert.lib.Integers Make bits_mone thm
R37327:37335 compcert.lib.Integers Make bits_mone thm
R37327:37335 compcert.lib.Integers Make bits_mone thm
R37363:37370 compcert.lib.Integers Make bits_and thm
R37372:37378 compcert.lib.Integers Make bits_or thm
R37380:37387 compcert.lib.Integers Make bits_xor thm
R37389:37396 compcert.lib.Integers Make bits_not thm
prf 37414:37423 Make and_commut
binder 37433:37433 <> x:313
binder 37435:37435 <> y:314
R37445:37447 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37438:37440 compcert.lib.Integers Make and def
R37444:37444 compcert.lib.Integers <> y:314 var
R37442:37442 compcert.lib.Integers <> x:313 var
R37448:37450 compcert.lib.Integers Make and def
R37454:37454 compcert.lib.Integers <> x:313 var
R37452:37452 compcert.lib.Integers <> y:314 var
prf 37491:37499 Make and_assoc
binder 37509:37509 <> x:315
binder 37511:37511 <> y:316
binder 37513:37513 <> z:317
R37531:37533 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37516:37518 compcert.lib.Integers Make and def
R37530:37530 compcert.lib.Integers <> z:317 var
R37521:37523 compcert.lib.Integers Make and def
R37527:37527 compcert.lib.Integers <> y:316 var
R37525:37525 compcert.lib.Integers <> x:315 var
R37534:37536 compcert.lib.Integers Make and def
R37541:37543 compcert.lib.Integers Make and def
R37547:37547 compcert.lib.Integers <> z:317 var
R37545:37545 compcert.lib.Integers <> y:316 var
R37538:37538 compcert.lib.Integers <> x:315 var
prf 37585:37592 Make and_zero
binder 37602:37602 <> x:318
R37615:37617 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37605:37607 compcert.lib.Integers Make and def
R37611:37614 compcert.lib.Integers Make zero def
R37609:37609 compcert.lib.Integers <> x:318 var
R37618:37621 compcert.lib.Integers Make zero def
R37650:37661 Coq.Bool.Bool <> andb_b_false syndef
R37650:37661 Coq.Bool.Bool <> andb_b_false syndef
prf 37680:37689 Make and_zero_l
binder 37699:37699 <> x:319
R37712:37714 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37702:37704 compcert.lib.Integers Make and def
R37711:37711 compcert.lib.Integers <> x:319 var
R37706:37709 compcert.lib.Integers Make zero def
R37715:37718 compcert.lib.Integers Make zero def
R37746:37755 compcert.lib.Integers Make and_commut thm
R37746:37755 compcert.lib.Integers Make and_commut thm
R37746:37755 compcert.lib.Integers Make and_commut thm
R37764:37771 compcert.lib.Integers Make and_zero thm
R37764:37771 compcert.lib.Integers Make and_zero thm
prf 37788:37795 Make and_mone
binder 37805:37805 <> x:320
R37818:37820 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37808:37810 compcert.lib.Integers Make and def
R37814:37817 compcert.lib.Integers Make mone def
R37812:37812 compcert.lib.Integers <> x:320 var
R37821:37821 compcert.lib.Integers <> x:320 var
R37850:37860 Coq.Bool.Bool <> andb_b_true syndef
R37850:37860 Coq.Bool.Bool <> andb_b_true syndef
prf 37879:37888 Make and_mone_l
binder 37898:37898 <> x:321
R37911:37913 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37901:37903 compcert.lib.Integers Make and def
R37910:37910 compcert.lib.Integers <> x:321 var
R37905:37908 compcert.lib.Integers Make mone def
R37914:37914 compcert.lib.Integers <> x:321 var
R37942:37951 compcert.lib.Integers Make and_commut thm
R37942:37951 compcert.lib.Integers Make and_commut thm
R37942:37951 compcert.lib.Integers Make and_commut thm
R37960:37967 compcert.lib.Integers Make and_mone thm
R37960:37967 compcert.lib.Integers Make and_mone thm
prf 37984:37991 Make and_idem
binder 38001:38001 <> x:322
R38011:38013 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38004:38006 compcert.lib.Integers Make and def
R38010:38010 compcert.lib.Integers <> x:322 var
R38008:38008 compcert.lib.Integers <> x:322 var
R38014:38014 compcert.lib.Integers <> x:322 var
R38047:38053 compcert.lib.Integers Make testbit def
R38047:38053 compcert.lib.Integers Make testbit def
prf 38081:38089 Make or_commut
binder 38099:38099 <> x:323
binder 38101:38101 <> y:324
R38110:38112 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38104:38105 compcert.lib.Integers Make or def
R38109:38109 compcert.lib.Integers <> y:324 var
R38107:38107 compcert.lib.Integers <> x:323 var
R38113:38114 compcert.lib.Integers Make or def
R38118:38118 compcert.lib.Integers <> x:323 var
R38116:38116 compcert.lib.Integers <> y:324 var
prf 38155:38162 Make or_assoc
binder 38172:38172 <> x:325
binder 38174:38174 <> y:326
binder 38176:38176 <> z:327
R38192:38194 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38179:38180 compcert.lib.Integers Make or def
R38191:38191 compcert.lib.Integers <> z:327 var
R38183:38184 compcert.lib.Integers Make or def
R38188:38188 compcert.lib.Integers <> y:326 var
R38186:38186 compcert.lib.Integers <> x:325 var
R38195:38196 compcert.lib.Integers Make or def
R38201:38202 compcert.lib.Integers Make or def
R38206:38206 compcert.lib.Integers <> z:327 var
R38204:38204 compcert.lib.Integers <> y:326 var
R38198:38198 compcert.lib.Integers <> x:325 var
prf 38244:38250 Make or_zero
binder 38260:38260 <> x:328
R38272:38274 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38263:38264 compcert.lib.Integers Make or def
R38268:38271 compcert.lib.Integers Make zero def
R38266:38266 compcert.lib.Integers <> x:328 var
R38275:38275 compcert.lib.Integers <> x:328 var
prf 38314:38322 Make or_zero_l
binder 38332:38332 <> x:329
R38344:38346 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38335:38336 compcert.lib.Integers Make or def
R38343:38343 compcert.lib.Integers <> x:329 var
R38338:38341 compcert.lib.Integers Make zero def
R38347:38347 compcert.lib.Integers <> x:329 var
R38375:38383 compcert.lib.Integers Make or_commut thm
R38375:38383 compcert.lib.Integers Make or_commut thm
R38375:38383 compcert.lib.Integers Make or_commut thm
R38392:38398 compcert.lib.Integers Make or_zero thm
R38392:38398 compcert.lib.Integers Make or_zero thm
prf 38415:38421 Make or_mone
binder 38431:38431 <> x:330
R38443:38445 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38434:38435 compcert.lib.Integers Make or def
R38439:38442 compcert.lib.Integers Make mone def
R38437:38437 compcert.lib.Integers <> x:330 var
R38446:38449 compcert.lib.Integers Make mone def
prf 38486:38492 Make or_idem
binder 38502:38502 <> x:331
R38511:38513 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38505:38506 compcert.lib.Integers Make or def
R38510:38510 compcert.lib.Integers <> x:331 var
R38508:38508 compcert.lib.Integers <> x:331 var
R38514:38514 compcert.lib.Integers <> x:331 var
R38547:38553 compcert.lib.Integers Make testbit def
R38547:38553 compcert.lib.Integers Make testbit def
prf 38581:38594 Make and_or_distrib
binder 38606:38606 <> x:332
binder 38608:38608 <> y:333
binder 38610:38610 <> z:334
R38629:38631 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38615:38617 compcert.lib.Integers Make and def
R38622:38623 compcert.lib.Integers Make or def
R38627:38627 compcert.lib.Integers <> z:334 var
R38625:38625 compcert.lib.Integers <> y:333 var
R38619:38619 compcert.lib.Integers <> x:332 var
R38632:38633 compcert.lib.Integers Make or def
R38646:38648 compcert.lib.Integers Make and def
R38652:38652 compcert.lib.Integers <> z:334 var
R38650:38650 compcert.lib.Integers <> x:332 var
R38636:38638 compcert.lib.Integers Make and def
R38642:38642 compcert.lib.Integers <> y:333 var
R38640:38640 compcert.lib.Integers <> x:332 var
R38682:38690 Coq.Bool.Bool <> demorgan1 syndef
R38682:38690 Coq.Bool.Bool <> demorgan1 syndef
prf 38709:38724 Make and_or_distrib_l
binder 38736:38736 <> x:335
binder 38738:38738 <> y:336
binder 38740:38740 <> z:337
R38759:38761 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38745:38747 compcert.lib.Integers Make and def
R38758:38758 compcert.lib.Integers <> z:337 var
R38750:38751 compcert.lib.Integers Make or def
R38755:38755 compcert.lib.Integers <> y:336 var
R38753:38753 compcert.lib.Integers <> x:335 var
R38762:38763 compcert.lib.Integers Make or def
R38776:38778 compcert.lib.Integers Make and def
R38782:38782 compcert.lib.Integers <> z:337 var
R38780:38780 compcert.lib.Integers <> y:336 var
R38766:38768 compcert.lib.Integers Make and def
R38772:38772 compcert.lib.Integers <> z:337 var
R38770:38770 compcert.lib.Integers <> x:335 var
R38812:38821 compcert.lib.Integers Make and_commut thm
R38824:38825 compcert.lib.Integers Make or def
R38812:38821 compcert.lib.Integers Make and_commut thm
R38824:38825 compcert.lib.Integers Make or def
R38812:38821 compcert.lib.Integers Make and_commut thm
R38824:38825 compcert.lib.Integers Make or def
R38842:38855 compcert.lib.Integers Make and_or_distrib thm
R38842:38855 compcert.lib.Integers Make and_or_distrib thm
R38842:38855 compcert.lib.Integers Make and_or_distrib thm
R38873:38882 compcert.lib.Integers Make and_commut thm
R38873:38882 compcert.lib.Integers Make and_commut thm
R38873:38882 compcert.lib.Integers Make and_commut thm
prf 38899:38912 Make or_and_distrib
binder 38924:38924 <> x:338
binder 38926:38926 <> y:339
binder 38928:38928 <> z:340
R38947:38949 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38933:38934 compcert.lib.Integers Make or def
R38939:38941 compcert.lib.Integers Make and def
R38945:38945 compcert.lib.Integers <> z:340 var
R38943:38943 compcert.lib.Integers <> y:339 var
R38936:38936 compcert.lib.Integers <> x:338 var
R38950:38952 compcert.lib.Integers Make and def
R38964:38965 compcert.lib.Integers Make or def
R38969:38969 compcert.lib.Integers <> z:340 var
R38967:38967 compcert.lib.Integers <> x:338 var
R38955:38956 compcert.lib.Integers Make or def
R38960:38960 compcert.lib.Integers <> y:339 var
R38958:38958 compcert.lib.Integers <> x:338 var
R38999:39016 Coq.Bool.Bool <> orb_andb_distrib_r thm
R38999:39016 Coq.Bool.Bool <> orb_andb_distrib_r thm
prf 39035:39050 Make or_and_distrib_l
binder 39062:39062 <> x:341
binder 39064:39064 <> y:342
binder 39066:39066 <> z:343
R39085:39087 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39071:39072 compcert.lib.Integers Make or def
R39084:39084 compcert.lib.Integers <> z:343 var
R39075:39077 compcert.lib.Integers Make and def
R39081:39081 compcert.lib.Integers <> y:342 var
R39079:39079 compcert.lib.Integers <> x:341 var
R39088:39090 compcert.lib.Integers Make and def
R39102:39103 compcert.lib.Integers Make or def
R39107:39107 compcert.lib.Integers <> z:343 var
R39105:39105 compcert.lib.Integers <> y:342 var
R39093:39094 compcert.lib.Integers Make or def
R39098:39098 compcert.lib.Integers <> z:343 var
R39096:39096 compcert.lib.Integers <> x:341 var
R39137:39145 compcert.lib.Integers Make or_commut thm
R39148:39150 compcert.lib.Integers Make and def
R39137:39145 compcert.lib.Integers Make or_commut thm
R39148:39150 compcert.lib.Integers Make and def
R39137:39145 compcert.lib.Integers Make or_commut thm
R39148:39150 compcert.lib.Integers Make and def
R39167:39180 compcert.lib.Integers Make or_and_distrib thm
R39167:39180 compcert.lib.Integers Make or_and_distrib thm
R39167:39180 compcert.lib.Integers Make or_and_distrib thm
R39198:39206 compcert.lib.Integers Make or_commut thm
R39198:39206 compcert.lib.Integers Make or_commut thm
R39198:39206 compcert.lib.Integers Make or_commut thm
prf 39223:39235 Make and_or_absorb
binder 39245:39245 <> x:344
binder 39247:39247 <> y:345
R39264:39266 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39250:39252 compcert.lib.Integers Make and def
R39257:39258 compcert.lib.Integers Make or def
R39262:39262 compcert.lib.Integers <> y:345 var
R39260:39260 compcert.lib.Integers <> x:344 var
R39254:39254 compcert.lib.Integers <> x:344 var
R39267:39267 compcert.lib.Integers <> x:344 var
binder 39307:39307 <> a:346
binder 39309:39309 <> b:347
R39325:39327 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39313:39317 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R39324:39324 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R39312:39312 compcert.lib.Integers <> a:346 var
R39319:39322 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R39318:39318 compcert.lib.Integers <> a:346 var
R39323:39323 compcert.lib.Integers <> b:347 var
R39328:39328 compcert.lib.Integers <> a:346 var
binder 39307:39307 <> a:348
binder 39309:39309 <> b:349
R39325:39327 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39313:39317 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R39324:39324 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R39312:39312 compcert.lib.Integers <> a:348 var
R39319:39322 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R39318:39318 compcert.lib.Integers <> a:348 var
R39323:39323 compcert.lib.Integers <> b:349 var
R39328:39328 compcert.lib.Integers <> a:348 var
prf 39368:39380 Make or_and_absorb
binder 39390:39390 <> x:350
binder 39392:39392 <> y:351
R39409:39411 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39395:39396 compcert.lib.Integers Make or def
R39401:39403 compcert.lib.Integers Make and def
R39407:39407 compcert.lib.Integers <> y:351 var
R39405:39405 compcert.lib.Integers <> x:350 var
R39398:39398 compcert.lib.Integers <> x:350 var
R39412:39412 compcert.lib.Integers <> x:350 var
binder 39452:39452 <> a:352
binder 39454:39454 <> b:353
R39470:39472 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39458:39462 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R39469:39469 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R39457:39457 compcert.lib.Integers <> a:352 var
R39464:39467 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R39463:39463 compcert.lib.Integers <> a:352 var
R39468:39468 compcert.lib.Integers <> b:353 var
R39473:39473 compcert.lib.Integers <> a:352 var
binder 39452:39452 <> a:354
binder 39454:39454 <> b:355
R39470:39472 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39458:39462 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R39469:39469 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R39457:39457 compcert.lib.Integers <> a:354 var
R39464:39467 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R39463:39463 compcert.lib.Integers <> a:354 var
R39468:39468 compcert.lib.Integers <> b:355 var
R39473:39473 compcert.lib.Integers <> a:354 var
prf 39513:39522 Make xor_commut
binder 39532:39532 <> x:356
binder 39534:39534 <> y:357
R39544:39546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39537:39539 compcert.lib.Integers Make xor def
R39543:39543 compcert.lib.Integers <> y:357 var
R39541:39541 compcert.lib.Integers <> x:356 var
R39547:39549 compcert.lib.Integers Make xor def
R39553:39553 compcert.lib.Integers <> x:356 var
R39551:39551 compcert.lib.Integers <> y:357 var
R39582:39590 Coq.Bool.Bool <> xorb_comm thm
R39582:39590 Coq.Bool.Bool <> xorb_comm thm
prf 39607:39615 Make xor_assoc
binder 39625:39625 <> x:358
binder 39627:39627 <> y:359
binder 39629:39629 <> z:360
R39647:39649 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39632:39634 compcert.lib.Integers Make xor def
R39646:39646 compcert.lib.Integers <> z:360 var
R39637:39639 compcert.lib.Integers Make xor def
R39643:39643 compcert.lib.Integers <> y:359 var
R39641:39641 compcert.lib.Integers <> x:358 var
R39650:39652 compcert.lib.Integers Make xor def
R39657:39659 compcert.lib.Integers Make xor def
R39663:39663 compcert.lib.Integers <> z:360 var
R39661:39661 compcert.lib.Integers <> y:359 var
R39654:39654 compcert.lib.Integers <> x:358 var
R39693:39702 Coq.Bool.Bool <> xorb_assoc syndef
R39693:39702 Coq.Bool.Bool <> xorb_assoc syndef
prf 39719:39726 Make xor_zero
binder 39736:39736 <> x:361
R39749:39751 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39739:39741 compcert.lib.Integers Make xor def
R39745:39748 compcert.lib.Integers Make zero def
R39743:39743 compcert.lib.Integers <> x:361 var
R39752:39752 compcert.lib.Integers <> x:361 var
R39781:39790 Coq.Bool.Bool <> xorb_false syndef
R39781:39790 Coq.Bool.Bool <> xorb_false syndef
prf 39809:39818 Make xor_zero_l
binder 39828:39828 <> x:362
R39841:39843 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39831:39833 compcert.lib.Integers Make xor def
R39840:39840 compcert.lib.Integers <> x:362 var
R39835:39838 compcert.lib.Integers Make zero def
R39844:39844 compcert.lib.Integers <> x:362 var
R39872:39881 compcert.lib.Integers Make xor_commut thm
R39872:39881 compcert.lib.Integers Make xor_commut thm
R39872:39881 compcert.lib.Integers Make xor_commut thm
R39890:39897 compcert.lib.Integers Make xor_zero thm
R39890:39897 compcert.lib.Integers Make xor_zero thm
prf 39914:39921 Make xor_idem
binder 39931:39931 <> x:363
R39941:39943 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39934:39936 compcert.lib.Integers Make xor def
R39940:39940 compcert.lib.Integers <> x:363 var
R39938:39938 compcert.lib.Integers <> x:363 var
R39944:39947 compcert.lib.Integers Make zero def
R39976:39989 Coq.Bool.Bool <> xorb_nilpotent thm
R39976:39989 Coq.Bool.Bool <> xorb_nilpotent thm
prf 40006:40017 Make xor_zero_one
R40032:40034 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40020:40022 compcert.lib.Integers Make xor def
R40029:40031 compcert.lib.Integers Make one def
R40024:40027 compcert.lib.Integers Make zero def
R40035:40037 compcert.lib.Integers Make one def
R40055:40064 compcert.lib.Integers Make xor_commut thm
R40055:40064 compcert.lib.Integers Make xor_commut thm
R40055:40064 compcert.lib.Integers Make xor_commut thm
R40073:40080 compcert.lib.Integers Make xor_zero thm
R40073:40080 compcert.lib.Integers Make xor_zero thm
prf 40097:40107 Make xor_one_one
R40121:40123 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40110:40112 compcert.lib.Integers Make xor def
R40118:40120 compcert.lib.Integers Make one def
R40114:40116 compcert.lib.Integers Make one def
R40124:40127 compcert.lib.Integers Make zero def
R40143:40150 compcert.lib.Integers Make xor_idem thm
R40143:40150 compcert.lib.Integers Make xor_idem thm
prf 40167:40180 Make xor_zero_equal
binder 40190:40190 <> x:364
binder 40192:40192 <> y:365
R40209:40212 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40214:40216 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40213:40213 compcert.lib.Integers <> x:364 var
R40217:40217 compcert.lib.Integers <> y:365 var
R40202:40204 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40195:40197 compcert.lib.Integers Make xor def
R40201:40201 compcert.lib.Integers <> y:365 var
R40199:40199 compcert.lib.Integers <> x:364 var
R40205:40208 compcert.lib.Integers Make zero def
R40243:40254 compcert.lib.Integers Make same_bits_eq thm
R40243:40254 compcert.lib.Integers Make same_bits_eq thm
R40307:40309 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40275:40278 Coq.Init.Datatypes <> xorb def
R40295:40301 compcert.lib.Integers Make testbit def
R40281:40287 compcert.lib.Integers Make testbit def
R40310:40314 Coq.Init.Datatypes <> false constr
R40307:40309 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40275:40278 Coq.Init.Datatypes <> xorb def
R40295:40301 compcert.lib.Integers Make testbit def
R40281:40287 compcert.lib.Integers Make testbit def
R40310:40314 Coq.Init.Datatypes <> false constr
R40333:40340 compcert.lib.Integers Make bits_xor thm
R40333:40340 compcert.lib.Integers Make bits_xor thm
R40333:40340 compcert.lib.Integers Make bits_xor thm
R40333:40340 compcert.lib.Integers Make bits_xor thm
R40366:40374 compcert.lib.Integers Make bits_zero thm
R40366:40374 compcert.lib.Integers Make bits_zero thm
R40389:40395 compcert.lib.Integers Make testbit def
R40413:40419 compcert.lib.Integers Make testbit def
R40389:40395 compcert.lib.Integers Make testbit def
R40413:40419 compcert.lib.Integers Make testbit def
R40413:40419 compcert.lib.Integers Make testbit def
prf 40470:40480 Make xor_is_zero
binder 40490:40490 <> x:366
binder 40492:40492 <> y:367
R40512:40514 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40495:40496 compcert.lib.Integers Make eq def
R40508:40511 compcert.lib.Integers Make zero def
R40499:40501 compcert.lib.Integers Make xor def
R40505:40505 compcert.lib.Integers <> y:367 var
R40503:40503 compcert.lib.Integers <> x:366 var
R40515:40516 compcert.lib.Integers Make eq def
R40520:40520 compcert.lib.Integers <> y:367 var
R40518:40518 compcert.lib.Integers <> x:366 var
R40561:40563 compcert.lib.Integers Make xor def
R40549:40550 compcert.lib.Integers Make eq def
R40552:40558 compcert.lib.Integers Make eq_spec thm
R40561:40563 compcert.lib.Integers Make xor def
R40570:40573 compcert.lib.Integers Make zero def
R40584:40597 compcert.lib.Integers Make xor_zero_equal thm
R40584:40597 compcert.lib.Integers Make xor_zero_equal thm
R40622:40628 compcert.lib.Integers Make eq_true thm
R40622:40628 compcert.lib.Integers Make eq_true thm
R40622:40628 compcert.lib.Integers Make eq_true thm
R40649:40650 compcert.lib.Integers Make eq def
R40652:40658 compcert.lib.Integers Make eq_spec thm
R40690:40697 compcert.lib.Integers Make xor_idem thm
R40690:40697 compcert.lib.Integers Make xor_idem thm
prf 40724:40738 Make and_xor_distrib
binder 40750:40750 <> x:368
binder 40752:40752 <> y:369
binder 40754:40754 <> z:370
R40774:40776 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40759:40761 compcert.lib.Integers Make and def
R40766:40768 compcert.lib.Integers Make xor def
R40772:40772 compcert.lib.Integers <> z:370 var
R40770:40770 compcert.lib.Integers <> y:369 var
R40763:40763 compcert.lib.Integers <> x:368 var
R40777:40779 compcert.lib.Integers Make xor def
R40792:40794 compcert.lib.Integers Make and def
R40798:40798 compcert.lib.Integers <> z:370 var
R40796:40796 compcert.lib.Integers <> x:368 var
R40782:40784 compcert.lib.Integers Make and def
R40788:40788 compcert.lib.Integers <> y:369 var
R40786:40786 compcert.lib.Integers <> x:368 var
binder 40839:40839 <> a:371
binder 40841:40841 <> b:372
binder 40843:40843 <> c:373
R40861:40863 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40847:40851 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40860:40860 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40846:40846 compcert.lib.Integers <> a:371 var
R40852:40855 Coq.Init.Datatypes <> xorb def
R40859:40859 compcert.lib.Integers <> c:373 var
R40857:40857 compcert.lib.Integers <> b:372 var
R40864:40867 Coq.Init.Datatypes <> xorb def
R40880:40883 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40879:40879 compcert.lib.Integers <> a:371 var
R40884:40884 compcert.lib.Integers <> c:373 var
R40871:40874 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40870:40870 compcert.lib.Integers <> a:371 var
R40875:40875 compcert.lib.Integers <> b:372 var
binder 40839:40839 <> a:374
binder 40841:40841 <> b:375
binder 40843:40843 <> c:376
R40861:40863 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40847:40851 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40860:40860 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40846:40846 compcert.lib.Integers <> a:374 var
R40852:40855 Coq.Init.Datatypes <> xorb def
R40859:40859 compcert.lib.Integers <> c:376 var
R40857:40857 compcert.lib.Integers <> b:375 var
R40864:40867 Coq.Init.Datatypes <> xorb def
R40880:40883 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40879:40879 compcert.lib.Integers <> a:374 var
R40884:40884 compcert.lib.Integers <> c:376 var
R40871:40874 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40870:40870 compcert.lib.Integers <> a:374 var
R40875:40875 compcert.lib.Integers <> b:375 var
prf 40925:40930 Make and_le
binder 40942:40942 <> x:377
binder 40944:40944 <> y:378
R40965:40968 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R40947:40954 compcert.lib.Integers Make unsigned def
R40957:40959 compcert.lib.Integers Make and def
R40963:40963 compcert.lib.Integers <> y:378 var
R40961:40961 compcert.lib.Integers <> x:377 var
R40969:40976 compcert.lib.Integers Make unsigned def
R40978:40978 compcert.lib.Integers <> x:377 var
R41004:41010 compcert.lib.Integers Make bits_le thm
R41004:41010 compcert.lib.Integers Make bits_le thm
R41031:41038 compcert.lib.Integers Make bits_and thm
R41031:41038 compcert.lib.Integers Make bits_and thm
R41031:41038 compcert.lib.Integers Make bits_and thm
R41031:41038 compcert.lib.Integers Make bits_and thm
R41061:41073 Coq.Bool.Bool <> andb_true_iff thm
R41061:41073 Coq.Bool.Bool <> andb_true_iff thm
R41061:41073 Coq.Bool.Bool <> andb_true_iff thm
prf 41103:41107 Make or_le
binder 41119:41119 <> x:379
binder 41121:41121 <> y:380
R41134:41137 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R41124:41131 compcert.lib.Integers Make unsigned def
R41133:41133 compcert.lib.Integers <> x:379 var
R41138:41145 compcert.lib.Integers Make unsigned def
R41148:41149 compcert.lib.Integers Make or def
R41153:41153 compcert.lib.Integers <> y:380 var
R41151:41151 compcert.lib.Integers <> x:379 var
R41180:41186 compcert.lib.Integers Make bits_le thm
R41180:41186 compcert.lib.Integers Make bits_le thm
R41207:41213 compcert.lib.Integers Make bits_or thm
R41207:41213 compcert.lib.Integers Make bits_or thm
R41207:41213 compcert.lib.Integers Make bits_or thm
R41207:41213 compcert.lib.Integers Make bits_or thm
prf 41298:41311 Make not_involutive
R41327:41329 compcert.lib.Integers Make int rec
binder 41324:41324 <> x:381
R41344:41346 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41333:41335 compcert.lib.Integers Make not def
R41338:41340 compcert.lib.Integers Make not def
R41342:41342 compcert.lib.Integers <> x:381 var
R41347:41347 compcert.lib.Integers <> x:381 var
R41374:41376 compcert.lib.Integers Make not def
R41387:41395 compcert.lib.Integers Make xor_assoc thm
R41387:41395 compcert.lib.Integers Make xor_assoc thm
R41387:41395 compcert.lib.Integers Make xor_assoc thm
R41406:41413 compcert.lib.Integers Make xor_idem thm
R41406:41413 compcert.lib.Integers Make xor_idem thm
R41406:41413 compcert.lib.Integers Make xor_idem thm
R41422:41429 compcert.lib.Integers Make xor_zero thm
R41422:41429 compcert.lib.Integers Make xor_zero thm
prf 41446:41453 Make not_zero
R41466:41468 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41458:41460 compcert.lib.Integers Make not def
R41462:41465 compcert.lib.Integers Make zero def
R41469:41472 compcert.lib.Integers Make mone def
R41491:41493 compcert.lib.Integers Make not def
R41504:41513 compcert.lib.Integers Make xor_commut thm
R41504:41513 compcert.lib.Integers Make xor_commut thm
R41504:41513 compcert.lib.Integers Make xor_commut thm
R41522:41529 compcert.lib.Integers Make xor_zero thm
R41522:41529 compcert.lib.Integers Make xor_zero thm
prf 41546:41553 Make not_mone
R41566:41568 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41558:41560 compcert.lib.Integers Make not def
R41562:41565 compcert.lib.Integers Make mone def
R41569:41572 compcert.lib.Integers Make zero def
R41596:41609 compcert.lib.Integers Make not_involutive thm
R41611:41614 compcert.lib.Integers Make zero def
R41596:41609 compcert.lib.Integers Make not_involutive thm
R41611:41614 compcert.lib.Integers Make zero def
R41596:41609 compcert.lib.Integers Make not_involutive thm
R41611:41614 compcert.lib.Integers Make zero def
R41641:41648 compcert.lib.Integers Make not_zero thm
R41641:41648 compcert.lib.Integers Make not_zero thm
prf 41665:41678 Make not_or_and_not
binder 41690:41690 <> x:382
binder 41692:41692 <> y:383
R41707:41709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41695:41697 compcert.lib.Integers Make not def
R41700:41701 compcert.lib.Integers Make or def
R41705:41705 compcert.lib.Integers <> y:383 var
R41703:41703 compcert.lib.Integers <> x:382 var
R41710:41712 compcert.lib.Integers Make and def
R41723:41725 compcert.lib.Integers Make not def
R41727:41727 compcert.lib.Integers <> y:383 var
R41715:41717 compcert.lib.Integers Make not def
R41719:41719 compcert.lib.Integers <> x:382 var
R41757:41764 Coq.Bool.Bool <> negb_orb thm
R41757:41764 Coq.Bool.Bool <> negb_orb thm
prf 41781:41794 Make not_and_or_not
binder 41806:41806 <> x:384
binder 41808:41808 <> y:385
R41824:41826 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41811:41813 compcert.lib.Integers Make not def
R41816:41818 compcert.lib.Integers Make and def
R41822:41822 compcert.lib.Integers <> y:385 var
R41820:41820 compcert.lib.Integers <> x:384 var
R41827:41828 compcert.lib.Integers Make or def
R41839:41841 compcert.lib.Integers Make not def
R41843:41843 compcert.lib.Integers <> y:385 var
R41831:41833 compcert.lib.Integers Make not def
R41835:41835 compcert.lib.Integers <> x:384 var
R41873:41881 Coq.Bool.Bool <> negb_andb thm
R41873:41881 Coq.Bool.Bool <> negb_andb thm
prf 41898:41909 Make and_not_self
binder 41921:41921 <> x:386
R41937:41939 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41924:41926 compcert.lib.Integers Make and def
R41931:41933 compcert.lib.Integers Make not def
R41935:41935 compcert.lib.Integers <> x:386 var
R41928:41928 compcert.lib.Integers <> x:386 var
R41940:41943 compcert.lib.Integers Make zero def
prf 41980:41990 Make or_not_self
binder 42002:42002 <> x:387
R42017:42019 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42005:42006 compcert.lib.Integers Make or def
R42011:42013 compcert.lib.Integers Make not def
R42015:42015 compcert.lib.Integers <> x:387 var
R42008:42008 compcert.lib.Integers <> x:387 var
R42020:42023 compcert.lib.Integers Make mone def
prf 42060:42071 Make xor_not_self
binder 42083:42083 <> x:388
R42099:42101 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42086:42088 compcert.lib.Integers Make xor def
R42093:42095 compcert.lib.Integers Make not def
R42097:42097 compcert.lib.Integers <> x:388 var
R42090:42090 compcert.lib.Integers <> x:388 var
R42102:42105 compcert.lib.Integers Make mone def
R42138:42144 compcert.lib.Integers Make testbit def
R42138:42144 compcert.lib.Integers Make testbit def
prf 42170:42181 Make unsigned_not
binder 42193:42193 <> x:389
R42212:42214 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42196:42203 compcert.lib.Integers Make unsigned def
R42206:42208 compcert.lib.Integers Make not def
R42210:42210 compcert.lib.Integers <> x:389 var
R42227:42229 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R42215:42226 compcert.lib.Integers Make max_unsigned def
R42230:42237 compcert.lib.Integers Make unsigned def
R42239:42239 compcert.lib.Integers <> x:389 var
R42273:42280 compcert.lib.Integers Make unsigned def
R42283:42286 compcert.lib.Integers Make repr def
R42299:42301 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R42288:42288 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42289:42296 compcert.lib.Integers Make unsigned def
R42273:42280 compcert.lib.Integers Make unsigned def
R42283:42286 compcert.lib.Integers Make repr def
R42299:42301 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R42288:42288 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42289:42296 compcert.lib.Integers Make unsigned def
R42338:42349 compcert.lib.Integers Make testbit_repr thm
R42338:42349 compcert.lib.Integers Make testbit_repr thm
R42338:42349 compcert.lib.Integers Make testbit_repr thm
R42338:42349 compcert.lib.Integers Make testbit_repr thm
R42374:42389 compcert.lib.Zbits <> Z_one_complement thm
R42374:42389 compcert.lib.Zbits <> Z_one_complement thm
R42409:42424 compcert.lib.Integers Make unsigned_repr_eq thm
R42409:42424 compcert.lib.Integers Make unsigned_repr_eq thm
R42409:42424 compcert.lib.Integers Make unsigned_repr_eq thm
R42433:42443 compcert.lib.Coqlib <> Zmod_unique thm
R42433:42443 compcert.lib.Coqlib <> Zmod_unique thm
R42465:42476 compcert.lib.Integers Make max_unsigned def
R42500:42513 compcert.lib.Integers Make unsigned_range thm
R42500:42513 compcert.lib.Integers Make unsigned_range thm
R42526:42537 compcert.lib.Integers Make max_unsigned def
prf 42561:42567 Make not_neg
binder 42579:42579 <> x:390
R42587:42589 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42582:42584 compcert.lib.Integers Make not def
R42586:42586 compcert.lib.Integers <> x:390 var
R42590:42592 compcert.lib.Integers Make add def
R42602:42605 compcert.lib.Integers Make mone def
R42595:42597 compcert.lib.Integers Make neg def
R42599:42599 compcert.lib.Integers <> x:390 var
R42642:42654 compcert.lib.Integers Make repr_unsigned thm
R42642:42654 compcert.lib.Integers Make repr_unsigned thm
R42642:42654 compcert.lib.Integers Make repr_unsigned thm
R42672:42674 compcert.lib.Integers Make add def
R42688:42699 compcert.lib.Integers Make testbit_repr thm
R42688:42699 compcert.lib.Integers Make testbit_repr thm
R42688:42699 compcert.lib.Integers Make testbit_repr thm
R42688:42699 compcert.lib.Integers Make testbit_repr thm
R42688:42699 compcert.lib.Integers Make testbit_repr thm
R42688:42699 compcert.lib.Integers Make testbit_repr thm
R42688:42699 compcert.lib.Integers Make testbit_repr thm
R42724:42732 Coq.ZArith.BinInt Z testbit def
R42746:42748 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R42735:42735 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42736:42743 compcert.lib.Integers Make unsigned def
R42724:42732 Coq.ZArith.BinInt Z testbit def
R42746:42748 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R42735:42735 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42736:42743 compcert.lib.Integers Make unsigned def
R42774:42789 compcert.lib.Zbits <> Z_one_complement thm
R42774:42789 compcert.lib.Zbits <> Z_one_complement thm
R42807:42819 compcert.lib.Integers Make same_bits_eqm thm
R42807:42819 compcert.lib.Integers Make same_bits_eqm thm
R42850:42852 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R42839:42839 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42840:42847 compcert.lib.Integers Make unsigned def
R42873:42876 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R42879:42879 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R42862:42862 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42863:42870 compcert.lib.Integers Make unsigned def
R42850:42852 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R42839:42839 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42840:42847 compcert.lib.Integers Make unsigned def
R42873:42876 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R42879:42879 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R42862:42862 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42863:42870 compcert.lib.Integers Make unsigned def
R42900:42906 compcert.lib.Integers Make eqm_add thm
R42900:42906 compcert.lib.Integers Make eqm_add thm
R42918:42920 compcert.lib.Integers Make neg def
R42929:42945 compcert.lib.Integers Make eqm_unsigned_repr thm
R42929:42945 compcert.lib.Integers Make eqm_unsigned_repr thm
R42958:42970 compcert.lib.Integers Make unsigned_mone thm
R42958:42970 compcert.lib.Integers Make unsigned_mone thm
R42958:42970 compcert.lib.Integers Make unsigned_mone thm
prf 43006:43012 Make neg_not
binder 43024:43024 <> x:391
R43032:43034 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43027:43029 compcert.lib.Integers Make neg def
R43031:43031 compcert.lib.Integers <> x:391 var
R43035:43037 compcert.lib.Integers Make add def
R43047:43049 compcert.lib.Integers Make one def
R43040:43042 compcert.lib.Integers Make not def
R43044:43044 compcert.lib.Integers <> x:391 var
R43077:43083 compcert.lib.Integers Make not_neg thm
R43077:43083 compcert.lib.Integers Make not_neg thm
R43077:43083 compcert.lib.Integers Make not_neg thm
R43094:43102 compcert.lib.Integers Make add_assoc thm
R43094:43102 compcert.lib.Integers Make add_assoc thm
R43094:43102 compcert.lib.Integers Make add_assoc thm
R43116:43118 compcert.lib.Integers Make add def
R43125:43127 compcert.lib.Integers Make one def
R43120:43123 compcert.lib.Integers Make mone def
R43135:43138 compcert.lib.Integers Make zero def
R43116:43118 compcert.lib.Integers Make add def
R43125:43127 compcert.lib.Integers Make one def
R43120:43123 compcert.lib.Integers Make mone def
R43135:43138 compcert.lib.Integers Make zero def
R43149:43156 compcert.lib.Integers Make add_zero thm
R43149:43156 compcert.lib.Integers Make add_zero thm
R43149:43156 compcert.lib.Integers Make add_zero thm
R43173:43184 compcert.lib.Integers Make eqm_samerepr thm
R43173:43184 compcert.lib.Integers Make eqm_samerepr thm
R43195:43207 compcert.lib.Integers Make unsigned_mone thm
R43195:43207 compcert.lib.Integers Make unsigned_mone thm
R43195:43207 compcert.lib.Integers Make unsigned_mone thm
R43218:43229 compcert.lib.Integers Make unsigned_one thm
R43218:43229 compcert.lib.Integers Make unsigned_one thm
R43218:43229 compcert.lib.Integers Make unsigned_one thm
prf 43267:43277 Make sub_add_not
binder 43289:43289 <> x:392
binder 43291:43291 <> y:393
R43301:43303 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43294:43296 compcert.lib.Integers Make sub def
R43300:43300 compcert.lib.Integers <> y:393 var
R43298:43298 compcert.lib.Integers <> x:392 var
R43304:43306 compcert.lib.Integers Make add def
R43324:43326 compcert.lib.Integers Make one def
R43309:43311 compcert.lib.Integers Make add def
R43316:43318 compcert.lib.Integers Make not def
R43320:43320 compcert.lib.Integers <> y:393 var
R43313:43313 compcert.lib.Integers <> x:392 var
R43354:43364 compcert.lib.Integers Make sub_add_opp thm
R43354:43364 compcert.lib.Integers Make sub_add_opp thm
R43354:43364 compcert.lib.Integers Make sub_add_opp thm
R43375:43381 compcert.lib.Integers Make neg_not thm
R43375:43381 compcert.lib.Integers Make neg_not thm
R43375:43381 compcert.lib.Integers Make neg_not thm
R43396:43404 compcert.lib.Integers Make add_assoc thm
R43396:43404 compcert.lib.Integers Make add_assoc thm
R43396:43404 compcert.lib.Integers Make add_assoc thm
R43396:43404 compcert.lib.Integers Make add_assoc thm
prf 43427:43439 Make sub_add_not_3
binder 43451:43451 <> x:394
binder 43453:43453 <> y:395
binder 43455:43455 <> b:396
R43479:43484 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43500:43502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43485:43487 compcert.lib.Integers Make sub def
R43499:43499 compcert.lib.Integers <> b:396 var
R43490:43492 compcert.lib.Integers Make sub def
R43496:43496 compcert.lib.Integers <> y:395 var
R43494:43494 compcert.lib.Integers <> x:394 var
R43503:43505 compcert.lib.Integers Make add def
R43524:43526 compcert.lib.Integers Make xor def
R43530:43532 compcert.lib.Integers Make one def
R43528:43528 compcert.lib.Integers <> b:396 var
R43508:43510 compcert.lib.Integers Make add def
R43515:43517 compcert.lib.Integers Make not def
R43519:43519 compcert.lib.Integers <> y:395 var
R43512:43512 compcert.lib.Integers <> x:394 var
R43468:43471 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R43461:43463 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43460:43460 compcert.lib.Integers <> b:396 var
R43464:43467 compcert.lib.Integers Make zero def
R43473:43475 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43472:43472 compcert.lib.Integers <> b:396 var
R43476:43478 compcert.lib.Integers Make one def
R43563:43573 compcert.lib.Integers Make sub_add_not thm
R43563:43573 compcert.lib.Integers Make sub_add_not thm
R43563:43573 compcert.lib.Integers Make sub_add_not thm
R43563:43573 compcert.lib.Integers Make sub_add_not thm
R43563:43573 compcert.lib.Integers Make sub_add_not thm
R43586:43594 compcert.lib.Integers Make add_assoc thm
R43586:43594 compcert.lib.Integers Make add_assoc thm
R43586:43594 compcert.lib.Integers Make add_assoc thm
R43586:43594 compcert.lib.Integers Make add_assoc thm
R43586:43594 compcert.lib.Integers Make add_assoc thm
R43586:43594 compcert.lib.Integers Make add_assoc thm
R43586:43594 compcert.lib.Integers Make add_assoc thm
R43628:43634 compcert.lib.Integers Make neg_not thm
R43628:43634 compcert.lib.Integers Make neg_not thm
R43628:43634 compcert.lib.Integers Make neg_not thm
R43648:43658 compcert.lib.Integers Make sub_add_opp thm
R43648:43658 compcert.lib.Integers Make sub_add_opp thm
R43648:43658 compcert.lib.Integers Make sub_add_opp thm
R43692:43701 compcert.lib.Integers Make xor_zero_l thm
R43692:43701 compcert.lib.Integers Make xor_zero_l thm
R43692:43701 compcert.lib.Integers Make xor_zero_l thm
R43712:43721 compcert.lib.Integers Make sub_zero_l thm
R43712:43721 compcert.lib.Integers Make sub_zero_l thm
R43712:43721 compcert.lib.Integers Make sub_zero_l thm
R43740:43747 compcert.lib.Integers Make xor_idem thm
R43740:43747 compcert.lib.Integers Make xor_idem thm
R43740:43747 compcert.lib.Integers Make xor_idem thm
R43758:43765 compcert.lib.Integers Make sub_idem thm
R43758:43765 compcert.lib.Integers Make sub_idem thm
R43758:43765 compcert.lib.Integers Make sub_idem thm
prf 43788:43807 Make sub_borrow_add_carry
binder 43819:43819 <> x:397
binder 43821:43821 <> y:398
binder 43823:43823 <> b:399
R43847:43852 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43869:43871 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43853:43862 compcert.lib.Integers Make sub_borrow def
R43868:43868 compcert.lib.Integers <> b:399 var
R43866:43866 compcert.lib.Integers <> y:398 var
R43864:43864 compcert.lib.Integers <> x:397 var
R43872:43874 compcert.lib.Integers Make xor def
R43910:43912 compcert.lib.Integers Make one def
R43877:43885 compcert.lib.Integers Make add_carry def
R43898:43900 compcert.lib.Integers Make xor def
R43904:43906 compcert.lib.Integers Make one def
R43902:43902 compcert.lib.Integers <> b:399 var
R43890:43892 compcert.lib.Integers Make not def
R43894:43894 compcert.lib.Integers <> y:398 var
R43887:43887 compcert.lib.Integers <> x:397 var
R43836:43839 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R43829:43831 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43828:43828 compcert.lib.Integers <> b:399 var
R43832:43835 compcert.lib.Integers Make zero def
R43841:43843 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43840:43840 compcert.lib.Integers <> b:399 var
R43844:43846 compcert.lib.Integers Make one def
R43939:43948 compcert.lib.Integers Make sub_borrow def
R43951:43959 compcert.lib.Integers Make add_carry def
R43970:43981 compcert.lib.Integers Make unsigned_not thm
R43970:43981 compcert.lib.Integers Make unsigned_not thm
R43970:43981 compcert.lib.Integers Make unsigned_not thm
R43995:44002 compcert.lib.Integers Make unsigned def
R44005:44007 compcert.lib.Integers Make xor def
R44011:44013 compcert.lib.Integers Make one def
R44024:44026 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R44027:44034 compcert.lib.Integers Make unsigned def
R43995:44002 compcert.lib.Integers Make unsigned def
R44005:44007 compcert.lib.Integers Make xor def
R44011:44013 compcert.lib.Integers Make one def
R44024:44026 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R44027:44034 compcert.lib.Integers Make unsigned def
R44052:44054 compcert.lib.Coqlib <> zlt def
R44080:44082 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R44067:44069 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R44057:44064 compcert.lib.Integers Make unsigned def
R44070:44077 compcert.lib.Integers Make unsigned def
R44083:44090 compcert.lib.Integers Make unsigned def
R44052:44054 compcert.lib.Coqlib <> zlt def
R44080:44082 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R44067:44069 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R44057:44064 compcert.lib.Integers Make unsigned def
R44070:44077 compcert.lib.Integers Make unsigned def
R44083:44090 compcert.lib.Integers Make unsigned def
R44107:44114 compcert.lib.Coqlib <> zlt_true thm
R44107:44114 compcert.lib.Coqlib <> zlt_true thm
R44107:44114 compcert.lib.Coqlib <> zlt_true thm
R44107:44114 compcert.lib.Coqlib <> zlt_true thm
R44125:44134 compcert.lib.Integers Make xor_zero_l thm
R44125:44134 compcert.lib.Integers Make xor_zero_l thm
R44125:44134 compcert.lib.Integers Make xor_zero_l thm
R44152:44163 compcert.lib.Integers Make max_unsigned def
R44183:44191 compcert.lib.Coqlib <> zlt_false thm
R44183:44191 compcert.lib.Coqlib <> zlt_false thm
R44183:44191 compcert.lib.Coqlib <> zlt_false thm
R44183:44191 compcert.lib.Coqlib <> zlt_false thm
R44202:44209 compcert.lib.Integers Make xor_idem thm
R44202:44209 compcert.lib.Integers Make xor_idem thm
R44202:44209 compcert.lib.Integers Make xor_idem thm
R44227:44238 compcert.lib.Integers Make max_unsigned def
R44281:44290 compcert.lib.Integers Make xor_zero_l thm
R44281:44290 compcert.lib.Integers Make xor_zero_l thm
R44281:44290 compcert.lib.Integers Make xor_zero_l thm
R44301:44312 compcert.lib.Integers Make unsigned_one thm
R44315:44327 compcert.lib.Integers Make unsigned_zero thm
R44301:44312 compcert.lib.Integers Make unsigned_one thm
R44301:44312 compcert.lib.Integers Make unsigned_one thm
R44315:44327 compcert.lib.Integers Make unsigned_zero thm
R44315:44327 compcert.lib.Integers Make unsigned_zero thm
R44346:44353 compcert.lib.Integers Make xor_idem thm
R44346:44353 compcert.lib.Integers Make xor_idem thm
R44346:44353 compcert.lib.Integers Make xor_idem thm
R44364:44375 compcert.lib.Integers Make unsigned_one thm
R44378:44390 compcert.lib.Integers Make unsigned_zero thm
R44364:44375 compcert.lib.Integers Make unsigned_one thm
R44364:44375 compcert.lib.Integers Make unsigned_one thm
R44378:44390 compcert.lib.Integers Make unsigned_zero thm
R44378:44390 compcert.lib.Integers Make unsigned_zero thm
prf 44480:44490 Make Z_add_is_or
binder 44502:44502 <> i:400
R44511:44516 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 44524:44524 <> x:401
binder 44526:44526 <> y:402
R44531:44531 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44595:44601 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44621:44623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44602:44610 Coq.ZArith.BinInt Z testbit def
R44620:44620 compcert.lib.Integers <> i:400 var
R44614:44616 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R44613:44613 compcert.lib.Integers <> x:401 var
R44617:44617 compcert.lib.Integers <> y:402 var
R44637:44640 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R44624:44632 Coq.ZArith.BinInt Z testbit def
R44636:44636 compcert.lib.Integers <> i:400 var
R44634:44634 compcert.lib.Integers <> x:401 var
R44641:44649 Coq.ZArith.BinInt Z testbit def
R44653:44653 compcert.lib.Integers <> i:400 var
R44651:44651 compcert.lib.Integers <> y:402 var
binder 44539:44539 <> j:403
R44553:44556 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44587:44589 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44570:44573 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R44557:44565 Coq.ZArith.BinInt Z testbit def
R44569:44569 compcert.lib.Integers <> j:403 var
R44567:44567 compcert.lib.Integers <> x:401 var
R44574:44582 Coq.ZArith.BinInt Z testbit def
R44586:44586 compcert.lib.Integers <> j:403 var
R44584:44584 compcert.lib.Integers <> y:402 var
R44590:44594 Coq.Init.Datatypes <> false constr
R44543:44546 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R44548:44551 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R44547:44547 compcert.lib.Integers <> j:403 var
R44547:44547 compcert.lib.Integers <> j:403 var
R44552:44552 compcert.lib.Integers <> i:400 var
R44506:44509 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R44510:44510 compcert.lib.Integers <> i:400 var
R44699:44707 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R44699:44707 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R44756:44762 compcert.lib.Zbits <> Zdecomp thm
R44756:44762 compcert.lib.Zbits <> Zdecomp thm
R44756:44762 compcert.lib.Zbits <> Zdecomp thm
R44782:44788 compcert.lib.Zbits <> Zdecomp thm
R44782:44788 compcert.lib.Zbits <> Zdecomp thm
R44782:44788 compcert.lib.Zbits <> Zdecomp thm
R44815:44823 Coq.ZArith.BinInt Z testbit def
R44826:44833 compcert.lib.Zbits <> Zshiftin def
R44865:44867 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R44857:44862 Coq.ZArith.BinInt Z div2 def
R44868:44873 Coq.ZArith.BinInt Z div2 def
R44843:44846 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R44836:44840 Coq.ZArith.BinInt Z odd def
R44847:44851 Coq.ZArith.BinInt Z odd def
R44815:44823 Coq.ZArith.BinInt Z testbit def
R44826:44833 compcert.lib.Zbits <> Zshiftin def
R44865:44867 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R44857:44862 Coq.ZArith.BinInt Z div2 def
R44868:44873 Coq.ZArith.BinInt Z div2 def
R44843:44846 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R44836:44840 Coq.ZArith.BinInt Z odd def
R44847:44851 Coq.ZArith.BinInt Z odd def
R44905:44917 compcert.lib.Zbits <> Zshiftin_spec thm
R44905:44917 compcert.lib.Zbits <> Zshiftin_spec thm
R44905:44917 compcert.lib.Zbits <> Zshiftin_spec thm
R44905:44917 compcert.lib.Zbits <> Zshiftin_spec thm
R44905:44917 compcert.lib.Zbits <> Zshiftin_spec thm
R44905:44917 compcert.lib.Zbits <> Zshiftin_spec thm
R44958:44978 compcert.lib.Zbits <> Ztestbit_shiftin_base thm
R44958:44978 compcert.lib.Zbits <> Ztestbit_shiftin_base thm
R44958:44978 compcert.lib.Zbits <> Ztestbit_shiftin_base thm
R44958:44978 compcert.lib.Zbits <> Ztestbit_shiftin_base thm
R44958:44978 compcert.lib.Zbits <> Ztestbit_shiftin_base thm
R44996:45000 Coq.ZArith.BinInt Z mul def
R45017:45021 Coq.ZArith.BinInt Z odd def
R45037:45041 Coq.ZArith.BinInt Z odd def
R45017:45021 Coq.ZArith.BinInt Z odd def
R45037:45041 Coq.ZArith.BinInt Z odd def
R45037:45041 Coq.ZArith.BinInt Z odd def
R45094:45109 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45094:45109 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45094:45109 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45094:45109 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45094:45109 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45094:45109 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45094:45109 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45094:45109 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45094:45109 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45132:45134 compcert.lib.Coqlib <> zeq def
R45132:45134 compcert.lib.Coqlib <> zeq def
R45207:45212 Coq.ZArith.BinInt Z succ def
R45207:45212 Coq.ZArith.BinInt Z succ def
R45241:45261 compcert.lib.Zbits <> Ztestbit_shiftin_succ thm
R45241:45261 compcert.lib.Zbits <> Ztestbit_shiftin_succ thm
R45241:45261 compcert.lib.Zbits <> Ztestbit_shiftin_succ thm
R45241:45261 compcert.lib.Zbits <> Ztestbit_shiftin_succ thm
R45241:45261 compcert.lib.Zbits <> Ztestbit_shiftin_succ thm
R45241:45261 compcert.lib.Zbits <> Ztestbit_shiftin_succ thm
R45241:45261 compcert.lib.Zbits <> Ztestbit_shiftin_succ thm
R44996:45000 Coq.ZArith.BinInt Z mul def
prf 45304:45312 Make add_is_or
binder 45324:45324 <> x:404
binder 45326:45326 <> y:405
R45345:45350 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45358:45360 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45351:45353 compcert.lib.Integers Make add def
R45357:45357 compcert.lib.Integers <> y:405 var
R45355:45355 compcert.lib.Integers <> x:404 var
R45361:45362 compcert.lib.Integers Make or def
R45366:45366 compcert.lib.Integers <> y:405 var
R45364:45364 compcert.lib.Integers <> x:404 var
R45338:45340 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45331:45333 compcert.lib.Integers Make and def
R45337:45337 compcert.lib.Integers <> y:405 var
R45335:45335 compcert.lib.Integers <> x:404 var
R45341:45344 compcert.lib.Integers Make zero def
R45396:45398 compcert.lib.Integers Make add def
R45409:45420 compcert.lib.Integers Make testbit_repr thm
R45409:45420 compcert.lib.Integers Make testbit_repr thm
R45409:45420 compcert.lib.Integers Make testbit_repr thm
R45409:45420 compcert.lib.Integers Make testbit_repr thm
R45437:45447 compcert.lib.Integers Make Z_add_is_or thm
R45437:45447 compcert.lib.Integers Make Z_add_is_or thm
R45496:45498 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45477:45483 compcert.lib.Integers Make testbit def
R45486:45488 compcert.lib.Integers Make and def
R45499:45505 compcert.lib.Integers Make testbit def
R45507:45510 compcert.lib.Integers Make zero def
R45496:45498 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45477:45483 compcert.lib.Integers Make testbit def
R45486:45488 compcert.lib.Integers Make and def
R45499:45505 compcert.lib.Integers Make testbit def
R45507:45510 compcert.lib.Integers Make zero def
prf 45594:45602 Make xor_is_or
binder 45614:45614 <> x:406
binder 45616:45616 <> y:407
R45633:45636 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45644:45646 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45637:45639 compcert.lib.Integers Make xor def
R45643:45643 compcert.lib.Integers <> y:407 var
R45641:45641 compcert.lib.Integers <> x:406 var
R45647:45648 compcert.lib.Integers Make or def
R45652:45652 compcert.lib.Integers <> y:407 var
R45650:45650 compcert.lib.Integers <> x:406 var
R45626:45628 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45619:45621 compcert.lib.Integers Make and def
R45625:45625 compcert.lib.Integers <> y:407 var
R45623:45623 compcert.lib.Integers <> x:406 var
R45629:45632 compcert.lib.Integers Make zero def
R45704:45706 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45685:45691 compcert.lib.Integers Make testbit def
R45694:45696 compcert.lib.Integers Make and def
R45707:45713 compcert.lib.Integers Make testbit def
R45715:45718 compcert.lib.Integers Make zero def
R45704:45706 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45685:45691 compcert.lib.Integers Make testbit def
R45694:45696 compcert.lib.Integers Make and def
R45707:45713 compcert.lib.Integers Make testbit def
R45715:45718 compcert.lib.Integers Make zero def
R45787:45793 compcert.lib.Integers Make testbit def
R45811:45817 compcert.lib.Integers Make testbit def
R45787:45793 compcert.lib.Integers Make testbit def
R45811:45817 compcert.lib.Integers Make testbit def
R45811:45817 compcert.lib.Integers Make testbit def
prf 45863:45872 Make add_is_xor
binder 45884:45884 <> x:408
binder 45886:45886 <> y:409
R45905:45910 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45918:45920 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45911:45913 compcert.lib.Integers Make add def
R45917:45917 compcert.lib.Integers <> y:409 var
R45915:45915 compcert.lib.Integers <> x:408 var
R45921:45923 compcert.lib.Integers Make xor def
R45927:45927 compcert.lib.Integers <> y:409 var
R45925:45925 compcert.lib.Integers <> x:408 var
R45898:45900 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45891:45893 compcert.lib.Integers Make and def
R45897:45897 compcert.lib.Integers <> y:409 var
R45895:45895 compcert.lib.Integers <> x:408 var
R45901:45904 compcert.lib.Integers Make zero def
R45955:45963 compcert.lib.Integers Make xor_is_or thm
R45955:45963 compcert.lib.Integers Make xor_is_or thm
R45955:45963 compcert.lib.Integers Make xor_is_or thm
R45955:45963 compcert.lib.Integers Make xor_is_or thm
R45978:45986 compcert.lib.Integers Make add_is_or thm
R45978:45986 compcert.lib.Integers Make add_is_or thm
prf 46009:46015 Make add_and
binder 46027:46027 <> x:410
binder 46029:46029 <> y:411
binder 46031:46031 <> z:412
R46050:46055 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46079:46081 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46056:46058 compcert.lib.Integers Make add def
R46071:46073 compcert.lib.Integers Make and def
R46077:46077 compcert.lib.Integers <> z:412 var
R46075:46075 compcert.lib.Integers <> x:410 var
R46061:46063 compcert.lib.Integers Make and def
R46067:46067 compcert.lib.Integers <> y:411 var
R46065:46065 compcert.lib.Integers <> x:410 var
R46082:46084 compcert.lib.Integers Make and def
R46089:46090 compcert.lib.Integers Make or def
R46094:46094 compcert.lib.Integers <> z:412 var
R46092:46092 compcert.lib.Integers <> y:411 var
R46086:46086 compcert.lib.Integers <> x:410 var
R46043:46045 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46036:46038 compcert.lib.Integers Make and def
R46042:46042 compcert.lib.Integers <> z:412 var
R46040:46040 compcert.lib.Integers <> y:411 var
R46046:46049 compcert.lib.Integers Make zero def
R46123:46131 compcert.lib.Integers Make add_is_or thm
R46123:46131 compcert.lib.Integers Make add_is_or thm
R46123:46131 compcert.lib.Integers Make add_is_or thm
R46123:46131 compcert.lib.Integers Make add_is_or thm
R46144:46157 compcert.lib.Integers Make and_or_distrib thm
R46144:46157 compcert.lib.Integers Make and_or_distrib thm
R46144:46157 compcert.lib.Integers Make and_or_distrib thm
R46177:46186 compcert.lib.Integers Make and_commut thm
R46177:46186 compcert.lib.Integers Make and_commut thm
R46177:46186 compcert.lib.Integers Make and_commut thm
R46204:46212 compcert.lib.Integers Make and_assoc thm
R46204:46212 compcert.lib.Integers Make and_assoc thm
R46204:46212 compcert.lib.Integers Make and_assoc thm
R46236:46244 compcert.lib.Integers Make and_assoc thm
R46236:46244 compcert.lib.Integers Make and_assoc thm
R46236:46244 compcert.lib.Integers Make and_assoc thm
R46236:46244 compcert.lib.Integers Make and_assoc thm
R46261:46270 compcert.lib.Integers Make and_commut thm
R46273:46275 compcert.lib.Integers Make and def
R46261:46270 compcert.lib.Integers Make and_commut thm
R46273:46275 compcert.lib.Integers Make and def
R46261:46270 compcert.lib.Integers Make and_commut thm
R46273:46275 compcert.lib.Integers Make and def
R46297:46305 compcert.lib.Integers Make and_assoc thm
R46297:46305 compcert.lib.Integers Make and_assoc thm
R46297:46305 compcert.lib.Integers Make and_assoc thm
R46329:46338 compcert.lib.Integers Make and_commut thm
R46329:46338 compcert.lib.Integers Make and_commut thm
R46329:46338 compcert.lib.Integers Make and_commut thm
R46347:46354 compcert.lib.Integers Make and_zero thm
R46347:46354 compcert.lib.Integers Make and_zero thm
prf 46401:46408 Make bits_shl
binder 46420:46420 <> x:413
binder 46422:46422 <> y:414
binder 46424:46424 <> i:415
R46447:46452 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46472:46476 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46453:46459 compcert.lib.Integers Make testbit def
R46471:46471 compcert.lib.Integers <> i:415 var
R46462:46464 compcert.lib.Integers Make shl def
R46468:46468 compcert.lib.Integers <> y:414 var
R46466:46466 compcert.lib.Integers <> x:413 var
R46480:46482 compcert.lib.Coqlib <> zlt def
R46487:46494 compcert.lib.Integers Make unsigned def
R46496:46496 compcert.lib.Integers <> y:414 var
R46484:46484 compcert.lib.Integers <> i:415 var
R46515:46521 compcert.lib.Integers Make testbit def
R46527:46529 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R46526:46526 compcert.lib.Integers <> i:415 var
R46530:46537 compcert.lib.Integers Make unsigned def
R46539:46539 compcert.lib.Integers <> y:414 var
R46523:46523 compcert.lib.Integers <> x:413 var
R46504:46508 Coq.Init.Datatypes <> false constr
R46430:46433 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R46435:46437 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R46434:46434 compcert.lib.Integers <> i:415 var
R46434:46434 compcert.lib.Integers <> i:415 var
R46438:46446 compcert.lib.Integers Make zwordsize def
R46567:46569 compcert.lib.Integers Make shl def
R46580:46591 compcert.lib.Integers Make testbit_repr thm
R46580:46591 compcert.lib.Integers Make testbit_repr thm
R46580:46591 compcert.lib.Integers Make testbit_repr thm
R46580:46591 compcert.lib.Integers Make testbit_repr thm
R46612:46614 compcert.lib.Coqlib <> zlt def
R46619:46626 compcert.lib.Integers Make unsigned def
R46612:46614 compcert.lib.Coqlib <> zlt def
R46619:46626 compcert.lib.Integers Make unsigned def
R46641:46657 Coq.ZArith.BinInt Z shiftl_spec_low thm
R46641:46657 Coq.ZArith.BinInt Z shiftl_spec_low thm
R46674:46691 Coq.ZArith.BinInt Z shiftl_spec_high thm
R46674:46691 Coq.ZArith.BinInt Z shiftl_spec_high thm
prf 46720:46728 Make bits_shru
binder 46740:46740 <> x:416
binder 46742:46742 <> y:417
binder 46744:46744 <> i:418
R46767:46772 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46793:46797 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46773:46779 compcert.lib.Integers Make testbit def
R46792:46792 compcert.lib.Integers <> i:418 var
R46782:46785 compcert.lib.Integers Make shru def
R46789:46789 compcert.lib.Integers <> y:417 var
R46787:46787 compcert.lib.Integers <> x:416 var
R46801:46803 compcert.lib.Coqlib <> zlt def
R46822:46830 compcert.lib.Integers Make zwordsize def
R46807:46809 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R46806:46806 compcert.lib.Integers <> i:418 var
R46810:46817 compcert.lib.Integers Make unsigned def
R46819:46819 compcert.lib.Integers <> y:417 var
R46869:46873 Coq.Init.Datatypes <> false constr
R46837:46843 compcert.lib.Integers Make testbit def
R46849:46851 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R46848:46848 compcert.lib.Integers <> i:418 var
R46852:46859 compcert.lib.Integers Make unsigned def
R46861:46861 compcert.lib.Integers <> y:417 var
R46845:46845 compcert.lib.Integers <> x:416 var
R46750:46753 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R46755:46757 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R46754:46754 compcert.lib.Integers <> i:418 var
R46754:46754 compcert.lib.Integers <> i:418 var
R46758:46766 compcert.lib.Integers Make zwordsize def
R46900:46903 compcert.lib.Integers Make shru def
R46914:46925 compcert.lib.Integers Make testbit_repr thm
R46914:46925 compcert.lib.Integers Make testbit_repr thm
R46914:46925 compcert.lib.Integers Make testbit_repr thm
R46914:46925 compcert.lib.Integers Make testbit_repr thm
R46944:46956 Coq.ZArith.BinInt Z shiftr_spec thm
R46944:46956 Coq.ZArith.BinInt Z shiftr_spec thm
R46944:46956 Coq.ZArith.BinInt Z shiftr_spec thm
R46944:46956 Coq.ZArith.BinInt Z shiftr_spec thm
R46965:46971 compcert.lib.Integers Make testbit def
R46977:46979 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R46980:46987 compcert.lib.Integers Make unsigned def
R46965:46971 compcert.lib.Integers Make testbit def
R46977:46979 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R46980:46987 compcert.lib.Integers Make unsigned def
R47006:47008 compcert.lib.Coqlib <> zlt def
R47027:47035 compcert.lib.Integers Make zwordsize def
R47012:47014 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R47015:47022 compcert.lib.Integers Make unsigned def
R47006:47008 compcert.lib.Coqlib <> zlt def
R47027:47035 compcert.lib.Integers Make zwordsize def
R47012:47014 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R47015:47022 compcert.lib.Integers Make unsigned def
R47055:47064 compcert.lib.Integers Make bits_above thm
R47055:47064 compcert.lib.Integers Make bits_above thm
prf 47094:47101 Make bits_shr
binder 47113:47113 <> x:419
binder 47115:47115 <> y:420
binder 47117:47117 <> i:421
R47140:47145 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47165:47169 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47146:47152 compcert.lib.Integers Make testbit def
R47164:47164 compcert.lib.Integers <> i:421 var
R47155:47157 compcert.lib.Integers Make shr def
R47161:47161 compcert.lib.Integers <> y:420 var
R47159:47159 compcert.lib.Integers <> x:419 var
R47170:47176 compcert.lib.Integers Make testbit def
R47184:47186 compcert.lib.Coqlib <> zlt def
R47205:47213 compcert.lib.Integers Make zwordsize def
R47190:47192 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R47189:47189 compcert.lib.Integers <> i:421 var
R47193:47200 compcert.lib.Integers Make unsigned def
R47202:47202 compcert.lib.Integers <> y:420 var
R47249:47251 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R47240:47248 compcert.lib.Integers Make zwordsize def
R47221:47223 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R47220:47220 compcert.lib.Integers <> i:421 var
R47224:47231 compcert.lib.Integers Make unsigned def
R47233:47233 compcert.lib.Integers <> y:420 var
R47178:47178 compcert.lib.Integers <> x:419 var
R47123:47126 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R47128:47130 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R47127:47127 compcert.lib.Integers <> i:421 var
R47127:47127 compcert.lib.Integers <> i:421 var
R47131:47139 compcert.lib.Integers Make zwordsize def
R47280:47282 compcert.lib.Integers Make shr def
R47293:47304 compcert.lib.Integers Make testbit_repr thm
R47293:47304 compcert.lib.Integers Make testbit_repr thm
R47293:47304 compcert.lib.Integers Make testbit_repr thm
R47293:47304 compcert.lib.Integers Make testbit_repr thm
R47323:47335 Coq.ZArith.BinInt Z shiftr_spec thm
R47323:47335 Coq.ZArith.BinInt Z shiftr_spec thm
R47323:47335 Coq.ZArith.BinInt Z shiftr_spec thm
R47323:47335 Coq.ZArith.BinInt Z shiftr_spec thm
R47344:47354 compcert.lib.Integers Make bits_signed thm
R47344:47354 compcert.lib.Integers Make bits_signed thm
R47371:47384 compcert.lib.Integers Make unsigned_range thm
R47371:47384 compcert.lib.Integers Make unsigned_range thm
R47425:47432 compcert.lib.Integers Make bits_shl thm
R47434:47442 compcert.lib.Integers Make bits_shru thm
R47444:47451 compcert.lib.Integers Make bits_shr thm
prf 47469:47476 Make shl_zero
binder 47486:47486 <> x:422
R47499:47501 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47489:47491 compcert.lib.Integers Make shl def
R47495:47498 compcert.lib.Integers Make zero def
R47493:47493 compcert.lib.Integers <> x:422 var
R47502:47502 compcert.lib.Integers <> x:422 var
R47533:47545 compcert.lib.Integers Make unsigned_zero thm
R47533:47545 compcert.lib.Integers Make unsigned_zero thm
R47533:47545 compcert.lib.Integers Make unsigned_zero thm
R47556:47564 compcert.lib.Coqlib <> zlt_false thm
R47556:47564 compcert.lib.Coqlib <> zlt_false thm
R47556:47564 compcert.lib.Coqlib <> zlt_false thm
R47556:47564 compcert.lib.Coqlib <> zlt_false thm
prf 47602:47618 Make bitwise_binop_shl
binder 47630:47630 <> f:423
binder 47632:47633 <> f':424
binder 47635:47635 <> x:425
binder 47637:47637 <> y:426
binder 47639:47639 <> n:427
R47644:47644 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47731:47737 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47760:47765 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47787:47789 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47766:47766 compcert.lib.Integers <> f:423 var
R47779:47781 compcert.lib.Integers Make shl def
R47785:47785 compcert.lib.Integers <> n:427 var
R47783:47783 compcert.lib.Integers <> y:426 var
R47769:47771 compcert.lib.Integers Make shl def
R47775:47775 compcert.lib.Integers <> n:427 var
R47773:47773 compcert.lib.Integers <> x:425 var
R47790:47792 compcert.lib.Integers Make shl def
R47802:47802 compcert.lib.Integers <> n:427 var
R47795:47795 compcert.lib.Integers <> f:423 var
R47799:47799 compcert.lib.Integers <> y:426 var
R47797:47797 compcert.lib.Integers <> x:425 var
R47752:47754 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47738:47739 compcert.lib.Integers <> f':424 var
R47747:47751 Coq.Init.Datatypes <> false constr
R47741:47745 Coq.Init.Datatypes <> false constr
R47755:47759 Coq.Init.Datatypes <> false constr
binder 47652:47652 <> x:428
binder 47654:47654 <> y:429
binder 47656:47656 <> i:430
R47677:47680 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47698:47700 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47681:47687 compcert.lib.Integers Make testbit def
R47697:47697 compcert.lib.Integers <> i:430 var
R47690:47690 compcert.lib.Integers <> f:423 var
R47694:47694 compcert.lib.Integers <> y:429 var
R47692:47692 compcert.lib.Integers <> x:428 var
R47701:47702 compcert.lib.Integers <> f':424 var
R47719:47725 compcert.lib.Integers Make testbit def
R47729:47729 compcert.lib.Integers <> i:430 var
R47727:47727 compcert.lib.Integers <> y:429 var
R47705:47711 compcert.lib.Integers Make testbit def
R47715:47715 compcert.lib.Integers <> i:430 var
R47713:47713 compcert.lib.Integers <> x:428 var
R47660:47663 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R47665:47667 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R47664:47664 compcert.lib.Integers <> i:430 var
R47664:47664 compcert.lib.Integers <> i:430 var
R47668:47676 compcert.lib.Integers Make zwordsize def
R47828:47839 compcert.lib.Integers Make same_bits_eq thm
R47828:47839 compcert.lib.Integers Make same_bits_eq thm
R47878:47885 compcert.lib.Integers Make bits_shl thm
R47878:47885 compcert.lib.Integers Make bits_shl thm
R47878:47885 compcert.lib.Integers Make bits_shl thm
R47878:47885 compcert.lib.Integers Make bits_shl thm
R47878:47885 compcert.lib.Integers Make bits_shl thm
R47878:47885 compcert.lib.Integers Make bits_shl thm
R47878:47885 compcert.lib.Integers Make bits_shl thm
R47878:47885 compcert.lib.Integers Make bits_shl thm
R47878:47885 compcert.lib.Integers Make bits_shl thm
R47906:47908 compcert.lib.Coqlib <> zlt def
R47913:47920 compcert.lib.Integers Make unsigned def
R47906:47908 compcert.lib.Coqlib <> zlt def
R47913:47920 compcert.lib.Integers Make unsigned def
R47964:47977 compcert.lib.Integers Make unsigned_range thm
R47964:47977 compcert.lib.Integers Make unsigned_range thm
prf 48004:48010 Make and_shl
binder 48022:48022 <> x:431
binder 48024:48024 <> y:432
binder 48026:48026 <> n:433
R48054:48056 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48031:48033 compcert.lib.Integers Make and def
R48046:48048 compcert.lib.Integers Make shl def
R48052:48052 compcert.lib.Integers <> n:433 var
R48050:48050 compcert.lib.Integers <> y:432 var
R48036:48038 compcert.lib.Integers Make shl def
R48042:48042 compcert.lib.Integers <> n:433 var
R48040:48040 compcert.lib.Integers <> x:431 var
R48057:48059 compcert.lib.Integers Make shl def
R48071:48071 compcert.lib.Integers <> n:433 var
R48062:48064 compcert.lib.Integers Make and def
R48068:48068 compcert.lib.Integers <> y:432 var
R48066:48066 compcert.lib.Integers <> x:431 var
R48120:48123 Coq.Init.Datatypes <> andb def
R48097:48113 compcert.lib.Integers Make bitwise_binop_shl thm
R48120:48123 Coq.Init.Datatypes <> andb def
R48097:48113 compcert.lib.Integers Make bitwise_binop_shl thm
R48132:48139 compcert.lib.Integers Make bits_and thm
R48132:48139 compcert.lib.Integers Make bits_and thm
prf 48162:48167 Make or_shl
binder 48179:48179 <> x:434
binder 48181:48181 <> y:435
binder 48183:48183 <> n:436
R48210:48212 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48188:48189 compcert.lib.Integers Make or def
R48202:48204 compcert.lib.Integers Make shl def
R48208:48208 compcert.lib.Integers <> n:436 var
R48206:48206 compcert.lib.Integers <> y:435 var
R48192:48194 compcert.lib.Integers Make shl def
R48198:48198 compcert.lib.Integers <> n:436 var
R48196:48196 compcert.lib.Integers <> x:434 var
R48213:48215 compcert.lib.Integers Make shl def
R48226:48226 compcert.lib.Integers <> n:436 var
R48218:48219 compcert.lib.Integers Make or def
R48223:48223 compcert.lib.Integers <> y:435 var
R48221:48221 compcert.lib.Integers <> x:434 var
R48275:48277 Coq.Init.Datatypes <> orb def
R48252:48268 compcert.lib.Integers Make bitwise_binop_shl thm
R48275:48277 Coq.Init.Datatypes <> orb def
R48252:48268 compcert.lib.Integers Make bitwise_binop_shl thm
R48286:48292 compcert.lib.Integers Make bits_or thm
R48286:48292 compcert.lib.Integers Make bits_or thm
prf 48315:48321 Make xor_shl
binder 48333:48333 <> x:437
binder 48335:48335 <> y:438
binder 48337:48337 <> n:439
R48365:48367 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48342:48344 compcert.lib.Integers Make xor def
R48357:48359 compcert.lib.Integers Make shl def
R48363:48363 compcert.lib.Integers <> n:439 var
R48361:48361 compcert.lib.Integers <> y:438 var
R48347:48349 compcert.lib.Integers Make shl def
R48353:48353 compcert.lib.Integers <> n:439 var
R48351:48351 compcert.lib.Integers <> x:437 var
R48368:48370 compcert.lib.Integers Make shl def
R48382:48382 compcert.lib.Integers <> n:439 var
R48373:48375 compcert.lib.Integers Make xor def
R48379:48379 compcert.lib.Integers <> y:438 var
R48377:48377 compcert.lib.Integers <> x:437 var
R48431:48434 Coq.Init.Datatypes <> xorb def
R48408:48424 compcert.lib.Integers Make bitwise_binop_shl thm
R48431:48434 Coq.Init.Datatypes <> xorb def
R48408:48424 compcert.lib.Integers Make bitwise_binop_shl thm
R48443:48450 compcert.lib.Integers Make bits_xor thm
R48443:48450 compcert.lib.Integers Make bits_xor thm
prf 48471:48477 Make ltu_inv
binder 48489:48489 <> x:440
binder 48491:48491 <> y:441
R48508:48511 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48513:48516 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R48527:48529 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R48517:48524 compcert.lib.Integers Make unsigned def
R48526:48526 compcert.lib.Integers <> x:440 var
R48517:48524 compcert.lib.Integers Make unsigned def
R48526:48526 compcert.lib.Integers <> x:440 var
R48530:48537 compcert.lib.Integers Make unsigned def
R48539:48539 compcert.lib.Integers <> y:441 var
R48501:48503 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48494:48496 compcert.lib.Integers Make ltu def
R48500:48500 compcert.lib.Integers <> y:441 var
R48498:48498 compcert.lib.Integers <> x:440 var
R48504:48507 Coq.Init.Datatypes <> true constr
R48558:48560 compcert.lib.Integers Make ltu def
R48581:48583 compcert.lib.Coqlib <> zlt def
R48599:48606 compcert.lib.Integers Make unsigned def
R48586:48593 compcert.lib.Integers Make unsigned def
R48581:48583 compcert.lib.Coqlib <> zlt def
R48599:48606 compcert.lib.Integers Make unsigned def
R48586:48593 compcert.lib.Integers Make unsigned def
R48640:48653 compcert.lib.Integers Make unsigned_range thm
R48640:48653 compcert.lib.Integers Make unsigned_range thm
prf 48694:48710 Make ltu_iwordsize_inv
binder 48722:48722 <> x:442
R48747:48750 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48752:48755 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R48766:48768 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R48756:48763 compcert.lib.Integers Make unsigned def
R48765:48765 compcert.lib.Integers <> x:442 var
R48756:48763 compcert.lib.Integers Make unsigned def
R48765:48765 compcert.lib.Integers <> x:442 var
R48769:48777 compcert.lib.Integers Make zwordsize def
R48740:48742 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48725:48727 compcert.lib.Integers Make ltu def
R48731:48739 compcert.lib.Integers Make iwordsize def
R48729:48729 compcert.lib.Integers <> x:442 var
R48743:48746 Coq.Init.Datatypes <> true constr
R48809:48815 compcert.lib.Integers Make ltu_inv thm
R48809:48815 compcert.lib.Integers Make ltu_inv thm
R48833:48854 compcert.lib.Integers Make unsigned_repr_wordsize thm
R48833:48854 compcert.lib.Integers Make unsigned_repr_wordsize thm
R48833:48854 compcert.lib.Integers Make unsigned_repr_wordsize thm
prf 48877:48883 Make shl_shl
binder 48895:48895 <> x:443
binder 48897:48897 <> y:444
binder 48899:48899 <> z:445
R48926:48931 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48954:48959 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48990:48995 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49011:49013 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48996:48998 compcert.lib.Integers Make shl def
R49010:49010 compcert.lib.Integers <> z:445 var
R49001:49003 compcert.lib.Integers Make shl def
R49007:49007 compcert.lib.Integers <> y:444 var
R49005:49005 compcert.lib.Integers <> x:443 var
R49014:49016 compcert.lib.Integers Make shl def
R49021:49023 compcert.lib.Integers Make add def
R49027:49027 compcert.lib.Integers <> z:445 var
R49025:49025 compcert.lib.Integers <> y:444 var
R49018:49018 compcert.lib.Integers <> x:443 var
R48983:48985 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48960:48962 compcert.lib.Integers Make ltu def
R48974:48982 compcert.lib.Integers Make iwordsize def
R48965:48967 compcert.lib.Integers Make add def
R48971:48971 compcert.lib.Integers <> z:445 var
R48969:48969 compcert.lib.Integers <> y:444 var
R48986:48989 Coq.Init.Datatypes <> true constr
R48947:48949 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48932:48934 compcert.lib.Integers Make ltu def
R48938:48946 compcert.lib.Integers Make iwordsize def
R48936:48936 compcert.lib.Integers <> z:445 var
R48950:48953 Coq.Init.Datatypes <> true constr
R48919:48921 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48904:48906 compcert.lib.Integers Make ltu def
R48910:48918 compcert.lib.Integers Make iwordsize def
R48908:48908 compcert.lib.Integers <> y:444 var
R48922:48925 Coq.Init.Datatypes <> true constr
R49062:49078 compcert.lib.Integers Make ltu_iwordsize_inv thm
R49086:49102 compcert.lib.Integers Make ltu_iwordsize_inv thm
R49062:49078 compcert.lib.Integers Make ltu_iwordsize_inv thm
R49086:49102 compcert.lib.Integers Make ltu_iwordsize_inv thm
R49147:49149 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49129:49136 compcert.lib.Integers Make unsigned def
R49139:49141 compcert.lib.Integers Make add def
R49160:49162 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R49150:49157 compcert.lib.Integers Make unsigned def
R49163:49170 compcert.lib.Integers Make unsigned def
R49147:49149 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49129:49136 compcert.lib.Integers Make unsigned def
R49139:49141 compcert.lib.Integers Make add def
R49160:49162 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R49150:49157 compcert.lib.Integers Make unsigned def
R49163:49170 compcert.lib.Integers Make unsigned def
R49187:49189 compcert.lib.Integers Make add def
R49198:49210 compcert.lib.Integers Make unsigned_repr thm
R49198:49210 compcert.lib.Integers Make unsigned_repr thm
R49228:49252 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R49228:49252 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R49270:49281 compcert.lib.Integers Make same_bits_eq thm
R49270:49281 compcert.lib.Integers Make same_bits_eq thm
R49302:49309 compcert.lib.Integers Make bits_shl thm
R49302:49309 compcert.lib.Integers Make bits_shl thm
R49302:49309 compcert.lib.Integers Make bits_shl thm
R49302:49309 compcert.lib.Integers Make bits_shl thm
R49330:49332 compcert.lib.Coqlib <> zlt def
R49337:49344 compcert.lib.Integers Make unsigned def
R49330:49332 compcert.lib.Coqlib <> zlt def
R49337:49344 compcert.lib.Integers Make unsigned def
R49363:49370 compcert.lib.Integers Make bits_shl thm
R49363:49370 compcert.lib.Integers Make bits_shl thm
R49363:49370 compcert.lib.Integers Make bits_shl thm
R49363:49370 compcert.lib.Integers Make bits_shl thm
R49387:49394 compcert.lib.Coqlib <> zlt_true thm
R49387:49394 compcert.lib.Coqlib <> zlt_true thm
R49387:49394 compcert.lib.Coqlib <> zlt_true thm
R49387:49394 compcert.lib.Coqlib <> zlt_true thm
R49422:49429 compcert.lib.Integers Make bits_shl thm
R49422:49429 compcert.lib.Integers Make bits_shl thm
R49422:49429 compcert.lib.Integers Make bits_shl thm
R49422:49429 compcert.lib.Integers Make bits_shl thm
R49442:49444 compcert.lib.Coqlib <> zlt def
R49464:49471 compcert.lib.Integers Make unsigned def
R49448:49450 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R49451:49458 compcert.lib.Integers Make unsigned def
R49442:49444 compcert.lib.Coqlib <> zlt def
R49464:49471 compcert.lib.Integers Make unsigned def
R49448:49450 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R49451:49458 compcert.lib.Integers Make unsigned def
R49492:49499 compcert.lib.Integers Make bits_shl thm
R49492:49499 compcert.lib.Integers Make bits_shl thm
R49492:49499 compcert.lib.Integers Make bits_shl thm
R49492:49499 compcert.lib.Integers Make bits_shl thm
R49516:49523 compcert.lib.Coqlib <> zlt_true thm
R49516:49523 compcert.lib.Coqlib <> zlt_true thm
R49516:49523 compcert.lib.Coqlib <> zlt_true thm
R49516:49523 compcert.lib.Coqlib <> zlt_true thm
R49553:49560 compcert.lib.Integers Make bits_shl thm
R49553:49560 compcert.lib.Integers Make bits_shl thm
R49553:49560 compcert.lib.Integers Make bits_shl thm
R49553:49560 compcert.lib.Integers Make bits_shl thm
R49577:49585 compcert.lib.Coqlib <> zlt_false thm
R49577:49585 compcert.lib.Coqlib <> zlt_false thm
R49577:49585 compcert.lib.Coqlib <> zlt_false thm
R49577:49585 compcert.lib.Coqlib <> zlt_false thm
prf 49638:49644 Make sub_ltu
binder 49656:49656 <> x:446
binder 49658:49658 <> y:447
R49679:49686 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49688:49691 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R49715:49718 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R49702:49704 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R49692:49699 compcert.lib.Integers Make unsigned def
R49701:49701 compcert.lib.Integers <> y:447 var
R49705:49712 compcert.lib.Integers Make unsigned def
R49714:49714 compcert.lib.Integers <> x:446 var
R49702:49704 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R49692:49699 compcert.lib.Integers Make unsigned def
R49701:49701 compcert.lib.Integers <> y:447 var
R49705:49712 compcert.lib.Integers Make unsigned def
R49714:49714 compcert.lib.Integers <> x:446 var
R49719:49726 compcert.lib.Integers Make unsigned def
R49728:49728 compcert.lib.Integers <> y:447 var
R49672:49674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49665:49667 compcert.lib.Integers Make ltu def
R49671:49671 compcert.lib.Integers <> y:447 var
R49669:49669 compcert.lib.Integers <> x:446 var
R49675:49678 Coq.Init.Datatypes <> true constr
R49762:49768 compcert.lib.Integers Make ltu_inv thm
R49762:49768 compcert.lib.Integers Make ltu_inv thm
prf 49824:49832 Make shru_zero
binder 49842:49842 <> x:448
R49856:49858 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49845:49848 compcert.lib.Integers Make shru def
R49852:49855 compcert.lib.Integers Make zero def
R49850:49850 compcert.lib.Integers <> x:448 var
R49859:49859 compcert.lib.Integers <> x:448 var
R49890:49902 compcert.lib.Integers Make unsigned_zero thm
R49890:49902 compcert.lib.Integers Make unsigned_zero thm
R49890:49902 compcert.lib.Integers Make unsigned_zero thm
R49913:49920 compcert.lib.Coqlib <> zlt_true thm
R49913:49920 compcert.lib.Coqlib <> zlt_true thm
R49913:49920 compcert.lib.Coqlib <> zlt_true thm
R49913:49920 compcert.lib.Coqlib <> zlt_true thm
prf 49958:49975 Make bitwise_binop_shru
binder 49987:49987 <> f:449
binder 49989:49990 <> f':450
binder 49992:49992 <> x:451
binder 49994:49994 <> y:452
binder 49996:49996 <> n:453
R50001:50001 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50088:50094 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50117:50122 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50146:50148 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50123:50123 compcert.lib.Integers <> f:449 var
R50137:50140 compcert.lib.Integers Make shru def
R50144:50144 compcert.lib.Integers <> n:453 var
R50142:50142 compcert.lib.Integers <> y:452 var
R50126:50129 compcert.lib.Integers Make shru def
R50133:50133 compcert.lib.Integers <> n:453 var
R50131:50131 compcert.lib.Integers <> x:451 var
R50149:50152 compcert.lib.Integers Make shru def
R50162:50162 compcert.lib.Integers <> n:453 var
R50155:50155 compcert.lib.Integers <> f:449 var
R50159:50159 compcert.lib.Integers <> y:452 var
R50157:50157 compcert.lib.Integers <> x:451 var
R50109:50111 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50095:50096 compcert.lib.Integers <> f':450 var
R50104:50108 Coq.Init.Datatypes <> false constr
R50098:50102 Coq.Init.Datatypes <> false constr
R50112:50116 Coq.Init.Datatypes <> false constr
binder 50009:50009 <> x:454
binder 50011:50011 <> y:455
binder 50013:50013 <> i:456
R50034:50037 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50055:50057 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50038:50044 compcert.lib.Integers Make testbit def
R50054:50054 compcert.lib.Integers <> i:456 var
R50047:50047 compcert.lib.Integers <> f:449 var
R50051:50051 compcert.lib.Integers <> y:455 var
R50049:50049 compcert.lib.Integers <> x:454 var
R50058:50059 compcert.lib.Integers <> f':450 var
R50076:50082 compcert.lib.Integers Make testbit def
R50086:50086 compcert.lib.Integers <> i:456 var
R50084:50084 compcert.lib.Integers <> y:455 var
R50062:50068 compcert.lib.Integers Make testbit def
R50072:50072 compcert.lib.Integers <> i:456 var
R50070:50070 compcert.lib.Integers <> x:454 var
R50017:50020 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R50022:50024 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R50021:50021 compcert.lib.Integers <> i:456 var
R50021:50021 compcert.lib.Integers <> i:456 var
R50025:50033 compcert.lib.Integers Make zwordsize def
R50188:50199 compcert.lib.Integers Make same_bits_eq thm
R50188:50199 compcert.lib.Integers Make same_bits_eq thm
R50238:50246 compcert.lib.Integers Make bits_shru thm
R50238:50246 compcert.lib.Integers Make bits_shru thm
R50238:50246 compcert.lib.Integers Make bits_shru thm
R50238:50246 compcert.lib.Integers Make bits_shru thm
R50238:50246 compcert.lib.Integers Make bits_shru thm
R50238:50246 compcert.lib.Integers Make bits_shru thm
R50238:50246 compcert.lib.Integers Make bits_shru thm
R50238:50246 compcert.lib.Integers Make bits_shru thm
R50238:50246 compcert.lib.Integers Make bits_shru thm
R50267:50269 compcert.lib.Coqlib <> zlt def
R50288:50296 compcert.lib.Integers Make zwordsize def
R50273:50275 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R50276:50283 compcert.lib.Integers Make unsigned def
R50267:50269 compcert.lib.Coqlib <> zlt def
R50288:50296 compcert.lib.Integers Make zwordsize def
R50273:50275 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R50276:50283 compcert.lib.Integers Make unsigned def
R50337:50350 compcert.lib.Integers Make unsigned_range thm
R50337:50350 compcert.lib.Integers Make unsigned_range thm
prf 50377:50384 Make and_shru
binder 50396:50396 <> x:457
binder 50398:50398 <> y:458
binder 50400:50400 <> n:459
R50430:50432 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50405:50407 compcert.lib.Integers Make and def
R50421:50424 compcert.lib.Integers Make shru def
R50428:50428 compcert.lib.Integers <> n:459 var
R50426:50426 compcert.lib.Integers <> y:458 var
R50410:50413 compcert.lib.Integers Make shru def
R50417:50417 compcert.lib.Integers <> n:459 var
R50415:50415 compcert.lib.Integers <> x:457 var
R50433:50436 compcert.lib.Integers Make shru def
R50448:50448 compcert.lib.Integers <> n:459 var
R50439:50441 compcert.lib.Integers Make and def
R50445:50445 compcert.lib.Integers <> y:458 var
R50443:50443 compcert.lib.Integers <> x:457 var
R50498:50501 Coq.Init.Datatypes <> andb def
R50474:50491 compcert.lib.Integers Make bitwise_binop_shru thm
R50498:50501 Coq.Init.Datatypes <> andb def
R50474:50491 compcert.lib.Integers Make bitwise_binop_shru thm
R50516:50523 compcert.lib.Integers Make bits_and thm
R50516:50523 compcert.lib.Integers Make bits_and thm
prf 50540:50546 Make or_shru
binder 50558:50558 <> x:460
binder 50560:50560 <> y:461
binder 50562:50562 <> n:462
R50591:50593 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50567:50568 compcert.lib.Integers Make or def
R50582:50585 compcert.lib.Integers Make shru def
R50589:50589 compcert.lib.Integers <> n:462 var
R50587:50587 compcert.lib.Integers <> y:461 var
R50571:50574 compcert.lib.Integers Make shru def
R50578:50578 compcert.lib.Integers <> n:462 var
R50576:50576 compcert.lib.Integers <> x:460 var
R50594:50597 compcert.lib.Integers Make shru def
R50608:50608 compcert.lib.Integers <> n:462 var
R50600:50601 compcert.lib.Integers Make or def
R50605:50605 compcert.lib.Integers <> y:461 var
R50603:50603 compcert.lib.Integers <> x:460 var
R50658:50660 Coq.Init.Datatypes <> orb def
R50634:50651 compcert.lib.Integers Make bitwise_binop_shru thm
R50658:50660 Coq.Init.Datatypes <> orb def
R50634:50651 compcert.lib.Integers Make bitwise_binop_shru thm
R50675:50681 compcert.lib.Integers Make bits_or thm
R50675:50681 compcert.lib.Integers Make bits_or thm
prf 50698:50705 Make xor_shru
binder 50717:50717 <> x:463
binder 50719:50719 <> y:464
binder 50721:50721 <> n:465
R50751:50753 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50726:50728 compcert.lib.Integers Make xor def
R50742:50745 compcert.lib.Integers Make shru def
R50749:50749 compcert.lib.Integers <> n:465 var
R50747:50747 compcert.lib.Integers <> y:464 var
R50731:50734 compcert.lib.Integers Make shru def
R50738:50738 compcert.lib.Integers <> n:465 var
R50736:50736 compcert.lib.Integers <> x:463 var
R50754:50757 compcert.lib.Integers Make shru def
R50769:50769 compcert.lib.Integers <> n:465 var
R50760:50762 compcert.lib.Integers Make xor def
R50766:50766 compcert.lib.Integers <> y:464 var
R50764:50764 compcert.lib.Integers <> x:463 var
R50819:50822 Coq.Init.Datatypes <> xorb def
R50795:50812 compcert.lib.Integers Make bitwise_binop_shru thm
R50819:50822 Coq.Init.Datatypes <> xorb def
R50795:50812 compcert.lib.Integers Make bitwise_binop_shru thm
R50837:50844 compcert.lib.Integers Make bits_xor thm
R50837:50844 compcert.lib.Integers Make bits_xor thm
prf 50861:50869 Make shru_shru
binder 50881:50881 <> x:466
binder 50883:50883 <> y:467
binder 50885:50885 <> z:468
R50912:50917 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50940:50945 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50976:50981 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50999:51001 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50982:50985 compcert.lib.Integers Make shru def
R50998:50998 compcert.lib.Integers <> z:468 var
R50988:50991 compcert.lib.Integers Make shru def
R50995:50995 compcert.lib.Integers <> y:467 var
R50993:50993 compcert.lib.Integers <> x:466 var
R51002:51005 compcert.lib.Integers Make shru def
R51010:51012 compcert.lib.Integers Make add def
R51016:51016 compcert.lib.Integers <> z:468 var
R51014:51014 compcert.lib.Integers <> y:467 var
R51007:51007 compcert.lib.Integers <> x:466 var
R50969:50971 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50946:50948 compcert.lib.Integers Make ltu def
R50960:50968 compcert.lib.Integers Make iwordsize def
R50951:50953 compcert.lib.Integers Make add def
R50957:50957 compcert.lib.Integers <> z:468 var
R50955:50955 compcert.lib.Integers <> y:467 var
R50972:50975 Coq.Init.Datatypes <> true constr
R50933:50935 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50918:50920 compcert.lib.Integers Make ltu def
R50924:50932 compcert.lib.Integers Make iwordsize def
R50922:50922 compcert.lib.Integers <> z:468 var
R50936:50939 Coq.Init.Datatypes <> true constr
R50905:50907 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50890:50892 compcert.lib.Integers Make ltu def
R50896:50904 compcert.lib.Integers Make iwordsize def
R50894:50894 compcert.lib.Integers <> y:467 var
R50908:50911 Coq.Init.Datatypes <> true constr
R51051:51067 compcert.lib.Integers Make ltu_iwordsize_inv thm
R51075:51091 compcert.lib.Integers Make ltu_iwordsize_inv thm
R51051:51067 compcert.lib.Integers Make ltu_iwordsize_inv thm
R51075:51091 compcert.lib.Integers Make ltu_iwordsize_inv thm
R51136:51138 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51118:51125 compcert.lib.Integers Make unsigned def
R51128:51130 compcert.lib.Integers Make add def
R51149:51151 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51139:51146 compcert.lib.Integers Make unsigned def
R51152:51159 compcert.lib.Integers Make unsigned def
R51136:51138 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51118:51125 compcert.lib.Integers Make unsigned def
R51128:51130 compcert.lib.Integers Make add def
R51149:51151 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51139:51146 compcert.lib.Integers Make unsigned def
R51152:51159 compcert.lib.Integers Make unsigned def
R51176:51178 compcert.lib.Integers Make add def
R51187:51199 compcert.lib.Integers Make unsigned_repr thm
R51187:51199 compcert.lib.Integers Make unsigned_repr thm
R51217:51241 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R51217:51241 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R51259:51270 compcert.lib.Integers Make same_bits_eq thm
R51259:51270 compcert.lib.Integers Make same_bits_eq thm
R51291:51299 compcert.lib.Integers Make bits_shru thm
R51291:51299 compcert.lib.Integers Make bits_shru thm
R51291:51299 compcert.lib.Integers Make bits_shru thm
R51291:51299 compcert.lib.Integers Make bits_shru thm
R51320:51322 compcert.lib.Coqlib <> zlt def
R51341:51349 compcert.lib.Integers Make zwordsize def
R51326:51328 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51329:51336 compcert.lib.Integers Make unsigned def
R51320:51322 compcert.lib.Coqlib <> zlt def
R51341:51349 compcert.lib.Integers Make zwordsize def
R51326:51328 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51329:51336 compcert.lib.Integers Make unsigned def
R51365:51373 compcert.lib.Integers Make bits_shru thm
R51365:51373 compcert.lib.Integers Make bits_shru thm
R51365:51373 compcert.lib.Integers Make bits_shru thm
R51365:51373 compcert.lib.Integers Make bits_shru thm
R51386:51388 compcert.lib.Coqlib <> zlt def
R51420:51428 compcert.lib.Integers Make zwordsize def
R51405:51407 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51392:51394 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51395:51402 compcert.lib.Integers Make unsigned def
R51408:51415 compcert.lib.Integers Make unsigned def
R51386:51388 compcert.lib.Coqlib <> zlt def
R51420:51428 compcert.lib.Integers Make zwordsize def
R51405:51407 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51392:51394 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51395:51402 compcert.lib.Integers Make unsigned def
R51408:51415 compcert.lib.Integers Make unsigned def
R51446:51454 compcert.lib.Integers Make bits_shru thm
R51446:51454 compcert.lib.Integers Make bits_shru thm
R51446:51454 compcert.lib.Integers Make bits_shru thm
R51446:51454 compcert.lib.Integers Make bits_shru thm
R51471:51478 compcert.lib.Coqlib <> zlt_true thm
R51471:51478 compcert.lib.Coqlib <> zlt_true thm
R51471:51478 compcert.lib.Coqlib <> zlt_true thm
R51471:51478 compcert.lib.Coqlib <> zlt_true thm
R51518:51526 compcert.lib.Integers Make bits_shru thm
R51518:51526 compcert.lib.Integers Make bits_shru thm
R51518:51526 compcert.lib.Integers Make bits_shru thm
R51518:51526 compcert.lib.Integers Make bits_shru thm
R51543:51551 compcert.lib.Coqlib <> zlt_false thm
R51543:51551 compcert.lib.Coqlib <> zlt_false thm
R51543:51551 compcert.lib.Coqlib <> zlt_false thm
R51543:51551 compcert.lib.Coqlib <> zlt_false thm
R51592:51600 compcert.lib.Integers Make bits_shru thm
R51592:51600 compcert.lib.Integers Make bits_shru thm
R51592:51600 compcert.lib.Integers Make bits_shru thm
R51592:51600 compcert.lib.Integers Make bits_shru thm
R51617:51625 compcert.lib.Coqlib <> zlt_false thm
R51617:51625 compcert.lib.Coqlib <> zlt_false thm
R51617:51625 compcert.lib.Coqlib <> zlt_false thm
R51617:51625 compcert.lib.Coqlib <> zlt_false thm
prf 51655:51662 Make shr_zero
binder 51672:51672 <> x:469
R51685:51687 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51675:51677 compcert.lib.Integers Make shr def
R51681:51684 compcert.lib.Integers Make zero def
R51679:51679 compcert.lib.Integers <> x:469 var
R51688:51688 compcert.lib.Integers <> x:469 var
R51719:51731 compcert.lib.Integers Make unsigned_zero thm
R51719:51731 compcert.lib.Integers Make unsigned_zero thm
R51719:51731 compcert.lib.Integers Make unsigned_zero thm
R51742:51749 compcert.lib.Coqlib <> zlt_true thm
R51742:51749 compcert.lib.Coqlib <> zlt_true thm
R51742:51749 compcert.lib.Coqlib <> zlt_true thm
R51742:51749 compcert.lib.Coqlib <> zlt_true thm
prf 51787:51803 Make bitwise_binop_shr
binder 51815:51815 <> f:470
binder 51817:51818 <> f':471
binder 51820:51820 <> x:472
binder 51822:51822 <> y:473
binder 51824:51824 <> n:474
R51829:51829 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51916:51922 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51944:51946 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51923:51923 compcert.lib.Integers <> f:470 var
R51936:51938 compcert.lib.Integers Make shr def
R51942:51942 compcert.lib.Integers <> n:474 var
R51940:51940 compcert.lib.Integers <> y:473 var
R51926:51928 compcert.lib.Integers Make shr def
R51932:51932 compcert.lib.Integers <> n:474 var
R51930:51930 compcert.lib.Integers <> x:472 var
R51947:51949 compcert.lib.Integers Make shr def
R51959:51959 compcert.lib.Integers <> n:474 var
R51952:51952 compcert.lib.Integers <> f:470 var
R51956:51956 compcert.lib.Integers <> y:473 var
R51954:51954 compcert.lib.Integers <> x:472 var
binder 51837:51837 <> x:475
binder 51839:51839 <> y:476
binder 51841:51841 <> i:477
R51862:51865 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51883:51885 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51866:51872 compcert.lib.Integers Make testbit def
R51882:51882 compcert.lib.Integers <> i:477 var
R51875:51875 compcert.lib.Integers <> f:470 var
R51879:51879 compcert.lib.Integers <> y:476 var
R51877:51877 compcert.lib.Integers <> x:475 var
R51886:51887 compcert.lib.Integers <> f':471 var
R51904:51910 compcert.lib.Integers Make testbit def
R51914:51914 compcert.lib.Integers <> i:477 var
R51912:51912 compcert.lib.Integers <> y:476 var
R51890:51896 compcert.lib.Integers Make testbit def
R51900:51900 compcert.lib.Integers <> i:477 var
R51898:51898 compcert.lib.Integers <> x:475 var
R51845:51848 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R51850:51852 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R51849:51849 compcert.lib.Integers <> i:477 var
R51849:51849 compcert.lib.Integers <> i:477 var
R51853:51861 compcert.lib.Integers Make zwordsize def
R51985:51996 compcert.lib.Integers Make same_bits_eq thm
R51985:51996 compcert.lib.Integers Make same_bits_eq thm
R52035:52042 compcert.lib.Integers Make bits_shr thm
R52035:52042 compcert.lib.Integers Make bits_shr thm
R52035:52042 compcert.lib.Integers Make bits_shr thm
R52035:52042 compcert.lib.Integers Make bits_shr thm
R52035:52042 compcert.lib.Integers Make bits_shr thm
R52035:52042 compcert.lib.Integers Make bits_shr thm
R52035:52042 compcert.lib.Integers Make bits_shr thm
R52035:52042 compcert.lib.Integers Make bits_shr thm
R52035:52042 compcert.lib.Integers Make bits_shr thm
R52082:52084 compcert.lib.Coqlib <> zlt def
R52103:52111 compcert.lib.Integers Make zwordsize def
R52088:52090 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R52091:52098 compcert.lib.Integers Make unsigned def
R52082:52084 compcert.lib.Coqlib <> zlt def
R52103:52111 compcert.lib.Integers Make zwordsize def
R52088:52090 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R52091:52098 compcert.lib.Integers Make unsigned def
R52129:52142 compcert.lib.Integers Make unsigned_range thm
R52129:52142 compcert.lib.Integers Make unsigned_range thm
prf 52178:52184 Make and_shr
binder 52196:52196 <> x:478
binder 52198:52198 <> y:479
binder 52200:52200 <> n:480
R52228:52230 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52205:52207 compcert.lib.Integers Make and def
R52220:52222 compcert.lib.Integers Make shr def
R52226:52226 compcert.lib.Integers <> n:480 var
R52224:52224 compcert.lib.Integers <> y:479 var
R52210:52212 compcert.lib.Integers Make shr def
R52216:52216 compcert.lib.Integers <> n:480 var
R52214:52214 compcert.lib.Integers <> x:478 var
R52231:52233 compcert.lib.Integers Make shr def
R52245:52245 compcert.lib.Integers <> n:480 var
R52236:52238 compcert.lib.Integers Make and def
R52242:52242 compcert.lib.Integers <> y:479 var
R52240:52240 compcert.lib.Integers <> x:478 var
R52294:52297 Coq.Init.Datatypes <> andb def
R52271:52287 compcert.lib.Integers Make bitwise_binop_shr thm
R52294:52297 Coq.Init.Datatypes <> andb def
R52271:52287 compcert.lib.Integers Make bitwise_binop_shr thm
R52306:52313 compcert.lib.Integers Make bits_and thm
R52306:52313 compcert.lib.Integers Make bits_and thm
prf 52330:52335 Make or_shr
binder 52347:52347 <> x:481
binder 52349:52349 <> y:482
binder 52351:52351 <> n:483
R52378:52380 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52356:52357 compcert.lib.Integers Make or def
R52370:52372 compcert.lib.Integers Make shr def
R52376:52376 compcert.lib.Integers <> n:483 var
R52374:52374 compcert.lib.Integers <> y:482 var
R52360:52362 compcert.lib.Integers Make shr def
R52366:52366 compcert.lib.Integers <> n:483 var
R52364:52364 compcert.lib.Integers <> x:481 var
R52381:52383 compcert.lib.Integers Make shr def
R52394:52394 compcert.lib.Integers <> n:483 var
R52386:52387 compcert.lib.Integers Make or def
R52391:52391 compcert.lib.Integers <> y:482 var
R52389:52389 compcert.lib.Integers <> x:481 var
R52443:52445 Coq.Init.Datatypes <> orb def
R52420:52436 compcert.lib.Integers Make bitwise_binop_shr thm
R52443:52445 Coq.Init.Datatypes <> orb def
R52420:52436 compcert.lib.Integers Make bitwise_binop_shr thm
R52454:52460 compcert.lib.Integers Make bits_or thm
R52454:52460 compcert.lib.Integers Make bits_or thm
prf 52477:52483 Make xor_shr
binder 52495:52495 <> x:484
binder 52497:52497 <> y:485
binder 52499:52499 <> n:486
R52527:52529 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52504:52506 compcert.lib.Integers Make xor def
R52519:52521 compcert.lib.Integers Make shr def
R52525:52525 compcert.lib.Integers <> n:486 var
R52523:52523 compcert.lib.Integers <> y:485 var
R52509:52511 compcert.lib.Integers Make shr def
R52515:52515 compcert.lib.Integers <> n:486 var
R52513:52513 compcert.lib.Integers <> x:484 var
R52530:52532 compcert.lib.Integers Make shr def
R52544:52544 compcert.lib.Integers <> n:486 var
R52535:52537 compcert.lib.Integers Make xor def
R52541:52541 compcert.lib.Integers <> y:485 var
R52539:52539 compcert.lib.Integers <> x:484 var
R52593:52596 Coq.Init.Datatypes <> xorb def
R52570:52586 compcert.lib.Integers Make bitwise_binop_shr thm
R52593:52596 Coq.Init.Datatypes <> xorb def
R52570:52586 compcert.lib.Integers Make bitwise_binop_shr thm
R52605:52612 compcert.lib.Integers Make bits_xor thm
R52605:52612 compcert.lib.Integers Make bits_xor thm
prf 52629:52635 Make shr_shr
binder 52647:52647 <> x:487
binder 52649:52649 <> y:488
binder 52651:52651 <> z:489
R52678:52683 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52706:52711 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52742:52747 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52763:52765 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52748:52750 compcert.lib.Integers Make shr def
R52762:52762 compcert.lib.Integers <> z:489 var
R52753:52755 compcert.lib.Integers Make shr def
R52759:52759 compcert.lib.Integers <> y:488 var
R52757:52757 compcert.lib.Integers <> x:487 var
R52766:52768 compcert.lib.Integers Make shr def
R52773:52775 compcert.lib.Integers Make add def
R52779:52779 compcert.lib.Integers <> z:489 var
R52777:52777 compcert.lib.Integers <> y:488 var
R52770:52770 compcert.lib.Integers <> x:487 var
R52735:52737 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52712:52714 compcert.lib.Integers Make ltu def
R52726:52734 compcert.lib.Integers Make iwordsize def
R52717:52719 compcert.lib.Integers Make add def
R52723:52723 compcert.lib.Integers <> z:489 var
R52721:52721 compcert.lib.Integers <> y:488 var
R52738:52741 Coq.Init.Datatypes <> true constr
R52699:52701 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52684:52686 compcert.lib.Integers Make ltu def
R52690:52698 compcert.lib.Integers Make iwordsize def
R52688:52688 compcert.lib.Integers <> z:489 var
R52702:52705 Coq.Init.Datatypes <> true constr
R52671:52673 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52656:52658 compcert.lib.Integers Make ltu def
R52662:52670 compcert.lib.Integers Make iwordsize def
R52660:52660 compcert.lib.Integers <> y:488 var
R52674:52677 Coq.Init.Datatypes <> true constr
R52814:52830 compcert.lib.Integers Make ltu_iwordsize_inv thm
R52838:52854 compcert.lib.Integers Make ltu_iwordsize_inv thm
R52814:52830 compcert.lib.Integers Make ltu_iwordsize_inv thm
R52838:52854 compcert.lib.Integers Make ltu_iwordsize_inv thm
R52899:52901 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52881:52888 compcert.lib.Integers Make unsigned def
R52891:52893 compcert.lib.Integers Make add def
R52912:52914 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R52902:52909 compcert.lib.Integers Make unsigned def
R52915:52922 compcert.lib.Integers Make unsigned def
R52899:52901 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52881:52888 compcert.lib.Integers Make unsigned def
R52891:52893 compcert.lib.Integers Make add def
R52912:52914 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R52902:52909 compcert.lib.Integers Make unsigned def
R52915:52922 compcert.lib.Integers Make unsigned def
R52939:52941 compcert.lib.Integers Make add def
R52950:52962 compcert.lib.Integers Make unsigned_repr thm
R52950:52962 compcert.lib.Integers Make unsigned_repr thm
R52980:53004 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R52980:53004 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R53022:53033 compcert.lib.Integers Make same_bits_eq thm
R53022:53033 compcert.lib.Integers Make same_bits_eq thm
R53055:53062 compcert.lib.Integers Make bits_shr thm
R53055:53062 compcert.lib.Integers Make bits_shr thm
R53055:53062 compcert.lib.Integers Make bits_shr thm
R53055:53062 compcert.lib.Integers Make bits_shr thm
R53055:53062 compcert.lib.Integers Make bits_shr thm
R53055:53062 compcert.lib.Integers Make bits_shr thm
R53055:53062 compcert.lib.Integers Make bits_shr thm
R53055:53062 compcert.lib.Integers Make bits_shr thm
R53055:53062 compcert.lib.Integers Make bits_shr thm
R53092:53094 compcert.lib.Coqlib <> zlt def
R53113:53121 compcert.lib.Integers Make zwordsize def
R53098:53100 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53101:53108 compcert.lib.Integers Make unsigned def
R53092:53094 compcert.lib.Coqlib <> zlt def
R53113:53121 compcert.lib.Integers Make zwordsize def
R53098:53100 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53101:53108 compcert.lib.Integers Make unsigned def
R53149:53152 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53176:53176 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53163:53165 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53153:53160 compcert.lib.Integers Make unsigned def
R53166:53173 compcert.lib.Integers Make unsigned def
R53199:53201 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53186:53188 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53189:53196 compcert.lib.Integers Make unsigned def
R53202:53209 compcert.lib.Integers Make unsigned def
R53149:53152 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53176:53176 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53163:53165 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53153:53160 compcert.lib.Integers Make unsigned def
R53166:53173 compcert.lib.Integers Make unsigned def
R53199:53201 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53186:53188 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53189:53196 compcert.lib.Integers Make unsigned def
R53202:53209 compcert.lib.Integers Make unsigned def
R53241:53249 compcert.lib.Coqlib <> zlt_false thm
R53255:53257 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53258:53265 compcert.lib.Integers Make unsigned def
R53268:53270 compcert.lib.Integers Make add def
R53241:53249 compcert.lib.Coqlib <> zlt_false thm
R53255:53257 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53258:53265 compcert.lib.Integers Make unsigned def
R53268:53270 compcert.lib.Integers Make add def
R53241:53249 compcert.lib.Coqlib <> zlt_false thm
R53255:53257 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53258:53265 compcert.lib.Integers Make unsigned def
R53268:53270 compcert.lib.Integers Make add def
R53241:53249 compcert.lib.Coqlib <> zlt_false thm
R53255:53257 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53258:53265 compcert.lib.Integers Make unsigned def
R53268:53270 compcert.lib.Integers Make add def
R53292:53294 compcert.lib.Coqlib <> zlt def
R53325:53333 compcert.lib.Integers Make zwordsize def
R53310:53312 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53306:53308 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R53297:53305 compcert.lib.Integers Make zwordsize def
R53313:53320 compcert.lib.Integers Make unsigned def
R53292:53294 compcert.lib.Coqlib <> zlt def
R53325:53333 compcert.lib.Integers Make zwordsize def
R53310:53312 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53306:53308 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R53297:53305 compcert.lib.Integers Make zwordsize def
R53313:53320 compcert.lib.Integers Make unsigned def
R53365:53367 compcert.lib.Coqlib <> zlt def
R53386:53394 compcert.lib.Integers Make zwordsize def
R53371:53373 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53374:53381 compcert.lib.Integers Make unsigned def
R53365:53367 compcert.lib.Coqlib <> zlt def
R53386:53394 compcert.lib.Integers Make zwordsize def
R53371:53373 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53374:53381 compcert.lib.Integers Make unsigned def
prf 53419:53430 Make and_shr_shru
binder 53442:53442 <> x:490
binder 53444:53444 <> y:491
binder 53446:53446 <> z:492
R53475:53477 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53451:53453 compcert.lib.Integers Make and def
R53466:53469 compcert.lib.Integers Make shru def
R53473:53473 compcert.lib.Integers <> z:492 var
R53471:53471 compcert.lib.Integers <> y:491 var
R53456:53458 compcert.lib.Integers Make shr def
R53462:53462 compcert.lib.Integers <> z:492 var
R53460:53460 compcert.lib.Integers <> x:490 var
R53478:53481 compcert.lib.Integers Make shru def
R53493:53493 compcert.lib.Integers <> z:492 var
R53484:53486 compcert.lib.Integers Make and def
R53490:53490 compcert.lib.Integers <> y:491 var
R53488:53488 compcert.lib.Integers <> x:490 var
R53519:53530 compcert.lib.Integers Make same_bits_eq thm
R53519:53530 compcert.lib.Integers Make same_bits_eq thm
R53551:53558 compcert.lib.Integers Make bits_and thm
R53551:53558 compcert.lib.Integers Make bits_and thm
R53551:53558 compcert.lib.Integers Make bits_and thm
R53551:53558 compcert.lib.Integers Make bits_and thm
R53575:53582 compcert.lib.Integers Make bits_shr thm
R53575:53582 compcert.lib.Integers Make bits_shr thm
R53575:53582 compcert.lib.Integers Make bits_shr thm
R53575:53582 compcert.lib.Integers Make bits_shr thm
R53600:53608 compcert.lib.Integers Make bits_shru thm
R53600:53608 compcert.lib.Integers Make bits_shru thm
R53600:53608 compcert.lib.Integers Make bits_shru thm
R53600:53608 compcert.lib.Integers Make bits_shru thm
R53600:53608 compcert.lib.Integers Make bits_shru thm
R53600:53608 compcert.lib.Integers Make bits_shru thm
R53600:53608 compcert.lib.Integers Make bits_shru thm
R53629:53631 compcert.lib.Coqlib <> zlt def
R53650:53658 compcert.lib.Integers Make zwordsize def
R53635:53637 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53638:53645 compcert.lib.Integers Make unsigned def
R53629:53631 compcert.lib.Coqlib <> zlt def
R53650:53658 compcert.lib.Integers Make zwordsize def
R53635:53637 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53638:53645 compcert.lib.Integers Make unsigned def
R53674:53681 compcert.lib.Integers Make bits_and thm
R53674:53681 compcert.lib.Integers Make bits_and thm
R53674:53681 compcert.lib.Integers Make bits_and thm
R53674:53681 compcert.lib.Integers Make bits_and thm
R53702:53715 compcert.lib.Integers Make unsigned_range thm
R53702:53715 compcert.lib.Integers Make unsigned_range thm
R53738:53749 Coq.Bool.Bool <> andb_false_r thm
R53738:53749 Coq.Bool.Bool <> andb_false_r thm
prf 53766:53781 Make shr_and_shru_and
binder 53793:53793 <> x:493
binder 53795:53795 <> y:494
binder 53797:53797 <> z:495
R53822:53827 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53843:53845 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53828:53830 compcert.lib.Integers Make and def
R53842:53842 compcert.lib.Integers <> z:495 var
R53833:53835 compcert.lib.Integers Make shr def
R53839:53839 compcert.lib.Integers <> y:494 var
R53837:53837 compcert.lib.Integers <> x:493 var
R53846:53848 compcert.lib.Integers Make and def
R53861:53861 compcert.lib.Integers <> z:495 var
R53851:53854 compcert.lib.Integers Make shru def
R53858:53858 compcert.lib.Integers <> y:494 var
R53856:53856 compcert.lib.Integers <> x:493 var
R53818:53820 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53802:53805 compcert.lib.Integers Make shru def
R53817:53817 compcert.lib.Integers <> y:494 var
R53808:53810 compcert.lib.Integers Make shl def
R53814:53814 compcert.lib.Integers <> y:494 var
R53812:53812 compcert.lib.Integers <> z:495 var
R53821:53821 compcert.lib.Integers <> z:495 var
R53907:53914 compcert.lib.Integers Make and_shru thm
R53907:53914 compcert.lib.Integers Make and_shru thm
R53907:53914 compcert.lib.Integers Make and_shru thm
R53925:53936 compcert.lib.Integers Make and_shr_shru thm
R53925:53936 compcert.lib.Integers Make and_shr_shru thm
R53925:53936 compcert.lib.Integers Make and_shr_shru thm
prf 53959:53970 Make shru_lt_zero
binder 53982:53982 <> x:496
R54016:54018 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53987:53990 compcert.lib.Integers Make shru def
R53995:53998 compcert.lib.Integers Make repr def
R54010:54012 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R54001:54009 compcert.lib.Integers Make zwordsize def
R53992:53992 compcert.lib.Integers <> x:496 var
R54022:54023 compcert.lib.Integers Make lt def
R54027:54030 compcert.lib.Integers Make zero def
R54025:54025 compcert.lib.Integers <> x:496 var
R54046:54049 compcert.lib.Integers Make zero def
R54037:54039 compcert.lib.Integers Make one def
R54075:54086 compcert.lib.Integers Make same_bits_eq thm
R54075:54086 compcert.lib.Integers Make same_bits_eq thm
R54107:54115 compcert.lib.Integers Make bits_shru thm
R54107:54115 compcert.lib.Integers Make bits_shru thm
R54107:54115 compcert.lib.Integers Make bits_shru thm
R54107:54115 compcert.lib.Integers Make bits_shru thm
R54134:54146 compcert.lib.Integers Make unsigned_repr thm
R54134:54146 compcert.lib.Integers Make unsigned_repr thm
R54134:54146 compcert.lib.Integers Make unsigned_repr thm
R54134:54146 compcert.lib.Integers Make unsigned_repr thm
R54161:54163 compcert.lib.Coqlib <> zeq def
R54161:54163 compcert.lib.Coqlib <> zeq def
R54190:54198 Coq.ZArith.BinInt Z add_0_l thm
R54190:54198 Coq.ZArith.BinInt Z add_0_l thm
R54190:54198 Coq.ZArith.BinInt Z add_0_l thm
R54209:54216 compcert.lib.Coqlib <> zlt_true thm
R54209:54216 compcert.lib.Coqlib <> zlt_true thm
R54209:54216 compcert.lib.Coqlib <> zlt_true thm
R54209:54216 compcert.lib.Coqlib <> zlt_true thm
R54229:54248 compcert.lib.Integers Make sign_bit_of_unsigned thm
R54229:54248 compcert.lib.Integers Make sign_bit_of_unsigned thm
R54229:54248 compcert.lib.Integers Make sign_bit_of_unsigned thm
R54260:54261 compcert.lib.Integers Make lt def
R54272:54282 compcert.lib.Integers Make signed_zero thm
R54272:54282 compcert.lib.Integers Make signed_zero thm
R54272:54282 compcert.lib.Integers Make signed_zero thm
R54292:54297 compcert.lib.Integers Make signed def
R54312:54314 compcert.lib.Coqlib <> zlt def
R54329:54340 compcert.lib.Integers Make half_modulus def
R54317:54324 compcert.lib.Integers Make unsigned def
R54312:54314 compcert.lib.Coqlib <> zlt def
R54329:54340 compcert.lib.Integers Make half_modulus def
R54317:54324 compcert.lib.Integers Make unsigned def
R54354:54362 compcert.lib.Coqlib <> zlt_false thm
R54354:54362 compcert.lib.Coqlib <> zlt_false thm
R54354:54362 compcert.lib.Coqlib <> zlt_false thm
R54354:54362 compcert.lib.Coqlib <> zlt_false thm
R54383:54396 compcert.lib.Integers Make unsigned_range thm
R54383:54396 compcert.lib.Integers Make unsigned_range thm
R54419:54426 compcert.lib.Coqlib <> zlt_true thm
R54419:54426 compcert.lib.Coqlib <> zlt_true thm
R54419:54426 compcert.lib.Coqlib <> zlt_true thm
R54419:54426 compcert.lib.Coqlib <> zlt_true thm
R54436:54438 compcert.lib.Integers Make one def
R54449:54460 compcert.lib.Integers Make testbit_repr thm
R54449:54460 compcert.lib.Integers Make testbit_repr thm
R54449:54460 compcert.lib.Integers Make testbit_repr thm
R54449:54460 compcert.lib.Integers Make testbit_repr thm
R54483:54496 compcert.lib.Integers Make unsigned_range thm
R54483:54496 compcert.lib.Integers Make unsigned_range thm
R54528:54536 compcert.lib.Coqlib <> zlt_false thm
R54528:54536 compcert.lib.Coqlib <> zlt_false thm
R54528:54536 compcert.lib.Coqlib <> zlt_false thm
R54528:54536 compcert.lib.Coqlib <> zlt_false thm
R54548:54554 compcert.lib.Integers Make testbit def
R54565:54575 compcert.lib.Zbits <> Ztestbit_eq thm
R54565:54575 compcert.lib.Zbits <> Ztestbit_eq thm
R54565:54575 compcert.lib.Zbits <> Ztestbit_eq thm
R54565:54575 compcert.lib.Zbits <> Ztestbit_eq thm
R54586:54594 compcert.lib.Coqlib <> zeq_false thm
R54586:54594 compcert.lib.Coqlib <> zeq_false thm
R54586:54594 compcert.lib.Coqlib <> zeq_false thm
R54586:54594 compcert.lib.Coqlib <> zeq_false thm
R54609:54610 compcert.lib.Integers Make lt def
R54614:54617 compcert.lib.Integers Make zero def
R54609:54610 compcert.lib.Integers Make lt def
R54614:54617 compcert.lib.Integers Make zero def
R54631:54642 compcert.lib.Integers Make unsigned_one thm
R54631:54642 compcert.lib.Integers Make unsigned_one thm
R54631:54642 compcert.lib.Integers Make unsigned_one thm
R54667:54679 Coq.ZArith.BinInt Z testbit_0_l thm
R54667:54679 Coq.ZArith.BinInt Z testbit_0_l thm
R54667:54679 Coq.ZArith.BinInt Z testbit_0_l thm
R54698:54710 compcert.lib.Integers Make unsigned_zero thm
R54698:54710 compcert.lib.Integers Make unsigned_zero thm
R54698:54710 compcert.lib.Integers Make unsigned_zero thm
R54735:54747 Coq.ZArith.BinInt Z testbit_0_l thm
R54735:54747 Coq.ZArith.BinInt Z testbit_0_l thm
R54735:54747 Coq.ZArith.BinInt Z testbit_0_l thm
R54791:54811 compcert.lib.Integers Make wordsize_max_unsigned thm
R54791:54811 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 54835:54845 Make shr_lt_zero
binder 54857:54857 <> x:497
R54890:54892 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54862:54864 compcert.lib.Integers Make shr def
R54869:54872 compcert.lib.Integers Make repr def
R54884:54886 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R54875:54883 compcert.lib.Integers Make zwordsize def
R54866:54866 compcert.lib.Integers <> x:497 var
R54896:54897 compcert.lib.Integers Make lt def
R54901:54904 compcert.lib.Integers Make zero def
R54899:54899 compcert.lib.Integers <> x:497 var
R54921:54924 compcert.lib.Integers Make zero def
R54911:54914 compcert.lib.Integers Make mone def
R54950:54961 compcert.lib.Integers Make same_bits_eq thm
R54950:54961 compcert.lib.Integers Make same_bits_eq thm
R54982:54989 compcert.lib.Integers Make bits_shr thm
R54982:54989 compcert.lib.Integers Make bits_shr thm
R54982:54989 compcert.lib.Integers Make bits_shr thm
R54982:54989 compcert.lib.Integers Make bits_shr thm
R55008:55020 compcert.lib.Integers Make unsigned_repr thm
R55008:55020 compcert.lib.Integers Make unsigned_repr thm
R55008:55020 compcert.lib.Integers Make unsigned_repr thm
R55008:55020 compcert.lib.Integers Make unsigned_repr thm
R55039:55045 compcert.lib.Integers Make testbit def
R55059:55061 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R55050:55058 compcert.lib.Integers Make zwordsize def
R55039:55045 compcert.lib.Integers Make testbit def
R55059:55061 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R55050:55058 compcert.lib.Integers Make zwordsize def
R55088:55090 compcert.lib.Coqlib <> zlt def
R55114:55122 compcert.lib.Integers Make zwordsize def
R55094:55097 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R55111:55111 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R55107:55109 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R55098:55106 compcert.lib.Integers Make zwordsize def
R55088:55090 compcert.lib.Coqlib <> zlt def
R55114:55122 compcert.lib.Integers Make zwordsize def
R55094:55097 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R55111:55111 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R55107:55109 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R55098:55106 compcert.lib.Integers Make zwordsize def
R55143:55162 compcert.lib.Integers Make sign_bit_of_unsigned thm
R55143:55162 compcert.lib.Integers Make sign_bit_of_unsigned thm
R55143:55162 compcert.lib.Integers Make sign_bit_of_unsigned thm
R55174:55175 compcert.lib.Integers Make lt def
R55186:55196 compcert.lib.Integers Make signed_zero thm
R55186:55196 compcert.lib.Integers Make signed_zero thm
R55186:55196 compcert.lib.Integers Make signed_zero thm
R55206:55211 compcert.lib.Integers Make signed def
R55226:55228 compcert.lib.Coqlib <> zlt def
R55243:55254 compcert.lib.Integers Make half_modulus def
R55231:55238 compcert.lib.Integers Make unsigned def
R55226:55228 compcert.lib.Coqlib <> zlt def
R55243:55254 compcert.lib.Integers Make half_modulus def
R55231:55238 compcert.lib.Integers Make unsigned def
R55268:55276 compcert.lib.Coqlib <> zlt_false thm
R55268:55276 compcert.lib.Coqlib <> zlt_false thm
R55268:55276 compcert.lib.Coqlib <> zlt_false thm
R55268:55276 compcert.lib.Coqlib <> zlt_false thm
R55287:55295 compcert.lib.Integers Make bits_zero thm
R55287:55295 compcert.lib.Integers Make bits_zero thm
R55287:55295 compcert.lib.Integers Make bits_zero thm
R55316:55329 compcert.lib.Integers Make unsigned_range thm
R55316:55329 compcert.lib.Integers Make unsigned_range thm
R55352:55359 compcert.lib.Coqlib <> zlt_true thm
R55352:55359 compcert.lib.Coqlib <> zlt_true thm
R55352:55359 compcert.lib.Coqlib <> zlt_true thm
R55352:55359 compcert.lib.Coqlib <> zlt_true thm
R55370:55378 compcert.lib.Integers Make bits_mone thm
R55370:55378 compcert.lib.Integers Make bits_mone thm
R55370:55378 compcert.lib.Integers Make bits_mone thm
R55370:55378 compcert.lib.Integers Make bits_mone thm
R55399:55412 compcert.lib.Integers Make unsigned_range thm
R55399:55412 compcert.lib.Integers Make unsigned_range thm
R55438:55458 compcert.lib.Integers Make wordsize_max_unsigned thm
R55438:55458 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 55515:55522 Make bits_rol
binder 55534:55534 <> x:498
binder 55536:55536 <> y:499
binder 55538:55538 <> i:500
R55561:55566 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55586:55588 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55567:55573 compcert.lib.Integers Make testbit def
R55585:55585 compcert.lib.Integers <> i:500 var
R55576:55578 compcert.lib.Integers Make rol def
R55582:55582 compcert.lib.Integers <> y:499 var
R55580:55580 compcert.lib.Integers <> x:498 var
R55589:55595 compcert.lib.Integers Make testbit def
R55600:55600 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R55615:55620 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R55602:55604 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R55601:55601 compcert.lib.Integers <> i:500 var
R55605:55612 compcert.lib.Integers Make unsigned def
R55614:55614 compcert.lib.Integers <> y:499 var
R55621:55629 compcert.lib.Integers Make zwordsize def
R55597:55597 compcert.lib.Integers <> x:498 var
R55544:55547 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R55549:55551 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R55548:55548 compcert.lib.Integers <> i:500 var
R55548:55548 compcert.lib.Integers <> i:500 var
R55552:55560 compcert.lib.Integers Make zwordsize def
R55657:55659 compcert.lib.Integers Make rol def
R55673:55684 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R55699:55707 compcert.lib.Integers Make zwordsize def
R55687:55694 compcert.lib.Integers Make unsigned def
R55673:55684 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R55699:55707 compcert.lib.Integers Make zwordsize def
R55687:55694 compcert.lib.Integers Make unsigned def
R55717:55728 compcert.lib.Integers Make wordsize_pos thm
R55717:55728 compcert.lib.Integers Make wordsize_pos thm
R55753:55757 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R55743:55750 compcert.lib.Integers Make unsigned def
R55758:55766 compcert.lib.Integers Make zwordsize def
R55753:55757 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R55743:55750 compcert.lib.Integers Make unsigned def
R55758:55766 compcert.lib.Integers Make zwordsize def
R55790:55792 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R55780:55787 compcert.lib.Integers Make unsigned def
R55793:55801 compcert.lib.Integers Make zwordsize def
R55790:55792 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R55780:55787 compcert.lib.Integers Make unsigned def
R55793:55801 compcert.lib.Integers Make zwordsize def
R55829:55836 Coq.ZArith.Zdiv <> Z_mod_lt thm
R55851:55859 compcert.lib.Integers Make zwordsize def
R55839:55846 compcert.lib.Integers Make unsigned def
R55829:55836 Coq.ZArith.Zdiv <> Z_mod_lt thm
R55851:55859 compcert.lib.Integers Make zwordsize def
R55839:55846 compcert.lib.Integers Make unsigned def
R55869:55880 compcert.lib.Integers Make wordsize_pos thm
R55869:55880 compcert.lib.Integers Make wordsize_pos thm
R55917:55928 compcert.lib.Integers Make testbit_repr thm
R55917:55928 compcert.lib.Integers Make testbit_repr thm
R55917:55928 compcert.lib.Integers Make testbit_repr thm
R55917:55928 compcert.lib.Integers Make testbit_repr thm
R55947:55956 Coq.ZArith.BinInt Z lor_spec thm
R55947:55956 Coq.ZArith.BinInt Z lor_spec thm
R55947:55956 Coq.ZArith.BinInt Z lor_spec thm
R55967:55979 Coq.ZArith.BinInt Z shiftr_spec thm
R55967:55979 Coq.ZArith.BinInt Z shiftr_spec thm
R55967:55979 Coq.ZArith.BinInt Z shiftr_spec thm
R55967:55979 Coq.ZArith.BinInt Z shiftr_spec thm
R56004:56006 compcert.lib.Coqlib <> zlt def
R56004:56006 compcert.lib.Coqlib <> zlt def
R56026:56042 Coq.ZArith.BinInt Z shiftl_spec_low thm
R56026:56042 Coq.ZArith.BinInt Z shiftl_spec_low thm
R56026:56042 Coq.ZArith.BinInt Z shiftl_spec_low thm
R56026:56042 Coq.ZArith.BinInt Z shiftl_spec_low thm
R56069:56075 compcert.lib.Integers Make testbit def
R56127:56129 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R56125:56125 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R56107:56117 compcert.lib.Coqlib <> Zmod_unique thm
R56127:56129 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R56125:56125 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R56107:56117 compcert.lib.Coqlib <> Zmod_unique thm
R56179:56196 Coq.ZArith.BinInt Z shiftl_spec_high thm
R56179:56196 Coq.ZArith.BinInt Z shiftl_spec_high thm
R56179:56196 Coq.ZArith.BinInt Z shiftl_spec_high thm
R56179:56196 Coq.ZArith.BinInt Z shiftl_spec_high thm
R56179:56196 Coq.ZArith.BinInt Z shiftl_spec_high thm
R56209:56215 compcert.lib.Integers Make testbit def
R56221:56224 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56238:56238 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56234:56236 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R56225:56233 compcert.lib.Integers Make zwordsize def
R56209:56215 compcert.lib.Integers Make testbit def
R56221:56224 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56238:56238 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56234:56236 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R56225:56233 compcert.lib.Integers Make zwordsize def
R56255:56264 compcert.lib.Integers Make bits_above thm
R56255:56264 compcert.lib.Integers Make bits_above thm
R56255:56264 compcert.lib.Integers Make bits_above thm
R56255:56264 compcert.lib.Integers Make bits_above thm
R56275:56285 Coq.Bool.Bool <> orb_false_r thm
R56275:56285 Coq.Bool.Bool <> orb_false_r thm
R56275:56285 Coq.Bool.Bool <> orb_false_r thm
R56298:56304 compcert.lib.Integers Make testbit def
R56310:56312 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R56298:56304 compcert.lib.Integers Make testbit def
R56310:56312 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R56365:56365 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R56347:56357 compcert.lib.Coqlib <> Zmod_unique thm
R56365:56365 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R56347:56357 compcert.lib.Coqlib <> Zmod_unique thm
prf 56436:56443 Make bits_ror
binder 56455:56455 <> x:501
binder 56457:56457 <> y:502
binder 56459:56459 <> i:503
R56482:56487 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56507:56509 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56488:56494 compcert.lib.Integers Make testbit def
R56506:56506 compcert.lib.Integers <> i:503 var
R56497:56499 compcert.lib.Integers Make ror def
R56503:56503 compcert.lib.Integers <> y:502 var
R56501:56501 compcert.lib.Integers <> x:501 var
R56510:56516 compcert.lib.Integers Make testbit def
R56521:56521 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R56536:56541 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R56523:56525 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56522:56522 compcert.lib.Integers <> i:503 var
R56526:56533 compcert.lib.Integers Make unsigned def
R56535:56535 compcert.lib.Integers <> y:502 var
R56542:56550 compcert.lib.Integers Make zwordsize def
R56518:56518 compcert.lib.Integers <> x:501 var
R56465:56468 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R56470:56472 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R56469:56469 compcert.lib.Integers <> i:503 var
R56469:56469 compcert.lib.Integers <> i:503 var
R56473:56481 compcert.lib.Integers Make zwordsize def
R56578:56580 compcert.lib.Integers Make ror def
R56594:56605 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R56620:56628 compcert.lib.Integers Make zwordsize def
R56608:56615 compcert.lib.Integers Make unsigned def
R56594:56605 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R56620:56628 compcert.lib.Integers Make zwordsize def
R56608:56615 compcert.lib.Integers Make unsigned def
R56638:56649 compcert.lib.Integers Make wordsize_pos thm
R56638:56649 compcert.lib.Integers Make wordsize_pos thm
R56674:56678 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R56664:56671 compcert.lib.Integers Make unsigned def
R56679:56687 compcert.lib.Integers Make zwordsize def
R56674:56678 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R56664:56671 compcert.lib.Integers Make unsigned def
R56679:56687 compcert.lib.Integers Make zwordsize def
R56711:56713 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R56701:56708 compcert.lib.Integers Make unsigned def
R56714:56722 compcert.lib.Integers Make zwordsize def
R56711:56713 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R56701:56708 compcert.lib.Integers Make unsigned def
R56714:56722 compcert.lib.Integers Make zwordsize def
R56750:56757 Coq.ZArith.Zdiv <> Z_mod_lt thm
R56772:56780 compcert.lib.Integers Make zwordsize def
R56760:56767 compcert.lib.Integers Make unsigned def
R56750:56757 Coq.ZArith.Zdiv <> Z_mod_lt thm
R56772:56780 compcert.lib.Integers Make zwordsize def
R56760:56767 compcert.lib.Integers Make unsigned def
R56790:56801 compcert.lib.Integers Make wordsize_pos thm
R56790:56801 compcert.lib.Integers Make wordsize_pos thm
R56838:56849 compcert.lib.Integers Make testbit_repr thm
R56838:56849 compcert.lib.Integers Make testbit_repr thm
R56838:56849 compcert.lib.Integers Make testbit_repr thm
R56838:56849 compcert.lib.Integers Make testbit_repr thm
R56868:56877 Coq.ZArith.BinInt Z lor_spec thm
R56868:56877 Coq.ZArith.BinInt Z lor_spec thm
R56868:56877 Coq.ZArith.BinInt Z lor_spec thm
R56888:56900 Coq.ZArith.BinInt Z shiftr_spec thm
R56888:56900 Coq.ZArith.BinInt Z shiftr_spec thm
R56888:56900 Coq.ZArith.BinInt Z shiftr_spec thm
R56888:56900 Coq.ZArith.BinInt Z shiftr_spec thm
R56925:56927 compcert.lib.Coqlib <> zlt def
R56937:56945 compcert.lib.Integers Make zwordsize def
R56931:56933 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56925:56927 compcert.lib.Coqlib <> zlt def
R56937:56945 compcert.lib.Integers Make zwordsize def
R56931:56933 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56961:56977 Coq.ZArith.BinInt Z shiftl_spec_low thm
R56961:56977 Coq.ZArith.BinInt Z shiftl_spec_low thm
R56961:56977 Coq.ZArith.BinInt Z shiftl_spec_low thm
R56961:56977 Coq.ZArith.BinInt Z shiftl_spec_low thm
R56994:57004 Coq.Bool.Bool <> orb_false_r thm
R56994:57004 Coq.Bool.Bool <> orb_false_r thm
R56994:57004 Coq.Bool.Bool <> orb_false_r thm
R57018:57024 compcert.lib.Integers Make testbit def
R57056:57066 compcert.lib.Coqlib <> Zmod_unique thm
R57056:57066 compcert.lib.Coqlib <> Zmod_unique thm
R57128:57145 Coq.ZArith.BinInt Z shiftl_spec_high thm
R57128:57145 Coq.ZArith.BinInt Z shiftl_spec_high thm
R57128:57145 Coq.ZArith.BinInt Z shiftl_spec_high thm
R57128:57145 Coq.ZArith.BinInt Z shiftl_spec_high thm
R57128:57145 Coq.ZArith.BinInt Z shiftl_spec_high thm
R57158:57164 compcert.lib.Integers Make testbit def
R57170:57172 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R57158:57164 compcert.lib.Integers Make testbit def
R57170:57172 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R57190:57199 compcert.lib.Integers Make bits_above thm
R57190:57199 compcert.lib.Integers Make bits_above thm
R57190:57199 compcert.lib.Integers Make bits_above thm
R57190:57199 compcert.lib.Integers Make bits_above thm
R57220:57226 compcert.lib.Integers Make testbit def
R57277:57279 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R57258:57268 compcert.lib.Coqlib <> Zmod_unique thm
R57277:57279 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R57258:57268 compcert.lib.Coqlib <> Zmod_unique thm
R57357:57364 compcert.lib.Integers Make bits_rol thm
R57366:57373 compcert.lib.Integers Make bits_ror thm
prf 57391:57398 Make shl_rolm
binder 57410:57410 <> x:504
binder 57412:57412 <> n:505
R57439:57444 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57452:57454 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57445:57447 compcert.lib.Integers Make shl def
R57451:57451 compcert.lib.Integers <> n:505 var
R57449:57449 compcert.lib.Integers <> x:504 var
R57455:57458 compcert.lib.Integers Make rolm def
R57465:57467 compcert.lib.Integers Make shl def
R57474:57474 compcert.lib.Integers <> n:505 var
R57469:57472 compcert.lib.Integers Make mone def
R57462:57462 compcert.lib.Integers <> n:505 var
R57460:57460 compcert.lib.Integers <> x:504 var
R57432:57434 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57417:57419 compcert.lib.Integers Make ltu def
R57423:57431 compcert.lib.Integers Make iwordsize def
R57421:57421 compcert.lib.Integers <> n:505 var
R57435:57438 Coq.Init.Datatypes <> true constr
R57507:57513 compcert.lib.Integers Make ltu_inv thm
R57507:57513 compcert.lib.Integers Make ltu_inv thm
R57531:57552 compcert.lib.Integers Make unsigned_repr_wordsize thm
R57531:57552 compcert.lib.Integers Make unsigned_repr_wordsize thm
R57531:57552 compcert.lib.Integers Make unsigned_repr_wordsize thm
R57572:57575 compcert.lib.Integers Make rolm def
R57584:57595 compcert.lib.Integers Make same_bits_eq thm
R57584:57595 compcert.lib.Integers Make same_bits_eq thm
R57616:57623 compcert.lib.Integers Make bits_and thm
R57616:57623 compcert.lib.Integers Make bits_and thm
R57616:57623 compcert.lib.Integers Make bits_and thm
R57616:57623 compcert.lib.Integers Make bits_and thm
R57641:57648 compcert.lib.Integers Make bits_shl thm
R57641:57648 compcert.lib.Integers Make bits_shl thm
R57641:57648 compcert.lib.Integers Make bits_shl thm
R57641:57648 compcert.lib.Integers Make bits_shl thm
R57641:57648 compcert.lib.Integers Make bits_shl thm
R57641:57648 compcert.lib.Integers Make bits_shl thm
R57641:57648 compcert.lib.Integers Make bits_shl thm
R57665:57672 compcert.lib.Integers Make bits_rol thm
R57665:57672 compcert.lib.Integers Make bits_rol thm
R57665:57672 compcert.lib.Integers Make bits_rol thm
R57665:57672 compcert.lib.Integers Make bits_rol thm
R57693:57695 compcert.lib.Coqlib <> zlt def
R57700:57707 compcert.lib.Integers Make unsigned def
R57693:57695 compcert.lib.Coqlib <> zlt def
R57700:57707 compcert.lib.Integers Make unsigned def
R57726:57737 Coq.Bool.Bool <> andb_false_r thm
R57726:57737 Coq.Bool.Bool <> andb_false_r thm
R57726:57737 Coq.Bool.Bool <> andb_false_r thm
R57762:57775 compcert.lib.Integers Make unsigned_range thm
R57762:57775 compcert.lib.Integers Make unsigned_range thm
R57801:57809 compcert.lib.Integers Make bits_mone thm
R57801:57809 compcert.lib.Integers Make bits_mone thm
R57801:57809 compcert.lib.Integers Make bits_mone thm
R57801:57809 compcert.lib.Integers Make bits_mone thm
R57820:57830 Coq.Bool.Bool <> andb_true_r thm
R57820:57830 Coq.Bool.Bool <> andb_true_r thm
R57820:57830 Coq.Bool.Bool <> andb_true_r thm
R57862:57872 Coq.ZArith.BinInt Z mod_small thm
R57862:57872 Coq.ZArith.BinInt Z mod_small thm
prf 57907:57915 Make shru_rolm
binder 57927:57927 <> x:506
binder 57929:57929 <> n:507
R57956:57961 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57970:57972 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57962:57965 compcert.lib.Integers Make shru def
R57969:57969 compcert.lib.Integers <> n:507 var
R57967:57967 compcert.lib.Integers <> x:506 var
R57973:57976 compcert.lib.Integers Make rolm def
R57999:58002 compcert.lib.Integers Make shru def
R58009:58009 compcert.lib.Integers <> n:507 var
R58004:58007 compcert.lib.Integers Make mone def
R57981:57983 compcert.lib.Integers Make sub def
R57995:57995 compcert.lib.Integers <> n:507 var
R57985:57993 compcert.lib.Integers Make iwordsize def
R57978:57978 compcert.lib.Integers <> x:506 var
R57949:57951 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57934:57936 compcert.lib.Integers Make ltu def
R57940:57948 compcert.lib.Integers Make iwordsize def
R57938:57938 compcert.lib.Integers <> n:507 var
R57952:57955 Coq.Init.Datatypes <> true constr
R58042:58048 compcert.lib.Integers Make ltu_inv thm
R58042:58048 compcert.lib.Integers Make ltu_inv thm
R58066:58087 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58066:58087 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58066:58087 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58107:58110 compcert.lib.Integers Make rolm def
R58119:58130 compcert.lib.Integers Make same_bits_eq thm
R58119:58130 compcert.lib.Integers Make same_bits_eq thm
R58151:58158 compcert.lib.Integers Make bits_and thm
R58151:58158 compcert.lib.Integers Make bits_and thm
R58151:58158 compcert.lib.Integers Make bits_and thm
R58151:58158 compcert.lib.Integers Make bits_and thm
R58176:58184 compcert.lib.Integers Make bits_shru thm
R58176:58184 compcert.lib.Integers Make bits_shru thm
R58176:58184 compcert.lib.Integers Make bits_shru thm
R58176:58184 compcert.lib.Integers Make bits_shru thm
R58176:58184 compcert.lib.Integers Make bits_shru thm
R58176:58184 compcert.lib.Integers Make bits_shru thm
R58176:58184 compcert.lib.Integers Make bits_shru thm
R58201:58208 compcert.lib.Integers Make bits_rol thm
R58201:58208 compcert.lib.Integers Make bits_rol thm
R58201:58208 compcert.lib.Integers Make bits_rol thm
R58201:58208 compcert.lib.Integers Make bits_rol thm
R58229:58231 compcert.lib.Coqlib <> zlt def
R58250:58258 compcert.lib.Integers Make zwordsize def
R58235:58237 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R58238:58245 compcert.lib.Integers Make unsigned def
R58229:58231 compcert.lib.Coqlib <> zlt def
R58250:58258 compcert.lib.Integers Make zwordsize def
R58235:58237 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R58238:58245 compcert.lib.Integers Make unsigned def
R58278:58291 compcert.lib.Integers Make unsigned_range thm
R58278:58291 compcert.lib.Integers Make unsigned_range thm
R58317:58325 compcert.lib.Integers Make bits_mone thm
R58317:58325 compcert.lib.Integers Make bits_mone thm
R58317:58325 compcert.lib.Integers Make bits_mone thm
R58317:58325 compcert.lib.Integers Make bits_mone thm
R58336:58346 Coq.Bool.Bool <> andb_true_r thm
R58336:58346 Coq.Bool.Bool <> andb_true_r thm
R58336:58346 Coq.Bool.Bool <> andb_true_r thm
R58369:58371 compcert.lib.Integers Make sub def
R58382:58394 compcert.lib.Integers Make unsigned_repr thm
R58382:58394 compcert.lib.Integers Make unsigned_repr thm
R58382:58394 compcert.lib.Integers Make unsigned_repr thm
R58382:58394 compcert.lib.Integers Make unsigned_repr thm
R58405:58426 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58405:58426 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58405:58426 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58449:58459 compcert.lib.Coqlib <> Zmod_unique thm
R58449:58459 compcert.lib.Coqlib <> Zmod_unique thm
R58497:58518 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58497:58518 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58497:58518 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58532:58552 compcert.lib.Integers Make wordsize_max_unsigned thm
R58532:58552 compcert.lib.Integers Make wordsize_max_unsigned thm
R58585:58596 Coq.Bool.Bool <> andb_false_r thm
R58585:58596 Coq.Bool.Bool <> andb_false_r thm
R58585:58596 Coq.Bool.Bool <> andb_false_r thm
prf 58619:58626 Make rol_zero
binder 58638:58638 <> x:508
R58653:58655 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58643:58645 compcert.lib.Integers Make rol def
R58649:58652 compcert.lib.Integers Make zero def
R58647:58647 compcert.lib.Integers <> x:508 var
R58656:58656 compcert.lib.Integers <> x:508 var
R58696:58708 compcert.lib.Integers Make unsigned_zero thm
R58696:58708 compcert.lib.Integers Make unsigned_zero thm
R58696:58708 compcert.lib.Integers Make unsigned_zero thm
R58719:58727 Coq.ZArith.BinInt Z sub_0_r thm
R58719:58727 Coq.ZArith.BinInt Z sub_0_r thm
R58719:58727 Coq.ZArith.BinInt Z sub_0_r thm
R58738:58748 Coq.ZArith.BinInt Z mod_small thm
R58738:58748 Coq.ZArith.BinInt Z mod_small thm
prf 58769:58785 Make bitwise_binop_rol
binder 58797:58797 <> f:509
binder 58799:58800 <> f':510
binder 58802:58802 <> x:511
binder 58804:58804 <> y:512
binder 58806:58806 <> n:513
R58811:58811 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58898:58904 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58918:58920 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58905:58907 compcert.lib.Integers Make rol def
R58917:58917 compcert.lib.Integers <> n:513 var
R58910:58910 compcert.lib.Integers <> f:509 var
R58914:58914 compcert.lib.Integers <> y:512 var
R58912:58912 compcert.lib.Integers <> x:511 var
R58921:58921 compcert.lib.Integers <> f:509 var
R58934:58936 compcert.lib.Integers Make rol def
R58940:58940 compcert.lib.Integers <> n:513 var
R58938:58938 compcert.lib.Integers <> y:512 var
R58924:58926 compcert.lib.Integers Make rol def
R58930:58930 compcert.lib.Integers <> n:513 var
R58928:58928 compcert.lib.Integers <> x:511 var
binder 58819:58819 <> x:514
binder 58821:58821 <> y:515
binder 58823:58823 <> i:516
R58844:58847 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58865:58867 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58848:58854 compcert.lib.Integers Make testbit def
R58864:58864 compcert.lib.Integers <> i:516 var
R58857:58857 compcert.lib.Integers <> f:509 var
R58861:58861 compcert.lib.Integers <> y:515 var
R58859:58859 compcert.lib.Integers <> x:514 var
R58868:58869 compcert.lib.Integers <> f':510 var
R58886:58892 compcert.lib.Integers Make testbit def
R58896:58896 compcert.lib.Integers <> i:516 var
R58894:58894 compcert.lib.Integers <> y:515 var
R58872:58878 compcert.lib.Integers Make testbit def
R58882:58882 compcert.lib.Integers <> i:516 var
R58880:58880 compcert.lib.Integers <> x:514 var
R58827:58830 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R58832:58834 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R58831:58831 compcert.lib.Integers <> i:516 var
R58831:58831 compcert.lib.Integers <> i:516 var
R58835:58843 compcert.lib.Integers Make zwordsize def
R58967:58978 compcert.lib.Integers Make same_bits_eq thm
R58967:58978 compcert.lib.Integers Make same_bits_eq thm
R59017:59024 compcert.lib.Integers Make bits_rol thm
R59017:59024 compcert.lib.Integers Make bits_rol thm
R59017:59024 compcert.lib.Integers Make bits_rol thm
R59017:59024 compcert.lib.Integers Make bits_rol thm
R59017:59024 compcert.lib.Integers Make bits_rol thm
R59017:59024 compcert.lib.Integers Make bits_rol thm
R59017:59024 compcert.lib.Integers Make bits_rol thm
R59017:59024 compcert.lib.Integers Make bits_rol thm
R59017:59024 compcert.lib.Integers Make bits_rol thm
R59058:59065 Coq.ZArith.Zdiv <> Z_mod_lt thm
R59058:59065 Coq.ZArith.Zdiv <> Z_mod_lt thm
R59074:59085 compcert.lib.Integers Make wordsize_pos thm
R59074:59085 compcert.lib.Integers Make wordsize_pos thm
prf 59102:59108 Make rol_and
binder 59120:59120 <> x:517
binder 59122:59122 <> y:518
binder 59124:59124 <> n:519
R59144:59146 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59129:59131 compcert.lib.Integers Make rol def
R59143:59143 compcert.lib.Integers <> n:519 var
R59134:59136 compcert.lib.Integers Make and def
R59140:59140 compcert.lib.Integers <> y:518 var
R59138:59138 compcert.lib.Integers <> x:517 var
R59147:59149 compcert.lib.Integers Make and def
R59162:59164 compcert.lib.Integers Make rol def
R59168:59168 compcert.lib.Integers <> n:519 var
R59166:59166 compcert.lib.Integers <> y:518 var
R59152:59154 compcert.lib.Integers Make rol def
R59158:59158 compcert.lib.Integers <> n:519 var
R59156:59156 compcert.lib.Integers <> x:517 var
R59218:59221 Coq.Init.Datatypes <> andb def
R59195:59211 compcert.lib.Integers Make bitwise_binop_rol thm
R59218:59221 Coq.Init.Datatypes <> andb def
R59195:59211 compcert.lib.Integers Make bitwise_binop_rol thm
R59230:59237 compcert.lib.Integers Make bits_and thm
R59230:59237 compcert.lib.Integers Make bits_and thm
prf 59254:59259 Make rol_or
binder 59271:59271 <> x:520
binder 59273:59273 <> y:521
binder 59275:59275 <> n:522
R59294:59296 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59280:59282 compcert.lib.Integers Make rol def
R59293:59293 compcert.lib.Integers <> n:522 var
R59285:59286 compcert.lib.Integers Make or def
R59290:59290 compcert.lib.Integers <> y:521 var
R59288:59288 compcert.lib.Integers <> x:520 var
R59297:59298 compcert.lib.Integers Make or def
R59311:59313 compcert.lib.Integers Make rol def
R59317:59317 compcert.lib.Integers <> n:522 var
R59315:59315 compcert.lib.Integers <> y:521 var
R59301:59303 compcert.lib.Integers Make rol def
R59307:59307 compcert.lib.Integers <> n:522 var
R59305:59305 compcert.lib.Integers <> x:520 var
R59367:59369 Coq.Init.Datatypes <> orb def
R59344:59360 compcert.lib.Integers Make bitwise_binop_rol thm
R59367:59369 Coq.Init.Datatypes <> orb def
R59344:59360 compcert.lib.Integers Make bitwise_binop_rol thm
R59378:59384 compcert.lib.Integers Make bits_or thm
R59378:59384 compcert.lib.Integers Make bits_or thm
prf 59401:59407 Make rol_xor
binder 59419:59419 <> x:523
binder 59421:59421 <> y:524
binder 59423:59423 <> n:525
R59443:59445 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59428:59430 compcert.lib.Integers Make rol def
R59442:59442 compcert.lib.Integers <> n:525 var
R59433:59435 compcert.lib.Integers Make xor def
R59439:59439 compcert.lib.Integers <> y:524 var
R59437:59437 compcert.lib.Integers <> x:523 var
R59446:59448 compcert.lib.Integers Make xor def
R59461:59463 compcert.lib.Integers Make rol def
R59467:59467 compcert.lib.Integers <> n:525 var
R59465:59465 compcert.lib.Integers <> y:524 var
R59451:59453 compcert.lib.Integers Make rol def
R59457:59457 compcert.lib.Integers <> n:525 var
R59455:59455 compcert.lib.Integers <> x:523 var
R59517:59520 Coq.Init.Datatypes <> xorb def
R59494:59510 compcert.lib.Integers Make bitwise_binop_rol thm
R59517:59520 Coq.Init.Datatypes <> xorb def
R59494:59510 compcert.lib.Integers Make bitwise_binop_rol thm
R59529:59536 compcert.lib.Integers Make bits_xor thm
R59529:59536 compcert.lib.Integers Make bits_xor thm
prf 59553:59559 Make rol_rol
binder 59571:59571 <> x:526
binder 59573:59573 <> n:527
binder 59575:59575 <> m:528
R59606:59611 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59627:59629 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59612:59614 compcert.lib.Integers Make rol def
R59626:59626 compcert.lib.Integers <> m:528 var
R59617:59619 compcert.lib.Integers Make rol def
R59623:59623 compcert.lib.Integers <> n:527 var
R59621:59621 compcert.lib.Integers <> x:526 var
R59630:59632 compcert.lib.Integers Make rol def
R59637:59640 compcert.lib.Integers Make modu def
R59652:59660 compcert.lib.Integers Make iwordsize def
R59643:59645 compcert.lib.Integers Make add def
R59649:59649 compcert.lib.Integers <> m:528 var
R59647:59647 compcert.lib.Integers <> n:527 var
R59634:59634 compcert.lib.Integers <> x:526 var
R59580:59587 Coq.ZArith.BinInt Z divide def
R59599:59605 compcert.lib.Integers Make modulus def
R59589:59597 compcert.lib.Integers Make zwordsize def
R59699:59710 compcert.lib.Zbits <> eqmod_mod_eq thm
R59699:59710 compcert.lib.Zbits <> eqmod_mod_eq thm
R59719:59730 compcert.lib.Integers Make wordsize_pos thm
R59719:59730 compcert.lib.Integers Make wordsize_pos thm
R59745:59752 compcert.lib.Integers Make unsigned def
R59768:59775 compcert.lib.Integers Make unsigned def
R59745:59752 compcert.lib.Integers Make unsigned def
R59768:59775 compcert.lib.Integers Make unsigned def
R59812:59814 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59808:59810 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59789:59799 compcert.lib.Zbits <> eqmod_trans thm
R59812:59814 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59808:59810 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59789:59799 compcert.lib.Zbits <> eqmod_trans thm
R59827:59835 compcert.lib.Zbits <> eqmod_sub thm
R59827:59835 compcert.lib.Zbits <> eqmod_sub thm
R59846:59854 compcert.lib.Zbits <> eqmod_sym thm
R59846:59854 compcert.lib.Zbits <> eqmod_sym thm
R59863:59871 compcert.lib.Zbits <> eqmod_mod thm
R59863:59871 compcert.lib.Zbits <> eqmod_mod thm
R59880:59891 compcert.lib.Integers Make wordsize_pos thm
R59880:59891 compcert.lib.Integers Make wordsize_pos thm
R59902:59911 compcert.lib.Zbits <> eqmod_refl thm
R59902:59911 compcert.lib.Zbits <> eqmod_refl thm
R59930:59932 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59926:59928 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59943:59946 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59952:59952 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59948:59950 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R59930:59932 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59926:59928 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59943:59946 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59952:59952 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59948:59950 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R59973:59981 compcert.lib.Zbits <> eqmod_sub thm
R59973:59981 compcert.lib.Zbits <> eqmod_sub thm
R59992:60001 compcert.lib.Zbits <> eqmod_refl thm
R59992:60001 compcert.lib.Zbits <> eqmod_refl thm
R60030:60037 Coq.ZArith.BinInt Z modulo def
R60065:60073 compcert.lib.Integers Make zwordsize def
R60050:60052 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R60040:60047 compcert.lib.Integers Make unsigned def
R60053:60060 compcert.lib.Integers Make unsigned def
R60012:60022 compcert.lib.Zbits <> eqmod_trans thm
R60030:60037 Coq.ZArith.BinInt Z modulo def
R60065:60073 compcert.lib.Integers Make zwordsize def
R60050:60052 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R60040:60047 compcert.lib.Integers Make unsigned def
R60053:60060 compcert.lib.Integers Make unsigned def
R60012:60022 compcert.lib.Zbits <> eqmod_trans thm
R60089:60091 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R60102:60104 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R60089:60091 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R60102:60104 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R60124:60132 compcert.lib.Zbits <> eqmod_mod thm
R60124:60132 compcert.lib.Zbits <> eqmod_mod thm
R60141:60152 compcert.lib.Integers Make wordsize_pos thm
R60141:60152 compcert.lib.Integers Make wordsize_pos thm
R60164:60167 compcert.lib.Integers Make modu def
R60170:60172 compcert.lib.Integers Make add def
R60199:60220 compcert.lib.Integers Make unsigned_repr_wordsize thm
R60199:60220 compcert.lib.Integers Make unsigned_repr_wordsize thm
R60199:60220 compcert.lib.Integers Make unsigned_repr_wordsize thm
binder 60240:60240 <> a:529
R60243:60247 compcert.lib.Zbits <> eqmod def
R60262:60269 compcert.lib.Integers Make unsigned def
R60272:60275 compcert.lib.Integers Make repr def
R60277:60277 compcert.lib.Integers <> a:529 var
R60259:60259 compcert.lib.Integers <> a:529 var
R60249:60257 compcert.lib.Integers Make zwordsize def
binder 60240:60240 <> a:530
R60243:60247 compcert.lib.Zbits <> eqmod def
R60262:60269 compcert.lib.Integers Make unsigned def
R60272:60275 compcert.lib.Integers Make repr def
R60277:60277 compcert.lib.Integers <> a:530 var
R60259:60259 compcert.lib.Integers <> a:530 var
R60249:60257 compcert.lib.Integers Make zwordsize def
R60302:60314 compcert.lib.Zbits <> eqmod_divides thm
R60302:60314 compcert.lib.Zbits <> eqmod_divides thm
R60323:60339 compcert.lib.Integers Make eqm_unsigned_repr thm
R60323:60339 compcert.lib.Integers Make eqm_unsigned_repr thm
R60363:60373 compcert.lib.Zbits <> eqmod_trans thm
R60363:60373 compcert.lib.Zbits <> eqmod_trans thm
R60397:60407 compcert.lib.Zbits <> eqmod_refl2 thm
R60397:60407 compcert.lib.Zbits <> eqmod_refl2 thm
R60416:60427 compcert.lib.Zbits <> eqmod_mod_eq thm
R60416:60427 compcert.lib.Zbits <> eqmod_mod_eq thm
R60436:60447 compcert.lib.Integers Make wordsize_pos thm
R60436:60447 compcert.lib.Integers Make wordsize_pos thm
R60464:60471 Coq.ZArith.Zdiv <> Z_mod_lt thm
R60464:60471 Coq.ZArith.Zdiv <> Z_mod_lt thm
R60480:60491 compcert.lib.Integers Make wordsize_pos thm
R60480:60491 compcert.lib.Integers Make wordsize_pos thm
prf 60508:60516 Make rolm_zero
binder 60528:60528 <> x:531
binder 60530:60530 <> m:532
R60548:60550 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60535:60538 compcert.lib.Integers Make rolm def
R60547:60547 compcert.lib.Integers <> m:532 var
R60542:60545 compcert.lib.Integers Make zero def
R60540:60540 compcert.lib.Integers <> x:531 var
R60551:60553 compcert.lib.Integers Make and def
R60557:60557 compcert.lib.Integers <> m:532 var
R60555:60555 compcert.lib.Integers <> x:531 var
R60584:60587 compcert.lib.Integers Make rolm def
R60598:60605 compcert.lib.Integers Make rol_zero thm
R60598:60605 compcert.lib.Integers Make rol_zero thm
R60598:60605 compcert.lib.Integers Make rol_zero thm
prf 60628:60636 Make rolm_rolm
binder 60648:60648 <> x:533
binder 60650:60651 <> n1:534
binder 60653:60654 <> m1:535
binder 60656:60657 <> n2:536
binder 60659:60660 <> m2:537
R60691:60696 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R60722:60728 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60697:60700 compcert.lib.Integers Make rolm def
R60720:60721 compcert.lib.Integers <> m2:537 var
R60717:60718 compcert.lib.Integers <> n2:536 var
R60703:60706 compcert.lib.Integers Make rolm def
R60713:60714 compcert.lib.Integers <> m1:535 var
R60710:60711 compcert.lib.Integers <> n1:534 var
R60708:60708 compcert.lib.Integers <> x:533 var
R60729:60732 compcert.lib.Integers Make rolm def
R60777:60779 compcert.lib.Integers Make and def
R60793:60794 compcert.lib.Integers <> m2:537 var
R60782:60784 compcert.lib.Integers Make rol def
R60789:60790 compcert.lib.Integers <> n2:536 var
R60786:60787 compcert.lib.Integers <> m1:535 var
R60737:60740 compcert.lib.Integers Make modu def
R60754:60762 compcert.lib.Integers Make iwordsize def
R60743:60745 compcert.lib.Integers Make add def
R60750:60751 compcert.lib.Integers <> n2:536 var
R60747:60748 compcert.lib.Integers <> n1:534 var
R60734:60734 compcert.lib.Integers <> x:533 var
R60665:60672 Coq.ZArith.BinInt Z divide def
R60684:60690 compcert.lib.Integers Make modulus def
R60674:60682 compcert.lib.Integers Make zwordsize def
R60824:60827 compcert.lib.Integers Make rolm def
R60838:60844 compcert.lib.Integers Make rol_and thm
R60838:60844 compcert.lib.Integers Make rol_and thm
R60838:60844 compcert.lib.Integers Make rol_and thm
R60855:60863 compcert.lib.Integers Make and_assoc thm
R60855:60863 compcert.lib.Integers Make and_assoc thm
R60855:60863 compcert.lib.Integers Make and_assoc thm
R60876:60882 compcert.lib.Integers Make rol_rol thm
R60876:60882 compcert.lib.Integers Make rol_rol thm
R60876:60882 compcert.lib.Integers Make rol_rol thm
R60876:60882 compcert.lib.Integers Make rol_rol thm
prf 60918:60924 Make or_rolm
binder 60936:60936 <> x:538
binder 60938:60938 <> n:539
binder 60940:60941 <> m1:540
binder 60943:60944 <> m2:541
R60979:60981 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60949:60950 compcert.lib.Integers Make or def
R60967:60970 compcert.lib.Integers Make rolm def
R60976:60977 compcert.lib.Integers <> m2:541 var
R60974:60974 compcert.lib.Integers <> n:539 var
R60972:60972 compcert.lib.Integers <> x:538 var
R60953:60956 compcert.lib.Integers Make rolm def
R60962:60963 compcert.lib.Integers <> m1:540 var
R60960:60960 compcert.lib.Integers <> n:539 var
R60958:60958 compcert.lib.Integers <> x:538 var
R60982:60985 compcert.lib.Integers Make rolm def
R60992:60993 compcert.lib.Integers Make or def
R60998:60999 compcert.lib.Integers <> m2:541 var
R60995:60996 compcert.lib.Integers <> m1:540 var
R60989:60989 compcert.lib.Integers <> n:539 var
R60987:60987 compcert.lib.Integers <> x:538 var
R61027:61030 compcert.lib.Integers Make rolm def
R61049:61062 compcert.lib.Integers Make and_or_distrib thm
R61049:61062 compcert.lib.Integers Make and_or_distrib thm
prf 61079:61085 Make ror_rol
binder 61097:61097 <> x:542
binder 61099:61099 <> y:543
R61126:61131 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61139:61141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61132:61134 compcert.lib.Integers Make ror def
R61138:61138 compcert.lib.Integers <> y:543 var
R61136:61136 compcert.lib.Integers <> x:542 var
R61142:61144 compcert.lib.Integers Make rol def
R61149:61151 compcert.lib.Integers Make sub def
R61163:61163 compcert.lib.Integers <> y:543 var
R61153:61161 compcert.lib.Integers Make iwordsize def
R61146:61146 compcert.lib.Integers <> x:542 var
R61119:61121 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61104:61106 compcert.lib.Integers Make ltu def
R61110:61118 compcert.lib.Integers Make iwordsize def
R61108:61108 compcert.lib.Integers <> y:543 var
R61122:61125 Coq.Init.Datatypes <> true constr
R61198:61214 compcert.lib.Integers Make ltu_iwordsize_inv thm
R61198:61214 compcert.lib.Integers Make ltu_iwordsize_inv thm
R61238:61249 compcert.lib.Integers Make same_bits_eq thm
R61238:61249 compcert.lib.Integers Make same_bits_eq thm
R61270:61277 compcert.lib.Integers Make bits_ror thm
R61270:61277 compcert.lib.Integers Make bits_ror thm
R61270:61277 compcert.lib.Integers Make bits_ror thm
R61270:61277 compcert.lib.Integers Make bits_ror thm
R61294:61301 compcert.lib.Integers Make bits_rol thm
R61294:61301 compcert.lib.Integers Make bits_rol thm
R61294:61301 compcert.lib.Integers Make bits_rol thm
R61294:61301 compcert.lib.Integers Make bits_rol thm
R61328:61330 compcert.lib.Integers Make sub def
R61341:61353 compcert.lib.Integers Make unsigned_repr thm
R61341:61353 compcert.lib.Integers Make unsigned_repr thm
R61341:61353 compcert.lib.Integers Make unsigned_repr thm
R61341:61353 compcert.lib.Integers Make unsigned_repr thm
R61364:61385 compcert.lib.Integers Make unsigned_repr_wordsize thm
R61364:61385 compcert.lib.Integers Make unsigned_repr_wordsize thm
R61364:61385 compcert.lib.Integers Make unsigned_repr_wordsize thm
R61396:61407 compcert.lib.Zbits <> eqmod_mod_eq thm
R61396:61407 compcert.lib.Zbits <> eqmod_mod_eq thm
R61416:61427 compcert.lib.Integers Make wordsize_pos thm
R61416:61427 compcert.lib.Integers Make wordsize_pos thm
R61456:61477 compcert.lib.Integers Make unsigned_repr_wordsize thm
R61456:61477 compcert.lib.Integers Make unsigned_repr_wordsize thm
R61456:61477 compcert.lib.Integers Make unsigned_repr_wordsize thm
R61493:61504 compcert.lib.Integers Make wordsize_pos thm
R61518:61538 compcert.lib.Integers Make wordsize_max_unsigned thm
R61493:61504 compcert.lib.Integers Make wordsize_pos thm
R61518:61538 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 61562:61572 Make ror_rol_neg
binder 61584:61584 <> x:544
binder 61586:61586 <> y:545
R61610:61613 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61621:61623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61614:61616 compcert.lib.Integers Make ror def
R61620:61620 compcert.lib.Integers <> y:545 var
R61618:61618 compcert.lib.Integers <> x:544 var
R61624:61626 compcert.lib.Integers Make rol def
R61631:61633 compcert.lib.Integers Make neg def
R61635:61635 compcert.lib.Integers <> y:545 var
R61628:61628 compcert.lib.Integers <> x:544 var
R61589:61589 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R61599:61601 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R61609:61609 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R61590:61598 compcert.lib.Integers Make zwordsize def
R61602:61608 compcert.lib.Integers Make modulus def
R61662:61673 compcert.lib.Integers Make same_bits_eq thm
R61662:61673 compcert.lib.Integers Make same_bits_eq thm
R61694:61701 compcert.lib.Integers Make bits_ror thm
R61694:61701 compcert.lib.Integers Make bits_ror thm
R61694:61701 compcert.lib.Integers Make bits_ror thm
R61720:61727 compcert.lib.Integers Make bits_rol thm
R61720:61727 compcert.lib.Integers Make bits_rol thm
R61720:61727 compcert.lib.Integers Make bits_rol thm
R61755:61766 compcert.lib.Zbits <> eqmod_mod_eq thm
R61755:61766 compcert.lib.Zbits <> eqmod_mod_eq thm
R61803:61806 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R61819:61819 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R61807:61808 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R61809:61816 compcert.lib.Integers Make unsigned def
R61784:61794 compcert.lib.Zbits <> eqmod_trans thm
R61803:61806 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R61819:61819 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R61807:61808 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R61809:61816 compcert.lib.Integers Make unsigned def
R61784:61794 compcert.lib.Zbits <> eqmod_trans thm
R61831:61841 compcert.lib.Zbits <> eqmod_refl2 thm
R61831:61841 compcert.lib.Zbits <> eqmod_refl2 thm
R61859:61867 compcert.lib.Zbits <> eqmod_sub thm
R61859:61867 compcert.lib.Zbits <> eqmod_sub thm
R61876:61885 compcert.lib.Zbits <> eqmod_refl thm
R61876:61885 compcert.lib.Zbits <> eqmod_refl thm
R61915:61921 compcert.lib.Integers Make modulus def
R61896:61908 compcert.lib.Zbits <> eqmod_divides thm
R61915:61921 compcert.lib.Integers Make modulus def
R61896:61908 compcert.lib.Zbits <> eqmod_divides thm
R61932:61948 compcert.lib.Integers Make eqm_unsigned_repr thm
R61932:61948 compcert.lib.Integers Make eqm_unsigned_repr thm
prf 61971:61976 Make or_ror
binder 61988:61988 <> x:546
binder 61990:61990 <> y:547
binder 61992:61992 <> z:548
R62019:62024 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62047:62052 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62072:62077 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62085:62087 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62078:62080 compcert.lib.Integers Make ror def
R62084:62084 compcert.lib.Integers <> z:548 var
R62082:62082 compcert.lib.Integers <> x:546 var
R62088:62089 compcert.lib.Integers Make or def
R62102:62105 compcert.lib.Integers Make shru def
R62109:62109 compcert.lib.Integers <> z:548 var
R62107:62107 compcert.lib.Integers <> x:546 var
R62092:62094 compcert.lib.Integers Make shl def
R62098:62098 compcert.lib.Integers <> y:547 var
R62096:62096 compcert.lib.Integers <> x:546 var
R62060:62062 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62053:62055 compcert.lib.Integers Make add def
R62059:62059 compcert.lib.Integers <> z:548 var
R62057:62057 compcert.lib.Integers <> y:547 var
R62063:62071 compcert.lib.Integers Make iwordsize def
R62040:62042 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62025:62027 compcert.lib.Integers Make ltu def
R62031:62039 compcert.lib.Integers Make iwordsize def
R62029:62029 compcert.lib.Integers <> z:548 var
R62043:62046 Coq.Init.Datatypes <> true constr
R62012:62014 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61997:61999 compcert.lib.Integers Make ltu def
R62003:62011 compcert.lib.Integers Make iwordsize def
R62001:62001 compcert.lib.Integers <> y:547 var
R62015:62018 Coq.Init.Datatypes <> true constr
R62144:62160 compcert.lib.Integers Make ltu_iwordsize_inv thm
R62168:62184 compcert.lib.Integers Make ltu_iwordsize_inv thm
R62144:62160 compcert.lib.Integers Make ltu_iwordsize_inv thm
R62168:62184 compcert.lib.Integers Make ltu_iwordsize_inv thm
R62210:62212 compcert.lib.Integers Make ror def
R62215:62216 compcert.lib.Integers Make or def
R62219:62221 compcert.lib.Integers Make shl def
R62224:62227 compcert.lib.Integers Make shru def
R62236:62247 compcert.lib.Integers Make same_bits_eq thm
R62236:62247 compcert.lib.Integers Make same_bits_eq thm
R62269:62280 compcert.lib.Integers Make testbit_repr thm
R62269:62280 compcert.lib.Integers Make testbit_repr thm
R62269:62280 compcert.lib.Integers Make testbit_repr thm
R62269:62280 compcert.lib.Integers Make testbit_repr thm
R62269:62280 compcert.lib.Integers Make testbit_repr thm
R62269:62280 compcert.lib.Integers Make testbit_repr thm
R62269:62280 compcert.lib.Integers Make testbit_repr thm
R62300:62309 Coq.ZArith.BinInt Z lor_spec thm
R62300:62309 Coq.ZArith.BinInt Z lor_spec thm
R62300:62309 Coq.ZArith.BinInt Z lor_spec thm
R62300:62309 Coq.ZArith.BinInt Z lor_spec thm
R62300:62309 Coq.ZArith.BinInt Z lor_spec thm
R62320:62327 Coq.Bool.Bool <> orb_comm thm
R62320:62327 Coq.Bool.Bool <> orb_comm thm
R62320:62327 Coq.Bool.Bool <> orb_comm thm
R62345:62357 compcert.lib.Integers Make same_bits_eqm thm
R62345:62357 compcert.lib.Integers Make same_bits_eqm thm
R62345:62357 compcert.lib.Integers Make same_bits_eqm thm
R62376:62394 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R62376:62394 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R62403:62411 compcert.lib.Integers Make eqm_refl2 thm
R62403:62411 compcert.lib.Integers Make eqm_refl2 thm
R62435:62445 Coq.ZArith.BinInt Z mod_small thm
R62435:62445 Coq.ZArith.BinInt Z mod_small thm
R62435:62445 Coq.ZArith.BinInt Z mod_small thm
R62435:62445 Coq.ZArith.BinInt Z mod_small thm
R62484:62486 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62466:62473 compcert.lib.Integers Make unsigned def
R62476:62478 compcert.lib.Integers Make add def
R62487:62495 compcert.lib.Integers Make zwordsize def
R62484:62486 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62466:62473 compcert.lib.Integers Make unsigned def
R62476:62478 compcert.lib.Integers Make add def
R62487:62495 compcert.lib.Integers Make zwordsize def
R62523:62544 compcert.lib.Integers Make unsigned_repr_wordsize thm
R62523:62544 compcert.lib.Integers Make unsigned_repr_wordsize thm
R62558:62560 compcert.lib.Integers Make add def
R62577:62589 compcert.lib.Integers Make unsigned_repr thm
R62577:62589 compcert.lib.Integers Make unsigned_repr thm
R62577:62589 compcert.lib.Integers Make unsigned_repr thm
R62577:62589 compcert.lib.Integers Make unsigned_repr thm
R62624:62648 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R62624:62648 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R62668:62686 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R62668:62686 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R62695:62703 compcert.lib.Integers Make eqm_refl2 thm
R62695:62703 compcert.lib.Integers Make eqm_refl2 thm
R62725:62735 Coq.ZArith.BinInt Z mod_small thm
R62725:62735 Coq.ZArith.BinInt Z mod_small thm
prf 62795:62807 Make is_power2_inv
binder 62819:62819 <> n:549
binder 62821:62824 <> logn:550
R62852:62857 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62905:62908 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R62882:62884 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62858:62868 compcert.lib.Zbits <> Z_is_power2 def
R62871:62878 compcert.lib.Integers Make unsigned def
R62880:62880 compcert.lib.Integers <> n:549 var
R62885:62888 Coq.Init.Datatypes <> Some constr
R62891:62898 compcert.lib.Integers Make unsigned def
R62900:62903 compcert.lib.Integers <> logn:550 var
R62910:62913 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R62927:62929 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R62914:62921 compcert.lib.Integers Make unsigned def
R62923:62926 compcert.lib.Integers <> logn:550 var
R62914:62921 compcert.lib.Integers Make unsigned def
R62923:62926 compcert.lib.Integers <> logn:550 var
R62930:62938 compcert.lib.Integers Make zwordsize def
R62840:62842 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62829:62837 compcert.lib.Integers Make is_power2 def
R62839:62839 compcert.lib.Integers <> n:549 var
R62843:62846 Coq.Init.Datatypes <> Some constr
R62848:62851 compcert.lib.Integers <> logn:550 var
R62957:62965 compcert.lib.Integers Make is_power2 def
R62988:62998 compcert.lib.Zbits <> Z_is_power2 def
R63001:63008 compcert.lib.Integers Make unsigned def
R62988:62998 compcert.lib.Zbits <> Z_is_power2 def
R63001:63008 compcert.lib.Integers Make unsigned def
R63047:63050 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R63052:63054 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R63055:63063 compcert.lib.Integers Make zwordsize def
R63047:63050 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R63052:63054 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R63055:63063 compcert.lib.Integers Make zwordsize def
R63101:63108 compcert.lib.Integers Make unsigned def
R63077:63093 compcert.lib.Zbits <> Z_is_power2_range thm
R63101:63108 compcert.lib.Integers Make unsigned def
R63077:63093 compcert.lib.Zbits <> Z_is_power2_range thm
R63130:63141 compcert.lib.Integers Make wordsize_pos thm
R63130:63141 compcert.lib.Integers Make wordsize_pos thm
R63166:63178 compcert.lib.Integers Make modulus_power thm
R63166:63178 compcert.lib.Integers Make modulus_power thm
R63166:63178 compcert.lib.Integers Make modulus_power thm
R63187:63200 compcert.lib.Integers Make unsigned_range thm
R63187:63200 compcert.lib.Integers Make unsigned_range thm
R63225:63237 compcert.lib.Integers Make unsigned_repr thm
R63225:63237 compcert.lib.Integers Make unsigned_repr thm
R63225:63237 compcert.lib.Integers Make unsigned_repr thm
R63225:63237 compcert.lib.Integers Make unsigned_repr thm
R63257:63277 compcert.lib.Integers Make wordsize_max_unsigned thm
R63257:63277 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 63299:63311 Make is_power2_rng
binder 63323:63323 <> n:551
binder 63325:63328 <> logn:552
R63356:63361 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63363:63366 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R63380:63382 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R63367:63374 compcert.lib.Integers Make unsigned def
R63376:63379 compcert.lib.Integers <> logn:552 var
R63367:63374 compcert.lib.Integers Make unsigned def
R63376:63379 compcert.lib.Integers <> logn:552 var
R63383:63391 compcert.lib.Integers Make zwordsize def
R63344:63346 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63333:63341 compcert.lib.Integers Make is_power2 def
R63343:63343 compcert.lib.Integers <> n:551 var
R63347:63350 Coq.Init.Datatypes <> Some constr
R63352:63355 compcert.lib.Integers <> logn:552 var
R63418:63430 compcert.lib.Integers Make is_power2_inv thm
R63418:63430 compcert.lib.Integers Make is_power2_inv thm
prf 63461:63475 Make is_power2_range
binder 63487:63487 <> n:553
binder 63489:63492 <> logn:554
R63520:63523 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63542:63544 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63524:63526 compcert.lib.Integers Make ltu def
R63533:63541 compcert.lib.Integers Make iwordsize def
R63528:63531 compcert.lib.Integers <> logn:554 var
R63545:63548 Coq.Init.Datatypes <> true constr
R63508:63510 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63497:63505 compcert.lib.Integers Make is_power2 def
R63507:63507 compcert.lib.Integers <> n:553 var
R63511:63514 Coq.Init.Datatypes <> Some constr
R63516:63519 compcert.lib.Integers <> logn:554 var
R63575:63577 compcert.lib.Integers Make ltu def
R63588:63609 compcert.lib.Integers Make unsigned_repr_wordsize thm
R63588:63609 compcert.lib.Integers Make unsigned_repr_wordsize thm
R63588:63609 compcert.lib.Integers Make unsigned_repr_wordsize thm
R63620:63627 compcert.lib.Coqlib <> zlt_true thm
R63620:63627 compcert.lib.Coqlib <> zlt_true thm
R63642:63654 compcert.lib.Integers Make is_power2_rng thm
R63642:63654 compcert.lib.Integers Make is_power2_rng thm
prf 63683:63699 Make is_power2_correct
binder 63711:63711 <> n:555
binder 63713:63716 <> logn:556
R63744:63749 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63760:63762 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63750:63757 compcert.lib.Integers Make unsigned def
R63759:63759 compcert.lib.Integers <> n:555 var
R63763:63767 Coq.ZArith.Zpower <> two_p def
R63770:63777 compcert.lib.Integers Make unsigned def
R63779:63782 compcert.lib.Integers <> logn:556 var
R63732:63734 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63721:63729 compcert.lib.Integers Make is_power2 def
R63731:63731 compcert.lib.Integers <> n:555 var
R63735:63738 Coq.Init.Datatypes <> Some constr
R63740:63743 compcert.lib.Integers <> logn:556 var
R63809:63821 compcert.lib.Integers Make is_power2_inv thm
R63809:63821 compcert.lib.Integers Make is_power2_inv thm
R63858:63874 compcert.lib.Zbits <> Z_is_power2_sound thm
R63858:63874 compcert.lib.Zbits <> Z_is_power2_sound thm
prf 63902:63912 Make two_p_range
binder 63924:63924 <> n:557
R63947:63952 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63954:63957 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R63965:63968 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R63958:63962 Coq.ZArith.Zpower <> two_p def
R63964:63964 compcert.lib.Integers <> n:557 var
R63958:63962 Coq.ZArith.Zpower <> two_p def
R63964:63964 compcert.lib.Integers <> n:557 var
R63969:63980 compcert.lib.Integers Make max_unsigned def
R63930:63933 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R63935:63937 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R63934:63934 compcert.lib.Integers <> n:557 var
R63934:63934 compcert.lib.Integers <> n:557 var
R63938:63946 compcert.lib.Integers Make zwordsize def
R64024:64026 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R64017:64021 Coq.ZArith.Zpower <> two_p def
R64024:64026 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R64017:64021 Coq.ZArith.Zpower <> two_p def
R64037:64049 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R64037:64049 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R64080:64100 compcert.lib.Coqlib <> two_p_monotone_strict thm
R64080:64100 compcert.lib.Coqlib <> two_p_monotone_strict thm
R64119:64127 compcert.lib.Integers Make zwordsize def
R64141:64159 compcert.lib.Coqlib <> two_power_nat_two_p thm
R64141:64159 compcert.lib.Coqlib <> two_power_nat_two_p thm
R64141:64159 compcert.lib.Coqlib <> two_power_nat_two_p thm
R64171:64182 compcert.lib.Integers Make max_unsigned def
R64185:64191 compcert.lib.Integers Make modulus def
prf 64213:64227 Make is_power2_two_p
binder 64239:64239 <> n:558
R64260:64265 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R64292:64294 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64266:64274 compcert.lib.Integers Make is_power2 def
R64277:64280 compcert.lib.Integers Make repr def
R64283:64287 Coq.ZArith.Zpower <> two_p def
R64289:64289 compcert.lib.Integers <> n:558 var
R64295:64298 Coq.Init.Datatypes <> Some constr
R64301:64304 compcert.lib.Integers Make repr def
R64306:64306 compcert.lib.Integers <> n:558 var
R64243:64246 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R64248:64250 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R64247:64247 compcert.lib.Integers <> n:558 var
R64247:64247 compcert.lib.Integers <> n:558 var
R64251:64259 compcert.lib.Integers Make zwordsize def
R64334:64342 compcert.lib.Integers Make is_power2 def
R64353:64365 compcert.lib.Integers Make unsigned_repr thm
R64353:64365 compcert.lib.Integers Make unsigned_repr thm
R64353:64365 compcert.lib.Integers Make unsigned_repr thm
R64353:64365 compcert.lib.Integers Make unsigned_repr thm
R64378:64397 compcert.lib.Zbits <> Z_is_power2_complete thm
R64378:64397 compcert.lib.Zbits <> Z_is_power2_complete thm
R64378:64397 compcert.lib.Zbits <> Z_is_power2_complete thm
R64423:64433 compcert.lib.Integers Make two_p_range thm
R64423:64433 compcert.lib.Integers Make two_p_range thm
prf 64604:64616 Make shl_mul_two_p
binder 64628:64628 <> x:559
binder 64630:64630 <> y:560
R64642:64644 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64635:64637 compcert.lib.Integers Make shl def
R64641:64641 compcert.lib.Integers <> y:560 var
R64639:64639 compcert.lib.Integers <> x:559 var
R64645:64647 compcert.lib.Integers Make mul def
R64652:64655 compcert.lib.Integers Make repr def
R64658:64662 Coq.ZArith.Zpower <> two_p def
R64665:64672 compcert.lib.Integers Make unsigned def
R64674:64674 compcert.lib.Integers <> y:560 var
R64649:64649 compcert.lib.Integers <> x:559 var
R64704:64706 compcert.lib.Integers Make shl def
R64709:64711 compcert.lib.Integers Make mul def
R64720:64731 compcert.lib.Integers Make eqm_samerepr thm
R64720:64731 compcert.lib.Integers Make eqm_samerepr thm
R64744:64760 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R64744:64760 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R64744:64760 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R64744:64760 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R64793:64806 compcert.lib.Integers Make unsigned_range thm
R64793:64806 compcert.lib.Integers Make unsigned_range thm
prf 64833:64839 Make shl_mul
binder 64851:64851 <> x:561
binder 64853:64853 <> y:562
R64865:64867 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64858:64860 compcert.lib.Integers Make shl def
R64864:64864 compcert.lib.Integers <> y:562 var
R64862:64862 compcert.lib.Integers <> x:561 var
R64868:64870 compcert.lib.Integers Make mul def
R64875:64877 compcert.lib.Integers Make shl def
R64883:64883 compcert.lib.Integers <> y:562 var
R64879:64881 compcert.lib.Integers Make one def
R64872:64872 compcert.lib.Integers <> x:561 var
R64923:64925 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64914:64916 compcert.lib.Integers Make shl def
R64918:64920 compcert.lib.Integers Make one def
R64926:64929 compcert.lib.Integers Make repr def
R64932:64936 Coq.ZArith.Zpower <> two_p def
R64939:64946 compcert.lib.Integers Make unsigned def
R64923:64925 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64914:64916 compcert.lib.Integers Make shl def
R64918:64920 compcert.lib.Integers Make one def
R64926:64929 compcert.lib.Integers Make repr def
R64932:64936 Coq.ZArith.Zpower <> two_p def
R64939:64946 compcert.lib.Integers Make unsigned def
R64970:64982 compcert.lib.Integers Make shl_mul_two_p thm
R64970:64982 compcert.lib.Integers Make shl_mul_two_p thm
R64970:64982 compcert.lib.Integers Make shl_mul_two_p thm
R64993:65002 compcert.lib.Integers Make mul_commut thm
R64993:65002 compcert.lib.Integers Make mul_commut thm
R64993:65002 compcert.lib.Integers Make mul_commut thm
R65013:65019 compcert.lib.Integers Make mul_one thm
R65013:65019 compcert.lib.Integers Make mul_one thm
R65013:65019 compcert.lib.Integers Make mul_one thm
R65051:65063 compcert.lib.Integers Make shl_mul_two_p thm
R65051:65063 compcert.lib.Integers Make shl_mul_two_p thm
prf 65080:65087 Make mul_pow2
binder 65099:65099 <> x:563
binder 65101:65101 <> n:564
binder 65103:65106 <> logn:565
R65134:65139 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65147:65149 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65140:65142 compcert.lib.Integers Make mul def
R65146:65146 compcert.lib.Integers <> n:564 var
R65144:65144 compcert.lib.Integers <> x:563 var
R65150:65152 compcert.lib.Integers Make shl def
R65156:65159 compcert.lib.Integers <> logn:565 var
R65154:65154 compcert.lib.Integers <> x:563 var
R65122:65124 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65111:65119 compcert.lib.Integers Make is_power2 def
R65121:65121 compcert.lib.Integers <> n:564 var
R65125:65128 Coq.Init.Datatypes <> Some constr
R65130:65133 compcert.lib.Integers <> logn:565 var
R65191:65207 compcert.lib.Integers Make is_power2_correct thm
R65191:65207 compcert.lib.Integers Make is_power2_correct thm
R65237:65249 compcert.lib.Integers Make shl_mul_two_p thm
R65237:65249 compcert.lib.Integers Make shl_mul_two_p thm
R65237:65249 compcert.lib.Integers Make shl_mul_two_p thm
R65275:65287 compcert.lib.Integers Make repr_unsigned thm
R65275:65287 compcert.lib.Integers Make repr_unsigned thm
R65275:65287 compcert.lib.Integers Make repr_unsigned thm
prf 65312:65328 Make shifted_or_is_add
binder 65340:65340 <> x:566
binder 65342:65342 <> y:567
binder 65344:65344 <> n:568
R65367:65372 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65393:65398 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65420:65422 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65399:65400 compcert.lib.Integers Make or def
R65419:65419 compcert.lib.Integers <> y:567 var
R65403:65405 compcert.lib.Integers Make shl def
R65410:65413 compcert.lib.Integers Make repr def
R65415:65415 compcert.lib.Integers <> n:568 var
R65407:65407 compcert.lib.Integers <> x:566 var
R65423:65426 compcert.lib.Integers Make repr def
R65448:65450 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R65438:65440 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R65428:65435 compcert.lib.Integers Make unsigned def
R65437:65437 compcert.lib.Integers <> x:566 var
R65441:65445 Coq.ZArith.Zpower <> two_p def
R65447:65447 compcert.lib.Integers <> n:568 var
R65451:65458 compcert.lib.Integers Make unsigned def
R65460:65460 compcert.lib.Integers <> y:567 var
R65383:65385 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R65373:65380 compcert.lib.Integers Make unsigned def
R65382:65382 compcert.lib.Integers <> y:567 var
R65386:65390 Coq.ZArith.Zpower <> two_p def
R65392:65392 compcert.lib.Integers <> n:568 var
R65350:65353 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R65355:65357 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R65354:65354 compcert.lib.Integers <> n:568 var
R65354:65354 compcert.lib.Integers <> n:568 var
R65358:65366 compcert.lib.Integers Make zwordsize def
R65492:65500 compcert.lib.Integers Make add_is_or thm
R65492:65500 compcert.lib.Integers Make add_is_or thm
R65492:65500 compcert.lib.Integers Make add_is_or thm
R65492:65500 compcert.lib.Integers Make add_is_or thm
R65514:65516 compcert.lib.Integers Make add def
R65525:65536 compcert.lib.Integers Make eqm_samerepr thm
R65525:65536 compcert.lib.Integers Make eqm_samerepr thm
R65545:65551 compcert.lib.Integers Make eqm_add thm
R65545:65551 compcert.lib.Integers Make eqm_add thm
R65582:65594 compcert.lib.Integers Make shl_mul_two_p thm
R65582:65594 compcert.lib.Integers Make shl_mul_two_p thm
R65582:65594 compcert.lib.Integers Make shl_mul_two_p thm
R65604:65606 compcert.lib.Integers Make mul def
R65615:65633 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R65615:65633 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R65646:65653 compcert.lib.Integers Make eqm_mult thm
R65646:65653 compcert.lib.Integers Make eqm_mult thm
R65678:65696 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R65678:65696 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R65709:65717 compcert.lib.Integers Make eqm_refl2 thm
R65709:65717 compcert.lib.Integers Make eqm_refl2 thm
R65728:65740 compcert.lib.Integers Make unsigned_repr thm
R65728:65740 compcert.lib.Integers Make unsigned_repr thm
R65728:65740 compcert.lib.Integers Make unsigned_repr thm
R65728:65740 compcert.lib.Integers Make unsigned_repr thm
R65764:65784 compcert.lib.Integers Make wordsize_max_unsigned thm
R65764:65784 compcert.lib.Integers Make wordsize_max_unsigned thm
R65821:65833 compcert.lib.Integers Make unsigned_repr thm
R65821:65833 compcert.lib.Integers Make unsigned_repr thm
R65821:65833 compcert.lib.Integers Make unsigned_repr thm
R65821:65833 compcert.lib.Integers Make unsigned_repr thm
R65850:65852 compcert.lib.Coqlib <> zlt def
R65850:65852 compcert.lib.Coqlib <> zlt def
R65887:65893 compcert.lib.Integers Make testbit def
R65905:65909 Coq.Init.Datatypes <> false constr
R65887:65893 compcert.lib.Integers Make testbit def
R65905:65909 Coq.Init.Datatypes <> false constr
R65918:65929 Coq.Bool.Bool <> andb_false_r thm
R65918:65929 Coq.Bool.Bool <> andb_false_r thm
R65955:65961 compcert.lib.Integers Make testbit def
R66003:66005 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65982:65989 Coq.ZArith.BinInt Z of_nat def
R65992:65999 Coq.ZArith.BinInt Z to_nat def
R66019:66026 Coq.ZArith.Znat Z2Nat id thm
R66003:66005 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65982:65989 Coq.ZArith.BinInt Z of_nat def
R65992:65999 Coq.ZArith.BinInt Z to_nat def
R66019:66026 Coq.ZArith.Znat Z2Nat id thm
R66070:66077 Coq.ZArith.BinInt Z to_nat def
R66049:66062 compcert.lib.Zbits <> Ztestbit_above thm
R66070:66077 Coq.ZArith.BinInt Z to_nat def
R66049:66062 compcert.lib.Zbits <> Ztestbit_above thm
R66121:66139 compcert.lib.Coqlib <> two_power_nat_two_p thm
R66121:66139 compcert.lib.Coqlib <> two_power_nat_two_p thm
R66121:66139 compcert.lib.Coqlib <> two_power_nat_two_p thm
R66166:66179 compcert.lib.Integers Make unsigned_range thm
R66166:66179 compcert.lib.Integers Make unsigned_range thm
R66233:66253 compcert.lib.Integers Make wordsize_max_unsigned thm
R66233:66253 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 66344:66357 Make shru_div_two_p
binder 66369:66369 <> x:569
binder 66371:66371 <> y:570
R66384:66386 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66376:66379 compcert.lib.Integers Make shru def
R66383:66383 compcert.lib.Integers <> y:570 var
R66381:66381 compcert.lib.Integers <> x:569 var
R66387:66390 compcert.lib.Integers Make repr def
R66403:66405 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R66393:66400 compcert.lib.Integers Make unsigned def
R66402:66402 compcert.lib.Integers <> x:569 var
R66406:66410 Coq.ZArith.Zpower <> two_p def
R66413:66420 compcert.lib.Integers Make unsigned def
R66422:66422 compcert.lib.Integers <> y:570 var
R66451:66454 compcert.lib.Integers Make shru def
R66467:66483 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66467:66483 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66467:66483 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66467:66483 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66506:66519 compcert.lib.Integers Make unsigned_range thm
R66506:66519 compcert.lib.Integers Make unsigned_range thm
prf 66546:66554 Make divu_pow2
binder 66566:66566 <> x:571
binder 66568:66568 <> n:572
binder 66570:66573 <> logn:573
R66601:66606 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R66615:66617 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66607:66610 compcert.lib.Integers Make divu def
R66614:66614 compcert.lib.Integers <> n:572 var
R66612:66612 compcert.lib.Integers <> x:571 var
R66618:66621 compcert.lib.Integers Make shru def
R66625:66628 compcert.lib.Integers <> logn:573 var
R66623:66623 compcert.lib.Integers <> x:571 var
R66589:66591 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66578:66586 compcert.lib.Integers Make is_power2 def
R66588:66588 compcert.lib.Integers <> n:572 var
R66592:66595 Coq.Init.Datatypes <> Some constr
R66597:66600 compcert.lib.Integers <> logn:573 var
R66660:66676 compcert.lib.Integers Make is_power2_correct thm
R66660:66676 compcert.lib.Integers Make is_power2_correct thm
R66715:66718 compcert.lib.Integers Make divu def
R66739:66752 compcert.lib.Integers Make shru_div_two_p thm
R66739:66752 compcert.lib.Integers Make shru_div_two_p thm
prf 66832:66844 Make shr_div_two_p
binder 66856:66856 <> x:574
binder 66858:66858 <> y:575
R66870:66872 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66863:66865 compcert.lib.Integers Make shr def
R66869:66869 compcert.lib.Integers <> y:575 var
R66867:66867 compcert.lib.Integers <> x:574 var
R66873:66876 compcert.lib.Integers Make repr def
R66887:66889 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R66879:66884 compcert.lib.Integers Make signed def
R66886:66886 compcert.lib.Integers <> x:574 var
R66890:66894 Coq.ZArith.Zpower <> two_p def
R66897:66904 compcert.lib.Integers Make unsigned def
R66906:66906 compcert.lib.Integers <> y:575 var
R66935:66937 compcert.lib.Integers Make shr def
R66950:66966 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66950:66966 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66950:66966 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66950:66966 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66989:67002 compcert.lib.Integers Make unsigned_range thm
R66989:67002 compcert.lib.Integers Make unsigned_range thm
prf 67029:67037 Make divs_pow2
binder 67049:67049 <> x:576
binder 67051:67051 <> n:577
binder 67053:67056 <> logn:578
R67084:67089 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R67098:67100 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67090:67093 compcert.lib.Integers Make divs def
R67097:67097 compcert.lib.Integers <> n:577 var
R67095:67095 compcert.lib.Integers <> x:576 var
R67101:67104 compcert.lib.Integers Make shrx def
R67108:67111 compcert.lib.Integers <> logn:578 var
R67106:67106 compcert.lib.Integers <> x:576 var
R67072:67074 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67061:67069 compcert.lib.Integers Make is_power2 def
R67071:67071 compcert.lib.Integers <> n:577 var
R67075:67078 Coq.Init.Datatypes <> Some constr
R67080:67083 compcert.lib.Integers <> logn:578 var
R67143:67159 compcert.lib.Integers Make is_power2_correct thm
R67143:67159 compcert.lib.Integers Make is_power2_correct thm
R67185:67188 compcert.lib.Integers Make shrx def
R67199:67211 compcert.lib.Integers Make shl_mul_two_p thm
R67199:67211 compcert.lib.Integers Make shl_mul_two_p thm
R67199:67211 compcert.lib.Integers Make shl_mul_two_p thm
R67224:67233 compcert.lib.Integers Make mul_commut thm
R67224:67233 compcert.lib.Integers Make mul_commut thm
R67224:67233 compcert.lib.Integers Make mul_commut thm
R67244:67250 compcert.lib.Integers Make mul_one thm
R67244:67250 compcert.lib.Integers Make mul_one thm
R67244:67250 compcert.lib.Integers Make mul_one thm
R67278:67290 compcert.lib.Integers Make repr_unsigned thm
R67278:67290 compcert.lib.Integers Make repr_unsigned thm
R67278:67290 compcert.lib.Integers Make repr_unsigned thm
prf 67374:67381 Make modu_and
binder 67393:67393 <> x:579
binder 67395:67395 <> n:580
binder 67397:67400 <> logn:581
R67428:67433 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R67442:67444 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67434:67437 compcert.lib.Integers Make modu def
R67441:67441 compcert.lib.Integers <> n:580 var
R67439:67439 compcert.lib.Integers <> x:579 var
R67445:67447 compcert.lib.Integers Make and def
R67452:67454 compcert.lib.Integers Make sub def
R67458:67460 compcert.lib.Integers Make one def
R67456:67456 compcert.lib.Integers <> n:580 var
R67449:67449 compcert.lib.Integers <> x:579 var
R67416:67418 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67405:67413 compcert.lib.Integers Make is_power2 def
R67415:67415 compcert.lib.Integers <> n:580 var
R67419:67422 Coq.Init.Datatypes <> Some constr
R67424:67427 compcert.lib.Integers <> logn:581 var
R67493:67509 compcert.lib.Integers Make is_power2_correct thm
R67493:67509 compcert.lib.Integers Make is_power2_correct thm
R67540:67552 compcert.lib.Integers Make is_power2_rng thm
R67540:67552 compcert.lib.Integers Make is_power2_rng thm
R67577:67588 compcert.lib.Integers Make same_bits_eq thm
R67577:67588 compcert.lib.Integers Make same_bits_eq thm
R67609:67616 compcert.lib.Integers Make bits_and thm
R67609:67616 compcert.lib.Integers Make bits_and thm
R67609:67616 compcert.lib.Integers Make bits_and thm
R67609:67616 compcert.lib.Integers Make bits_and thm
R67634:67636 compcert.lib.Integers Make sub def
R67647:67658 compcert.lib.Integers Make testbit_repr thm
R67647:67658 compcert.lib.Integers Make testbit_repr thm
R67647:67658 compcert.lib.Integers Make testbit_repr thm
R67647:67658 compcert.lib.Integers Make testbit_repr thm
R67689:67700 compcert.lib.Integers Make unsigned_one thm
R67689:67700 compcert.lib.Integers Make unsigned_one thm
R67689:67700 compcert.lib.Integers Make unsigned_one thm
R67712:67715 compcert.lib.Integers Make modu def
R67726:67737 compcert.lib.Integers Make testbit_repr thm
R67726:67737 compcert.lib.Integers Make testbit_repr thm
R67726:67737 compcert.lib.Integers Make testbit_repr thm
R67726:67737 compcert.lib.Integers Make testbit_repr thm
R67768:67785 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R67768:67785 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R67768:67785 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R67768:67785 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R67768:67785 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R67796:67812 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R67796:67812 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R67796:67812 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R67796:67812 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R67796:67812 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R67827:67829 compcert.lib.Coqlib <> zlt def
R67834:67841 compcert.lib.Integers Make unsigned def
R67827:67829 compcert.lib.Coqlib <> zlt def
R67834:67841 compcert.lib.Integers Make unsigned def
R67861:67871 Coq.Bool.Bool <> andb_true_r thm
R67861:67871 Coq.Bool.Bool <> andb_true_r thm
R67861:67871 Coq.Bool.Bool <> andb_true_r thm
R67890:67901 Coq.Bool.Bool <> andb_false_r thm
R67890:67901 Coq.Bool.Bool <> andb_false_r thm
R67890:67901 Coq.Bool.Bool <> andb_false_r thm
prf 68020:68028 Make shrx_zero
binder 68040:68040 <> x:582
R68056:68059 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68071:68073 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68060:68063 compcert.lib.Integers Make shrx def
R68067:68070 compcert.lib.Integers Make zero def
R68065:68065 compcert.lib.Integers <> x:582 var
R68074:68074 compcert.lib.Integers <> x:582 var
R68052:68054 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R68043:68051 compcert.lib.Integers Make zwordsize def
R68101:68104 compcert.lib.Integers Make shrx def
R68115:68122 compcert.lib.Integers Make shl_zero thm
R68115:68122 compcert.lib.Integers Make shl_zero thm
R68115:68122 compcert.lib.Integers Make shl_zero thm
R68132:68135 compcert.lib.Integers Make divs def
R68146:68155 compcert.lib.Integers Make signed_one thm
R68146:68155 compcert.lib.Integers Make signed_one thm
R68146:68155 compcert.lib.Integers Make signed_one thm
R68176:68185 Coq.ZArith.BinInt Z quot_1_r thm
R68176:68185 Coq.ZArith.BinInt Z quot_1_r thm
R68176:68185 Coq.ZArith.BinInt Z quot_1_r thm
R68194:68204 compcert.lib.Integers Make repr_signed thm
R68194:68204 compcert.lib.Integers Make repr_signed thm
prf 68222:68229 Make shrx_shr
binder 68241:68241 <> x:583
binder 68243:68243 <> y:584
R68283:68288 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68297:68299 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68289:68292 compcert.lib.Integers Make shrx def
R68296:68296 compcert.lib.Integers <> y:584 var
R68294:68294 compcert.lib.Integers <> x:583 var
R68300:68302 compcert.lib.Integers Make shr def
R68359:68359 compcert.lib.Integers <> y:584 var
R68308:68309 compcert.lib.Integers Make lt def
R68313:68316 compcert.lib.Integers Make zero def
R68311:68311 compcert.lib.Integers <> x:583 var
R68356:68356 compcert.lib.Integers <> x:583 var
R68323:68325 compcert.lib.Integers Make add def
R68330:68332 compcert.lib.Integers Make sub def
R68346:68348 compcert.lib.Integers Make one def
R68335:68337 compcert.lib.Integers Make shl def
R68343:68343 compcert.lib.Integers <> y:584 var
R68339:68341 compcert.lib.Integers Make one def
R68327:68327 compcert.lib.Integers <> x:583 var
R68276:68278 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68248:68250 compcert.lib.Integers Make ltu def
R68255:68258 compcert.lib.Integers Make repr def
R68270:68272 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R68261:68269 compcert.lib.Integers Make zwordsize def
R68252:68252 compcert.lib.Integers <> y:584 var
R68279:68282 Coq.Init.Datatypes <> true constr
R68392:68399 compcert.lib.Integers Make unsigned def
R68392:68399 compcert.lib.Integers Make unsigned def
R68416:68419 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R68422:68424 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R68434:68436 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R68425:68433 compcert.lib.Integers Make zwordsize def
R68416:68419 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R68422:68424 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R68434:68436 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R68425:68433 compcert.lib.Integers Make zwordsize def
R68457:68463 compcert.lib.Integers Make ltu_inv thm
R68457:68463 compcert.lib.Integers Make ltu_inv thm
R68481:68493 compcert.lib.Integers Make unsigned_repr thm
R68481:68493 compcert.lib.Integers Make unsigned_repr thm
R68481:68493 compcert.lib.Integers Make unsigned_repr thm
R68481:68493 compcert.lib.Integers Make unsigned_repr thm
R68517:68528 compcert.lib.Integers Make wordsize_pos thm
R68530:68550 compcert.lib.Integers Make wordsize_max_unsigned thm
R68517:68528 compcert.lib.Integers Make wordsize_pos thm
R68530:68550 compcert.lib.Integers Make wordsize_max_unsigned thm
R68570:68582 compcert.lib.Integers Make shr_div_two_p thm
R68570:68582 compcert.lib.Integers Make shr_div_two_p thm
R68570:68582 compcert.lib.Integers Make shr_div_two_p thm
R68592:68595 compcert.lib.Integers Make shrx def
R68605:68608 compcert.lib.Integers Make divs def
R68630:68632 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68621:68623 compcert.lib.Integers Make shl def
R68625:68627 compcert.lib.Integers Make one def
R68633:68636 compcert.lib.Integers Make repr def
R68639:68643 Coq.ZArith.Zpower <> two_p def
R68630:68632 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68621:68623 compcert.lib.Integers Make shl def
R68625:68627 compcert.lib.Integers Make one def
R68633:68636 compcert.lib.Integers Make repr def
R68639:68643 Coq.ZArith.Zpower <> two_p def
R68669:68671 compcert.lib.Integers Make mul def
R68678:68681 compcert.lib.Integers Make repr def
R68684:68688 Coq.ZArith.Zpower <> two_p def
R68673:68675 compcert.lib.Integers Make one def
R68669:68671 compcert.lib.Integers Make mul def
R68678:68681 compcert.lib.Integers Make repr def
R68684:68688 Coq.ZArith.Zpower <> two_p def
R68673:68675 compcert.lib.Integers Make one def
R68717:68724 compcert.lib.Integers Make mul_pow2 thm
R68717:68724 compcert.lib.Integers Make mul_pow2 thm
R68743:68746 compcert.lib.Integers Make repr def
R68743:68746 compcert.lib.Integers Make repr def
R68763:68777 compcert.lib.Integers Make is_power2_two_p thm
R68763:68777 compcert.lib.Integers Make is_power2_two_p thm
R68793:68805 compcert.lib.Integers Make repr_unsigned thm
R68793:68805 compcert.lib.Integers Make repr_unsigned thm
R68820:68829 compcert.lib.Integers Make mul_commut thm
R68820:68829 compcert.lib.Integers Make mul_commut thm
R68820:68829 compcert.lib.Integers Make mul_commut thm
R68838:68844 compcert.lib.Integers Make mul_one thm
R68838:68844 compcert.lib.Integers Make mul_one thm
R68865:68867 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R68857:68861 Coq.ZArith.Zpower <> two_p def
R68865:68867 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R68857:68861 Coq.ZArith.Zpower <> two_p def
R68878:68890 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R68878:68890 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R68918:68920 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R68910:68914 Coq.ZArith.Zpower <> two_p def
R68921:68932 compcert.lib.Integers Make half_modulus def
R68918:68920 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R68910:68914 Coq.ZArith.Zpower <> two_p def
R68921:68932 compcert.lib.Integers Make half_modulus def
R68948:68965 compcert.lib.Integers Make half_modulus_power thm
R68948:68965 compcert.lib.Integers Make half_modulus_power thm
R68948:68965 compcert.lib.Integers Make half_modulus_power thm
R68978:68998 compcert.lib.Coqlib <> two_p_monotone_strict thm
R68978:68998 compcert.lib.Coqlib <> two_p_monotone_strict thm
R69025:69027 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R69017:69021 Coq.ZArith.Zpower <> two_p def
R69028:69034 compcert.lib.Integers Make modulus def
R69025:69027 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R69017:69021 Coq.ZArith.Zpower <> two_p def
R69028:69034 compcert.lib.Integers Make modulus def
R69050:69062 compcert.lib.Integers Make modulus_power thm
R69050:69062 compcert.lib.Integers Make modulus_power thm
R69050:69062 compcert.lib.Integers Make modulus_power thm
R69071:69091 compcert.lib.Coqlib <> two_p_monotone_strict thm
R69071:69091 compcert.lib.Coqlib <> two_p_monotone_strict thm
R69131:69133 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69111:69118 compcert.lib.Integers Make unsigned def
R69121:69123 compcert.lib.Integers Make shl def
R69125:69127 compcert.lib.Integers Make one def
R69134:69138 Coq.ZArith.Zpower <> two_p def
R69131:69133 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69111:69118 compcert.lib.Integers Make unsigned def
R69121:69123 compcert.lib.Integers Make shl def
R69125:69127 compcert.lib.Integers Make one def
R69134:69138 Coq.ZArith.Zpower <> two_p def
R69167:69179 compcert.lib.Integers Make unsigned_repr thm
R69167:69179 compcert.lib.Integers Make unsigned_repr thm
R69189:69200 compcert.lib.Integers Make max_unsigned def
R69238:69240 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69220:69225 compcert.lib.Integers Make signed def
R69228:69230 compcert.lib.Integers Make shl def
R69232:69234 compcert.lib.Integers Make one def
R69241:69245 Coq.ZArith.Zpower <> two_p def
R69238:69240 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69220:69225 compcert.lib.Integers Make signed def
R69228:69230 compcert.lib.Integers Make shl def
R69232:69234 compcert.lib.Integers Make one def
R69241:69245 Coq.ZArith.Zpower <> two_p def
R69274:69284 compcert.lib.Integers Make signed_repr thm
R69274:69284 compcert.lib.Integers Make signed_repr thm
R69298:69307 compcert.lib.Integers Make max_signed def
R69321:69334 compcert.lib.Integers Make min_signed_neg thm
R69321:69334 compcert.lib.Integers Make min_signed_neg thm
R69368:69377 compcert.lib.Zbits <> Zquot_Zdiv thm
R69368:69377 compcert.lib.Zbits <> Zquot_Zdiv thm
R69368:69377 compcert.lib.Zbits <> Zquot_Zdiv thm
R69368:69377 compcert.lib.Zbits <> Zquot_Zdiv thm
R69395:69396 compcert.lib.Integers Make lt def
R69407:69417 compcert.lib.Integers Make signed_zero thm
R69407:69417 compcert.lib.Integers Make signed_zero thm
R69407:69417 compcert.lib.Integers Make signed_zero thm
R69432:69434 compcert.lib.Coqlib <> zlt def
R69437:69442 compcert.lib.Integers Make signed def
R69432:69434 compcert.lib.Coqlib <> zlt def
R69437:69442 compcert.lib.Integers Make signed def
R69467:69476 compcert.lib.Integers Make add_signed thm
R69467:69476 compcert.lib.Integers Make add_signed thm
R69467:69476 compcert.lib.Integers Make add_signed thm
R69517:69519 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69489:69494 compcert.lib.Integers Make signed def
R69497:69499 compcert.lib.Integers Make sub def
R69513:69515 compcert.lib.Integers Make one def
R69502:69504 compcert.lib.Integers Make shl def
R69506:69508 compcert.lib.Integers Make one def
R69528:69530 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R69520:69524 Coq.ZArith.Zpower <> two_p def
R69517:69519 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69489:69494 compcert.lib.Integers Make signed def
R69497:69499 compcert.lib.Integers Make sub def
R69513:69515 compcert.lib.Integers Make one def
R69502:69504 compcert.lib.Integers Make shl def
R69506:69508 compcert.lib.Integers Make one def
R69528:69530 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R69520:69524 Coq.ZArith.Zpower <> two_p def
R69546:69548 compcert.lib.Integers Make sub def
R69571:69582 compcert.lib.Integers Make unsigned_one thm
R69571:69582 compcert.lib.Integers Make unsigned_one thm
R69571:69582 compcert.lib.Integers Make unsigned_one thm
R69595:69605 compcert.lib.Integers Make signed_repr thm
R69595:69605 compcert.lib.Integers Make signed_repr thm
R69623:69636 compcert.lib.Integers Make min_signed_neg thm
R69623:69636 compcert.lib.Integers Make min_signed_neg thm
R69646:69655 compcert.lib.Integers Make max_signed def
R69687:69697 compcert.lib.Integers Make signed_repr thm
R69687:69697 compcert.lib.Integers Make signed_repr thm
R69687:69697 compcert.lib.Integers Make signed_repr thm
R69687:69697 compcert.lib.Integers Make signed_repr thm
R69739:69750 compcert.lib.Integers Make signed_range thm
R69739:69750 compcert.lib.Integers Make signed_range thm
R69786:69789 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R69782:69784 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R69774:69778 Coq.ZArith.Zpower <> two_p def
R69790:69799 compcert.lib.Integers Make max_signed def
R69786:69789 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R69782:69784 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R69774:69778 Coq.ZArith.Zpower <> two_p def
R69790:69799 compcert.lib.Integers Make max_signed def
R69810:69819 compcert.lib.Integers Make max_signed def
prf 69850:69859 Make shrx_shr_2
binder 69871:69871 <> x:585
binder 69873:69873 <> y:586
R69913:69918 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69927:69929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69919:69922 compcert.lib.Integers Make shrx def
R69926:69926 compcert.lib.Integers <> y:586 var
R69924:69924 compcert.lib.Integers <> x:585 var
R69930:69932 compcert.lib.Integers Make shr def
R69998:69998 compcert.lib.Integers <> y:586 var
R69935:69937 compcert.lib.Integers Make add def
R69942:69945 compcert.lib.Integers Make shru def
R69979:69981 compcert.lib.Integers Make sub def
R69993:69993 compcert.lib.Integers <> y:586 var
R69983:69991 compcert.lib.Integers Make iwordsize def
R69948:69950 compcert.lib.Integers Make shr def
R69955:69958 compcert.lib.Integers Make repr def
R69970:69972 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R69961:69969 compcert.lib.Integers Make zwordsize def
R69952:69952 compcert.lib.Integers <> x:585 var
R69939:69939 compcert.lib.Integers <> x:585 var
R69906:69908 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69878:69880 compcert.lib.Integers Make ltu def
R69885:69888 compcert.lib.Integers Make repr def
R69900:69902 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R69891:69899 compcert.lib.Integers Make zwordsize def
R69882:69882 compcert.lib.Integers <> y:586 var
R69909:69912 Coq.Init.Datatypes <> true constr
R70028:70035 compcert.lib.Integers Make shrx_shr thm
R70028:70035 compcert.lib.Integers Make shrx_shr thm
R70028:70035 compcert.lib.Integers Make shrx_shr thm
R70065:70075 compcert.lib.Integers Make shr_lt_zero thm
R70065:70075 compcert.lib.Integers Make shr_lt_zero thm
R70065:70075 compcert.lib.Integers Make shr_lt_zero thm
R70088:70089 compcert.lib.Integers Make lt def
R70093:70096 compcert.lib.Integers Make zero def
R70088:70089 compcert.lib.Integers Make lt def
R70093:70096 compcert.lib.Integers Make zero def
R70113:70120 compcert.lib.Integers Make unsigned def
R70113:70120 compcert.lib.Integers Make unsigned def
R70140:70153 compcert.lib.Integers Make unsigned_range thm
R70140:70153 compcert.lib.Integers Make unsigned_range thm
R70187:70190 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R70193:70195 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R70205:70207 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R70196:70204 compcert.lib.Integers Make zwordsize def
R70187:70190 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R70193:70195 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R70205:70207 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R70196:70204 compcert.lib.Integers Make zwordsize def
R70228:70234 compcert.lib.Integers Make ltu_inv thm
R70228:70234 compcert.lib.Integers Make ltu_inv thm
R70252:70264 compcert.lib.Integers Make unsigned_repr thm
R70252:70264 compcert.lib.Integers Make unsigned_repr thm
R70252:70264 compcert.lib.Integers Make unsigned_repr thm
R70252:70264 compcert.lib.Integers Make unsigned_repr thm
R70288:70299 compcert.lib.Integers Make wordsize_pos thm
R70301:70321 compcert.lib.Integers Make wordsize_max_unsigned thm
R70288:70299 compcert.lib.Integers Make wordsize_pos thm
R70301:70321 compcert.lib.Integers Make wordsize_max_unsigned thm
R70349:70351 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R70341:70345 Coq.ZArith.Zpower <> two_p def
R70352:70358 compcert.lib.Integers Make modulus def
R70349:70351 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R70341:70345 Coq.ZArith.Zpower <> two_p def
R70352:70358 compcert.lib.Integers Make modulus def
R70374:70386 compcert.lib.Integers Make modulus_power thm
R70374:70386 compcert.lib.Integers Make modulus_power thm
R70374:70386 compcert.lib.Integers Make modulus_power thm
R70395:70415 compcert.lib.Coqlib <> two_p_monotone_strict thm
R70395:70415 compcert.lib.Coqlib <> two_p_monotone_strict thm
R70444:70456 compcert.lib.Integers Make shl_mul_two_p thm
R70444:70456 compcert.lib.Integers Make shl_mul_two_p thm
R70444:70456 compcert.lib.Integers Make shl_mul_two_p thm
R70476:70485 compcert.lib.Integers Make mul_commut thm
R70476:70485 compcert.lib.Integers Make mul_commut thm
R70476:70485 compcert.lib.Integers Make mul_commut thm
R70496:70502 compcert.lib.Integers Make mul_one thm
R70496:70502 compcert.lib.Integers Make mul_one thm
R70496:70502 compcert.lib.Integers Make mul_one thm
R70514:70516 compcert.lib.Integers Make sub def
R70527:70538 compcert.lib.Integers Make unsigned_one thm
R70527:70538 compcert.lib.Integers Make unsigned_one thm
R70527:70538 compcert.lib.Integers Make unsigned_one thm
R70549:70561 compcert.lib.Integers Make unsigned_repr thm
R70549:70561 compcert.lib.Integers Make unsigned_repr thm
R70549:70561 compcert.lib.Integers Make unsigned_repr thm
R70549:70561 compcert.lib.Integers Make unsigned_repr thm
R70574:70595 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70574:70595 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70574:70595 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70615:70626 compcert.lib.Integers Make same_bits_eq thm
R70615:70626 compcert.lib.Integers Make same_bits_eq thm
R70645:70653 compcert.lib.Integers Make bits_shru thm
R70645:70653 compcert.lib.Integers Make bits_shru thm
R70645:70653 compcert.lib.Integers Make bits_shru thm
R70674:70685 compcert.lib.Integers Make testbit_repr thm
R70674:70685 compcert.lib.Integers Make testbit_repr thm
R70674:70685 compcert.lib.Integers Make testbit_repr thm
R70704:70720 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R70704:70720 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R70704:70720 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R70771:70791 compcert.lib.Integers Make wordsize_max_unsigned thm
R70742:70754 compcert.lib.Integers Make unsigned_repr thm
R70742:70754 compcert.lib.Integers Make unsigned_repr thm
R70771:70791 compcert.lib.Integers Make wordsize_max_unsigned thm
R70742:70754 compcert.lib.Integers Make unsigned_repr thm
R70814:70816 compcert.lib.Coqlib <> zlt def
R70814:70816 compcert.lib.Coqlib <> zlt def
R70835:70842 compcert.lib.Coqlib <> zlt_true thm
R70835:70842 compcert.lib.Coqlib <> zlt_true thm
R70835:70842 compcert.lib.Coqlib <> zlt_true thm
R70862:70870 compcert.lib.Integers Make bits_mone thm
R70862:70870 compcert.lib.Integers Make bits_mone thm
R70862:70870 compcert.lib.Integers Make bits_mone thm
R70898:70906 compcert.lib.Coqlib <> zlt_false thm
R70898:70906 compcert.lib.Coqlib <> zlt_false thm
R70898:70906 compcert.lib.Coqlib <> zlt_false thm
R70942:70944 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R70934:70938 Coq.ZArith.Zpower <> two_p def
R70958:70970 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R70942:70944 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R70934:70938 Coq.ZArith.Zpower <> two_p def
R70958:70970 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R70988:70999 compcert.lib.Integers Make max_unsigned def
R71020:71023 compcert.lib.Integers Make shru def
R71031:71033 compcert.lib.Integers Make sub def
R71035:71043 compcert.lib.Integers Make iwordsize def
R71025:71028 compcert.lib.Integers Make zero def
R71054:71057 compcert.lib.Integers Make zero def
R71020:71023 compcert.lib.Integers Make shru def
R71031:71033 compcert.lib.Integers Make sub def
R71035:71043 compcert.lib.Integers Make iwordsize def
R71025:71028 compcert.lib.Integers Make zero def
R71054:71057 compcert.lib.Integers Make zero def
R71070:71077 compcert.lib.Integers Make add_zero thm
R71070:71077 compcert.lib.Integers Make add_zero thm
R71070:71077 compcert.lib.Integers Make add_zero thm
R71109:71111 compcert.lib.Coqlib <> zlt def
R71146:71154 compcert.lib.Integers Make zwordsize def
R71115:71117 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R71118:71125 compcert.lib.Integers Make unsigned def
R71128:71130 compcert.lib.Integers Make sub def
R71132:71140 compcert.lib.Integers Make iwordsize def
R71109:71111 compcert.lib.Coqlib <> zlt def
R71146:71154 compcert.lib.Integers Make zwordsize def
R71115:71117 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R71118:71125 compcert.lib.Integers Make unsigned def
R71128:71130 compcert.lib.Integers Make sub def
R71132:71140 compcert.lib.Integers Make iwordsize def
prf 71178:71187 Make shrx_carry
binder 71199:71199 <> x:587
binder 71201:71201 <> y:588
R71241:71246 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R71255:71257 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71247:71250 compcert.lib.Integers Make shrx def
R71254:71254 compcert.lib.Integers <> y:588 var
R71252:71252 compcert.lib.Integers <> x:587 var
R71258:71260 compcert.lib.Integers Make add def
R71273:71281 compcert.lib.Integers Make shr_carry def
R71285:71285 compcert.lib.Integers <> y:588 var
R71283:71283 compcert.lib.Integers <> x:587 var
R71263:71265 compcert.lib.Integers Make shr def
R71269:71269 compcert.lib.Integers <> y:588 var
R71267:71267 compcert.lib.Integers <> x:587 var
R71234:71236 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71206:71208 compcert.lib.Integers Make ltu def
R71213:71216 compcert.lib.Integers Make repr def
R71228:71230 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R71219:71227 compcert.lib.Integers Make zwordsize def
R71210:71210 compcert.lib.Integers <> y:588 var
R71237:71240 Coq.Init.Datatypes <> true constr
R71314:71321 compcert.lib.Integers Make shrx_shr thm
R71314:71321 compcert.lib.Integers Make shrx_shr thm
R71314:71321 compcert.lib.Integers Make shrx_shr thm
R71314:71321 compcert.lib.Integers Make shrx_shr thm
R71337:71345 compcert.lib.Integers Make shr_carry def
R71357:71358 compcert.lib.Integers Make lt def
R71372:71377 compcert.lib.Integers Make signed def
R71372:71377 compcert.lib.Integers Make signed def
R71391:71401 compcert.lib.Integers Make signed_zero thm
R71391:71401 compcert.lib.Integers Make signed_zero thm
R71391:71401 compcert.lib.Integers Make signed_zero thm
R71416:71418 compcert.lib.Coqlib <> zlt def
R71416:71418 compcert.lib.Coqlib <> zlt def
R71447:71454 compcert.lib.Integers Make add_zero thm
R71447:71454 compcert.lib.Integers Make add_zero thm
R71447:71454 compcert.lib.Integers Make add_zero thm
R71476:71483 compcert.lib.Integers Make unsigned def
R71476:71483 compcert.lib.Integers Make unsigned def
R71500:71503 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R71506:71508 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R71518:71520 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R71509:71517 compcert.lib.Integers Make zwordsize def
R71500:71503 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R71506:71508 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R71518:71520 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R71509:71517 compcert.lib.Integers Make zwordsize def
R71541:71547 compcert.lib.Integers Make ltu_inv thm
R71541:71547 compcert.lib.Integers Make ltu_inv thm
R71565:71577 compcert.lib.Integers Make unsigned_repr thm
R71565:71577 compcert.lib.Integers Make unsigned_repr thm
R71565:71577 compcert.lib.Integers Make unsigned_repr thm
R71565:71577 compcert.lib.Integers Make unsigned_repr thm
R71601:71612 compcert.lib.Integers Make wordsize_pos thm
R71614:71634 compcert.lib.Integers Make wordsize_max_unsigned thm
R71601:71612 compcert.lib.Integers Make wordsize_pos thm
R71614:71634 compcert.lib.Integers Make wordsize_max_unsigned thm
R71663:71665 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71654:71656 compcert.lib.Integers Make shl def
R71658:71660 compcert.lib.Integers Make one def
R71666:71669 compcert.lib.Integers Make repr def
R71672:71676 Coq.ZArith.Zpower <> two_p def
R71663:71665 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71654:71656 compcert.lib.Integers Make shl def
R71658:71660 compcert.lib.Integers Make one def
R71666:71669 compcert.lib.Integers Make repr def
R71672:71676 Coq.ZArith.Zpower <> two_p def
R71696:71708 compcert.lib.Integers Make shl_mul_two_p thm
R71696:71708 compcert.lib.Integers Make shl_mul_two_p thm
R71696:71708 compcert.lib.Integers Make shl_mul_two_p thm
R71719:71728 compcert.lib.Integers Make mul_commut thm
R71719:71728 compcert.lib.Integers Make mul_commut thm
R71719:71728 compcert.lib.Integers Make mul_commut thm
R71737:71743 compcert.lib.Integers Make mul_one thm
R71737:71743 compcert.lib.Integers Make mul_one thm
R71783:71785 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71756:71758 compcert.lib.Integers Make and def
R71763:71765 compcert.lib.Integers Make sub def
R71779:71781 compcert.lib.Integers Make one def
R71768:71770 compcert.lib.Integers Make shl def
R71772:71774 compcert.lib.Integers Make one def
R71786:71789 compcert.lib.Integers Make modu def
R71794:71797 compcert.lib.Integers Make repr def
R71800:71804 Coq.ZArith.Zpower <> two_p def
R71783:71785 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71756:71758 compcert.lib.Integers Make and def
R71763:71765 compcert.lib.Integers Make sub def
R71779:71781 compcert.lib.Integers Make one def
R71768:71770 compcert.lib.Integers Make shl def
R71772:71774 compcert.lib.Integers Make one def
R71786:71789 compcert.lib.Integers Make modu def
R71794:71797 compcert.lib.Integers Make repr def
R71800:71804 Coq.ZArith.Zpower <> two_p def
R71845:71852 compcert.lib.Integers Make modu_and thm
R71845:71852 compcert.lib.Integers Make modu_and thm
R71884:71898 compcert.lib.Integers Make is_power2_two_p thm
R71884:71898 compcert.lib.Integers Make is_power2_two_p thm
R71884:71898 compcert.lib.Integers Make is_power2_two_p thm
R71884:71898 compcert.lib.Integers Make is_power2_two_p thm
R71920:71932 compcert.lib.Integers Make repr_unsigned thm
R71920:71932 compcert.lib.Integers Make repr_unsigned thm
R71920:71932 compcert.lib.Integers Make repr_unsigned thm
R71995:72007 compcert.lib.Integers Make shr_div_two_p thm
R71995:72007 compcert.lib.Integers Make shr_div_two_p thm
R71995:72007 compcert.lib.Integers Make shr_div_two_p thm
R71995:72007 compcert.lib.Integers Make shr_div_two_p thm
R71995:72007 compcert.lib.Integers Make shr_div_two_p thm
R71995:72007 compcert.lib.Integers Make shr_div_two_p thm
R72046:72048 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R72038:72042 Coq.ZArith.Zpower <> two_p def
R72046:72048 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R72038:72042 Coq.ZArith.Zpower <> two_p def
R72059:72071 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R72059:72071 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R72099:72101 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R72091:72095 Coq.ZArith.Zpower <> two_p def
R72102:72108 compcert.lib.Integers Make modulus def
R72099:72101 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R72091:72095 Coq.ZArith.Zpower <> two_p def
R72102:72108 compcert.lib.Integers Make modulus def
R72124:72136 compcert.lib.Integers Make modulus_power thm
R72124:72136 compcert.lib.Integers Make modulus_power thm
R72124:72136 compcert.lib.Integers Make modulus_power thm
R72145:72165 compcert.lib.Coqlib <> two_p_monotone_strict thm
R72145:72165 compcert.lib.Coqlib <> two_p_monotone_strict thm
R72193:72195 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R72185:72189 Coq.ZArith.Zpower <> two_p def
R72196:72207 compcert.lib.Integers Make half_modulus def
R72193:72195 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R72185:72189 Coq.ZArith.Zpower <> two_p def
R72196:72207 compcert.lib.Integers Make half_modulus def
R72223:72240 compcert.lib.Integers Make half_modulus_power thm
R72223:72240 compcert.lib.Integers Make half_modulus_power thm
R72223:72240 compcert.lib.Integers Make half_modulus_power thm
R72253:72273 compcert.lib.Coqlib <> two_p_monotone_strict thm
R72253:72273 compcert.lib.Coqlib <> two_p_monotone_strict thm
R72300:72302 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R72292:72296 Coq.ZArith.Zpower <> two_p def
R72303:72309 compcert.lib.Integers Make modulus def
R72300:72302 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R72292:72296 Coq.ZArith.Zpower <> two_p def
R72303:72309 compcert.lib.Integers Make modulus def
R72325:72337 compcert.lib.Integers Make modulus_power thm
R72325:72337 compcert.lib.Integers Make modulus_power thm
R72325:72337 compcert.lib.Integers Make modulus_power thm
R72346:72366 compcert.lib.Coqlib <> two_p_monotone_strict thm
R72346:72366 compcert.lib.Coqlib <> two_p_monotone_strict thm
R72411:72413 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72386:72388 compcert.lib.Integers Make sub def
R72408:72410 compcert.lib.Integers Make one def
R72391:72394 compcert.lib.Integers Make repr def
R72397:72401 Coq.ZArith.Zpower <> two_p def
R72414:72417 compcert.lib.Integers Make repr def
R72428:72430 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72420:72424 Coq.ZArith.Zpower <> two_p def
R72411:72413 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72386:72388 compcert.lib.Integers Make sub def
R72408:72410 compcert.lib.Integers Make one def
R72391:72394 compcert.lib.Integers Make repr def
R72397:72401 Coq.ZArith.Zpower <> two_p def
R72414:72417 compcert.lib.Integers Make repr def
R72428:72430 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72420:72424 Coq.ZArith.Zpower <> two_p def
R72447:72449 compcert.lib.Integers Make sub def
R72458:72469 compcert.lib.Integers Make eqm_samerepr thm
R72458:72469 compcert.lib.Integers Make eqm_samerepr thm
R72478:72484 compcert.lib.Integers Make eqm_sub thm
R72478:72484 compcert.lib.Integers Make eqm_sub thm
R72493:72499 compcert.lib.Integers Make eqm_sym thm
R72508:72524 compcert.lib.Integers Make eqm_unsigned_repr thm
R72493:72499 compcert.lib.Integers Make eqm_sym thm
R72508:72524 compcert.lib.Integers Make eqm_unsigned_repr thm
R72539:72550 compcert.lib.Integers Make unsigned_one thm
R72539:72550 compcert.lib.Integers Make unsigned_one thm
R72539:72550 compcert.lib.Integers Make unsigned_one thm
R72559:72566 compcert.lib.Integers Make eqm_refl thm
R72559:72566 compcert.lib.Integers Make eqm_refl thm
R72591:72600 compcert.lib.Integers Make add_signed thm
R72591:72600 compcert.lib.Integers Make add_signed thm
R72591:72600 compcert.lib.Integers Make add_signed thm
R72623:72633 compcert.lib.Integers Make signed_repr thm
R72644:72646 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72636:72640 Coq.ZArith.Zpower <> two_p def
R72623:72633 compcert.lib.Integers Make signed_repr thm
R72644:72646 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72636:72640 Coq.ZArith.Zpower <> two_p def
R72623:72633 compcert.lib.Integers Make signed_repr thm
R72644:72646 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72636:72640 Coq.ZArith.Zpower <> two_p def
R72623:72633 compcert.lib.Integers Make signed_repr thm
R72644:72646 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72636:72640 Coq.ZArith.Zpower <> two_p def
R72660:72670 compcert.lib.Integers Make signed_repr thm
R72660:72670 compcert.lib.Integers Make signed_repr thm
R72660:72670 compcert.lib.Integers Make signed_repr thm
R72660:72670 compcert.lib.Integers Make signed_repr thm
R72682:72685 compcert.lib.Integers Make modu def
R72696:72708 compcert.lib.Integers Make unsigned_repr thm
R72696:72708 compcert.lib.Integers Make unsigned_repr thm
R72696:72708 compcert.lib.Integers Make unsigned_repr thm
R72696:72708 compcert.lib.Integers Make unsigned_repr thm
R72720:72721 compcert.lib.Integers Make eq def
R72732:72744 compcert.lib.Integers Make unsigned_zero thm
R72732:72744 compcert.lib.Integers Make unsigned_zero thm
R72732:72744 compcert.lib.Integers Make unsigned_zero thm
R72755:72767 compcert.lib.Integers Make unsigned_repr thm
R72755:72767 compcert.lib.Integers Make unsigned_repr thm
R72755:72767 compcert.lib.Integers Make unsigned_repr thm
R72755:72767 compcert.lib.Integers Make unsigned_repr thm
R72803:72805 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72790:72794 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R72780:72787 compcert.lib.Integers Make unsigned def
R72795:72799 Coq.ZArith.Zpower <> two_p def
R72808:72812 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R72813:72817 Coq.ZArith.Zpower <> two_p def
R72803:72805 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72790:72794 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R72780:72787 compcert.lib.Integers Make unsigned def
R72795:72799 Coq.ZArith.Zpower <> two_p def
R72808:72812 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R72813:72817 Coq.ZArith.Zpower <> two_p def
R72834:72845 compcert.lib.Zbits <> eqmod_mod_eq thm
R72834:72845 compcert.lib.Zbits <> eqmod_mod_eq thm
R72879:72885 compcert.lib.Integers Make modulus def
R72860:72872 compcert.lib.Zbits <> eqmod_divides thm
R72879:72885 compcert.lib.Integers Make modulus def
R72860:72872 compcert.lib.Zbits <> eqmod_divides thm
R72897:72899 compcert.lib.Integers Make eqm def
R72897:72899 compcert.lib.Integers Make eqm def
R72919:72925 compcert.lib.Integers Make eqm_sym thm
R72919:72925 compcert.lib.Integers Make eqm_sym thm
R72934:72952 compcert.lib.Integers Make eqm_signed_unsigned thm
R72934:72952 compcert.lib.Integers Make eqm_signed_unsigned thm
R72966:72972 compcert.lib.Integers Make modulus def
R72983:73001 compcert.lib.Coqlib <> two_power_nat_two_p thm
R72983:73001 compcert.lib.Coqlib <> two_power_nat_two_p thm
R72983:73001 compcert.lib.Coqlib <> two_power_nat_two_p thm
R73016:73020 Coq.ZArith.Zpower <> two_p def
R73032:73034 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R73023:73031 compcert.lib.Integers Make zwordsize def
R73016:73020 Coq.ZArith.Zpower <> two_p def
R73032:73034 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R73023:73031 compcert.lib.Integers Make zwordsize def
R73052:73063 Coq.ZArith.Zpower <> two_p_is_exp thm
R73052:73063 Coq.ZArith.Zpower <> two_p_is_exp thm
R73052:73063 Coq.ZArith.Zpower <> two_p_is_exp thm
R73052:73063 Coq.ZArith.Zpower <> two_p_is_exp thm
R73052:73063 Coq.ZArith.Zpower <> two_p_is_exp thm
R73084:73092 compcert.lib.Integers Make zwordsize def
R73084:73092 compcert.lib.Integers Make zwordsize def
R73138:73147 compcert.lib.Zbits <> Zdiv_shift thm
R73138:73147 compcert.lib.Zbits <> Zdiv_shift thm
R73138:73147 compcert.lib.Zbits <> Zdiv_shift thm
R73138:73147 compcert.lib.Zbits <> Zdiv_shift thm
R73165:73167 compcert.lib.Integers Make add def
R73176:73187 compcert.lib.Integers Make eqm_samerepr thm
R73176:73187 compcert.lib.Integers Make eqm_samerepr thm
R73196:73202 compcert.lib.Integers Make eqm_add thm
R73196:73202 compcert.lib.Integers Make eqm_add thm
R73213:73229 compcert.lib.Integers Make eqm_unsigned_repr thm
R73213:73229 compcert.lib.Integers Make eqm_unsigned_repr thm
R73244:73246 compcert.lib.Coqlib <> zeq def
R73251:73255 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R73256:73260 Coq.ZArith.Zpower <> two_p def
R73244:73246 compcert.lib.Coqlib <> zeq def
R73251:73255 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R73256:73260 Coq.ZArith.Zpower <> two_p def
R73287:73299 compcert.lib.Integers Make unsigned_zero thm
R73287:73299 compcert.lib.Integers Make unsigned_zero thm
R73287:73299 compcert.lib.Integers Make unsigned_zero thm
R73308:73315 compcert.lib.Integers Make eqm_refl thm
R73308:73315 compcert.lib.Integers Make eqm_refl thm
R73328:73339 compcert.lib.Integers Make unsigned_one thm
R73328:73339 compcert.lib.Integers Make unsigned_one thm
R73328:73339 compcert.lib.Integers Make unsigned_one thm
R73348:73355 compcert.lib.Integers Make eqm_refl thm
R73348:73355 compcert.lib.Integers Make eqm_refl thm
R73372:73379 Coq.ZArith.Zdiv <> Z_mod_lt thm
R73395:73399 Coq.ZArith.Zpower <> two_p def
R73382:73389 compcert.lib.Integers Make unsigned def
R73372:73379 Coq.ZArith.Zdiv <> Z_mod_lt thm
R73395:73399 Coq.ZArith.Zpower <> two_p def
R73382:73389 compcert.lib.Integers Make unsigned def
R73417:73428 compcert.lib.Integers Make max_unsigned def
R73447:73458 compcert.lib.Integers Make max_unsigned def
R73482:73493 compcert.lib.Integers Make signed_range thm
R73482:73493 compcert.lib.Integers Make signed_range thm
R73537:73546 compcert.lib.Integers Make max_signed def
R73569:73582 compcert.lib.Integers Make min_signed_neg thm
R73569:73582 compcert.lib.Integers Make min_signed_neg thm
R73592:73601 compcert.lib.Integers Make max_signed def
prf 73669:73685 Make shr_shru_positive
binder 73697:73697 <> x:589
binder 73699:73699 <> y:590
R73717:73722 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73730:73732 Coq.Init.Logic <> ::type_scope:x_'='_x not
R73723:73725 compcert.lib.Integers Make shr def
R73729:73729 compcert.lib.Integers <> y:590 var
R73727:73727 compcert.lib.Integers <> x:589 var
R73733:73736 compcert.lib.Integers Make shru def
R73740:73740 compcert.lib.Integers <> y:590 var
R73738:73738 compcert.lib.Integers <> x:589 var
R73712:73715 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R73704:73709 compcert.lib.Integers Make signed def
R73711:73711 compcert.lib.Integers <> x:589 var
R73770:73782 compcert.lib.Integers Make shr_div_two_p thm
R73770:73782 compcert.lib.Integers Make shr_div_two_p thm
R73770:73782 compcert.lib.Integers Make shr_div_two_p thm
R73793:73806 compcert.lib.Integers Make shru_div_two_p thm
R73793:73806 compcert.lib.Integers Make shru_div_two_p thm
R73793:73806 compcert.lib.Integers Make shru_div_two_p thm
R73819:73836 compcert.lib.Integers Make signed_eq_unsigned thm
R73819:73836 compcert.lib.Integers Make signed_eq_unsigned thm
R73819:73836 compcert.lib.Integers Make signed_eq_unsigned thm
R73819:73836 compcert.lib.Integers Make signed_eq_unsigned thm
R73851:73865 compcert.lib.Integers Make signed_positive thm
R73851:73865 compcert.lib.Integers Make signed_positive thm
prf 73886:73897 Make and_positive
binder 73909:73909 <> x:591
binder 73911:73911 <> y:592
R73927:73930 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73947:73950 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R73931:73936 compcert.lib.Integers Make signed def
R73939:73941 compcert.lib.Integers Make and def
R73945:73945 compcert.lib.Integers <> y:592 var
R73943:73943 compcert.lib.Integers <> x:591 var
R73922:73925 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R73914:73919 compcert.lib.Integers Make signed def
R73921:73921 compcert.lib.Integers <> y:592 var
R73991:73993 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R73981:73988 compcert.lib.Integers Make unsigned def
R73994:74005 compcert.lib.Integers Make half_modulus def
R73991:73993 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R73981:73988 compcert.lib.Integers Make unsigned def
R73994:74005 compcert.lib.Integers Make half_modulus def
R74017:74031 compcert.lib.Integers Make signed_positive thm
R74017:74031 compcert.lib.Integers Make signed_positive thm
R74017:74031 compcert.lib.Integers Make signed_positive thm
R74046:74055 compcert.lib.Integers Make max_signed def
R74084:74103 compcert.lib.Integers Make sign_bit_of_unsigned thm
R74084:74103 compcert.lib.Integers Make sign_bit_of_unsigned thm
R74117:74124 compcert.lib.Coqlib <> zlt_true thm
R74117:74124 compcert.lib.Coqlib <> zlt_true thm
R74117:74124 compcert.lib.Coqlib <> zlt_true thm
R74117:74124 compcert.lib.Coqlib <> zlt_true thm
R74157:74176 compcert.lib.Integers Make sign_bit_of_unsigned thm
R74179:74181 compcert.lib.Integers Make and def
R74157:74176 compcert.lib.Integers Make sign_bit_of_unsigned thm
R74179:74181 compcert.lib.Integers Make and def
R74198:74205 compcert.lib.Integers Make bits_and thm
R74198:74205 compcert.lib.Integers Make bits_and thm
R74198:74205 compcert.lib.Integers Make bits_and thm
R74198:74205 compcert.lib.Integers Make bits_and thm
R74229:74240 Coq.Bool.Bool <> andb_false_r thm
R74229:74240 Coq.Bool.Bool <> andb_false_r thm
R74229:74240 Coq.Bool.Bool <> andb_false_r thm
R74250:74255 compcert.lib.Integers Make signed def
R74270:74272 compcert.lib.Coqlib <> zlt def
R74295:74306 compcert.lib.Integers Make half_modulus def
R74275:74282 compcert.lib.Integers Make unsigned def
R74285:74287 compcert.lib.Integers Make and def
R74270:74272 compcert.lib.Coqlib <> zlt def
R74295:74306 compcert.lib.Integers Make half_modulus def
R74275:74282 compcert.lib.Integers Make unsigned def
R74285:74287 compcert.lib.Integers Make and def
R74332:74345 compcert.lib.Integers Make unsigned_range thm
R74348:74350 compcert.lib.Integers Make and def
R74332:74345 compcert.lib.Integers Make unsigned_range thm
R74348:74350 compcert.lib.Integers Make and def
R74393:74404 compcert.lib.Integers Make wordsize_pos thm
R74393:74404 compcert.lib.Integers Make wordsize_pos thm
prf 74428:74446 Make shr_and_is_shru_and
binder 74458:74458 <> x:593
binder 74460:74460 <> y:594
binder 74462:74462 <> z:595
R74484:74487 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74503:74505 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74488:74490 compcert.lib.Integers Make shr def
R74502:74502 compcert.lib.Integers <> z:595 var
R74493:74495 compcert.lib.Integers Make and def
R74499:74499 compcert.lib.Integers <> y:594 var
R74497:74497 compcert.lib.Integers <> x:593 var
R74506:74509 compcert.lib.Integers Make shru def
R74521:74521 compcert.lib.Integers <> z:595 var
R74512:74514 compcert.lib.Integers Make and def
R74518:74518 compcert.lib.Integers <> y:594 var
R74516:74516 compcert.lib.Integers <> x:593 var
R74476:74478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74467:74468 compcert.lib.Integers Make lt def
R74472:74475 compcert.lib.Integers Make zero def
R74470:74470 compcert.lib.Integers <> y:594 var
R74479:74483 Coq.Init.Datatypes <> false constr
R74547:74563 compcert.lib.Integers Make shr_shru_positive thm
R74547:74563 compcert.lib.Integers Make shr_shru_positive thm
R74572:74583 compcert.lib.Integers Make and_positive thm
R74572:74583 compcert.lib.Integers Make and_positive thm
R74595:74596 compcert.lib.Integers Make lt def
R74612:74622 compcert.lib.Integers Make signed_zero thm
R74612:74622 compcert.lib.Integers Make signed_zero thm
R74612:74622 compcert.lib.Integers Make signed_zero thm
R74640:74642 compcert.lib.Coqlib <> zlt def
R74645:74650 compcert.lib.Integers Make signed def
R74640:74642 compcert.lib.Coqlib <> zlt def
R74645:74650 compcert.lib.Integers Make signed def
prf 74757:74769 Make bits_zero_ext
binder 74781:74781 <> n:596
binder 74783:74783 <> x:597
binder 74785:74785 <> i:598
R74794:74799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74824:74826 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74800:74806 compcert.lib.Integers Make testbit def
R74823:74823 compcert.lib.Integers <> i:598 var
R74809:74816 compcert.lib.Integers Make zero_ext def
R74820:74820 compcert.lib.Integers <> x:597 var
R74818:74818 compcert.lib.Integers <> n:596 var
R74830:74832 compcert.lib.Coqlib <> zlt def
R74836:74836 compcert.lib.Integers <> n:596 var
R74834:74834 compcert.lib.Integers <> i:598 var
R74860:74864 Coq.Init.Datatypes <> false constr
R74843:74849 compcert.lib.Integers Make testbit def
R74853:74853 compcert.lib.Integers <> i:598 var
R74851:74851 compcert.lib.Integers <> x:597 var
R74789:74792 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R74793:74793 compcert.lib.Integers <> i:598 var
R74891:74898 compcert.lib.Integers Make zero_ext def
R74911:74913 compcert.lib.Coqlib <> zlt def
R74917:74925 compcert.lib.Integers Make zwordsize def
R74911:74913 compcert.lib.Coqlib <> zlt def
R74917:74925 compcert.lib.Integers Make zwordsize def
R74939:74950 compcert.lib.Integers Make testbit_repr thm
R74939:74950 compcert.lib.Integers Make testbit_repr thm
R74939:74950 compcert.lib.Integers Make testbit_repr thm
R74939:74950 compcert.lib.Integers Make testbit_repr thm
R74967:74980 compcert.lib.Zbits <> Zzero_ext_spec thm
R74967:74980 compcert.lib.Zbits <> Zzero_ext_spec thm
R74967:74980 compcert.lib.Zbits <> Zzero_ext_spec thm
R74967:74980 compcert.lib.Zbits <> Zzero_ext_spec thm
R75006:75015 compcert.lib.Integers Make bits_above thm
R75006:75015 compcert.lib.Integers Make bits_above thm
R75006:75015 compcert.lib.Integers Make bits_above thm
R75006:75015 compcert.lib.Integers Make bits_above thm
R75006:75015 compcert.lib.Integers Make bits_above thm
R75006:75015 compcert.lib.Integers Make bits_above thm
R75006:75015 compcert.lib.Integers Make bits_above thm
R75034:75036 compcert.lib.Coqlib <> zlt def
R75034:75036 compcert.lib.Coqlib <> zlt def
prf 75062:75074 Make bits_sign_ext
binder 75086:75086 <> n:599
binder 75088:75088 <> x:600
binder 75090:75090 <> i:601
R75111:75116 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75141:75143 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75117:75123 compcert.lib.Integers Make testbit def
R75140:75140 compcert.lib.Integers <> i:601 var
R75126:75133 compcert.lib.Integers Make sign_ext def
R75137:75137 compcert.lib.Integers <> x:600 var
R75135:75135 compcert.lib.Integers <> n:599 var
R75144:75150 compcert.lib.Integers Make testbit def
R75158:75160 compcert.lib.Coqlib <> zlt def
R75164:75164 compcert.lib.Integers <> n:599 var
R75162:75162 compcert.lib.Integers <> i:601 var
R75179:75181 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R75178:75178 compcert.lib.Integers <> n:599 var
R75171:75171 compcert.lib.Integers <> i:601 var
R75152:75152 compcert.lib.Integers <> x:600 var
R75094:75097 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R75099:75101 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R75098:75098 compcert.lib.Integers <> i:601 var
R75098:75098 compcert.lib.Integers <> i:601 var
R75102:75110 compcert.lib.Integers Make zwordsize def
R75210:75217 compcert.lib.Integers Make sign_ext def
R75230:75241 compcert.lib.Integers Make testbit_repr thm
R75230:75241 compcert.lib.Integers Make testbit_repr thm
R75230:75241 compcert.lib.Integers Make testbit_repr thm
R75230:75241 compcert.lib.Integers Make testbit_repr thm
R75256:75269 compcert.lib.Zbits <> Zsign_ext_spec thm
R75256:75269 compcert.lib.Zbits <> Zsign_ext_spec thm
R75299:75311 compcert.lib.Integers Make bits_zero_ext thm
R75313:75325 compcert.lib.Integers Make bits_sign_ext thm
prf 75343:75356 Make zero_ext_above
binder 75368:75368 <> n:602
binder 75370:75370 <> x:603
R75387:75390 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75403:75405 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75391:75398 compcert.lib.Integers Make zero_ext def
R75402:75402 compcert.lib.Integers <> x:603 var
R75400:75400 compcert.lib.Integers <> n:602 var
R75406:75406 compcert.lib.Integers <> x:603 var
R75374:75377 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R75373:75373 compcert.lib.Integers <> n:602 var
R75378:75386 compcert.lib.Integers Make zwordsize def
R75432:75443 compcert.lib.Integers Make same_bits_eq thm
R75432:75443 compcert.lib.Integers Make same_bits_eq thm
R75464:75476 compcert.lib.Integers Make bits_zero_ext thm
R75464:75476 compcert.lib.Integers Make bits_zero_ext thm
R75464:75476 compcert.lib.Integers Make bits_zero_ext thm
R75464:75476 compcert.lib.Integers Make bits_zero_ext thm
R75485:75492 compcert.lib.Coqlib <> zlt_true thm
R75485:75492 compcert.lib.Coqlib <> zlt_true thm
prf 75523:75536 Make zero_ext_below
binder 75548:75548 <> n:604
binder 75550:75550 <> x:605
R75559:75562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75575:75577 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75563:75570 compcert.lib.Integers Make zero_ext def
R75574:75574 compcert.lib.Integers <> x:605 var
R75572:75572 compcert.lib.Integers <> n:604 var
R75578:75581 compcert.lib.Integers Make zero def
R75554:75557 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R75553:75553 compcert.lib.Integers <> n:604 var
R75622:75624 compcert.lib.Coqlib <> zlt def
R75622:75624 compcert.lib.Coqlib <> zlt def
R75644:75653 compcert.lib.Integers Make bits_below thm
R75644:75653 compcert.lib.Integers Make bits_below thm
prf 75684:75697 Make sign_ext_above
binder 75709:75709 <> n:606
binder 75711:75711 <> x:607
R75728:75731 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75744:75746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75732:75739 compcert.lib.Integers Make sign_ext def
R75743:75743 compcert.lib.Integers <> x:607 var
R75741:75741 compcert.lib.Integers <> n:606 var
R75747:75747 compcert.lib.Integers <> x:607 var
R75715:75718 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R75714:75714 compcert.lib.Integers <> n:606 var
R75719:75727 compcert.lib.Integers Make zwordsize def
R75773:75784 compcert.lib.Integers Make same_bits_eq thm
R75773:75784 compcert.lib.Integers Make same_bits_eq thm
R75804:75811 compcert.lib.Integers Make sign_ext def
R75822:75833 compcert.lib.Integers Make testbit_repr thm
R75822:75833 compcert.lib.Integers Make testbit_repr thm
R75822:75833 compcert.lib.Integers Make testbit_repr thm
R75822:75833 compcert.lib.Integers Make testbit_repr thm
R75852:75865 compcert.lib.Zbits <> Zsign_ext_spec thm
R75852:75865 compcert.lib.Zbits <> Zsign_ext_spec thm
R75852:75865 compcert.lib.Zbits <> Zsign_ext_spec thm
R75852:75865 compcert.lib.Zbits <> Zsign_ext_spec thm
R75876:75883 compcert.lib.Coqlib <> zlt_true thm
R75876:75883 compcert.lib.Coqlib <> zlt_true thm
R75876:75883 compcert.lib.Coqlib <> zlt_true thm
R75876:75883 compcert.lib.Coqlib <> zlt_true thm
prf 75920:75933 Make sign_ext_below
binder 75945:75945 <> n:608
binder 75947:75947 <> x:609
R75956:75959 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75972:75974 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75960:75967 compcert.lib.Integers Make sign_ext def
R75971:75971 compcert.lib.Integers <> x:609 var
R75969:75969 compcert.lib.Integers <> n:608 var
R75975:75978 compcert.lib.Integers Make zero def
R75951:75954 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R75950:75950 compcert.lib.Integers <> n:608 var
R76015:76024 compcert.lib.Integers Make bits_below thm
R76015:76024 compcert.lib.Integers Make bits_below thm
R76037:76039 compcert.lib.Coqlib <> zlt def
R76037:76039 compcert.lib.Coqlib <> zlt def
prf 76068:76079 Make zero_ext_and
binder 76091:76091 <> n:610
binder 76093:76093 <> x:611
R76102:76105 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R76118:76120 Coq.Init.Logic <> ::type_scope:x_'='_x not
R76106:76113 compcert.lib.Integers Make zero_ext def
R76117:76117 compcert.lib.Integers <> x:611 var
R76115:76115 compcert.lib.Integers <> n:610 var
R76121:76123 compcert.lib.Integers Make and def
R76128:76131 compcert.lib.Integers Make repr def
R76141:76143 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R76134:76138 Coq.ZArith.Zpower <> two_p def
R76140:76140 compcert.lib.Integers <> n:610 var
R76125:76125 compcert.lib.Integers <> x:611 var
R76097:76100 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R76101:76101 compcert.lib.Integers <> n:610 var
R76177:76188 compcert.lib.Integers Make testbit_repr thm
R76177:76188 compcert.lib.Integers Make testbit_repr thm
R76177:76188 compcert.lib.Integers Make testbit_repr thm
R76177:76188 compcert.lib.Integers Make testbit_repr thm
R76205:76221 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R76205:76221 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R76205:76221 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R76205:76221 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R76205:76221 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R76247:76249 compcert.lib.Coqlib <> zlt def
R76247:76249 compcert.lib.Coqlib <> zlt def
R76267:76277 Coq.Bool.Bool <> andb_true_r thm
R76267:76277 Coq.Bool.Bool <> andb_true_r thm
R76267:76277 Coq.Bool.Bool <> andb_true_r thm
R76296:76307 Coq.Bool.Bool <> andb_false_r thm
R76296:76307 Coq.Bool.Bool <> andb_false_r thm
R76296:76307 Coq.Bool.Bool <> andb_false_r thm
prf 76339:76350 Make zero_ext_mod
binder 76362:76362 <> n:612
binder 76364:76364 <> x:613
R76385:76390 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R76414:76416 Coq.Init.Logic <> ::type_scope:x_'='_x not
R76391:76398 compcert.lib.Integers Make unsigned def
R76401:76408 compcert.lib.Integers Make zero_ext def
R76412:76412 compcert.lib.Integers <> x:613 var
R76410:76410 compcert.lib.Integers <> n:612 var
R76417:76424 Coq.ZArith.BinInt Z modulo def
R76440:76444 Coq.ZArith.Zpower <> two_p def
R76446:76446 compcert.lib.Integers <> n:612 var
R76427:76434 compcert.lib.Integers Make unsigned def
R76436:76436 compcert.lib.Integers <> x:613 var
R76368:76371 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R76373:76375 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R76372:76372 compcert.lib.Integers <> n:612 var
R76372:76372 compcert.lib.Integers <> n:612 var
R76376:76384 compcert.lib.Integers Make zwordsize def
R76473:76487 compcert.lib.Zbits <> equal_same_bits thm
R76473:76487 compcert.lib.Zbits <> equal_same_bits thm
R76508:76525 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R76508:76525 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R76508:76525 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R76508:76525 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R76508:76525 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R76542:76548 compcert.lib.Integers Make testbit def
R76551:76558 compcert.lib.Integers Make zero_ext def
R76542:76548 compcert.lib.Integers Make testbit def
R76551:76558 compcert.lib.Integers Make zero_ext def
R76581:76583 compcert.lib.Coqlib <> zlt def
R76587:76595 compcert.lib.Integers Make zwordsize def
R76581:76583 compcert.lib.Coqlib <> zlt def
R76587:76595 compcert.lib.Integers Make zwordsize def
R76609:76621 compcert.lib.Integers Make bits_zero_ext thm
R76609:76621 compcert.lib.Integers Make bits_zero_ext thm
R76609:76621 compcert.lib.Integers Make bits_zero_ext thm
R76609:76621 compcert.lib.Integers Make bits_zero_ext thm
R76640:76649 compcert.lib.Integers Make bits_above thm
R76640:76649 compcert.lib.Integers Make bits_above thm
R76640:76649 compcert.lib.Integers Make bits_above thm
R76640:76649 compcert.lib.Integers Make bits_above thm
R76660:76668 compcert.lib.Coqlib <> zlt_false thm
R76660:76668 compcert.lib.Coqlib <> zlt_false thm
R76660:76668 compcert.lib.Coqlib <> zlt_false thm
R76660:76668 compcert.lib.Coqlib <> zlt_false thm
prf 76714:76727 Make zero_ext_widen
binder 76739:76739 <> x:614
binder 76741:76741 <> n:615
binder 76743:76744 <> n':616
R76759:76764 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R76791:76793 Coq.Init.Logic <> ::type_scope:x_'='_x not
R76765:76772 compcert.lib.Integers Make zero_ext def
R76778:76785 compcert.lib.Integers Make zero_ext def
R76789:76789 compcert.lib.Integers <> x:614 var
R76787:76787 compcert.lib.Integers <> n:615 var
R76774:76775 compcert.lib.Integers <> n':616 var
R76794:76801 compcert.lib.Integers Make zero_ext def
R76805:76805 compcert.lib.Integers <> x:614 var
R76803:76803 compcert.lib.Integers <> n:615 var
R76748:76751 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R76753:76756 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R76752:76752 compcert.lib.Integers <> n:615 var
R76752:76752 compcert.lib.Integers <> n:615 var
R76757:76758 compcert.lib.Integers <> n':616 var
R76838:76840 compcert.lib.Coqlib <> zlt def
R76838:76840 compcert.lib.Coqlib <> zlt def
R76856:76863 compcert.lib.Coqlib <> zlt_true thm
R76856:76863 compcert.lib.Coqlib <> zlt_true thm
R76885:76887 compcert.lib.Coqlib <> zlt def
R76885:76887 compcert.lib.Coqlib <> zlt def
prf 76932:76945 Make sign_ext_widen
binder 76957:76957 <> x:617
binder 76959:76959 <> n:618
binder 76961:76962 <> n':619
R76976:76981 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77008:77010 Coq.Init.Logic <> ::type_scope:x_'='_x not
R76982:76989 compcert.lib.Integers Make sign_ext def
R76995:77002 compcert.lib.Integers Make sign_ext def
R77006:77006 compcert.lib.Integers <> x:617 var
R77004:77004 compcert.lib.Integers <> n:618 var
R76991:76992 compcert.lib.Integers <> n':619 var
R77011:77018 compcert.lib.Integers Make sign_ext def
R77022:77022 compcert.lib.Integers <> x:617 var
R77020:77020 compcert.lib.Integers <> n:618 var
R76966:76968 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R76970:76973 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R76969:76969 compcert.lib.Integers <> n:618 var
R76969:76969 compcert.lib.Integers <> n:618 var
R76974:76975 compcert.lib.Integers <> n':619 var
R77052:77054 compcert.lib.Coqlib <> zlt def
R77059:77067 compcert.lib.Integers Make zwordsize def
R77052:77054 compcert.lib.Coqlib <> zlt def
R77059:77067 compcert.lib.Integers Make zwordsize def
R77094:77096 compcert.lib.Coqlib <> zlt def
R77094:77096 compcert.lib.Coqlib <> zlt def
R77124:77132 compcert.lib.Coqlib <> zlt_false thm
R77124:77132 compcert.lib.Coqlib <> zlt_false thm
R77124:77132 compcert.lib.Coqlib <> zlt_false thm
R77124:77132 compcert.lib.Coqlib <> zlt_false thm
R77154:77156 compcert.lib.Coqlib <> zlt def
R77161:77163 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R77154:77156 compcert.lib.Coqlib <> zlt def
R77161:77163 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R77208:77210 compcert.lib.Coqlib <> zlt def
R77208:77210 compcert.lib.Coqlib <> zlt def
R77234:77247 compcert.lib.Integers Make sign_ext_above thm
R77234:77247 compcert.lib.Integers Make sign_ext_above thm
prf 77270:77288 Make sign_zero_ext_widen
binder 77300:77300 <> x:620
binder 77302:77302 <> n:621
binder 77304:77305 <> n':622
R77319:77324 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77351:77353 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77325:77332 compcert.lib.Integers Make sign_ext def
R77338:77345 compcert.lib.Integers Make zero_ext def
R77349:77349 compcert.lib.Integers <> x:620 var
R77347:77347 compcert.lib.Integers <> n:621 var
R77334:77335 compcert.lib.Integers <> n':622 var
R77354:77361 compcert.lib.Integers Make zero_ext def
R77365:77365 compcert.lib.Integers <> x:620 var
R77363:77363 compcert.lib.Integers <> n:621 var
R77309:77312 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R77314:77316 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R77313:77313 compcert.lib.Integers <> n:621 var
R77313:77313 compcert.lib.Integers <> n:621 var
R77317:77318 compcert.lib.Integers <> n':622 var
R77395:77397 compcert.lib.Coqlib <> zlt def
R77402:77410 compcert.lib.Integers Make zwordsize def
R77395:77397 compcert.lib.Coqlib <> zlt def
R77402:77410 compcert.lib.Integers Make zwordsize def
R77439:77441 compcert.lib.Coqlib <> zlt def
R77439:77441 compcert.lib.Coqlib <> zlt def
R77469:77477 compcert.lib.Coqlib <> zlt_false thm
R77469:77477 compcert.lib.Coqlib <> zlt_false thm
R77469:77477 compcert.lib.Coqlib <> zlt_false thm
R77469:77477 compcert.lib.Coqlib <> zlt_false thm
R77469:77477 compcert.lib.Coqlib <> zlt_false thm
R77469:77477 compcert.lib.Coqlib <> zlt_false thm
R77469:77477 compcert.lib.Coqlib <> zlt_false thm
R77519:77521 compcert.lib.Coqlib <> zlt def
R77519:77521 compcert.lib.Coqlib <> zlt def
R77545:77558 compcert.lib.Integers Make sign_ext_above thm
R77545:77558 compcert.lib.Integers Make sign_ext_above thm
prf 77581:77595 Make zero_ext_narrow
binder 77607:77607 <> x:623
binder 77609:77609 <> n:624
binder 77611:77612 <> n':625
R77627:77632 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77659:77661 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77633:77640 compcert.lib.Integers Make zero_ext def
R77645:77652 compcert.lib.Integers Make zero_ext def
R77657:77657 compcert.lib.Integers <> x:623 var
R77654:77655 compcert.lib.Integers <> n':625 var
R77642:77642 compcert.lib.Integers <> n:624 var
R77662:77669 compcert.lib.Integers Make zero_ext def
R77673:77673 compcert.lib.Integers <> x:623 var
R77671:77671 compcert.lib.Integers <> n:624 var
R77616:77619 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R77621:77624 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R77620:77620 compcert.lib.Integers <> n:624 var
R77620:77620 compcert.lib.Integers <> n:624 var
R77625:77626 compcert.lib.Integers <> n':625 var
R77706:77708 compcert.lib.Coqlib <> zlt def
R77706:77708 compcert.lib.Coqlib <> zlt def
R77724:77731 compcert.lib.Coqlib <> zlt_true thm
R77724:77731 compcert.lib.Coqlib <> zlt_true thm
prf 77786:77800 Make sign_ext_narrow
binder 77812:77812 <> x:626
binder 77814:77814 <> n:627
binder 77816:77817 <> n':628
R77831:77836 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77863:77865 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77837:77844 compcert.lib.Integers Make sign_ext def
R77849:77856 compcert.lib.Integers Make sign_ext def
R77861:77861 compcert.lib.Integers <> x:626 var
R77858:77859 compcert.lib.Integers <> n':628 var
R77846:77846 compcert.lib.Integers <> n:627 var
R77866:77873 compcert.lib.Integers Make sign_ext def
R77877:77877 compcert.lib.Integers <> x:626 var
R77875:77875 compcert.lib.Integers <> n:627 var
R77821:77823 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R77825:77828 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R77824:77824 compcert.lib.Integers <> n:627 var
R77824:77824 compcert.lib.Integers <> n:627 var
R77829:77830 compcert.lib.Integers <> n':628 var
R77907:77909 compcert.lib.Coqlib <> zlt def
R77913:77921 compcert.lib.Integers Make zwordsize def
R77907:77909 compcert.lib.Coqlib <> zlt def
R77913:77921 compcert.lib.Integers Make zwordsize def
R77948:77950 compcert.lib.Coqlib <> zlt def
R77973:77980 compcert.lib.Coqlib <> zlt_true thm
R77948:77950 compcert.lib.Coqlib <> zlt def
R77973:77980 compcert.lib.Coqlib <> zlt_true thm
R77973:77980 compcert.lib.Coqlib <> zlt_true thm
R78002:78004 compcert.lib.Coqlib <> zlt def
R78002:78004 compcert.lib.Coqlib <> zlt def
R78030:78043 compcert.lib.Integers Make sign_ext_above thm
R78030:78043 compcert.lib.Integers Make sign_ext_above thm
R78030:78043 compcert.lib.Integers Make sign_ext_above thm
R78030:78043 compcert.lib.Integers Make sign_ext_above thm
prf 78077:78096 Make zero_sign_ext_narrow
binder 78108:78108 <> x:629
binder 78110:78110 <> n:630
binder 78112:78113 <> n':631
R78127:78132 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78159:78161 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78133:78140 compcert.lib.Integers Make zero_ext def
R78145:78152 compcert.lib.Integers Make sign_ext def
R78157:78157 compcert.lib.Integers <> x:629 var
R78154:78155 compcert.lib.Integers <> n':631 var
R78142:78142 compcert.lib.Integers <> n:630 var
R78162:78169 compcert.lib.Integers Make zero_ext def
R78173:78173 compcert.lib.Integers <> x:629 var
R78171:78171 compcert.lib.Integers <> n:630 var
R78117:78119 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R78121:78124 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R78120:78120 compcert.lib.Integers <> n:630 var
R78120:78120 compcert.lib.Integers <> n:630 var
R78125:78126 compcert.lib.Integers <> n':631 var
R78203:78205 compcert.lib.Coqlib <> zlt def
R78210:78218 compcert.lib.Integers Make zwordsize def
R78203:78205 compcert.lib.Coqlib <> zlt def
R78210:78218 compcert.lib.Integers Make zwordsize def
R78247:78249 compcert.lib.Coqlib <> zlt def
R78247:78249 compcert.lib.Coqlib <> zlt def
R78273:78280 compcert.lib.Coqlib <> zlt_true thm
R78273:78280 compcert.lib.Coqlib <> zlt_true thm
R78273:78280 compcert.lib.Coqlib <> zlt_true thm
R78273:78280 compcert.lib.Coqlib <> zlt_true thm
R78322:78335 compcert.lib.Integers Make sign_ext_above thm
R78322:78335 compcert.lib.Integers Make sign_ext_above thm
R78322:78335 compcert.lib.Integers Make sign_ext_above thm
R78322:78335 compcert.lib.Integers Make sign_ext_above thm
prf 78358:78370 Make zero_ext_idem
binder 78382:78382 <> n:632
binder 78384:78384 <> x:633
R78393:78396 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78422:78424 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78397:78404 compcert.lib.Integers Make zero_ext def
R78409:78416 compcert.lib.Integers Make zero_ext def
R78420:78420 compcert.lib.Integers <> x:633 var
R78418:78418 compcert.lib.Integers <> n:632 var
R78406:78406 compcert.lib.Integers <> n:632 var
R78425:78432 compcert.lib.Integers Make zero_ext def
R78436:78436 compcert.lib.Integers <> x:633 var
R78434:78434 compcert.lib.Integers <> n:632 var
R78388:78391 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R78392:78392 compcert.lib.Integers <> n:632 var
R78462:78475 compcert.lib.Integers Make zero_ext_widen thm
R78462:78475 compcert.lib.Integers Make zero_ext_widen thm
prf 78499:78511 Make sign_ext_idem
binder 78523:78523 <> n:634
binder 78525:78525 <> x:635
R78533:78536 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78562:78564 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78537:78544 compcert.lib.Integers Make sign_ext def
R78549:78556 compcert.lib.Integers Make sign_ext def
R78560:78560 compcert.lib.Integers <> x:635 var
R78558:78558 compcert.lib.Integers <> n:634 var
R78546:78546 compcert.lib.Integers <> n:634 var
R78565:78572 compcert.lib.Integers Make sign_ext def
R78576:78576 compcert.lib.Integers <> x:635 var
R78574:78574 compcert.lib.Integers <> n:634 var
R78529:78531 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R78532:78532 compcert.lib.Integers <> n:634 var
R78602:78615 compcert.lib.Integers Make sign_ext_widen thm
R78602:78615 compcert.lib.Integers Make sign_ext_widen thm
prf 78640:78656 Make sign_ext_zero_ext
binder 78668:78668 <> n:636
binder 78670:78670 <> x:637
R78678:78681 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78707:78709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78682:78689 compcert.lib.Integers Make sign_ext def
R78694:78701 compcert.lib.Integers Make zero_ext def
R78705:78705 compcert.lib.Integers <> x:637 var
R78703:78703 compcert.lib.Integers <> n:636 var
R78691:78691 compcert.lib.Integers <> n:636 var
R78710:78717 compcert.lib.Integers Make sign_ext def
R78721:78721 compcert.lib.Integers <> x:637 var
R78719:78719 compcert.lib.Integers <> n:636 var
R78674:78676 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R78677:78677 compcert.lib.Integers <> n:636 var
R78751:78753 compcert.lib.Coqlib <> zlt def
R78757:78765 compcert.lib.Integers Make zwordsize def
R78751:78753 compcert.lib.Coqlib <> zlt def
R78757:78765 compcert.lib.Integers Make zwordsize def
R78794:78796 compcert.lib.Coqlib <> zlt def
R78794:78796 compcert.lib.Coqlib <> zlt def
R78814:78821 compcert.lib.Coqlib <> zlt_true thm
R78814:78821 compcert.lib.Coqlib <> zlt_true thm
R78814:78821 compcert.lib.Coqlib <> zlt_true thm
R78814:78821 compcert.lib.Coqlib <> zlt_true thm
R78840:78847 compcert.lib.Coqlib <> zlt_true thm
R78840:78847 compcert.lib.Coqlib <> zlt_true thm
R78840:78847 compcert.lib.Coqlib <> zlt_true thm
R78840:78847 compcert.lib.Coqlib <> zlt_true thm
R78875:78877 compcert.lib.Coqlib <> zlt def
R78875:78877 compcert.lib.Coqlib <> zlt def
R78902:78915 compcert.lib.Integers Make zero_ext_above thm
R78902:78915 compcert.lib.Integers Make zero_ext_above thm
R78902:78915 compcert.lib.Integers Make zero_ext_above thm
R78902:78915 compcert.lib.Integers Make zero_ext_above thm
prf 78938:78954 Make zero_ext_sign_ext
binder 78966:78966 <> n:638
binder 78968:78968 <> x:639
R78976:78979 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79005:79007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78980:78987 compcert.lib.Integers Make zero_ext def
R78992:78999 compcert.lib.Integers Make sign_ext def
R79003:79003 compcert.lib.Integers <> x:639 var
R79001:79001 compcert.lib.Integers <> n:638 var
R78989:78989 compcert.lib.Integers <> n:638 var
R79008:79015 compcert.lib.Integers Make zero_ext def
R79019:79019 compcert.lib.Integers <> x:639 var
R79017:79017 compcert.lib.Integers <> n:638 var
R78972:78974 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R78975:78975 compcert.lib.Integers <> n:638 var
R79045:79064 compcert.lib.Integers Make zero_sign_ext_narrow thm
R79045:79064 compcert.lib.Integers Make zero_sign_ext_narrow thm
prf 79088:79115 Make sign_ext_equal_if_zero_equal
binder 79127:79127 <> n:640
binder 79129:79129 <> x:641
binder 79131:79131 <> y:642
R79139:79144 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79172:79177 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79190:79192 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79178:79185 compcert.lib.Integers Make sign_ext def
R79189:79189 compcert.lib.Integers <> x:641 var
R79187:79187 compcert.lib.Integers <> n:640 var
R79193:79200 compcert.lib.Integers Make sign_ext def
R79204:79204 compcert.lib.Integers <> y:642 var
R79202:79202 compcert.lib.Integers <> n:640 var
R79157:79159 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79145:79152 compcert.lib.Integers Make zero_ext def
R79156:79156 compcert.lib.Integers <> x:641 var
R79154:79154 compcert.lib.Integers <> n:640 var
R79160:79167 compcert.lib.Integers Make zero_ext def
R79171:79171 compcert.lib.Integers <> y:642 var
R79169:79169 compcert.lib.Integers <> n:640 var
R79135:79137 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R79138:79138 compcert.lib.Integers <> n:640 var
R79236:79252 compcert.lib.Integers Make sign_ext_zero_ext thm
R79236:79252 compcert.lib.Integers Make sign_ext_zero_ext thm
R79236:79252 compcert.lib.Integers Make sign_ext_zero_ext thm
R79276:79292 compcert.lib.Integers Make sign_ext_zero_ext thm
R79276:79292 compcert.lib.Integers Make sign_ext_zero_ext thm
R79276:79292 compcert.lib.Integers Make sign_ext_zero_ext thm
prf 79328:79335 Make shru_shl
binder 79347:79347 <> x:643
binder 79349:79349 <> y:644
binder 79351:79351 <> z:645
R79376:79379 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79402:79407 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79424:79428 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79408:79411 compcert.lib.Integers Make shru def
R79423:79423 compcert.lib.Integers <> z:645 var
R79414:79416 compcert.lib.Integers Make shl def
R79420:79420 compcert.lib.Integers <> y:644 var
R79418:79418 compcert.lib.Integers <> x:643 var
R79432:79434 compcert.lib.Integers Make ltu def
R79438:79438 compcert.lib.Integers <> y:644 var
R79436:79436 compcert.lib.Integers <> z:645 var
R79515:79522 compcert.lib.Integers Make zero_ext def
R79550:79553 compcert.lib.Integers Make shru def
R79558:79560 compcert.lib.Integers Make sub def
R79564:79564 compcert.lib.Integers <> y:644 var
R79562:79562 compcert.lib.Integers <> z:645 var
R79555:79555 compcert.lib.Integers <> x:643 var
R79534:79536 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79525:79533 compcert.lib.Integers Make zwordsize def
R79537:79544 compcert.lib.Integers Make unsigned def
R79546:79546 compcert.lib.Integers <> z:645 var
R79445:79447 compcert.lib.Integers Make shl def
R79488:79490 compcert.lib.Integers Make sub def
R79494:79494 compcert.lib.Integers <> z:645 var
R79492:79492 compcert.lib.Integers <> y:644 var
R79450:79457 compcert.lib.Integers Make zero_ext def
R79484:79484 compcert.lib.Integers <> x:643 var
R79469:79471 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79460:79468 compcert.lib.Integers Make zwordsize def
R79472:79479 compcert.lib.Integers Make unsigned def
R79481:79481 compcert.lib.Integers <> y:644 var
R79395:79397 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79380:79382 compcert.lib.Integers Make ltu def
R79386:79394 compcert.lib.Integers Make iwordsize def
R79384:79384 compcert.lib.Integers <> z:645 var
R79398:79401 Coq.Init.Datatypes <> true constr
R79369:79371 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79354:79356 compcert.lib.Integers Make ltu def
R79360:79368 compcert.lib.Integers Make iwordsize def
R79358:79358 compcert.lib.Integers <> y:644 var
R79372:79375 Coq.Init.Datatypes <> true constr
R79592:79608 compcert.lib.Integers Make ltu_iwordsize_inv thm
R79622:79638 compcert.lib.Integers Make ltu_iwordsize_inv thm
R79592:79608 compcert.lib.Integers Make ltu_iwordsize_inv thm
R79622:79638 compcert.lib.Integers Make ltu_iwordsize_inv thm
R79656:79658 compcert.lib.Integers Make ltu def
R79671:79678 compcert.lib.Integers Make unsigned def
R79699:79706 compcert.lib.Integers Make unsigned def
R79671:79678 compcert.lib.Integers Make unsigned def
R79699:79706 compcert.lib.Integers Make unsigned def
R79725:79736 compcert.lib.Integers Make same_bits_eq thm
R79725:79736 compcert.lib.Integers Make same_bits_eq thm
R79755:79763 compcert.lib.Integers Make bits_shru thm
R79755:79763 compcert.lib.Integers Make bits_shru thm
R79755:79763 compcert.lib.Integers Make bits_shru thm
R79794:79796 compcert.lib.Coqlib <> zlt def
R79794:79796 compcert.lib.Coqlib <> zlt def
R79835:79837 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79817:79824 compcert.lib.Integers Make unsigned def
R79827:79829 compcert.lib.Integers Make sub def
R79839:79841 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79835:79837 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79817:79824 compcert.lib.Integers Make unsigned def
R79827:79829 compcert.lib.Integers Make sub def
R79839:79841 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79856:79868 compcert.lib.Integers Make unsigned_repr thm
R79856:79868 compcert.lib.Integers Make unsigned_repr thm
R79882:79902 compcert.lib.Integers Make wordsize_max_unsigned thm
R79882:79902 compcert.lib.Integers Make wordsize_max_unsigned thm
R79934:79941 compcert.lib.Integers Make bits_shl thm
R79934:79941 compcert.lib.Integers Make bits_shl thm
R79934:79941 compcert.lib.Integers Make bits_shl thm
R79968:79970 compcert.lib.Coqlib <> zlt def
R79980:79988 compcert.lib.Integers Make zwordsize def
R79974:79976 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R79968:79970 compcert.lib.Coqlib <> zlt def
R79980:79988 compcert.lib.Integers Make zwordsize def
R79974:79976 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R80002:80009 compcert.lib.Integers Make bits_shl thm
R80002:80009 compcert.lib.Integers Make bits_shl thm
R80002:80009 compcert.lib.Integers Make bits_shl thm
R80041:80043 compcert.lib.Coqlib <> zlt def
R80049:80051 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R80066:80073 compcert.lib.Coqlib <> zlt_true thm
R80092:80100 compcert.lib.Coqlib <> zlt_false thm
R80041:80043 compcert.lib.Coqlib <> zlt def
R80049:80051 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R80066:80073 compcert.lib.Coqlib <> zlt_true thm
R80066:80073 compcert.lib.Coqlib <> zlt_true thm
R80092:80100 compcert.lib.Coqlib <> zlt_false thm
R80092:80100 compcert.lib.Coqlib <> zlt_false thm
R80129:80141 compcert.lib.Integers Make bits_zero_ext thm
R80129:80141 compcert.lib.Integers Make bits_zero_ext thm
R80129:80141 compcert.lib.Integers Make bits_zero_ext thm
R80161:80168 compcert.lib.Coqlib <> zlt_true thm
R80161:80168 compcert.lib.Coqlib <> zlt_true thm
R80161:80168 compcert.lib.Coqlib <> zlt_true thm
R80206:80218 compcert.lib.Integers Make bits_zero_ext thm
R80206:80218 compcert.lib.Integers Make bits_zero_ext thm
R80206:80218 compcert.lib.Integers Make bits_zero_ext thm
R80240:80248 compcert.lib.Coqlib <> zlt_false thm
R80240:80248 compcert.lib.Coqlib <> zlt_false thm
R80240:80248 compcert.lib.Coqlib <> zlt_false thm
R80240:80248 compcert.lib.Coqlib <> zlt_false thm
R80240:80248 compcert.lib.Coqlib <> zlt_false thm
R80297:80299 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80279:80286 compcert.lib.Integers Make unsigned def
R80289:80291 compcert.lib.Integers Make sub def
R80301:80303 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R80297:80299 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80279:80286 compcert.lib.Integers Make unsigned def
R80289:80291 compcert.lib.Integers Make sub def
R80301:80303 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R80318:80330 compcert.lib.Integers Make unsigned_repr thm
R80318:80330 compcert.lib.Integers Make unsigned_repr thm
R80344:80364 compcert.lib.Integers Make wordsize_max_unsigned thm
R80344:80364 compcert.lib.Integers Make wordsize_max_unsigned thm
R80386:80398 compcert.lib.Integers Make bits_zero_ext thm
R80401:80409 compcert.lib.Integers Make bits_shru thm
R80386:80398 compcert.lib.Integers Make bits_zero_ext thm
R80386:80398 compcert.lib.Integers Make bits_zero_ext thm
R80401:80409 compcert.lib.Integers Make bits_shru thm
R80401:80409 compcert.lib.Integers Make bits_shru thm
R80436:80438 compcert.lib.Coqlib <> zlt def
R80448:80456 compcert.lib.Integers Make zwordsize def
R80442:80444 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R80469:80476 compcert.lib.Coqlib <> zlt_true thm
R80495:80503 compcert.lib.Coqlib <> zlt_false thm
R80436:80438 compcert.lib.Coqlib <> zlt def
R80448:80456 compcert.lib.Integers Make zwordsize def
R80442:80444 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R80469:80476 compcert.lib.Coqlib <> zlt_true thm
R80469:80476 compcert.lib.Coqlib <> zlt_true thm
R80495:80503 compcert.lib.Coqlib <> zlt_false thm
R80495:80503 compcert.lib.Coqlib <> zlt_false thm
R80532:80539 compcert.lib.Integers Make bits_shl thm
R80532:80539 compcert.lib.Integers Make bits_shl thm
R80532:80539 compcert.lib.Integers Make bits_shl thm
R80571:80573 compcert.lib.Coqlib <> zlt def
R80577:80579 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R80571:80573 compcert.lib.Coqlib <> zlt def
R80577:80579 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R80597:80605 compcert.lib.Coqlib <> zlt_false thm
R80597:80605 compcert.lib.Coqlib <> zlt_false thm
R80597:80605 compcert.lib.Coqlib <> zlt_false thm
R80633:80640 compcert.lib.Coqlib <> zlt_true thm
R80633:80640 compcert.lib.Coqlib <> zlt_true thm
R80633:80640 compcert.lib.Coqlib <> zlt_true thm
prf 80684:80700 Make zero_ext_shru_shl
binder 80712:80712 <> n:646
binder 80714:80714 <> x:647
R80736:80741 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R80751:80754 compcert.lib.Integers Make repr def
R80766:80768 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R80757:80765 compcert.lib.Integers Make zwordsize def
R80769:80769 compcert.lib.Integers <> n:646 var
binder 80746:80746 <> y:648
R80789:80791 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80777:80784 compcert.lib.Integers Make zero_ext def
R80788:80788 compcert.lib.Integers <> x:647 var
R80786:80786 compcert.lib.Integers <> n:646 var
R80792:80795 compcert.lib.Integers Make shru def
R80807:80807 compcert.lib.Integers <> y:648 var
R80798:80800 compcert.lib.Integers Make shl def
R80804:80804 compcert.lib.Integers <> y:648 var
R80802:80802 compcert.lib.Integers <> x:647 var
R80720:80722 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R80724:80726 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R80723:80723 compcert.lib.Integers <> n:646 var
R80723:80723 compcert.lib.Integers <> n:646 var
R80727:80735 compcert.lib.Integers Make zwordsize def
R80850:80852 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80840:80847 compcert.lib.Integers Make unsigned def
R80862:80864 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R80853:80861 compcert.lib.Integers Make zwordsize def
R80850:80852 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80840:80847 compcert.lib.Integers Make unsigned def
R80862:80864 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R80853:80861 compcert.lib.Integers Make zwordsize def
R80889:80901 compcert.lib.Integers Make unsigned_repr thm
R80889:80901 compcert.lib.Integers Make unsigned_repr thm
R80915:80935 compcert.lib.Integers Make wordsize_max_unsigned thm
R80915:80935 compcert.lib.Integers Make wordsize_max_unsigned thm
R80975:80977 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80960:80962 compcert.lib.Integers Make ltu def
R80966:80974 compcert.lib.Integers Make iwordsize def
R80978:80981 Coq.Init.Datatypes <> true constr
R80975:80977 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80960:80962 compcert.lib.Integers Make ltu def
R80966:80974 compcert.lib.Integers Make iwordsize def
R80978:80981 Coq.Init.Datatypes <> true constr
R80996:80998 compcert.lib.Integers Make ltu def
R81012:81033 compcert.lib.Integers Make unsigned_repr_wordsize thm
R81012:81033 compcert.lib.Integers Make unsigned_repr_wordsize thm
R81012:81033 compcert.lib.Integers Make unsigned_repr_wordsize thm
R81042:81049 compcert.lib.Coqlib <> zlt_true thm
R81042:81049 compcert.lib.Coqlib <> zlt_true thm
R81071:81078 compcert.lib.Integers Make shru_shl thm
R81071:81078 compcert.lib.Integers Make shru_shl thm
R81071:81078 compcert.lib.Integers Make shru_shl thm
R81096:81098 compcert.lib.Integers Make ltu def
R81109:81117 compcert.lib.Coqlib <> zlt_false thm
R81109:81117 compcert.lib.Coqlib <> zlt_false thm
R81109:81117 compcert.lib.Coqlib <> zlt_false thm
R81139:81146 compcert.lib.Integers Make sub_idem thm
R81149:81157 compcert.lib.Integers Make shru_zero thm
R81139:81146 compcert.lib.Integers Make sub_idem thm
R81139:81146 compcert.lib.Integers Make sub_idem thm
R81149:81157 compcert.lib.Integers Make shru_zero thm
R81149:81157 compcert.lib.Integers Make shru_zero thm
prf 81201:81207 Make shr_shl
binder 81219:81219 <> x:649
binder 81221:81221 <> y:650
binder 81223:81223 <> z:651
R81248:81251 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R81274:81279 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R81295:81299 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81280:81282 compcert.lib.Integers Make shr def
R81294:81294 compcert.lib.Integers <> z:651 var
R81285:81287 compcert.lib.Integers Make shl def
R81291:81291 compcert.lib.Integers <> y:650 var
R81289:81289 compcert.lib.Integers <> x:649 var
R81303:81305 compcert.lib.Integers Make ltu def
R81309:81309 compcert.lib.Integers <> y:650 var
R81307:81307 compcert.lib.Integers <> z:651 var
R81386:81393 compcert.lib.Integers Make sign_ext def
R81421:81423 compcert.lib.Integers Make shr def
R81428:81430 compcert.lib.Integers Make sub def
R81434:81434 compcert.lib.Integers <> y:650 var
R81432:81432 compcert.lib.Integers <> z:651 var
R81425:81425 compcert.lib.Integers <> x:649 var
R81405:81407 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81396:81404 compcert.lib.Integers Make zwordsize def
R81408:81415 compcert.lib.Integers Make unsigned def
R81417:81417 compcert.lib.Integers <> z:651 var
R81316:81318 compcert.lib.Integers Make shl def
R81359:81361 compcert.lib.Integers Make sub def
R81365:81365 compcert.lib.Integers <> z:651 var
R81363:81363 compcert.lib.Integers <> y:650 var
R81321:81328 compcert.lib.Integers Make sign_ext def
R81355:81355 compcert.lib.Integers <> x:649 var
R81340:81342 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81331:81339 compcert.lib.Integers Make zwordsize def
R81343:81350 compcert.lib.Integers Make unsigned def
R81352:81352 compcert.lib.Integers <> y:650 var
R81267:81269 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81252:81254 compcert.lib.Integers Make ltu def
R81258:81266 compcert.lib.Integers Make iwordsize def
R81256:81256 compcert.lib.Integers <> z:651 var
R81270:81273 Coq.Init.Datatypes <> true constr
R81241:81243 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81226:81228 compcert.lib.Integers Make ltu def
R81232:81240 compcert.lib.Integers Make iwordsize def
R81230:81230 compcert.lib.Integers <> y:650 var
R81244:81247 Coq.Init.Datatypes <> true constr
R81462:81478 compcert.lib.Integers Make ltu_iwordsize_inv thm
R81492:81508 compcert.lib.Integers Make ltu_iwordsize_inv thm
R81462:81478 compcert.lib.Integers Make ltu_iwordsize_inv thm
R81492:81508 compcert.lib.Integers Make ltu_iwordsize_inv thm
R81526:81528 compcert.lib.Integers Make ltu def
R81541:81548 compcert.lib.Integers Make unsigned def
R81569:81576 compcert.lib.Integers Make unsigned def
R81541:81548 compcert.lib.Integers Make unsigned def
R81569:81576 compcert.lib.Integers Make unsigned def
R81595:81606 compcert.lib.Integers Make same_bits_eq thm
R81595:81606 compcert.lib.Integers Make same_bits_eq thm
R81625:81632 compcert.lib.Integers Make bits_shr thm
R81625:81632 compcert.lib.Integers Make bits_shr thm
R81625:81632 compcert.lib.Integers Make bits_shr thm
R81684:81686 compcert.lib.Coqlib <> zlt def
R81696:81704 compcert.lib.Integers Make zwordsize def
R81690:81692 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R81661:81668 compcert.lib.Integers Make bits_shl thm
R81661:81668 compcert.lib.Integers Make bits_shl thm
R81684:81686 compcert.lib.Coqlib <> zlt def
R81696:81704 compcert.lib.Integers Make zwordsize def
R81690:81692 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R81661:81668 compcert.lib.Integers Make bits_shl thm
R81736:81738 compcert.lib.Coqlib <> zlt def
R81736:81738 compcert.lib.Coqlib <> zlt def
R81777:81779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81759:81766 compcert.lib.Integers Make unsigned def
R81769:81771 compcert.lib.Integers Make sub def
R81781:81783 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81777:81779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81759:81766 compcert.lib.Integers Make unsigned def
R81769:81771 compcert.lib.Integers Make sub def
R81781:81783 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81798:81810 compcert.lib.Integers Make unsigned_repr thm
R81798:81810 compcert.lib.Integers Make unsigned_repr thm
R81824:81844 compcert.lib.Integers Make wordsize_max_unsigned thm
R81824:81844 compcert.lib.Integers Make wordsize_max_unsigned thm
R81866:81873 compcert.lib.Integers Make bits_shl thm
R81866:81873 compcert.lib.Integers Make bits_shl thm
R81866:81873 compcert.lib.Integers Make bits_shl thm
R81900:81902 compcert.lib.Coqlib <> zlt def
R81908:81910 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81900:81902 compcert.lib.Coqlib <> zlt def
R81908:81910 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81924:81931 compcert.lib.Coqlib <> zlt_true thm
R81924:81931 compcert.lib.Coqlib <> zlt_true thm
R81944:81946 compcert.lib.Coqlib <> zlt def
R81956:81964 compcert.lib.Integers Make zwordsize def
R81950:81952 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R81944:81946 compcert.lib.Coqlib <> zlt def
R81956:81964 compcert.lib.Integers Make zwordsize def
R81950:81952 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R82009:82011 compcert.lib.Coqlib <> zlt def
R82021:82029 compcert.lib.Integers Make zwordsize def
R82015:82017 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R81985:81993 compcert.lib.Coqlib <> zlt_false thm
R81985:81993 compcert.lib.Coqlib <> zlt_false thm
R82009:82011 compcert.lib.Coqlib <> zlt def
R82021:82029 compcert.lib.Integers Make zwordsize def
R82015:82017 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R81985:81993 compcert.lib.Coqlib <> zlt_false thm
R82051:82063 compcert.lib.Integers Make bits_sign_ext thm
R82051:82063 compcert.lib.Integers Make bits_sign_ext thm
R82051:82063 compcert.lib.Integers Make bits_sign_ext thm
R82097:82099 compcert.lib.Coqlib <> zlt def
R82109:82117 compcert.lib.Integers Make zwordsize def
R82103:82105 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R82097:82099 compcert.lib.Coqlib <> zlt def
R82109:82117 compcert.lib.Integers Make zwordsize def
R82103:82105 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R82131:82138 compcert.lib.Coqlib <> zlt_true thm
R82131:82138 compcert.lib.Coqlib <> zlt_true thm
R82131:82138 compcert.lib.Coqlib <> zlt_true thm
R82167:82175 compcert.lib.Coqlib <> zlt_false thm
R82167:82175 compcert.lib.Coqlib <> zlt_false thm
R82167:82175 compcert.lib.Coqlib <> zlt_false thm
R82225:82227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R82207:82214 compcert.lib.Integers Make unsigned def
R82217:82219 compcert.lib.Integers Make sub def
R82229:82231 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82225:82227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R82207:82214 compcert.lib.Integers Make unsigned def
R82217:82219 compcert.lib.Integers Make sub def
R82229:82231 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82246:82258 compcert.lib.Integers Make unsigned_repr thm
R82246:82258 compcert.lib.Integers Make unsigned_repr thm
R82272:82292 compcert.lib.Integers Make wordsize_max_unsigned thm
R82272:82292 compcert.lib.Integers Make wordsize_max_unsigned thm
R82314:82326 compcert.lib.Integers Make bits_sign_ext thm
R82314:82326 compcert.lib.Integers Make bits_sign_ext thm
R82314:82326 compcert.lib.Integers Make bits_sign_ext thm
R82371:82373 compcert.lib.Coqlib <> zlt def
R82387:82389 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82378:82386 compcert.lib.Integers Make zwordsize def
R82348:82355 compcert.lib.Integers Make bits_shr thm
R82348:82355 compcert.lib.Integers Make bits_shr thm
R82371:82373 compcert.lib.Coqlib <> zlt def
R82387:82389 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82378:82386 compcert.lib.Integers Make zwordsize def
R82348:82355 compcert.lib.Integers Make bits_shr thm
R82448:82450 compcert.lib.Coqlib <> zlt def
R82460:82468 compcert.lib.Integers Make zwordsize def
R82454:82456 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R82424:82432 compcert.lib.Coqlib <> zlt_false thm
R82424:82432 compcert.lib.Coqlib <> zlt_false thm
R82448:82450 compcert.lib.Coqlib <> zlt def
R82460:82468 compcert.lib.Integers Make zwordsize def
R82454:82456 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R82424:82432 compcert.lib.Coqlib <> zlt_false thm
R82501:82503 compcert.lib.Coqlib <> zlt def
R82517:82519 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82508:82516 compcert.lib.Integers Make zwordsize def
R82501:82503 compcert.lib.Coqlib <> zlt def
R82517:82519 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82508:82516 compcert.lib.Integers Make zwordsize def
R82537:82544 compcert.lib.Coqlib <> zlt_true thm
R82537:82544 compcert.lib.Coqlib <> zlt_true thm
R82537:82544 compcert.lib.Coqlib <> zlt_true thm
R82537:82544 compcert.lib.Coqlib <> zlt_true thm
R82537:82544 compcert.lib.Coqlib <> zlt_true thm
R82575:82583 compcert.lib.Coqlib <> zlt_false thm
R82575:82583 compcert.lib.Coqlib <> zlt_false thm
R82575:82583 compcert.lib.Coqlib <> zlt_false thm
R82575:82583 compcert.lib.Coqlib <> zlt_false thm
R82603:82610 compcert.lib.Coqlib <> zlt_true thm
R82603:82610 compcert.lib.Coqlib <> zlt_true thm
R82603:82610 compcert.lib.Coqlib <> zlt_true thm
prf 82645:82660 Make sign_ext_shr_shl
binder 82672:82672 <> n:652
binder 82674:82674 <> x:653
R82696:82701 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R82711:82714 compcert.lib.Integers Make repr def
R82726:82728 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82717:82725 compcert.lib.Integers Make zwordsize def
R82729:82729 compcert.lib.Integers <> n:652 var
binder 82706:82706 <> y:654
R82749:82751 Coq.Init.Logic <> ::type_scope:x_'='_x not
R82737:82744 compcert.lib.Integers Make sign_ext def
R82748:82748 compcert.lib.Integers <> x:653 var
R82746:82746 compcert.lib.Integers <> n:652 var
R82752:82754 compcert.lib.Integers Make shr def
R82766:82766 compcert.lib.Integers <> y:654 var
R82757:82759 compcert.lib.Integers Make shl def
R82763:82763 compcert.lib.Integers <> y:654 var
R82761:82761 compcert.lib.Integers <> x:653 var
R82680:82682 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R82684:82686 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R82683:82683 compcert.lib.Integers <> n:652 var
R82683:82683 compcert.lib.Integers <> n:652 var
R82687:82695 compcert.lib.Integers Make zwordsize def
R82809:82811 Coq.Init.Logic <> ::type_scope:x_'='_x not
R82799:82806 compcert.lib.Integers Make unsigned def
R82821:82823 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82812:82820 compcert.lib.Integers Make zwordsize def
R82809:82811 Coq.Init.Logic <> ::type_scope:x_'='_x not
R82799:82806 compcert.lib.Integers Make unsigned def
R82821:82823 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82812:82820 compcert.lib.Integers Make zwordsize def
R82848:82860 compcert.lib.Integers Make unsigned_repr thm
R82848:82860 compcert.lib.Integers Make unsigned_repr thm
R82874:82894 compcert.lib.Integers Make wordsize_max_unsigned thm
R82874:82894 compcert.lib.Integers Make wordsize_max_unsigned thm
R82934:82936 Coq.Init.Logic <> ::type_scope:x_'='_x not
R82919:82921 compcert.lib.Integers Make ltu def
R82925:82933 compcert.lib.Integers Make iwordsize def
R82937:82940 Coq.Init.Datatypes <> true constr
R82934:82936 Coq.Init.Logic <> ::type_scope:x_'='_x not
R82919:82921 compcert.lib.Integers Make ltu def
R82925:82933 compcert.lib.Integers Make iwordsize def
R82937:82940 Coq.Init.Datatypes <> true constr
R82955:82957 compcert.lib.Integers Make ltu def
R82971:82992 compcert.lib.Integers Make unsigned_repr_wordsize thm
R82971:82992 compcert.lib.Integers Make unsigned_repr_wordsize thm
R82971:82992 compcert.lib.Integers Make unsigned_repr_wordsize thm
R83001:83008 compcert.lib.Coqlib <> zlt_true thm
R83001:83008 compcert.lib.Coqlib <> zlt_true thm
R83030:83036 compcert.lib.Integers Make shr_shl thm
R83030:83036 compcert.lib.Integers Make shr_shl thm
R83030:83036 compcert.lib.Integers Make shr_shl thm
R83054:83056 compcert.lib.Integers Make ltu def
R83067:83075 compcert.lib.Coqlib <> zlt_false thm
R83067:83075 compcert.lib.Coqlib <> zlt_false thm
R83067:83075 compcert.lib.Coqlib <> zlt_false thm
R83097:83104 compcert.lib.Integers Make sub_idem thm
R83107:83114 compcert.lib.Integers Make shr_zero thm
R83097:83104 compcert.lib.Integers Make sub_idem thm
R83097:83104 compcert.lib.Integers Make sub_idem thm
R83107:83114 compcert.lib.Integers Make shr_zero thm
R83107:83114 compcert.lib.Integers Make shr_zero thm
prf 83261:83274 Make zero_ext_range
binder 83286:83286 <> n:655
binder 83288:83288 <> x:656
R83309:83312 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R83314:83317 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R83341:83343 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R83318:83325 compcert.lib.Integers Make unsigned def
R83328:83335 compcert.lib.Integers Make zero_ext def
R83339:83339 compcert.lib.Integers <> x:656 var
R83337:83337 compcert.lib.Integers <> n:655 var
R83318:83325 compcert.lib.Integers Make unsigned def
R83328:83335 compcert.lib.Integers Make zero_ext def
R83339:83339 compcert.lib.Integers <> x:656 var
R83337:83337 compcert.lib.Integers <> n:655 var
R83344:83348 Coq.ZArith.Zpower <> two_p def
R83350:83350 compcert.lib.Integers <> n:655 var
R83292:83295 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R83297:83299 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R83296:83296 compcert.lib.Integers <> n:655 var
R83296:83296 compcert.lib.Integers <> n:655 var
R83300:83308 compcert.lib.Integers Make zwordsize def
R83378:83389 compcert.lib.Integers Make zero_ext_mod thm
R83378:83389 compcert.lib.Integers Make zero_ext_mod thm
R83378:83389 compcert.lib.Integers Make zero_ext_mod thm
R83378:83389 compcert.lib.Integers Make zero_ext_mod thm
R83404:83411 Coq.ZArith.Zdiv <> Z_mod_lt thm
R83404:83411 Coq.ZArith.Zdiv <> Z_mod_lt thm
R83420:83432 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R83420:83432 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 83454:83467 Make eqmod_zero_ext
binder 83479:83479 <> n:657
binder 83481:83481 <> x:658
R83502:83505 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R83506:83510 compcert.lib.Zbits <> eqmod def
R83549:83556 compcert.lib.Integers Make unsigned def
R83558:83558 compcert.lib.Integers <> x:658 var
R83523:83530 compcert.lib.Integers Make unsigned def
R83533:83540 compcert.lib.Integers Make zero_ext def
R83544:83544 compcert.lib.Integers <> x:658 var
R83542:83542 compcert.lib.Integers <> n:657 var
R83513:83517 Coq.ZArith.Zpower <> two_p def
R83519:83519 compcert.lib.Integers <> n:657 var
R83485:83488 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R83490:83492 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R83489:83489 compcert.lib.Integers <> n:657 var
R83489:83489 compcert.lib.Integers <> n:657 var
R83493:83501 compcert.lib.Integers Make zwordsize def
R83587:83598 compcert.lib.Integers Make zero_ext_mod thm
R83587:83598 compcert.lib.Integers Make zero_ext_mod thm
R83587:83598 compcert.lib.Integers Make zero_ext_mod thm
R83587:83598 compcert.lib.Integers Make zero_ext_mod thm
R83613:83621 compcert.lib.Zbits <> eqmod_sym thm
R83613:83621 compcert.lib.Zbits <> eqmod_sym thm
R83630:83638 compcert.lib.Zbits <> eqmod_mod thm
R83630:83638 compcert.lib.Zbits <> eqmod_mod thm
R83649:83661 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R83649:83661 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 83801:83814 Make sign_ext_range
binder 83826:83826 <> n:659
binder 83828:83828 <> x:660
R83848:83851 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R83864:83867 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R83889:83891 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R83852:83852 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R83853:83857 Coq.ZArith.Zpower <> two_p def
R83861:83861 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83860:83860 compcert.lib.Integers <> n:659 var
R83868:83873 compcert.lib.Integers Make signed def
R83876:83883 compcert.lib.Integers Make sign_ext def
R83887:83887 compcert.lib.Integers <> x:660 var
R83885:83885 compcert.lib.Integers <> n:659 var
R83868:83873 compcert.lib.Integers Make signed def
R83876:83883 compcert.lib.Integers Make sign_ext def
R83887:83887 compcert.lib.Integers <> x:660 var
R83885:83885 compcert.lib.Integers <> n:659 var
R83892:83896 Coq.ZArith.Zpower <> two_p def
R83900:83900 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83899:83899 compcert.lib.Integers <> n:659 var
R83832:83834 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R83836:83838 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R83835:83835 compcert.lib.Integers <> n:659 var
R83835:83835 compcert.lib.Integers <> n:659 var
R83839:83847 compcert.lib.Integers Make zwordsize def
R83930:83945 compcert.lib.Integers Make sign_ext_shr_shl thm
R83930:83945 compcert.lib.Integers Make sign_ext_shr_shl thm
R83930:83945 compcert.lib.Integers Make sign_ext_shr_shl thm
R83930:83945 compcert.lib.Integers Make sign_ext_shr_shl thm
R83966:83968 compcert.lib.Integers Make shl def
R83973:83976 compcert.lib.Integers Make repr def
R83988:83990 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83979:83987 compcert.lib.Integers Make zwordsize def
R83966:83968 compcert.lib.Integers Make shl def
R83973:83976 compcert.lib.Integers Make repr def
R83988:83990 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83979:83987 compcert.lib.Integers Make zwordsize def
R84020:84022 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R84007:84011 Coq.ZArith.Zpower <> two_p def
R84015:84017 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84036:84048 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R84020:84022 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R84007:84011 Coq.ZArith.Zpower <> two_p def
R84015:84017 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84036:84048 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R84100:84102 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84069:84076 compcert.lib.Integers Make unsigned def
R84079:84082 compcert.lib.Integers Make repr def
R84094:84096 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84085:84093 compcert.lib.Integers Make zwordsize def
R84112:84114 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84103:84111 compcert.lib.Integers Make zwordsize def
R84100:84102 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84069:84076 compcert.lib.Integers Make unsigned def
R84079:84082 compcert.lib.Integers Make repr def
R84094:84096 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84085:84093 compcert.lib.Integers Make zwordsize def
R84112:84114 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84103:84111 compcert.lib.Integers Make zwordsize def
R84129:84141 compcert.lib.Integers Make unsigned_repr thm
R84129:84141 compcert.lib.Integers Make unsigned_repr thm
R84173:84193 compcert.lib.Integers Make wordsize_max_unsigned thm
R84173:84193 compcert.lib.Integers Make wordsize_max_unsigned thm
R84213:84225 compcert.lib.Integers Make shr_div_two_p thm
R84213:84225 compcert.lib.Integers Make shr_div_two_p thm
R84213:84225 compcert.lib.Integers Make shr_div_two_p thm
R84238:84248 compcert.lib.Integers Make signed_repr thm
R84238:84248 compcert.lib.Integers Make signed_repr thm
R84238:84248 compcert.lib.Integers Make signed_repr thm
R84238:84248 compcert.lib.Integers Make signed_repr thm
R84273:84287 compcert.lib.Coqlib <> Zdiv_interval_1 thm
R84273:84287 compcert.lib.Coqlib <> Zdiv_interval_1 thm
R84312:84324 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R84312:84324 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R84360:84362 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R84345:84346 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R84347:84351 Coq.ZArith.Zpower <> two_p def
R84355:84357 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84363:84367 Coq.ZArith.Zpower <> two_p def
R84379:84381 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84370:84378 compcert.lib.Integers Make zwordsize def
R84397:84399 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R84437:84437 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R84413:84415 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R84400:84404 Coq.ZArith.Zpower <> two_p def
R84408:84410 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84416:84420 Coq.ZArith.Zpower <> two_p def
R84432:84434 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84423:84431 compcert.lib.Integers Make zwordsize def
R84360:84362 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R84345:84346 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R84347:84351 Coq.ZArith.Zpower <> two_p def
R84355:84357 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84363:84367 Coq.ZArith.Zpower <> two_p def
R84379:84381 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84370:84378 compcert.lib.Integers Make zwordsize def
R84397:84399 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R84437:84437 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R84413:84415 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R84400:84404 Coq.ZArith.Zpower <> two_p def
R84408:84410 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84416:84420 Coq.ZArith.Zpower <> two_p def
R84432:84434 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84423:84431 compcert.lib.Integers Make zwordsize def
R84462:84473 Coq.ZArith.Zpower <> two_p_is_exp thm
R84462:84473 Coq.ZArith.Zpower <> two_p_is_exp thm
R84462:84473 Coq.ZArith.Zpower <> two_p_is_exp thm
R84462:84473 Coq.ZArith.Zpower <> two_p_is_exp thm
R84462:84473 Coq.ZArith.Zpower <> two_p_is_exp thm
R84492:84495 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R84509:84509 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R84488:84490 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84505:84507 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84496:84504 compcert.lib.Integers Make zwordsize def
R84527:84529 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84518:84526 compcert.lib.Integers Make zwordsize def
R84492:84495 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R84509:84509 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R84488:84490 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84505:84507 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84496:84504 compcert.lib.Integers Make zwordsize def
R84527:84529 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84518:84526 compcert.lib.Integers Make zwordsize def
R84556:84573 compcert.lib.Integers Make half_modulus_power thm
R84556:84573 compcert.lib.Integers Make half_modulus_power thm
R84556:84573 compcert.lib.Integers Make half_modulus_power thm
R84590:84601 compcert.lib.Integers Make signed_range thm
R84590:84601 compcert.lib.Integers Make signed_range thm
R84614:84623 compcert.lib.Integers Make min_signed def
R84626:84635 compcert.lib.Integers Make max_signed def
R84669:84683 compcert.lib.Coqlib <> Zdiv_interval_2 thm
R84669:84683 compcert.lib.Coqlib <> Zdiv_interval_2 thm
R84692:84703 compcert.lib.Integers Make signed_range thm
R84692:84703 compcert.lib.Integers Make signed_range thm
R84719:84732 compcert.lib.Integers Make min_signed_neg thm
R84719:84732 compcert.lib.Integers Make min_signed_neg thm
R84755:84768 compcert.lib.Integers Make max_signed_pos thm
R84755:84768 compcert.lib.Integers Make max_signed_pos thm
R84798:84810 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R84798:84810 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 84832:84846 Make eqmod_sign_ext'
binder 84858:84858 <> n:661
binder 84860:84860 <> x:662
R84880:84885 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R84886:84890 compcert.lib.Zbits <> eqmod def
R84929:84936 compcert.lib.Integers Make unsigned def
R84938:84938 compcert.lib.Integers <> x:662 var
R84903:84910 compcert.lib.Integers Make unsigned def
R84913:84920 compcert.lib.Integers Make sign_ext def
R84924:84924 compcert.lib.Integers <> x:662 var
R84922:84922 compcert.lib.Integers <> n:661 var
R84893:84897 Coq.ZArith.Zpower <> two_p def
R84899:84899 compcert.lib.Integers <> n:661 var
R84864:84866 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R84868:84870 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R84867:84867 compcert.lib.Integers <> n:661 var
R84867:84867 compcert.lib.Integers <> n:661 var
R84871:84879 compcert.lib.Integers Make zwordsize def
R84971:84978 Coq.ZArith.BinInt Z to_nat def
R84971:84978 Coq.ZArith.BinInt Z to_nat def
R85004:85006 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84994:85001 Coq.ZArith.BinInt Z of_nat def
R85020:85027 Coq.ZArith.Znat Z2Nat id thm
R85004:85006 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84994:85001 Coq.ZArith.BinInt Z of_nat def
R85020:85027 Coq.ZArith.Znat Z2Nat id thm
R85066:85084 compcert.lib.Coqlib <> two_power_nat_two_p thm
R85066:85084 compcert.lib.Coqlib <> two_power_nat_two_p thm
R85066:85084 compcert.lib.Coqlib <> two_power_nat_two_p thm
R85095:85109 compcert.lib.Zbits <> eqmod_same_bits thm
R85095:85109 compcert.lib.Zbits <> eqmod_same_bits thm
R85160:85166 compcert.lib.Integers Make testbit def
R85169:85176 compcert.lib.Integers Make sign_ext def
R85160:85166 compcert.lib.Integers Make testbit def
R85169:85176 compcert.lib.Integers Make sign_ext def
R85195:85207 compcert.lib.Integers Make bits_sign_ext thm
R85195:85207 compcert.lib.Integers Make bits_sign_ext thm
R85195:85207 compcert.lib.Integers Make bits_sign_ext thm
R85195:85207 compcert.lib.Integers Make bits_sign_ext thm
R85220:85227 compcert.lib.Coqlib <> zlt_true thm
R85220:85227 compcert.lib.Coqlib <> zlt_true thm
R85220:85227 compcert.lib.Coqlib <> zlt_true thm
R85220:85227 compcert.lib.Coqlib <> zlt_true thm
prf 85262:85275 Make eqmod_sign_ext
binder 85287:85287 <> n:663
binder 85289:85289 <> x:664
R85309:85314 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R85315:85319 compcert.lib.Zbits <> eqmod def
R85356:85363 compcert.lib.Integers Make unsigned def
R85365:85365 compcert.lib.Integers <> x:664 var
R85332:85337 compcert.lib.Integers Make signed def
R85340:85347 compcert.lib.Integers Make sign_ext def
R85351:85351 compcert.lib.Integers <> x:664 var
R85349:85349 compcert.lib.Integers <> n:663 var
R85322:85326 Coq.ZArith.Zpower <> two_p def
R85328:85328 compcert.lib.Integers <> n:663 var
R85293:85295 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R85297:85299 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R85296:85296 compcert.lib.Integers <> n:663 var
R85296:85296 compcert.lib.Integers <> n:663 var
R85300:85308 compcert.lib.Integers Make zwordsize def
R85410:85417 compcert.lib.Integers Make unsigned def
R85420:85427 compcert.lib.Integers Make sign_ext def
R85392:85402 compcert.lib.Zbits <> eqmod_trans thm
R85410:85417 compcert.lib.Integers Make unsigned def
R85420:85427 compcert.lib.Integers Make sign_ext def
R85392:85402 compcert.lib.Zbits <> eqmod_trans thm
R85463:85469 compcert.lib.Integers Make modulus def
R85444:85456 compcert.lib.Zbits <> eqmod_divides thm
R85463:85469 compcert.lib.Integers Make modulus def
R85444:85456 compcert.lib.Zbits <> eqmod_divides thm
R85478:85496 compcert.lib.Integers Make eqm_signed_unsigned thm
R85478:85496 compcert.lib.Integers Make eqm_signed_unsigned thm
R85509:85513 Coq.ZArith.Zpower <> two_p def
R85525:85527 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R85516:85524 compcert.lib.Integers Make zwordsize def
R85509:85513 Coq.ZArith.Zpower <> two_p def
R85525:85527 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R85516:85524 compcert.lib.Integers Make zwordsize def
R85542:85548 compcert.lib.Integers Make modulus def
R85559:85577 compcert.lib.Coqlib <> two_power_nat_two_p thm
R85559:85577 compcert.lib.Coqlib <> two_power_nat_two_p thm
R85559:85577 compcert.lib.Coqlib <> two_power_nat_two_p thm
R85585:85593 compcert.lib.Integers Make zwordsize def
R85585:85593 compcert.lib.Integers Make zwordsize def
R85609:85620 Coq.ZArith.Zpower <> two_p_is_exp thm
R85609:85620 Coq.ZArith.Zpower <> two_p_is_exp thm
R85609:85620 Coq.ZArith.Zpower <> two_p_is_exp thm
R85609:85620 Coq.ZArith.Zpower <> two_p_is_exp thm
R85609:85620 Coq.ZArith.Zpower <> two_p_is_exp thm
R85661:85675 compcert.lib.Integers Make eqmod_sign_ext' thm
R85661:85675 compcert.lib.Integers Make eqmod_sign_ext' thm
prf 85752:85763 Make shl_zero_ext
binder 85775:85775 <> n:665
binder 85777:85777 <> m:666
binder 85779:85779 <> x:667
R85788:85793 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R85814:85816 Coq.Init.Logic <> ::type_scope:x_'='_x not
R85794:85796 compcert.lib.Integers Make shl def
R85813:85813 compcert.lib.Integers <> m:666 var
R85799:85806 compcert.lib.Integers Make zero_ext def
R85810:85810 compcert.lib.Integers <> x:667 var
R85808:85808 compcert.lib.Integers <> n:665 var
R85817:85824 compcert.lib.Integers Make zero_ext def
R85844:85846 compcert.lib.Integers Make shl def
R85850:85850 compcert.lib.Integers <> m:666 var
R85848:85848 compcert.lib.Integers <> x:667 var
R85828:85830 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R85827:85827 compcert.lib.Integers <> n:665 var
R85831:85838 compcert.lib.Integers Make unsigned def
R85840:85840 compcert.lib.Integers <> m:666 var
R85783:85786 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R85787:85787 compcert.lib.Integers <> n:665 var
R85877:85888 compcert.lib.Integers Make same_bits_eq thm
R85877:85888 compcert.lib.Integers Make same_bits_eq thm
R85909:85921 compcert.lib.Integers Make bits_zero_ext thm
R85926:85933 compcert.lib.Integers Make bits_shl thm
R85909:85921 compcert.lib.Integers Make bits_zero_ext thm
R85909:85921 compcert.lib.Integers Make bits_zero_ext thm
R85926:85933 compcert.lib.Integers Make bits_shl thm
R85926:85933 compcert.lib.Integers Make bits_shl thm
R85926:85933 compcert.lib.Integers Make bits_shl thm
R85926:85933 compcert.lib.Integers Make bits_shl thm
R85957:85959 compcert.lib.Coqlib <> zlt def
R85964:85971 compcert.lib.Integers Make unsigned def
R85957:85959 compcert.lib.Coqlib <> zlt def
R85964:85971 compcert.lib.Integers Make unsigned def
R85988:85995 compcert.lib.Coqlib <> zlt_true thm
R85988:85995 compcert.lib.Coqlib <> zlt_true thm
R85988:85995 compcert.lib.Coqlib <> zlt_true thm
R86023:86035 compcert.lib.Integers Make bits_zero_ext thm
R86023:86035 compcert.lib.Integers Make bits_zero_ext thm
R86023:86035 compcert.lib.Integers Make bits_zero_ext thm
R86059:86061 compcert.lib.Coqlib <> zlt def
R86065:86067 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R86068:86075 compcert.lib.Integers Make unsigned def
R86093:86100 compcert.lib.Coqlib <> zlt_true thm
R86119:86127 compcert.lib.Coqlib <> zlt_false thm
R86059:86061 compcert.lib.Coqlib <> zlt def
R86065:86067 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R86068:86075 compcert.lib.Integers Make unsigned def
R86093:86100 compcert.lib.Coqlib <> zlt_true thm
R86093:86100 compcert.lib.Coqlib <> zlt_true thm
R86119:86127 compcert.lib.Coqlib <> zlt_false thm
R86119:86127 compcert.lib.Coqlib <> zlt_false thm
prf 86158:86169 Make shl_sign_ext
binder 86181:86181 <> n:668
binder 86183:86183 <> m:669
binder 86185:86185 <> x:670
R86193:86198 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R86219:86221 Coq.Init.Logic <> ::type_scope:x_'='_x not
R86199:86201 compcert.lib.Integers Make shl def
R86218:86218 compcert.lib.Integers <> m:669 var
R86204:86211 compcert.lib.Integers Make sign_ext def
R86215:86215 compcert.lib.Integers <> x:670 var
R86213:86213 compcert.lib.Integers <> n:668 var
R86222:86229 compcert.lib.Integers Make sign_ext def
R86249:86251 compcert.lib.Integers Make shl def
R86255:86255 compcert.lib.Integers <> m:669 var
R86253:86253 compcert.lib.Integers <> x:670 var
R86233:86235 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R86232:86232 compcert.lib.Integers <> n:668 var
R86236:86243 compcert.lib.Integers Make unsigned def
R86245:86245 compcert.lib.Integers <> m:669 var
R86189:86191 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R86192:86192 compcert.lib.Integers <> n:668 var
R86288:86301 compcert.lib.Integers Make unsigned_range thm
R86288:86301 compcert.lib.Integers Make unsigned_range thm
R86323:86334 compcert.lib.Integers Make same_bits_eq thm
R86323:86334 compcert.lib.Integers Make same_bits_eq thm
R86355:86367 compcert.lib.Integers Make bits_sign_ext thm
R86372:86379 compcert.lib.Integers Make bits_shl thm
R86355:86367 compcert.lib.Integers Make bits_sign_ext thm
R86355:86367 compcert.lib.Integers Make bits_sign_ext thm
R86372:86379 compcert.lib.Integers Make bits_shl thm
R86372:86379 compcert.lib.Integers Make bits_shl thm
R86372:86379 compcert.lib.Integers Make bits_shl thm
R86403:86405 compcert.lib.Coqlib <> zlt def
R86411:86413 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R86414:86421 compcert.lib.Integers Make unsigned def
R86403:86405 compcert.lib.Coqlib <> zlt def
R86411:86413 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R86414:86421 compcert.lib.Integers Make unsigned def
R86438:86445 compcert.lib.Integers Make bits_shl thm
R86438:86445 compcert.lib.Integers Make bits_shl thm
R86438:86445 compcert.lib.Integers Make bits_shl thm
R86466:86468 compcert.lib.Coqlib <> zlt def
R86473:86480 compcert.lib.Integers Make unsigned def
R86466:86468 compcert.lib.Coqlib <> zlt def
R86473:86480 compcert.lib.Integers Make unsigned def
R86503:86515 compcert.lib.Integers Make bits_sign_ext thm
R86503:86515 compcert.lib.Integers Make bits_sign_ext thm
R86503:86515 compcert.lib.Integers Make bits_sign_ext thm
R86542:86549 compcert.lib.Coqlib <> zlt_true thm
R86542:86549 compcert.lib.Coqlib <> zlt_true thm
R86569:86577 compcert.lib.Coqlib <> zlt_false thm
R86569:86577 compcert.lib.Coqlib <> zlt_false thm
R86569:86577 compcert.lib.Coqlib <> zlt_false thm
R86597:86604 compcert.lib.Integers Make bits_shl thm
R86597:86604 compcert.lib.Integers Make bits_shl thm
R86597:86604 compcert.lib.Integers Make bits_shl thm
R86624:86632 compcert.lib.Coqlib <> zlt_false thm
R86624:86632 compcert.lib.Coqlib <> zlt_false thm
R86624:86632 compcert.lib.Coqlib <> zlt_false thm
R86654:86666 compcert.lib.Integers Make bits_sign_ext thm
R86654:86666 compcert.lib.Integers Make bits_sign_ext thm
R86654:86666 compcert.lib.Integers Make bits_sign_ext thm
R86695:86703 compcert.lib.Coqlib <> zlt_false thm
R86695:86703 compcert.lib.Coqlib <> zlt_false thm
R86695:86703 compcert.lib.Coqlib <> zlt_false thm
prf 86734:86746 Make shru_zero_ext
binder 86758:86758 <> n:671
binder 86760:86760 <> m:672
binder 86762:86762 <> x:673
R86771:86776 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R86813:86815 Coq.Init.Logic <> ::type_scope:x_'='_x not
R86777:86780 compcert.lib.Integers Make shru def
R86812:86812 compcert.lib.Integers <> m:672 var
R86783:86790 compcert.lib.Integers Make zero_ext def
R86809:86809 compcert.lib.Integers <> x:673 var
R86794:86796 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R86793:86793 compcert.lib.Integers <> n:671 var
R86797:86804 compcert.lib.Integers Make unsigned def
R86806:86806 compcert.lib.Integers <> m:672 var
R86816:86823 compcert.lib.Integers Make zero_ext def
R86828:86831 compcert.lib.Integers Make shru def
R86835:86835 compcert.lib.Integers <> m:672 var
R86833:86833 compcert.lib.Integers <> x:673 var
R86825:86825 compcert.lib.Integers <> n:671 var
R86766:86769 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R86770:86770 compcert.lib.Integers <> n:671 var
R86879:86881 compcert.lib.Coqlib <> zlt def
R86900:86908 compcert.lib.Integers Make zwordsize def
R86885:86887 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R86888:86895 compcert.lib.Integers Make unsigned def
R86879:86881 compcert.lib.Coqlib <> zlt def
R86900:86908 compcert.lib.Integers Make zwordsize def
R86885:86887 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R86888:86895 compcert.lib.Integers Make unsigned def
R86924:86926 compcert.lib.Coqlib <> zlt def
R86943:86950 compcert.lib.Coqlib <> zlt_true thm
R86969:86977 compcert.lib.Coqlib <> zlt_false thm
R86924:86926 compcert.lib.Coqlib <> zlt def
R86943:86950 compcert.lib.Coqlib <> zlt_true thm
R86943:86950 compcert.lib.Coqlib <> zlt_true thm
R86969:86977 compcert.lib.Coqlib <> zlt_false thm
R86969:86977 compcert.lib.Coqlib <> zlt_false thm
R87008:87010 compcert.lib.Coqlib <> zlt def
R87008:87010 compcert.lib.Coqlib <> zlt def
R87038:87051 compcert.lib.Integers Make unsigned_range thm
R87038:87051 compcert.lib.Integers Make unsigned_range thm
prf 87085:87099 Make shru_zero_ext_0
binder 87111:87111 <> n:674
binder 87113:87113 <> m:675
binder 87115:87115 <> x:676
R87133:87138 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R87160:87162 Coq.Init.Logic <> ::type_scope:x_'='_x not
R87139:87142 compcert.lib.Integers Make shru def
R87159:87159 compcert.lib.Integers <> m:675 var
R87145:87152 compcert.lib.Integers Make zero_ext def
R87156:87156 compcert.lib.Integers <> x:676 var
R87154:87154 compcert.lib.Integers <> n:674 var
R87163:87166 compcert.lib.Integers Make zero def
R87119:87122 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R87118:87118 compcert.lib.Integers <> n:674 var
R87123:87130 compcert.lib.Integers Make unsigned def
R87132:87132 compcert.lib.Integers <> m:675 var
R87209:87211 compcert.lib.Coqlib <> zlt def
R87230:87238 compcert.lib.Integers Make zwordsize def
R87215:87217 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R87218:87225 compcert.lib.Integers Make unsigned def
R87209:87211 compcert.lib.Coqlib <> zlt def
R87230:87238 compcert.lib.Integers Make zwordsize def
R87215:87217 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R87218:87225 compcert.lib.Integers Make unsigned def
R87256:87264 compcert.lib.Coqlib <> zlt_false thm
R87256:87264 compcert.lib.Coqlib <> zlt_false thm
R87288:87301 compcert.lib.Integers Make unsigned_range thm
R87288:87301 compcert.lib.Integers Make unsigned_range thm
prf 87326:87337 Make shr_sign_ext
binder 87349:87349 <> n:677
binder 87351:87351 <> m:678
binder 87353:87353 <> x:679
R87361:87364 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R87391:87396 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R87432:87434 Coq.Init.Logic <> ::type_scope:x_'='_x not
R87397:87399 compcert.lib.Integers Make shr def
R87431:87431 compcert.lib.Integers <> m:678 var
R87402:87409 compcert.lib.Integers Make sign_ext def
R87428:87428 compcert.lib.Integers <> x:679 var
R87413:87415 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R87412:87412 compcert.lib.Integers <> n:677 var
R87416:87423 compcert.lib.Integers Make unsigned def
R87425:87425 compcert.lib.Integers <> m:678 var
R87435:87442 compcert.lib.Integers Make sign_ext def
R87447:87449 compcert.lib.Integers Make shr def
R87453:87453 compcert.lib.Integers <> m:678 var
R87451:87451 compcert.lib.Integers <> x:679 var
R87444:87444 compcert.lib.Integers <> n:677 var
R87379:87381 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R87366:87368 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R87365:87365 compcert.lib.Integers <> n:677 var
R87369:87376 compcert.lib.Integers Make unsigned def
R87378:87378 compcert.lib.Integers <> m:678 var
R87382:87390 compcert.lib.Integers Make zwordsize def
R87357:87359 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R87360:87360 compcert.lib.Integers <> n:677 var
R87486:87499 compcert.lib.Integers Make unsigned_range thm
R87486:87499 compcert.lib.Integers Make unsigned_range thm
R87521:87532 compcert.lib.Integers Make same_bits_eq thm
R87521:87532 compcert.lib.Integers Make same_bits_eq thm
R87553:87565 compcert.lib.Integers Make bits_sign_ext thm
R87568:87575 compcert.lib.Integers Make bits_shr thm
R87553:87565 compcert.lib.Integers Make bits_sign_ext thm
R87553:87565 compcert.lib.Integers Make bits_sign_ext thm
R87568:87575 compcert.lib.Integers Make bits_shr thm
R87568:87575 compcert.lib.Integers Make bits_shr thm
R87596:87608 compcert.lib.Integers Make bits_sign_ext thm
R87611:87618 compcert.lib.Integers Make bits_shr thm
R87596:87608 compcert.lib.Integers Make bits_sign_ext thm
R87596:87608 compcert.lib.Integers Make bits_sign_ext thm
R87596:87608 compcert.lib.Integers Make bits_sign_ext thm
R87611:87618 compcert.lib.Integers Make bits_shr thm
R87611:87618 compcert.lib.Integers Make bits_shr thm
R87611:87618 compcert.lib.Integers Make bits_shr thm
R87644:87646 compcert.lib.Coqlib <> zlt def
R87655:87657 compcert.lib.Coqlib <> zlt def
R87676:87684 compcert.lib.Integers Make zwordsize def
R87661:87663 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R87664:87671 compcert.lib.Integers Make unsigned def
R87644:87646 compcert.lib.Coqlib <> zlt def
R87655:87657 compcert.lib.Coqlib <> zlt def
R87676:87684 compcert.lib.Integers Make zwordsize def
R87661:87663 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R87664:87671 compcert.lib.Integers Make unsigned def
R87655:87657 compcert.lib.Coqlib <> zlt def
R87676:87684 compcert.lib.Integers Make zwordsize def
R87661:87663 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R87664:87671 compcert.lib.Integers Make unsigned def
R87696:87703 compcert.lib.Coqlib <> zlt_true thm
R87696:87703 compcert.lib.Coqlib <> zlt_true thm
R87721:87728 compcert.lib.Coqlib <> zlt_true thm
R87721:87728 compcert.lib.Coqlib <> zlt_true thm
R87748:87756 compcert.lib.Coqlib <> zlt_false thm
R87748:87756 compcert.lib.Coqlib <> zlt_false thm
R87748:87756 compcert.lib.Coqlib <> zlt_false thm
R87776:87783 compcert.lib.Coqlib <> zlt_true thm
R87776:87783 compcert.lib.Coqlib <> zlt_true thm
R87776:87783 compcert.lib.Coqlib <> zlt_true thm
R87812:87820 compcert.lib.Coqlib <> zlt_false thm
R87812:87820 compcert.lib.Coqlib <> zlt_false thm
R87812:87820 compcert.lib.Coqlib <> zlt_false thm
R87840:87847 compcert.lib.Coqlib <> zlt_true thm
R87840:87847 compcert.lib.Coqlib <> zlt_true thm
R87840:87847 compcert.lib.Coqlib <> zlt_true thm
R87878:87880 compcert.lib.Coqlib <> zlt def
R87878:87880 compcert.lib.Coqlib <> zlt def
R87907:87909 compcert.lib.Coqlib <> zlt def
R87928:87936 compcert.lib.Integers Make zwordsize def
R87913:87915 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R87916:87923 compcert.lib.Integers Make unsigned def
R87907:87909 compcert.lib.Coqlib <> zlt def
R87928:87936 compcert.lib.Integers Make zwordsize def
R87913:87915 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R87916:87923 compcert.lib.Integers Make unsigned def
prf 87959:87975 Make zero_ext_shru_min
binder 87987:87987 <> s:680
binder 87989:87989 <> x:681
binder 87991:87991 <> n:682
R88016:88021 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R88043:88045 Coq.Init.Logic <> ::type_scope:x_'='_x not
R88022:88029 compcert.lib.Integers Make zero_ext def
R88034:88037 compcert.lib.Integers Make shru def
R88041:88041 compcert.lib.Integers <> n:682 var
R88039:88039 compcert.lib.Integers <> x:681 var
R88031:88031 compcert.lib.Integers <> s:680 var
R88046:88053 compcert.lib.Integers Make zero_ext def
R88091:88094 compcert.lib.Integers Make shru def
R88098:88098 compcert.lib.Integers <> n:682 var
R88096:88096 compcert.lib.Integers <> x:681 var
R88056:88060 Coq.ZArith.BinInt Z min def
R88074:88076 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88065:88073 compcert.lib.Integers Make zwordsize def
R88077:88084 compcert.lib.Integers Make unsigned def
R88086:88086 compcert.lib.Integers <> n:682 var
R88062:88062 compcert.lib.Integers <> s:680 var
R88009:88011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R87994:87996 compcert.lib.Integers Make ltu def
R88000:88008 compcert.lib.Integers Make iwordsize def
R87998:87998 compcert.lib.Integers <> n:682 var
R88012:88015 Coq.Init.Datatypes <> true constr
R88125:88141 compcert.lib.Integers Make ltu_iwordsize_inv thm
R88125:88141 compcert.lib.Integers Make ltu_iwordsize_inv thm
R88157:88173 Coq.ZArith.BinInt Z min_case_strong thm
R88157:88173 Coq.ZArith.BinInt Z min_case_strong thm
R88226:88228 compcert.lib.Coqlib <> zlt def
R88242:88244 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88233:88241 compcert.lib.Integers Make zwordsize def
R88245:88252 compcert.lib.Integers Make unsigned def
R88226:88228 compcert.lib.Coqlib <> zlt def
R88242:88244 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88233:88241 compcert.lib.Integers Make zwordsize def
R88245:88252 compcert.lib.Integers Make unsigned def
R88269:88276 compcert.lib.Coqlib <> zlt_true thm
R88269:88276 compcert.lib.Coqlib <> zlt_true thm
R88269:88276 compcert.lib.Coqlib <> zlt_true thm
R88306:88308 compcert.lib.Coqlib <> zlt def
R88306:88308 compcert.lib.Coqlib <> zlt def
R88330:88338 compcert.lib.Coqlib <> zlt_false thm
R88330:88338 compcert.lib.Coqlib <> zlt_false thm
R88330:88338 compcert.lib.Coqlib <> zlt_false thm
prf 88368:88383 Make sign_ext_shr_min
binder 88395:88395 <> s:683
binder 88397:88397 <> x:684
binder 88399:88399 <> n:685
R88424:88429 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R88450:88452 Coq.Init.Logic <> ::type_scope:x_'='_x not
R88430:88437 compcert.lib.Integers Make sign_ext def
R88442:88444 compcert.lib.Integers Make shr def
R88448:88448 compcert.lib.Integers <> n:685 var
R88446:88446 compcert.lib.Integers <> x:684 var
R88439:88439 compcert.lib.Integers <> s:683 var
R88453:88460 compcert.lib.Integers Make sign_ext def
R88498:88500 compcert.lib.Integers Make shr def
R88504:88504 compcert.lib.Integers <> n:685 var
R88502:88502 compcert.lib.Integers <> x:684 var
R88463:88467 Coq.ZArith.BinInt Z min def
R88481:88483 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88472:88480 compcert.lib.Integers Make zwordsize def
R88484:88491 compcert.lib.Integers Make unsigned def
R88493:88493 compcert.lib.Integers <> n:685 var
R88469:88469 compcert.lib.Integers <> s:683 var
R88417:88419 Coq.Init.Logic <> ::type_scope:x_'='_x not
R88402:88404 compcert.lib.Integers Make ltu def
R88408:88416 compcert.lib.Integers Make iwordsize def
R88406:88406 compcert.lib.Integers <> n:685 var
R88420:88423 Coq.Init.Datatypes <> true constr
R88531:88547 compcert.lib.Integers Make ltu_iwordsize_inv thm
R88531:88547 compcert.lib.Integers Make ltu_iwordsize_inv thm
R88565:88574 Coq.ZArith.BinInt Z min_comm thm
R88565:88574 Coq.ZArith.BinInt Z min_comm thm
R88565:88574 Coq.ZArith.BinInt Z min_comm thm
R88590:88599 Coq.ZArith.BinInt Z min_spec thm
R88611:88613 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88602:88610 compcert.lib.Integers Make zwordsize def
R88614:88621 compcert.lib.Integers Make unsigned def
R88590:88599 Coq.ZArith.BinInt Z min_spec thm
R88611:88613 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88602:88610 compcert.lib.Integers Make zwordsize def
R88614:88621 compcert.lib.Integers Make unsigned def
R88674:88685 compcert.lib.Integers Make same_bits_eq thm
R88674:88685 compcert.lib.Integers Make same_bits_eq thm
R88706:88718 compcert.lib.Integers Make bits_sign_ext thm
R88706:88718 compcert.lib.Integers Make bits_sign_ext thm
R88706:88718 compcert.lib.Integers Make bits_sign_ext thm
R88706:88718 compcert.lib.Integers Make bits_sign_ext thm
R88706:88718 compcert.lib.Integers Make bits_sign_ext thm
R88741:88743 compcert.lib.Coqlib <> zlt def
R88757:88759 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88748:88756 compcert.lib.Integers Make zwordsize def
R88760:88767 compcert.lib.Integers Make unsigned def
R88741:88743 compcert.lib.Coqlib <> zlt def
R88757:88759 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88748:88756 compcert.lib.Integers Make zwordsize def
R88760:88767 compcert.lib.Integers Make unsigned def
R88785:88792 compcert.lib.Coqlib <> zlt_true thm
R88785:88792 compcert.lib.Coqlib <> zlt_true thm
R88785:88792 compcert.lib.Coqlib <> zlt_true thm
R88869:88871 Coq.Init.Logic <> ::type_scope:x_'='_x not
R88823:88829 compcert.lib.Integers Make testbit def
R88864:88866 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88851:88853 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88842:88850 compcert.lib.Integers Make zwordsize def
R88854:88861 compcert.lib.Integers Make unsigned def
R88832:88834 compcert.lib.Integers Make shr def
R88872:88878 compcert.lib.Integers Make testbit def
R88892:88894 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88883:88891 compcert.lib.Integers Make zwordsize def
R88869:88871 Coq.Init.Logic <> ::type_scope:x_'='_x not
R88823:88829 compcert.lib.Integers Make testbit def
R88864:88866 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88851:88853 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88842:88850 compcert.lib.Integers Make zwordsize def
R88854:88861 compcert.lib.Integers Make unsigned def
R88832:88834 compcert.lib.Integers Make shr def
R88872:88878 compcert.lib.Integers Make testbit def
R88892:88894 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88883:88891 compcert.lib.Integers Make zwordsize def
R88912:88919 compcert.lib.Integers Make bits_shr thm
R88912:88919 compcert.lib.Integers Make bits_shr thm
R88912:88919 compcert.lib.Integers Make bits_shr thm
R88939:88946 compcert.lib.Coqlib <> zlt_true thm
R88939:88946 compcert.lib.Coqlib <> zlt_true thm
R88939:88946 compcert.lib.Coqlib <> zlt_true thm
R88999:89001 compcert.lib.Coqlib <> zlt def
R89017:89024 compcert.lib.Integers Make bits_shr thm
R88999:89001 compcert.lib.Coqlib <> zlt def
R89017:89024 compcert.lib.Integers Make bits_shr thm
R89017:89024 compcert.lib.Integers Make bits_shr thm
R89017:89024 compcert.lib.Integers Make bits_shr thm
R89017:89024 compcert.lib.Integers Make bits_shr thm
R89046:89054 compcert.lib.Coqlib <> zlt_false thm
R89046:89054 compcert.lib.Coqlib <> zlt_false thm
R89046:89054 compcert.lib.Coqlib <> zlt_false thm
R89082:89090 compcert.lib.Coqlib <> zlt_false thm
R89082:89090 compcert.lib.Coqlib <> zlt_false thm
R89082:89090 compcert.lib.Coqlib <> zlt_false thm
prf 89120:89135 Make shl_zero_ext_min
binder 89147:89147 <> s:686
binder 89149:89149 <> x:687
binder 89151:89151 <> n:688
R89176:89181 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R89202:89204 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89182:89184 compcert.lib.Integers Make shl def
R89201:89201 compcert.lib.Integers <> n:688 var
R89187:89194 compcert.lib.Integers Make zero_ext def
R89198:89198 compcert.lib.Integers <> x:687 var
R89196:89196 compcert.lib.Integers <> s:686 var
R89205:89207 compcert.lib.Integers Make shl def
R89257:89257 compcert.lib.Integers <> n:688 var
R89210:89217 compcert.lib.Integers Make zero_ext def
R89254:89254 compcert.lib.Integers <> x:687 var
R89220:89224 Coq.ZArith.BinInt Z min def
R89238:89240 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R89229:89237 compcert.lib.Integers Make zwordsize def
R89241:89248 compcert.lib.Integers Make unsigned def
R89250:89250 compcert.lib.Integers <> n:688 var
R89226:89226 compcert.lib.Integers <> s:686 var
R89169:89171 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89154:89156 compcert.lib.Integers Make ltu def
R89160:89168 compcert.lib.Integers Make iwordsize def
R89158:89158 compcert.lib.Integers <> n:688 var
R89172:89175 Coq.Init.Datatypes <> true constr
R89283:89299 compcert.lib.Integers Make ltu_iwordsize_inv thm
R89283:89299 compcert.lib.Integers Make ltu_iwordsize_inv thm
R89315:89331 Coq.ZArith.BinInt Z min_case_strong thm
R89315:89331 Coq.ZArith.BinInt Z min_case_strong thm
R89356:89367 compcert.lib.Integers Make same_bits_eq thm
R89356:89367 compcert.lib.Integers Make same_bits_eq thm
R89388:89395 compcert.lib.Integers Make bits_shl thm
R89388:89395 compcert.lib.Integers Make bits_shl thm
R89388:89395 compcert.lib.Integers Make bits_shl thm
R89388:89395 compcert.lib.Integers Make bits_shl thm
R89388:89395 compcert.lib.Integers Make bits_shl thm
R89418:89420 compcert.lib.Coqlib <> zlt def
R89425:89432 compcert.lib.Integers Make unsigned def
R89418:89420 compcert.lib.Coqlib <> zlt def
R89425:89432 compcert.lib.Integers Make unsigned def
R89457:89469 compcert.lib.Integers Make bits_zero_ext thm
R89457:89469 compcert.lib.Integers Make bits_zero_ext thm
R89457:89469 compcert.lib.Integers Make bits_zero_ext thm
R89457:89469 compcert.lib.Integers Make bits_zero_ext thm
R89457:89469 compcert.lib.Integers Make bits_zero_ext thm
R89493:89495 compcert.lib.Coqlib <> zlt def
R89499:89501 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R89502:89509 compcert.lib.Integers Make unsigned def
R89493:89495 compcert.lib.Coqlib <> zlt def
R89499:89501 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R89502:89509 compcert.lib.Integers Make unsigned def
R89528:89535 compcert.lib.Coqlib <> zlt_true thm
R89528:89535 compcert.lib.Coqlib <> zlt_true thm
R89528:89535 compcert.lib.Coqlib <> zlt_true thm
R89563:89571 compcert.lib.Coqlib <> zlt_false thm
R89563:89571 compcert.lib.Coqlib <> zlt_false thm
R89563:89571 compcert.lib.Coqlib <> zlt_false thm
prf 89601:89616 Make shl_sign_ext_min
binder 89628:89628 <> s:689
binder 89630:89630 <> x:690
binder 89632:89632 <> n:691
R89657:89662 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R89683:89685 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89663:89665 compcert.lib.Integers Make shl def
R89682:89682 compcert.lib.Integers <> n:691 var
R89668:89675 compcert.lib.Integers Make sign_ext def
R89679:89679 compcert.lib.Integers <> x:690 var
R89677:89677 compcert.lib.Integers <> s:689 var
R89686:89688 compcert.lib.Integers Make shl def
R89738:89738 compcert.lib.Integers <> n:691 var
R89691:89698 compcert.lib.Integers Make sign_ext def
R89735:89735 compcert.lib.Integers <> x:690 var
R89701:89705 Coq.ZArith.BinInt Z min def
R89719:89721 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R89710:89718 compcert.lib.Integers Make zwordsize def
R89722:89729 compcert.lib.Integers Make unsigned def
R89731:89731 compcert.lib.Integers <> n:691 var
R89707:89707 compcert.lib.Integers <> s:689 var
R89650:89652 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89635:89637 compcert.lib.Integers Make ltu def
R89641:89649 compcert.lib.Integers Make iwordsize def
R89639:89639 compcert.lib.Integers <> n:691 var
R89653:89656 Coq.Init.Datatypes <> true constr
R89764:89780 compcert.lib.Integers Make ltu_iwordsize_inv thm
R89764:89780 compcert.lib.Integers Make ltu_iwordsize_inv thm
R89798:89807 Coq.ZArith.BinInt Z min_comm thm
R89798:89807 Coq.ZArith.BinInt Z min_comm thm
R89798:89807 Coq.ZArith.BinInt Z min_comm thm
R89823:89832 Coq.ZArith.BinInt Z min_spec thm
R89844:89846 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R89835:89843 compcert.lib.Integers Make zwordsize def
R89847:89854 compcert.lib.Integers Make unsigned def
R89823:89832 Coq.ZArith.BinInt Z min_spec thm
R89844:89846 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R89835:89843 compcert.lib.Integers Make zwordsize def
R89847:89854 compcert.lib.Integers Make unsigned def
R89907:89918 compcert.lib.Integers Make same_bits_eq thm
R89907:89918 compcert.lib.Integers Make same_bits_eq thm
R89939:89946 compcert.lib.Integers Make bits_shl thm
R89939:89946 compcert.lib.Integers Make bits_shl thm
R89939:89946 compcert.lib.Integers Make bits_shl thm
R89939:89946 compcert.lib.Integers Make bits_shl thm
R89939:89946 compcert.lib.Integers Make bits_shl thm
R89969:89971 compcert.lib.Coqlib <> zlt def
R89976:89983 compcert.lib.Integers Make unsigned def
R89969:89971 compcert.lib.Coqlib <> zlt def
R89976:89983 compcert.lib.Integers Make unsigned def
R90008:90020 compcert.lib.Integers Make bits_sign_ext thm
R90008:90020 compcert.lib.Integers Make bits_sign_ext thm
R90008:90020 compcert.lib.Integers Make bits_sign_ext thm
R90008:90020 compcert.lib.Integers Make bits_sign_ext thm
R90008:90020 compcert.lib.Integers Make bits_sign_ext thm
R90053:90055 compcert.lib.Coqlib <> zlt def
R90059:90061 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R90062:90069 compcert.lib.Integers Make unsigned def
R90053:90055 compcert.lib.Coqlib <> zlt def
R90059:90061 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R90062:90069 compcert.lib.Integers Make unsigned def
R90088:90095 compcert.lib.Coqlib <> zlt_true thm
R90088:90095 compcert.lib.Coqlib <> zlt_true thm
R90088:90095 compcert.lib.Coqlib <> zlt_true thm
prf 90225:90238 Make one_bits_range
binder 90250:90250 <> x:692
binder 90252:90252 <> i:693
R90272:90275 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R90291:90293 Coq.Init.Logic <> ::type_scope:x_'='_x not
R90276:90278 compcert.lib.Integers Make ltu def
R90282:90290 compcert.lib.Integers Make iwordsize def
R90280:90280 compcert.lib.Integers <> i:693 var
R90294:90297 Coq.Init.Datatypes <> true constr
R90255:90256 Coq.Lists.List <> In def
R90261:90268 compcert.lib.Integers Make one_bits def
R90270:90270 compcert.lib.Integers <> x:692 var
R90258:90258 compcert.lib.Integers <> i:693 var
binder 90327:90327 <> p:694
R90348:90351 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R90374:90376 Coq.Init.Logic <> ::type_scope:x_'='_x not
R90352:90354 compcert.lib.Integers Make ltu def
R90365:90373 compcert.lib.Integers Make iwordsize def
R90357:90360 compcert.lib.Integers Make repr def
R90362:90362 compcert.lib.Integers <> p:694 var
R90377:90380 Coq.Init.Datatypes <> true constr
R90331:90334 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R90336:90338 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R90335:90335 compcert.lib.Integers <> p:694 var
R90335:90335 compcert.lib.Integers <> p:694 var
R90339:90347 compcert.lib.Integers Make zwordsize def
binder 90327:90327 <> p:695
R90348:90351 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R90374:90376 Coq.Init.Logic <> ::type_scope:x_'='_x not
R90352:90354 compcert.lib.Integers Make ltu def
R90365:90373 compcert.lib.Integers Make iwordsize def
R90357:90360 compcert.lib.Integers Make repr def
R90362:90362 compcert.lib.Integers <> p:695 var
R90377:90380 Coq.Init.Datatypes <> true constr
R90331:90334 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R90336:90338 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R90335:90335 compcert.lib.Integers <> p:695 var
R90335:90335 compcert.lib.Integers <> p:695 var
R90339:90347 compcert.lib.Integers Make zwordsize def
R90403:90405 compcert.lib.Integers Make ltu def
R90408:90416 compcert.lib.Integers Make iwordsize def
R90425:90432 compcert.lib.Coqlib <> zlt_true thm
R90425:90432 compcert.lib.Coqlib <> zlt_true thm
R90454:90466 compcert.lib.Integers Make unsigned_repr thm
R90454:90466 compcert.lib.Integers Make unsigned_repr thm
R90454:90466 compcert.lib.Integers Make unsigned_repr thm
R90454:90466 compcert.lib.Integers Make unsigned_repr thm
R90454:90466 compcert.lib.Integers Make unsigned_repr thm
R90454:90466 compcert.lib.Integers Make unsigned_repr thm
R90454:90466 compcert.lib.Integers Make unsigned_repr thm
R90454:90466 compcert.lib.Integers Make unsigned_repr thm
R90454:90466 compcert.lib.Integers Make unsigned_repr thm
R90454:90466 compcert.lib.Integers Make unsigned_repr thm
R90491:90511 compcert.lib.Integers Make wordsize_max_unsigned thm
R90491:90511 compcert.lib.Integers Make wordsize_max_unsigned thm
R90536:90556 compcert.lib.Integers Make wordsize_max_unsigned thm
R90536:90556 compcert.lib.Integers Make wordsize_max_unsigned thm
R90575:90582 compcert.lib.Integers Make one_bits def
R90605:90619 compcert.lib.Coqlib <> list_in_map_inv thm
R90605:90619 compcert.lib.Coqlib <> list_in_map_inv thm
R90696:90703 compcert.lib.Integers Make unsigned def
R90673:90688 compcert.lib.Zbits <> Z_one_bits_range thm
R90696:90703 compcert.lib.Integers Make unsigned def
R90673:90688 compcert.lib.Zbits <> Z_one_bits_range thm
def 90730:90744 Make int_of_one_bits
R90750:90753 Coq.Init.Datatypes <> list ind
R90755:90757 compcert.lib.Integers Make int rec
binder 90747:90747 <> l:696
R90762:90764 compcert.lib.Integers Make int rec
R90777:90777 compcert.lib.Integers <> l:696 var
R90788:90790 Coq.Init.Datatypes <> nil constr
R90795:90798 compcert.lib.Integers Make zero def
R90805:90808 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R90814:90816 compcert.lib.Integers Make add def
R90831:90845 compcert.lib.Integers <> int_of_one_bits:697 def
R90819:90821 compcert.lib.Integers Make shl def
R90823:90825 compcert.lib.Integers Make one def
prf 90866:90880 Make one_bits_decomp
binder 90892:90892 <> x:699
R90896:90898 Coq.Init.Logic <> ::type_scope:x_'='_x not
R90895:90895 compcert.lib.Integers <> x:699 var
R90899:90913 compcert.lib.Integers Make int_of_one_bits def
R90916:90923 compcert.lib.Integers Make one_bits def
R90925:90925 compcert.lib.Integers <> x:699 var
R90962:90965 compcert.lib.Integers Make repr def
R90968:90977 compcert.lib.Zbits <> powerserie def
R90980:90989 compcert.lib.Zbits <> Z_one_bits def
R91001:91008 compcert.lib.Integers Make unsigned def
R90991:90998 compcert.lib.Integers Make wordsize def
R90962:90965 compcert.lib.Integers Make repr def
R90968:90977 compcert.lib.Zbits <> powerserie def
R90980:90989 compcert.lib.Zbits <> Z_one_bits def
R91001:91008 compcert.lib.Integers Make unsigned def
R90991:90998 compcert.lib.Integers Make wordsize def
R91035:91038 compcert.lib.Integers Make repr def
R91041:91048 compcert.lib.Integers Make unsigned def
R91035:91038 compcert.lib.Integers Make repr def
R91041:91048 compcert.lib.Integers Make unsigned def
R91086:91106 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R91086:91106 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R91136:91143 compcert.lib.Integers Make one_bits def
R91160:91175 compcert.lib.Zbits <> Z_one_bits_range thm
R91187:91194 compcert.lib.Integers Make unsigned def
R91177:91184 compcert.lib.Integers Make wordsize def
R91160:91175 compcert.lib.Zbits <> Z_one_bits_range thm
R91187:91194 compcert.lib.Integers Make unsigned def
R91177:91184 compcert.lib.Integers Make wordsize def
R91215:91224 compcert.lib.Zbits <> Z_one_bits def
R91236:91243 compcert.lib.Integers Make unsigned def
R91226:91233 compcert.lib.Integers Make wordsize def
R91215:91224 compcert.lib.Zbits <> Z_one_bits def
R91236:91243 compcert.lib.Integers Make unsigned def
R91226:91233 compcert.lib.Integers Make wordsize def
R91330:91332 compcert.lib.Integers Make add def
R91341:91352 compcert.lib.Integers Make eqm_samerepr thm
R91341:91352 compcert.lib.Integers Make eqm_samerepr thm
R91363:91369 compcert.lib.Integers Make eqm_add thm
R91363:91369 compcert.lib.Integers Make eqm_add thm
R91380:91392 compcert.lib.Integers Make shl_mul_two_p thm
R91380:91392 compcert.lib.Integers Make shl_mul_two_p thm
R91380:91392 compcert.lib.Integers Make shl_mul_two_p thm
R91403:91412 compcert.lib.Integers Make mul_commut thm
R91403:91412 compcert.lib.Integers Make mul_commut thm
R91403:91412 compcert.lib.Integers Make mul_commut thm
R91425:91431 compcert.lib.Integers Make mul_one thm
R91425:91431 compcert.lib.Integers Make mul_one thm
R91425:91431 compcert.lib.Integers Make mul_one thm
R91440:91458 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R91440:91458 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R91471:91483 compcert.lib.Integers Make unsigned_repr thm
R91471:91483 compcert.lib.Integers Make unsigned_repr thm
R91471:91483 compcert.lib.Integers Make unsigned_repr thm
R91471:91483 compcert.lib.Integers Make unsigned_repr thm
R91521:91525 Coq.Lists.List <> in_eq thm
R91521:91525 Coq.Lists.List <> in_eq thm
R91542:91549 Coq.ZArith.BinInt Z of_nat def
R91551:91558 compcert.lib.Integers Make wordsize def
R91566:91574 compcert.lib.Integers Make zwordsize def
R91542:91549 Coq.ZArith.BinInt Z of_nat def
R91551:91558 compcert.lib.Integers Make wordsize def
R91566:91574 compcert.lib.Integers Make zwordsize def
R91590:91610 compcert.lib.Integers Make wordsize_max_unsigned thm
R91590:91610 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 91726:91735 Make negate_cmp
binder 91747:91747 <> c:700
binder 91749:91749 <> x:701
binder 91751:91751 <> y:702
R91783:91785 Coq.Init.Logic <> ::type_scope:x_'='_x not
R91754:91756 compcert.lib.Integers Make cmp def
R91782:91782 compcert.lib.Integers <> y:702 var
R91780:91780 compcert.lib.Integers <> x:701 var
R91759:91775 compcert.lib.Integers <> negate_comparison def
R91777:91777 compcert.lib.Integers <> c:700 var
R91786:91789 Coq.Init.Datatypes <> negb def
R91792:91794 compcert.lib.Integers Make cmp def
R91800:91800 compcert.lib.Integers <> y:702 var
R91798:91798 compcert.lib.Integers <> x:701 var
R91796:91796 compcert.lib.Integers <> c:700 var
R91852:91860 Coq.Bool.Bool <> negb_elim syndef
R91852:91860 Coq.Bool.Bool <> negb_elim syndef
R91852:91860 Coq.Bool.Bool <> negb_elim syndef
R91852:91860 Coq.Bool.Bool <> negb_elim syndef
R91852:91860 Coq.Bool.Bool <> negb_elim syndef
R91852:91860 Coq.Bool.Bool <> negb_elim syndef
R91852:91860 Coq.Bool.Bool <> negb_elim syndef
R91852:91860 Coq.Bool.Bool <> negb_elim syndef
R91852:91860 Coq.Bool.Bool <> negb_elim syndef
R91852:91860 Coq.Bool.Bool <> negb_elim syndef
prf 91883:91893 Make negate_cmpu
binder 91905:91905 <> c:703
binder 91907:91907 <> x:704
binder 91909:91909 <> y:705
R91942:91944 Coq.Init.Logic <> ::type_scope:x_'='_x not
R91912:91915 compcert.lib.Integers Make cmpu def
R91941:91941 compcert.lib.Integers <> y:705 var
R91939:91939 compcert.lib.Integers <> x:704 var
R91918:91934 compcert.lib.Integers <> negate_comparison def
R91936:91936 compcert.lib.Integers <> c:703 var
R91945:91948 Coq.Init.Datatypes <> negb def
R91951:91954 compcert.lib.Integers Make cmpu def
R91960:91960 compcert.lib.Integers <> y:705 var
R91958:91958 compcert.lib.Integers <> x:704 var
R91956:91956 compcert.lib.Integers <> c:703 var
R92012:92020 Coq.Bool.Bool <> negb_elim syndef
R92012:92020 Coq.Bool.Bool <> negb_elim syndef
R92012:92020 Coq.Bool.Bool <> negb_elim syndef
R92012:92020 Coq.Bool.Bool <> negb_elim syndef
R92012:92020 Coq.Bool.Bool <> negb_elim syndef
R92012:92020 Coq.Bool.Bool <> negb_elim syndef
R92012:92020 Coq.Bool.Bool <> negb_elim syndef
R92012:92020 Coq.Bool.Bool <> negb_elim syndef
R92012:92020 Coq.Bool.Bool <> negb_elim syndef
R92012:92020 Coq.Bool.Bool <> negb_elim syndef
prf 92043:92050 Make swap_cmp
binder 92062:92062 <> c:706
binder 92064:92064 <> x:707
binder 92066:92066 <> y:708
R92096:92098 Coq.Init.Logic <> ::type_scope:x_'='_x not
R92069:92071 compcert.lib.Integers Make cmp def
R92095:92095 compcert.lib.Integers <> y:708 var
R92093:92093 compcert.lib.Integers <> x:707 var
R92074:92088 compcert.lib.Integers <> swap_comparison def
R92090:92090 compcert.lib.Integers <> c:706 var
R92099:92101 compcert.lib.Integers Make cmp def
R92107:92107 compcert.lib.Integers <> x:707 var
R92105:92105 compcert.lib.Integers <> y:708 var
R92103:92103 compcert.lib.Integers <> c:706 var
R92158:92163 compcert.lib.Integers Make eq_sym thm
R92158:92163 compcert.lib.Integers Make eq_sym thm
R92179:92184 compcert.lib.Integers Make eq_sym thm
R92179:92184 compcert.lib.Integers Make eq_sym thm
prf 92201:92209 Make swap_cmpu
binder 92221:92221 <> c:709
binder 92223:92223 <> x:710
binder 92225:92225 <> y:711
R92256:92258 Coq.Init.Logic <> ::type_scope:x_'='_x not
R92228:92231 compcert.lib.Integers Make cmpu def
R92255:92255 compcert.lib.Integers <> y:711 var
R92253:92253 compcert.lib.Integers <> x:710 var
R92234:92248 compcert.lib.Integers <> swap_comparison def
R92250:92250 compcert.lib.Integers <> c:709 var
R92259:92262 compcert.lib.Integers Make cmpu def
R92268:92268 compcert.lib.Integers <> x:710 var
R92266:92266 compcert.lib.Integers <> y:711 var
R92264:92264 compcert.lib.Integers <> c:709 var
R92319:92324 compcert.lib.Integers Make eq_sym thm
R92319:92324 compcert.lib.Integers Make eq_sym thm
R92340:92345 compcert.lib.Integers Make eq_sym thm
R92340:92345 compcert.lib.Integers Make eq_sym thm
prf 92360:92371 Make translate_eq
binder 92383:92383 <> x:712
binder 92385:92385 <> y:713
binder 92387:92387 <> d:714
R92414:92416 Coq.Init.Logic <> ::type_scope:x_'='_x not
R92392:92393 compcert.lib.Integers Make eq def
R92406:92408 compcert.lib.Integers Make add def
R92412:92412 compcert.lib.Integers <> d:714 var
R92410:92410 compcert.lib.Integers <> y:713 var
R92396:92398 compcert.lib.Integers Make add def
R92402:92402 compcert.lib.Integers <> d:714 var
R92400:92400 compcert.lib.Integers <> x:712 var
R92417:92418 compcert.lib.Integers Make eq def
R92422:92422 compcert.lib.Integers <> y:713 var
R92420:92420 compcert.lib.Integers <> x:712 var
R92449:92450 compcert.lib.Integers Make eq def
R92459:92461 compcert.lib.Coqlib <> zeq def
R92477:92484 compcert.lib.Integers Make unsigned def
R92464:92471 compcert.lib.Integers Make unsigned def
R92459:92461 compcert.lib.Coqlib <> zeq def
R92477:92484 compcert.lib.Integers Make unsigned def
R92464:92471 compcert.lib.Integers Make unsigned def
R92507:92509 compcert.lib.Integers Make add def
R92529:92536 compcert.lib.Coqlib <> zeq_true thm
R92529:92536 compcert.lib.Coqlib <> zeq_true thm
R92547:92555 compcert.lib.Coqlib <> zeq_false thm
R92547:92555 compcert.lib.Coqlib <> zeq_false thm
R92565:92567 compcert.lib.Integers Make add def
R92599:92610 compcert.lib.Integers Make eqm_small_eq thm
R92599:92610 compcert.lib.Integers Make eqm_small_eq thm
R92640:92647 compcert.lib.Integers Make unsigned def
R92658:92658 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92682:92685 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92669:92671 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92659:92666 compcert.lib.Integers Make unsigned def
R92672:92679 compcert.lib.Integers Make unsigned def
R92686:92693 compcert.lib.Integers Make unsigned def
R92640:92647 compcert.lib.Integers Make unsigned def
R92658:92658 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92682:92685 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92669:92671 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92659:92666 compcert.lib.Integers Make unsigned def
R92672:92679 compcert.lib.Integers Make unsigned def
R92686:92693 compcert.lib.Integers Make unsigned def
R92710:92717 compcert.lib.Integers Make unsigned def
R92728:92728 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92752:92755 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92739:92741 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92729:92736 compcert.lib.Integers Make unsigned def
R92742:92749 compcert.lib.Integers Make unsigned def
R92756:92763 compcert.lib.Integers Make unsigned def
R92710:92717 compcert.lib.Integers Make unsigned def
R92728:92728 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92752:92755 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92739:92741 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92729:92736 compcert.lib.Integers Make unsigned def
R92742:92749 compcert.lib.Integers Make unsigned def
R92756:92763 compcert.lib.Integers Make unsigned def
R92777:92783 compcert.lib.Integers Make eqm_sub thm
R92777:92783 compcert.lib.Integers Make eqm_sub thm
R92808:92815 compcert.lib.Integers Make unsigned def
R92818:92821 compcert.lib.Integers Make repr def
R92834:92836 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92824:92831 compcert.lib.Integers Make unsigned def
R92837:92844 compcert.lib.Integers Make unsigned def
R92792:92800 compcert.lib.Integers Make eqm_trans thm
R92808:92815 compcert.lib.Integers Make unsigned def
R92818:92821 compcert.lib.Integers Make repr def
R92834:92836 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92824:92831 compcert.lib.Integers Make unsigned def
R92837:92844 compcert.lib.Integers Make unsigned def
R92792:92800 compcert.lib.Integers Make eqm_trans thm
R92893:92900 compcert.lib.Integers Make unsigned def
R92903:92906 compcert.lib.Integers Make repr def
R92919:92921 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92909:92916 compcert.lib.Integers Make unsigned def
R92922:92929 compcert.lib.Integers Make unsigned def
R92877:92885 compcert.lib.Integers Make eqm_trans thm
R92893:92900 compcert.lib.Integers Make unsigned def
R92903:92906 compcert.lib.Integers Make repr def
R92919:92921 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92909:92916 compcert.lib.Integers Make unsigned def
R92922:92929 compcert.lib.Integers Make unsigned def
R92877:92885 compcert.lib.Integers Make eqm_trans thm
prf 93018:93030 Make translate_ltu
binder 93042:93042 <> x:715
binder 93044:93044 <> y:716
binder 93046:93046 <> d:717
R93095:93100 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R93145:93150 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R93174:93176 Coq.Init.Logic <> ::type_scope:x_'='_x not
R93151:93153 compcert.lib.Integers Make ltu def
R93166:93168 compcert.lib.Integers Make add def
R93172:93172 compcert.lib.Integers <> d:717 var
R93170:93170 compcert.lib.Integers <> y:716 var
R93156:93158 compcert.lib.Integers Make add def
R93162:93162 compcert.lib.Integers <> d:717 var
R93160:93160 compcert.lib.Integers <> x:715 var
R93177:93179 compcert.lib.Integers Make ltu def
R93183:93183 compcert.lib.Integers <> y:716 var
R93181:93181 compcert.lib.Integers <> x:715 var
R93102:93105 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93129:93132 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93116:93118 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93106:93113 compcert.lib.Integers Make unsigned def
R93115:93115 compcert.lib.Integers <> y:716 var
R93119:93126 compcert.lib.Integers Make unsigned def
R93128:93128 compcert.lib.Integers <> d:717 var
R93116:93118 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93106:93113 compcert.lib.Integers Make unsigned def
R93115:93115 compcert.lib.Integers <> y:716 var
R93119:93126 compcert.lib.Integers Make unsigned def
R93128:93128 compcert.lib.Integers <> d:717 var
R93133:93144 compcert.lib.Integers Make max_unsigned def
R93052:93055 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93079:93082 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93066:93068 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93056:93063 compcert.lib.Integers Make unsigned def
R93065:93065 compcert.lib.Integers <> x:715 var
R93069:93076 compcert.lib.Integers Make unsigned def
R93078:93078 compcert.lib.Integers <> d:717 var
R93066:93068 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93056:93063 compcert.lib.Integers Make unsigned def
R93065:93065 compcert.lib.Integers <> x:715 var
R93069:93076 compcert.lib.Integers Make unsigned def
R93078:93078 compcert.lib.Integers <> d:717 var
R93083:93094 compcert.lib.Integers Make max_unsigned def
R93210:93212 compcert.lib.Integers Make add def
R93222:93224 compcert.lib.Integers Make ltu def
R93244:93256 compcert.lib.Integers Make unsigned_repr thm
R93244:93256 compcert.lib.Integers Make unsigned_repr thm
R93244:93256 compcert.lib.Integers Make unsigned_repr thm
R93244:93256 compcert.lib.Integers Make unsigned_repr thm
R93244:93256 compcert.lib.Integers Make unsigned_repr thm
R93244:93256 compcert.lib.Integers Make unsigned_repr thm
R93244:93256 compcert.lib.Integers Make unsigned_repr thm
R93244:93256 compcert.lib.Integers Make unsigned_repr thm
R93244:93256 compcert.lib.Integers Make unsigned_repr thm
R93244:93256 compcert.lib.Integers Make unsigned_repr thm
R93271:93273 compcert.lib.Coqlib <> zlt def
R93289:93296 compcert.lib.Integers Make unsigned def
R93276:93283 compcert.lib.Integers Make unsigned def
R93271:93273 compcert.lib.Coqlib <> zlt def
R93289:93296 compcert.lib.Integers Make unsigned def
R93276:93283 compcert.lib.Integers Make unsigned def
R93318:93325 compcert.lib.Coqlib <> zlt_true thm
R93318:93325 compcert.lib.Coqlib <> zlt_true thm
R93343:93351 compcert.lib.Coqlib <> zlt_false thm
R93343:93351 compcert.lib.Coqlib <> zlt_false thm
prf 93375:93388 Make translate_cmpu
binder 93400:93400 <> c:718
binder 93402:93402 <> x:719
binder 93404:93404 <> y:720
binder 93406:93406 <> d:721
R93455:93460 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R93505:93510 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R93537:93539 Coq.Init.Logic <> ::type_scope:x_'='_x not
R93511:93514 compcert.lib.Integers Make cmpu def
R93529:93531 compcert.lib.Integers Make add def
R93535:93535 compcert.lib.Integers <> d:721 var
R93533:93533 compcert.lib.Integers <> y:720 var
R93519:93521 compcert.lib.Integers Make add def
R93525:93525 compcert.lib.Integers <> d:721 var
R93523:93523 compcert.lib.Integers <> x:719 var
R93516:93516 compcert.lib.Integers <> c:718 var
R93540:93543 compcert.lib.Integers Make cmpu def
R93549:93549 compcert.lib.Integers <> y:720 var
R93547:93547 compcert.lib.Integers <> x:719 var
R93545:93545 compcert.lib.Integers <> c:718 var
R93462:93465 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93489:93492 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93476:93478 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93466:93473 compcert.lib.Integers Make unsigned def
R93475:93475 compcert.lib.Integers <> y:720 var
R93479:93486 compcert.lib.Integers Make unsigned def
R93488:93488 compcert.lib.Integers <> d:721 var
R93476:93478 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93466:93473 compcert.lib.Integers Make unsigned def
R93475:93475 compcert.lib.Integers <> y:720 var
R93479:93486 compcert.lib.Integers Make unsigned def
R93488:93488 compcert.lib.Integers <> d:721 var
R93493:93504 compcert.lib.Integers Make max_unsigned def
R93412:93415 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93439:93442 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93426:93428 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93416:93423 compcert.lib.Integers Make unsigned def
R93425:93425 compcert.lib.Integers <> x:719 var
R93429:93436 compcert.lib.Integers Make unsigned def
R93438:93438 compcert.lib.Integers <> d:721 var
R93426:93428 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93416:93423 compcert.lib.Integers Make unsigned def
R93425:93425 compcert.lib.Integers <> x:719 var
R93429:93436 compcert.lib.Integers Make unsigned def
R93438:93438 compcert.lib.Integers <> d:721 var
R93443:93454 compcert.lib.Integers Make max_unsigned def
R93576:93579 compcert.lib.Integers Make cmpu def
R93592:93603 compcert.lib.Integers Make translate_eq thm
R93592:93603 compcert.lib.Integers Make translate_eq thm
R93592:93603 compcert.lib.Integers Make translate_eq thm
R93621:93633 compcert.lib.Integers Make translate_ltu thm
R93621:93633 compcert.lib.Integers Make translate_ltu thm
R93621:93633 compcert.lib.Integers Make translate_ltu thm
R93621:93633 compcert.lib.Integers Make translate_ltu thm
R93621:93633 compcert.lib.Integers Make translate_ltu thm
R93621:93633 compcert.lib.Integers Make translate_ltu thm
R93621:93633 compcert.lib.Integers Make translate_ltu thm
R93621:93633 compcert.lib.Integers Make translate_ltu thm
R93621:93633 compcert.lib.Integers Make translate_ltu thm
R93621:93633 compcert.lib.Integers Make translate_ltu thm
R93621:93633 compcert.lib.Integers Make translate_ltu thm
R93621:93633 compcert.lib.Integers Make translate_ltu thm
R93621:93633 compcert.lib.Integers Make translate_ltu thm
R93621:93633 compcert.lib.Integers Make translate_ltu thm
prf 93654:93665 Make translate_lt
binder 93677:93677 <> x:722
binder 93679:93679 <> y:723
binder 93681:93681 <> d:724
R93733:93738 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R93786:93791 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R93814:93816 Coq.Init.Logic <> ::type_scope:x_'='_x not
R93792:93793 compcert.lib.Integers Make lt def
R93806:93808 compcert.lib.Integers Make add def
R93812:93812 compcert.lib.Integers <> d:724 var
R93810:93810 compcert.lib.Integers <> y:723 var
R93796:93798 compcert.lib.Integers Make add def
R93802:93802 compcert.lib.Integers <> d:724 var
R93800:93800 compcert.lib.Integers <> x:722 var
R93817:93818 compcert.lib.Integers Make lt def
R93822:93822 compcert.lib.Integers <> y:723 var
R93820:93820 compcert.lib.Integers <> x:722 var
R93749:93752 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93772:93775 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93739:93748 compcert.lib.Integers Make min_signed def
R93761:93763 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93753:93758 compcert.lib.Integers Make signed def
R93760:93760 compcert.lib.Integers <> y:723 var
R93764:93769 compcert.lib.Integers Make signed def
R93771:93771 compcert.lib.Integers <> d:724 var
R93761:93763 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93753:93758 compcert.lib.Integers Make signed def
R93760:93760 compcert.lib.Integers <> y:723 var
R93764:93769 compcert.lib.Integers Make signed def
R93771:93771 compcert.lib.Integers <> d:724 var
R93776:93785 compcert.lib.Integers Make max_signed def
R93696:93699 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93719:93722 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93686:93695 compcert.lib.Integers Make min_signed def
R93708:93710 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93700:93705 compcert.lib.Integers Make signed def
R93707:93707 compcert.lib.Integers <> x:722 var
R93711:93716 compcert.lib.Integers Make signed def
R93718:93718 compcert.lib.Integers <> d:724 var
R93708:93710 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93700:93705 compcert.lib.Integers Make signed def
R93707:93707 compcert.lib.Integers <> x:722 var
R93711:93716 compcert.lib.Integers Make signed def
R93718:93718 compcert.lib.Integers <> d:724 var
R93723:93732 compcert.lib.Integers Make max_signed def
R93857:93866 compcert.lib.Integers Make add_signed thm
R93857:93866 compcert.lib.Integers Make add_signed thm
R93857:93866 compcert.lib.Integers Make add_signed thm
R93857:93866 compcert.lib.Integers Make add_signed thm
R93857:93866 compcert.lib.Integers Make add_signed thm
R93857:93866 compcert.lib.Integers Make add_signed thm
R93876:93877 compcert.lib.Integers Make lt def
R93897:93907 compcert.lib.Integers Make signed_repr thm
R93897:93907 compcert.lib.Integers Make signed_repr thm
R93897:93907 compcert.lib.Integers Make signed_repr thm
R93897:93907 compcert.lib.Integers Make signed_repr thm
R93897:93907 compcert.lib.Integers Make signed_repr thm
R93897:93907 compcert.lib.Integers Make signed_repr thm
R93897:93907 compcert.lib.Integers Make signed_repr thm
R93897:93907 compcert.lib.Integers Make signed_repr thm
R93897:93907 compcert.lib.Integers Make signed_repr thm
R93897:93907 compcert.lib.Integers Make signed_repr thm
R93922:93924 compcert.lib.Coqlib <> zlt def
R93938:93943 compcert.lib.Integers Make signed def
R93927:93932 compcert.lib.Integers Make signed def
R93922:93924 compcert.lib.Coqlib <> zlt def
R93938:93943 compcert.lib.Integers Make signed def
R93927:93932 compcert.lib.Integers Make signed def
R93965:93972 compcert.lib.Coqlib <> zlt_true thm
R93965:93972 compcert.lib.Coqlib <> zlt_true thm
R93990:93998 compcert.lib.Coqlib <> zlt_false thm
R93990:93998 compcert.lib.Coqlib <> zlt_false thm
prf 94022:94034 Make translate_cmp
binder 94046:94046 <> c:725
binder 94048:94048 <> x:726
binder 94050:94050 <> y:727
binder 94052:94052 <> d:728
R94104:94109 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R94157:94162 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R94188:94190 Coq.Init.Logic <> ::type_scope:x_'='_x not
R94163:94165 compcert.lib.Integers Make cmp def
R94180:94182 compcert.lib.Integers Make add def
R94186:94186 compcert.lib.Integers <> d:728 var
R94184:94184 compcert.lib.Integers <> y:727 var
R94170:94172 compcert.lib.Integers Make add def
R94176:94176 compcert.lib.Integers <> d:728 var
R94174:94174 compcert.lib.Integers <> x:726 var
R94167:94167 compcert.lib.Integers <> c:725 var
R94191:94193 compcert.lib.Integers Make cmp def
R94199:94199 compcert.lib.Integers <> y:727 var
R94197:94197 compcert.lib.Integers <> x:726 var
R94195:94195 compcert.lib.Integers <> c:725 var
R94120:94123 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R94143:94146 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R94110:94119 compcert.lib.Integers Make min_signed def
R94132:94134 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R94124:94129 compcert.lib.Integers Make signed def
R94131:94131 compcert.lib.Integers <> y:727 var
R94135:94140 compcert.lib.Integers Make signed def
R94142:94142 compcert.lib.Integers <> d:728 var
R94132:94134 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R94124:94129 compcert.lib.Integers Make signed def
R94131:94131 compcert.lib.Integers <> y:727 var
R94135:94140 compcert.lib.Integers Make signed def
R94142:94142 compcert.lib.Integers <> d:728 var
R94147:94156 compcert.lib.Integers Make max_signed def
R94067:94070 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R94090:94093 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R94057:94066 compcert.lib.Integers Make min_signed def
R94079:94081 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R94071:94076 compcert.lib.Integers Make signed def
R94078:94078 compcert.lib.Integers <> x:726 var
R94082:94087 compcert.lib.Integers Make signed def
R94089:94089 compcert.lib.Integers <> d:728 var
R94079:94081 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R94071:94076 compcert.lib.Integers Make signed def
R94078:94078 compcert.lib.Integers <> x:726 var
R94082:94087 compcert.lib.Integers Make signed def
R94089:94089 compcert.lib.Integers <> d:728 var
R94094:94103 compcert.lib.Integers Make max_signed def
R94226:94228 compcert.lib.Integers Make cmp def
R94241:94252 compcert.lib.Integers Make translate_eq thm
R94241:94252 compcert.lib.Integers Make translate_eq thm
R94241:94252 compcert.lib.Integers Make translate_eq thm
R94270:94281 compcert.lib.Integers Make translate_lt thm
R94270:94281 compcert.lib.Integers Make translate_lt thm
R94270:94281 compcert.lib.Integers Make translate_lt thm
R94270:94281 compcert.lib.Integers Make translate_lt thm
R94270:94281 compcert.lib.Integers Make translate_lt thm
R94270:94281 compcert.lib.Integers Make translate_lt thm
R94270:94281 compcert.lib.Integers Make translate_lt thm
R94270:94281 compcert.lib.Integers Make translate_lt thm
R94270:94281 compcert.lib.Integers Make translate_lt thm
R94270:94281 compcert.lib.Integers Make translate_lt thm
R94270:94281 compcert.lib.Integers Make translate_lt thm
R94270:94281 compcert.lib.Integers Make translate_lt thm
R94270:94281 compcert.lib.Integers Make translate_lt thm
R94270:94281 compcert.lib.Integers Make translate_lt thm
prf 94304:94325 Make notbool_isfalse_istrue
binder 94337:94337 <> x:729
R94350:94353 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R94354:94360 compcert.lib.Integers Make is_true def
R94363:94369 compcert.lib.Integers Make notbool def
R94371:94371 compcert.lib.Integers <> x:729 var
R94340:94347 compcert.lib.Integers Make is_false def
R94349:94349 compcert.lib.Integers <> x:729 var
R94391:94398 compcert.lib.Integers Make is_false def
R94401:94407 compcert.lib.Integers Make is_true def
R94410:94416 compcert.lib.Integers Make notbool def
R94446:94452 compcert.lib.Integers Make eq_true thm
R94446:94452 compcert.lib.Integers Make eq_true thm
R94446:94452 compcert.lib.Integers Make eq_true thm
R94461:94472 compcert.lib.Integers Make one_not_zero thm
R94461:94472 compcert.lib.Integers Make one_not_zero thm
prf 94489:94510 Make notbool_istrue_isfalse
binder 94522:94522 <> x:730
R94534:94537 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R94538:94545 compcert.lib.Integers Make is_false def
R94548:94554 compcert.lib.Integers Make notbool def
R94556:94556 compcert.lib.Integers <> x:730 var
R94525:94531 compcert.lib.Integers Make is_true def
R94533:94533 compcert.lib.Integers <> x:730 var
R94576:94583 compcert.lib.Integers Make is_false def
R94586:94592 compcert.lib.Integers Make is_true def
R94595:94601 compcert.lib.Integers Make notbool def
R94626:94632 compcert.lib.Integers Make eq_spec thm
R94636:94639 compcert.lib.Integers Make zero def
R94626:94632 compcert.lib.Integers Make eq_spec thm
R94636:94639 compcert.lib.Integers Make zero def
R94649:94650 compcert.lib.Integers Make eq def
R94654:94657 compcert.lib.Integers Make zero def
R94649:94650 compcert.lib.Integers Make eq def
R94654:94657 compcert.lib.Integers Make zero def
prf 94705:94718 Make ltu_range_test
binder 94730:94730 <> x:731
binder 94732:94732 <> y:732
R94751:94754 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R94779:94784 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R94786:94789 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R94798:94800 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R94790:94795 compcert.lib.Integers Make signed def
R94797:94797 compcert.lib.Integers <> x:731 var
R94790:94795 compcert.lib.Integers Make signed def
R94797:94797 compcert.lib.Integers <> x:731 var
R94801:94808 compcert.lib.Integers Make unsigned def
R94810:94810 compcert.lib.Integers <> y:732 var
R94765:94768 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R94755:94762 compcert.lib.Integers Make unsigned def
R94764:94764 compcert.lib.Integers <> y:732 var
R94769:94778 compcert.lib.Integers Make max_signed def
R94744:94746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R94737:94739 compcert.lib.Integers Make ltu def
R94743:94743 compcert.lib.Integers <> y:732 var
R94741:94741 compcert.lib.Integers <> x:731 var
R94747:94750 Coq.Init.Datatypes <> true constr
R94839:94841 compcert.lib.Integers Make ltu def
R94859:94861 compcert.lib.Coqlib <> zlt def
R94877:94884 compcert.lib.Integers Make unsigned def
R94864:94871 compcert.lib.Integers Make unsigned def
R94859:94861 compcert.lib.Coqlib <> zlt def
R94877:94884 compcert.lib.Integers Make unsigned def
R94864:94871 compcert.lib.Integers Make unsigned def
R94919:94936 compcert.lib.Integers Make signed_eq_unsigned thm
R94919:94936 compcert.lib.Integers Make signed_eq_unsigned thm
R94919:94936 compcert.lib.Integers Make signed_eq_unsigned thm
R94919:94936 compcert.lib.Integers Make signed_eq_unsigned thm
R94953:94966 compcert.lib.Integers Make unsigned_range thm
R94953:94966 compcert.lib.Integers Make unsigned_range thm
prf 95000:95014 Make lt_sub_overflow
binder 95026:95026 <> x:733
binder 95028:95028 <> y:734
R95081:95083 Coq.Init.Logic <> ::type_scope:x_'='_x not
R95033:95035 compcert.lib.Integers Make xor def
R95062:95069 compcert.lib.Integers Make negative def
R95072:95074 compcert.lib.Integers Make sub def
R95078:95078 compcert.lib.Integers <> y:734 var
R95076:95076 compcert.lib.Integers <> x:733 var
R95038:95049 compcert.lib.Integers Make sub_overflow def
R95055:95058 compcert.lib.Integers Make zero def
R95053:95053 compcert.lib.Integers <> y:734 var
R95051:95051 compcert.lib.Integers <> x:733 var
R95087:95088 compcert.lib.Integers Make lt def
R95092:95092 compcert.lib.Integers <> y:734 var
R95090:95090 compcert.lib.Integers <> x:733 var
R95108:95111 compcert.lib.Integers Make zero def
R95099:95101 compcert.lib.Integers Make one def
R95138:95145 compcert.lib.Integers Make negative def
R95148:95159 compcert.lib.Integers Make sub_overflow def
R95162:95163 compcert.lib.Integers Make lt def
R95174:95183 compcert.lib.Integers Make sub_signed thm
R95174:95183 compcert.lib.Integers Make sub_signed thm
R95174:95183 compcert.lib.Integers Make sub_signed thm
R95196:95206 compcert.lib.Integers Make signed_zero thm
R95196:95206 compcert.lib.Integers Make signed_zero thm
R95196:95206 compcert.lib.Integers Make signed_zero thm
R95217:95225 Coq.ZArith.BinInt Z sub_0_r thm
R95217:95225 Coq.ZArith.BinInt Z sub_0_r thm
R95217:95225 Coq.ZArith.BinInt Z sub_0_r thm
R95242:95253 compcert.lib.Integers Make signed_range thm
R95259:95270 compcert.lib.Integers Make signed_range thm
R95242:95253 compcert.lib.Integers Make signed_range thm
R95259:95270 compcert.lib.Integers Make signed_range thm
R95288:95293 compcert.lib.Integers Make signed def
R95309:95314 compcert.lib.Integers Make signed def
R95288:95293 compcert.lib.Integers Make signed def
R95309:95314 compcert.lib.Integers Make signed def
R95343:95352 compcert.lib.Integers Make min_signed def
R95355:95364 compcert.lib.Integers Make max_signed def
R95385:95400 compcert.lib.Integers Make half_modulus_pos thm
R95402:95421 compcert.lib.Integers Make half_modulus_modulus thm
R95385:95400 compcert.lib.Integers Make half_modulus_pos thm
R95402:95421 compcert.lib.Integers Make half_modulus_modulus thm
R95450:95452 compcert.lib.Coqlib <> zle def
R95458:95460 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95450:95452 compcert.lib.Coqlib <> zle def
R95458:95460 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95475:95486 compcert.lib.Coqlib <> proj_sumbool def
R95502:95509 compcert.lib.Coqlib <> zle_true thm
R95502:95509 compcert.lib.Coqlib <> zle_true thm
R95502:95509 compcert.lib.Coqlib <> zle_true thm
R95544:95552 compcert.lib.Coqlib <> zlt_false thm
R95544:95552 compcert.lib.Coqlib <> zlt_false thm
R95544:95552 compcert.lib.Coqlib <> zlt_false thm
R95581:95583 compcert.lib.Coqlib <> zlt def
R95593:95604 compcert.lib.Integers Make half_modulus def
R95587:95589 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95581:95583 compcert.lib.Coqlib <> zlt def
R95593:95604 compcert.lib.Integers Make half_modulus def
R95587:95589 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95619:95630 compcert.lib.Coqlib <> proj_sumbool def
R95641:95648 compcert.lib.Coqlib <> zle_true thm
R95641:95648 compcert.lib.Coqlib <> zle_true thm
R95641:95648 compcert.lib.Coqlib <> zle_true thm
R95672:95682 compcert.lib.Integers Make signed_repr thm
R95672:95682 compcert.lib.Integers Make signed_repr thm
R95672:95682 compcert.lib.Integers Make signed_repr thm
R95672:95682 compcert.lib.Integers Make signed_repr thm
R95693:95701 compcert.lib.Coqlib <> zlt_false thm
R95693:95701 compcert.lib.Coqlib <> zlt_false thm
R95693:95701 compcert.lib.Coqlib <> zlt_false thm
R95719:95726 compcert.lib.Integers Make xor_idem thm
R95719:95726 compcert.lib.Integers Make xor_idem thm
R95740:95749 compcert.lib.Integers Make min_signed def
R95752:95761 compcert.lib.Integers Make max_signed def
R95782:95793 compcert.lib.Coqlib <> proj_sumbool def
R95804:95812 compcert.lib.Coqlib <> zle_false thm
R95804:95812 compcert.lib.Coqlib <> zle_false thm
R95804:95812 compcert.lib.Coqlib <> zle_false thm
R95837:95842 compcert.lib.Integers Make signed def
R95845:95848 compcert.lib.Integers Make repr def
R95852:95854 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95871:95873 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95867:95869 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95874:95880 compcert.lib.Integers Make modulus def
R95837:95842 compcert.lib.Integers Make signed def
R95845:95848 compcert.lib.Integers Make repr def
R95852:95854 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95871:95873 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95867:95869 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95874:95880 compcert.lib.Integers Make modulus def
R95896:95903 compcert.lib.Coqlib <> zlt_true thm
R95896:95903 compcert.lib.Coqlib <> zlt_true thm
R95896:95903 compcert.lib.Coqlib <> zlt_true thm
R95921:95928 compcert.lib.Integers Make xor_idem thm
R95921:95928 compcert.lib.Integers Make xor_idem thm
R95943:95956 compcert.lib.Integers Make signed_repr_eq thm
R95943:95956 compcert.lib.Integers Make signed_repr_eq thm
R95943:95956 compcert.lib.Integers Make signed_repr_eq thm
R95968:95968 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R95974:95979 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R95970:95972 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95980:95986 compcert.lib.Integers Make modulus def
R95996:95998 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95968:95968 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R95974:95979 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R95970:95972 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95980:95986 compcert.lib.Integers Make modulus def
R95996:95998 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R96015:96023 compcert.lib.Coqlib <> zlt_false thm
R96015:96023 compcert.lib.Coqlib <> zlt_false thm
R96015:96023 compcert.lib.Coqlib <> zlt_false thm
R96015:96023 compcert.lib.Coqlib <> zlt_false thm
R96052:96062 compcert.lib.Coqlib <> Zmod_unique thm
R96052:96062 compcert.lib.Coqlib <> Zmod_unique thm
R96088:96099 compcert.lib.Coqlib <> proj_sumbool def
R96115:96122 compcert.lib.Coqlib <> zle_true thm
R96115:96122 compcert.lib.Coqlib <> zle_true thm
R96115:96122 compcert.lib.Coqlib <> zle_true thm
R96147:96157 Coq.Bool.Bool <> andb_true_r thm
R96147:96157 Coq.Bool.Bool <> andb_true_r thm
R96147:96157 Coq.Bool.Bool <> andb_true_r thm
R96171:96178 compcert.lib.Coqlib <> zlt_true thm
R96171:96178 compcert.lib.Coqlib <> zlt_true thm
R96171:96178 compcert.lib.Coqlib <> zlt_true thm
R96207:96209 compcert.lib.Coqlib <> zlt def
R96220:96220 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R96221:96232 compcert.lib.Integers Make half_modulus def
R96213:96215 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R96207:96209 compcert.lib.Coqlib <> zlt def
R96220:96220 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R96221:96232 compcert.lib.Integers Make half_modulus def
R96213:96215 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R96248:96259 compcert.lib.Coqlib <> proj_sumbool def
R96270:96278 compcert.lib.Coqlib <> zle_false thm
R96270:96278 compcert.lib.Coqlib <> zle_false thm
R96270:96278 compcert.lib.Coqlib <> zle_false thm
R96303:96308 compcert.lib.Integers Make signed def
R96311:96314 compcert.lib.Integers Make repr def
R96318:96320 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R96337:96339 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R96333:96335 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R96340:96346 compcert.lib.Integers Make modulus def
R96303:96308 compcert.lib.Integers Make signed def
R96311:96314 compcert.lib.Integers Make repr def
R96318:96320 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R96337:96339 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R96333:96335 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R96340:96346 compcert.lib.Integers Make modulus def
R96362:96370 compcert.lib.Coqlib <> zlt_false thm
R96362:96370 compcert.lib.Coqlib <> zlt_false thm
R96362:96370 compcert.lib.Coqlib <> zlt_false thm
R96388:96395 compcert.lib.Integers Make xor_zero thm
R96388:96395 compcert.lib.Integers Make xor_zero thm
R96410:96423 compcert.lib.Integers Make signed_repr_eq thm
R96410:96423 compcert.lib.Integers Make signed_repr_eq thm
R96410:96423 compcert.lib.Integers Make signed_repr_eq thm
R96435:96435 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R96441:96446 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R96437:96439 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R96447:96453 compcert.lib.Integers Make modulus def
R96467:96469 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R96463:96465 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R96470:96476 compcert.lib.Integers Make modulus def
R96435:96435 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R96441:96446 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R96437:96439 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R96447:96453 compcert.lib.Integers Make modulus def
R96467:96469 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R96463:96465 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R96470:96476 compcert.lib.Integers Make modulus def
R96492:96499 compcert.lib.Coqlib <> zlt_true thm
R96492:96499 compcert.lib.Coqlib <> zlt_true thm
R96492:96499 compcert.lib.Coqlib <> zlt_true thm
R96537:96547 compcert.lib.Coqlib <> Zmod_unique thm
R96537:96547 compcert.lib.Coqlib <> Zmod_unique thm
R96578:96589 compcert.lib.Coqlib <> proj_sumbool def
R96600:96607 compcert.lib.Coqlib <> zle_true thm
R96600:96607 compcert.lib.Coqlib <> zle_true thm
R96600:96607 compcert.lib.Coqlib <> zle_true thm
R96631:96641 compcert.lib.Integers Make signed_repr thm
R96631:96641 compcert.lib.Integers Make signed_repr thm
R96631:96641 compcert.lib.Integers Make signed_repr thm
R96631:96641 compcert.lib.Integers Make signed_repr thm
R96652:96659 compcert.lib.Coqlib <> zlt_true thm
R96652:96659 compcert.lib.Coqlib <> zlt_true thm
R96652:96659 compcert.lib.Coqlib <> zlt_true thm
R96677:96686 compcert.lib.Integers Make xor_zero_l thm
R96677:96686 compcert.lib.Integers Make xor_zero_l thm
R96700:96709 compcert.lib.Integers Make min_signed def
R96712:96721 compcert.lib.Integers Make max_signed def
prf 96743:96751 Make signed_eq
binder 96763:96763 <> x:735
binder 96765:96765 <> y:736
R96774:96776 Coq.Init.Logic <> ::type_scope:x_'='_x not
R96768:96769 compcert.lib.Integers Make eq def
R96773:96773 compcert.lib.Integers <> y:736 var
R96771:96771 compcert.lib.Integers <> x:735 var
R96777:96779 compcert.lib.Coqlib <> zeq def
R96793:96798 compcert.lib.Integers Make signed def
R96800:96800 compcert.lib.Integers <> y:736 var
R96782:96787 compcert.lib.Integers Make signed def
R96789:96789 compcert.lib.Integers <> x:735 var
R96828:96829 compcert.lib.Integers Make eq def
R96839:96850 compcert.lib.Coqlib <> proj_sumbool def
R96865:96867 compcert.lib.Coqlib <> zeq def
R96883:96890 compcert.lib.Integers Make unsigned def
R96870:96877 compcert.lib.Integers Make unsigned def
R96909:96911 compcert.lib.Coqlib <> zeq def
R96925:96930 compcert.lib.Integers Make signed def
R96914:96919 compcert.lib.Integers Make signed def
R96865:96867 compcert.lib.Coqlib <> zeq def
R96883:96890 compcert.lib.Integers Make unsigned def
R96870:96877 compcert.lib.Integers Make unsigned def
R96909:96911 compcert.lib.Coqlib <> zeq def
R96925:96930 compcert.lib.Integers Make signed def
R96914:96919 compcert.lib.Integers Make signed def
R96909:96911 compcert.lib.Coqlib <> zeq def
R96925:96930 compcert.lib.Integers Make signed def
R96914:96919 compcert.lib.Integers Make signed def
R96960:96965 compcert.lib.Integers Make signed def
R97001:97012 compcert.lib.Integers Make eqm_small_eq thm
R97001:97012 compcert.lib.Integers Make eqm_small_eq thm
R97040:97048 compcert.lib.Integers Make eqm_trans thm
R97040:97048 compcert.lib.Integers Make eqm_trans thm
R97057:97063 compcert.lib.Integers Make eqm_sym thm
R97057:97063 compcert.lib.Integers Make eqm_sym thm
R97072:97090 compcert.lib.Integers Make eqm_signed_unsigned thm
R97072:97090 compcert.lib.Integers Make eqm_signed_unsigned thm
R97112:97130 compcert.lib.Integers Make eqm_signed_unsigned thm
R97112:97130 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 97145:97150 Make not_lt
binder 97162:97162 <> x:737
binder 97164:97164 <> y:738
R97180:97183 Coq.Init.Logic <> ::type_scope:x_'='_x not
R97200:97200 Coq.Init.Logic <> ::type_scope:x_'='_x not
R97167:97170 Coq.Init.Datatypes <> negb def
R97173:97174 compcert.lib.Integers Make lt def
R97178:97178 compcert.lib.Integers <> x:737 var
R97176:97176 compcert.lib.Integers <> y:738 var
R97190:97193 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R97184:97185 compcert.lib.Integers Make lt def
R97189:97189 compcert.lib.Integers <> y:738 var
R97187:97187 compcert.lib.Integers <> x:737 var
R97194:97195 compcert.lib.Integers Make eq def
R97199:97199 compcert.lib.Integers <> y:738 var
R97197:97197 compcert.lib.Integers <> x:737 var
R97227:97228 compcert.lib.Integers Make lt def
R97239:97247 compcert.lib.Integers Make signed_eq thm
R97239:97247 compcert.lib.Integers Make signed_eq thm
R97239:97247 compcert.lib.Integers Make signed_eq thm
R97257:97268 compcert.lib.Coqlib <> proj_sumbool def
R97283:97285 compcert.lib.Coqlib <> zlt def
R97299:97304 compcert.lib.Integers Make signed def
R97288:97293 compcert.lib.Integers Make signed def
R97283:97285 compcert.lib.Coqlib <> zlt def
R97299:97304 compcert.lib.Integers Make signed def
R97288:97293 compcert.lib.Integers Make signed def
R97321:97329 compcert.lib.Coqlib <> zlt_false thm
R97321:97329 compcert.lib.Coqlib <> zlt_false thm
R97321:97329 compcert.lib.Coqlib <> zlt_false thm
R97321:97329 compcert.lib.Coqlib <> zlt_false thm
R97340:97348 compcert.lib.Coqlib <> zeq_false thm
R97340:97348 compcert.lib.Coqlib <> zeq_false thm
R97340:97348 compcert.lib.Coqlib <> zeq_false thm
R97340:97348 compcert.lib.Coqlib <> zeq_false thm
R97383:97385 compcert.lib.Coqlib <> zeq def
R97399:97404 compcert.lib.Integers Make signed def
R97388:97393 compcert.lib.Integers Make signed def
R97383:97385 compcert.lib.Coqlib <> zeq def
R97399:97404 compcert.lib.Integers Make signed def
R97388:97393 compcert.lib.Integers Make signed def
R97421:97429 compcert.lib.Coqlib <> zlt_false thm
R97421:97429 compcert.lib.Coqlib <> zlt_false thm
R97421:97429 compcert.lib.Coqlib <> zlt_false thm
R97421:97429 compcert.lib.Coqlib <> zlt_false thm
R97455:97462 compcert.lib.Coqlib <> zlt_true thm
R97455:97462 compcert.lib.Coqlib <> zlt_true thm
R97455:97462 compcert.lib.Coqlib <> zlt_true thm
R97455:97462 compcert.lib.Coqlib <> zlt_true thm
prf 97490:97495 Make lt_not
binder 97507:97507 <> x:739
binder 97509:97509 <> y:740
R97518:97520 Coq.Init.Logic <> ::type_scope:x_'='_x not
R97512:97513 compcert.lib.Integers Make lt def
R97517:97517 compcert.lib.Integers <> x:739 var
R97515:97515 compcert.lib.Integers <> y:740 var
R97534:97537 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R97521:97524 Coq.Init.Datatypes <> negb def
R97527:97528 compcert.lib.Integers Make lt def
R97532:97532 compcert.lib.Integers <> y:740 var
R97530:97530 compcert.lib.Integers <> x:739 var
R97538:97541 Coq.Init.Datatypes <> negb def
R97544:97545 compcert.lib.Integers Make eq def
R97549:97549 compcert.lib.Integers <> y:740 var
R97547:97547 compcert.lib.Integers <> x:739 var
R97581:97588 Coq.Bool.Bool <> negb_orb thm
R97581:97588 Coq.Bool.Bool <> negb_orb thm
R97581:97588 Coq.Bool.Bool <> negb_orb thm
R97602:97607 compcert.lib.Integers Make not_lt thm
R97602:97607 compcert.lib.Integers Make not_lt thm
R97602:97607 compcert.lib.Integers Make not_lt thm
R97618:97632 Coq.Bool.Bool <> negb_involutive thm
R97618:97632 Coq.Bool.Bool <> negb_involutive thm
R97618:97632 Coq.Bool.Bool <> negb_involutive thm
prf 97653:97659 Make not_ltu
binder 97671:97671 <> x:741
binder 97673:97673 <> y:742
R97690:97693 Coq.Init.Logic <> ::type_scope:x_'='_x not
R97711:97711 Coq.Init.Logic <> ::type_scope:x_'='_x not
R97676:97679 Coq.Init.Datatypes <> negb def
R97682:97684 compcert.lib.Integers Make ltu def
R97688:97688 compcert.lib.Integers <> x:741 var
R97686:97686 compcert.lib.Integers <> y:742 var
R97701:97704 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R97694:97696 compcert.lib.Integers Make ltu def
R97700:97700 compcert.lib.Integers <> y:742 var
R97698:97698 compcert.lib.Integers <> x:741 var
R97705:97706 compcert.lib.Integers Make eq def
R97710:97710 compcert.lib.Integers <> y:742 var
R97708:97708 compcert.lib.Integers <> x:741 var
R97738:97740 compcert.lib.Integers Make ltu def
R97743:97744 compcert.lib.Integers Make eq def
R97759:97761 compcert.lib.Coqlib <> zlt def
R97777:97784 compcert.lib.Integers Make unsigned def
R97764:97771 compcert.lib.Integers Make unsigned def
R97759:97761 compcert.lib.Coqlib <> zlt def
R97777:97784 compcert.lib.Integers Make unsigned def
R97764:97771 compcert.lib.Integers Make unsigned def
R97801:97809 compcert.lib.Coqlib <> zlt_false thm
R97801:97809 compcert.lib.Coqlib <> zlt_false thm
R97801:97809 compcert.lib.Coqlib <> zlt_false thm
R97801:97809 compcert.lib.Coqlib <> zlt_false thm
R97820:97828 compcert.lib.Coqlib <> zeq_false thm
R97820:97828 compcert.lib.Coqlib <> zeq_false thm
R97820:97828 compcert.lib.Coqlib <> zeq_false thm
R97820:97828 compcert.lib.Coqlib <> zeq_false thm
R97863:97865 compcert.lib.Coqlib <> zeq def
R97881:97888 compcert.lib.Integers Make unsigned def
R97868:97875 compcert.lib.Integers Make unsigned def
R97863:97865 compcert.lib.Coqlib <> zeq def
R97881:97888 compcert.lib.Integers Make unsigned def
R97868:97875 compcert.lib.Integers Make unsigned def
R97905:97913 compcert.lib.Coqlib <> zlt_false thm
R97905:97913 compcert.lib.Coqlib <> zlt_false thm
R97905:97913 compcert.lib.Coqlib <> zlt_false thm
R97905:97913 compcert.lib.Coqlib <> zlt_false thm
R97939:97946 compcert.lib.Coqlib <> zlt_true thm
R97939:97946 compcert.lib.Coqlib <> zlt_true thm
R97939:97946 compcert.lib.Coqlib <> zlt_true thm
R97939:97946 compcert.lib.Coqlib <> zlt_true thm
prf 97974:97980 Make ltu_not
binder 97992:97992 <> x:743
binder 97994:97994 <> y:744
R98004:98006 Coq.Init.Logic <> ::type_scope:x_'='_x not
R97997:97999 compcert.lib.Integers Make ltu def
R98003:98003 compcert.lib.Integers <> x:743 var
R98001:98001 compcert.lib.Integers <> y:744 var
R98021:98024 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R98007:98010 Coq.Init.Datatypes <> negb def
R98013:98015 compcert.lib.Integers Make ltu def
R98019:98019 compcert.lib.Integers <> y:744 var
R98017:98017 compcert.lib.Integers <> x:743 var
R98025:98028 Coq.Init.Datatypes <> negb def
R98031:98032 compcert.lib.Integers Make eq def
R98036:98036 compcert.lib.Integers <> y:744 var
R98034:98034 compcert.lib.Integers <> x:743 var
R98068:98075 Coq.Bool.Bool <> negb_orb thm
R98068:98075 Coq.Bool.Bool <> negb_orb thm
R98068:98075 Coq.Bool.Bool <> negb_orb thm
R98089:98095 compcert.lib.Integers Make not_ltu thm
R98089:98095 compcert.lib.Integers Make not_ltu thm
R98089:98095 compcert.lib.Integers Make not_ltu thm
R98106:98120 Coq.Bool.Bool <> negb_involutive thm
R98106:98120 Coq.Bool.Bool <> negb_involutive thm
R98106:98120 Coq.Bool.Bool <> negb_involutive thm
def 98178:98187 Make no_overlap
R98196:98198 compcert.lib.Integers Make int rec
binder 98190:98193 <> ofs1:745
R98207:98207 Coq.Numbers.BinNums <> Z ind
binder 98202:98204 <> sz1:746
R98217:98219 compcert.lib.Integers Make int rec
binder 98211:98214 <> ofs2:747
R98228:98228 Coq.Numbers.BinNums <> Z ind
binder 98223:98225 <> sz2:748
R98233:98236 Coq.Init.Datatypes <> bool ind
R98253:98260 compcert.lib.Integers Make unsigned def
R98262:98265 compcert.lib.Integers <> ofs1:745 var
binder 98247:98248 <> x1:749
R98280:98287 compcert.lib.Integers Make unsigned def
R98289:98292 compcert.lib.Integers <> ofs2:747 var
binder 98274:98275 <> x2:750
R98350:98356 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R98395:98395 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R98324:98327 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R98302:98304 compcert.lib.Coqlib <> zlt def
R98317:98323 compcert.lib.Integers Make modulus def
R98309:98311 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R98307:98308 compcert.lib.Integers <> x1:749 var
R98312:98314 compcert.lib.Integers <> sz1:746 var
R98328:98330 compcert.lib.Coqlib <> zlt def
R98343:98349 compcert.lib.Integers Make modulus def
R98335:98337 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R98333:98334 compcert.lib.Integers <> x2:750 var
R98338:98340 compcert.lib.Integers <> sz2:748 var
R98374:98377 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R98357:98359 compcert.lib.Coqlib <> zle def
R98372:98373 compcert.lib.Integers <> x2:750 var
R98364:98366 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R98362:98363 compcert.lib.Integers <> x1:749 var
R98367:98369 compcert.lib.Integers <> sz1:746 var
R98378:98380 compcert.lib.Coqlib <> zle def
R98393:98394 compcert.lib.Integers <> x1:749 var
R98385:98387 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R98383:98384 compcert.lib.Integers <> x2:750 var
R98388:98390 compcert.lib.Integers <> sz2:748 var
prf 98405:98420 Make no_overlap_sound
binder 98432:98435 <> ofs1:751
binder 98437:98439 <> sz1:752
binder 98441:98444 <> ofs2:753
binder 98446:98448 <> sz2:754
binder 98450:98453 <> base:755
R98465:98468 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R98476:98479 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R98515:98520 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R98579:98584 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R98551:98554 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R98545:98547 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R98521:98528 compcert.lib.Integers Make unsigned def
R98531:98533 compcert.lib.Integers Make add def
R98540:98543 compcert.lib.Integers <> ofs1:751 var
R98535:98538 compcert.lib.Integers <> base:755 var
R98548:98550 compcert.lib.Integers <> sz1:752 var
R98555:98562 compcert.lib.Integers Make unsigned def
R98565:98567 compcert.lib.Integers Make add def
R98574:98577 compcert.lib.Integers <> ofs2:753 var
R98569:98572 compcert.lib.Integers <> base:755 var
R98615:98618 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R98609:98611 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R98585:98592 compcert.lib.Integers Make unsigned def
R98595:98597 compcert.lib.Integers Make add def
R98604:98607 compcert.lib.Integers <> ofs2:753 var
R98599:98602 compcert.lib.Integers <> base:755 var
R98612:98614 compcert.lib.Integers <> sz2:754 var
R98619:98626 compcert.lib.Integers Make unsigned def
R98629:98631 compcert.lib.Integers Make add def
R98638:98641 compcert.lib.Integers <> ofs1:751 var
R98633:98636 compcert.lib.Integers <> base:755 var
R98508:98510 Coq.Init.Logic <> ::type_scope:x_'='_x not
R98480:98489 compcert.lib.Integers Make no_overlap def
R98505:98507 compcert.lib.Integers <> sz2:754 var
R98500:98503 compcert.lib.Integers <> ofs2:753 var
R98496:98498 compcert.lib.Integers <> sz1:752 var
R98491:98494 compcert.lib.Integers <> ofs1:751 var
R98511:98514 Coq.Init.Datatypes <> true constr
R98472:98474 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R98469:98471 compcert.lib.Integers <> sz2:754 var
R98461:98463 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R98458:98460 compcert.lib.Integers <> sz1:752 var
R98674:98682 Coq.Init.Datatypes <> andb_prop thm
R98674:98682 Coq.Init.Datatypes <> andb_prop thm
R98715:98723 Coq.Init.Datatypes <> andb_prop thm
R98715:98723 Coq.Init.Datatypes <> andb_prop thm
R98752:98768 compcert.lib.Coqlib <> proj_sumbool_true thm
R98752:98768 compcert.lib.Coqlib <> proj_sumbool_true thm
R98785:98801 compcert.lib.Coqlib <> proj_sumbool_true thm
R98785:98801 compcert.lib.Coqlib <> proj_sumbool_true thm
R98856:98859 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R98839:98842 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R98833:98835 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R98820:98827 compcert.lib.Integers Make unsigned def
R98843:98850 compcert.lib.Integers Make unsigned def
R98879:98882 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R98873:98875 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R98860:98867 compcert.lib.Integers Make unsigned def
R98883:98890 compcert.lib.Integers Make unsigned def
R98856:98859 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R98839:98842 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R98833:98835 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R98820:98827 compcert.lib.Integers Make unsigned def
R98843:98850 compcert.lib.Integers Make unsigned def
R98879:98882 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R98873:98875 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R98860:98867 compcert.lib.Integers Make unsigned def
R98883:98890 compcert.lib.Integers Make unsigned def
R98911:98918 Coq.Bool.Bool <> orb_prop thm
R98911:98918 Coq.Bool.Bool <> orb_prop thm
R98942:98958 compcert.lib.Coqlib <> proj_sumbool_true thm
R98942:98958 compcert.lib.Coqlib <> proj_sumbool_true thm
R98982:98998 compcert.lib.Coqlib <> proj_sumbool_true thm
R98982:98998 compcert.lib.Coqlib <> proj_sumbool_true thm
R99034:99047 compcert.lib.Integers Make unsigned_range thm
R99056:99069 compcert.lib.Integers Make unsigned_range thm
R99034:99047 compcert.lib.Integers Make unsigned_range thm
R99056:99069 compcert.lib.Integers Make unsigned_range thm
R99104:99122 compcert.lib.Integers Make unsigned_add_either thm
R99136:99154 compcert.lib.Integers Make unsigned_add_either thm
R99104:99122 compcert.lib.Integers Make unsigned_add_either thm
R99136:99154 compcert.lib.Integers Make unsigned_add_either thm
def 99252:99255 Make size
R99261:99263 compcert.lib.Integers Make int rec
binder 99258:99258 <> x:756
R99268:99268 Coq.Numbers.BinNums <> Z ind
R99273:99277 compcert.lib.Zbits <> Zsize def
R99280:99287 compcert.lib.Integers Make unsigned def
R99289:99289 compcert.lib.Integers <> x:756 var
prf 99302:99310 Make size_zero
R99322:99324 Coq.Init.Logic <> ::type_scope:x_'='_x not
R99313:99316 compcert.lib.Integers Make size def
R99318:99321 compcert.lib.Integers Make zero def
R99344:99347 compcert.lib.Integers Make size def
R99358:99370 compcert.lib.Integers Make unsigned_zero thm
R99358:99370 compcert.lib.Integers Make unsigned_zero thm
R99358:99370 compcert.lib.Integers Make unsigned_zero thm
prf 99393:99403 Make bits_size_1
binder 99415:99415 <> x:757
R99426:99429 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R99419:99421 Coq.Init.Logic <> ::type_scope:x_'='_x not
R99418:99418 compcert.lib.Integers <> x:757 var
R99422:99425 compcert.lib.Integers Make zero def
R99457:99459 Coq.Init.Logic <> ::type_scope:x_'='_x not
R99430:99436 compcert.lib.Integers Make testbit def
R99441:99446 Coq.ZArith.BinInt Z pred def
R99449:99452 compcert.lib.Integers Make size def
R99454:99454 compcert.lib.Integers <> x:757 var
R99438:99438 compcert.lib.Integers <> x:757 var
R99460:99463 Coq.Init.Datatypes <> true constr
R99493:99495 compcert.lib.Coqlib <> zeq def
R99498:99505 compcert.lib.Integers Make unsigned def
R99493:99495 compcert.lib.Coqlib <> zeq def
R99498:99505 compcert.lib.Integers Make unsigned def
R99534:99546 compcert.lib.Integers Make repr_unsigned thm
R99534:99546 compcert.lib.Integers Make repr_unsigned thm
R99534:99546 compcert.lib.Integers Make repr_unsigned thm
R99584:99598 compcert.lib.Zbits <> Ztestbit_size_1 thm
R99584:99598 compcert.lib.Zbits <> Ztestbit_size_1 thm
R99613:99626 compcert.lib.Integers Make unsigned_range thm
R99613:99626 compcert.lib.Integers Make unsigned_range thm
prf 99653:99663 Make bits_size_2
binder 99675:99675 <> x:758
binder 99677:99677 <> i:759
R99691:99694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R99706:99708 Coq.Init.Logic <> ::type_scope:x_'='_x not
R99695:99701 compcert.lib.Integers Make testbit def
R99705:99705 compcert.lib.Integers <> i:759 var
R99703:99703 compcert.lib.Integers <> x:758 var
R99709:99713 Coq.Init.Datatypes <> false constr
R99686:99689 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R99680:99683 compcert.lib.Integers Make size def
R99685:99685 compcert.lib.Integers <> x:758 var
R99690:99690 compcert.lib.Integers <> i:759 var
R99739:99753 compcert.lib.Zbits <> Ztestbit_size_2 thm
R99739:99753 compcert.lib.Zbits <> Ztestbit_size_2 thm
R99768:99781 compcert.lib.Integers Make unsigned_range thm
R99768:99781 compcert.lib.Integers Make unsigned_range thm
R99802:99805 compcert.lib.Integers Make size def
R99802:99805 compcert.lib.Integers Make size def
prf 99832:99841 Make size_range
binder 99853:99853 <> x:760
R99857:99860 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R99867:99870 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R99861:99864 compcert.lib.Integers Make size def
R99866:99866 compcert.lib.Integers <> x:760 var
R99861:99864 compcert.lib.Integers Make size def
R99866:99866 compcert.lib.Integers <> x:760 var
R99871:99879 compcert.lib.Integers Make zwordsize def
R99912:99920 compcert.lib.Zbits <> Zsize_pos thm
R99912:99920 compcert.lib.Zbits <> Zsize_pos thm
R99935:99945 compcert.lib.Integers Make bits_size_1 thm
R99935:99945 compcert.lib.Integers Make bits_size_1 thm
R99969:99972 compcert.lib.Integers Make size def
R99983:99995 compcert.lib.Integers Make unsigned_zero thm
R99983:99995 compcert.lib.Integers Make unsigned_zero thm
R99983:99995 compcert.lib.Integers Make unsigned_zero thm
R100016:100027 compcert.lib.Integers Make wordsize_pos thm
R100016:100027 compcert.lib.Integers Make wordsize_pos thm
R100049:100051 compcert.lib.Coqlib <> zle def
R100062:100070 compcert.lib.Integers Make zwordsize def
R100054:100057 compcert.lib.Integers Make size def
R100049:100051 compcert.lib.Coqlib <> zle def
R100062:100070 compcert.lib.Integers Make zwordsize def
R100054:100057 compcert.lib.Integers Make size def
R100090:100099 compcert.lib.Integers Make bits_above thm
R100090:100099 compcert.lib.Integers Make bits_above thm
R100090:100099 compcert.lib.Integers Make bits_above thm
R100090:100099 compcert.lib.Integers Make bits_above thm
prf 100140:100150 Make bits_size_3
binder 100162:100162 <> x:761
binder 100164:100164 <> n:762
R100175:100180 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R100181:100181 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R100233:100239 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R100246:100249 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R100240:100243 compcert.lib.Integers Make size def
R100245:100245 compcert.lib.Integers <> x:761 var
R100250:100250 compcert.lib.Integers <> n:762 var
binder 100189:100189 <> i:763
R100210:100213 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R100225:100227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R100214:100220 compcert.lib.Integers Make testbit def
R100224:100224 compcert.lib.Integers <> i:763 var
R100222:100222 compcert.lib.Integers <> x:761 var
R100228:100232 Coq.Init.Datatypes <> false constr
R100193:100196 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R100198:100200 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R100192:100192 compcert.lib.Integers <> n:762 var
R100197:100197 compcert.lib.Integers <> i:763 var
R100197:100197 compcert.lib.Integers <> i:763 var
R100201:100209 compcert.lib.Integers Make zwordsize def
R100170:100173 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R100174:100174 compcert.lib.Integers <> n:762 var
R100280:100282 compcert.lib.Coqlib <> zle def
R100285:100288 compcert.lib.Integers Make size def
R100280:100282 compcert.lib.Coqlib <> zle def
R100285:100288 compcert.lib.Integers Make size def
R100315:100325 compcert.lib.Integers Make bits_size_1 thm
R100315:100325 compcert.lib.Integers Make bits_size_1 thm
R100349:100352 compcert.lib.Integers Make size def
R100363:100375 compcert.lib.Integers Make unsigned_zero thm
R100363:100375 compcert.lib.Integers Make unsigned_zero thm
R100363:100375 compcert.lib.Integers Make unsigned_zero thm
R100405:100410 Coq.ZArith.BinInt Z pred def
R100413:100416 compcert.lib.Integers Make size def
R100405:100410 Coq.ZArith.BinInt Z pred def
R100413:100416 compcert.lib.Integers Make size def
R100405:100410 Coq.ZArith.BinInt Z pred def
R100413:100416 compcert.lib.Integers Make size def
R100405:100410 Coq.ZArith.BinInt Z pred def
R100413:100416 compcert.lib.Integers Make size def
R100456:100465 compcert.lib.Integers Make size_range thm
R100456:100465 compcert.lib.Integers Make size_range thm
prf 100492:100502 Make bits_size_4
binder 100514:100514 <> x:764
binder 100516:100516 <> n:765
R100527:100532 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R100560:100565 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R100566:100566 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R100618:100624 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R100631:100633 Coq.Init.Logic <> ::type_scope:x_'='_x not
R100625:100628 compcert.lib.Integers Make size def
R100630:100630 compcert.lib.Integers <> x:764 var
R100634:100634 compcert.lib.Integers <> n:765 var
binder 100574:100574 <> i:766
R100595:100598 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R100610:100612 Coq.Init.Logic <> ::type_scope:x_'='_x not
R100599:100605 compcert.lib.Integers Make testbit def
R100609:100609 compcert.lib.Integers <> i:766 var
R100607:100607 compcert.lib.Integers <> x:764 var
R100613:100617 Coq.Init.Datatypes <> false constr
R100578:100581 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R100583:100585 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R100577:100577 compcert.lib.Integers <> n:765 var
R100582:100582 compcert.lib.Integers <> i:766 var
R100582:100582 compcert.lib.Integers <> i:766 var
R100586:100594 compcert.lib.Integers Make zwordsize def
R100553:100555 Coq.Init.Logic <> ::type_scope:x_'='_x not
R100533:100539 compcert.lib.Integers Make testbit def
R100544:100549 Coq.ZArith.BinInt Z pred def
R100551:100551 compcert.lib.Integers <> n:765 var
R100541:100541 compcert.lib.Integers <> x:764 var
R100556:100559 Coq.Init.Datatypes <> true constr
R100522:100525 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R100526:100526 compcert.lib.Integers <> n:765 var
R100670:100673 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R100664:100667 compcert.lib.Integers Make size def
R100670:100673 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R100664:100667 compcert.lib.Integers Make size def
R100688:100698 compcert.lib.Integers Make bits_size_3 thm
R100688:100698 compcert.lib.Integers Make bits_size_3 thm
R100719:100721 compcert.lib.Coqlib <> zlt def
R100724:100727 compcert.lib.Integers Make size def
R100719:100721 compcert.lib.Coqlib <> zlt def
R100724:100727 compcert.lib.Integers Make size def
R100746:100756 compcert.lib.Integers Make bits_size_2 thm
R100746:100756 compcert.lib.Integers Make bits_size_2 thm
R100746:100756 compcert.lib.Integers Make bits_size_2 thm
R100746:100756 compcert.lib.Integers Make bits_size_2 thm
prf 100807:100821 Make size_interval_1
binder 100833:100833 <> x:767
R100837:100840 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R100851:100853 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R100841:100848 compcert.lib.Integers Make unsigned def
R100850:100850 compcert.lib.Integers <> x:767 var
R100841:100848 compcert.lib.Integers Make unsigned def
R100850:100850 compcert.lib.Integers <> x:767 var
R100854:100858 Coq.ZArith.Zpower <> two_p def
R100861:100864 compcert.lib.Integers Make size def
R100866:100866 compcert.lib.Integers <> x:767 var
R100893:100908 compcert.lib.Zbits <> Zsize_interval_1 thm
R100893:100908 compcert.lib.Zbits <> Zsize_interval_1 thm
R100923:100936 compcert.lib.Integers Make unsigned_range thm
R100923:100936 compcert.lib.Integers Make unsigned_range thm
prf 100963:100977 Make size_interval_2
binder 100989:100989 <> x:768
binder 100991:100991 <> n:769
R101000:101003 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R101029:101032 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R101034:101037 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R101033:101033 compcert.lib.Integers <> n:769 var
R101038:101041 compcert.lib.Integers Make size def
R101043:101043 compcert.lib.Integers <> x:768 var
R101005:101008 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R101019:101021 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R101009:101016 compcert.lib.Integers Make unsigned def
R101018:101018 compcert.lib.Integers <> x:768 var
R101009:101016 compcert.lib.Integers Make unsigned def
R101018:101018 compcert.lib.Integers <> x:768 var
R101022:101026 Coq.ZArith.Zpower <> two_p def
R101028:101028 compcert.lib.Integers <> n:769 var
R100995:100998 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R100999:100999 compcert.lib.Integers <> n:769 var
R101069:101084 compcert.lib.Zbits <> Zsize_interval_2 thm
R101069:101084 compcert.lib.Zbits <> Zsize_interval_2 thm
prf 101107:101114 Make size_and
binder 101126:101126 <> a:770
binder 101128:101128 <> b:771
R101145:101148 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R101131:101134 compcert.lib.Integers Make size def
R101137:101139 compcert.lib.Integers Make and def
R101143:101143 compcert.lib.Integers <> b:771 var
R101141:101141 compcert.lib.Integers <> a:770 var
R101149:101153 Coq.ZArith.BinInt Z min def
R101165:101168 compcert.lib.Integers Make size def
R101170:101170 compcert.lib.Integers <> b:771 var
R101156:101159 compcert.lib.Integers Make size def
R101161:101161 compcert.lib.Integers <> a:770 var
R101202:101205 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R101206:101210 Coq.ZArith.BinInt Z min def
R101222:101225 compcert.lib.Integers Make size def
R101213:101216 compcert.lib.Integers Make size def
R101202:101205 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R101206:101210 Coq.ZArith.BinInt Z min def
R101222:101225 compcert.lib.Integers Make size def
R101213:101216 compcert.lib.Integers Make size def
R101248:101257 compcert.lib.Integers Make size_range thm
R101263:101272 compcert.lib.Integers Make size_range thm
R101248:101257 compcert.lib.Integers Make size_range thm
R101263:101272 compcert.lib.Integers Make size_range thm
R101299:101309 compcert.lib.Integers Make bits_size_3 thm
R101299:101309 compcert.lib.Integers Make bits_size_3 thm
R101336:101343 compcert.lib.Integers Make bits_and thm
R101336:101343 compcert.lib.Integers Make bits_and thm
R101336:101343 compcert.lib.Integers Make bits_and thm
R101365:101378 Coq.Bool.Bool <> andb_false_iff thm
R101365:101378 Coq.Bool.Bool <> andb_false_iff thm
R101365:101378 Coq.Bool.Bool <> andb_false_iff thm
R101395:101405 compcert.lib.Integers Make bits_size_2 thm
R101395:101405 compcert.lib.Integers Make bits_size_2 thm
R101427:101437 compcert.lib.Integers Make bits_size_2 thm
R101427:101437 compcert.lib.Integers Make bits_size_2 thm
prf 101480:101491 Make and_interval
binder 101503:101503 <> a:772
binder 101505:101505 <> b:773
R101509:101512 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R101531:101533 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R101513:101520 compcert.lib.Integers Make unsigned def
R101523:101525 compcert.lib.Integers Make and def
R101529:101529 compcert.lib.Integers <> b:773 var
R101527:101527 compcert.lib.Integers <> a:772 var
R101513:101520 compcert.lib.Integers Make unsigned def
R101523:101525 compcert.lib.Integers Make and def
R101529:101529 compcert.lib.Integers <> b:773 var
R101527:101527 compcert.lib.Integers <> a:772 var
R101534:101538 Coq.ZArith.Zpower <> two_p def
R101541:101545 Coq.ZArith.BinInt Z min def
R101557:101560 compcert.lib.Integers Make size def
R101562:101562 compcert.lib.Integers <> b:773 var
R101548:101551 compcert.lib.Integers Make size def
R101553:101553 compcert.lib.Integers <> a:772 var
R101598:101612 compcert.lib.Integers Make size_interval_1 thm
R101615:101617 compcert.lib.Integers Make and def
R101598:101612 compcert.lib.Integers Make size_interval_1 thm
R101615:101617 compcert.lib.Integers Make and def
R101666:101669 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R101644:101648 Coq.ZArith.Zpower <> two_p def
R101651:101654 compcert.lib.Integers Make size def
R101657:101659 compcert.lib.Integers Make and def
R101670:101674 Coq.ZArith.Zpower <> two_p def
R101677:101681 Coq.ZArith.BinInt Z min def
R101693:101696 compcert.lib.Integers Make size def
R101684:101687 compcert.lib.Integers Make size def
R101666:101669 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R101644:101648 Coq.ZArith.Zpower <> two_p def
R101651:101654 compcert.lib.Integers Make size def
R101657:101659 compcert.lib.Integers Make and def
R101670:101674 Coq.ZArith.Zpower <> two_p def
R101677:101681 Coq.ZArith.BinInt Z min def
R101693:101696 compcert.lib.Integers Make size def
R101684:101687 compcert.lib.Integers Make size def
R101712:101725 compcert.lib.Coqlib <> two_p_monotone thm
R101712:101725 compcert.lib.Coqlib <> two_p_monotone thm
R101747:101756 compcert.lib.Integers Make size_range thm
R101759:101761 compcert.lib.Integers Make and def
R101747:101756 compcert.lib.Integers Make size_range thm
R101759:101761 compcert.lib.Integers Make and def
R101785:101792 compcert.lib.Integers Make size_and thm
R101785:101792 compcert.lib.Integers Make size_and thm
prf 101818:101824 Make size_or
binder 101836:101836 <> a:774
binder 101838:101838 <> b:775
R101854:101856 Coq.Init.Logic <> ::type_scope:x_'='_x not
R101841:101844 compcert.lib.Integers Make size def
R101847:101848 compcert.lib.Integers Make or def
R101852:101852 compcert.lib.Integers <> b:775 var
R101850:101850 compcert.lib.Integers <> a:774 var
R101857:101861 Coq.ZArith.BinInt Z max def
R101873:101876 compcert.lib.Integers Make size def
R101878:101878 compcert.lib.Integers <> b:775 var
R101864:101867 compcert.lib.Integers Make size def
R101869:101869 compcert.lib.Integers <> a:774 var
R101911:101920 compcert.lib.Integers Make size_range thm
R101926:101935 compcert.lib.Integers Make size_range thm
R101911:101920 compcert.lib.Integers Make size_range thm
R101926:101935 compcert.lib.Integers Make size_range thm
R101961:101971 compcert.lib.Integers Make bits_size_1 thm
R101961:101971 compcert.lib.Integers Make bits_size_1 thm
R101996:102004 compcert.lib.Integers Make size_zero thm
R101996:102004 compcert.lib.Integers Make size_zero thm
R101996:102004 compcert.lib.Integers Make size_zero thm
R102015:102023 compcert.lib.Integers Make or_zero_l thm
R102015:102023 compcert.lib.Integers Make or_zero_l thm
R102015:102023 compcert.lib.Integers Make or_zero_l thm
R102051:102061 compcert.lib.Integers Make bits_size_1 thm
R102051:102061 compcert.lib.Integers Make bits_size_1 thm
R102086:102094 compcert.lib.Integers Make size_zero thm
R102086:102094 compcert.lib.Integers Make size_zero thm
R102086:102094 compcert.lib.Integers Make size_zero thm
R102105:102111 compcert.lib.Integers Make or_zero thm
R102105:102111 compcert.lib.Integers Make or_zero thm
R102105:102111 compcert.lib.Integers Make or_zero thm
R102182:102192 compcert.lib.Integers Make bits_size_4 thm
R102182:102192 compcert.lib.Integers Make bits_size_4 thm
R102210:102216 compcert.lib.Integers Make bits_or thm
R102210:102216 compcert.lib.Integers Make bits_or thm
R102210:102216 compcert.lib.Integers Make bits_or thm
R102210:102216 compcert.lib.Integers Make bits_or thm
R102237:102246 Coq.Bool.Bool <> orb_true_r thm
R102237:102246 Coq.Bool.Bool <> orb_true_r thm
R102276:102282 compcert.lib.Integers Make bits_or thm
R102276:102282 compcert.lib.Integers Make bits_or thm
R102276:102282 compcert.lib.Integers Make bits_or thm
R102276:102282 compcert.lib.Integers Make bits_or thm
R102294:102304 compcert.lib.Integers Make bits_size_2 thm
R102294:102304 compcert.lib.Integers Make bits_size_2 thm
R102294:102304 compcert.lib.Integers Make bits_size_2 thm
R102294:102304 compcert.lib.Integers Make bits_size_2 thm
R102294:102304 compcert.lib.Integers Make bits_size_2 thm
R102294:102304 compcert.lib.Integers Make bits_size_2 thm
R102294:102304 compcert.lib.Integers Make bits_size_2 thm
R102342:102352 compcert.lib.Integers Make bits_size_4 thm
R102342:102352 compcert.lib.Integers Make bits_size_4 thm
R102370:102376 compcert.lib.Integers Make bits_or thm
R102370:102376 compcert.lib.Integers Make bits_or thm
R102370:102376 compcert.lib.Integers Make bits_or thm
R102370:102376 compcert.lib.Integers Make bits_or thm
R102397:102406 Coq.Bool.Bool <> orb_true_l thm
R102397:102406 Coq.Bool.Bool <> orb_true_l thm
R102421:102423 compcert.lib.Coqlib <> zeq def
R102426:102429 compcert.lib.Integers Make size def
R102421:102423 compcert.lib.Coqlib <> zeq def
R102426:102429 compcert.lib.Integers Make size def
R102445:102451 compcert.lib.Integers Make testbit def
R102468:102482 Coq.ZArith.BinInt Z testbit_neg_r thm
R102468:102482 Coq.ZArith.BinInt Z testbit_neg_r thm
R102468:102482 Coq.ZArith.BinInt Z testbit_neg_r thm
R102468:102482 Coq.ZArith.BinInt Z testbit_neg_r thm
R102537:102543 compcert.lib.Integers Make bits_or thm
R102537:102543 compcert.lib.Integers Make bits_or thm
R102537:102543 compcert.lib.Integers Make bits_or thm
R102537:102543 compcert.lib.Integers Make bits_or thm
R102555:102565 compcert.lib.Integers Make bits_size_2 thm
R102555:102565 compcert.lib.Integers Make bits_size_2 thm
R102555:102565 compcert.lib.Integers Make bits_size_2 thm
R102555:102565 compcert.lib.Integers Make bits_size_2 thm
R102555:102565 compcert.lib.Integers Make bits_size_2 thm
R102555:102565 compcert.lib.Integers Make bits_size_2 thm
R102555:102565 compcert.lib.Integers Make bits_size_2 thm
prf 102611:102621 Make or_interval
binder 102633:102633 <> a:776
binder 102635:102635 <> b:777
R102639:102642 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R102660:102662 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R102643:102650 compcert.lib.Integers Make unsigned def
R102653:102654 compcert.lib.Integers Make or def
R102658:102658 compcert.lib.Integers <> b:777 var
R102656:102656 compcert.lib.Integers <> a:776 var
R102643:102650 compcert.lib.Integers Make unsigned def
R102653:102654 compcert.lib.Integers Make or def
R102658:102658 compcert.lib.Integers <> b:777 var
R102656:102656 compcert.lib.Integers <> a:776 var
R102663:102667 Coq.ZArith.Zpower <> two_p def
R102670:102674 Coq.ZArith.BinInt Z max def
R102686:102689 compcert.lib.Integers Make size def
R102691:102691 compcert.lib.Integers <> b:777 var
R102677:102680 compcert.lib.Integers Make size def
R102682:102682 compcert.lib.Integers <> a:776 var
R102724:102730 compcert.lib.Integers Make size_or thm
R102724:102730 compcert.lib.Integers Make size_or thm
R102724:102730 compcert.lib.Integers Make size_or thm
R102739:102753 compcert.lib.Integers Make size_interval_1 thm
R102739:102753 compcert.lib.Integers Make size_interval_1 thm
prf 102770:102777 Make size_xor
binder 102789:102789 <> a:778
binder 102791:102791 <> b:779
R102808:102811 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R102794:102797 compcert.lib.Integers Make size def
R102800:102802 compcert.lib.Integers Make xor def
R102806:102806 compcert.lib.Integers <> b:779 var
R102804:102804 compcert.lib.Integers <> a:778 var
R102812:102816 Coq.ZArith.BinInt Z max def
R102828:102831 compcert.lib.Integers Make size def
R102833:102833 compcert.lib.Integers <> b:779 var
R102819:102822 compcert.lib.Integers Make size def
R102824:102824 compcert.lib.Integers <> a:778 var
R102865:102868 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R102869:102873 Coq.ZArith.BinInt Z max def
R102885:102888 compcert.lib.Integers Make size def
R102876:102879 compcert.lib.Integers Make size def
R102865:102868 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R102869:102873 Coq.ZArith.BinInt Z max def
R102885:102888 compcert.lib.Integers Make size def
R102876:102879 compcert.lib.Integers Make size def
R102911:102920 compcert.lib.Integers Make size_range thm
R102926:102935 compcert.lib.Integers Make size_range thm
R102911:102920 compcert.lib.Integers Make size_range thm
R102926:102935 compcert.lib.Integers Make size_range thm
R102962:102972 compcert.lib.Integers Make bits_size_3 thm
R102962:102972 compcert.lib.Integers Make bits_size_3 thm
R102999:103006 compcert.lib.Integers Make bits_xor thm
R102999:103006 compcert.lib.Integers Make bits_xor thm
R102999:103006 compcert.lib.Integers Make bits_xor thm
R102999:103006 compcert.lib.Integers Make bits_xor thm
R103018:103028 compcert.lib.Integers Make bits_size_2 thm
R103018:103028 compcert.lib.Integers Make bits_size_2 thm
R103018:103028 compcert.lib.Integers Make bits_size_2 thm
R103018:103028 compcert.lib.Integers Make bits_size_2 thm
R103018:103028 compcert.lib.Integers Make bits_size_2 thm
R103018:103028 compcert.lib.Integers Make bits_size_2 thm
R103018:103028 compcert.lib.Integers Make bits_size_2 thm
prf 103092:103103 Make xor_interval
binder 103115:103115 <> a:780
binder 103117:103117 <> b:781
R103121:103124 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R103143:103145 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R103125:103132 compcert.lib.Integers Make unsigned def
R103135:103137 compcert.lib.Integers Make xor def
R103141:103141 compcert.lib.Integers <> b:781 var
R103139:103139 compcert.lib.Integers <> a:780 var
R103125:103132 compcert.lib.Integers Make unsigned def
R103135:103137 compcert.lib.Integers Make xor def
R103141:103141 compcert.lib.Integers <> b:781 var
R103139:103139 compcert.lib.Integers <> a:780 var
R103146:103150 Coq.ZArith.Zpower <> two_p def
R103153:103157 Coq.ZArith.BinInt Z max def
R103169:103172 compcert.lib.Integers Make size def
R103174:103174 compcert.lib.Integers <> b:781 var
R103160:103163 compcert.lib.Integers Make size def
R103165:103165 compcert.lib.Integers <> a:780 var
R103210:103224 compcert.lib.Integers Make size_interval_1 thm
R103227:103229 compcert.lib.Integers Make xor def
R103210:103224 compcert.lib.Integers Make size_interval_1 thm
R103227:103229 compcert.lib.Integers Make xor def
R103278:103281 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R103256:103260 Coq.ZArith.Zpower <> two_p def
R103263:103266 compcert.lib.Integers Make size def
R103269:103271 compcert.lib.Integers Make xor def
R103282:103286 Coq.ZArith.Zpower <> two_p def
R103289:103293 Coq.ZArith.BinInt Z max def
R103305:103308 compcert.lib.Integers Make size def
R103296:103299 compcert.lib.Integers Make size def
R103278:103281 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R103256:103260 Coq.ZArith.Zpower <> two_p def
R103263:103266 compcert.lib.Integers Make size def
R103269:103271 compcert.lib.Integers Make xor def
R103282:103286 Coq.ZArith.Zpower <> two_p def
R103289:103293 Coq.ZArith.BinInt Z max def
R103305:103308 compcert.lib.Integers Make size def
R103296:103299 compcert.lib.Integers Make size def
R103324:103337 compcert.lib.Coqlib <> two_p_monotone thm
R103324:103337 compcert.lib.Coqlib <> two_p_monotone thm
R103359:103368 compcert.lib.Integers Make size_range thm
R103371:103373 compcert.lib.Integers Make xor def
R103359:103368 compcert.lib.Integers Make size_range thm
R103371:103373 compcert.lib.Integers Make xor def
R103397:103404 compcert.lib.Integers Make size_xor thm
R103397:103404 compcert.lib.Integers Make size_xor thm
R103426:103429 compcert.lib.Integers Make <> mod
mod 103504:103514 <> Wordsize_32
def 103530:103537 Wordsize_32 wordsize
prf 103559:103575 Wordsize_32 wordsize_not_zero
R103586:103589 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R103578:103585 compcert.lib.Integers Wordsize_32 wordsize def
R103613:103620 compcert.lib.Integers Wordsize_32 wordsize def
R103644:103654 compcert.lib.Integers Wordsize_32 <> mod
R103675:103694 compcert.lib.Integers <> wordsize def
R103713:103716 compcert.lib.Integers Make <> modtype
R103718:103728 compcert.lib.Integers Wordsize_32 <> modtype
mod 103706:103708 <> Int
R103745:103764 compcert.lib.Integers <> wordsize def
syndef 103778:103780 <> int
R103785:103791 compcert.lib.Integers <> int rec
prf 103802:103829 <> int_wordsize_divides_modulus
R103834:103841 Coq.ZArith.BinInt Z divide def
R103867:103877 compcert.lib.Integers <> modulus def
R103844:103851 Coq.ZArith.BinInt Z of_nat def
R103853:103864 compcert.lib.Integers <> wordsize def
R103897:103901 Coq.ZArith.Zpower <> two_p def
R103906:103906 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R103897:103901 Coq.ZArith.Zpower <> two_p def
R103906:103906 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
mod 103938:103947 <> Wordsize_8
def 103963:103970 Wordsize_8 wordsize
prf 103991:104007 Wordsize_8 wordsize_not_zero
R104018:104021 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R104010:104017 compcert.lib.Integers Wordsize_8 wordsize def
R104045:104052 compcert.lib.Integers Wordsize_8 wordsize def
R104076:104085 compcert.lib.Integers Wordsize_8 <> mod
R104106:104124 compcert.lib.Integers <> wordsize def
R104144:104147 compcert.lib.Integers Make <> modtype
R104149:104158 compcert.lib.Integers Wordsize_8 <> modtype
mod 104136:104139 <> Byte
R104175:104193 compcert.lib.Integers <> wordsize def
syndef 104207:104210 <> byte
R104215:104222 compcert.lib.Integers <> int rec
mod 104233:104243 <> Wordsize_64
def 104259:104266 Wordsize_64 wordsize
prf 104288:104304 Wordsize_64 wordsize_not_zero
R104315:104318 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R104307:104314 compcert.lib.Integers Wordsize_64 wordsize def
R104342:104349 compcert.lib.Integers Wordsize_64 wordsize def
R104373:104383 compcert.lib.Integers Wordsize_64 <> mod
R104404:104423 compcert.lib.Integers <> wordsize def
mod 104435:104439 <> Int64
R104451:104454 compcert.lib.Integers Make <> modtype
R104456:104466 compcert.lib.Integers Wordsize_64 <> modtype
def 104535:104544 Int64 iwordsize'
R104547:104553 compcert.lib.Integers Int int rec
R104558:104565 compcert.lib.Integers Int repr def
R104567:104575 compcert.lib.Integers Int64 zwordsize def
def 104590:104593 Int64 shl'
R104599:104601 compcert.lib.Integers Int64 int rec
binder 104596:104596 <> x:782
R104608:104614 compcert.lib.Integers Int int rec
binder 104605:104605 <> y:783
R104618:104620 compcert.lib.Integers Int64 int rec
R104627:104630 compcert.lib.Integers Int64 repr def
R104633:104640 Coq.ZArith.BinInt Z shiftl def
R104656:104667 compcert.lib.Integers Int unsigned def
R104669:104669 compcert.lib.Integers <> y:783 var
R104643:104650 compcert.lib.Integers Int64 unsigned def
R104652:104652 compcert.lib.Integers <> x:782 var
def 104685:104689 Int64 shru'
R104695:104697 compcert.lib.Integers Int64 int rec
binder 104692:104692 <> x:784
R104704:104710 compcert.lib.Integers Int int rec
binder 104701:104701 <> y:785
R104714:104716 compcert.lib.Integers Int64 int rec
R104723:104726 compcert.lib.Integers Int64 repr def
R104729:104736 Coq.ZArith.BinInt Z shiftr def
R104752:104763 compcert.lib.Integers Int unsigned def
R104765:104765 compcert.lib.Integers <> y:785 var
R104739:104746 compcert.lib.Integers Int64 unsigned def
R104748:104748 compcert.lib.Integers <> x:784 var
def 104781:104784 Int64 shr'
R104790:104792 compcert.lib.Integers Int64 int rec
binder 104787:104787 <> x:786
R104799:104805 compcert.lib.Integers Int int rec
binder 104796:104796 <> y:787
R104809:104811 compcert.lib.Integers Int64 int rec
R104818:104821 compcert.lib.Integers Int64 repr def
R104824:104831 Coq.ZArith.BinInt Z shiftr def
R104845:104856 compcert.lib.Integers Int unsigned def
R104858:104858 compcert.lib.Integers <> y:787 var
R104834:104839 compcert.lib.Integers Int64 signed def
R104841:104841 compcert.lib.Integers <> x:786 var
def 104874:104877 Int64 rol'
R104883:104885 compcert.lib.Integers Int64 int rec
binder 104880:104880 <> x:788
R104892:104898 compcert.lib.Integers Int int rec
binder 104889:104889 <> y:789
R104902:104904 compcert.lib.Integers Int64 int rec
R104911:104913 compcert.lib.Integers Int64 rol def
R104918:104921 compcert.lib.Integers Int64 repr def
R104924:104935 compcert.lib.Integers Int unsigned def
R104937:104937 compcert.lib.Integers <> y:789 var
R104915:104915 compcert.lib.Integers <> x:788 var
def 104953:104957 Int64 shrx'
R104963:104965 compcert.lib.Integers Int64 int rec
binder 104960:104960 <> x:790
R104972:104978 compcert.lib.Integers Int int rec
binder 104969:104969 <> y:791
R104982:104984 compcert.lib.Integers Int64 int rec
R104991:104994 compcert.lib.Integers Int64 divs def
R104999:105002 compcert.lib.Integers Int64 shl' def
R105008:105008 compcert.lib.Integers <> y:791 var
R105004:105006 compcert.lib.Integers Int64 one def
R104996:104996 compcert.lib.Integers <> x:790 var
def 105023:105032 Int64 shr_carry'
R105038:105040 compcert.lib.Integers Int64 int rec
binder 105035:105035 <> x:792
R105047:105053 compcert.lib.Integers Int int rec
binder 105044:105044 <> y:793
R105057:105059 compcert.lib.Integers Int64 int rec
R105078:105081 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R105069:105070 compcert.lib.Integers Int64 lt def
R105074:105077 compcert.lib.Integers Int64 zero def
R105072:105072 compcert.lib.Integers <> x:792 var
R105082:105085 Coq.Init.Datatypes <> negb def
R105088:105089 compcert.lib.Integers Int64 eq def
R105122:105125 compcert.lib.Integers Int64 zero def
R105092:105094 compcert.lib.Integers Int64 and def
R105099:105101 compcert.lib.Integers Int64 sub def
R105116:105118 compcert.lib.Integers Int64 one def
R105104:105107 compcert.lib.Integers Int64 shl' def
R105113:105113 compcert.lib.Integers <> y:793 var
R105109:105111 compcert.lib.Integers Int64 one def
R105096:105096 compcert.lib.Integers <> x:792 var
R105144:105147 compcert.lib.Integers Int64 zero def
R105135:105137 compcert.lib.Integers Int64 one def
prf 105157:105165 Int64 bits_shl'
binder 105177:105177 <> x:794
binder 105179:105179 <> y:795
binder 105181:105181 <> i:796
R105204:105209 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R105230:105234 Coq.Init.Logic <> ::type_scope:x_'='_x not
R105210:105216 compcert.lib.Integers Int64 testbit def
R105229:105229 compcert.lib.Integers <> i:796 var
R105219:105222 compcert.lib.Integers Int64 shl' def
R105226:105226 compcert.lib.Integers <> y:795 var
R105224:105224 compcert.lib.Integers <> x:794 var
R105238:105240 compcert.lib.Coqlib <> zlt def
R105245:105256 compcert.lib.Integers Int unsigned def
R105258:105258 compcert.lib.Integers <> y:795 var
R105242:105242 compcert.lib.Integers <> i:796 var
R105277:105283 compcert.lib.Integers Int64 testbit def
R105289:105291 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R105288:105288 compcert.lib.Integers <> i:796 var
R105292:105303 compcert.lib.Integers Int unsigned def
R105305:105305 compcert.lib.Integers <> y:795 var
R105285:105285 compcert.lib.Integers <> x:794 var
R105266:105270 Coq.Init.Datatypes <> false constr
R105187:105190 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R105192:105194 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R105191:105191 compcert.lib.Integers <> i:796 var
R105191:105191 compcert.lib.Integers <> i:796 var
R105195:105203 compcert.lib.Integers Int64 zwordsize def
R105333:105336 compcert.lib.Integers Int64 shl' def
R105347:105358 compcert.lib.Integers Int64 testbit_repr thm
R105347:105358 compcert.lib.Integers Int64 testbit_repr thm
R105347:105358 compcert.lib.Integers Int64 testbit_repr thm
R105347:105358 compcert.lib.Integers Int64 testbit_repr thm
R105379:105381 compcert.lib.Coqlib <> zlt def
R105386:105397 compcert.lib.Integers Int unsigned def
R105379:105381 compcert.lib.Coqlib <> zlt def
R105386:105397 compcert.lib.Integers Int unsigned def
R105412:105428 Coq.ZArith.BinInt Z shiftl_spec_low thm
R105412:105428 Coq.ZArith.BinInt Z shiftl_spec_low thm
R105445:105462 Coq.ZArith.BinInt Z shiftl_spec_high thm
R105445:105462 Coq.ZArith.BinInt Z shiftl_spec_high thm
prf 105491:105500 Int64 bits_shru'
binder 105512:105512 <> x:797
binder 105514:105514 <> y:798
binder 105516:105516 <> i:799
R105539:105544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R105566:105570 Coq.Init.Logic <> ::type_scope:x_'='_x not
R105545:105551 compcert.lib.Integers Int64 testbit def
R105565:105565 compcert.lib.Integers <> i:799 var
R105554:105558 compcert.lib.Integers Int64 shru' def
R105562:105562 compcert.lib.Integers <> y:798 var
R105560:105560 compcert.lib.Integers <> x:797 var
R105574:105576 compcert.lib.Coqlib <> zlt def
R105599:105607 compcert.lib.Integers Int64 zwordsize def
R105580:105582 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R105579:105579 compcert.lib.Integers <> i:799 var
R105583:105594 compcert.lib.Integers Int unsigned def
R105596:105596 compcert.lib.Integers <> y:798 var
R105650:105654 Coq.Init.Datatypes <> false constr
R105614:105620 compcert.lib.Integers Int64 testbit def
R105626:105628 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R105625:105625 compcert.lib.Integers <> i:799 var
R105629:105640 compcert.lib.Integers Int unsigned def
R105642:105642 compcert.lib.Integers <> y:798 var
R105622:105622 compcert.lib.Integers <> x:797 var
R105522:105525 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R105527:105529 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R105526:105526 compcert.lib.Integers <> i:799 var
R105526:105526 compcert.lib.Integers <> i:799 var
R105530:105538 compcert.lib.Integers Int64 zwordsize def
R105681:105685 compcert.lib.Integers Int64 shru' def
R105696:105707 compcert.lib.Integers Int64 testbit_repr thm
R105696:105707 compcert.lib.Integers Int64 testbit_repr thm
R105696:105707 compcert.lib.Integers Int64 testbit_repr thm
R105696:105707 compcert.lib.Integers Int64 testbit_repr thm
R105726:105738 Coq.ZArith.BinInt Z shiftr_spec thm
R105726:105738 Coq.ZArith.BinInt Z shiftr_spec thm
R105726:105738 Coq.ZArith.BinInt Z shiftr_spec thm
R105726:105738 Coq.ZArith.BinInt Z shiftr_spec thm
R105747:105753 compcert.lib.Integers Int64 testbit def
R105759:105761 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R105762:105773 compcert.lib.Integers Int unsigned def
R105747:105753 compcert.lib.Integers Int64 testbit def
R105759:105761 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R105762:105773 compcert.lib.Integers Int unsigned def
R105792:105794 compcert.lib.Coqlib <> zlt def
R105817:105825 compcert.lib.Integers Int64 zwordsize def
R105798:105800 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R105801:105812 compcert.lib.Integers Int unsigned def
R105792:105794 compcert.lib.Coqlib <> zlt def
R105817:105825 compcert.lib.Integers Int64 zwordsize def
R105798:105800 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R105801:105812 compcert.lib.Integers Int unsigned def
R105845:105854 compcert.lib.Integers Int64 bits_above thm
R105845:105854 compcert.lib.Integers Int64 bits_above thm
prf 105884:105892 Int64 bits_shr'
binder 105904:105904 <> x:800
binder 105906:105906 <> y:801
binder 105908:105908 <> i:802
R105931:105936 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R105957:105961 Coq.Init.Logic <> ::type_scope:x_'='_x not
R105937:105943 compcert.lib.Integers Int64 testbit def
R105956:105956 compcert.lib.Integers <> i:802 var
R105946:105949 compcert.lib.Integers Int64 shr' def
R105953:105953 compcert.lib.Integers <> y:801 var
R105951:105951 compcert.lib.Integers <> x:800 var
R105962:105968 compcert.lib.Integers Int64 testbit def
R105976:105978 compcert.lib.Coqlib <> zlt def
R106001:106009 compcert.lib.Integers Int64 zwordsize def
R105982:105984 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R105981:105981 compcert.lib.Integers <> i:802 var
R105985:105996 compcert.lib.Integers Int unsigned def
R105998:105998 compcert.lib.Integers <> y:801 var
R106049:106051 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R106040:106048 compcert.lib.Integers Int64 zwordsize def
R106017:106019 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R106016:106016 compcert.lib.Integers <> i:802 var
R106020:106031 compcert.lib.Integers Int unsigned def
R106033:106033 compcert.lib.Integers <> y:801 var
R105970:105970 compcert.lib.Integers <> x:800 var
R105914:105917 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R105919:105921 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R105918:105918 compcert.lib.Integers <> i:802 var
R105918:105918 compcert.lib.Integers <> i:802 var
R105922:105930 compcert.lib.Integers Int64 zwordsize def
R106080:106083 compcert.lib.Integers Int64 shr' def
R106094:106105 compcert.lib.Integers Int64 testbit_repr thm
R106094:106105 compcert.lib.Integers Int64 testbit_repr thm
R106094:106105 compcert.lib.Integers Int64 testbit_repr thm
R106094:106105 compcert.lib.Integers Int64 testbit_repr thm
R106124:106136 Coq.ZArith.BinInt Z shiftr_spec thm
R106124:106136 Coq.ZArith.BinInt Z shiftr_spec thm
R106124:106136 Coq.ZArith.BinInt Z shiftr_spec thm
R106124:106136 Coq.ZArith.BinInt Z shiftr_spec thm
R106145:106155 compcert.lib.Integers Int64 bits_signed thm
R106145:106155 compcert.lib.Integers Int64 bits_signed thm
R106172:106189 compcert.lib.Integers Int unsigned_range thm
R106172:106189 compcert.lib.Integers Int unsigned_range thm
prf 106223:106236 Int64 shl'_mul_two_p
binder 106248:106248 <> x:803
binder 106250:106250 <> y:804
R106263:106265 Coq.Init.Logic <> ::type_scope:x_'='_x not
R106255:106258 compcert.lib.Integers Int64 shl' def
R106262:106262 compcert.lib.Integers <> y:804 var
R106260:106260 compcert.lib.Integers <> x:803 var
R106266:106268 compcert.lib.Integers Int64 mul def
R106273:106276 compcert.lib.Integers Int64 repr def
R106279:106283 Coq.ZArith.Zpower <> two_p def
R106286:106297 compcert.lib.Integers Int unsigned def
R106299:106299 compcert.lib.Integers <> y:804 var
R106270:106270 compcert.lib.Integers <> x:803 var
R106329:106332 compcert.lib.Integers Int64 shl' def
R106335:106337 compcert.lib.Integers Int64 mul def
R106346:106357 compcert.lib.Integers Int64 eqm_samerepr thm
R106346:106357 compcert.lib.Integers Int64 eqm_samerepr thm
R106370:106386 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R106370:106386 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R106370:106386 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R106370:106386 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R106395:106402 compcert.lib.Integers Int64 eqm_mult thm
R106395:106402 compcert.lib.Integers Int64 eqm_mult thm
R106411:106418 compcert.lib.Integers Int64 eqm_refl thm
R106411:106418 compcert.lib.Integers Int64 eqm_refl thm
R106427:106443 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R106427:106443 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R106460:106477 compcert.lib.Integers Int unsigned_range thm
R106460:106477 compcert.lib.Integers Int unsigned_range thm
prf 106502:106515 Int64 shl'_one_two_p
binder 106527:106527 <> y:805
R106540:106542 Coq.Init.Logic <> ::type_scope:x_'='_x not
R106530:106533 compcert.lib.Integers Int64 shl' def
R106539:106539 compcert.lib.Integers <> y:805 var
R106535:106537 compcert.lib.Integers Int64 one def
R106543:106546 compcert.lib.Integers Int64 repr def
R106549:106553 Coq.ZArith.Zpower <> two_p def
R106556:106567 compcert.lib.Integers Int unsigned def
R106569:106569 compcert.lib.Integers <> y:805 var
R106599:106612 compcert.lib.Integers Int64 shl'_mul_two_p thm
R106599:106612 compcert.lib.Integers Int64 shl'_mul_two_p thm
R106599:106612 compcert.lib.Integers Int64 shl'_mul_two_p thm
R106623:106632 compcert.lib.Integers Int64 mul_commut thm
R106623:106632 compcert.lib.Integers Int64 mul_commut thm
R106623:106632 compcert.lib.Integers Int64 mul_commut thm
R106643:106649 compcert.lib.Integers Int64 mul_one thm
R106643:106649 compcert.lib.Integers Int64 mul_one thm
R106643:106649 compcert.lib.Integers Int64 mul_one thm
prf 106672:106679 Int64 shl'_mul
binder 106691:106691 <> x:806
binder 106693:106693 <> y:807
R106706:106708 Coq.Init.Logic <> ::type_scope:x_'='_x not
R106698:106701 compcert.lib.Integers Int64 shl' def
R106705:106705 compcert.lib.Integers <> y:807 var
R106703:106703 compcert.lib.Integers <> x:806 var
R106709:106711 compcert.lib.Integers Int64 mul def
R106716:106719 compcert.lib.Integers Int64 shl' def
R106725:106725 compcert.lib.Integers <> y:807 var
R106721:106723 compcert.lib.Integers Int64 one def
R106713:106713 compcert.lib.Integers <> x:806 var
R106754:106767 compcert.lib.Integers Int64 shl'_one_two_p thm
R106754:106767 compcert.lib.Integers Int64 shl'_one_two_p thm
R106754:106767 compcert.lib.Integers Int64 shl'_one_two_p thm
R106776:106789 compcert.lib.Integers Int64 shl'_mul_two_p thm
R106776:106789 compcert.lib.Integers Int64 shl'_mul_two_p thm
prf 106806:106814 Int64 shl'_zero
binder 106826:106826 <> x:808
R106844:106846 Coq.Init.Logic <> ::type_scope:x_'='_x not
R106829:106832 compcert.lib.Integers Int64 shl' def
R106836:106843 compcert.lib.Integers Int zero def
R106834:106834 compcert.lib.Integers <> x:808 var
R106847:106847 compcert.lib.Integers <> x:808 var
R106874:106877 compcert.lib.Integers Int64 shl' def
R106888:106904 compcert.lib.Integers Int unsigned_zero thm
R106888:106904 compcert.lib.Integers Int unsigned_zero thm
R106888:106904 compcert.lib.Integers Int unsigned_zero thm
R106914:106921 Coq.ZArith.BinInt Z shiftl def
R106932:106944 compcert.lib.Integers Int64 repr_unsigned thm
R106932:106944 compcert.lib.Integers Int64 repr_unsigned thm
prf 106961:106970 Int64 shru'_zero
binder 106983:106983 <> x:809
R107002:107004 Coq.Init.Logic <> ::type_scope:x_'='_x not
R106986:106990 compcert.lib.Integers Int64 shru' def
R106994:107001 compcert.lib.Integers Int zero def
R106992:106992 compcert.lib.Integers <> x:809 var
R107005:107005 compcert.lib.Integers <> x:809 var
R107032:107036 compcert.lib.Integers Int64 shru' def
R107047:107063 compcert.lib.Integers Int unsigned_zero thm
R107047:107063 compcert.lib.Integers Int unsigned_zero thm
R107047:107063 compcert.lib.Integers Int unsigned_zero thm
R107073:107080 Coq.ZArith.BinInt Z shiftr def
R107091:107103 compcert.lib.Integers Int64 repr_unsigned thm
R107091:107103 compcert.lib.Integers Int64 repr_unsigned thm
prf 107120:107128 Int64 shr'_zero
binder 107141:107141 <> x:810
R107159:107161 Coq.Init.Logic <> ::type_scope:x_'='_x not
R107144:107147 compcert.lib.Integers Int64 shr' def
R107151:107158 compcert.lib.Integers Int zero def
R107149:107149 compcert.lib.Integers <> x:810 var
R107162:107162 compcert.lib.Integers <> x:810 var
R107189:107192 compcert.lib.Integers Int64 shr' def
R107203:107219 compcert.lib.Integers Int unsigned_zero thm
R107203:107219 compcert.lib.Integers Int unsigned_zero thm
R107203:107219 compcert.lib.Integers Int unsigned_zero thm
R107229:107236 Coq.ZArith.BinInt Z shiftr def
R107247:107257 compcert.lib.Integers Int64 repr_signed thm
R107247:107257 compcert.lib.Integers Int64 repr_signed thm
prf 107274:107283 Int64 shrx'_zero
binder 107295:107295 <> x:811
R107314:107316 Coq.Init.Logic <> ::type_scope:x_'='_x not
R107298:107302 compcert.lib.Integers Int64 shrx' def
R107306:107313 compcert.lib.Integers Int zero def
R107304:107304 compcert.lib.Integers <> x:811 var
R107317:107317 compcert.lib.Integers <> x:811 var
R107345:107349 compcert.lib.Integers Int64 shrx' def
R107353:107360 compcert.lib.Integers Int zero def
R107369:107372 compcert.lib.Integers Int64 shrx def
R107376:107379 compcert.lib.Integers Int64 zero def
R107345:107349 compcert.lib.Integers Int64 shrx' def
R107353:107360 compcert.lib.Integers Int zero def
R107369:107372 compcert.lib.Integers Int64 shrx def
R107376:107379 compcert.lib.Integers Int64 zero def
R107389:107397 compcert.lib.Integers Int64 shrx_zero thm
R107389:107397 compcert.lib.Integers Int64 shrx_zero thm
prf 107429:107439 Int64 shrx'_carry
binder 107451:107451 <> x:812
binder 107453:107453 <> y:813
R107488:107493 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R107503:107505 Coq.Init.Logic <> ::type_scope:x_'='_x not
R107494:107498 compcert.lib.Integers Int64 shrx' def
R107502:107502 compcert.lib.Integers <> y:813 var
R107500:107500 compcert.lib.Integers <> x:812 var
R107506:107508 compcert.lib.Integers Int64 add def
R107522:107531 compcert.lib.Integers Int64 shr_carry' def
R107535:107535 compcert.lib.Integers <> y:813 var
R107533:107533 compcert.lib.Integers <> x:812 var
R107511:107514 compcert.lib.Integers Int64 shr' def
R107518:107518 compcert.lib.Integers <> y:813 var
R107516:107516 compcert.lib.Integers <> x:812 var
R107481:107483 Coq.Init.Logic <> ::type_scope:x_'='_x not
R107458:107464 compcert.lib.Integers Int ltu def
R107469:107476 compcert.lib.Integers Int repr def
R107466:107466 compcert.lib.Integers <> y:813 var
R107484:107487 Coq.Init.Datatypes <> true constr
R107562:107572 compcert.lib.Integers Int ltu_inv thm
R107562:107572 compcert.lib.Integers Int ltu_inv thm
R107588:107599 compcert.lib.Integers Int unsigned def
R107602:107609 compcert.lib.Integers Int repr def
R107588:107599 compcert.lib.Integers Int unsigned def
R107602:107609 compcert.lib.Integers Int repr def
R107643:107652 compcert.lib.Integers Int64 repr def
R107655:107666 compcert.lib.Integers Int unsigned def
R107643:107652 compcert.lib.Integers Int64 repr def
R107655:107666 compcert.lib.Integers Int unsigned def
R107697:107699 Coq.Init.Logic <> ::type_scope:x_'='_x not
R107686:107693 compcert.lib.Integers Int64 unsigned def
R107700:107711 compcert.lib.Integers Int unsigned def
R107697:107699 Coq.Init.Logic <> ::type_scope:x_'='_x not
R107686:107693 compcert.lib.Integers Int64 unsigned def
R107700:107711 compcert.lib.Integers Int unsigned def
R107727:107739 compcert.lib.Integers Int64 unsigned_repr thm
R107727:107739 compcert.lib.Integers Int64 unsigned_repr thm
R107752:107754 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R107755:107766 compcert.lib.Integers Int64 max_unsigned def
R107752:107754 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R107755:107766 compcert.lib.Integers Int64 max_unsigned def
R107810:107813 compcert.lib.Integers Int64 shrx def
R107810:107813 compcert.lib.Integers Int64 shrx def
R107831:107835 compcert.lib.Integers Int64 shrx' def
R107838:107841 compcert.lib.Integers Int64 shrx def
R107844:107847 compcert.lib.Integers Int64 shl' def
R107850:107852 compcert.lib.Integers Int64 shl def
R107882:107891 compcert.lib.Integers Int64 shrx_carry thm
R107882:107891 compcert.lib.Integers Int64 shrx_carry thm
R107882:107891 compcert.lib.Integers Int64 shrx_carry thm
R107882:107891 compcert.lib.Integers Int64 shrx_carry thm
R107916:107918 compcert.lib.Integers Int64 shr def
R107921:107924 compcert.lib.Integers Int64 shr' def
R107953:107961 compcert.lib.Integers Int64 shr_carry def
R107964:107973 compcert.lib.Integers Int64 shr_carry' def
R107976:107978 compcert.lib.Integers Int64 shl def
R107981:107984 compcert.lib.Integers Int64 shl' def
R108013:108015 compcert.lib.Integers Int64 ltu def
R108024:108031 compcert.lib.Coqlib <> zlt_true thm
R108024:108031 compcert.lib.Coqlib <> zlt_true thm
prf 108067:108077 Int64 shrx'_shr_2
binder 108089:108089 <> x:814
binder 108091:108091 <> y:815
R108126:108131 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R108141:108143 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108132:108136 compcert.lib.Integers Int64 shrx' def
R108140:108140 compcert.lib.Integers <> y:815 var
R108138:108138 compcert.lib.Integers <> x:814 var
R108144:108147 compcert.lib.Integers Int64 shr' def
R108214:108214 compcert.lib.Integers <> y:815 var
R108150:108152 compcert.lib.Integers Int64 add def
R108157:108161 compcert.lib.Integers Int64 shru' def
R108187:108193 compcert.lib.Integers Int sub def
R108209:108209 compcert.lib.Integers <> y:815 var
R108196:108203 compcert.lib.Integers Int repr def
R108164:108167 compcert.lib.Integers Int64 shr' def
R108172:108179 compcert.lib.Integers Int repr def
R108169:108169 compcert.lib.Integers <> x:814 var
R108154:108154 compcert.lib.Integers <> x:814 var
R108119:108121 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108096:108102 compcert.lib.Integers Int ltu def
R108107:108114 compcert.lib.Integers Int repr def
R108104:108104 compcert.lib.Integers <> y:815 var
R108122:108125 Coq.Init.Datatypes <> true constr
R108246:108249 compcert.lib.Integers Int64 repr def
R108252:108263 compcert.lib.Integers Int unsigned def
R108246:108249 compcert.lib.Integers Int64 repr def
R108252:108263 compcert.lib.Integers Int unsigned def
R108278:108288 compcert.lib.Integers Int ltu_inv thm
R108278:108288 compcert.lib.Integers Int ltu_inv thm
R108304:108315 compcert.lib.Integers Int unsigned def
R108318:108325 compcert.lib.Integers Int repr def
R108304:108315 compcert.lib.Integers Int unsigned def
R108318:108325 compcert.lib.Integers Int repr def
R108362:108364 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R108365:108376 compcert.lib.Integers Int64 max_unsigned def
R108362:108364 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R108365:108376 compcert.lib.Integers Int64 max_unsigned def
R108411:108413 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R108414:108429 compcert.lib.Integers Int max_unsigned def
R108411:108413 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R108414:108429 compcert.lib.Integers Int max_unsigned def
R108471:108473 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108461:108468 compcert.lib.Integers Int64 unsigned def
R108474:108485 compcert.lib.Integers Int unsigned def
R108471:108473 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108461:108468 compcert.lib.Integers Int64 unsigned def
R108474:108485 compcert.lib.Integers Int unsigned def
R108511:108523 compcert.lib.Integers Int64 unsigned_repr thm
R108511:108523 compcert.lib.Integers Int64 unsigned_repr thm
R108574:108576 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108548:108555 compcert.lib.Integers Int64 unsigned def
R108558:108560 compcert.lib.Integers Int64 sub def
R108563:108566 compcert.lib.Integers Int64 repr def
R108577:108588 compcert.lib.Integers Int unsigned def
R108591:108597 compcert.lib.Integers Int sub def
R108600:108607 compcert.lib.Integers Int repr def
R108574:108576 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108548:108555 compcert.lib.Integers Int64 unsigned def
R108558:108560 compcert.lib.Integers Int64 sub def
R108563:108566 compcert.lib.Integers Int64 repr def
R108577:108588 compcert.lib.Integers Int unsigned def
R108591:108597 compcert.lib.Integers Int sub def
R108600:108607 compcert.lib.Integers Int repr def
R108639:108641 compcert.lib.Integers Int64 sub def
R108644:108650 compcert.lib.Integers Int sub def
R108665:108672 compcert.lib.Integers Int64 unsigned def
R108675:108678 compcert.lib.Integers Int64 repr def
R108665:108672 compcert.lib.Integers Int64 unsigned def
R108675:108678 compcert.lib.Integers Int64 repr def
R108706:108717 compcert.lib.Integers Int unsigned def
R108720:108727 compcert.lib.Integers Int repr def
R108706:108717 compcert.lib.Integers Int unsigned def
R108720:108727 compcert.lib.Integers Int repr def
R108756:108768 compcert.lib.Integers Int64 unsigned_repr thm
R108771:108782 compcert.lib.Integers Int unsigned def
R108756:108768 compcert.lib.Integers Int64 unsigned_repr thm
R108771:108782 compcert.lib.Integers Int unsigned def
R108756:108768 compcert.lib.Integers Int64 unsigned_repr thm
R108771:108782 compcert.lib.Integers Int unsigned def
R108810:108822 compcert.lib.Integers Int64 unsigned_repr thm
R108825:108841 compcert.lib.Integers Int unsigned_repr thm
R108810:108822 compcert.lib.Integers Int64 unsigned_repr thm
R108810:108822 compcert.lib.Integers Int64 unsigned_repr thm
R108825:108841 compcert.lib.Integers Int unsigned_repr thm
R108825:108841 compcert.lib.Integers Int unsigned_repr thm
R108874:108878 compcert.lib.Integers Int64 shrx' def
R108881:108884 compcert.lib.Integers Int64 shr' def
R108887:108891 compcert.lib.Integers Int64 shru' def
R108894:108897 compcert.lib.Integers Int64 shl' def
R108926:108937 compcert.lib.Integers Int unsigned def
R108940:108947 compcert.lib.Integers Int repr def
R108960:108967 compcert.lib.Integers Int64 unsigned def
R108970:108973 compcert.lib.Integers Int64 repr def
R108926:108937 compcert.lib.Integers Int unsigned def
R108940:108947 compcert.lib.Integers Int repr def
R108960:108967 compcert.lib.Integers Int64 unsigned def
R108970:108973 compcert.lib.Integers Int64 repr def
R109005:109014 compcert.lib.Integers Int64 shrx_shr_2 thm
R109005:109014 compcert.lib.Integers Int64 shrx_shr_2 thm
R109026:109028 compcert.lib.Integers Int64 ltu def
R109037:109044 compcert.lib.Coqlib <> zlt_true thm
R109037:109044 compcert.lib.Coqlib <> zlt_true thm
R109065:109067 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R109055:109062 compcert.lib.Integers Int64 unsigned def
R109065:109067 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R109055:109062 compcert.lib.Integers Int64 unsigned def
prf 109104:109116 Int64 int_ltu_2_inv
binder 109128:109128 <> y:816
binder 109130:109130 <> z:817
R109162:109167 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R109195:109200 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R109254:109259 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R109270:109273 compcert.lib.Integers Int64 repr def
R109276:109287 compcert.lib.Integers Int unsigned def
R109289:109289 compcert.lib.Integers <> y:816 var
binder 109264:109265 <> y':818
R109307:109310 compcert.lib.Integers Int64 repr def
R109313:109324 compcert.lib.Integers Int unsigned def
R109326:109326 compcert.lib.Integers <> z:817 var
binder 109301:109302 <> z':819
R109365:109370 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R109351:109353 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109337:109348 compcert.lib.Integers Int unsigned def
R109350:109350 compcert.lib.Integers <> y:816 var
R109354:109361 compcert.lib.Integers Int64 unsigned def
R109363:109364 compcert.lib.Integers <> y':818 var
R109399:109404 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R109385:109387 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109371:109382 compcert.lib.Integers Int unsigned def
R109384:109384 compcert.lib.Integers <> z:817 var
R109388:109395 compcert.lib.Integers Int64 unsigned def
R109397:109398 compcert.lib.Integers <> z':819 var
R109428:109433 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R109421:109423 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109405:109407 compcert.lib.Integers Int64 ltu def
R109412:109420 compcert.lib.Integers Int64 iwordsize def
R109409:109410 compcert.lib.Integers <> y':818 var
R109424:109427 Coq.Init.Datatypes <> true constr
R109457:109462 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R109450:109452 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109434:109436 compcert.lib.Integers Int64 ltu def
R109441:109449 compcert.lib.Integers Int64 iwordsize def
R109438:109439 compcert.lib.Integers <> z':819 var
R109453:109456 Coq.Init.Datatypes <> true constr
R109512:109517 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R109489:109491 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109463:109474 compcert.lib.Integers Int unsigned def
R109477:109483 compcert.lib.Integers Int add def
R109487:109487 compcert.lib.Integers <> z:817 var
R109485:109485 compcert.lib.Integers <> y:816 var
R109492:109499 compcert.lib.Integers Int64 unsigned def
R109502:109504 compcert.lib.Integers Int64 add def
R109509:109510 compcert.lib.Integers <> z':819 var
R109506:109507 compcert.lib.Integers <> y':818 var
R109527:109529 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109518:109520 compcert.lib.Integers Int64 add def
R109525:109526 compcert.lib.Integers <> z':819 var
R109522:109523 compcert.lib.Integers <> y':818 var
R109530:109533 compcert.lib.Integers Int64 repr def
R109536:109547 compcert.lib.Integers Int unsigned def
R109550:109556 compcert.lib.Integers Int add def
R109560:109560 compcert.lib.Integers <> z:817 var
R109558:109558 compcert.lib.Integers <> y:816 var
R109227:109230 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R109201:109212 compcert.lib.Integers Int unsigned def
R109215:109221 compcert.lib.Integers Int add def
R109225:109225 compcert.lib.Integers <> z:817 var
R109223:109223 compcert.lib.Integers <> y:816 var
R109231:109242 compcert.lib.Integers Int unsigned def
R109244:109253 compcert.lib.Integers Int64 iwordsize' def
R109188:109190 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109168:109174 compcert.lib.Integers Int ltu def
R109178:109187 compcert.lib.Integers Int64 iwordsize' def
R109176:109176 compcert.lib.Integers <> z:817 var
R109191:109194 Coq.Init.Datatypes <> true constr
R109155:109157 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109135:109141 compcert.lib.Integers Int ltu def
R109145:109154 compcert.lib.Integers Int64 iwordsize' def
R109143:109143 compcert.lib.Integers <> y:816 var
R109158:109161 Coq.Init.Datatypes <> true constr
R109588:109598 compcert.lib.Integers Int ltu_inv thm
R109588:109598 compcert.lib.Integers Int ltu_inv thm
R109612:109622 compcert.lib.Integers Int ltu_inv thm
R109612:109622 compcert.lib.Integers Int ltu_inv thm
R109641:109652 compcert.lib.Integers Int unsigned def
R109654:109663 compcert.lib.Integers Int64 iwordsize' def
R109641:109652 compcert.lib.Integers Int unsigned def
R109654:109663 compcert.lib.Integers Int64 iwordsize' def
R109693:109695 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R109696:109707 compcert.lib.Integers Int64 max_unsigned def
R109693:109695 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R109696:109707 compcert.lib.Integers Int64 max_unsigned def
R109739:109741 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R109742:109757 compcert.lib.Integers Int max_unsigned def
R109739:109741 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R109742:109757 compcert.lib.Integers Int max_unsigned def
R109800:109802 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109789:109796 compcert.lib.Integers Int64 unsigned def
R109803:109814 compcert.lib.Integers Int unsigned def
R109829:109841 compcert.lib.Integers Int64 unsigned_repr thm
R109800:109802 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109789:109796 compcert.lib.Integers Int64 unsigned def
R109803:109814 compcert.lib.Integers Int unsigned def
R109829:109841 compcert.lib.Integers Int64 unsigned_repr thm
R109876:109878 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109865:109872 compcert.lib.Integers Int64 unsigned def
R109879:109890 compcert.lib.Integers Int unsigned def
R109905:109917 compcert.lib.Integers Int64 unsigned_repr thm
R109876:109878 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109865:109872 compcert.lib.Integers Int64 unsigned def
R109879:109890 compcert.lib.Integers Int unsigned def
R109905:109917 compcert.lib.Integers Int64 unsigned_repr thm
R109967:109969 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109941:109952 compcert.lib.Integers Int unsigned def
R109955:109961 compcert.lib.Integers Int add def
R109970:109977 compcert.lib.Integers Int64 unsigned def
R109980:109982 compcert.lib.Integers Int64 add def
R109967:109969 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109941:109952 compcert.lib.Integers Int unsigned def
R109955:109961 compcert.lib.Integers Int add def
R109970:109977 compcert.lib.Integers Int64 unsigned def
R109980:109982 compcert.lib.Integers Int64 add def
R110004:110010 compcert.lib.Integers Int add def
R110021:110037 compcert.lib.Integers Int unsigned_repr thm
R110021:110037 compcert.lib.Integers Int unsigned_repr thm
R110021:110037 compcert.lib.Integers Int unsigned_repr thm
R110060:110062 compcert.lib.Integers Int64 add def
R110073:110085 compcert.lib.Integers Int64 unsigned_repr thm
R110073:110085 compcert.lib.Integers Int64 unsigned_repr thm
R110073:110085 compcert.lib.Integers Int64 unsigned_repr thm
R110137:110144 compcert.lib.Coqlib <> zlt_true thm
R110137:110144 compcert.lib.Coqlib <> zlt_true thm
R110172:110179 compcert.lib.Coqlib <> zlt_true thm
R110172:110179 compcert.lib.Coqlib <> zlt_true thm
R110220:110232 compcert.lib.Integers Int64 repr_unsigned thm
R110220:110232 compcert.lib.Integers Int64 repr_unsigned thm
R110220:110232 compcert.lib.Integers Int64 repr_unsigned thm
prf 110255:110261 Int64 or_ror'
binder 110273:110273 <> x:820
binder 110275:110275 <> y:821
binder 110277:110277 <> z:822
R110309:110314 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R110342:110347 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R110372:110377 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R110407:110409 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110378:110380 compcert.lib.Integers Int64 ror def
R110385:110388 compcert.lib.Integers Int64 repr def
R110391:110402 compcert.lib.Integers Int unsigned def
R110404:110404 compcert.lib.Integers <> z:822 var
R110382:110382 compcert.lib.Integers <> x:820 var
R110410:110411 compcert.lib.Integers Int64 or def
R110425:110429 compcert.lib.Integers Int64 shru' def
R110433:110433 compcert.lib.Integers <> z:822 var
R110431:110431 compcert.lib.Integers <> x:820 var
R110414:110417 compcert.lib.Integers Int64 shl' def
R110421:110421 compcert.lib.Integers <> y:821 var
R110419:110419 compcert.lib.Integers <> x:820 var
R110359:110361 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110348:110354 compcert.lib.Integers Int add def
R110358:110358 compcert.lib.Integers <> z:822 var
R110356:110356 compcert.lib.Integers <> y:821 var
R110362:110371 compcert.lib.Integers Int64 iwordsize' def
R110335:110337 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110315:110321 compcert.lib.Integers Int ltu def
R110325:110334 compcert.lib.Integers Int64 iwordsize' def
R110323:110323 compcert.lib.Integers <> z:822 var
R110338:110341 Coq.Init.Datatypes <> true constr
R110302:110304 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110282:110288 compcert.lib.Integers Int ltu def
R110292:110301 compcert.lib.Integers Int64 iwordsize' def
R110290:110290 compcert.lib.Integers <> y:821 var
R110305:110308 Coq.Init.Datatypes <> true constr
R110464:110476 compcert.lib.Integers Int64 int_ltu_2_inv thm
R110464:110476 compcert.lib.Integers Int64 int_ltu_2_inv thm
R110547:110550 compcert.lib.Integers Int64 shl' def
R110563:110565 compcert.lib.Integers Int64 shl def
R110570:110573 compcert.lib.Integers Int64 repr def
R110576:110587 compcert.lib.Integers Int unsigned def
R110547:110550 compcert.lib.Integers Int64 shl' def
R110563:110565 compcert.lib.Integers Int64 shl def
R110570:110573 compcert.lib.Integers Int64 repr def
R110576:110587 compcert.lib.Integers Int unsigned def
R110606:110610 compcert.lib.Integers Int64 shru' def
R110623:110626 compcert.lib.Integers Int64 shru def
R110631:110634 compcert.lib.Integers Int64 repr def
R110637:110648 compcert.lib.Integers Int unsigned def
R110606:110610 compcert.lib.Integers Int64 shru' def
R110623:110626 compcert.lib.Integers Int64 shru def
R110631:110634 compcert.lib.Integers Int64 repr def
R110637:110648 compcert.lib.Integers Int unsigned def
R110664:110669 compcert.lib.Integers Int64 or_ror thm
R110664:110669 compcert.lib.Integers Int64 or_ror thm
R110715:110718 compcert.lib.Integers Int64 shru def
R110721:110725 compcert.lib.Integers Int64 shru' def
R110757:110759 compcert.lib.Integers Int64 shl def
R110762:110765 compcert.lib.Integers Int64 shl' def
prf 110802:110810 Int64 shl'_shl'
binder 110822:110822 <> x:823
binder 110824:110824 <> y:824
binder 110826:110826 <> z:825
R110858:110863 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R110891:110896 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R110936:110941 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R110959:110961 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110942:110945 compcert.lib.Integers Int64 shl' def
R110958:110958 compcert.lib.Integers <> z:825 var
R110948:110951 compcert.lib.Integers Int64 shl' def
R110955:110955 compcert.lib.Integers <> y:824 var
R110953:110953 compcert.lib.Integers <> x:823 var
R110962:110965 compcert.lib.Integers Int64 shl' def
R110970:110976 compcert.lib.Integers Int add def
R110980:110980 compcert.lib.Integers <> z:825 var
R110978:110978 compcert.lib.Integers <> y:824 var
R110967:110967 compcert.lib.Integers <> x:823 var
R110929:110931 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110897:110903 compcert.lib.Integers Int ltu def
R110919:110928 compcert.lib.Integers Int64 iwordsize' def
R110906:110912 compcert.lib.Integers Int add def
R110916:110916 compcert.lib.Integers <> z:825 var
R110914:110914 compcert.lib.Integers <> y:824 var
R110932:110935 Coq.Init.Datatypes <> true constr
R110884:110886 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110864:110870 compcert.lib.Integers Int ltu def
R110874:110883 compcert.lib.Integers Int64 iwordsize' def
R110872:110872 compcert.lib.Integers <> z:825 var
R110887:110890 Coq.Init.Datatypes <> true constr
R110851:110853 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110831:110837 compcert.lib.Integers Int ltu def
R110841:110850 compcert.lib.Integers Int64 iwordsize' def
R110839:110839 compcert.lib.Integers <> y:824 var
R110854:110857 Coq.Init.Datatypes <> true constr
R111007:111017 compcert.lib.Integers Int ltu_inv thm
R111007:111017 compcert.lib.Integers Int ltu_inv thm
R111038:111050 compcert.lib.Integers Int64 int_ltu_2_inv thm
R111038:111050 compcert.lib.Integers Int64 int_ltu_2_inv thm
R111111:111114 compcert.lib.Integers Int64 repr def
R111117:111128 compcert.lib.Integers Int unsigned def
R111111:111114 compcert.lib.Integers Int64 repr def
R111117:111128 compcert.lib.Integers Int unsigned def
R111153:111156 compcert.lib.Integers Int64 repr def
R111159:111170 compcert.lib.Integers Int unsigned def
R111153:111156 compcert.lib.Integers Int64 repr def
R111159:111170 compcert.lib.Integers Int unsigned def
R111193:111196 compcert.lib.Integers Int64 shl' def
R111209:111211 compcert.lib.Integers Int64 shl def
R111193:111196 compcert.lib.Integers Int64 shl' def
R111209:111211 compcert.lib.Integers Int64 shl def
R111231:111234 compcert.lib.Integers Int64 shl' def
R111237:111239 compcert.lib.Integers Int64 shl def
R111256:111258 compcert.lib.Integers Int64 shl def
R111261:111263 compcert.lib.Integers Int64 shl def
R111231:111234 compcert.lib.Integers Int64 shl' def
R111237:111239 compcert.lib.Integers Int64 shl def
R111256:111258 compcert.lib.Integers Int64 shl def
R111261:111263 compcert.lib.Integers Int64 shl def
R111287:111290 compcert.lib.Integers Int64 shl' def
R111295:111301 compcert.lib.Integers Int add def
R111315:111317 compcert.lib.Integers Int64 shl def
R111322:111324 compcert.lib.Integers Int64 add def
R111287:111290 compcert.lib.Integers Int64 shl' def
R111295:111301 compcert.lib.Integers Int add def
R111315:111317 compcert.lib.Integers Int64 shl def
R111322:111324 compcert.lib.Integers Int64 add def
R111343:111349 compcert.lib.Integers Int64 shl_shl thm
R111343:111349 compcert.lib.Integers Int64 shl_shl thm
R111364:111371 compcert.lib.Coqlib <> zlt_true thm
R111364:111371 compcert.lib.Coqlib <> zlt_true thm
R111398:111405 compcert.lib.Integers Int64 unsigned def
R111407:111415 compcert.lib.Integers Int64 iwordsize def
R111423:111431 compcert.lib.Integers Int64 zwordsize def
R111398:111405 compcert.lib.Integers Int64 unsigned def
R111407:111415 compcert.lib.Integers Int64 iwordsize def
R111423:111431 compcert.lib.Integers Int64 zwordsize def
R111450:111452 compcert.lib.Integers Int64 shl def
R111455:111458 compcert.lib.Integers Int64 shl' def
R111487:111489 compcert.lib.Integers Int64 shl def
R111497:111500 compcert.lib.Integers Int64 shl' def
R111532:111534 compcert.lib.Integers Int64 shl def
R111537:111540 compcert.lib.Integers Int64 shl' def
prf 111577:111587 Int64 shru'_shru'
binder 111599:111599 <> x:826
binder 111601:111601 <> y:827
binder 111603:111603 <> z:828
R111635:111640 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R111668:111673 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R111713:111718 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R111738:111740 Coq.Init.Logic <> ::type_scope:x_'='_x not
R111719:111723 compcert.lib.Integers Int64 shru' def
R111737:111737 compcert.lib.Integers <> z:828 var
R111726:111730 compcert.lib.Integers Int64 shru' def
R111734:111734 compcert.lib.Integers <> y:827 var
R111732:111732 compcert.lib.Integers <> x:826 var
R111741:111745 compcert.lib.Integers Int64 shru' def
R111750:111756 compcert.lib.Integers Int add def
R111760:111760 compcert.lib.Integers <> z:828 var
R111758:111758 compcert.lib.Integers <> y:827 var
R111747:111747 compcert.lib.Integers <> x:826 var
R111706:111708 Coq.Init.Logic <> ::type_scope:x_'='_x not
R111674:111680 compcert.lib.Integers Int ltu def
R111696:111705 compcert.lib.Integers Int64 iwordsize' def
R111683:111689 compcert.lib.Integers Int add def
R111693:111693 compcert.lib.Integers <> z:828 var
R111691:111691 compcert.lib.Integers <> y:827 var
R111709:111712 Coq.Init.Datatypes <> true constr
R111661:111663 Coq.Init.Logic <> ::type_scope:x_'='_x not
R111641:111647 compcert.lib.Integers Int ltu def
R111651:111660 compcert.lib.Integers Int64 iwordsize' def
R111649:111649 compcert.lib.Integers <> z:828 var
R111664:111667 Coq.Init.Datatypes <> true constr
R111628:111630 Coq.Init.Logic <> ::type_scope:x_'='_x not
R111608:111614 compcert.lib.Integers Int ltu def
R111618:111627 compcert.lib.Integers Int64 iwordsize' def
R111616:111616 compcert.lib.Integers <> y:827 var
R111631:111634 Coq.Init.Datatypes <> true constr
R111787:111797 compcert.lib.Integers Int ltu_inv thm
R111787:111797 compcert.lib.Integers Int ltu_inv thm
R111818:111830 compcert.lib.Integers Int64 int_ltu_2_inv thm
R111818:111830 compcert.lib.Integers Int64 int_ltu_2_inv thm
R111891:111894 compcert.lib.Integers Int64 repr def
R111897:111908 compcert.lib.Integers Int unsigned def
R111891:111894 compcert.lib.Integers Int64 repr def
R111897:111908 compcert.lib.Integers Int unsigned def
R111933:111936 compcert.lib.Integers Int64 repr def
R111939:111950 compcert.lib.Integers Int unsigned def
R111933:111936 compcert.lib.Integers Int64 repr def
R111939:111950 compcert.lib.Integers Int unsigned def
R111973:111977 compcert.lib.Integers Int64 shru' def
R111990:111993 compcert.lib.Integers Int64 shru def
R111973:111977 compcert.lib.Integers Int64 shru' def
R111990:111993 compcert.lib.Integers Int64 shru def
R112013:112017 compcert.lib.Integers Int64 shru' def
R112020:112023 compcert.lib.Integers Int64 shru def
R112040:112043 compcert.lib.Integers Int64 shru def
R112046:112049 compcert.lib.Integers Int64 shru def
R112013:112017 compcert.lib.Integers Int64 shru' def
R112020:112023 compcert.lib.Integers Int64 shru def
R112040:112043 compcert.lib.Integers Int64 shru def
R112046:112049 compcert.lib.Integers Int64 shru def
R112073:112077 compcert.lib.Integers Int64 shru' def
R112082:112088 compcert.lib.Integers Int add def
R112102:112105 compcert.lib.Integers Int64 shru def
R112110:112112 compcert.lib.Integers Int64 add def
R112073:112077 compcert.lib.Integers Int64 shru' def
R112082:112088 compcert.lib.Integers Int add def
R112102:112105 compcert.lib.Integers Int64 shru def
R112110:112112 compcert.lib.Integers Int64 add def
R112131:112139 compcert.lib.Integers Int64 shru_shru thm
R112131:112139 compcert.lib.Integers Int64 shru_shru thm
R112154:112161 compcert.lib.Coqlib <> zlt_true thm
R112154:112161 compcert.lib.Coqlib <> zlt_true thm
R112188:112195 compcert.lib.Integers Int64 unsigned def
R112197:112205 compcert.lib.Integers Int64 iwordsize def
R112213:112221 compcert.lib.Integers Int64 zwordsize def
R112188:112195 compcert.lib.Integers Int64 unsigned def
R112197:112205 compcert.lib.Integers Int64 iwordsize def
R112213:112221 compcert.lib.Integers Int64 zwordsize def
R112240:112243 compcert.lib.Integers Int64 shru def
R112246:112250 compcert.lib.Integers Int64 shru' def
R112279:112282 compcert.lib.Integers Int64 shru def
R112290:112294 compcert.lib.Integers Int64 shru' def
R112326:112329 compcert.lib.Integers Int64 shru def
R112332:112336 compcert.lib.Integers Int64 shru' def
prf 112373:112381 Int64 shr'_shr'
binder 112393:112393 <> x:829
binder 112395:112395 <> y:830
binder 112397:112397 <> z:831
R112429:112434 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R112462:112467 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R112507:112512 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R112530:112532 Coq.Init.Logic <> ::type_scope:x_'='_x not
R112513:112516 compcert.lib.Integers Int64 shr' def
R112529:112529 compcert.lib.Integers <> z:831 var
R112519:112522 compcert.lib.Integers Int64 shr' def
R112526:112526 compcert.lib.Integers <> y:830 var
R112524:112524 compcert.lib.Integers <> x:829 var
R112533:112536 compcert.lib.Integers Int64 shr' def
R112541:112547 compcert.lib.Integers Int add def
R112551:112551 compcert.lib.Integers <> z:831 var
R112549:112549 compcert.lib.Integers <> y:830 var
R112538:112538 compcert.lib.Integers <> x:829 var
R112500:112502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R112468:112474 compcert.lib.Integers Int ltu def
R112490:112499 compcert.lib.Integers Int64 iwordsize' def
R112477:112483 compcert.lib.Integers Int add def
R112487:112487 compcert.lib.Integers <> z:831 var
R112485:112485 compcert.lib.Integers <> y:830 var
R112503:112506 Coq.Init.Datatypes <> true constr
R112455:112457 Coq.Init.Logic <> ::type_scope:x_'='_x not
R112435:112441 compcert.lib.Integers Int ltu def
R112445:112454 compcert.lib.Integers Int64 iwordsize' def
R112443:112443 compcert.lib.Integers <> z:831 var
R112458:112461 Coq.Init.Datatypes <> true constr
R112422:112424 Coq.Init.Logic <> ::type_scope:x_'='_x not
R112402:112408 compcert.lib.Integers Int ltu def
R112412:112421 compcert.lib.Integers Int64 iwordsize' def
R112410:112410 compcert.lib.Integers <> y:830 var
R112425:112428 Coq.Init.Datatypes <> true constr
R112578:112588 compcert.lib.Integers Int ltu_inv thm
R112578:112588 compcert.lib.Integers Int ltu_inv thm
R112609:112621 compcert.lib.Integers Int64 int_ltu_2_inv thm
R112609:112621 compcert.lib.Integers Int64 int_ltu_2_inv thm
R112682:112685 compcert.lib.Integers Int64 repr def
R112688:112699 compcert.lib.Integers Int unsigned def
R112682:112685 compcert.lib.Integers Int64 repr def
R112688:112699 compcert.lib.Integers Int unsigned def
R112724:112727 compcert.lib.Integers Int64 repr def
R112730:112741 compcert.lib.Integers Int unsigned def
R112724:112727 compcert.lib.Integers Int64 repr def
R112730:112741 compcert.lib.Integers Int unsigned def
R112764:112767 compcert.lib.Integers Int64 shr' def
R112780:112782 compcert.lib.Integers Int64 shr def
R112764:112767 compcert.lib.Integers Int64 shr' def
R112780:112782 compcert.lib.Integers Int64 shr def
R112802:112805 compcert.lib.Integers Int64 shr' def
R112808:112810 compcert.lib.Integers Int64 shr def
R112827:112829 compcert.lib.Integers Int64 shr def
R112832:112834 compcert.lib.Integers Int64 shr def
R112802:112805 compcert.lib.Integers Int64 shr' def
R112808:112810 compcert.lib.Integers Int64 shr def
R112827:112829 compcert.lib.Integers Int64 shr def
R112832:112834 compcert.lib.Integers Int64 shr def
R112858:112861 compcert.lib.Integers Int64 shr' def
R112866:112872 compcert.lib.Integers Int add def
R112886:112888 compcert.lib.Integers Int64 shr def
R112893:112895 compcert.lib.Integers Int64 add def
R112858:112861 compcert.lib.Integers Int64 shr' def
R112866:112872 compcert.lib.Integers Int add def
R112886:112888 compcert.lib.Integers Int64 shr def
R112893:112895 compcert.lib.Integers Int64 add def
R112914:112920 compcert.lib.Integers Int64 shr_shr thm
R112914:112920 compcert.lib.Integers Int64 shr_shr thm
R112935:112942 compcert.lib.Coqlib <> zlt_true thm
R112935:112942 compcert.lib.Coqlib <> zlt_true thm
R112969:112976 compcert.lib.Integers Int64 unsigned def
R112978:112986 compcert.lib.Integers Int64 iwordsize def
R112994:113002 compcert.lib.Integers Int64 zwordsize def
R112969:112976 compcert.lib.Integers Int64 unsigned def
R112978:112986 compcert.lib.Integers Int64 iwordsize def
R112994:113002 compcert.lib.Integers Int64 zwordsize def
R113021:113023 compcert.lib.Integers Int64 shr def
R113026:113029 compcert.lib.Integers Int64 shr' def
R113058:113060 compcert.lib.Integers Int64 shr def
R113068:113071 compcert.lib.Integers Int64 shr' def
R113103:113105 compcert.lib.Integers Int64 shr def
R113108:113111 compcert.lib.Integers Int64 shr' def
prf 113148:113157 Int64 shru'_shl'
binder 113169:113169 <> x:832
binder 113171:113171 <> y:833
binder 113173:113173 <> z:834
R113203:113206 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R113234:113239 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R113258:113262 Coq.Init.Logic <> ::type_scope:x_'='_x not
R113240:113244 compcert.lib.Integers Int64 shru' def
R113257:113257 compcert.lib.Integers <> z:834 var
R113247:113250 compcert.lib.Integers Int64 shl' def
R113254:113254 compcert.lib.Integers <> y:833 var
R113252:113252 compcert.lib.Integers <> x:832 var
R113266:113272 compcert.lib.Integers Int ltu def
R113276:113276 compcert.lib.Integers <> y:833 var
R113274:113274 compcert.lib.Integers <> z:834 var
R113366:113373 compcert.lib.Integers Int64 zero_ext def
R113405:113409 compcert.lib.Integers Int64 shru' def
R113414:113420 compcert.lib.Integers Int sub def
R113424:113424 compcert.lib.Integers <> y:833 var
R113422:113422 compcert.lib.Integers <> z:834 var
R113411:113411 compcert.lib.Integers <> x:832 var
R113385:113387 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R113376:113384 compcert.lib.Integers Int64 zwordsize def
R113388:113399 compcert.lib.Integers Int unsigned def
R113401:113401 compcert.lib.Integers <> z:834 var
R113283:113286 compcert.lib.Integers Int64 shl' def
R113331:113337 compcert.lib.Integers Int sub def
R113341:113341 compcert.lib.Integers <> z:834 var
R113339:113339 compcert.lib.Integers <> y:833 var
R113289:113296 compcert.lib.Integers Int64 zero_ext def
R113327:113327 compcert.lib.Integers <> x:832 var
R113308:113310 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R113299:113307 compcert.lib.Integers Int64 zwordsize def
R113311:113322 compcert.lib.Integers Int unsigned def
R113324:113324 compcert.lib.Integers <> y:833 var
R113227:113229 Coq.Init.Logic <> ::type_scope:x_'='_x not
R113207:113213 compcert.lib.Integers Int ltu def
R113217:113226 compcert.lib.Integers Int64 iwordsize' def
R113215:113215 compcert.lib.Integers <> z:834 var
R113230:113233 Coq.Init.Datatypes <> true constr
R113196:113198 Coq.Init.Logic <> ::type_scope:x_'='_x not
R113176:113182 compcert.lib.Integers Int ltu def
R113186:113195 compcert.lib.Integers Int64 iwordsize' def
R113184:113184 compcert.lib.Integers <> y:833 var
R113199:113202 Coq.Init.Datatypes <> true constr
R113452:113462 compcert.lib.Integers Int ltu_inv thm
R113476:113486 compcert.lib.Integers Int ltu_inv thm
R113452:113462 compcert.lib.Integers Int ltu_inv thm
R113476:113486 compcert.lib.Integers Int ltu_inv thm
R113505:113516 compcert.lib.Integers Int unsigned def
R113518:113527 compcert.lib.Integers Int64 iwordsize' def
R113535:113543 compcert.lib.Integers Int64 zwordsize def
R113505:113516 compcert.lib.Integers Int unsigned def
R113518:113527 compcert.lib.Integers Int64 iwordsize' def
R113535:113543 compcert.lib.Integers Int64 zwordsize def
R113535:113543 compcert.lib.Integers Int64 zwordsize def
R113560:113566 compcert.lib.Integers Int ltu def
R113579:113590 compcert.lib.Integers Int unsigned def
R113611:113622 compcert.lib.Integers Int unsigned def
R113579:113590 compcert.lib.Integers Int unsigned def
R113611:113622 compcert.lib.Integers Int unsigned def
R113641:113652 compcert.lib.Integers Int64 same_bits_eq thm
R113641:113652 compcert.lib.Integers Int64 same_bits_eq thm
R113671:113680 compcert.lib.Integers Int64 bits_shru' thm
R113671:113680 compcert.lib.Integers Int64 bits_shru' thm
R113671:113680 compcert.lib.Integers Int64 bits_shru' thm
R113711:113713 compcert.lib.Coqlib <> zlt def
R113711:113713 compcert.lib.Coqlib <> zlt def
R113760:113762 Coq.Init.Logic <> ::type_scope:x_'='_x not
R113734:113745 compcert.lib.Integers Int unsigned def
R113748:113754 compcert.lib.Integers Int sub def
R113764:113766 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R113760:113762 Coq.Init.Logic <> ::type_scope:x_'='_x not
R113734:113745 compcert.lib.Integers Int unsigned def
R113748:113754 compcert.lib.Integers Int sub def
R113764:113766 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R113781:113797 compcert.lib.Integers Int unsigned_repr thm
R113781:113797 compcert.lib.Integers Int unsigned_repr thm
R113817:113819 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R113808:113816 compcert.lib.Integers Int64 zwordsize def
R113820:113835 compcert.lib.Integers Int max_unsigned def
R113817:113819 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R113808:113816 compcert.lib.Integers Int64 zwordsize def
R113820:113835 compcert.lib.Integers Int max_unsigned def
R113883:113891 compcert.lib.Integers Int64 bits_shl' thm
R113883:113891 compcert.lib.Integers Int64 bits_shl' thm
R113883:113891 compcert.lib.Integers Int64 bits_shl' thm
R113918:113920 compcert.lib.Coqlib <> zlt def
R113930:113938 compcert.lib.Integers Int64 zwordsize def
R113924:113926 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R113918:113920 compcert.lib.Coqlib <> zlt def
R113930:113938 compcert.lib.Integers Int64 zwordsize def
R113924:113926 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R113952:113960 compcert.lib.Integers Int64 bits_shl' thm
R113952:113960 compcert.lib.Integers Int64 bits_shl' thm
R113952:113960 compcert.lib.Integers Int64 bits_shl' thm
R113992:113994 compcert.lib.Coqlib <> zlt def
R114000:114002 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R114017:114024 compcert.lib.Coqlib <> zlt_true thm
R114043:114051 compcert.lib.Coqlib <> zlt_false thm
R113992:113994 compcert.lib.Coqlib <> zlt def
R114000:114002 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R114017:114024 compcert.lib.Coqlib <> zlt_true thm
R114017:114024 compcert.lib.Coqlib <> zlt_true thm
R114043:114051 compcert.lib.Coqlib <> zlt_false thm
R114043:114051 compcert.lib.Coqlib <> zlt_false thm
R114080:114092 compcert.lib.Integers Int64 bits_zero_ext thm
R114080:114092 compcert.lib.Integers Int64 bits_zero_ext thm
R114080:114092 compcert.lib.Integers Int64 bits_zero_ext thm
R114112:114119 compcert.lib.Coqlib <> zlt_true thm
R114112:114119 compcert.lib.Coqlib <> zlt_true thm
R114112:114119 compcert.lib.Coqlib <> zlt_true thm
R114157:114169 compcert.lib.Integers Int64 bits_zero_ext thm
R114157:114169 compcert.lib.Integers Int64 bits_zero_ext thm
R114157:114169 compcert.lib.Integers Int64 bits_zero_ext thm
R114191:114199 compcert.lib.Coqlib <> zlt_false thm
R114191:114199 compcert.lib.Coqlib <> zlt_false thm
R114191:114199 compcert.lib.Coqlib <> zlt_false thm
R114191:114199 compcert.lib.Coqlib <> zlt_false thm
R114191:114199 compcert.lib.Coqlib <> zlt_false thm
R114256:114258 Coq.Init.Logic <> ::type_scope:x_'='_x not
R114230:114241 compcert.lib.Integers Int unsigned def
R114244:114250 compcert.lib.Integers Int sub def
R114260:114262 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R114256:114258 Coq.Init.Logic <> ::type_scope:x_'='_x not
R114230:114241 compcert.lib.Integers Int unsigned def
R114244:114250 compcert.lib.Integers Int sub def
R114260:114262 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R114277:114293 compcert.lib.Integers Int unsigned_repr thm
R114277:114293 compcert.lib.Integers Int unsigned_repr thm
R114313:114315 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R114304:114312 compcert.lib.Integers Int64 zwordsize def
R114316:114331 compcert.lib.Integers Int max_unsigned def
R114313:114315 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R114304:114312 compcert.lib.Integers Int64 zwordsize def
R114316:114331 compcert.lib.Integers Int max_unsigned def
R114369:114381 compcert.lib.Integers Int64 bits_zero_ext thm
R114384:114393 compcert.lib.Integers Int64 bits_shru' thm
R114369:114381 compcert.lib.Integers Int64 bits_zero_ext thm
R114369:114381 compcert.lib.Integers Int64 bits_zero_ext thm
R114384:114393 compcert.lib.Integers Int64 bits_shru' thm
R114384:114393 compcert.lib.Integers Int64 bits_shru' thm
R114420:114422 compcert.lib.Coqlib <> zlt def
R114432:114440 compcert.lib.Integers Int64 zwordsize def
R114426:114428 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R114453:114460 compcert.lib.Coqlib <> zlt_true thm
R114479:114487 compcert.lib.Coqlib <> zlt_false thm
R114420:114422 compcert.lib.Coqlib <> zlt def
R114432:114440 compcert.lib.Integers Int64 zwordsize def
R114426:114428 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R114453:114460 compcert.lib.Coqlib <> zlt_true thm
R114453:114460 compcert.lib.Coqlib <> zlt_true thm
R114479:114487 compcert.lib.Coqlib <> zlt_false thm
R114479:114487 compcert.lib.Coqlib <> zlt_false thm
R114516:114524 compcert.lib.Integers Int64 bits_shl' thm
R114516:114524 compcert.lib.Integers Int64 bits_shl' thm
R114516:114524 compcert.lib.Integers Int64 bits_shl' thm
R114556:114558 compcert.lib.Coqlib <> zlt def
R114562:114564 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R114556:114558 compcert.lib.Coqlib <> zlt def
R114562:114564 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R114582:114590 compcert.lib.Coqlib <> zlt_false thm
R114582:114590 compcert.lib.Coqlib <> zlt_false thm
R114582:114590 compcert.lib.Coqlib <> zlt_false thm
R114618:114625 compcert.lib.Coqlib <> zlt_true thm
R114618:114625 compcert.lib.Coqlib <> zlt_true thm
R114618:114625 compcert.lib.Coqlib <> zlt_true thm
prf 114667:114675 Int64 shr'_shl'
binder 114687:114687 <> x:835
binder 114689:114689 <> y:836
binder 114691:114691 <> z:837
R114721:114724 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R114752:114757 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R114775:114779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R114758:114761 compcert.lib.Integers Int64 shr' def
R114774:114774 compcert.lib.Integers <> z:837 var
R114764:114767 compcert.lib.Integers Int64 shl' def
R114771:114771 compcert.lib.Integers <> y:836 var
R114769:114769 compcert.lib.Integers <> x:835 var
R114783:114789 compcert.lib.Integers Int ltu def
R114793:114793 compcert.lib.Integers <> y:836 var
R114791:114791 compcert.lib.Integers <> z:837 var
R114883:114890 compcert.lib.Integers Int64 sign_ext def
R114922:114925 compcert.lib.Integers Int64 shr' def
R114930:114936 compcert.lib.Integers Int sub def
R114940:114940 compcert.lib.Integers <> y:836 var
R114938:114938 compcert.lib.Integers <> z:837 var
R114927:114927 compcert.lib.Integers <> x:835 var
R114902:114904 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R114893:114901 compcert.lib.Integers Int64 zwordsize def
R114905:114916 compcert.lib.Integers Int unsigned def
R114918:114918 compcert.lib.Integers <> z:837 var
R114800:114803 compcert.lib.Integers Int64 shl' def
R114848:114854 compcert.lib.Integers Int sub def
R114858:114858 compcert.lib.Integers <> z:837 var
R114856:114856 compcert.lib.Integers <> y:836 var
R114806:114813 compcert.lib.Integers Int64 sign_ext def
R114844:114844 compcert.lib.Integers <> x:835 var
R114825:114827 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R114816:114824 compcert.lib.Integers Int64 zwordsize def
R114828:114839 compcert.lib.Integers Int unsigned def
R114841:114841 compcert.lib.Integers <> y:836 var
R114745:114747 Coq.Init.Logic <> ::type_scope:x_'='_x not
R114725:114731 compcert.lib.Integers Int ltu def
R114735:114744 compcert.lib.Integers Int64 iwordsize' def
R114733:114733 compcert.lib.Integers <> z:837 var
R114748:114751 Coq.Init.Datatypes <> true constr
R114714:114716 Coq.Init.Logic <> ::type_scope:x_'='_x not
R114694:114700 compcert.lib.Integers Int ltu def
R114704:114713 compcert.lib.Integers Int64 iwordsize' def
R114702:114702 compcert.lib.Integers <> y:836 var
R114717:114720 Coq.Init.Datatypes <> true constr
R114968:114978 compcert.lib.Integers Int ltu_inv thm
R114992:115002 compcert.lib.Integers Int ltu_inv thm
R114968:114978 compcert.lib.Integers Int ltu_inv thm
R114992:115002 compcert.lib.Integers Int ltu_inv thm
R115021:115032 compcert.lib.Integers Int unsigned def
R115034:115043 compcert.lib.Integers Int64 iwordsize' def
R115051:115059 compcert.lib.Integers Int64 zwordsize def
R115021:115032 compcert.lib.Integers Int unsigned def
R115034:115043 compcert.lib.Integers Int64 iwordsize' def
R115051:115059 compcert.lib.Integers Int64 zwordsize def
R115051:115059 compcert.lib.Integers Int64 zwordsize def
R115076:115082 compcert.lib.Integers Int ltu def
R115095:115106 compcert.lib.Integers Int unsigned def
R115127:115138 compcert.lib.Integers Int unsigned def
R115095:115106 compcert.lib.Integers Int unsigned def
R115127:115138 compcert.lib.Integers Int unsigned def
R115157:115168 compcert.lib.Integers Int64 same_bits_eq thm
R115157:115168 compcert.lib.Integers Int64 same_bits_eq thm
R115187:115195 compcert.lib.Integers Int64 bits_shr' thm
R115187:115195 compcert.lib.Integers Int64 bits_shr' thm
R115187:115195 compcert.lib.Integers Int64 bits_shr' thm
R115248:115250 compcert.lib.Coqlib <> zlt def
R115260:115268 compcert.lib.Integers Int64 zwordsize def
R115254:115256 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R115224:115232 compcert.lib.Integers Int64 bits_shl' thm
R115224:115232 compcert.lib.Integers Int64 bits_shl' thm
R115248:115250 compcert.lib.Coqlib <> zlt def
R115260:115268 compcert.lib.Integers Int64 zwordsize def
R115254:115256 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R115224:115232 compcert.lib.Integers Int64 bits_shl' thm
R115300:115302 compcert.lib.Coqlib <> zlt def
R115300:115302 compcert.lib.Coqlib <> zlt def
R115349:115351 Coq.Init.Logic <> ::type_scope:x_'='_x not
R115323:115334 compcert.lib.Integers Int unsigned def
R115337:115343 compcert.lib.Integers Int sub def
R115353:115355 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R115349:115351 Coq.Init.Logic <> ::type_scope:x_'='_x not
R115323:115334 compcert.lib.Integers Int unsigned def
R115337:115343 compcert.lib.Integers Int sub def
R115353:115355 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R115370:115386 compcert.lib.Integers Int unsigned_repr thm
R115370:115386 compcert.lib.Integers Int unsigned_repr thm
R115406:115408 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R115397:115405 compcert.lib.Integers Int64 zwordsize def
R115409:115424 compcert.lib.Integers Int max_unsigned def
R115406:115408 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R115397:115405 compcert.lib.Integers Int64 zwordsize def
R115409:115424 compcert.lib.Integers Int max_unsigned def
R115462:115470 compcert.lib.Integers Int64 bits_shl' thm
R115462:115470 compcert.lib.Integers Int64 bits_shl' thm
R115462:115470 compcert.lib.Integers Int64 bits_shl' thm
R115497:115499 compcert.lib.Coqlib <> zlt def
R115505:115507 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R115497:115499 compcert.lib.Coqlib <> zlt def
R115505:115507 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R115521:115528 compcert.lib.Coqlib <> zlt_true thm
R115521:115528 compcert.lib.Coqlib <> zlt_true thm
R115541:115543 compcert.lib.Coqlib <> zlt def
R115553:115561 compcert.lib.Integers Int64 zwordsize def
R115547:115549 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R115541:115543 compcert.lib.Coqlib <> zlt def
R115553:115561 compcert.lib.Integers Int64 zwordsize def
R115547:115549 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R115606:115608 compcert.lib.Coqlib <> zlt def
R115618:115626 compcert.lib.Integers Int64 zwordsize def
R115612:115614 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R115582:115590 compcert.lib.Coqlib <> zlt_false thm
R115582:115590 compcert.lib.Coqlib <> zlt_false thm
R115606:115608 compcert.lib.Coqlib <> zlt def
R115618:115626 compcert.lib.Integers Int64 zwordsize def
R115612:115614 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R115582:115590 compcert.lib.Coqlib <> zlt_false thm
R115648:115660 compcert.lib.Integers Int64 bits_sign_ext thm
R115648:115660 compcert.lib.Integers Int64 bits_sign_ext thm
R115648:115660 compcert.lib.Integers Int64 bits_sign_ext thm
R115694:115696 compcert.lib.Coqlib <> zlt def
R115706:115714 compcert.lib.Integers Int64 zwordsize def
R115700:115702 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R115694:115696 compcert.lib.Coqlib <> zlt def
R115706:115714 compcert.lib.Integers Int64 zwordsize def
R115700:115702 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R115728:115735 compcert.lib.Coqlib <> zlt_true thm
R115728:115735 compcert.lib.Coqlib <> zlt_true thm
R115728:115735 compcert.lib.Coqlib <> zlt_true thm
R115764:115772 compcert.lib.Coqlib <> zlt_false thm
R115764:115772 compcert.lib.Coqlib <> zlt_false thm
R115764:115772 compcert.lib.Coqlib <> zlt_false thm
R115830:115832 Coq.Init.Logic <> ::type_scope:x_'='_x not
R115804:115815 compcert.lib.Integers Int unsigned def
R115818:115824 compcert.lib.Integers Int sub def
R115834:115836 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R115830:115832 Coq.Init.Logic <> ::type_scope:x_'='_x not
R115804:115815 compcert.lib.Integers Int unsigned def
R115818:115824 compcert.lib.Integers Int sub def
R115834:115836 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R115851:115867 compcert.lib.Integers Int unsigned_repr thm
R115851:115867 compcert.lib.Integers Int unsigned_repr thm
R115887:115889 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R115878:115886 compcert.lib.Integers Int64 zwordsize def
R115890:115905 compcert.lib.Integers Int max_unsigned def
R115887:115889 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R115878:115886 compcert.lib.Integers Int64 zwordsize def
R115890:115905 compcert.lib.Integers Int max_unsigned def
R115943:115955 compcert.lib.Integers Int64 bits_sign_ext thm
R115943:115955 compcert.lib.Integers Int64 bits_sign_ext thm
R115943:115955 compcert.lib.Integers Int64 bits_sign_ext thm
R116001:116003 compcert.lib.Coqlib <> zlt def
R116017:116019 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R116008:116016 compcert.lib.Integers Int64 zwordsize def
R115977:115985 compcert.lib.Integers Int64 bits_shr' thm
R115977:115985 compcert.lib.Integers Int64 bits_shr' thm
R116001:116003 compcert.lib.Coqlib <> zlt def
R116017:116019 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R116008:116016 compcert.lib.Integers Int64 zwordsize def
R115977:115985 compcert.lib.Integers Int64 bits_shr' thm
R116078:116080 compcert.lib.Coqlib <> zlt def
R116090:116098 compcert.lib.Integers Int64 zwordsize def
R116084:116086 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R116054:116062 compcert.lib.Coqlib <> zlt_false thm
R116054:116062 compcert.lib.Coqlib <> zlt_false thm
R116078:116080 compcert.lib.Coqlib <> zlt def
R116090:116098 compcert.lib.Integers Int64 zwordsize def
R116084:116086 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R116054:116062 compcert.lib.Coqlib <> zlt_false thm
R116131:116133 compcert.lib.Coqlib <> zlt def
R116147:116149 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R116138:116146 compcert.lib.Integers Int64 zwordsize def
R116131:116133 compcert.lib.Coqlib <> zlt def
R116147:116149 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R116138:116146 compcert.lib.Integers Int64 zwordsize def
R116167:116174 compcert.lib.Coqlib <> zlt_true thm
R116167:116174 compcert.lib.Coqlib <> zlt_true thm
R116167:116174 compcert.lib.Coqlib <> zlt_true thm
R116167:116174 compcert.lib.Coqlib <> zlt_true thm
R116167:116174 compcert.lib.Coqlib <> zlt_true thm
R116205:116213 compcert.lib.Coqlib <> zlt_false thm
R116205:116213 compcert.lib.Coqlib <> zlt_false thm
R116205:116213 compcert.lib.Coqlib <> zlt_false thm
R116205:116213 compcert.lib.Coqlib <> zlt_false thm
R116233:116240 compcert.lib.Coqlib <> zlt_true thm
R116233:116240 compcert.lib.Coqlib <> zlt_true thm
R116233:116240 compcert.lib.Coqlib <> zlt_true thm
prf 116271:116283 Int64 shl'_zero_ext
binder 116295:116295 <> n:838
binder 116297:116297 <> m:839
binder 116299:116299 <> x:840
R116308:116313 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R116335:116337 Coq.Init.Logic <> ::type_scope:x_'='_x not
R116314:116317 compcert.lib.Integers Int64 shl' def
R116334:116334 compcert.lib.Integers <> m:839 var
R116320:116327 compcert.lib.Integers Int64 zero_ext def
R116331:116331 compcert.lib.Integers <> x:840 var
R116329:116329 compcert.lib.Integers <> n:838 var
R116338:116345 compcert.lib.Integers Int64 zero_ext def
R116369:116372 compcert.lib.Integers Int64 shl' def
R116376:116376 compcert.lib.Integers <> m:839 var
R116374:116374 compcert.lib.Integers <> x:840 var
R116349:116351 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R116348:116348 compcert.lib.Integers <> n:838 var
R116352:116363 compcert.lib.Integers Int unsigned def
R116365:116365 compcert.lib.Integers <> m:839 var
R116303:116306 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R116307:116307 compcert.lib.Integers <> n:838 var
R116403:116414 compcert.lib.Integers Int64 same_bits_eq thm
R116403:116414 compcert.lib.Integers Int64 same_bits_eq thm
R116435:116447 compcert.lib.Integers Int64 bits_zero_ext thm
R116452:116460 compcert.lib.Integers Int64 bits_shl' thm
R116435:116447 compcert.lib.Integers Int64 bits_zero_ext thm
R116435:116447 compcert.lib.Integers Int64 bits_zero_ext thm
R116452:116460 compcert.lib.Integers Int64 bits_shl' thm
R116452:116460 compcert.lib.Integers Int64 bits_shl' thm
R116452:116460 compcert.lib.Integers Int64 bits_shl' thm
R116452:116460 compcert.lib.Integers Int64 bits_shl' thm
R116484:116486 compcert.lib.Coqlib <> zlt def
R116491:116502 compcert.lib.Integers Int unsigned def
R116484:116486 compcert.lib.Coqlib <> zlt def
R116491:116502 compcert.lib.Integers Int unsigned def
R116519:116526 compcert.lib.Coqlib <> zlt_true thm
R116519:116526 compcert.lib.Coqlib <> zlt_true thm
R116519:116526 compcert.lib.Coqlib <> zlt_true thm
R116554:116566 compcert.lib.Integers Int64 bits_zero_ext thm
R116554:116566 compcert.lib.Integers Int64 bits_zero_ext thm
R116554:116566 compcert.lib.Integers Int64 bits_zero_ext thm
R116590:116592 compcert.lib.Coqlib <> zlt def
R116596:116598 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R116599:116610 compcert.lib.Integers Int unsigned def
R116628:116635 compcert.lib.Coqlib <> zlt_true thm
R116654:116662 compcert.lib.Coqlib <> zlt_false thm
R116590:116592 compcert.lib.Coqlib <> zlt def
R116596:116598 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R116599:116610 compcert.lib.Integers Int unsigned def
R116628:116635 compcert.lib.Coqlib <> zlt_true thm
R116628:116635 compcert.lib.Coqlib <> zlt_true thm
R116654:116662 compcert.lib.Coqlib <> zlt_false thm
R116654:116662 compcert.lib.Coqlib <> zlt_false thm
prf 116693:116705 Int64 shl'_sign_ext
binder 116717:116717 <> n:841
binder 116719:116719 <> m:842
binder 116721:116721 <> x:843
R116729:116734 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R116756:116758 Coq.Init.Logic <> ::type_scope:x_'='_x not
R116735:116738 compcert.lib.Integers Int64 shl' def
R116755:116755 compcert.lib.Integers <> m:842 var
R116741:116748 compcert.lib.Integers Int64 sign_ext def
R116752:116752 compcert.lib.Integers <> x:843 var
R116750:116750 compcert.lib.Integers <> n:841 var
R116759:116766 compcert.lib.Integers Int64 sign_ext def
R116790:116793 compcert.lib.Integers Int64 shl' def
R116797:116797 compcert.lib.Integers <> m:842 var
R116795:116795 compcert.lib.Integers <> x:843 var
R116770:116772 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R116769:116769 compcert.lib.Integers <> n:841 var
R116773:116784 compcert.lib.Integers Int unsigned def
R116786:116786 compcert.lib.Integers <> m:842 var
R116725:116727 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R116728:116728 compcert.lib.Integers <> n:841 var
R116830:116847 compcert.lib.Integers Int unsigned_range thm
R116830:116847 compcert.lib.Integers Int unsigned_range thm
R116869:116880 compcert.lib.Integers Int64 same_bits_eq thm
R116869:116880 compcert.lib.Integers Int64 same_bits_eq thm
R116901:116913 compcert.lib.Integers Int64 bits_sign_ext thm
R116918:116926 compcert.lib.Integers Int64 bits_shl' thm
R116901:116913 compcert.lib.Integers Int64 bits_sign_ext thm
R116901:116913 compcert.lib.Integers Int64 bits_sign_ext thm
R116918:116926 compcert.lib.Integers Int64 bits_shl' thm
R116918:116926 compcert.lib.Integers Int64 bits_shl' thm
R116918:116926 compcert.lib.Integers Int64 bits_shl' thm
R116950:116952 compcert.lib.Coqlib <> zlt def
R116958:116960 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R116961:116972 compcert.lib.Integers Int unsigned def
R116950:116952 compcert.lib.Coqlib <> zlt def
R116958:116960 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R116961:116972 compcert.lib.Integers Int unsigned def
R116989:116997 compcert.lib.Integers Int64 bits_shl' thm
R116989:116997 compcert.lib.Integers Int64 bits_shl' thm
R116989:116997 compcert.lib.Integers Int64 bits_shl' thm
R117018:117020 compcert.lib.Coqlib <> zlt def
R117025:117036 compcert.lib.Integers Int unsigned def
R117018:117020 compcert.lib.Coqlib <> zlt def
R117025:117036 compcert.lib.Integers Int unsigned def
R117059:117071 compcert.lib.Integers Int64 bits_sign_ext thm
R117059:117071 compcert.lib.Integers Int64 bits_sign_ext thm
R117059:117071 compcert.lib.Integers Int64 bits_sign_ext thm
R117098:117105 compcert.lib.Coqlib <> zlt_true thm
R117098:117105 compcert.lib.Coqlib <> zlt_true thm
R117125:117133 compcert.lib.Coqlib <> zlt_false thm
R117125:117133 compcert.lib.Coqlib <> zlt_false thm
R117125:117133 compcert.lib.Coqlib <> zlt_false thm
R117153:117161 compcert.lib.Integers Int64 bits_shl' thm
R117153:117161 compcert.lib.Integers Int64 bits_shl' thm
R117153:117161 compcert.lib.Integers Int64 bits_shl' thm
R117181:117189 compcert.lib.Coqlib <> zlt_false thm
R117181:117189 compcert.lib.Coqlib <> zlt_false thm
R117181:117189 compcert.lib.Coqlib <> zlt_false thm
R117211:117223 compcert.lib.Integers Int64 bits_sign_ext thm
R117211:117223 compcert.lib.Integers Int64 bits_sign_ext thm
R117211:117223 compcert.lib.Integers Int64 bits_sign_ext thm
R117252:117260 compcert.lib.Coqlib <> zlt_false thm
R117252:117260 compcert.lib.Coqlib <> zlt_false thm
R117252:117260 compcert.lib.Coqlib <> zlt_false thm
prf 117291:117304 Int64 shru'_zero_ext
binder 117316:117316 <> n:844
binder 117318:117318 <> m:845
binder 117320:117320 <> x:846
R117329:117334 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R117376:117378 Coq.Init.Logic <> ::type_scope:x_'='_x not
R117335:117339 compcert.lib.Integers Int64 shru' def
R117375:117375 compcert.lib.Integers <> m:845 var
R117342:117349 compcert.lib.Integers Int64 zero_ext def
R117372:117372 compcert.lib.Integers <> x:846 var
R117353:117355 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R117352:117352 compcert.lib.Integers <> n:844 var
R117356:117367 compcert.lib.Integers Int unsigned def
R117369:117369 compcert.lib.Integers <> m:845 var
R117379:117386 compcert.lib.Integers Int64 zero_ext def
R117391:117395 compcert.lib.Integers Int64 shru' def
R117399:117399 compcert.lib.Integers <> m:845 var
R117397:117397 compcert.lib.Integers <> x:846 var
R117388:117388 compcert.lib.Integers <> n:844 var
R117324:117327 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R117328:117328 compcert.lib.Integers <> n:844 var
R117432:117449 compcert.lib.Integers Int unsigned_range thm
R117432:117449 compcert.lib.Integers Int unsigned_range thm
R117494:117503 compcert.lib.Integers Int64 bits_shru' thm
R117506:117518 compcert.lib.Integers Int64 bits_zero_ext thm
R117521:117530 compcert.lib.Integers Int64 bits_shru' thm
R117494:117503 compcert.lib.Integers Int64 bits_shru' thm
R117494:117503 compcert.lib.Integers Int64 bits_shru' thm
R117506:117518 compcert.lib.Integers Int64 bits_zero_ext thm
R117506:117518 compcert.lib.Integers Int64 bits_zero_ext thm
R117521:117530 compcert.lib.Integers Int64 bits_shru' thm
R117521:117530 compcert.lib.Integers Int64 bits_shru' thm
R117554:117556 compcert.lib.Coqlib <> zlt def
R117579:117587 compcert.lib.Integers Int64 zwordsize def
R117560:117562 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R117563:117574 compcert.lib.Integers Int unsigned def
R117554:117556 compcert.lib.Coqlib <> zlt def
R117579:117587 compcert.lib.Integers Int64 zwordsize def
R117560:117562 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R117563:117574 compcert.lib.Integers Int unsigned def
R117603:117605 compcert.lib.Coqlib <> zlt def
R117622:117629 compcert.lib.Coqlib <> zlt_true thm
R117648:117656 compcert.lib.Coqlib <> zlt_false thm
R117603:117605 compcert.lib.Coqlib <> zlt def
R117622:117629 compcert.lib.Coqlib <> zlt_true thm
R117622:117629 compcert.lib.Coqlib <> zlt_true thm
R117648:117656 compcert.lib.Coqlib <> zlt_false thm
R117648:117656 compcert.lib.Coqlib <> zlt_false thm
R117687:117689 compcert.lib.Coqlib <> zlt def
R117687:117689 compcert.lib.Coqlib <> zlt def
prf 117715:117730 Int64 shru'_zero_ext_0
binder 117742:117742 <> n:847
binder 117744:117744 <> m:848
binder 117746:117746 <> x:849
R117768:117773 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R117796:117798 Coq.Init.Logic <> ::type_scope:x_'='_x not
R117774:117778 compcert.lib.Integers Int64 shru' def
R117795:117795 compcert.lib.Integers <> m:848 var
R117781:117788 compcert.lib.Integers Int64 zero_ext def
R117792:117792 compcert.lib.Integers <> x:849 var
R117790:117790 compcert.lib.Integers <> n:847 var
R117799:117802 compcert.lib.Integers Int64 zero def
R117750:117753 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R117749:117749 compcert.lib.Integers <> n:847 var
R117754:117765 compcert.lib.Integers Int unsigned def
R117767:117767 compcert.lib.Integers <> m:848 var
R117834:117851 compcert.lib.Integers Int unsigned_range thm
R117834:117851 compcert.lib.Integers Int unsigned_range thm
R117886:117895 compcert.lib.Integers Int64 bits_shru' thm
R117898:117910 compcert.lib.Integers Int64 bits_zero_ext thm
R117886:117895 compcert.lib.Integers Int64 bits_shru' thm
R117886:117895 compcert.lib.Integers Int64 bits_shru' thm
R117898:117910 compcert.lib.Integers Int64 bits_zero_ext thm
R117898:117910 compcert.lib.Integers Int64 bits_zero_ext thm
R117934:117936 compcert.lib.Coqlib <> zlt def
R117959:117967 compcert.lib.Integers Int64 zwordsize def
R117940:117942 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R117943:117954 compcert.lib.Integers Int unsigned def
R117934:117936 compcert.lib.Coqlib <> zlt def
R117959:117967 compcert.lib.Integers Int64 zwordsize def
R117940:117942 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R117943:117954 compcert.lib.Integers Int unsigned def
R117985:117993 compcert.lib.Coqlib <> zlt_false thm
R117985:117993 compcert.lib.Coqlib <> zlt_false thm
prf 118015:118027 Int64 shr'_sign_ext
binder 118039:118039 <> n:850
binder 118041:118041 <> m:851
binder 118043:118043 <> x:852
R118051:118054 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R118085:118090 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R118131:118133 Coq.Init.Logic <> ::type_scope:x_'='_x not
R118091:118094 compcert.lib.Integers Int64 shr' def
R118130:118130 compcert.lib.Integers <> m:851 var
R118097:118104 compcert.lib.Integers Int64 sign_ext def
R118127:118127 compcert.lib.Integers <> x:852 var
R118108:118110 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R118107:118107 compcert.lib.Integers <> n:850 var
R118111:118122 compcert.lib.Integers Int unsigned def
R118124:118124 compcert.lib.Integers <> m:851 var
R118134:118141 compcert.lib.Integers Int64 sign_ext def
R118146:118149 compcert.lib.Integers Int64 shr' def
R118153:118153 compcert.lib.Integers <> m:851 var
R118151:118151 compcert.lib.Integers <> x:852 var
R118143:118143 compcert.lib.Integers <> n:850 var
R118073:118075 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R118056:118058 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R118055:118055 compcert.lib.Integers <> n:850 var
R118059:118070 compcert.lib.Integers Int unsigned def
R118072:118072 compcert.lib.Integers <> m:851 var
R118076:118084 compcert.lib.Integers Int64 zwordsize def
R118047:118049 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R118050:118050 compcert.lib.Integers <> n:850 var
R118186:118203 compcert.lib.Integers Int unsigned_range thm
R118186:118203 compcert.lib.Integers Int unsigned_range thm
R118225:118236 compcert.lib.Integers Int64 same_bits_eq thm
R118225:118236 compcert.lib.Integers Int64 same_bits_eq thm
R118257:118269 compcert.lib.Integers Int64 bits_sign_ext thm
R118272:118280 compcert.lib.Integers Int64 bits_shr' thm
R118257:118269 compcert.lib.Integers Int64 bits_sign_ext thm
R118257:118269 compcert.lib.Integers Int64 bits_sign_ext thm
R118272:118280 compcert.lib.Integers Int64 bits_shr' thm
R118272:118280 compcert.lib.Integers Int64 bits_shr' thm
R118301:118313 compcert.lib.Integers Int64 bits_sign_ext thm
R118316:118324 compcert.lib.Integers Int64 bits_shr' thm
R118301:118313 compcert.lib.Integers Int64 bits_sign_ext thm
R118301:118313 compcert.lib.Integers Int64 bits_sign_ext thm
R118301:118313 compcert.lib.Integers Int64 bits_sign_ext thm
R118316:118324 compcert.lib.Integers Int64 bits_shr' thm
R118316:118324 compcert.lib.Integers Int64 bits_shr' thm
R118316:118324 compcert.lib.Integers Int64 bits_shr' thm
R118350:118352 compcert.lib.Coqlib <> zlt def
R118361:118363 compcert.lib.Coqlib <> zlt def
R118386:118394 compcert.lib.Integers Int64 zwordsize def
R118367:118369 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R118370:118381 compcert.lib.Integers Int unsigned def
R118350:118352 compcert.lib.Coqlib <> zlt def
R118361:118363 compcert.lib.Coqlib <> zlt def
R118386:118394 compcert.lib.Integers Int64 zwordsize def
R118367:118369 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R118370:118381 compcert.lib.Integers Int unsigned def
R118361:118363 compcert.lib.Coqlib <> zlt def
R118386:118394 compcert.lib.Integers Int64 zwordsize def
R118367:118369 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R118370:118381 compcert.lib.Integers Int unsigned def
R118406:118413 compcert.lib.Coqlib <> zlt_true thm
R118406:118413 compcert.lib.Coqlib <> zlt_true thm
R118431:118438 compcert.lib.Coqlib <> zlt_true thm
R118431:118438 compcert.lib.Coqlib <> zlt_true thm
R118458:118466 compcert.lib.Coqlib <> zlt_false thm
R118458:118466 compcert.lib.Coqlib <> zlt_false thm
R118458:118466 compcert.lib.Coqlib <> zlt_false thm
R118486:118493 compcert.lib.Coqlib <> zlt_true thm
R118486:118493 compcert.lib.Coqlib <> zlt_true thm
R118486:118493 compcert.lib.Coqlib <> zlt_true thm
R118522:118530 compcert.lib.Coqlib <> zlt_false thm
R118522:118530 compcert.lib.Coqlib <> zlt_false thm
R118522:118530 compcert.lib.Coqlib <> zlt_false thm
R118550:118557 compcert.lib.Coqlib <> zlt_true thm
R118550:118557 compcert.lib.Coqlib <> zlt_true thm
R118550:118557 compcert.lib.Coqlib <> zlt_true thm
R118588:118590 compcert.lib.Coqlib <> zlt def
R118588:118590 compcert.lib.Coqlib <> zlt def
R118617:118619 compcert.lib.Coqlib <> zlt def
R118642:118650 compcert.lib.Integers Int64 zwordsize def
R118623:118625 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R118626:118637 compcert.lib.Integers Int unsigned def
R118617:118619 compcert.lib.Coqlib <> zlt def
R118642:118650 compcert.lib.Integers Int64 zwordsize def
R118623:118625 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R118626:118637 compcert.lib.Integers Int unsigned def
prf 118673:118690 Int64 zero_ext_shru'_min
binder 118702:118702 <> s:853
binder 118704:118704 <> x:854
binder 118706:118706 <> n:855
R118736:118741 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R118764:118766 Coq.Init.Logic <> ::type_scope:x_'='_x not
R118742:118749 compcert.lib.Integers Int64 zero_ext def
R118754:118758 compcert.lib.Integers Int64 shru' def
R118762:118762 compcert.lib.Integers <> n:855 var
R118760:118760 compcert.lib.Integers <> x:854 var
R118751:118751 compcert.lib.Integers <> s:853 var
R118767:118774 compcert.lib.Integers Int64 zero_ext def
R118816:118820 compcert.lib.Integers Int64 shru' def
R118824:118824 compcert.lib.Integers <> n:855 var
R118822:118822 compcert.lib.Integers <> x:854 var
R118777:118781 Coq.ZArith.BinInt Z min def
R118795:118797 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R118786:118794 compcert.lib.Integers Int64 zwordsize def
R118798:118809 compcert.lib.Integers Int unsigned def
R118811:118811 compcert.lib.Integers <> n:855 var
R118783:118783 compcert.lib.Integers <> s:853 var
R118729:118731 Coq.Init.Logic <> ::type_scope:x_'='_x not
R118709:118715 compcert.lib.Integers Int ltu def
R118719:118728 compcert.lib.Integers Int64 iwordsize' def
R118717:118717 compcert.lib.Integers <> n:855 var
R118732:118735 Coq.Init.Datatypes <> true constr
R118851:118861 compcert.lib.Integers Int ltu_inv thm
R118851:118861 compcert.lib.Integers Int ltu_inv thm
R118877:118888 compcert.lib.Integers Int unsigned def
R118890:118899 compcert.lib.Integers Int64 iwordsize' def
R118907:118915 compcert.lib.Integers Int64 zwordsize def
R118877:118888 compcert.lib.Integers Int unsigned def
R118890:118899 compcert.lib.Integers Int64 iwordsize' def
R118907:118915 compcert.lib.Integers Int64 zwordsize def
R118931:118947 Coq.ZArith.BinInt Z min_case_strong thm
R118931:118947 Coq.ZArith.BinInt Z min_case_strong thm
R118998:119007 compcert.lib.Integers Int64 bits_shru' thm
R118998:119007 compcert.lib.Integers Int64 bits_shru' thm
R118998:119007 compcert.lib.Integers Int64 bits_shru' thm
R118998:119007 compcert.lib.Integers Int64 bits_shru' thm
R119032:119034 compcert.lib.Coqlib <> zlt def
R119048:119050 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119039:119047 compcert.lib.Integers Int64 zwordsize def
R119051:119062 compcert.lib.Integers Int unsigned def
R119032:119034 compcert.lib.Coqlib <> zlt def
R119048:119050 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119039:119047 compcert.lib.Integers Int64 zwordsize def
R119051:119062 compcert.lib.Integers Int unsigned def
R119079:119086 compcert.lib.Coqlib <> zlt_true thm
R119079:119086 compcert.lib.Coqlib <> zlt_true thm
R119079:119086 compcert.lib.Coqlib <> zlt_true thm
R119116:119118 compcert.lib.Coqlib <> zlt def
R119116:119118 compcert.lib.Coqlib <> zlt def
R119140:119148 compcert.lib.Coqlib <> zlt_false thm
R119140:119148 compcert.lib.Coqlib <> zlt_false thm
R119140:119148 compcert.lib.Coqlib <> zlt_false thm
prf 119178:119194 Int64 sign_ext_shr'_min
binder 119206:119206 <> s:856
binder 119208:119208 <> x:857
binder 119210:119210 <> n:858
R119240:119245 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R119267:119269 Coq.Init.Logic <> ::type_scope:x_'='_x not
R119246:119253 compcert.lib.Integers Int64 sign_ext def
R119258:119261 compcert.lib.Integers Int64 shr' def
R119265:119265 compcert.lib.Integers <> n:858 var
R119263:119263 compcert.lib.Integers <> x:857 var
R119255:119255 compcert.lib.Integers <> s:856 var
R119270:119277 compcert.lib.Integers Int64 sign_ext def
R119319:119322 compcert.lib.Integers Int64 shr' def
R119326:119326 compcert.lib.Integers <> n:858 var
R119324:119324 compcert.lib.Integers <> x:857 var
R119280:119284 Coq.ZArith.BinInt Z min def
R119298:119300 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119289:119297 compcert.lib.Integers Int64 zwordsize def
R119301:119312 compcert.lib.Integers Int unsigned def
R119314:119314 compcert.lib.Integers <> n:858 var
R119286:119286 compcert.lib.Integers <> s:856 var
R119233:119235 Coq.Init.Logic <> ::type_scope:x_'='_x not
R119213:119219 compcert.lib.Integers Int ltu def
R119223:119232 compcert.lib.Integers Int64 iwordsize' def
R119221:119221 compcert.lib.Integers <> n:858 var
R119236:119239 Coq.Init.Datatypes <> true constr
R119353:119363 compcert.lib.Integers Int ltu_inv thm
R119353:119363 compcert.lib.Integers Int ltu_inv thm
R119379:119390 compcert.lib.Integers Int unsigned def
R119392:119401 compcert.lib.Integers Int64 iwordsize' def
R119409:119417 compcert.lib.Integers Int64 zwordsize def
R119379:119390 compcert.lib.Integers Int unsigned def
R119392:119401 compcert.lib.Integers Int64 iwordsize' def
R119409:119417 compcert.lib.Integers Int64 zwordsize def
R119435:119444 Coq.ZArith.BinInt Z min_comm thm
R119435:119444 Coq.ZArith.BinInt Z min_comm thm
R119435:119444 Coq.ZArith.BinInt Z min_comm thm
R119460:119469 Coq.ZArith.BinInt Z min_spec thm
R119481:119483 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119472:119480 compcert.lib.Integers Int64 zwordsize def
R119484:119495 compcert.lib.Integers Int unsigned def
R119460:119469 Coq.ZArith.BinInt Z min_spec thm
R119481:119483 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119472:119480 compcert.lib.Integers Int64 zwordsize def
R119484:119495 compcert.lib.Integers Int unsigned def
R119548:119559 compcert.lib.Integers Int64 same_bits_eq thm
R119548:119559 compcert.lib.Integers Int64 same_bits_eq thm
R119580:119592 compcert.lib.Integers Int64 bits_sign_ext thm
R119580:119592 compcert.lib.Integers Int64 bits_sign_ext thm
R119580:119592 compcert.lib.Integers Int64 bits_sign_ext thm
R119580:119592 compcert.lib.Integers Int64 bits_sign_ext thm
R119580:119592 compcert.lib.Integers Int64 bits_sign_ext thm
R119615:119617 compcert.lib.Coqlib <> zlt def
R119631:119633 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119622:119630 compcert.lib.Integers Int64 zwordsize def
R119634:119645 compcert.lib.Integers Int unsigned def
R119615:119617 compcert.lib.Coqlib <> zlt def
R119631:119633 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119622:119630 compcert.lib.Integers Int64 zwordsize def
R119634:119645 compcert.lib.Integers Int unsigned def
R119663:119670 compcert.lib.Coqlib <> zlt_true thm
R119663:119670 compcert.lib.Coqlib <> zlt_true thm
R119663:119670 compcert.lib.Coqlib <> zlt_true thm
R119752:119754 Coq.Init.Logic <> ::type_scope:x_'='_x not
R119701:119707 compcert.lib.Integers Int64 testbit def
R119747:119749 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119730:119732 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119721:119729 compcert.lib.Integers Int64 zwordsize def
R119733:119744 compcert.lib.Integers Int unsigned def
R119710:119713 compcert.lib.Integers Int64 shr' def
R119755:119761 compcert.lib.Integers Int64 testbit def
R119775:119777 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119766:119774 compcert.lib.Integers Int64 zwordsize def
R119752:119754 Coq.Init.Logic <> ::type_scope:x_'='_x not
R119701:119707 compcert.lib.Integers Int64 testbit def
R119747:119749 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119730:119732 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119721:119729 compcert.lib.Integers Int64 zwordsize def
R119733:119744 compcert.lib.Integers Int unsigned def
R119710:119713 compcert.lib.Integers Int64 shr' def
R119755:119761 compcert.lib.Integers Int64 testbit def
R119775:119777 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119766:119774 compcert.lib.Integers Int64 zwordsize def
R119795:119803 compcert.lib.Integers Int64 bits_shr' thm
R119795:119803 compcert.lib.Integers Int64 bits_shr' thm
R119795:119803 compcert.lib.Integers Int64 bits_shr' thm
R119823:119830 compcert.lib.Coqlib <> zlt_true thm
R119823:119830 compcert.lib.Coqlib <> zlt_true thm
R119823:119830 compcert.lib.Coqlib <> zlt_true thm
R119883:119885 compcert.lib.Coqlib <> zlt def
R119901:119909 compcert.lib.Integers Int64 bits_shr' thm
R119883:119885 compcert.lib.Coqlib <> zlt def
R119901:119909 compcert.lib.Integers Int64 bits_shr' thm
R119901:119909 compcert.lib.Integers Int64 bits_shr' thm
R119901:119909 compcert.lib.Integers Int64 bits_shr' thm
R119901:119909 compcert.lib.Integers Int64 bits_shr' thm
R119931:119939 compcert.lib.Coqlib <> zlt_false thm
R119931:119939 compcert.lib.Coqlib <> zlt_false thm
R119931:119939 compcert.lib.Coqlib <> zlt_false thm
R119967:119975 compcert.lib.Coqlib <> zlt_false thm
R119967:119975 compcert.lib.Coqlib <> zlt_false thm
R119967:119975 compcert.lib.Coqlib <> zlt_false thm
prf 120005:120021 Int64 shl'_zero_ext_min
binder 120033:120033 <> s:859
binder 120035:120035 <> x:860
binder 120037:120037 <> n:861
R120067:120072 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R120094:120096 Coq.Init.Logic <> ::type_scope:x_'='_x not
R120073:120076 compcert.lib.Integers Int64 shl' def
R120093:120093 compcert.lib.Integers <> n:861 var
R120079:120086 compcert.lib.Integers Int64 zero_ext def
R120090:120090 compcert.lib.Integers <> x:860 var
R120088:120088 compcert.lib.Integers <> s:859 var
R120097:120100 compcert.lib.Integers Int64 shl' def
R120154:120154 compcert.lib.Integers <> n:861 var
R120103:120110 compcert.lib.Integers Int64 zero_ext def
R120151:120151 compcert.lib.Integers <> x:860 var
R120113:120117 Coq.ZArith.BinInt Z min def
R120131:120133 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R120122:120130 compcert.lib.Integers Int64 zwordsize def
R120134:120145 compcert.lib.Integers Int unsigned def
R120147:120147 compcert.lib.Integers <> n:861 var
R120119:120119 compcert.lib.Integers <> s:859 var
R120060:120062 Coq.Init.Logic <> ::type_scope:x_'='_x not
R120040:120046 compcert.lib.Integers Int ltu def
R120050:120059 compcert.lib.Integers Int64 iwordsize' def
R120048:120048 compcert.lib.Integers <> n:861 var
R120063:120066 Coq.Init.Datatypes <> true constr
R120180:120190 compcert.lib.Integers Int ltu_inv thm
R120180:120190 compcert.lib.Integers Int ltu_inv thm
R120206:120217 compcert.lib.Integers Int unsigned def
R120219:120228 compcert.lib.Integers Int64 iwordsize' def
R120236:120244 compcert.lib.Integers Int64 zwordsize def
R120206:120217 compcert.lib.Integers Int unsigned def
R120219:120228 compcert.lib.Integers Int64 iwordsize' def
R120236:120244 compcert.lib.Integers Int64 zwordsize def
R120260:120276 Coq.ZArith.BinInt Z min_case_strong thm
R120260:120276 Coq.ZArith.BinInt Z min_case_strong thm
R120301:120312 compcert.lib.Integers Int64 same_bits_eq thm
R120301:120312 compcert.lib.Integers Int64 same_bits_eq thm
R120333:120341 compcert.lib.Integers Int64 bits_shl' thm
R120333:120341 compcert.lib.Integers Int64 bits_shl' thm
R120333:120341 compcert.lib.Integers Int64 bits_shl' thm
R120333:120341 compcert.lib.Integers Int64 bits_shl' thm
R120333:120341 compcert.lib.Integers Int64 bits_shl' thm
R120364:120366 compcert.lib.Coqlib <> zlt def
R120371:120382 compcert.lib.Integers Int unsigned def
R120364:120366 compcert.lib.Coqlib <> zlt def
R120371:120382 compcert.lib.Integers Int unsigned def
R120407:120419 compcert.lib.Integers Int64 bits_zero_ext thm
R120407:120419 compcert.lib.Integers Int64 bits_zero_ext thm
R120407:120419 compcert.lib.Integers Int64 bits_zero_ext thm
R120407:120419 compcert.lib.Integers Int64 bits_zero_ext thm
R120407:120419 compcert.lib.Integers Int64 bits_zero_ext thm
R120443:120445 compcert.lib.Coqlib <> zlt def
R120449:120451 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R120452:120463 compcert.lib.Integers Int unsigned def
R120443:120445 compcert.lib.Coqlib <> zlt def
R120449:120451 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R120452:120463 compcert.lib.Integers Int unsigned def
R120482:120489 compcert.lib.Coqlib <> zlt_true thm
R120482:120489 compcert.lib.Coqlib <> zlt_true thm
R120482:120489 compcert.lib.Coqlib <> zlt_true thm
R120517:120525 compcert.lib.Coqlib <> zlt_false thm
R120517:120525 compcert.lib.Coqlib <> zlt_false thm
R120517:120525 compcert.lib.Coqlib <> zlt_false thm
prf 120555:120571 Int64 shl'_sign_ext_min
binder 120583:120583 <> s:862
binder 120585:120585 <> x:863
binder 120587:120587 <> n:864
R120617:120622 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R120644:120646 Coq.Init.Logic <> ::type_scope:x_'='_x not
R120623:120626 compcert.lib.Integers Int64 shl' def
R120643:120643 compcert.lib.Integers <> n:864 var
R120629:120636 compcert.lib.Integers Int64 sign_ext def
R120640:120640 compcert.lib.Integers <> x:863 var
R120638:120638 compcert.lib.Integers <> s:862 var
R120647:120650 compcert.lib.Integers Int64 shl' def
R120704:120704 compcert.lib.Integers <> n:864 var
R120653:120660 compcert.lib.Integers Int64 sign_ext def
R120701:120701 compcert.lib.Integers <> x:863 var
R120663:120667 Coq.ZArith.BinInt Z min def
R120681:120683 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R120672:120680 compcert.lib.Integers Int64 zwordsize def
R120684:120695 compcert.lib.Integers Int unsigned def
R120697:120697 compcert.lib.Integers <> n:864 var
R120669:120669 compcert.lib.Integers <> s:862 var
R120610:120612 Coq.Init.Logic <> ::type_scope:x_'='_x not
R120590:120596 compcert.lib.Integers Int ltu def
R120600:120609 compcert.lib.Integers Int64 iwordsize' def
R120598:120598 compcert.lib.Integers <> n:864 var
R120613:120616 Coq.Init.Datatypes <> true constr
R120730:120740 compcert.lib.Integers Int ltu_inv thm
R120730:120740 compcert.lib.Integers Int ltu_inv thm
R120756:120767 compcert.lib.Integers Int unsigned def
R120769:120778 compcert.lib.Integers Int64 iwordsize' def
R120786:120794 compcert.lib.Integers Int64 zwordsize def
R120756:120767 compcert.lib.Integers Int unsigned def
R120769:120778 compcert.lib.Integers Int64 iwordsize' def
R120786:120794 compcert.lib.Integers Int64 zwordsize def
R120812:120821 Coq.ZArith.BinInt Z min_comm thm
R120812:120821 Coq.ZArith.BinInt Z min_comm thm
R120812:120821 Coq.ZArith.BinInt Z min_comm thm
R120837:120846 Coq.ZArith.BinInt Z min_spec thm
R120858:120860 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R120849:120857 compcert.lib.Integers Int64 zwordsize def
R120861:120872 compcert.lib.Integers Int unsigned def
R120837:120846 Coq.ZArith.BinInt Z min_spec thm
R120858:120860 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R120849:120857 compcert.lib.Integers Int64 zwordsize def
R120861:120872 compcert.lib.Integers Int unsigned def
R120925:120936 compcert.lib.Integers Int64 same_bits_eq thm
R120925:120936 compcert.lib.Integers Int64 same_bits_eq thm
R120957:120965 compcert.lib.Integers Int64 bits_shl' thm
R120957:120965 compcert.lib.Integers Int64 bits_shl' thm
R120957:120965 compcert.lib.Integers Int64 bits_shl' thm
R120957:120965 compcert.lib.Integers Int64 bits_shl' thm
R120957:120965 compcert.lib.Integers Int64 bits_shl' thm
R120988:120990 compcert.lib.Coqlib <> zlt def
R120995:121006 compcert.lib.Integers Int unsigned def
R120988:120990 compcert.lib.Coqlib <> zlt def
R120995:121006 compcert.lib.Integers Int unsigned def
R121031:121043 compcert.lib.Integers Int64 bits_sign_ext thm
R121031:121043 compcert.lib.Integers Int64 bits_sign_ext thm
R121031:121043 compcert.lib.Integers Int64 bits_sign_ext thm
R121031:121043 compcert.lib.Integers Int64 bits_sign_ext thm
R121031:121043 compcert.lib.Integers Int64 bits_sign_ext thm
R121076:121078 compcert.lib.Coqlib <> zlt def
R121082:121084 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R121085:121096 compcert.lib.Integers Int unsigned def
R121076:121078 compcert.lib.Coqlib <> zlt def
R121082:121084 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R121085:121096 compcert.lib.Integers Int unsigned def
R121115:121122 compcert.lib.Coqlib <> zlt_true thm
R121115:121122 compcert.lib.Coqlib <> zlt_true thm
R121115:121122 compcert.lib.Coqlib <> zlt_true thm
def 121237:121245 Int64 one_bits'
R121251:121253 compcert.lib.Integers Int64 int rec
binder 121248:121248 <> x:865
R121258:121261 Coq.Init.Datatypes <> list ind
R121263:121269 compcert.lib.Integers Int int rec
R121276:121283 Coq.Lists.List <> map def
R121295:121304 compcert.lib.Zbits <> Z_one_bits def
R121316:121323 compcert.lib.Integers Int64 unsigned def
R121325:121325 compcert.lib.Integers <> x:865 var
R121306:121313 compcert.lib.Integers Int64 wordsize def
R121285:121292 compcert.lib.Integers Int repr def
def 121344:121353 Int64 is_power2'
R121359:121361 compcert.lib.Integers Int64 int rec
binder 121356:121356 <> x:866
R121366:121371 Coq.Init.Datatypes <> option ind
R121373:121379 compcert.lib.Integers Int int rec
R121392:121401 compcert.lib.Zbits <> Z_one_bits def
R121413:121420 compcert.lib.Integers Int64 unsigned def
R121422:121422 compcert.lib.Integers <> x:866 var
R121403:121410 compcert.lib.Integers Int64 wordsize def
R121437:121440 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R121441:121443 Coq.Init.Datatypes <> nil constr
R121448:121451 Coq.Init.Datatypes <> Some constr
R121454:121461 compcert.lib.Integers Int repr def
R121475:121478 Coq.Init.Datatypes <> None constr
prf 121496:121510 Int64 one_bits'_range
binder 121522:121522 <> x:867
binder 121524:121524 <> i:868
R121545:121548 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R121569:121571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R121549:121555 compcert.lib.Integers Int ltu def
R121559:121568 compcert.lib.Integers Int64 iwordsize' def
R121557:121557 compcert.lib.Integers <> i:868 var
R121572:121575 Coq.Init.Datatypes <> true constr
R121527:121528 Coq.Lists.List <> In def
R121533:121541 compcert.lib.Integers Int64 one_bits' def
R121543:121543 compcert.lib.Integers <> x:867 var
R121530:121530 compcert.lib.Integers <> i:868 var
R121607:121621 compcert.lib.Coqlib <> list_in_map_inv thm
R121607:121621 compcert.lib.Coqlib <> list_in_map_inv thm
R121659:121674 compcert.lib.Zbits <> Z_one_bits_range thm
R121689:121697 compcert.lib.Integers Int64 zwordsize def
R121689:121697 compcert.lib.Integers Int64 zwordsize def
R121719:121725 compcert.lib.Integers Int ltu def
R121748:121764 compcert.lib.Integers Int unsigned_repr thm
R121748:121764 compcert.lib.Integers Int unsigned_repr thm
R121748:121764 compcert.lib.Integers Int unsigned_repr thm
R121748:121764 compcert.lib.Integers Int unsigned_repr thm
R121777:121788 compcert.lib.Integers Int unsigned def
R121790:121799 compcert.lib.Integers Int64 iwordsize' def
R121807:121815 compcert.lib.Integers Int64 zwordsize def
R121777:121788 compcert.lib.Integers Int unsigned def
R121790:121799 compcert.lib.Integers Int64 iwordsize' def
R121807:121815 compcert.lib.Integers Int64 zwordsize def
R121807:121815 compcert.lib.Integers Int64 zwordsize def
R121807:121815 compcert.lib.Integers Int64 zwordsize def
R121807:121815 compcert.lib.Integers Int64 zwordsize def
R121807:121815 compcert.lib.Integers Int64 zwordsize def
R121824:121831 compcert.lib.Coqlib <> zlt_true thm
R121824:121831 compcert.lib.Coqlib <> zlt_true thm
R121860:121862 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R121851:121859 compcert.lib.Integers Int64 zwordsize def
R121863:121878 compcert.lib.Integers Int max_unsigned def
R121860:121862 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R121851:121859 compcert.lib.Integers Int64 zwordsize def
R121863:121878 compcert.lib.Integers Int max_unsigned def
def 121919:121934 Int64 int_of_one_bits'
R121940:121943 Coq.Init.Datatypes <> list ind
R121945:121951 compcert.lib.Integers Int int rec
binder 121937:121937 <> l:869
R121956:121958 compcert.lib.Integers Int64 int rec
R121971:121971 compcert.lib.Integers <> l:869 var
R121982:121984 Coq.Init.Datatypes <> nil constr
R121989:121992 compcert.lib.Integers Int64 zero def
R121999:122002 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R122008:122010 compcert.lib.Integers Int64 add def
R122026:122041 compcert.lib.Integers <> int_of_one_bits':870 def
R122013:122016 compcert.lib.Integers Int64 shl' def
R122018:122020 compcert.lib.Integers Int64 one def
prf 122062:122077 Int64 one_bits'_decomp
binder 122089:122089 <> x:872
R122093:122095 Coq.Init.Logic <> ::type_scope:x_'='_x not
R122092:122092 compcert.lib.Integers <> x:872 var
R122096:122111 compcert.lib.Integers Int64 int_of_one_bits' def
R122114:122122 compcert.lib.Integers Int64 one_bits' def
R122124:122124 compcert.lib.Integers <> x:872 var
binder 122157:122157 <> l:873
R122171:122171 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R122210:122225 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R122264:122266 Coq.Init.Logic <> ::type_scope:x_'='_x not
R122226:122241 compcert.lib.Integers Int64 int_of_one_bits' def
R122244:122251 Coq.Lists.List <> map def
R122262:122262 compcert.lib.Integers <> l:873 var
R122253:122260 compcert.lib.Integers Int repr def
R122267:122270 compcert.lib.Integers Int64 repr def
R122273:122282 compcert.lib.Zbits <> powerserie def
R122284:122284 compcert.lib.Integers <> l:873 var
binder 122179:122179 <> i:874
R122188:122191 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R122193:122196 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R122198:122200 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R122197:122197 compcert.lib.Integers <> i:874 var
R122197:122197 compcert.lib.Integers <> i:874 var
R122201:122209 compcert.lib.Integers Int64 zwordsize def
R122182:122183 Coq.Lists.List <> In def
R122187:122187 compcert.lib.Integers <> l:873 var
R122185:122185 compcert.lib.Integers <> i:874 var
binder 122157:122157 <> l:875
R122171:122171 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R122210:122225 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R122264:122266 Coq.Init.Logic <> ::type_scope:x_'='_x not
R122226:122241 compcert.lib.Integers Int64 int_of_one_bits' def
R122244:122251 Coq.Lists.List <> map def
R122262:122262 compcert.lib.Integers <> l:875 var
R122253:122260 compcert.lib.Integers Int repr def
R122267:122270 compcert.lib.Integers Int64 repr def
R122273:122282 compcert.lib.Zbits <> powerserie def
R122284:122284 compcert.lib.Integers <> l:875 var
binder 122179:122179 <> i:876
R122188:122191 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R122193:122196 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R122198:122200 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R122197:122197 compcert.lib.Integers <> i:876 var
R122197:122197 compcert.lib.Integers <> i:876 var
R122201:122209 compcert.lib.Integers Int64 zwordsize def
R122182:122183 Coq.Lists.List <> In def
R122187:122187 compcert.lib.Integers <> l:875 var
R122185:122185 compcert.lib.Integers <> i:876 var
R122363:122374 compcert.lib.Integers Int64 eqm_samerepr thm
R122383:122389 compcert.lib.Integers Int64 eqm_add thm
R122363:122374 compcert.lib.Integers Int64 eqm_samerepr thm
R122383:122389 compcert.lib.Integers Int64 eqm_add thm
R122404:122417 compcert.lib.Integers Int64 shl'_one_two_p thm
R122404:122417 compcert.lib.Integers Int64 shl'_one_two_p thm
R122404:122417 compcert.lib.Integers Int64 shl'_one_two_p thm
R122428:122444 compcert.lib.Integers Int unsigned_repr thm
R122428:122444 compcert.lib.Integers Int unsigned_repr thm
R122428:122444 compcert.lib.Integers Int unsigned_repr thm
R122428:122444 compcert.lib.Integers Int unsigned_repr thm
R122453:122459 compcert.lib.Integers Int64 eqm_sym thm
R122468:122484 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R122453:122459 compcert.lib.Integers Int64 eqm_sym thm
R122468:122484 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R122529:122531 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R122520:122528 compcert.lib.Integers Int64 zwordsize def
R122532:122547 compcert.lib.Integers Int max_unsigned def
R122529:122531 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R122520:122528 compcert.lib.Integers Int64 zwordsize def
R122532:122547 compcert.lib.Integers Int max_unsigned def
R122583:122589 compcert.lib.Integers Int64 eqm_sym thm
R122598:122614 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R122583:122589 compcert.lib.Integers Int64 eqm_sym thm
R122598:122614 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R122643:122655 compcert.lib.Integers Int64 repr_unsigned thm
R122643:122655 compcert.lib.Integers Int64 repr_unsigned thm
R122643:122655 compcert.lib.Integers Int64 repr_unsigned thm
R122673:122681 compcert.lib.Integers Int64 one_bits' def
R122710:122730 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R122710:122730 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R122710:122730 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R122710:122730 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R122745:122758 compcert.lib.Integers Int64 unsigned_range thm
R122745:122758 compcert.lib.Integers Int64 unsigned_range thm
R122769:122784 compcert.lib.Zbits <> Z_one_bits_range thm
R122769:122784 compcert.lib.Zbits <> Z_one_bits_range thm
prf 122799:122812 Int64 is_power2'_rng
binder 122824:122824 <> n:877
binder 122826:122829 <> logn:878
R122858:122863 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R122865:122868 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R122886:122888 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R122869:122880 compcert.lib.Integers Int unsigned def
R122882:122885 compcert.lib.Integers <> logn:878 var
R122869:122880 compcert.lib.Integers Int unsigned def
R122882:122885 compcert.lib.Integers <> logn:878 var
R122889:122897 compcert.lib.Integers Int64 zwordsize def
R122846:122848 Coq.Init.Logic <> ::type_scope:x_'='_x not
R122834:122843 compcert.lib.Integers Int64 is_power2' def
R122845:122845 compcert.lib.Integers <> n:877 var
R122849:122852 Coq.Init.Datatypes <> Some constr
R122854:122857 compcert.lib.Integers <> logn:878 var
R122916:122925 compcert.lib.Integers Int64 is_power2' def
R122958:122967 compcert.lib.Zbits <> Z_one_bits def
R122979:122986 compcert.lib.Integers Int64 unsigned def
R122969:122976 compcert.lib.Integers Int64 wordsize def
R122958:122967 compcert.lib.Zbits <> Z_one_bits def
R122979:122986 compcert.lib.Integers Int64 unsigned def
R122969:122976 compcert.lib.Integers Int64 wordsize def
R123039:123042 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R123044:123046 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R123047:123055 compcert.lib.Integers Int64 zwordsize def
R123039:123042 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R123044:123046 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R123047:123055 compcert.lib.Integers Int64 zwordsize def
R123092:123099 compcert.lib.Integers Int64 unsigned def
R123069:123084 compcert.lib.Zbits <> Z_one_bits_range thm
R123092:123099 compcert.lib.Integers Int64 unsigned def
R123069:123084 compcert.lib.Zbits <> Z_one_bits_range thm
R123146:123162 compcert.lib.Integers Int unsigned_repr thm
R123146:123162 compcert.lib.Integers Int unsigned_repr thm
R123146:123162 compcert.lib.Integers Int unsigned_repr thm
R123146:123162 compcert.lib.Integers Int unsigned_repr thm
R123190:123192 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R123181:123189 compcert.lib.Integers Int64 zwordsize def
R123193:123208 compcert.lib.Integers Int max_unsigned def
R123190:123192 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R123181:123189 compcert.lib.Integers Int64 zwordsize def
R123193:123208 compcert.lib.Integers Int max_unsigned def
prf 123250:123265 Int64 is_power2'_range
binder 123277:123277 <> n:879
binder 123279:123282 <> logn:880
R123311:123314 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R123338:123340 Coq.Init.Logic <> ::type_scope:x_'='_x not
R123315:123321 compcert.lib.Integers Int ltu def
R123328:123337 compcert.lib.Integers Int64 iwordsize' def
R123323:123326 compcert.lib.Integers <> logn:880 var
R123341:123344 Coq.Init.Datatypes <> true constr
R123299:123301 Coq.Init.Logic <> ::type_scope:x_'='_x not
R123287:123296 compcert.lib.Integers Int64 is_power2' def
R123298:123298 compcert.lib.Integers <> n:879 var
R123302:123305 Coq.Init.Datatypes <> Some constr
R123307:123310 compcert.lib.Integers <> logn:880 var
R123371:123377 compcert.lib.Integers Int ltu def
R123388:123399 compcert.lib.Integers Int unsigned def
R123401:123410 compcert.lib.Integers Int64 iwordsize' def
R123418:123426 compcert.lib.Integers Int64 zwordsize def
R123388:123399 compcert.lib.Integers Int unsigned def
R123401:123410 compcert.lib.Integers Int64 iwordsize' def
R123418:123426 compcert.lib.Integers Int64 zwordsize def
R123418:123426 compcert.lib.Integers Int64 zwordsize def
R123418:123426 compcert.lib.Integers Int64 zwordsize def
R123418:123426 compcert.lib.Integers Int64 zwordsize def
R123418:123426 compcert.lib.Integers Int64 zwordsize def
R123437:123444 compcert.lib.Coqlib <> zlt_true thm
R123437:123444 compcert.lib.Coqlib <> zlt_true thm
R123459:123472 compcert.lib.Integers Int64 is_power2'_rng thm
R123459:123472 compcert.lib.Integers Int64 is_power2'_rng thm
prf 123501:123518 Int64 is_power2'_correct
binder 123530:123530 <> n:881
binder 123532:123535 <> logn:882
R123564:123569 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R123580:123582 Coq.Init.Logic <> ::type_scope:x_'='_x not
R123570:123577 compcert.lib.Integers Int64 unsigned def
R123579:123579 compcert.lib.Integers <> n:881 var
R123583:123587 Coq.ZArith.Zpower <> two_p def
R123590:123601 compcert.lib.Integers Int unsigned def
R123603:123606 compcert.lib.Integers <> logn:882 var
R123552:123554 Coq.Init.Logic <> ::type_scope:x_'='_x not
R123540:123549 compcert.lib.Integers Int64 is_power2' def
R123551:123551 compcert.lib.Integers <> n:881 var
R123555:123558 Coq.Init.Datatypes <> Some constr
R123560:123563 compcert.lib.Integers <> logn:882 var
R123626:123635 compcert.lib.Integers Int64 is_power2' def
R123658:123667 compcert.lib.Zbits <> Z_one_bits def
R123679:123686 compcert.lib.Integers Int64 unsigned def
R123669:123676 compcert.lib.Integers Int64 wordsize def
R123658:123667 compcert.lib.Zbits <> Z_one_bits def
R123679:123686 compcert.lib.Integers Int64 unsigned def
R123669:123676 compcert.lib.Integers Int64 wordsize def
R123793:123806 compcert.lib.Integers Int64 unsigned_range thm
R123738:123758 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R123770:123777 compcert.lib.Integers Int64 unsigned def
R123760:123767 compcert.lib.Integers Int64 wordsize def
R123738:123758 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R123770:123777 compcert.lib.Integers Int64 unsigned def
R123760:123767 compcert.lib.Integers Int64 wordsize def
R123793:123806 compcert.lib.Integers Int64 unsigned_range thm
R123738:123758 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R123770:123777 compcert.lib.Integers Int64 unsigned def
R123760:123767 compcert.lib.Integers Int64 wordsize def
R123820:123836 compcert.lib.Integers Int unsigned_repr thm
R123820:123836 compcert.lib.Integers Int unsigned_repr thm
R123820:123836 compcert.lib.Integers Int unsigned_repr thm
R123820:123836 compcert.lib.Integers Int unsigned_repr thm
R123875:123878 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R123880:123882 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R123883:123891 compcert.lib.Integers Int64 zwordsize def
R123875:123878 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R123880:123882 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R123883:123891 compcert.lib.Integers Int64 zwordsize def
R123928:123935 compcert.lib.Integers Int64 unsigned def
R123905:123920 compcert.lib.Zbits <> Z_one_bits_range thm
R123928:123935 compcert.lib.Integers Int64 unsigned def
R123905:123920 compcert.lib.Zbits <> Z_one_bits_range thm
R123991:123993 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R123982:123990 compcert.lib.Integers Int64 zwordsize def
R123994:124009 compcert.lib.Integers Int max_unsigned def
R123991:123993 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R123982:123990 compcert.lib.Integers Int64 zwordsize def
R123994:124009 compcert.lib.Integers Int max_unsigned def
prf 124051:124059 Int64 mul_pow2'
binder 124071:124071 <> x:883
binder 124073:124073 <> n:884
binder 124075:124078 <> logn:885
R124107:124112 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R124120:124122 Coq.Init.Logic <> ::type_scope:x_'='_x not
R124113:124115 compcert.lib.Integers Int64 mul def
R124119:124119 compcert.lib.Integers <> n:884 var
R124117:124117 compcert.lib.Integers <> x:883 var
R124123:124126 compcert.lib.Integers Int64 shl' def
R124130:124133 compcert.lib.Integers <> logn:885 var
R124128:124128 compcert.lib.Integers <> x:883 var
R124095:124097 Coq.Init.Logic <> ::type_scope:x_'='_x not
R124083:124092 compcert.lib.Integers Int64 is_power2' def
R124094:124094 compcert.lib.Integers <> n:884 var
R124098:124101 Coq.Init.Datatypes <> Some constr
R124103:124106 compcert.lib.Integers <> logn:885 var
R124161:124168 compcert.lib.Integers Int64 shl'_mul thm
R124161:124168 compcert.lib.Integers Int64 shl'_mul thm
R124161:124168 compcert.lib.Integers Int64 shl'_mul thm
R124188:124201 compcert.lib.Integers Int64 shl'_one_two_p thm
R124188:124201 compcert.lib.Integers Int64 shl'_one_two_p thm
R124188:124201 compcert.lib.Integers Int64 shl'_one_two_p thm
R124218:124230 compcert.lib.Integers Int64 repr_unsigned thm
R124218:124230 compcert.lib.Integers Int64 repr_unsigned thm
R124218:124230 compcert.lib.Integers Int64 repr_unsigned thm
R124251:124268 compcert.lib.Integers Int64 is_power2'_correct thm
R124251:124268 compcert.lib.Integers Int64 is_power2'_correct thm
prf 124291:124300 Int64 divu_pow2'
binder 124312:124312 <> x:886
binder 124314:124314 <> n:887
binder 124316:124319 <> logn:888
R124348:124353 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R124362:124364 Coq.Init.Logic <> ::type_scope:x_'='_x not
R124354:124357 compcert.lib.Integers Int64 divu def
R124361:124361 compcert.lib.Integers <> n:887 var
R124359:124359 compcert.lib.Integers <> x:886 var
R124365:124369 compcert.lib.Integers Int64 shru' def
R124373:124376 compcert.lib.Integers <> logn:888 var
R124371:124371 compcert.lib.Integers <> x:886 var
R124336:124338 Coq.Init.Logic <> ::type_scope:x_'='_x not
R124324:124333 compcert.lib.Integers Int64 is_power2' def
R124335:124335 compcert.lib.Integers <> n:887 var
R124339:124342 Coq.Init.Datatypes <> Some constr
R124344:124347 compcert.lib.Integers <> logn:888 var
R124408:124425 compcert.lib.Integers Int64 is_power2'_correct thm
R124408:124425 compcert.lib.Integers Int64 is_power2'_correct thm
R124464:124467 compcert.lib.Integers Int64 divu def
R124489:124493 compcert.lib.Integers Int64 shru' def
R124504:124520 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R124504:124520 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R124504:124520 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R124504:124520 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R124538:124551 compcert.lib.Integers Int64 is_power2'_rng thm
R124538:124551 compcert.lib.Integers Int64 is_power2'_rng thm
def 124634:124639 Int64 loword
R124645:124647 compcert.lib.Integers Int64 int rec
binder 124642:124642 <> n:889
R124652:124658 compcert.lib.Integers Int int rec
R124663:124670 compcert.lib.Integers Int repr def
R124673:124680 compcert.lib.Integers Int64 unsigned def
R124682:124682 compcert.lib.Integers <> n:889 var
def 124698:124703 Int64 hiword
R124709:124711 compcert.lib.Integers Int64 int rec
binder 124706:124706 <> n:890
R124716:124722 compcert.lib.Integers Int int rec
R124727:124734 compcert.lib.Integers Int repr def
R124737:124744 compcert.lib.Integers Int64 unsigned def
R124747:124750 compcert.lib.Integers Int64 shru def
R124755:124758 compcert.lib.Integers Int64 repr def
R124760:124772 compcert.lib.Integers Int zwordsize def
R124752:124752 compcert.lib.Integers <> n:890 var
def 124790:124796 Int64 ofwords
R124806:124812 compcert.lib.Integers Int int rec
binder 124799:124800 <> hi:891
binder 124802:124803 <> lo:892
R124817:124819 compcert.lib.Integers Int64 int rec
R124826:124827 compcert.lib.Integers Int64 or def
R124882:124885 compcert.lib.Integers Int64 repr def
R124888:124899 compcert.lib.Integers Int unsigned def
R124901:124902 compcert.lib.Integers <> lo:892 var
R124830:124832 compcert.lib.Integers Int64 shl def
R124860:124863 compcert.lib.Integers Int64 repr def
R124865:124877 compcert.lib.Integers Int zwordsize def
R124835:124838 compcert.lib.Integers Int64 repr def
R124841:124852 compcert.lib.Integers Int unsigned def
R124854:124855 compcert.lib.Integers <> hi:891 var
prf 124914:124924 Int64 bits_loword
binder 124936:124936 <> n:893
binder 124938:124938 <> i:894
R124963:124966 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R124991:124993 Coq.Init.Logic <> ::type_scope:x_'='_x not
R124967:124977 compcert.lib.Integers Int testbit def
R124990:124990 compcert.lib.Integers <> i:894 var
R124980:124985 compcert.lib.Integers Int64 loword def
R124987:124987 compcert.lib.Integers <> n:893 var
R124994:125000 compcert.lib.Integers Int64 testbit def
R125004:125004 compcert.lib.Integers <> i:894 var
R125002:125002 compcert.lib.Integers <> n:893 var
R124942:124945 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R124947:124949 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R124946:124946 compcert.lib.Integers <> i:894 var
R124946:124946 compcert.lib.Integers <> i:894 var
R124950:124962 compcert.lib.Integers Int zwordsize def
R125031:125036 compcert.lib.Integers Int64 loword def
R125047:125062 compcert.lib.Integers Int testbit_repr thm
R125047:125062 compcert.lib.Integers Int testbit_repr thm
R125047:125062 compcert.lib.Integers Int testbit_repr thm
R125047:125062 compcert.lib.Integers Int testbit_repr thm
prf 125083:125093 Int64 bits_hiword
binder 125105:125105 <> n:895
binder 125107:125107 <> i:896
R125132:125135 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R125160:125162 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125136:125146 compcert.lib.Integers Int testbit def
R125159:125159 compcert.lib.Integers <> i:896 var
R125149:125154 compcert.lib.Integers Int64 hiword def
R125156:125156 compcert.lib.Integers <> n:895 var
R125163:125169 compcert.lib.Integers Int64 testbit def
R125175:125177 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R125174:125174 compcert.lib.Integers <> i:896 var
R125178:125190 compcert.lib.Integers Int zwordsize def
R125171:125171 compcert.lib.Integers <> n:895 var
R125111:125114 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R125116:125118 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R125115:125115 compcert.lib.Integers <> i:896 var
R125115:125115 compcert.lib.Integers <> i:896 var
R125119:125131 compcert.lib.Integers Int zwordsize def
R125218:125223 compcert.lib.Integers Int64 hiword def
R125234:125249 compcert.lib.Integers Int testbit_repr thm
R125234:125249 compcert.lib.Integers Int testbit_repr thm
R125234:125249 compcert.lib.Integers Int testbit_repr thm
R125234:125249 compcert.lib.Integers Int testbit_repr thm
R125277:125279 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125268:125276 compcert.lib.Integers Int64 zwordsize def
R125281:125283 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R125284:125296 compcert.lib.Integers Int zwordsize def
R125277:125279 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125268:125276 compcert.lib.Integers Int64 zwordsize def
R125281:125283 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R125284:125296 compcert.lib.Integers Int zwordsize def
R125323:125329 compcert.lib.Integers Int64 testbit def
R125332:125335 compcert.lib.Integers Int64 shru def
R125340:125343 compcert.lib.Integers Int64 repr def
R125345:125357 compcert.lib.Integers Int zwordsize def
R125323:125329 compcert.lib.Integers Int64 testbit def
R125332:125335 compcert.lib.Integers Int64 shru def
R125340:125343 compcert.lib.Integers Int64 repr def
R125345:125357 compcert.lib.Integers Int zwordsize def
R125373:125381 compcert.lib.Integers Int64 bits_shru thm
R125373:125381 compcert.lib.Integers Int64 bits_shru thm
R125373:125381 compcert.lib.Integers Int64 bits_shru thm
R125373:125381 compcert.lib.Integers Int64 bits_shru thm
R125394:125401 compcert.lib.Integers Int64 unsigned def
R125404:125407 compcert.lib.Integers Int64 repr def
R125409:125421 compcert.lib.Integers Int zwordsize def
R125430:125442 compcert.lib.Integers Int zwordsize def
R125394:125401 compcert.lib.Integers Int64 unsigned def
R125404:125407 compcert.lib.Integers Int64 repr def
R125409:125421 compcert.lib.Integers Int zwordsize def
R125430:125442 compcert.lib.Integers Int zwordsize def
R125430:125442 compcert.lib.Integers Int zwordsize def
R125430:125442 compcert.lib.Integers Int zwordsize def
R125430:125442 compcert.lib.Integers Int zwordsize def
R125430:125442 compcert.lib.Integers Int zwordsize def
R125430:125442 compcert.lib.Integers Int zwordsize def
R125453:125460 compcert.lib.Coqlib <> zlt_true thm
R125453:125460 compcert.lib.Coqlib <> zlt_true thm
prf 125489:125500 Int64 bits_ofwords
binder 125512:125513 <> hi:897
binder 125515:125516 <> lo:898
binder 125518:125518 <> i:899
R125539:125544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R125570:125574 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125545:125551 compcert.lib.Integers Int64 testbit def
R125569:125569 compcert.lib.Integers <> i:899 var
R125554:125560 compcert.lib.Integers Int64 ofwords def
R125565:125566 compcert.lib.Integers <> lo:898 var
R125562:125563 compcert.lib.Integers <> hi:897 var
R125578:125580 compcert.lib.Coqlib <> zlt def
R125584:125596 compcert.lib.Integers Int zwordsize def
R125582:125582 compcert.lib.Integers <> i:899 var
R125625:125635 compcert.lib.Integers Int testbit def
R125642:125644 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R125641:125641 compcert.lib.Integers <> i:899 var
R125645:125657 compcert.lib.Integers Int zwordsize def
R125637:125638 compcert.lib.Integers <> hi:897 var
R125603:125613 compcert.lib.Integers Int testbit def
R125618:125618 compcert.lib.Integers <> i:899 var
R125615:125616 compcert.lib.Integers <> lo:898 var
R125522:125525 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R125527:125529 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R125526:125526 compcert.lib.Integers <> i:899 var
R125526:125526 compcert.lib.Integers <> i:899 var
R125530:125538 compcert.lib.Integers Int64 zwordsize def
R125685:125691 compcert.lib.Integers Int64 ofwords def
R125702:125708 compcert.lib.Integers Int64 bits_or thm
R125702:125708 compcert.lib.Integers Int64 bits_or thm
R125702:125708 compcert.lib.Integers Int64 bits_or thm
R125702:125708 compcert.lib.Integers Int64 bits_or thm
R125725:125732 compcert.lib.Integers Int64 bits_shl thm
R125725:125732 compcert.lib.Integers Int64 bits_shl thm
R125725:125732 compcert.lib.Integers Int64 bits_shl thm
R125725:125732 compcert.lib.Integers Int64 bits_shl thm
R125751:125758 compcert.lib.Integers Int64 unsigned def
R125761:125764 compcert.lib.Integers Int64 repr def
R125766:125778 compcert.lib.Integers Int zwordsize def
R125787:125799 compcert.lib.Integers Int zwordsize def
R125751:125758 compcert.lib.Integers Int64 unsigned def
R125761:125764 compcert.lib.Integers Int64 repr def
R125766:125778 compcert.lib.Integers Int zwordsize def
R125787:125799 compcert.lib.Integers Int zwordsize def
R125787:125799 compcert.lib.Integers Int zwordsize def
R125787:125799 compcert.lib.Integers Int zwordsize def
R125787:125799 compcert.lib.Integers Int zwordsize def
R125787:125799 compcert.lib.Integers Int zwordsize def
R125787:125799 compcert.lib.Integers Int zwordsize def
R125821:125823 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125812:125820 compcert.lib.Integers Int64 zwordsize def
R125825:125827 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R125828:125840 compcert.lib.Integers Int zwordsize def
R125821:125823 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125812:125820 compcert.lib.Integers Int64 zwordsize def
R125825:125827 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R125828:125840 compcert.lib.Integers Int zwordsize def
R125871:125873 compcert.lib.Coqlib <> zlt def
R125877:125889 compcert.lib.Integers Int zwordsize def
R125871:125873 compcert.lib.Coqlib <> zlt def
R125877:125889 compcert.lib.Integers Int zwordsize def
R125903:125914 compcert.lib.Integers Int64 testbit_repr thm
R125903:125914 compcert.lib.Integers Int64 testbit_repr thm
R125903:125914 compcert.lib.Integers Int64 testbit_repr thm
R125903:125914 compcert.lib.Integers Int64 testbit_repr thm
R125934:125945 compcert.lib.Integers Int64 testbit_repr thm
R125934:125945 compcert.lib.Integers Int64 testbit_repr thm
R125934:125945 compcert.lib.Integers Int64 testbit_repr thm
R125934:125945 compcert.lib.Integers Int64 testbit_repr thm
R125934:125945 compcert.lib.Integers Int64 testbit_repr thm
R125934:125945 compcert.lib.Integers Int64 testbit_repr thm
R125934:125945 compcert.lib.Integers Int64 testbit_repr thm
R125962:125972 compcert.lib.Integers Int testbit def
R125962:125972 compcert.lib.Integers Int testbit def
R125989:126002 compcert.lib.Integers Int bits_above thm
R125989:126002 compcert.lib.Integers Int bits_above thm
R125989:126002 compcert.lib.Integers Int bits_above thm
R125989:126002 compcert.lib.Integers Int bits_above thm
R126011:126021 Coq.Bool.Bool <> orb_false_r thm
R126011:126021 Coq.Bool.Bool <> orb_false_r thm
prf 126051:126060 Int64 lo_ofwords
binder 126072:126073 <> hi:900
binder 126075:126076 <> lo:901
R126101:126103 Coq.Init.Logic <> ::type_scope:x_'='_x not
R126079:126084 compcert.lib.Integers Int64 loword def
R126087:126093 compcert.lib.Integers Int64 ofwords def
R126098:126099 compcert.lib.Integers <> lo:901 var
R126095:126096 compcert.lib.Integers <> hi:900 var
R126104:126105 compcert.lib.Integers <> lo:901 var
R126131:126146 compcert.lib.Integers Int same_bits_eq thm
R126131:126146 compcert.lib.Integers Int same_bits_eq thm
R126167:126177 compcert.lib.Integers Int64 bits_loword thm
R126167:126177 compcert.lib.Integers Int64 bits_loword thm
R126167:126177 compcert.lib.Integers Int64 bits_loword thm
R126167:126177 compcert.lib.Integers Int64 bits_loword thm
R126194:126205 compcert.lib.Integers Int64 bits_ofwords thm
R126194:126205 compcert.lib.Integers Int64 bits_ofwords thm
R126194:126205 compcert.lib.Integers Int64 bits_ofwords thm
R126194:126205 compcert.lib.Integers Int64 bits_ofwords thm
R126214:126221 compcert.lib.Coqlib <> zlt_true thm
R126214:126221 compcert.lib.Coqlib <> zlt_true thm
R126250:126252 Coq.Init.Logic <> ::type_scope:x_'='_x not
R126241:126249 compcert.lib.Integers Int64 zwordsize def
R126254:126256 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R126257:126269 compcert.lib.Integers Int zwordsize def
R126250:126252 Coq.Init.Logic <> ::type_scope:x_'='_x not
R126241:126249 compcert.lib.Integers Int64 zwordsize def
R126254:126256 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R126257:126269 compcert.lib.Integers Int zwordsize def
prf 126307:126316 Int64 hi_ofwords
binder 126328:126329 <> hi:902
binder 126331:126332 <> lo:903
R126357:126359 Coq.Init.Logic <> ::type_scope:x_'='_x not
R126335:126340 compcert.lib.Integers Int64 hiword def
R126343:126349 compcert.lib.Integers Int64 ofwords def
R126354:126355 compcert.lib.Integers <> lo:903 var
R126351:126352 compcert.lib.Integers <> hi:902 var
R126360:126361 compcert.lib.Integers <> hi:902 var
R126387:126402 compcert.lib.Integers Int same_bits_eq thm
R126387:126402 compcert.lib.Integers Int same_bits_eq thm
R126423:126433 compcert.lib.Integers Int64 bits_hiword thm
R126423:126433 compcert.lib.Integers Int64 bits_hiword thm
R126423:126433 compcert.lib.Integers Int64 bits_hiword thm
R126423:126433 compcert.lib.Integers Int64 bits_hiword thm
R126450:126461 compcert.lib.Integers Int64 bits_ofwords thm
R126450:126461 compcert.lib.Integers Int64 bits_ofwords thm
R126450:126461 compcert.lib.Integers Int64 bits_ofwords thm
R126450:126461 compcert.lib.Integers Int64 bits_ofwords thm
R126474:126482 compcert.lib.Coqlib <> zlt_false thm
R126474:126482 compcert.lib.Coqlib <> zlt_false thm
R126474:126482 compcert.lib.Coqlib <> zlt_false thm
R126474:126482 compcert.lib.Coqlib <> zlt_false thm
R126527:126529 Coq.Init.Logic <> ::type_scope:x_'='_x not
R126518:126526 compcert.lib.Integers Int64 zwordsize def
R126531:126533 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R126534:126546 compcert.lib.Integers Int zwordsize def
R126527:126529 Coq.Init.Logic <> ::type_scope:x_'='_x not
R126518:126526 compcert.lib.Integers Int64 zwordsize def
R126531:126533 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R126534:126546 compcert.lib.Integers Int zwordsize def
prf 126584:126600 Int64 ofwords_recompose
binder 126612:126612 <> n:904
R126644:126646 Coq.Init.Logic <> ::type_scope:x_'='_x not
R126615:126621 compcert.lib.Integers Int64 ofwords def
R126635:126640 compcert.lib.Integers Int64 loword def
R126642:126642 compcert.lib.Integers <> n:904 var
R126624:126629 compcert.lib.Integers Int64 hiword def
R126631:126631 compcert.lib.Integers <> n:904 var
R126647:126647 compcert.lib.Integers <> n:904 var
R126673:126684 compcert.lib.Integers Int64 same_bits_eq thm
R126673:126684 compcert.lib.Integers Int64 same_bits_eq thm
R126703:126714 compcert.lib.Integers Int64 bits_ofwords thm
R126703:126714 compcert.lib.Integers Int64 bits_ofwords thm
R126703:126714 compcert.lib.Integers Int64 bits_ofwords thm
R126703:126714 compcert.lib.Integers Int64 bits_ofwords thm
R126735:126737 compcert.lib.Coqlib <> zlt def
R126741:126753 compcert.lib.Integers Int zwordsize def
R126735:126737 compcert.lib.Coqlib <> zlt def
R126741:126753 compcert.lib.Integers Int zwordsize def
R126765:126775 compcert.lib.Integers Int64 bits_loword thm
R126765:126775 compcert.lib.Integers Int64 bits_loword thm
R126795:126805 compcert.lib.Integers Int64 bits_hiword thm
R126795:126805 compcert.lib.Integers Int64 bits_hiword thm
R126795:126805 compcert.lib.Integers Int64 bits_hiword thm
R126795:126805 compcert.lib.Integers Int64 bits_hiword thm
R126843:126845 Coq.Init.Logic <> ::type_scope:x_'='_x not
R126834:126842 compcert.lib.Integers Int64 zwordsize def
R126847:126849 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R126850:126862 compcert.lib.Integers Int zwordsize def
R126843:126845 Coq.Init.Logic <> ::type_scope:x_'='_x not
R126834:126842 compcert.lib.Integers Int64 zwordsize def
R126847:126849 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R126850:126862 compcert.lib.Integers Int zwordsize def
prf 126900:126910 Int64 ofwords_add
binder 126922:126923 <> lo:905
binder 126925:126926 <> hi:906
R126942:126944 Coq.Init.Logic <> ::type_scope:x_'='_x not
R126929:126935 compcert.lib.Integers Int64 ofwords def
R126940:126941 compcert.lib.Integers <> lo:905 var
R126937:126938 compcert.lib.Integers <> hi:906 var
R126945:126948 compcert.lib.Integers Int64 repr def
R126977:126979 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R126966:126968 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R126951:126962 compcert.lib.Integers Int unsigned def
R126964:126965 compcert.lib.Integers <> hi:906 var
R126969:126973 Coq.ZArith.Zpower <> two_p def
R126980:126991 compcert.lib.Integers Int unsigned def
R126993:126994 compcert.lib.Integers <> lo:905 var
R127022:127028 compcert.lib.Integers Int64 ofwords def
R127039:127055 compcert.lib.Integers Int64 shifted_or_is_add thm
R127039:127055 compcert.lib.Integers Int64 shifted_or_is_add thm
R127039:127055 compcert.lib.Integers Int64 shifted_or_is_add thm
R127039:127055 compcert.lib.Integers Int64 shifted_or_is_add thm
R127039:127055 compcert.lib.Integers Int64 shifted_or_is_add thm
R127066:127077 compcert.lib.Integers Int64 eqm_samerepr thm
R127066:127077 compcert.lib.Integers Int64 eqm_samerepr thm
R127086:127092 compcert.lib.Integers Int64 eqm_add thm
R127086:127092 compcert.lib.Integers Int64 eqm_add thm
R127101:127108 compcert.lib.Integers Int64 eqm_mult thm
R127101:127108 compcert.lib.Integers Int64 eqm_mult thm
R127119:127125 compcert.lib.Integers Int64 eqm_sym thm
R127134:127150 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R127119:127125 compcert.lib.Integers Int64 eqm_sym thm
R127134:127150 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R127161:127168 compcert.lib.Integers Int64 eqm_refl thm
R127161:127168 compcert.lib.Integers Int64 eqm_refl thm
R127179:127185 compcert.lib.Integers Int64 eqm_sym thm
R127194:127210 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R127179:127185 compcert.lib.Integers Int64 eqm_sym thm
R127194:127210 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R127222:127234 compcert.lib.Integers Int zwordsize def
R127252:127260 compcert.lib.Integers Int64 zwordsize def
R127222:127234 compcert.lib.Integers Int zwordsize def
R127252:127260 compcert.lib.Integers Int64 zwordsize def
R127288:127300 compcert.lib.Integers Int64 unsigned_repr thm
R127288:127300 compcert.lib.Integers Int64 unsigned_repr thm
R127288:127300 compcert.lib.Integers Int64 unsigned_repr thm
R127288:127300 compcert.lib.Integers Int64 unsigned_repr thm
R127315:127332 compcert.lib.Integers Int unsigned_range thm
R127315:127332 compcert.lib.Integers Int unsigned_range thm
R127388:127390 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R127372:127387 compcert.lib.Integers Int max_unsigned def
R127391:127402 compcert.lib.Integers Int64 max_unsigned def
R127388:127390 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R127372:127387 compcert.lib.Integers Int max_unsigned def
R127391:127402 compcert.lib.Integers Int64 max_unsigned def
R127439:127458 compcert.lib.Integers Int unsigned_range_2 thm
R127439:127458 compcert.lib.Integers Int unsigned_range_2 thm
prf 127484:127495 Int64 ofwords_add'
binder 127507:127508 <> lo:907
binder 127510:127511 <> hi:908
R127538:127540 Coq.Init.Logic <> ::type_scope:x_'='_x not
R127514:127521 compcert.lib.Integers Int64 unsigned def
R127524:127530 compcert.lib.Integers Int64 ofwords def
R127535:127536 compcert.lib.Integers <> lo:907 var
R127532:127533 compcert.lib.Integers <> hi:908 var
R127567:127569 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R127556:127558 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R127541:127552 compcert.lib.Integers Int unsigned def
R127554:127555 compcert.lib.Integers <> hi:908 var
R127559:127563 Coq.ZArith.Zpower <> two_p def
R127570:127581 compcert.lib.Integers Int unsigned def
R127583:127584 compcert.lib.Integers <> lo:907 var
R127612:127622 compcert.lib.Integers Int64 ofwords_add thm
R127612:127622 compcert.lib.Integers Int64 ofwords_add thm
R127612:127622 compcert.lib.Integers Int64 ofwords_add thm
R127631:127643 compcert.lib.Integers Int64 unsigned_repr thm
R127631:127643 compcert.lib.Integers Int64 unsigned_repr thm
R127660:127677 compcert.lib.Integers Int unsigned_range thm
R127684:127701 compcert.lib.Integers Int unsigned_range thm
R127660:127677 compcert.lib.Integers Int unsigned_range thm
R127684:127701 compcert.lib.Integers Int unsigned_range thm
R127718:127722 Coq.ZArith.Zpower <> two_p def
R127733:127743 compcert.lib.Integers Int modulus def
R127718:127722 Coq.ZArith.Zpower <> two_p def
R127733:127743 compcert.lib.Integers Int modulus def
R127733:127743 compcert.lib.Integers Int modulus def
R127755:127765 compcert.lib.Integers Int modulus def
R127755:127765 compcert.lib.Integers Int modulus def
R127793:127804 compcert.lib.Integers Int64 max_unsigned def
R127793:127804 compcert.lib.Integers Int64 max_unsigned def
prf 127855:127866 Int64 eqm_mul_2p32
binder 127878:127878 <> x:909
binder 127880:127880 <> y:910
R127894:127897 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R127898:127900 compcert.lib.Integers Int64 eqm def
R127919:127921 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R127918:127918 compcert.lib.Integers <> y:910 var
R127922:127926 Coq.ZArith.Zpower <> two_p def
R127904:127906 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R127903:127903 compcert.lib.Integers <> x:909 var
R127907:127911 Coq.ZArith.Zpower <> two_p def
R127883:127889 compcert.lib.Integers Int eqm def
R127893:127893 compcert.lib.Integers <> y:910 var
R127891:127891 compcert.lib.Integers <> x:909 var
R128003:128013 compcert.lib.Integers Int modulus def
R128021:128025 Coq.ZArith.Zpower <> two_p def
R128003:128013 compcert.lib.Integers Int modulus def
R128021:128025 Coq.ZArith.Zpower <> two_p def
R128041:128047 compcert.lib.Integers Int64 modulus def
R128063:128065 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R128055:128059 Coq.ZArith.Zpower <> two_p def
R128066:128070 Coq.ZArith.Zpower <> two_p def
R128041:128047 compcert.lib.Integers Int64 modulus def
R128063:128065 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R128055:128059 Coq.ZArith.Zpower <> two_p def
R128066:128070 Coq.ZArith.Zpower <> two_p def
prf 128097:128109 Int64 ofwords_add''
binder 128121:128122 <> lo:911
binder 128124:128125 <> hi:912
R128150:128152 Coq.Init.Logic <> ::type_scope:x_'='_x not
R128128:128133 compcert.lib.Integers Int64 signed def
R128136:128142 compcert.lib.Integers Int64 ofwords def
R128147:128148 compcert.lib.Integers <> lo:911 var
R128144:128145 compcert.lib.Integers <> hi:912 var
R128177:128179 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R128166:128168 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R128153:128162 compcert.lib.Integers Int signed def
R128164:128165 compcert.lib.Integers <> hi:912 var
R128169:128173 Coq.ZArith.Zpower <> two_p def
R128180:128191 compcert.lib.Integers Int unsigned def
R128193:128194 compcert.lib.Integers <> lo:911 var
R128222:128232 compcert.lib.Integers Int64 ofwords_add thm
R128222:128232 compcert.lib.Integers Int64 ofwords_add thm
R128222:128232 compcert.lib.Integers Int64 ofwords_add thm
R128246:128249 compcert.lib.Integers Int64 repr def
R128278:128280 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R128267:128269 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R128252:128263 compcert.lib.Integers Int unsigned def
R128270:128274 Coq.ZArith.Zpower <> two_p def
R128281:128292 compcert.lib.Integers Int unsigned def
R128310:128313 compcert.lib.Integers Int64 repr def
R128340:128342 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R128329:128331 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R128316:128325 compcert.lib.Integers Int signed def
R128332:128336 Coq.ZArith.Zpower <> two_p def
R128343:128354 compcert.lib.Integers Int unsigned def
R128246:128249 compcert.lib.Integers Int64 repr def
R128278:128280 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R128267:128269 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R128252:128263 compcert.lib.Integers Int unsigned def
R128270:128274 Coq.ZArith.Zpower <> two_p def
R128281:128292 compcert.lib.Integers Int unsigned def
R128310:128313 compcert.lib.Integers Int64 repr def
R128340:128342 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R128329:128331 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R128316:128325 compcert.lib.Integers Int signed def
R128332:128336 Coq.ZArith.Zpower <> two_p def
R128343:128354 compcert.lib.Integers Int unsigned def
R128370:128380 compcert.lib.Integers Int64 signed_repr thm
R128370:128380 compcert.lib.Integers Int64 signed_repr thm
R128397:128412 compcert.lib.Integers Int signed_range thm
R128419:128436 compcert.lib.Integers Int unsigned_range thm
R128397:128412 compcert.lib.Integers Int signed_range thm
R128419:128436 compcert.lib.Integers Int unsigned_range thm
R128453:128457 Coq.ZArith.Zpower <> two_p def
R128468:128478 compcert.lib.Integers Int modulus def
R128453:128457 Coq.ZArith.Zpower <> two_p def
R128468:128478 compcert.lib.Integers Int modulus def
R128468:128478 compcert.lib.Integers Int modulus def
R128490:128499 compcert.lib.Integers Int64 min_signed def
R128521:128523 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R128507:128520 compcert.lib.Integers Int min_signed def
R128524:128534 compcert.lib.Integers Int modulus def
R128490:128499 compcert.lib.Integers Int64 min_signed def
R128521:128523 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R128507:128520 compcert.lib.Integers Int min_signed def
R128524:128534 compcert.lib.Integers Int modulus def
R128547:128556 compcert.lib.Integers Int64 max_signed def
R128606:128608 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R128592:128594 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R128578:128580 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R128564:128577 compcert.lib.Integers Int max_signed def
R128581:128591 compcert.lib.Integers Int modulus def
R128595:128605 compcert.lib.Integers Int modulus def
R128547:128556 compcert.lib.Integers Int64 max_signed def
R128606:128608 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R128592:128594 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R128578:128580 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R128564:128577 compcert.lib.Integers Int max_signed def
R128581:128591 compcert.lib.Integers Int modulus def
R128595:128605 compcert.lib.Integers Int modulus def
R128622:128632 compcert.lib.Integers Int modulus def
R128622:128632 compcert.lib.Integers Int modulus def
R128668:128679 compcert.lib.Integers Int64 eqm_samerepr thm
R128668:128679 compcert.lib.Integers Int64 eqm_samerepr thm
R128688:128694 compcert.lib.Integers Int64 eqm_add thm
R128688:128694 compcert.lib.Integers Int64 eqm_add thm
R128703:128714 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R128703:128714 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R128723:128745 compcert.lib.Integers Int eqm_signed_unsigned thm
R128723:128745 compcert.lib.Integers Int eqm_signed_unsigned thm
R128754:128761 compcert.lib.Integers Int64 eqm_refl thm
R128754:128761 compcert.lib.Integers Int64 eqm_refl thm
prf 128843:128865 Int64 decompose_bitwise_binop
binder 128877:128877 <> f:913
binder 128879:128881 <> f64:914
binder 128883:128885 <> f32:915
binder 128887:128888 <> xh:916
binder 128890:128891 <> xl:917
binder 128893:128894 <> yh:918
binder 128896:128897 <> yl:919
R128902:128902 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R128990:128996 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R128997:128997 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R129101:129107 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R129143:129145 Coq.Init.Logic <> ::type_scope:x_'='_x not
R129108:129110 compcert.lib.Integers <> f64:914 var
R129129:129135 compcert.lib.Integers Int64 ofwords def
R129140:129141 compcert.lib.Integers <> yl:919 var
R129137:129138 compcert.lib.Integers <> yh:918 var
R129113:129119 compcert.lib.Integers Int64 ofwords def
R129124:129125 compcert.lib.Integers <> xl:917 var
R129121:129122 compcert.lib.Integers <> xh:916 var
R129146:129152 compcert.lib.Integers Int64 ofwords def
R129167:129169 compcert.lib.Integers <> f32:915 var
R129174:129175 compcert.lib.Integers <> yl:919 var
R129171:129172 compcert.lib.Integers <> xl:917 var
R129155:129157 compcert.lib.Integers <> f32:915 var
R129162:129163 compcert.lib.Integers <> yh:918 var
R129159:129160 compcert.lib.Integers <> xh:916 var
binder 129005:129005 <> x:920
binder 129007:129007 <> y:921
binder 129009:129009 <> i:922
R129034:129037 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R129061:129063 Coq.Init.Logic <> ::type_scope:x_'='_x not
R129038:129048 compcert.lib.Integers Int testbit def
R129060:129060 compcert.lib.Integers <> i:922 var
R129051:129053 compcert.lib.Integers <> f32:915 var
R129057:129057 compcert.lib.Integers <> y:921 var
R129055:129055 compcert.lib.Integers <> x:920 var
R129064:129064 compcert.lib.Integers <> f:913 var
R129085:129095 compcert.lib.Integers Int testbit def
R129099:129099 compcert.lib.Integers <> i:922 var
R129097:129097 compcert.lib.Integers <> y:921 var
R129067:129077 compcert.lib.Integers Int testbit def
R129081:129081 compcert.lib.Integers <> i:922 var
R129079:129079 compcert.lib.Integers <> x:920 var
R129013:129016 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R129018:129020 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R129017:129017 compcert.lib.Integers <> i:922 var
R129017:129017 compcert.lib.Integers <> i:922 var
R129021:129033 compcert.lib.Integers Int zwordsize def
binder 128910:128910 <> x:923
binder 128912:128912 <> y:924
binder 128914:128914 <> i:925
R128935:128938 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R128958:128960 Coq.Init.Logic <> ::type_scope:x_'='_x not
R128939:128945 compcert.lib.Integers Int64 testbit def
R128957:128957 compcert.lib.Integers <> i:925 var
R128948:128950 compcert.lib.Integers <> f64:914 var
R128954:128954 compcert.lib.Integers <> y:924 var
R128952:128952 compcert.lib.Integers <> x:923 var
R128961:128961 compcert.lib.Integers <> f:913 var
R128978:128984 compcert.lib.Integers Int64 testbit def
R128988:128988 compcert.lib.Integers <> i:925 var
R128986:128986 compcert.lib.Integers <> y:924 var
R128964:128970 compcert.lib.Integers Int64 testbit def
R128974:128974 compcert.lib.Integers <> i:925 var
R128972:128972 compcert.lib.Integers <> x:923 var
R128918:128921 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R128923:128925 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R128922:128922 compcert.lib.Integers <> i:925 var
R128922:128922 compcert.lib.Integers <> i:925 var
R128926:128934 compcert.lib.Integers Int64 zwordsize def
R129202:129219 compcert.lib.Integers Int64 same_bits_eq thm
R129202:129219 compcert.lib.Integers Int64 same_bits_eq thm
R129261:129272 compcert.lib.Integers Int64 bits_ofwords thm
R129261:129272 compcert.lib.Integers Int64 bits_ofwords thm
R129261:129272 compcert.lib.Integers Int64 bits_ofwords thm
R129261:129272 compcert.lib.Integers Int64 bits_ofwords thm
R129261:129272 compcert.lib.Integers Int64 bits_ofwords thm
R129261:129272 compcert.lib.Integers Int64 bits_ofwords thm
R129302:129304 Coq.Init.Logic <> ::type_scope:x_'='_x not
R129293:129301 compcert.lib.Integers Int64 zwordsize def
R129306:129308 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R129309:129321 compcert.lib.Integers Int zwordsize def
R129302:129304 Coq.Init.Logic <> ::type_scope:x_'='_x not
R129293:129301 compcert.lib.Integers Int64 zwordsize def
R129306:129308 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R129309:129321 compcert.lib.Integers Int zwordsize def
R129352:129354 compcert.lib.Coqlib <> zlt def
R129358:129370 compcert.lib.Integers Int zwordsize def
R129352:129354 compcert.lib.Coqlib <> zlt def
R129358:129370 compcert.lib.Integers Int zwordsize def
prf 129413:129425 Int64 decompose_and
binder 129437:129438 <> xh:926
binder 129440:129441 <> xl:927
binder 129443:129444 <> yh:928
binder 129446:129447 <> yl:929
R129487:129489 Coq.Init.Logic <> ::type_scope:x_'='_x not
R129452:129454 compcert.lib.Integers Int64 and def
R129473:129479 compcert.lib.Integers Int64 ofwords def
R129484:129485 compcert.lib.Integers <> yl:929 var
R129481:129482 compcert.lib.Integers <> yh:928 var
R129457:129463 compcert.lib.Integers Int64 ofwords def
R129468:129469 compcert.lib.Integers <> xl:927 var
R129465:129466 compcert.lib.Integers <> xh:926 var
R129490:129496 compcert.lib.Integers Int64 ofwords def
R129515:129521 compcert.lib.Integers Int and def
R129526:129527 compcert.lib.Integers <> yl:929 var
R129523:129524 compcert.lib.Integers <> xl:927 var
R129499:129505 compcert.lib.Integers Int and def
R129510:129511 compcert.lib.Integers <> yh:928 var
R129507:129508 compcert.lib.Integers <> xh:926 var
R129583:129586 Coq.Init.Datatypes <> andb def
R129554:129576 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R129583:129586 Coq.Init.Datatypes <> andb def
R129554:129576 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R129597:129604 compcert.lib.Integers Int64 bits_and thm
R129597:129604 compcert.lib.Integers Int64 bits_and thm
R129613:129624 compcert.lib.Integers Int bits_and thm
R129613:129624 compcert.lib.Integers Int bits_and thm
prf 129639:129650 Int64 decompose_or
binder 129662:129663 <> xh:930
binder 129665:129666 <> xl:931
binder 129668:129669 <> yh:932
binder 129671:129672 <> yl:933
R129711:129713 Coq.Init.Logic <> ::type_scope:x_'='_x not
R129677:129678 compcert.lib.Integers Int64 or def
R129697:129703 compcert.lib.Integers Int64 ofwords def
R129708:129709 compcert.lib.Integers <> yl:933 var
R129705:129706 compcert.lib.Integers <> yh:932 var
R129681:129687 compcert.lib.Integers Int64 ofwords def
R129692:129693 compcert.lib.Integers <> xl:931 var
R129689:129690 compcert.lib.Integers <> xh:930 var
R129714:129720 compcert.lib.Integers Int64 ofwords def
R129738:129743 compcert.lib.Integers Int or def
R129748:129749 compcert.lib.Integers <> yl:933 var
R129745:129746 compcert.lib.Integers <> xl:931 var
R129723:129728 compcert.lib.Integers Int or def
R129733:129734 compcert.lib.Integers <> yh:932 var
R129730:129731 compcert.lib.Integers <> xh:930 var
R129805:129807 Coq.Init.Datatypes <> orb def
R129776:129798 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R129805:129807 Coq.Init.Datatypes <> orb def
R129776:129798 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R129818:129824 compcert.lib.Integers Int64 bits_or thm
R129818:129824 compcert.lib.Integers Int64 bits_or thm
R129833:129843 compcert.lib.Integers Int bits_or thm
R129833:129843 compcert.lib.Integers Int bits_or thm
prf 129858:129870 Int64 decompose_xor
binder 129882:129883 <> xh:934
binder 129885:129886 <> xl:935
binder 129888:129889 <> yh:936
binder 129891:129892 <> yl:937
R129932:129934 Coq.Init.Logic <> ::type_scope:x_'='_x not
R129897:129899 compcert.lib.Integers Int64 xor def
R129918:129924 compcert.lib.Integers Int64 ofwords def
R129929:129930 compcert.lib.Integers <> yl:937 var
R129926:129927 compcert.lib.Integers <> yh:936 var
R129902:129908 compcert.lib.Integers Int64 ofwords def
R129913:129914 compcert.lib.Integers <> xl:935 var
R129910:129911 compcert.lib.Integers <> xh:934 var
R129935:129941 compcert.lib.Integers Int64 ofwords def
R129960:129966 compcert.lib.Integers Int xor def
R129971:129972 compcert.lib.Integers <> yl:937 var
R129968:129969 compcert.lib.Integers <> xl:935 var
R129944:129950 compcert.lib.Integers Int xor def
R129955:129956 compcert.lib.Integers <> yh:936 var
R129952:129953 compcert.lib.Integers <> xh:934 var
R130028:130031 Coq.Init.Datatypes <> xorb def
R129999:130021 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R130028:130031 Coq.Init.Datatypes <> xorb def
R129999:130021 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R130042:130049 compcert.lib.Integers Int64 bits_xor thm
R130042:130049 compcert.lib.Integers Int64 bits_xor thm
R130058:130069 compcert.lib.Integers Int bits_xor thm
R130058:130069 compcert.lib.Integers Int bits_xor thm
prf 130084:130096 Int64 decompose_not
binder 130108:130109 <> xh:938
binder 130111:130112 <> xl:939
R130136:130138 Coq.Init.Logic <> ::type_scope:x_'='_x not
R130117:130119 compcert.lib.Integers Int64 not def
R130122:130128 compcert.lib.Integers Int64 ofwords def
R130133:130134 compcert.lib.Integers <> xl:939 var
R130130:130131 compcert.lib.Integers <> xh:938 var
R130139:130145 compcert.lib.Integers Int64 ofwords def
R130161:130167 compcert.lib.Integers Int not def
R130169:130170 compcert.lib.Integers <> xl:939 var
R130148:130154 compcert.lib.Integers Int not def
R130156:130157 compcert.lib.Integers <> xh:938 var
R130198:130200 compcert.lib.Integers Int64 not def
R130203:130209 compcert.lib.Integers Int not def
R130223:130235 compcert.lib.Integers Int64 decompose_xor thm
R130223:130235 compcert.lib.Integers Int64 decompose_xor thm
R130223:130235 compcert.lib.Integers Int64 decompose_xor thm
R130256:130268 compcert.lib.Integers Int64 eq_spec thm
R130276:130282 compcert.lib.Integers Int64 ofwords def
R130293:130300 compcert.lib.Integers Int mone def
R130284:130291 compcert.lib.Integers Int mone def
R130270:130273 compcert.lib.Integers Int64 mone def
R130256:130268 compcert.lib.Integers Int64 eq_spec thm
R130276:130282 compcert.lib.Integers Int64 ofwords def
R130293:130300 compcert.lib.Integers Int mone def
R130284:130291 compcert.lib.Integers Int mone def
R130270:130273 compcert.lib.Integers Int64 mone def
prf 130317:130331 Int64 decompose_shl_1
binder 130343:130344 <> xh:940
binder 130346:130347 <> xl:941
binder 130349:130349 <> y:942
R130389:130394 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R130417:130421 Coq.Init.Logic <> ::type_scope:x_'='_x not
R130395:130398 compcert.lib.Integers Int64 shl' def
R130416:130416 compcert.lib.Integers <> y:942 var
R130401:130407 compcert.lib.Integers Int64 ofwords def
R130412:130413 compcert.lib.Integers <> xl:941 var
R130409:130410 compcert.lib.Integers <> xh:940 var
R130422:130428 compcert.lib.Integers Int64 ofwords def
R130505:130511 compcert.lib.Integers Int shl def
R130516:130516 compcert.lib.Integers <> y:942 var
R130513:130514 compcert.lib.Integers <> xl:941 var
R130431:130436 compcert.lib.Integers Int or def
R130454:130461 compcert.lib.Integers Int shru def
R130467:130473 compcert.lib.Integers Int sub def
R130489:130489 compcert.lib.Integers <> y:942 var
R130475:130487 compcert.lib.Integers Int iwordsize def
R130463:130464 compcert.lib.Integers <> xl:941 var
R130439:130445 compcert.lib.Integers Int shl def
R130450:130450 compcert.lib.Integers <> y:942 var
R130447:130448 compcert.lib.Integers <> xh:940 var
R130355:130358 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R130373:130375 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R130359:130370 compcert.lib.Integers Int unsigned def
R130372:130372 compcert.lib.Integers <> y:942 var
R130359:130370 compcert.lib.Integers Int unsigned def
R130372:130372 compcert.lib.Integers <> y:942 var
R130376:130388 compcert.lib.Integers Int zwordsize def
R130585:130587 Coq.Init.Logic <> ::type_scope:x_'='_x not
R130547:130558 compcert.lib.Integers Int unsigned def
R130561:130567 compcert.lib.Integers Int sub def
R130569:130581 compcert.lib.Integers Int iwordsize def
R130601:130603 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R130588:130600 compcert.lib.Integers Int zwordsize def
R130604:130615 compcert.lib.Integers Int unsigned def
R130585:130587 Coq.Init.Logic <> ::type_scope:x_'='_x not
R130547:130558 compcert.lib.Integers Int unsigned def
R130561:130567 compcert.lib.Integers Int sub def
R130569:130581 compcert.lib.Integers Int iwordsize def
R130601:130603 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R130588:130600 compcert.lib.Integers Int zwordsize def
R130604:130615 compcert.lib.Integers Int unsigned def
R130632:130638 compcert.lib.Integers Int sub def
R130649:130665 compcert.lib.Integers Int unsigned_repr thm
R130649:130665 compcert.lib.Integers Int unsigned_repr thm
R130649:130665 compcert.lib.Integers Int unsigned_repr thm
R130649:130665 compcert.lib.Integers Int unsigned_repr thm
R130686:130711 compcert.lib.Integers Int unsigned_repr_wordsize thm
R130686:130711 compcert.lib.Integers Int unsigned_repr_wordsize thm
R130686:130711 compcert.lib.Integers Int unsigned_repr_wordsize thm
R130725:130749 compcert.lib.Integers Int wordsize_max_unsigned thm
R130725:130749 compcert.lib.Integers Int wordsize_max_unsigned thm
R130780:130782 Coq.Init.Logic <> ::type_scope:x_'='_x not
R130771:130779 compcert.lib.Integers Int64 zwordsize def
R130784:130786 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R130787:130799 compcert.lib.Integers Int zwordsize def
R130780:130782 Coq.Init.Logic <> ::type_scope:x_'='_x not
R130771:130779 compcert.lib.Integers Int64 zwordsize def
R130784:130786 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R130787:130799 compcert.lib.Integers Int zwordsize def
R130826:130843 compcert.lib.Integers Int64 same_bits_eq thm
R130826:130843 compcert.lib.Integers Int64 same_bits_eq thm
R130864:130872 compcert.lib.Integers Int64 bits_shl' thm
R130864:130872 compcert.lib.Integers Int64 bits_shl' thm
R130864:130872 compcert.lib.Integers Int64 bits_shl' thm
R130901:130912 compcert.lib.Integers Int64 bits_ofwords thm
R130901:130912 compcert.lib.Integers Int64 bits_ofwords thm
R130901:130912 compcert.lib.Integers Int64 bits_ofwords thm
R130935:130937 compcert.lib.Coqlib <> zlt def
R130941:130953 compcert.lib.Integers Int zwordsize def
R130935:130937 compcert.lib.Coqlib <> zlt def
R130941:130953 compcert.lib.Integers Int zwordsize def
R130965:130976 compcert.lib.Integers Int bits_shl thm
R130965:130976 compcert.lib.Integers Int bits_shl thm
R130965:130976 compcert.lib.Integers Int bits_shl thm
R131000:131002 compcert.lib.Coqlib <> zlt def
R131007:131018 compcert.lib.Integers Int unsigned def
R131000:131002 compcert.lib.Coqlib <> zlt def
R131007:131018 compcert.lib.Integers Int unsigned def
R131041:131052 compcert.lib.Integers Int64 bits_ofwords thm
R131041:131052 compcert.lib.Integers Int64 bits_ofwords thm
R131041:131052 compcert.lib.Integers Int64 bits_ofwords thm
R131072:131079 compcert.lib.Coqlib <> zlt_true thm
R131072:131079 compcert.lib.Coqlib <> zlt_true thm
R131072:131079 compcert.lib.Coqlib <> zlt_true thm
R131107:131115 compcert.lib.Coqlib <> zlt_false thm
R131107:131115 compcert.lib.Coqlib <> zlt_false thm
R131107:131115 compcert.lib.Coqlib <> zlt_false thm
R131135:131146 compcert.lib.Integers Int64 bits_ofwords thm
R131135:131146 compcert.lib.Integers Int64 bits_ofwords thm
R131135:131146 compcert.lib.Integers Int64 bits_ofwords thm
R131168:131178 compcert.lib.Integers Int bits_or thm
R131168:131178 compcert.lib.Integers Int bits_or thm
R131168:131178 compcert.lib.Integers Int bits_or thm
R131198:131209 compcert.lib.Integers Int bits_shl thm
R131198:131209 compcert.lib.Integers Int bits_shl thm
R131198:131209 compcert.lib.Integers Int bits_shl thm
R131231:131243 compcert.lib.Integers Int bits_shru thm
R131231:131243 compcert.lib.Integers Int bits_shru thm
R131231:131243 compcert.lib.Integers Int bits_shru thm
R131279:131281 compcert.lib.Coqlib <> zlt def
R131305:131317 compcert.lib.Integers Int zwordsize def
R131285:131287 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R131288:131299 compcert.lib.Integers Int unsigned def
R131279:131281 compcert.lib.Coqlib <> zlt def
R131305:131317 compcert.lib.Integers Int zwordsize def
R131285:131287 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R131288:131299 compcert.lib.Integers Int unsigned def
R131332:131339 compcert.lib.Coqlib <> zlt_true thm
R131332:131339 compcert.lib.Coqlib <> zlt_true thm
R131332:131339 compcert.lib.Coqlib <> zlt_true thm
R131359:131366 compcert.lib.Coqlib <> zlt_true thm
R131359:131366 compcert.lib.Coqlib <> zlt_true thm
R131359:131366 compcert.lib.Coqlib <> zlt_true thm
R131388:131398 Coq.Bool.Bool <> orb_false_l thm
R131388:131398 Coq.Bool.Bool <> orb_false_l thm
R131388:131398 Coq.Bool.Bool <> orb_false_l thm
R131427:131435 compcert.lib.Coqlib <> zlt_false thm
R131427:131435 compcert.lib.Coqlib <> zlt_false thm
R131427:131435 compcert.lib.Coqlib <> zlt_false thm
R131455:131463 compcert.lib.Coqlib <> zlt_false thm
R131455:131463 compcert.lib.Coqlib <> zlt_false thm
R131455:131463 compcert.lib.Coqlib <> zlt_false thm
R131485:131495 Coq.Bool.Bool <> orb_false_r thm
R131485:131495 Coq.Bool.Bool <> orb_false_r thm
R131485:131495 Coq.Bool.Bool <> orb_false_r thm
prf 131526:131540 Int64 decompose_shl_2
binder 131552:131553 <> xh:943
binder 131555:131556 <> xl:944
binder 131558:131558 <> y:945
R131606:131611 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R131634:131638 Coq.Init.Logic <> ::type_scope:x_'='_x not
R131612:131615 compcert.lib.Integers Int64 shl' def
R131633:131633 compcert.lib.Integers <> y:945 var
R131618:131624 compcert.lib.Integers Int64 ofwords def
R131629:131630 compcert.lib.Integers <> xl:944 var
R131626:131627 compcert.lib.Integers <> xh:943 var
R131639:131645 compcert.lib.Integers Int64 ofwords def
R131686:131693 compcert.lib.Integers Int zero def
R131648:131654 compcert.lib.Integers Int shl def
R131660:131666 compcert.lib.Integers Int sub def
R131670:131682 compcert.lib.Integers Int iwordsize def
R131668:131668 compcert.lib.Integers <> y:945 var
R131656:131657 compcert.lib.Integers <> xl:944 var
R131576:131579 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R131594:131596 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R131563:131575 compcert.lib.Integers Int zwordsize def
R131580:131591 compcert.lib.Integers Int unsigned def
R131593:131593 compcert.lib.Integers <> y:945 var
R131580:131591 compcert.lib.Integers Int unsigned def
R131593:131593 compcert.lib.Integers <> y:945 var
R131597:131605 compcert.lib.Integers Int64 zwordsize def
R131732:131734 Coq.Init.Logic <> ::type_scope:x_'='_x not
R131723:131731 compcert.lib.Integers Int64 zwordsize def
R131736:131738 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R131739:131751 compcert.lib.Integers Int zwordsize def
R131732:131734 Coq.Init.Logic <> ::type_scope:x_'='_x not
R131723:131731 compcert.lib.Integers Int64 zwordsize def
R131736:131738 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R131739:131751 compcert.lib.Integers Int zwordsize def
R131818:131820 Coq.Init.Logic <> ::type_scope:x_'='_x not
R131780:131791 compcert.lib.Integers Int unsigned def
R131794:131800 compcert.lib.Integers Int sub def
R131804:131816 compcert.lib.Integers Int iwordsize def
R131835:131837 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R131821:131832 compcert.lib.Integers Int unsigned def
R131838:131850 compcert.lib.Integers Int zwordsize def
R131818:131820 Coq.Init.Logic <> ::type_scope:x_'='_x not
R131780:131791 compcert.lib.Integers Int unsigned def
R131794:131800 compcert.lib.Integers Int sub def
R131804:131816 compcert.lib.Integers Int iwordsize def
R131835:131837 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R131821:131832 compcert.lib.Integers Int unsigned def
R131838:131850 compcert.lib.Integers Int zwordsize def
R131865:131871 compcert.lib.Integers Int sub def
R131882:131898 compcert.lib.Integers Int unsigned_repr thm
R131882:131898 compcert.lib.Integers Int unsigned_repr thm
R131882:131898 compcert.lib.Integers Int unsigned_repr thm
R131882:131898 compcert.lib.Integers Int unsigned_repr thm
R131919:131944 compcert.lib.Integers Int unsigned_repr_wordsize thm
R131919:131944 compcert.lib.Integers Int unsigned_repr_wordsize thm
R131919:131944 compcert.lib.Integers Int unsigned_repr_wordsize thm
R131959:131978 compcert.lib.Integers Int unsigned_range_2 thm
R131959:131978 compcert.lib.Integers Int unsigned_range_2 thm
R132001:132018 compcert.lib.Integers Int64 same_bits_eq thm
R132001:132018 compcert.lib.Integers Int64 same_bits_eq thm
R132039:132047 compcert.lib.Integers Int64 bits_shl' thm
R132039:132047 compcert.lib.Integers Int64 bits_shl' thm
R132039:132047 compcert.lib.Integers Int64 bits_shl' thm
R132076:132087 compcert.lib.Integers Int64 bits_ofwords thm
R132076:132087 compcert.lib.Integers Int64 bits_ofwords thm
R132076:132087 compcert.lib.Integers Int64 bits_ofwords thm
R132110:132112 compcert.lib.Coqlib <> zlt def
R132116:132128 compcert.lib.Integers Int zwordsize def
R132110:132112 compcert.lib.Coqlib <> zlt def
R132116:132128 compcert.lib.Integers Int zwordsize def
R132140:132147 compcert.lib.Coqlib <> zlt_true thm
R132140:132147 compcert.lib.Coqlib <> zlt_true thm
R132140:132147 compcert.lib.Coqlib <> zlt_true thm
R132165:132177 compcert.lib.Integers Int bits_zero thm
R132165:132177 compcert.lib.Integers Int bits_zero thm
R132190:132201 compcert.lib.Integers Int bits_shl thm
R132190:132201 compcert.lib.Integers Int bits_shl thm
R132190:132201 compcert.lib.Integers Int bits_shl thm
R132225:132227 compcert.lib.Coqlib <> zlt def
R132232:132243 compcert.lib.Integers Int unsigned def
R132225:132227 compcert.lib.Coqlib <> zlt def
R132232:132243 compcert.lib.Integers Int unsigned def
R132260:132267 compcert.lib.Coqlib <> zlt_true thm
R132260:132267 compcert.lib.Coqlib <> zlt_true thm
R132260:132267 compcert.lib.Coqlib <> zlt_true thm
R132295:132303 compcert.lib.Coqlib <> zlt_false thm
R132295:132303 compcert.lib.Coqlib <> zlt_false thm
R132295:132303 compcert.lib.Coqlib <> zlt_false thm
R132325:132336 compcert.lib.Integers Int64 bits_ofwords thm
R132325:132336 compcert.lib.Integers Int64 bits_ofwords thm
R132325:132336 compcert.lib.Integers Int64 bits_ofwords thm
R132356:132363 compcert.lib.Coqlib <> zlt_true thm
R132356:132363 compcert.lib.Coqlib <> zlt_true thm
R132356:132363 compcert.lib.Coqlib <> zlt_true thm
prf 132403:132418 Int64 decompose_shru_1
binder 132430:132431 <> xh:946
binder 132433:132434 <> xl:947
binder 132436:132436 <> y:948
R132476:132481 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R132505:132509 Coq.Init.Logic <> ::type_scope:x_'='_x not
R132482:132486 compcert.lib.Integers Int64 shru' def
R132504:132504 compcert.lib.Integers <> y:948 var
R132489:132495 compcert.lib.Integers Int64 ofwords def
R132500:132501 compcert.lib.Integers <> xl:947 var
R132497:132498 compcert.lib.Integers <> xh:946 var
R132510:132516 compcert.lib.Integers Int64 ofwords def
R132545:132550 compcert.lib.Integers Int or def
R132569:132575 compcert.lib.Integers Int shl def
R132581:132587 compcert.lib.Integers Int sub def
R132603:132603 compcert.lib.Integers <> y:948 var
R132589:132601 compcert.lib.Integers Int iwordsize def
R132577:132578 compcert.lib.Integers <> xh:946 var
R132553:132560 compcert.lib.Integers Int shru def
R132565:132565 compcert.lib.Integers <> y:948 var
R132562:132563 compcert.lib.Integers <> xl:947 var
R132519:132526 compcert.lib.Integers Int shru def
R132531:132531 compcert.lib.Integers <> y:948 var
R132528:132529 compcert.lib.Integers <> xh:946 var
R132442:132445 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R132460:132462 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R132446:132457 compcert.lib.Integers Int unsigned def
R132459:132459 compcert.lib.Integers <> y:948 var
R132446:132457 compcert.lib.Integers Int unsigned def
R132459:132459 compcert.lib.Integers <> y:948 var
R132463:132475 compcert.lib.Integers Int zwordsize def
R132674:132676 Coq.Init.Logic <> ::type_scope:x_'='_x not
R132636:132647 compcert.lib.Integers Int unsigned def
R132650:132656 compcert.lib.Integers Int sub def
R132658:132670 compcert.lib.Integers Int iwordsize def
R132690:132692 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R132677:132689 compcert.lib.Integers Int zwordsize def
R132693:132704 compcert.lib.Integers Int unsigned def
R132674:132676 Coq.Init.Logic <> ::type_scope:x_'='_x not
R132636:132647 compcert.lib.Integers Int unsigned def
R132650:132656 compcert.lib.Integers Int sub def
R132658:132670 compcert.lib.Integers Int iwordsize def
R132690:132692 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R132677:132689 compcert.lib.Integers Int zwordsize def
R132693:132704 compcert.lib.Integers Int unsigned def
R132721:132727 compcert.lib.Integers Int sub def
R132738:132754 compcert.lib.Integers Int unsigned_repr thm
R132738:132754 compcert.lib.Integers Int unsigned_repr thm
R132738:132754 compcert.lib.Integers Int unsigned_repr thm
R132738:132754 compcert.lib.Integers Int unsigned_repr thm
R132775:132800 compcert.lib.Integers Int unsigned_repr_wordsize thm
R132775:132800 compcert.lib.Integers Int unsigned_repr_wordsize thm
R132775:132800 compcert.lib.Integers Int unsigned_repr_wordsize thm
R132814:132838 compcert.lib.Integers Int wordsize_max_unsigned thm
R132814:132838 compcert.lib.Integers Int wordsize_max_unsigned thm
R132869:132871 Coq.Init.Logic <> ::type_scope:x_'='_x not
R132860:132868 compcert.lib.Integers Int64 zwordsize def
R132873:132875 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R132876:132888 compcert.lib.Integers Int zwordsize def
R132869:132871 Coq.Init.Logic <> ::type_scope:x_'='_x not
R132860:132868 compcert.lib.Integers Int64 zwordsize def
R132873:132875 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R132876:132888 compcert.lib.Integers Int zwordsize def
R132915:132932 compcert.lib.Integers Int64 same_bits_eq thm
R132915:132932 compcert.lib.Integers Int64 same_bits_eq thm
R132953:132962 compcert.lib.Integers Int64 bits_shru' thm
R132953:132962 compcert.lib.Integers Int64 bits_shru' thm
R132953:132962 compcert.lib.Integers Int64 bits_shru' thm
R132991:133002 compcert.lib.Integers Int64 bits_ofwords thm
R132991:133002 compcert.lib.Integers Int64 bits_ofwords thm
R132991:133002 compcert.lib.Integers Int64 bits_ofwords thm
R133025:133027 compcert.lib.Coqlib <> zlt def
R133031:133043 compcert.lib.Integers Int zwordsize def
R133025:133027 compcert.lib.Coqlib <> zlt def
R133031:133043 compcert.lib.Integers Int zwordsize def
R133057:133064 compcert.lib.Coqlib <> zlt_true thm
R133057:133064 compcert.lib.Coqlib <> zlt_true thm
R133057:133064 compcert.lib.Coqlib <> zlt_true thm
R133086:133097 compcert.lib.Integers Int64 bits_ofwords thm
R133086:133097 compcert.lib.Integers Int64 bits_ofwords thm
R133086:133097 compcert.lib.Integers Int64 bits_ofwords thm
R133119:133129 compcert.lib.Integers Int bits_or thm
R133119:133129 compcert.lib.Integers Int bits_or thm
R133119:133129 compcert.lib.Integers Int bits_or thm
R133149:133160 compcert.lib.Integers Int bits_shl thm
R133149:133160 compcert.lib.Integers Int bits_shl thm
R133149:133160 compcert.lib.Integers Int bits_shl thm
R133182:133194 compcert.lib.Integers Int bits_shru thm
R133182:133194 compcert.lib.Integers Int bits_shru thm
R133182:133194 compcert.lib.Integers Int bits_shru thm
R133230:133232 compcert.lib.Coqlib <> zlt def
R133256:133268 compcert.lib.Integers Int zwordsize def
R133236:133238 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R133239:133250 compcert.lib.Integers Int unsigned def
R133230:133232 compcert.lib.Coqlib <> zlt def
R133256:133268 compcert.lib.Integers Int zwordsize def
R133236:133238 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R133239:133250 compcert.lib.Integers Int unsigned def
R133283:133290 compcert.lib.Coqlib <> zlt_true thm
R133283:133290 compcert.lib.Coqlib <> zlt_true thm
R133283:133290 compcert.lib.Coqlib <> zlt_true thm
R133312:133322 Coq.Bool.Bool <> orb_false_r thm
R133312:133322 Coq.Bool.Bool <> orb_false_r thm
R133312:133322 Coq.Bool.Bool <> orb_false_r thm
R133341:133349 compcert.lib.Coqlib <> zlt_false thm
R133341:133349 compcert.lib.Coqlib <> zlt_false thm
R133341:133349 compcert.lib.Coqlib <> zlt_false thm
R133371:133381 Coq.Bool.Bool <> orb_false_l thm
R133371:133381 Coq.Bool.Bool <> orb_false_l thm
R133371:133381 Coq.Bool.Bool <> orb_false_l thm
R133410:133422 compcert.lib.Integers Int bits_shru thm
R133410:133422 compcert.lib.Integers Int bits_shru thm
R133410:133422 compcert.lib.Integers Int bits_shru thm
R133446:133448 compcert.lib.Coqlib <> zlt def
R133471:133479 compcert.lib.Integers Int64 zwordsize def
R133452:133454 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R133455:133466 compcert.lib.Integers Int unsigned def
R133446:133448 compcert.lib.Coqlib <> zlt def
R133471:133479 compcert.lib.Integers Int64 zwordsize def
R133452:133454 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R133455:133466 compcert.lib.Integers Int unsigned def
R133493:133504 compcert.lib.Integers Int64 bits_ofwords thm
R133493:133504 compcert.lib.Integers Int64 bits_ofwords thm
R133493:133504 compcert.lib.Integers Int64 bits_ofwords thm
R133526:133533 compcert.lib.Coqlib <> zlt_true thm
R133526:133533 compcert.lib.Coqlib <> zlt_true thm
R133526:133533 compcert.lib.Coqlib <> zlt_true thm
R133553:133561 compcert.lib.Coqlib <> zlt_false thm
R133553:133561 compcert.lib.Coqlib <> zlt_false thm
R133553:133561 compcert.lib.Coqlib <> zlt_false thm
R133599:133607 compcert.lib.Coqlib <> zlt_false thm
R133599:133607 compcert.lib.Coqlib <> zlt_false thm
R133599:133607 compcert.lib.Coqlib <> zlt_false thm
prf 133637:133652 Int64 decompose_shru_2
binder 133664:133665 <> xh:949
binder 133667:133668 <> xl:950
binder 133670:133670 <> y:951
R133718:133723 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R133747:133751 Coq.Init.Logic <> ::type_scope:x_'='_x not
R133724:133728 compcert.lib.Integers Int64 shru' def
R133746:133746 compcert.lib.Integers <> y:951 var
R133731:133737 compcert.lib.Integers Int64 ofwords def
R133742:133743 compcert.lib.Integers <> xl:950 var
R133739:133740 compcert.lib.Integers <> xh:949 var
R133752:133758 compcert.lib.Integers Int64 ofwords def
R133770:133777 compcert.lib.Integers Int shru def
R133783:133789 compcert.lib.Integers Int sub def
R133793:133805 compcert.lib.Integers Int iwordsize def
R133791:133791 compcert.lib.Integers <> y:951 var
R133779:133780 compcert.lib.Integers <> xh:949 var
R133760:133767 compcert.lib.Integers Int zero def
R133688:133691 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R133706:133708 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R133675:133687 compcert.lib.Integers Int zwordsize def
R133692:133703 compcert.lib.Integers Int unsigned def
R133705:133705 compcert.lib.Integers <> y:951 var
R133692:133703 compcert.lib.Integers Int unsigned def
R133705:133705 compcert.lib.Integers <> y:951 var
R133709:133717 compcert.lib.Integers Int64 zwordsize def
R133846:133848 Coq.Init.Logic <> ::type_scope:x_'='_x not
R133837:133845 compcert.lib.Integers Int64 zwordsize def
R133850:133852 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R133853:133865 compcert.lib.Integers Int zwordsize def
R133846:133848 Coq.Init.Logic <> ::type_scope:x_'='_x not
R133837:133845 compcert.lib.Integers Int64 zwordsize def
R133850:133852 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R133853:133865 compcert.lib.Integers Int zwordsize def
R133932:133934 Coq.Init.Logic <> ::type_scope:x_'='_x not
R133894:133905 compcert.lib.Integers Int unsigned def
R133908:133914 compcert.lib.Integers Int sub def
R133918:133930 compcert.lib.Integers Int iwordsize def
R133949:133951 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R133935:133946 compcert.lib.Integers Int unsigned def
R133952:133964 compcert.lib.Integers Int zwordsize def
R133932:133934 Coq.Init.Logic <> ::type_scope:x_'='_x not
R133894:133905 compcert.lib.Integers Int unsigned def
R133908:133914 compcert.lib.Integers Int sub def
R133918:133930 compcert.lib.Integers Int iwordsize def
R133949:133951 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R133935:133946 compcert.lib.Integers Int unsigned def
R133952:133964 compcert.lib.Integers Int zwordsize def
R133979:133985 compcert.lib.Integers Int sub def
R133996:134012 compcert.lib.Integers Int unsigned_repr thm
R133996:134012 compcert.lib.Integers Int unsigned_repr thm
R133996:134012 compcert.lib.Integers Int unsigned_repr thm
R133996:134012 compcert.lib.Integers Int unsigned_repr thm
R134033:134058 compcert.lib.Integers Int unsigned_repr_wordsize thm
R134033:134058 compcert.lib.Integers Int unsigned_repr_wordsize thm
R134033:134058 compcert.lib.Integers Int unsigned_repr_wordsize thm
R134073:134092 compcert.lib.Integers Int unsigned_range_2 thm
R134073:134092 compcert.lib.Integers Int unsigned_range_2 thm
R134115:134132 compcert.lib.Integers Int64 same_bits_eq thm
R134115:134132 compcert.lib.Integers Int64 same_bits_eq thm
R134153:134162 compcert.lib.Integers Int64 bits_shru' thm
R134153:134162 compcert.lib.Integers Int64 bits_shru' thm
R134153:134162 compcert.lib.Integers Int64 bits_shru' thm
R134191:134202 compcert.lib.Integers Int64 bits_ofwords thm
R134191:134202 compcert.lib.Integers Int64 bits_ofwords thm
R134191:134202 compcert.lib.Integers Int64 bits_ofwords thm
R134225:134227 compcert.lib.Coqlib <> zlt def
R134231:134243 compcert.lib.Integers Int zwordsize def
R134225:134227 compcert.lib.Coqlib <> zlt def
R134231:134243 compcert.lib.Integers Int zwordsize def
R134257:134269 compcert.lib.Integers Int bits_shru thm
R134257:134269 compcert.lib.Integers Int bits_shru thm
R134257:134269 compcert.lib.Integers Int bits_shru thm
R134305:134307 compcert.lib.Coqlib <> zlt def
R134330:134338 compcert.lib.Integers Int64 zwordsize def
R134311:134313 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R134314:134325 compcert.lib.Integers Int unsigned def
R134305:134307 compcert.lib.Coqlib <> zlt def
R134330:134338 compcert.lib.Integers Int64 zwordsize def
R134311:134313 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R134314:134325 compcert.lib.Integers Int unsigned def
R134352:134359 compcert.lib.Coqlib <> zlt_true thm
R134352:134359 compcert.lib.Coqlib <> zlt_true thm
R134352:134359 compcert.lib.Coqlib <> zlt_true thm
R134379:134390 compcert.lib.Integers Int64 bits_ofwords thm
R134379:134390 compcert.lib.Integers Int64 bits_ofwords thm
R134379:134390 compcert.lib.Integers Int64 bits_ofwords thm
R134412:134420 compcert.lib.Coqlib <> zlt_false thm
R134412:134420 compcert.lib.Coqlib <> zlt_false thm
R134412:134420 compcert.lib.Coqlib <> zlt_false thm
R134458:134466 compcert.lib.Coqlib <> zlt_false thm
R134458:134466 compcert.lib.Coqlib <> zlt_false thm
R134458:134466 compcert.lib.Coqlib <> zlt_false thm
R134494:134502 compcert.lib.Coqlib <> zlt_false thm
R134494:134502 compcert.lib.Coqlib <> zlt_false thm
R134494:134502 compcert.lib.Coqlib <> zlt_false thm
R134520:134532 compcert.lib.Integers Int bits_zero thm
R134520:134532 compcert.lib.Integers Int bits_zero thm
prf 134547:134561 Int64 decompose_shr_1
binder 134573:134574 <> xh:952
binder 134576:134577 <> xl:953
binder 134579:134579 <> y:954
R134619:134624 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R134647:134651 Coq.Init.Logic <> ::type_scope:x_'='_x not
R134625:134628 compcert.lib.Integers Int64 shr' def
R134646:134646 compcert.lib.Integers <> y:954 var
R134631:134637 compcert.lib.Integers Int64 ofwords def
R134642:134643 compcert.lib.Integers <> xl:953 var
R134639:134640 compcert.lib.Integers <> xh:952 var
R134652:134658 compcert.lib.Integers Int64 ofwords def
R134686:134691 compcert.lib.Integers Int or def
R134710:134716 compcert.lib.Integers Int shl def
R134722:134728 compcert.lib.Integers Int sub def
R134744:134744 compcert.lib.Integers <> y:954 var
R134730:134742 compcert.lib.Integers Int iwordsize def
R134718:134719 compcert.lib.Integers <> xh:952 var
R134694:134701 compcert.lib.Integers Int shru def
R134706:134706 compcert.lib.Integers <> y:954 var
R134703:134704 compcert.lib.Integers <> xl:953 var
R134661:134667 compcert.lib.Integers Int shr def
R134672:134672 compcert.lib.Integers <> y:954 var
R134669:134670 compcert.lib.Integers <> xh:952 var
R134585:134588 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R134603:134605 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R134589:134600 compcert.lib.Integers Int unsigned def
R134602:134602 compcert.lib.Integers <> y:954 var
R134589:134600 compcert.lib.Integers Int unsigned def
R134602:134602 compcert.lib.Integers <> y:954 var
R134606:134618 compcert.lib.Integers Int zwordsize def
R134815:134817 Coq.Init.Logic <> ::type_scope:x_'='_x not
R134777:134788 compcert.lib.Integers Int unsigned def
R134791:134797 compcert.lib.Integers Int sub def
R134799:134811 compcert.lib.Integers Int iwordsize def
R134831:134833 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R134818:134830 compcert.lib.Integers Int zwordsize def
R134834:134845 compcert.lib.Integers Int unsigned def
R134815:134817 Coq.Init.Logic <> ::type_scope:x_'='_x not
R134777:134788 compcert.lib.Integers Int unsigned def
R134791:134797 compcert.lib.Integers Int sub def
R134799:134811 compcert.lib.Integers Int iwordsize def
R134831:134833 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R134818:134830 compcert.lib.Integers Int zwordsize def
R134834:134845 compcert.lib.Integers Int unsigned def
R134862:134868 compcert.lib.Integers Int sub def
R134879:134895 compcert.lib.Integers Int unsigned_repr thm
R134879:134895 compcert.lib.Integers Int unsigned_repr thm
R134879:134895 compcert.lib.Integers Int unsigned_repr thm
R134879:134895 compcert.lib.Integers Int unsigned_repr thm
R134916:134941 compcert.lib.Integers Int unsigned_repr_wordsize thm
R134916:134941 compcert.lib.Integers Int unsigned_repr_wordsize thm
R134916:134941 compcert.lib.Integers Int unsigned_repr_wordsize thm
R134955:134979 compcert.lib.Integers Int wordsize_max_unsigned thm
R134955:134979 compcert.lib.Integers Int wordsize_max_unsigned thm
R135010:135012 Coq.Init.Logic <> ::type_scope:x_'='_x not
R135001:135009 compcert.lib.Integers Int64 zwordsize def
R135014:135016 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R135017:135029 compcert.lib.Integers Int zwordsize def
R135010:135012 Coq.Init.Logic <> ::type_scope:x_'='_x not
R135001:135009 compcert.lib.Integers Int64 zwordsize def
R135014:135016 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R135017:135029 compcert.lib.Integers Int zwordsize def
R135056:135073 compcert.lib.Integers Int64 same_bits_eq thm
R135056:135073 compcert.lib.Integers Int64 same_bits_eq thm
R135094:135102 compcert.lib.Integers Int64 bits_shr' thm
R135094:135102 compcert.lib.Integers Int64 bits_shr' thm
R135094:135102 compcert.lib.Integers Int64 bits_shr' thm
R135131:135142 compcert.lib.Integers Int64 bits_ofwords thm
R135131:135142 compcert.lib.Integers Int64 bits_ofwords thm
R135131:135142 compcert.lib.Integers Int64 bits_ofwords thm
R135165:135167 compcert.lib.Coqlib <> zlt def
R135171:135183 compcert.lib.Integers Int zwordsize def
R135165:135167 compcert.lib.Coqlib <> zlt def
R135171:135183 compcert.lib.Integers Int zwordsize def
R135197:135204 compcert.lib.Coqlib <> zlt_true thm
R135197:135204 compcert.lib.Coqlib <> zlt_true thm
R135197:135204 compcert.lib.Coqlib <> zlt_true thm
R135226:135237 compcert.lib.Integers Int64 bits_ofwords thm
R135226:135237 compcert.lib.Integers Int64 bits_ofwords thm
R135226:135237 compcert.lib.Integers Int64 bits_ofwords thm
R135259:135269 compcert.lib.Integers Int bits_or thm
R135259:135269 compcert.lib.Integers Int bits_or thm
R135259:135269 compcert.lib.Integers Int bits_or thm
R135289:135300 compcert.lib.Integers Int bits_shl thm
R135289:135300 compcert.lib.Integers Int bits_shl thm
R135289:135300 compcert.lib.Integers Int bits_shl thm
R135322:135334 compcert.lib.Integers Int bits_shru thm
R135322:135334 compcert.lib.Integers Int bits_shru thm
R135322:135334 compcert.lib.Integers Int bits_shru thm
R135370:135372 compcert.lib.Coqlib <> zlt def
R135396:135408 compcert.lib.Integers Int zwordsize def
R135376:135378 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R135379:135390 compcert.lib.Integers Int unsigned def
R135370:135372 compcert.lib.Coqlib <> zlt def
R135396:135408 compcert.lib.Integers Int zwordsize def
R135376:135378 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R135379:135390 compcert.lib.Integers Int unsigned def
R135423:135430 compcert.lib.Coqlib <> zlt_true thm
R135423:135430 compcert.lib.Coqlib <> zlt_true thm
R135423:135430 compcert.lib.Coqlib <> zlt_true thm
R135452:135462 Coq.Bool.Bool <> orb_false_r thm
R135452:135462 Coq.Bool.Bool <> orb_false_r thm
R135452:135462 Coq.Bool.Bool <> orb_false_r thm
R135481:135489 compcert.lib.Coqlib <> zlt_false thm
R135481:135489 compcert.lib.Coqlib <> zlt_false thm
R135481:135489 compcert.lib.Coqlib <> zlt_false thm
R135511:135521 Coq.Bool.Bool <> orb_false_l thm
R135511:135521 Coq.Bool.Bool <> orb_false_l thm
R135511:135521 Coq.Bool.Bool <> orb_false_l thm
R135550:135561 compcert.lib.Integers Int bits_shr thm
R135550:135561 compcert.lib.Integers Int bits_shr thm
R135550:135561 compcert.lib.Integers Int bits_shr thm
R135585:135587 compcert.lib.Coqlib <> zlt def
R135610:135618 compcert.lib.Integers Int64 zwordsize def
R135591:135593 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R135594:135605 compcert.lib.Integers Int unsigned def
R135585:135587 compcert.lib.Coqlib <> zlt def
R135610:135618 compcert.lib.Integers Int64 zwordsize def
R135591:135593 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R135594:135605 compcert.lib.Integers Int unsigned def
R135632:135643 compcert.lib.Integers Int64 bits_ofwords thm
R135632:135643 compcert.lib.Integers Int64 bits_ofwords thm
R135632:135643 compcert.lib.Integers Int64 bits_ofwords thm
R135665:135672 compcert.lib.Coqlib <> zlt_true thm
R135665:135672 compcert.lib.Coqlib <> zlt_true thm
R135665:135672 compcert.lib.Coqlib <> zlt_true thm
R135692:135700 compcert.lib.Coqlib <> zlt_false thm
R135692:135700 compcert.lib.Coqlib <> zlt_false thm
R135692:135700 compcert.lib.Coqlib <> zlt_false thm
R135738:135746 compcert.lib.Coqlib <> zlt_false thm
R135738:135746 compcert.lib.Coqlib <> zlt_false thm
R135738:135746 compcert.lib.Coqlib <> zlt_false thm
R135766:135777 compcert.lib.Integers Int64 bits_ofwords thm
R135766:135777 compcert.lib.Integers Int64 bits_ofwords thm
R135766:135777 compcert.lib.Integers Int64 bits_ofwords thm
R135799:135807 compcert.lib.Coqlib <> zlt_false thm
R135799:135807 compcert.lib.Coqlib <> zlt_false thm
R135799:135807 compcert.lib.Coqlib <> zlt_false thm
prf 135840:135854 Int64 decompose_shr_2
binder 135866:135867 <> xh:955
binder 135869:135870 <> xl:956
binder 135872:135872 <> y:957
R135920:135925 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R135948:135952 Coq.Init.Logic <> ::type_scope:x_'='_x not
R135926:135929 compcert.lib.Integers Int64 shr' def
R135947:135947 compcert.lib.Integers <> y:957 var
R135932:135938 compcert.lib.Integers Int64 ofwords def
R135943:135944 compcert.lib.Integers <> xl:956 var
R135940:135941 compcert.lib.Integers <> xh:955 var
R135953:135959 compcert.lib.Integers Int64 ofwords def
R136017:136023 compcert.lib.Integers Int shr def
R136029:136035 compcert.lib.Integers Int sub def
R136039:136051 compcert.lib.Integers Int iwordsize def
R136037:136037 compcert.lib.Integers <> y:957 var
R136025:136026 compcert.lib.Integers <> xh:955 var
R135962:135968 compcert.lib.Integers Int shr def
R135974:135980 compcert.lib.Integers Int sub def
R135996:136002 compcert.lib.Integers Int one def
R135982:135994 compcert.lib.Integers Int iwordsize def
R135970:135971 compcert.lib.Integers <> xh:955 var
R135890:135893 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R135908:135910 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R135877:135889 compcert.lib.Integers Int zwordsize def
R135894:135905 compcert.lib.Integers Int unsigned def
R135907:135907 compcert.lib.Integers <> y:957 var
R135894:135905 compcert.lib.Integers Int unsigned def
R135907:135907 compcert.lib.Integers <> y:957 var
R135911:135919 compcert.lib.Integers Int64 zwordsize def
R136092:136094 Coq.Init.Logic <> ::type_scope:x_'='_x not
R136083:136091 compcert.lib.Integers Int64 zwordsize def
R136096:136098 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136099:136111 compcert.lib.Integers Int zwordsize def
R136092:136094 Coq.Init.Logic <> ::type_scope:x_'='_x not
R136083:136091 compcert.lib.Integers Int64 zwordsize def
R136096:136098 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136099:136111 compcert.lib.Integers Int zwordsize def
R136178:136180 Coq.Init.Logic <> ::type_scope:x_'='_x not
R136140:136151 compcert.lib.Integers Int unsigned def
R136154:136160 compcert.lib.Integers Int sub def
R136164:136176 compcert.lib.Integers Int iwordsize def
R136195:136197 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136181:136192 compcert.lib.Integers Int unsigned def
R136198:136210 compcert.lib.Integers Int zwordsize def
R136178:136180 Coq.Init.Logic <> ::type_scope:x_'='_x not
R136140:136151 compcert.lib.Integers Int unsigned def
R136154:136160 compcert.lib.Integers Int sub def
R136164:136176 compcert.lib.Integers Int iwordsize def
R136195:136197 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136181:136192 compcert.lib.Integers Int unsigned def
R136198:136210 compcert.lib.Integers Int zwordsize def
R136225:136231 compcert.lib.Integers Int sub def
R136242:136258 compcert.lib.Integers Int unsigned_repr thm
R136242:136258 compcert.lib.Integers Int unsigned_repr thm
R136242:136258 compcert.lib.Integers Int unsigned_repr thm
R136242:136258 compcert.lib.Integers Int unsigned_repr thm
R136279:136304 compcert.lib.Integers Int unsigned_repr_wordsize thm
R136279:136304 compcert.lib.Integers Int unsigned_repr_wordsize thm
R136279:136304 compcert.lib.Integers Int unsigned_repr_wordsize thm
R136319:136338 compcert.lib.Integers Int unsigned_range_2 thm
R136319:136338 compcert.lib.Integers Int unsigned_range_2 thm
R136361:136378 compcert.lib.Integers Int64 same_bits_eq thm
R136361:136378 compcert.lib.Integers Int64 same_bits_eq thm
R136399:136407 compcert.lib.Integers Int64 bits_shr' thm
R136399:136407 compcert.lib.Integers Int64 bits_shr' thm
R136399:136407 compcert.lib.Integers Int64 bits_shr' thm
R136436:136447 compcert.lib.Integers Int64 bits_ofwords thm
R136436:136447 compcert.lib.Integers Int64 bits_ofwords thm
R136436:136447 compcert.lib.Integers Int64 bits_ofwords thm
R136470:136472 compcert.lib.Coqlib <> zlt def
R136476:136488 compcert.lib.Integers Int zwordsize def
R136470:136472 compcert.lib.Coqlib <> zlt def
R136476:136488 compcert.lib.Integers Int zwordsize def
R136502:136513 compcert.lib.Integers Int bits_shr thm
R136502:136513 compcert.lib.Integers Int bits_shr thm
R136502:136513 compcert.lib.Integers Int bits_shr thm
R136549:136551 compcert.lib.Coqlib <> zlt def
R136574:136582 compcert.lib.Integers Int64 zwordsize def
R136555:136557 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136558:136569 compcert.lib.Integers Int unsigned def
R136549:136551 compcert.lib.Coqlib <> zlt def
R136574:136582 compcert.lib.Integers Int64 zwordsize def
R136555:136557 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136558:136569 compcert.lib.Integers Int unsigned def
R136596:136603 compcert.lib.Coqlib <> zlt_true thm
R136596:136603 compcert.lib.Coqlib <> zlt_true thm
R136596:136603 compcert.lib.Coqlib <> zlt_true thm
R136623:136634 compcert.lib.Integers Int64 bits_ofwords thm
R136623:136634 compcert.lib.Integers Int64 bits_ofwords thm
R136623:136634 compcert.lib.Integers Int64 bits_ofwords thm
R136656:136664 compcert.lib.Coqlib <> zlt_false thm
R136656:136664 compcert.lib.Coqlib <> zlt_false thm
R136656:136664 compcert.lib.Coqlib <> zlt_false thm
R136702:136710 compcert.lib.Coqlib <> zlt_false thm
R136702:136710 compcert.lib.Coqlib <> zlt_false thm
R136702:136710 compcert.lib.Coqlib <> zlt_false thm
R136730:136741 compcert.lib.Integers Int64 bits_ofwords thm
R136730:136741 compcert.lib.Integers Int64 bits_ofwords thm
R136730:136741 compcert.lib.Integers Int64 bits_ofwords thm
R136763:136771 compcert.lib.Coqlib <> zlt_false thm
R136763:136771 compcert.lib.Coqlib <> zlt_false thm
R136763:136771 compcert.lib.Coqlib <> zlt_false thm
R136799:136810 compcert.lib.Integers Int bits_shr thm
R136799:136810 compcert.lib.Integers Int bits_shr thm
R136799:136810 compcert.lib.Integers Int bits_shr thm
R136832:136843 compcert.lib.Integers Int unsigned def
R136846:136852 compcert.lib.Integers Int sub def
R136868:136874 compcert.lib.Integers Int one def
R136854:136866 compcert.lib.Integers Int iwordsize def
R136897:136899 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136884:136896 compcert.lib.Integers Int zwordsize def
R136832:136843 compcert.lib.Integers Int unsigned def
R136846:136852 compcert.lib.Integers Int sub def
R136868:136874 compcert.lib.Integers Int one def
R136854:136866 compcert.lib.Integers Int iwordsize def
R136897:136899 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136884:136896 compcert.lib.Integers Int zwordsize def
R136897:136899 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136884:136896 compcert.lib.Integers Int zwordsize def
R136897:136899 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136884:136896 compcert.lib.Integers Int zwordsize def
R136897:136899 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136884:136896 compcert.lib.Integers Int zwordsize def
R136897:136899 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136884:136896 compcert.lib.Integers Int zwordsize def
R136897:136899 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136884:136896 compcert.lib.Integers Int zwordsize def
R136916:136918 compcert.lib.Coqlib <> zlt def
R136941:136949 compcert.lib.Integers Int64 zwordsize def
R136922:136924 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136925:136936 compcert.lib.Integers Int unsigned def
R136963:136974 compcert.lib.Integers Int64 bits_ofwords thm
R136916:136918 compcert.lib.Coqlib <> zlt def
R136941:136949 compcert.lib.Integers Int64 zwordsize def
R136922:136924 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136925:136936 compcert.lib.Integers Int unsigned def
R136963:136974 compcert.lib.Integers Int64 bits_ofwords thm
R136963:136974 compcert.lib.Integers Int64 bits_ofwords thm
R136963:136974 compcert.lib.Integers Int64 bits_ofwords thm
R136963:136974 compcert.lib.Integers Int64 bits_ofwords thm
R137006:137014 compcert.lib.Coqlib <> zlt_false thm
R137006:137014 compcert.lib.Coqlib <> zlt_false thm
R137006:137014 compcert.lib.Coqlib <> zlt_false thm
R137047:137049 compcert.lib.Coqlib <> zlt def
R137093:137105 compcert.lib.Integers Int zwordsize def
R137069:137072 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137090:137090 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137053:137055 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137056:137068 compcert.lib.Integers Int zwordsize def
R137086:137088 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137073:137085 compcert.lib.Integers Int zwordsize def
R137047:137049 compcert.lib.Coqlib <> zlt def
R137093:137105 compcert.lib.Integers Int zwordsize def
R137069:137072 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137090:137090 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137053:137055 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137056:137068 compcert.lib.Integers Int zwordsize def
R137086:137088 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137073:137085 compcert.lib.Integers Int zwordsize def
R137136:137144 compcert.lib.Coqlib <> zlt_false thm
R137136:137144 compcert.lib.Coqlib <> zlt_false thm
R137136:137144 compcert.lib.Coqlib <> zlt_false thm
R137177:137179 compcert.lib.Coqlib <> zlt def
R137223:137235 compcert.lib.Integers Int zwordsize def
R137199:137202 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137220:137220 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137183:137185 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137186:137198 compcert.lib.Integers Int zwordsize def
R137216:137218 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137203:137215 compcert.lib.Integers Int zwordsize def
R137177:137179 compcert.lib.Coqlib <> zlt def
R137223:137235 compcert.lib.Integers Int zwordsize def
R137199:137202 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137220:137220 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137183:137185 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137186:137198 compcert.lib.Integers Int zwordsize def
R137216:137218 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137203:137215 compcert.lib.Integers Int zwordsize def
prf 137258:137270 Int64 decompose_add
binder 137282:137283 <> xh:958
binder 137285:137286 <> xl:959
binder 137288:137289 <> yh:960
binder 137291:137292 <> yl:961
R137332:137336 Coq.Init.Logic <> ::type_scope:x_'='_x not
R137297:137299 compcert.lib.Integers Int64 add def
R137318:137324 compcert.lib.Integers Int64 ofwords def
R137329:137330 compcert.lib.Integers <> yl:961 var
R137326:137327 compcert.lib.Integers <> yh:960 var
R137302:137308 compcert.lib.Integers Int64 ofwords def
R137313:137314 compcert.lib.Integers <> xl:959 var
R137310:137311 compcert.lib.Integers <> xh:958 var
R137337:137343 compcert.lib.Integers Int64 ofwords def
R137413:137419 compcert.lib.Integers Int add def
R137424:137425 compcert.lib.Integers <> yl:961 var
R137421:137422 compcert.lib.Integers <> xl:959 var
R137346:137352 compcert.lib.Integers Int add def
R137371:137383 compcert.lib.Integers Int add_carry def
R137391:137398 compcert.lib.Integers Int zero def
R137388:137389 compcert.lib.Integers <> yl:961 var
R137385:137386 compcert.lib.Integers <> xl:959 var
R137355:137361 compcert.lib.Integers Int add def
R137366:137367 compcert.lib.Integers <> yh:960 var
R137363:137364 compcert.lib.Integers <> xh:958 var
R137464:137474 compcert.lib.Integers Int64 ofwords_add thm
R137464:137474 compcert.lib.Integers Int64 ofwords_add thm
R137464:137474 compcert.lib.Integers Int64 ofwords_add thm
R137485:137496 compcert.lib.Integers Int64 add_unsigned thm
R137485:137496 compcert.lib.Integers Int64 add_unsigned thm
R137485:137496 compcert.lib.Integers Int64 add_unsigned thm
R137507:137518 compcert.lib.Integers Int64 eqm_samerepr thm
R137507:137518 compcert.lib.Integers Int64 eqm_samerepr thm
R137533:137544 compcert.lib.Integers Int64 ofwords_add' thm
R137533:137544 compcert.lib.Integers Int64 ofwords_add' thm
R137533:137544 compcert.lib.Integers Int64 ofwords_add' thm
R137533:137544 compcert.lib.Integers Int64 ofwords_add' thm
R137533:137544 compcert.lib.Integers Int64 ofwords_add' thm
R137556:137577 compcert.lib.Integers Int unsigned_add_carry thm
R137556:137577 compcert.lib.Integers Int unsigned_add_carry thm
R137556:137577 compcert.lib.Integers Int unsigned_add_carry thm
R137600:137612 compcert.lib.Integers Int add_carry def
R137620:137627 compcert.lib.Integers Int zero def
R137600:137612 compcert.lib.Integers Int add_carry def
R137620:137627 compcert.lib.Integers Int zero def
R137644:137655 compcert.lib.Integers Int unsigned def
R137673:137684 compcert.lib.Integers Int unsigned def
R137704:137715 compcert.lib.Integers Int unsigned def
R137733:137744 compcert.lib.Integers Int unsigned def
R137644:137655 compcert.lib.Integers Int unsigned def
R137673:137684 compcert.lib.Integers Int unsigned def
R137704:137715 compcert.lib.Integers Int unsigned def
R137733:137744 compcert.lib.Integers Int unsigned def
R137760:137770 compcert.lib.Integers Int modulus def
R137778:137782 Coq.ZArith.Zpower <> two_p def
R137760:137770 compcert.lib.Integers Int modulus def
R137778:137782 Coq.ZArith.Zpower <> two_p def
R137818:137821 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137840:137840 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137813:137815 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137802:137804 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137805:137809 Coq.ZArith.Zpower <> two_p def
R137835:137837 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137824:137826 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137827:137831 Coq.ZArith.Zpower <> two_p def
R137874:137877 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137885:137885 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137854:137854 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137862:137865 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137857:137859 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137866:137870 Coq.ZArith.Zpower <> two_p def
R137880:137882 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137818:137821 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137840:137840 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137813:137815 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137802:137804 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137805:137809 Coq.ZArith.Zpower <> two_p def
R137835:137837 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137824:137826 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137827:137831 Coq.ZArith.Zpower <> two_p def
R137874:137877 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137885:137885 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137854:137854 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137862:137865 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137857:137859 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137866:137870 Coq.ZArith.Zpower <> two_p def
R137880:137882 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137960:137977 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138014:138014 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137949:137951 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137908:137919 compcert.lib.Integers Int unsigned def
R137922:137928 compcert.lib.Integers Int add def
R137931:137937 compcert.lib.Integers Int add def
R137952:137956 Coq.ZArith.Zpower <> two_p def
R137985:137987 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137980:137982 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138003:138005 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137988:137999 compcert.lib.Integers Int unsigned def
R138006:138010 Coq.ZArith.Zpower <> two_p def
R138100:138114 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138122:138122 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138028:138028 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R138088:138091 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R138070:138072 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138029:138040 compcert.lib.Integers Int unsigned def
R138043:138049 compcert.lib.Integers Int add def
R138052:138058 compcert.lib.Integers Int add def
R138073:138084 compcert.lib.Integers Int unsigned def
R138092:138096 Coq.ZArith.Zpower <> two_p def
R138117:138119 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137960:137977 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138014:138014 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137949:137951 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137908:137919 compcert.lib.Integers Int unsigned def
R137922:137928 compcert.lib.Integers Int add def
R137931:137937 compcert.lib.Integers Int add def
R137952:137956 Coq.ZArith.Zpower <> two_p def
R137985:137987 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137980:137982 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138003:138005 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137988:137999 compcert.lib.Integers Int unsigned def
R138006:138010 Coq.ZArith.Zpower <> two_p def
R138100:138114 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138122:138122 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138028:138028 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R138088:138091 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R138070:138072 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138029:138040 compcert.lib.Integers Int unsigned def
R138043:138049 compcert.lib.Integers Int add def
R138052:138058 compcert.lib.Integers Int add def
R138073:138084 compcert.lib.Integers Int unsigned def
R138092:138096 Coq.ZArith.Zpower <> two_p def
R138117:138119 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138142:138148 compcert.lib.Integers Int64 eqm_add thm
R138142:138148 compcert.lib.Integers Int64 eqm_add thm
R138160:138167 compcert.lib.Integers Int64 eqm_refl thm
R138160:138167 compcert.lib.Integers Int64 eqm_refl thm
R138176:138187 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R138176:138187 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R138203:138205 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138216:138216 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138242:138245 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138224:138226 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138219:138221 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138227:138238 compcert.lib.Integers Int unsigned def
R138246:138257 compcert.lib.Integers Int unsigned def
R138203:138205 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138216:138216 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138242:138245 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138224:138226 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138219:138221 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138227:138238 compcert.lib.Integers Int unsigned def
R138246:138257 compcert.lib.Integers Int unsigned def
R138280:138290 compcert.lib.Integers Int eqm_sub thm
R138280:138290 compcert.lib.Integers Int eqm_sub thm
R138302:138313 compcert.lib.Integers Int eqm_refl thm
R138302:138313 compcert.lib.Integers Int eqm_refl thm
R138324:138346 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R138324:138346 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R138355:138365 compcert.lib.Integers Int eqm_add thm
R138355:138365 compcert.lib.Integers Int eqm_add thm
R138377:138388 compcert.lib.Integers Int eqm_refl thm
R138377:138388 compcert.lib.Integers Int eqm_refl thm
R138399:138421 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R138399:138421 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R138430:138441 compcert.lib.Integers Int eqm_refl thm
R138430:138441 compcert.lib.Integers Int eqm_refl thm
prf 138456:138468 Int64 decompose_sub
binder 138480:138481 <> xh:962
binder 138483:138484 <> xl:963
binder 138486:138487 <> yh:964
binder 138489:138490 <> yl:965
R138530:138534 Coq.Init.Logic <> ::type_scope:x_'='_x not
R138495:138497 compcert.lib.Integers Int64 sub def
R138516:138522 compcert.lib.Integers Int64 ofwords def
R138527:138528 compcert.lib.Integers <> yl:965 var
R138524:138525 compcert.lib.Integers <> yh:964 var
R138500:138506 compcert.lib.Integers Int64 ofwords def
R138511:138512 compcert.lib.Integers <> xl:963 var
R138508:138509 compcert.lib.Integers <> xh:962 var
R138535:138541 compcert.lib.Integers Int64 ofwords def
R138612:138618 compcert.lib.Integers Int sub def
R138623:138624 compcert.lib.Integers <> yl:965 var
R138620:138621 compcert.lib.Integers <> xl:963 var
R138544:138550 compcert.lib.Integers Int sub def
R138569:138582 compcert.lib.Integers Int sub_borrow def
R138590:138597 compcert.lib.Integers Int zero def
R138587:138588 compcert.lib.Integers <> yl:965 var
R138584:138585 compcert.lib.Integers <> xl:963 var
R138553:138559 compcert.lib.Integers Int sub def
R138564:138565 compcert.lib.Integers <> yh:964 var
R138561:138562 compcert.lib.Integers <> xh:962 var
R138663:138673 compcert.lib.Integers Int64 ofwords_add thm
R138663:138673 compcert.lib.Integers Int64 ofwords_add thm
R138663:138673 compcert.lib.Integers Int64 ofwords_add thm
R138684:138695 compcert.lib.Integers Int64 eqm_samerepr thm
R138684:138695 compcert.lib.Integers Int64 eqm_samerepr thm
R138710:138721 compcert.lib.Integers Int64 ofwords_add' thm
R138710:138721 compcert.lib.Integers Int64 ofwords_add' thm
R138710:138721 compcert.lib.Integers Int64 ofwords_add' thm
R138710:138721 compcert.lib.Integers Int64 ofwords_add' thm
R138710:138721 compcert.lib.Integers Int64 ofwords_add' thm
R138733:138755 compcert.lib.Integers Int unsigned_sub_borrow thm
R138733:138755 compcert.lib.Integers Int unsigned_sub_borrow thm
R138733:138755 compcert.lib.Integers Int unsigned_sub_borrow thm
R138778:138791 compcert.lib.Integers Int sub_borrow def
R138799:138806 compcert.lib.Integers Int zero def
R138778:138791 compcert.lib.Integers Int sub_borrow def
R138799:138806 compcert.lib.Integers Int zero def
R138823:138834 compcert.lib.Integers Int unsigned def
R138852:138863 compcert.lib.Integers Int unsigned def
R138883:138894 compcert.lib.Integers Int unsigned def
R138912:138923 compcert.lib.Integers Int unsigned def
R138823:138834 compcert.lib.Integers Int unsigned def
R138852:138863 compcert.lib.Integers Int unsigned def
R138883:138894 compcert.lib.Integers Int unsigned def
R138912:138923 compcert.lib.Integers Int unsigned def
R138939:138949 compcert.lib.Integers Int modulus def
R138957:138961 Coq.ZArith.Zpower <> two_p def
R138939:138949 compcert.lib.Integers Int modulus def
R138957:138961 Coq.ZArith.Zpower <> two_p def
R138997:139000 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R139019:139019 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138992:138994 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138981:138983 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R138984:138988 Coq.ZArith.Zpower <> two_p def
R139014:139016 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139003:139005 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139006:139010 Coq.ZArith.Zpower <> two_p def
R139053:139056 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139064:139064 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139033:139033 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139041:139044 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139036:139038 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R139045:139049 Coq.ZArith.Zpower <> two_p def
R139059:139061 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138997:139000 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R139019:139019 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138992:138994 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138981:138983 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R138984:138988 Coq.ZArith.Zpower <> two_p def
R139014:139016 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139003:139005 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139006:139010 Coq.ZArith.Zpower <> two_p def
R139053:139056 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139064:139064 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139033:139033 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139041:139044 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139036:139038 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R139045:139049 Coq.ZArith.Zpower <> two_p def
R139059:139061 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R139139:139156 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139193:139193 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139128:139130 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139087:139098 compcert.lib.Integers Int unsigned def
R139101:139107 compcert.lib.Integers Int sub def
R139110:139116 compcert.lib.Integers Int sub def
R139131:139135 Coq.ZArith.Zpower <> two_p def
R139164:139166 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139159:139161 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R139182:139184 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139167:139178 compcert.lib.Integers Int unsigned def
R139185:139189 Coq.ZArith.Zpower <> two_p def
R139279:139293 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139301:139301 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139207:139207 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139267:139270 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139249:139251 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139208:139219 compcert.lib.Integers Int unsigned def
R139222:139228 compcert.lib.Integers Int sub def
R139231:139237 compcert.lib.Integers Int sub def
R139252:139263 compcert.lib.Integers Int unsigned def
R139271:139275 Coq.ZArith.Zpower <> two_p def
R139296:139298 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R139139:139156 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139193:139193 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139128:139130 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139087:139098 compcert.lib.Integers Int unsigned def
R139101:139107 compcert.lib.Integers Int sub def
R139110:139116 compcert.lib.Integers Int sub def
R139131:139135 Coq.ZArith.Zpower <> two_p def
R139164:139166 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139159:139161 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R139182:139184 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139167:139178 compcert.lib.Integers Int unsigned def
R139185:139189 Coq.ZArith.Zpower <> two_p def
R139279:139293 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139301:139301 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139207:139207 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139267:139270 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139249:139251 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139208:139219 compcert.lib.Integers Int unsigned def
R139222:139228 compcert.lib.Integers Int sub def
R139231:139237 compcert.lib.Integers Int sub def
R139252:139263 compcert.lib.Integers Int unsigned def
R139271:139275 Coq.ZArith.Zpower <> two_p def
R139296:139298 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R139321:139327 compcert.lib.Integers Int64 eqm_add thm
R139321:139327 compcert.lib.Integers Int64 eqm_add thm
R139339:139346 compcert.lib.Integers Int64 eqm_refl thm
R139339:139346 compcert.lib.Integers Int64 eqm_refl thm
R139355:139366 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R139355:139366 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R139382:139384 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R139395:139395 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139421:139424 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139403:139405 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R139398:139400 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R139406:139417 compcert.lib.Integers Int unsigned def
R139425:139436 compcert.lib.Integers Int unsigned def
R139382:139384 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R139395:139395 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139421:139424 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139403:139405 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R139398:139400 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R139406:139417 compcert.lib.Integers Int unsigned def
R139425:139436 compcert.lib.Integers Int unsigned def
R139459:139469 compcert.lib.Integers Int eqm_add thm
R139459:139469 compcert.lib.Integers Int eqm_add thm
R139481:139492 compcert.lib.Integers Int eqm_refl thm
R139481:139492 compcert.lib.Integers Int eqm_refl thm
R139503:139525 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R139503:139525 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R139534:139544 compcert.lib.Integers Int eqm_add thm
R139534:139544 compcert.lib.Integers Int eqm_add thm
R139556:139567 compcert.lib.Integers Int eqm_refl thm
R139556:139567 compcert.lib.Integers Int eqm_refl thm
R139578:139600 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R139578:139600 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R139609:139620 compcert.lib.Integers Int eqm_refl thm
R139609:139620 compcert.lib.Integers Int eqm_refl thm
prf 139635:139648 Int64 decompose_sub'
binder 139660:139661 <> xh:966
binder 139663:139664 <> xl:967
binder 139666:139667 <> yh:968
binder 139669:139670 <> yl:969
R139710:139714 Coq.Init.Logic <> ::type_scope:x_'='_x not
R139675:139677 compcert.lib.Integers Int64 sub def
R139696:139702 compcert.lib.Integers Int64 ofwords def
R139707:139708 compcert.lib.Integers <> yl:969 var
R139704:139705 compcert.lib.Integers <> yh:968 var
R139680:139686 compcert.lib.Integers Int64 ofwords def
R139691:139692 compcert.lib.Integers <> xl:967 var
R139688:139689 compcert.lib.Integers <> xh:966 var
R139715:139721 compcert.lib.Integers Int64 ofwords def
R139810:139816 compcert.lib.Integers Int sub def
R139821:139822 compcert.lib.Integers <> yl:969 var
R139818:139819 compcert.lib.Integers <> xl:967 var
R139724:139730 compcert.lib.Integers Int add def
R139759:139771 compcert.lib.Integers Int add_carry def
R139789:139795 compcert.lib.Integers Int one def
R139777:139783 compcert.lib.Integers Int not def
R139785:139786 compcert.lib.Integers <> yl:969 var
R139773:139774 compcert.lib.Integers <> xl:967 var
R139733:139739 compcert.lib.Integers Int add def
R139745:139751 compcert.lib.Integers Int not def
R139753:139754 compcert.lib.Integers <> yh:968 var
R139741:139742 compcert.lib.Integers <> xh:966 var
R139851:139863 compcert.lib.Integers Int64 decompose_sub thm
R139851:139863 compcert.lib.Integers Int64 decompose_sub thm
R139851:139863 compcert.lib.Integers Int64 decompose_sub thm
R139885:139908 compcert.lib.Integers Int sub_borrow_add_carry thm
R139885:139908 compcert.lib.Integers Int sub_borrow_add_carry thm
R139885:139908 compcert.lib.Integers Int sub_borrow_add_carry thm
R139929:139945 compcert.lib.Integers Int sub_add_not_3 thm
R139929:139945 compcert.lib.Integers Int sub_add_not_3 thm
R139929:139945 compcert.lib.Integers Int sub_add_not_3 thm
R139929:139945 compcert.lib.Integers Int sub_add_not_3 thm
R139956:139968 compcert.lib.Integers Int xor_assoc thm
R139956:139968 compcert.lib.Integers Int xor_assoc thm
R139956:139968 compcert.lib.Integers Int xor_assoc thm
R139979:139990 compcert.lib.Integers Int xor_idem thm
R139979:139990 compcert.lib.Integers Int xor_idem thm
R139979:139990 compcert.lib.Integers Int xor_idem thm
R140003:140014 compcert.lib.Integers Int xor_zero thm
R140003:140014 compcert.lib.Integers Int xor_zero thm
R140003:140014 compcert.lib.Integers Int xor_zero thm
R140033:140046 compcert.lib.Integers Int xor_zero_l thm
R140033:140046 compcert.lib.Integers Int xor_zero_l thm
R140033:140046 compcert.lib.Integers Int xor_zero_l thm
R140056:140068 compcert.lib.Integers Int add_carry def
R140083:140085 compcert.lib.Coqlib <> zlt def
R140156:140166 compcert.lib.Integers Int modulus def
R140131:140133 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140103:140105 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140088:140099 compcert.lib.Integers Int unsigned def
R140106:140117 compcert.lib.Integers Int unsigned def
R140120:140126 compcert.lib.Integers Int not def
R140134:140145 compcert.lib.Integers Int unsigned def
R140147:140153 compcert.lib.Integers Int one def
R140201:140212 compcert.lib.Integers Int mkint_eq thm
R140083:140085 compcert.lib.Coqlib <> zlt def
R140156:140166 compcert.lib.Integers Int modulus def
R140131:140133 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140103:140105 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140088:140099 compcert.lib.Integers Int unsigned def
R140106:140117 compcert.lib.Integers Int unsigned def
R140120:140126 compcert.lib.Integers Int not def
R140134:140145 compcert.lib.Integers Int unsigned def
R140147:140153 compcert.lib.Integers Int one def
R140201:140212 compcert.lib.Integers Int mkint_eq thm
R140201:140212 compcert.lib.Integers Int mkint_eq thm
def 140238:140241 Int64 mul'
R140249:140255 compcert.lib.Integers Int int rec
binder 140244:140244 <> x:970
binder 140246:140246 <> y:971
R140260:140262 compcert.lib.Integers Int64 int rec
R140267:140270 compcert.lib.Integers Int64 repr def
R140287:140289 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140273:140284 compcert.lib.Integers Int unsigned def
R140286:140286 compcert.lib.Integers <> x:970 var
R140290:140301 compcert.lib.Integers Int unsigned def
R140303:140303 compcert.lib.Integers <> y:971 var
prf 140314:140323 Int64 mul'_mulhu
binder 140335:140335 <> x:972
binder 140337:140337 <> y:973
R140348:140350 Coq.Init.Logic <> ::type_scope:x_'='_x not
R140340:140343 compcert.lib.Integers Int64 mul' def
R140347:140347 compcert.lib.Integers <> y:973 var
R140345:140345 compcert.lib.Integers <> x:972 var
R140351:140357 compcert.lib.Integers Int64 ofwords def
R140376:140382 compcert.lib.Integers Int mul def
R140386:140386 compcert.lib.Integers <> y:973 var
R140384:140384 compcert.lib.Integers <> x:972 var
R140360:140368 compcert.lib.Integers Int mulhu def
R140372:140372 compcert.lib.Integers <> y:973 var
R140370:140370 compcert.lib.Integers <> x:972 var
R140417:140427 compcert.lib.Integers Int64 ofwords_add thm
R140417:140427 compcert.lib.Integers Int64 ofwords_add thm
R140417:140427 compcert.lib.Integers Int64 ofwords_add thm
R140437:140440 compcert.lib.Integers Int64 mul' def
R140443:140451 compcert.lib.Integers Int mulhu def
R140454:140460 compcert.lib.Integers Int mul def
R140489:140491 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140475:140486 compcert.lib.Integers Int unsigned def
R140492:140503 compcert.lib.Integers Int unsigned def
R140489:140491 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140475:140486 compcert.lib.Integers Int unsigned def
R140492:140503 compcert.lib.Integers Int unsigned def
R140523:140525 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R140526:140536 compcert.lib.Integers Int modulus def
R140523:140525 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R140526:140536 compcert.lib.Integers Int modulus def
R140552:140556 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R140557:140567 compcert.lib.Integers Int modulus def
R140552:140556 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R140557:140567 compcert.lib.Integers Int modulus def
R140587:140590 compcert.lib.Integers Int64 repr def
R140609:140611 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140595:140597 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140598:140608 compcert.lib.Integers Int modulus def
R140587:140590 compcert.lib.Integers Int64 repr def
R140609:140611 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140595:140597 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140598:140608 compcert.lib.Integers Int modulus def
R140637:140646 Coq.ZArith.BinInt Z mul_comm thm
R140637:140646 Coq.ZArith.BinInt Z mul_comm thm
R140637:140646 Coq.ZArith.BinInt Z mul_comm thm
R140655:140666 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R140655:140666 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R140675:140689 compcert.lib.Integers Int modulus_pos thm
R140675:140689 compcert.lib.Integers Int modulus_pos thm
R140700:140711 compcert.lib.Integers Int64 eqm_samerepr thm
R140700:140711 compcert.lib.Integers Int64 eqm_samerepr thm
R140720:140726 compcert.lib.Integers Int64 eqm_add thm
R140720:140726 compcert.lib.Integers Int64 eqm_add thm
R140735:140746 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R140735:140746 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R140775:140794 compcert.lib.Integers Int unsigned_repr_eq thm
R140775:140794 compcert.lib.Integers Int unsigned_repr_eq thm
R140775:140794 compcert.lib.Integers Int unsigned_repr_eq thm
R140803:140810 compcert.lib.Integers Int64 eqm_refl thm
R140803:140810 compcert.lib.Integers Int64 eqm_refl thm
prf 140825:140837 Int64 decompose_mul
binder 140849:140850 <> xh:974
binder 140852:140853 <> xl:975
binder 140855:140856 <> yh:976
binder 140858:140859 <> yl:977
R140899:140903 Coq.Init.Logic <> ::type_scope:x_'='_x not
R140864:140866 compcert.lib.Integers Int64 mul def
R140885:140891 compcert.lib.Integers Int64 ofwords def
R140896:140897 compcert.lib.Integers <> yl:977 var
R140893:140894 compcert.lib.Integers <> yh:976 var
R140869:140875 compcert.lib.Integers Int64 ofwords def
R140880:140881 compcert.lib.Integers <> xl:975 var
R140877:140878 compcert.lib.Integers <> xh:974 var
R140904:140910 compcert.lib.Integers Int64 ofwords def
R140997:141002 compcert.lib.Integers Int64 loword def
R141005:141008 compcert.lib.Integers Int64 mul' def
R141013:141014 compcert.lib.Integers <> yl:977 var
R141010:141011 compcert.lib.Integers <> xl:975 var
R140913:140919 compcert.lib.Integers Int add def
R140970:140976 compcert.lib.Integers Int mul def
R140981:140982 compcert.lib.Integers <> yl:977 var
R140978:140979 compcert.lib.Integers <> xh:974 var
R140922:140928 compcert.lib.Integers Int add def
R140953:140959 compcert.lib.Integers Int mul def
R140964:140965 compcert.lib.Integers <> yh:976 var
R140961:140962 compcert.lib.Integers <> xl:975 var
R140931:140936 compcert.lib.Integers Int64 hiword def
R140939:140942 compcert.lib.Integers Int64 mul' def
R140947:140948 compcert.lib.Integers <> yl:977 var
R140944:140945 compcert.lib.Integers <> xl:975 var
R141049:141054 compcert.lib.Integers Int64 loword def
R141057:141060 compcert.lib.Integers Int64 mul' def
R141082:141087 compcert.lib.Integers Int64 hiword def
R141090:141093 compcert.lib.Integers Int64 mul' def
R141049:141054 compcert.lib.Integers Int64 loword def
R141057:141060 compcert.lib.Integers Int64 mul' def
R141082:141087 compcert.lib.Integers Int64 hiword def
R141090:141093 compcert.lib.Integers Int64 mul' def
R141140:141142 Coq.Init.Logic <> ::type_scope:x_'='_x not
R141119:141126 compcert.lib.Integers Int64 unsigned def
R141129:141132 compcert.lib.Integers Int64 mul' def
R141169:141171 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141158:141160 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141143:141154 compcert.lib.Integers Int unsigned def
R141161:141165 Coq.ZArith.Zpower <> two_p def
R141172:141183 compcert.lib.Integers Int unsigned def
R141140:141142 Coq.Init.Logic <> ::type_scope:x_'='_x not
R141119:141126 compcert.lib.Integers Int64 unsigned def
R141129:141132 compcert.lib.Integers Int64 mul' def
R141169:141171 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141158:141160 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141143:141154 compcert.lib.Integers Int unsigned def
R141161:141165 Coq.ZArith.Zpower <> two_p def
R141172:141183 compcert.lib.Integers Int unsigned def
R141206:141222 compcert.lib.Integers Int64 ofwords_recompose thm
R141225:141228 compcert.lib.Integers Int64 mul' def
R141206:141222 compcert.lib.Integers Int64 ofwords_recompose thm
R141225:141228 compcert.lib.Integers Int64 mul' def
R141206:141222 compcert.lib.Integers Int64 ofwords_recompose thm
R141225:141228 compcert.lib.Integers Int64 mul' def
R141245:141256 compcert.lib.Integers Int64 ofwords_add' thm
R141245:141256 compcert.lib.Integers Int64 ofwords_add' thm
R141281:141291 compcert.lib.Integers Int64 ofwords_add thm
R141281:141291 compcert.lib.Integers Int64 ofwords_add thm
R141281:141291 compcert.lib.Integers Int64 ofwords_add thm
R141301:141303 compcert.lib.Integers Int64 mul def
R141315:141326 compcert.lib.Integers Int64 ofwords_add' thm
R141315:141326 compcert.lib.Integers Int64 ofwords_add' thm
R141315:141326 compcert.lib.Integers Int64 ofwords_add' thm
R141315:141326 compcert.lib.Integers Int64 ofwords_add' thm
R141315:141326 compcert.lib.Integers Int64 ofwords_add' thm
R141342:141353 compcert.lib.Integers Int unsigned def
R141371:141382 compcert.lib.Integers Int unsigned def
R141402:141413 compcert.lib.Integers Int unsigned def
R141431:141442 compcert.lib.Integers Int unsigned def
R141342:141353 compcert.lib.Integers Int unsigned def
R141371:141382 compcert.lib.Integers Int unsigned def
R141402:141413 compcert.lib.Integers Int unsigned def
R141431:141442 compcert.lib.Integers Int unsigned def
R141462:141473 compcert.lib.Integers Int unsigned def
R141462:141473 compcert.lib.Integers Int unsigned def
R141496:141507 compcert.lib.Integers Int unsigned def
R141496:141507 compcert.lib.Integers Int unsigned def
R141535:141538 compcert.lib.Integers Int64 repr def
R141578:141580 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141541:141541 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141566:141569 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141542:141542 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141555:141558 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141545:141547 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141550:141552 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141561:141563 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141570:141574 Coq.ZArith.Zpower <> two_p def
R141535:141538 compcert.lib.Integers Int64 repr def
R141578:141580 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141541:141541 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141566:141569 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141542:141542 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141555:141558 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141545:141547 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141550:141552 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141561:141563 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141570:141574 Coq.ZArith.Zpower <> two_p def
R141595:141606 compcert.lib.Integers Int64 eqm_samerepr thm
R141595:141606 compcert.lib.Integers Int64 eqm_samerepr thm
R141615:141621 compcert.lib.Integers Int64 eqm_add thm
R141615:141621 compcert.lib.Integers Int64 eqm_add thm
R141633:141640 compcert.lib.Integers Int64 eqm_refl thm
R141633:141640 compcert.lib.Integers Int64 eqm_refl thm
R141651:141662 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R141651:141662 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R141675:141690 compcert.lib.Integers Int add_unsigned thm
R141675:141690 compcert.lib.Integers Int add_unsigned thm
R141675:141690 compcert.lib.Integers Int add_unsigned thm
R141699:141721 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R141699:141721 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R141730:141740 compcert.lib.Integers Int eqm_add thm
R141730:141740 compcert.lib.Integers Int eqm_add thm
R141753:141768 compcert.lib.Integers Int add_unsigned thm
R141753:141768 compcert.lib.Integers Int add_unsigned thm
R141753:141768 compcert.lib.Integers Int add_unsigned thm
R141777:141799 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R141777:141799 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R141808:141818 compcert.lib.Integers Int eqm_add thm
R141808:141818 compcert.lib.Integers Int eqm_add thm
R141829:141840 compcert.lib.Integers Int eqm_refl thm
R141829:141840 compcert.lib.Integers Int eqm_refl thm
R141852:141858 compcert.lib.Integers Int mul def
R141867:141889 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R141867:141889 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R141898:141909 compcert.lib.Integers Int eqm_refl thm
R141898:141909 compcert.lib.Integers Int eqm_refl thm
R141921:141927 compcert.lib.Integers Int mul def
R141936:141958 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R141936:141958 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R141967:141978 compcert.lib.Integers Int eqm_refl thm
R141967:141978 compcert.lib.Integers Int eqm_refl thm
R141997:142000 compcert.lib.Integers Int64 repr def
R142024:142026 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142003:142010 compcert.lib.Integers Int64 unsigned def
R142013:142016 compcert.lib.Integers Int64 mul' def
R142027:142027 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142045:142048 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142035:142037 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142030:142032 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142040:142042 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142049:142053 Coq.ZArith.Zpower <> two_p def
R141997:142000 compcert.lib.Integers Int64 repr def
R142024:142026 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142003:142010 compcert.lib.Integers Int64 unsigned def
R142013:142016 compcert.lib.Integers Int64 mul' def
R142027:142027 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142045:142048 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142035:142037 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142030:142032 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142040:142042 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142049:142053 Coq.ZArith.Zpower <> two_p def
R142107:142110 compcert.lib.Integers Int64 repr def
R142121:142123 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142116:142118 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142124:142124 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142142:142145 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142132:142134 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142127:142129 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142137:142139 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142146:142150 Coq.ZArith.Zpower <> two_p def
R142107:142110 compcert.lib.Integers Int64 repr def
R142121:142123 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142116:142118 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142124:142124 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142142:142145 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142132:142134 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142127:142129 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142137:142139 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142146:142150 Coq.ZArith.Zpower <> two_p def
R142167:142178 compcert.lib.Integers Int64 eqm_samerepr thm
R142167:142178 compcert.lib.Integers Int64 eqm_samerepr thm
R142187:142193 compcert.lib.Integers Int64 eqm_add thm
R142187:142193 compcert.lib.Integers Int64 eqm_add thm
R142205:142212 compcert.lib.Integers Int64 eqm_refl thm
R142205:142212 compcert.lib.Integers Int64 eqm_refl thm
R142224:142227 compcert.lib.Integers Int64 mul' def
R142236:142254 compcert.lib.Integers Int64 eqm_unsigned_repr_l thm
R142236:142254 compcert.lib.Integers Int64 eqm_unsigned_repr_l thm
R142263:142270 compcert.lib.Integers Int64 eqm_refl thm
R142263:142270 compcert.lib.Integers Int64 eqm_refl thm
R142289:142292 compcert.lib.Integers Int64 repr def
R142296:142299 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142340:142340 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142307:142309 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142302:142304 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142310:142310 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142328:142331 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142318:142320 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142313:142315 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142323:142325 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142332:142336 Coq.ZArith.Zpower <> two_p def
R142289:142292 compcert.lib.Integers Int64 repr def
R142296:142299 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142340:142340 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142307:142309 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142302:142304 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142310:142310 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142328:142331 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142318:142320 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142313:142315 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142323:142325 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142332:142336 Coq.ZArith.Zpower <> two_p def
R142355:142363 Coq.ZArith.BinInt Z add_0_l thm
R142355:142363 Coq.ZArith.BinInt Z add_0_l thm
R142355:142363 Coq.ZArith.BinInt Z add_0_l thm
R142388:142391 compcert.lib.Integers Int64 repr def
R142425:142428 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142469:142469 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142401:142404 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142424:142424 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142396:142398 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142413:142415 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142405:142409 Coq.ZArith.Zpower <> two_p def
R142416:142420 Coq.ZArith.Zpower <> two_p def
R142436:142438 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142431:142433 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142439:142439 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142457:142460 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142447:142449 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142442:142444 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142452:142454 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142461:142465 Coq.ZArith.Zpower <> two_p def
R142388:142391 compcert.lib.Integers Int64 repr def
R142425:142428 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142469:142469 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142401:142404 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142424:142424 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142396:142398 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142413:142415 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142405:142409 Coq.ZArith.Zpower <> two_p def
R142416:142420 Coq.ZArith.Zpower <> two_p def
R142436:142438 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142431:142433 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142439:142439 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142457:142460 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142447:142449 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R142442:142444 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142452:142454 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142461:142465 Coq.ZArith.Zpower <> two_p def
R142482:142493 compcert.lib.Integers Int64 eqm_samerepr thm
R142482:142493 compcert.lib.Integers Int64 eqm_samerepr thm
R142502:142508 compcert.lib.Integers Int64 eqm_add thm
R142502:142508 compcert.lib.Integers Int64 eqm_add thm
R142520:142527 compcert.lib.Integers Int64 eqm_refl thm
R142520:142527 compcert.lib.Integers Int64 eqm_refl thm
R142548:142550 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142540:142544 Coq.ZArith.Zpower <> two_p def
R142551:142555 Coq.ZArith.Zpower <> two_p def
R142566:142572 compcert.lib.Integers Int64 modulus def
R142548:142550 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142540:142544 Coq.ZArith.Zpower <> two_p def
R142551:142555 Coq.ZArith.Zpower <> two_p def
R142566:142572 compcert.lib.Integers Int64 modulus def
R142587:142589 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142583:142584 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R142587:142589 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R142583:142584 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
prf 142630:142644 Int64 decompose_mul_2
binder 142656:142657 <> xh:978
binder 142659:142660 <> xl:979
binder 142662:142663 <> yh:980
binder 142665:142666 <> yl:981
R142706:142710 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142671:142673 compcert.lib.Integers Int64 mul def
R142692:142698 compcert.lib.Integers Int64 ofwords def
R142703:142704 compcert.lib.Integers <> yl:981 var
R142700:142701 compcert.lib.Integers <> yh:980 var
R142676:142682 compcert.lib.Integers Int64 ofwords def
R142687:142688 compcert.lib.Integers <> xl:979 var
R142684:142685 compcert.lib.Integers <> xh:978 var
R142711:142717 compcert.lib.Integers Int64 ofwords def
R142800:142806 compcert.lib.Integers Int mul def
R142811:142812 compcert.lib.Integers <> yl:981 var
R142808:142809 compcert.lib.Integers <> xl:979 var
R142720:142726 compcert.lib.Integers Int add def
R142773:142779 compcert.lib.Integers Int mul def
R142784:142785 compcert.lib.Integers <> yl:981 var
R142781:142782 compcert.lib.Integers <> xh:978 var
R142729:142735 compcert.lib.Integers Int add def
R142756:142762 compcert.lib.Integers Int mul def
R142767:142768 compcert.lib.Integers <> yh:980 var
R142764:142765 compcert.lib.Integers <> xl:979 var
R142738:142746 compcert.lib.Integers Int mulhu def
R142751:142752 compcert.lib.Integers <> yl:981 var
R142748:142749 compcert.lib.Integers <> xl:979 var
R142841:142853 compcert.lib.Integers Int64 decompose_mul thm
R142841:142853 compcert.lib.Integers Int64 decompose_mul thm
R142841:142853 compcert.lib.Integers Int64 decompose_mul thm
R142864:142873 compcert.lib.Integers Int64 mul'_mulhu thm
R142864:142873 compcert.lib.Integers Int64 mul'_mulhu thm
R142864:142873 compcert.lib.Integers Int64 mul'_mulhu thm
R142886:142895 compcert.lib.Integers Int64 hi_ofwords thm
R142898:142907 compcert.lib.Integers Int64 lo_ofwords thm
R142886:142895 compcert.lib.Integers Int64 hi_ofwords thm
R142886:142895 compcert.lib.Integers Int64 hi_ofwords thm
R142898:142907 compcert.lib.Integers Int64 lo_ofwords thm
R142898:142907 compcert.lib.Integers Int64 lo_ofwords thm
prf 142928:142940 Int64 decompose_ltu
binder 142952:142953 <> xh:982
binder 142955:142956 <> xl:983
binder 142958:142959 <> yh:984
binder 142961:142962 <> yl:985
R143002:143004 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142967:142969 compcert.lib.Integers Int64 ltu def
R142988:142994 compcert.lib.Integers Int64 ofwords def
R142999:143000 compcert.lib.Integers <> yl:985 var
R142996:142997 compcert.lib.Integers <> yh:984 var
R142972:142978 compcert.lib.Integers Int64 ofwords def
R142983:142984 compcert.lib.Integers <> xl:983 var
R142980:142981 compcert.lib.Integers <> xh:982 var
R143008:143013 compcert.lib.Integers Int eq def
R143018:143019 compcert.lib.Integers <> yh:984 var
R143015:143016 compcert.lib.Integers <> xh:982 var
R143045:143051 compcert.lib.Integers Int ltu def
R143056:143057 compcert.lib.Integers <> yh:984 var
R143053:143054 compcert.lib.Integers <> xh:982 var
R143026:143032 compcert.lib.Integers Int ltu def
R143037:143038 compcert.lib.Integers <> yl:985 var
R143034:143035 compcert.lib.Integers <> xl:983 var
R143084:143086 compcert.lib.Integers Int64 ltu def
R143099:143110 compcert.lib.Integers Int64 ofwords_add' thm
R143099:143110 compcert.lib.Integers Int64 ofwords_add' thm
R143099:143110 compcert.lib.Integers Int64 ofwords_add' thm
R143099:143110 compcert.lib.Integers Int64 ofwords_add' thm
R143099:143110 compcert.lib.Integers Int64 ofwords_add' thm
R143120:143126 compcert.lib.Integers Int ltu def
R143129:143134 compcert.lib.Integers Int eq def
R143149:143151 compcert.lib.Coqlib <> zeq def
R143172:143183 compcert.lib.Integers Int unsigned def
R143154:143165 compcert.lib.Integers Int unsigned def
R143149:143151 compcert.lib.Coqlib <> zeq def
R143172:143183 compcert.lib.Integers Int unsigned def
R143154:143165 compcert.lib.Integers Int unsigned def
R143214:143216 compcert.lib.Coqlib <> zlt def
R143237:143248 compcert.lib.Integers Int unsigned def
R143219:143230 compcert.lib.Integers Int unsigned def
R143214:143216 compcert.lib.Coqlib <> zlt def
R143237:143248 compcert.lib.Integers Int unsigned def
R143219:143230 compcert.lib.Integers Int unsigned def
R143264:143271 compcert.lib.Coqlib <> zlt_true thm
R143264:143271 compcert.lib.Coqlib <> zlt_true thm
R143289:143297 compcert.lib.Coqlib <> zlt_false thm
R143289:143297 compcert.lib.Coqlib <> zlt_false thm
R143317:143321 Coq.ZArith.Zpower <> two_p def
R143332:143342 compcert.lib.Integers Int modulus def
R143317:143321 Coq.ZArith.Zpower <> two_p def
R143332:143342 compcert.lib.Integers Int modulus def
R143332:143342 compcert.lib.Integers Int modulus def
R143332:143342 compcert.lib.Integers Int modulus def
R143332:143342 compcert.lib.Integers Int modulus def
R143332:143342 compcert.lib.Integers Int modulus def
R143332:143342 compcert.lib.Integers Int modulus def
R143332:143342 compcert.lib.Integers Int modulus def
R143332:143342 compcert.lib.Integers Int modulus def
R143332:143342 compcert.lib.Integers Int modulus def
R143332:143342 compcert.lib.Integers Int modulus def
R143359:143376 compcert.lib.Integers Int unsigned_range thm
R143383:143400 compcert.lib.Integers Int unsigned_range thm
R143359:143376 compcert.lib.Integers Int unsigned_range thm
R143383:143400 compcert.lib.Integers Int unsigned_range thm
R143416:143426 compcert.lib.Integers Int modulus def
R143416:143426 compcert.lib.Integers Int modulus def
R143465:143467 compcert.lib.Coqlib <> zlt def
R143488:143499 compcert.lib.Integers Int unsigned def
R143470:143481 compcert.lib.Integers Int unsigned def
R143465:143467 compcert.lib.Coqlib <> zlt def
R143488:143499 compcert.lib.Integers Int unsigned def
R143470:143481 compcert.lib.Integers Int unsigned def
R143515:143522 compcert.lib.Coqlib <> zlt_true thm
R143515:143522 compcert.lib.Coqlib <> zlt_true thm
R143540:143548 compcert.lib.Coqlib <> zlt_false thm
R143540:143548 compcert.lib.Coqlib <> zlt_false thm
prf 143570:143582 Int64 decompose_leu
binder 143594:143595 <> xh:986
binder 143597:143598 <> xl:987
binder 143600:143601 <> yh:988
binder 143603:143604 <> yl:989
R143651:143655 Coq.Init.Logic <> ::type_scope:x_'='_x not
R143609:143612 Coq.Init.Datatypes <> negb def
R143615:143617 compcert.lib.Integers Int64 ltu def
R143636:143642 compcert.lib.Integers Int64 ofwords def
R143647:143648 compcert.lib.Integers <> xl:987 var
R143644:143645 compcert.lib.Integers <> xh:986 var
R143620:143626 compcert.lib.Integers Int64 ofwords def
R143631:143632 compcert.lib.Integers <> yl:989 var
R143628:143629 compcert.lib.Integers <> yh:988 var
R143659:143664 compcert.lib.Integers Int eq def
R143669:143670 compcert.lib.Integers <> yh:988 var
R143666:143667 compcert.lib.Integers <> xh:986 var
R143703:143709 compcert.lib.Integers Int ltu def
R143714:143715 compcert.lib.Integers <> yh:988 var
R143711:143712 compcert.lib.Integers <> xh:986 var
R143677:143680 Coq.Init.Datatypes <> negb def
R143683:143689 compcert.lib.Integers Int ltu def
R143694:143695 compcert.lib.Integers <> xl:987 var
R143691:143692 compcert.lib.Integers <> yl:989 var
R143743:143755 compcert.lib.Integers Int64 decompose_ltu thm
R143743:143755 compcert.lib.Integers Int64 decompose_ltu thm
R143743:143755 compcert.lib.Integers Int64 decompose_ltu thm
R143766:143775 compcert.lib.Integers Int eq_sym thm
R143766:143775 compcert.lib.Integers Int eq_sym thm
R143766:143775 compcert.lib.Integers Int eq_sym thm
R143787:143792 compcert.lib.Integers Int eq def
R143805:143807 compcert.lib.Coqlib <> zeq def
R143828:143839 compcert.lib.Integers Int unsigned def
R143810:143821 compcert.lib.Integers Int unsigned def
R143805:143807 compcert.lib.Coqlib <> zeq def
R143828:143839 compcert.lib.Integers Int unsigned def
R143810:143821 compcert.lib.Integers Int unsigned def
R143864:143870 compcert.lib.Integers Int ltu def
R143883:143885 compcert.lib.Coqlib <> zlt def
R143906:143917 compcert.lib.Integers Int unsigned def
R143888:143899 compcert.lib.Integers Int unsigned def
R143883:143885 compcert.lib.Coqlib <> zlt def
R143906:143917 compcert.lib.Integers Int unsigned def
R143888:143899 compcert.lib.Integers Int unsigned def
R143935:143943 compcert.lib.Coqlib <> zlt_false thm
R143935:143943 compcert.lib.Coqlib <> zlt_false thm
R143935:143943 compcert.lib.Coqlib <> zlt_false thm
R143971:143978 compcert.lib.Coqlib <> zlt_true thm
R143971:143978 compcert.lib.Coqlib <> zlt_true thm
R143971:143978 compcert.lib.Coqlib <> zlt_true thm
prf 144008:144019 Int64 decompose_lt
binder 144031:144032 <> xh:990
binder 144034:144035 <> xl:991
binder 144037:144038 <> yh:992
binder 144040:144041 <> yl:993
R144080:144082 Coq.Init.Logic <> ::type_scope:x_'='_x not
R144046:144047 compcert.lib.Integers Int64 lt def
R144066:144072 compcert.lib.Integers Int64 ofwords def
R144077:144078 compcert.lib.Integers <> yl:993 var
R144074:144075 compcert.lib.Integers <> yh:992 var
R144050:144056 compcert.lib.Integers Int64 ofwords def
R144061:144062 compcert.lib.Integers <> xl:991 var
R144058:144059 compcert.lib.Integers <> xh:990 var
R144086:144091 compcert.lib.Integers Int eq def
R144096:144097 compcert.lib.Integers <> yh:992 var
R144093:144094 compcert.lib.Integers <> xh:990 var
R144123:144128 compcert.lib.Integers Int lt def
R144133:144134 compcert.lib.Integers <> yh:992 var
R144130:144131 compcert.lib.Integers <> xh:990 var
R144104:144110 compcert.lib.Integers Int ltu def
R144115:144116 compcert.lib.Integers <> yl:993 var
R144112:144113 compcert.lib.Integers <> xl:991 var
R144161:144162 compcert.lib.Integers Int64 lt def
R144175:144187 compcert.lib.Integers Int64 ofwords_add'' thm
R144175:144187 compcert.lib.Integers Int64 ofwords_add'' thm
R144175:144187 compcert.lib.Integers Int64 ofwords_add'' thm
R144175:144187 compcert.lib.Integers Int64 ofwords_add'' thm
R144175:144187 compcert.lib.Integers Int64 ofwords_add'' thm
R144198:144210 compcert.lib.Integers Int eq_signed thm
R144198:144210 compcert.lib.Integers Int eq_signed thm
R144198:144210 compcert.lib.Integers Int eq_signed thm
R144225:144227 compcert.lib.Coqlib <> zeq def
R144246:144255 compcert.lib.Integers Int signed def
R144230:144239 compcert.lib.Integers Int signed def
R144225:144227 compcert.lib.Coqlib <> zeq def
R144246:144255 compcert.lib.Integers Int signed def
R144230:144239 compcert.lib.Integers Int signed def
R144283:144289 compcert.lib.Integers Int ltu def
R144302:144304 compcert.lib.Coqlib <> zlt def
R144325:144336 compcert.lib.Integers Int unsigned def
R144307:144318 compcert.lib.Integers Int unsigned def
R144302:144304 compcert.lib.Coqlib <> zlt def
R144325:144336 compcert.lib.Integers Int unsigned def
R144307:144318 compcert.lib.Integers Int unsigned def
R144352:144359 compcert.lib.Coqlib <> zlt_true thm
R144352:144359 compcert.lib.Coqlib <> zlt_true thm
R144377:144385 compcert.lib.Coqlib <> zlt_false thm
R144377:144385 compcert.lib.Coqlib <> zlt_false thm
R144405:144409 Coq.ZArith.Zpower <> two_p def
R144420:144430 compcert.lib.Integers Int modulus def
R144405:144409 Coq.ZArith.Zpower <> two_p def
R144420:144430 compcert.lib.Integers Int modulus def
R144420:144430 compcert.lib.Integers Int modulus def
R144420:144430 compcert.lib.Integers Int modulus def
R144420:144430 compcert.lib.Integers Int modulus def
R144420:144430 compcert.lib.Integers Int modulus def
R144420:144430 compcert.lib.Integers Int modulus def
R144420:144430 compcert.lib.Integers Int modulus def
R144420:144430 compcert.lib.Integers Int modulus def
R144420:144430 compcert.lib.Integers Int modulus def
R144420:144430 compcert.lib.Integers Int modulus def
R144447:144464 compcert.lib.Integers Int unsigned_range thm
R144471:144488 compcert.lib.Integers Int unsigned_range thm
R144447:144464 compcert.lib.Integers Int unsigned_range thm
R144471:144488 compcert.lib.Integers Int unsigned_range thm
R144504:144514 compcert.lib.Integers Int modulus def
R144504:144514 compcert.lib.Integers Int modulus def
R144550:144555 compcert.lib.Integers Int lt def
R144568:144570 compcert.lib.Coqlib <> zlt def
R144589:144598 compcert.lib.Integers Int signed def
R144573:144582 compcert.lib.Integers Int signed def
R144568:144570 compcert.lib.Coqlib <> zlt def
R144589:144598 compcert.lib.Integers Int signed def
R144573:144582 compcert.lib.Integers Int signed def
R144614:144621 compcert.lib.Coqlib <> zlt_true thm
R144614:144621 compcert.lib.Coqlib <> zlt_true thm
R144639:144647 compcert.lib.Coqlib <> zlt_false thm
R144639:144647 compcert.lib.Coqlib <> zlt_false thm
prf 144669:144680 Int64 decompose_le
binder 144692:144693 <> xh:994
binder 144695:144696 <> xl:995
binder 144698:144699 <> yh:996
binder 144701:144702 <> yl:997
R144748:144752 Coq.Init.Logic <> ::type_scope:x_'='_x not
R144707:144710 Coq.Init.Datatypes <> negb def
R144713:144714 compcert.lib.Integers Int64 lt def
R144733:144739 compcert.lib.Integers Int64 ofwords def
R144744:144745 compcert.lib.Integers <> xl:995 var
R144741:144742 compcert.lib.Integers <> xh:994 var
R144717:144723 compcert.lib.Integers Int64 ofwords def
R144728:144729 compcert.lib.Integers <> yl:997 var
R144725:144726 compcert.lib.Integers <> yh:996 var
R144756:144761 compcert.lib.Integers Int eq def
R144766:144767 compcert.lib.Integers <> yh:996 var
R144763:144764 compcert.lib.Integers <> xh:994 var
R144800:144805 compcert.lib.Integers Int lt def
R144810:144811 compcert.lib.Integers <> yh:996 var
R144807:144808 compcert.lib.Integers <> xh:994 var
R144774:144777 Coq.Init.Datatypes <> negb def
R144780:144786 compcert.lib.Integers Int ltu def
R144791:144792 compcert.lib.Integers <> xl:995 var
R144788:144789 compcert.lib.Integers <> yl:997 var
R144839:144850 compcert.lib.Integers Int64 decompose_lt thm
R144839:144850 compcert.lib.Integers Int64 decompose_lt thm
R144839:144850 compcert.lib.Integers Int64 decompose_lt thm
R144861:144870 compcert.lib.Integers Int eq_sym thm
R144861:144870 compcert.lib.Integers Int eq_sym thm
R144861:144870 compcert.lib.Integers Int eq_sym thm
R144883:144895 compcert.lib.Integers Int eq_signed thm
R144883:144895 compcert.lib.Integers Int eq_signed thm
R144883:144895 compcert.lib.Integers Int eq_signed thm
R144908:144910 compcert.lib.Coqlib <> zeq def
R144929:144938 compcert.lib.Integers Int signed def
R144913:144922 compcert.lib.Integers Int signed def
R144908:144910 compcert.lib.Coqlib <> zeq def
R144929:144938 compcert.lib.Integers Int signed def
R144913:144922 compcert.lib.Integers Int signed def
R144963:144968 compcert.lib.Integers Int lt def
R144981:144983 compcert.lib.Coqlib <> zlt def
R145002:145011 compcert.lib.Integers Int signed def
R144986:144995 compcert.lib.Integers Int signed def
R144981:144983 compcert.lib.Coqlib <> zlt def
R145002:145011 compcert.lib.Integers Int signed def
R144986:144995 compcert.lib.Integers Int signed def
R145029:145037 compcert.lib.Coqlib <> zlt_false thm
R145029:145037 compcert.lib.Coqlib <> zlt_false thm
R145029:145037 compcert.lib.Coqlib <> zlt_false thm
R145065:145072 compcert.lib.Coqlib <> zlt_true thm
R145065:145072 compcert.lib.Coqlib <> zlt_true thm
R145065:145072 compcert.lib.Coqlib <> zlt_true thm
prf 145163:145180 Int64 int_unsigned_range
binder 145192:145192 <> x:998
R145196:145199 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R145214:145217 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R145200:145211 compcert.lib.Integers Int unsigned def
R145213:145213 compcert.lib.Integers <> x:998 var
R145200:145211 compcert.lib.Integers Int unsigned def
R145213:145213 compcert.lib.Integers <> x:998 var
R145218:145229 compcert.lib.Integers Int64 max_unsigned def
R145258:145269 compcert.lib.Integers Int64 max_unsigned def
R145279:145285 compcert.lib.Integers Int64 modulus def
R145302:145319 compcert.lib.Integers Int unsigned_range thm
R145302:145319 compcert.lib.Integers Int unsigned_range thm
R145334:145344 compcert.lib.Integers Int modulus def
R145362:145369 compcert.lib.Integers Int64 wordsize def
R145362:145369 compcert.lib.Integers Int64 wordsize def
R145401:145412 compcert.lib.Integers Int wordsize def
R145401:145412 compcert.lib.Integers Int wordsize def
R145442:145454 Coq.ZArith.Zpower <> two_power_nat def
prf 145486:145502 Int64 int_unsigned_repr
binder 145514:145514 <> x:999
R145549:145551 Coq.Init.Logic <> ::type_scope:x_'='_x not
R145517:145524 compcert.lib.Integers Int64 unsigned def
R145527:145530 compcert.lib.Integers Int64 repr def
R145533:145544 compcert.lib.Integers Int unsigned def
R145546:145546 compcert.lib.Integers <> x:999 var
R145552:145563 compcert.lib.Integers Int unsigned def
R145565:145565 compcert.lib.Integers <> x:999 var
R145593:145605 compcert.lib.Integers Int64 unsigned_repr thm
R145593:145605 compcert.lib.Integers Int64 unsigned_repr thm
R145593:145605 compcert.lib.Integers Int64 unsigned_repr thm
R145593:145605 compcert.lib.Integers Int64 unsigned_repr thm
R145622:145639 compcert.lib.Integers Int64 int_unsigned_range thm
R145622:145639 compcert.lib.Integers Int64 int_unsigned_range thm
prf 145654:145664 Int64 int_sub_ltu
binder 145676:145676 <> x:1000
binder 145678:145678 <> y:1001
R145702:145709 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R145736:145738 Coq.Init.Logic <> ::type_scope:x_'='_x not
R145710:145721 compcert.lib.Integers Int unsigned def
R145724:145730 compcert.lib.Integers Int sub def
R145734:145734 compcert.lib.Integers <> x:1000 var
R145732:145732 compcert.lib.Integers <> y:1001 var
R145739:145746 compcert.lib.Integers Int64 unsigned def
R145749:145751 compcert.lib.Integers Int64 sub def
R145778:145781 compcert.lib.Integers Int64 repr def
R145784:145795 compcert.lib.Integers Int unsigned def
R145797:145797 compcert.lib.Integers <> x:1000 var
R145754:145757 compcert.lib.Integers Int64 repr def
R145760:145771 compcert.lib.Integers Int unsigned def
R145773:145773 compcert.lib.Integers <> y:1001 var
R145696:145697 Coq.Init.Logic <> ::type_scope:x_'='_x not
R145685:145691 compcert.lib.Integers Int ltu def
R145695:145695 compcert.lib.Integers <> y:1001 var
R145693:145693 compcert.lib.Integers <> x:1000 var
R145698:145701 Coq.Init.Datatypes <> true constr
R145832:145842 compcert.lib.Integers Int sub_ltu thm
R145832:145842 compcert.lib.Integers Int sub_ltu thm
R145867:145873 compcert.lib.Integers Int sub def
R145883:145885 compcert.lib.Integers Int64 sub def
R145898:145914 compcert.lib.Integers Int unsigned_repr thm
R145898:145914 compcert.lib.Integers Int unsigned_repr thm
R145898:145914 compcert.lib.Integers Int unsigned_repr thm
R145898:145914 compcert.lib.Integers Int unsigned_repr thm
R145925:145937 compcert.lib.Integers Int64 unsigned_repr thm
R145925:145937 compcert.lib.Integers Int64 unsigned_repr thm
R145925:145937 compcert.lib.Integers Int64 unsigned_repr thm
R145925:145937 compcert.lib.Integers Int64 unsigned_repr thm
R145973:145990 compcert.lib.Integers Int64 int_unsigned_range thm
R145950:145962 compcert.lib.Integers Int64 unsigned_repr thm
R145950:145962 compcert.lib.Integers Int64 unsigned_repr thm
R145973:145990 compcert.lib.Integers Int64 int_unsigned_range thm
R145950:145962 compcert.lib.Integers Int64 unsigned_repr thm
R146001:146017 compcert.lib.Integers Int64 int_unsigned_repr thm
R146001:146017 compcert.lib.Integers Int64 int_unsigned_repr thm
R146001:146017 compcert.lib.Integers Int64 int_unsigned_repr thm
R146066:146083 compcert.lib.Integers Int64 int_unsigned_range thm
R146043:146055 compcert.lib.Integers Int64 unsigned_repr thm
R146043:146055 compcert.lib.Integers Int64 unsigned_repr thm
R146066:146083 compcert.lib.Integers Int64 int_unsigned_range thm
R146043:146055 compcert.lib.Integers Int64 unsigned_repr thm
R146096:146112 compcert.lib.Integers Int64 int_unsigned_repr thm
R146096:146112 compcert.lib.Integers Int64 int_unsigned_repr thm
R146096:146112 compcert.lib.Integers Int64 int_unsigned_repr thm
R146127:146144 compcert.lib.Integers Int64 int_unsigned_range thm
R146127:146144 compcert.lib.Integers Int64 int_unsigned_range thm
R146173:146183 compcert.lib.Integers Int sub_ltu thm
R146173:146183 compcert.lib.Integers Int sub_ltu thm
R146215:146234 compcert.lib.Integers Int unsigned_range_2 thm
R146215:146234 compcert.lib.Integers Int unsigned_range_2 thm
R146265:146269 compcert.lib.Integers Int64 <> mod
R146285:146304 compcert.lib.Integers <> wordsize def
syndef 146318:146322 <> int64
R146327:146335 compcert.lib.Integers <> int rec
R146353:146360 compcert.lib.Integers <> repr def
R146362:146371 compcert.lib.Integers <> repr def
R146373:146381 compcert.lib.Integers <> repr def
mod 146446:146460 <> Wordsize_Ptrofs
def 146476:146483 Wordsize_Ptrofs wordsize
R146491:146501 compcert.x86_32.Archi <> ptr64 def
prf 146537:146553 Wordsize_Ptrofs wordsize_not_zero
R146564:146567 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R146556:146563 compcert.lib.Integers Wordsize_Ptrofs wordsize def
R146591:146598 compcert.lib.Integers Wordsize_Ptrofs wordsize def
R146610:146620 compcert.x86_32.Archi <> ptr64 def
R146610:146620 compcert.x86_32.Archi <> ptr64 def
R146644:146658 compcert.lib.Integers Wordsize_Ptrofs <> mod
R146679:146702 compcert.lib.Integers <> wordsize def
mod 146714:146719 <> Ptrofs
R146731:146734 compcert.lib.Integers Make <> modtype
R146736:146750 compcert.lib.Integers Wordsize_Ptrofs <> modtype
def 146766:146771 Ptrofs to_int
R146777:146779 compcert.lib.Integers Ptrofs int rec
binder 146774:146774 <> x:1002
R146783:146789 compcert.lib.Integers Int int rec
R146794:146801 compcert.lib.Integers Int repr def
R146804:146811 compcert.lib.Integers Ptrofs unsigned def
R146813:146813 compcert.lib.Integers <> x:1002 var
def 146829:146836 Ptrofs to_int64
R146842:146844 compcert.lib.Integers Ptrofs int rec
binder 146839:146839 <> x:1003
R146848:146856 compcert.lib.Integers Int64 int rec
R146861:146870 compcert.lib.Integers Int64 repr def
R146873:146880 compcert.lib.Integers Ptrofs unsigned def
R146882:146882 compcert.lib.Integers <> x:1003 var
def 146898:146903 Ptrofs of_int
R146909:146915 compcert.lib.Integers Int int rec
binder 146906:146906 <> x:1004
R146920:146922 compcert.lib.Integers Ptrofs int rec
R146927:146930 compcert.lib.Integers Ptrofs repr def
R146933:146944 compcert.lib.Integers Int unsigned def
R146946:146946 compcert.lib.Integers <> x:1004 var
def 146962:146968 Ptrofs of_intu
R146973:146978 compcert.lib.Integers Ptrofs of_int def
def 146993:146999 Ptrofs of_ints
R147005:147011 compcert.lib.Integers Int int rec
binder 147002:147002 <> x:1005
R147016:147018 compcert.lib.Integers Ptrofs int rec
R147023:147026 compcert.lib.Integers Ptrofs repr def
R147029:147038 compcert.lib.Integers Int signed def
R147040:147040 compcert.lib.Integers <> x:1005 var
def 147056:147063 Ptrofs of_int64
R147069:147077 compcert.lib.Integers Int64 int rec
binder 147066:147066 <> x:1006
R147082:147084 compcert.lib.Integers Ptrofs int rec
R147089:147092 compcert.lib.Integers Ptrofs repr def
R147095:147108 compcert.lib.Integers Int64 unsigned def
R147110:147110 compcert.lib.Integers <> x:1006 var
def 147126:147134 Ptrofs of_int64u
R147139:147146 compcert.lib.Integers Ptrofs of_int64 def
def 147161:147169 Ptrofs of_int64s
R147175:147183 compcert.lib.Integers Int64 int rec
binder 147172:147172 <> x:1007
R147188:147190 compcert.lib.Integers Ptrofs int rec
R147195:147198 compcert.lib.Integers Ptrofs repr def
R147201:147212 compcert.lib.Integers Int64 signed def
R147214:147214 compcert.lib.Integers <> x:1007 var
sec 147227:147233 Ptrofs AGREE32
var 147248:147250 Ptrofs.AGREE32 _32
R147264:147266 Coq.Init.Logic <> ::type_scope:x_'='_x not
R147253:147263 compcert.x86_32.Archi <> ptr64 def
R147267:147271 Coq.Init.Datatypes <> false constr
prf 147281:147292 Ptrofs modulus_eq32
R147302:147304 Coq.Init.Logic <> ::type_scope:x_'='_x not
R147295:147301 compcert.lib.Integers Ptrofs modulus def
R147305:147315 compcert.lib.Integers Int modulus def
R147334:147340 compcert.lib.Integers Ptrofs modulus def
R147343:147350 compcert.lib.Integers Ptrofs wordsize def
R147362:147385 compcert.lib.Integers Wordsize_Ptrofs wordsize def
R147396:147406 compcert.x86_32.Archi <> ptr64 def
R147362:147385 compcert.lib.Integers Wordsize_Ptrofs wordsize def
R147396:147406 compcert.x86_32.Archi <> ptr64 def
R147444:147446 compcert.lib.Integers <> Ptrofs.AGREE32._32 var
R147444:147446 compcert.lib.Integers <> Ptrofs.AGREE32._32 var
R147444:147446 compcert.lib.Integers <> Ptrofs.AGREE32._32 var
prf 147474:147478 Ptrofs eqm32
binder 147490:147490 <> x:1009
binder 147492:147492 <> y:1010
R147506:147510 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R147495:147501 compcert.lib.Integers Int eqm def
R147505:147505 compcert.lib.Integers <> y:1010 var
R147503:147503 compcert.lib.Integers <> x:1009 var
R147511:147513 compcert.lib.Integers Ptrofs eqm def
R147517:147517 compcert.lib.Integers <> y:1010 var
R147515:147515 compcert.lib.Integers <> x:1009 var
R147544:147550 compcert.lib.Integers Int eqm def
R147553:147555 compcert.lib.Integers Ptrofs eqm def
R147566:147577 compcert.lib.Integers Ptrofs modulus_eq32 thm
R147566:147577 compcert.lib.Integers Ptrofs modulus_eq32 thm
R147566:147577 compcert.lib.Integers Ptrofs modulus_eq32 thm
def 147604:147610 Ptrofs agree32
R147616:147625 compcert.lib.Integers Ptrofs int rec
binder 147613:147613 <> a:1011
R147632:147638 compcert.lib.Integers Int int rec
binder 147629:147629 <> b:1012
R147670:147672 Coq.Init.Logic <> ::type_scope:x_'='_x not
R147653:147667 compcert.lib.Integers Ptrofs unsigned def
R147669:147669 compcert.lib.Integers <> a:1011 var
R147673:147684 compcert.lib.Integers Int unsigned def
R147686:147686 compcert.lib.Integers <> b:1012 var
prf 147696:147707 Ptrofs agree32_repr
binder 147719:147719 <> i:1013
R147722:147728 compcert.lib.Integers Ptrofs agree32 def
R147747:147754 compcert.lib.Integers Int repr def
R147756:147756 compcert.lib.Integers <> i:1013 var
R147731:147741 compcert.lib.Integers Ptrofs repr def
R147743:147743 compcert.lib.Integers <> i:1013 var
R147790:147812 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R147815:147834 compcert.lib.Integers Int unsigned_repr_eq thm
R147790:147812 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R147790:147812 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R147815:147834 compcert.lib.Integers Int unsigned_repr_eq thm
R147815:147834 compcert.lib.Integers Int unsigned_repr_eq thm
R147845:147852 Coq.Init.Logic <> f_equal2 thm
R147845:147852 Coq.Init.Logic <> f_equal2 thm
R147867:147878 compcert.lib.Integers Ptrofs modulus_eq32 thm
R147867:147878 compcert.lib.Integers Ptrofs modulus_eq32 thm
prf 147893:147906 Ptrofs agree32_signed
binder 147918:147918 <> a:1014
binder 147920:147920 <> b:1015
R147934:147937 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R147953:147955 Coq.Init.Logic <> ::type_scope:x_'='_x not
R147938:147950 compcert.lib.Integers Ptrofs signed def
R147952:147952 compcert.lib.Integers <> a:1014 var
R147956:147965 compcert.lib.Integers Int signed def
R147967:147967 compcert.lib.Integers <> b:1015 var
R147923:147929 compcert.lib.Integers Ptrofs agree32 def
R147933:147933 compcert.lib.Integers <> b:1015 var
R147931:147931 compcert.lib.Integers <> a:1014 var
R147986:147992 compcert.lib.Integers Ptrofs agree32 def
R148010:148015 compcert.lib.Integers Ptrofs signed def
R148018:148027 compcert.lib.Integers Int signed def
R148030:148041 compcert.lib.Integers Ptrofs half_modulus def
R148044:148059 compcert.lib.Integers Int half_modulus def
R148072:148083 compcert.lib.Integers Ptrofs modulus_eq32 thm
R148072:148083 compcert.lib.Integers Ptrofs modulus_eq32 thm
R148072:148083 compcert.lib.Integers Ptrofs modulus_eq32 thm
prf 148115:148128 Ptrofs agree32_of_int
binder 148140:148140 <> b:1016
R148143:148149 compcert.lib.Integers Ptrofs agree32 def
R148162:148162 compcert.lib.Integers <> b:1016 var
R148152:148157 compcert.lib.Integers Ptrofs of_int def
R148159:148159 compcert.lib.Integers <> b:1016 var
R148181:148186 compcert.lib.Integers Ptrofs of_int def
R148209:148225 compcert.lib.Integers Int repr_unsigned thm
R148209:148225 compcert.lib.Integers Int repr_unsigned thm
R148209:148225 compcert.lib.Integers Int repr_unsigned thm
R148242:148253 compcert.lib.Integers Ptrofs agree32_repr thm
R148242:148253 compcert.lib.Integers Ptrofs agree32_repr thm
prf 148268:148282 Ptrofs agree32_of_ints
binder 148294:148294 <> b:1017
R148297:148303 compcert.lib.Integers Ptrofs agree32 def
R148317:148317 compcert.lib.Integers <> b:1017 var
R148306:148312 compcert.lib.Integers Ptrofs of_ints def
R148314:148314 compcert.lib.Integers <> b:1017 var
R148336:148341 compcert.lib.Integers Ptrofs of_int def
R148364:148378 compcert.lib.Integers Int repr_signed thm
R148364:148378 compcert.lib.Integers Int repr_signed thm
R148364:148378 compcert.lib.Integers Int repr_signed thm
R148395:148406 compcert.lib.Integers Ptrofs agree32_repr thm
R148395:148406 compcert.lib.Integers Ptrofs agree32_repr thm
prf 148421:148437 Ptrofs agree32_of_int_eq
binder 148449:148449 <> a:1018
binder 148451:148451 <> b:1019
R148465:148468 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R148477:148479 Coq.Init.Logic <> ::type_scope:x_'='_x not
R148469:148474 compcert.lib.Integers Ptrofs of_int def
R148476:148476 compcert.lib.Integers <> b:1019 var
R148480:148480 compcert.lib.Integers <> a:1018 var
R148454:148460 compcert.lib.Integers Ptrofs agree32 def
R148464:148464 compcert.lib.Integers <> b:1019 var
R148462:148462 compcert.lib.Integers <> a:1018 var
R148499:148505 compcert.lib.Integers Ptrofs agree32 def
R148508:148513 compcert.lib.Integers Ptrofs of_int def
R148544:148556 compcert.lib.Integers Ptrofs repr_unsigned thm
R148544:148556 compcert.lib.Integers Ptrofs repr_unsigned thm
prf 148571:148588 Ptrofs agree32_of_ints_eq
binder 148600:148600 <> a:1020
binder 148602:148602 <> b:1021
R148616:148619 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R148629:148631 Coq.Init.Logic <> ::type_scope:x_'='_x not
R148620:148626 compcert.lib.Integers Ptrofs of_ints def
R148628:148628 compcert.lib.Integers <> b:1021 var
R148632:148632 compcert.lib.Integers <> a:1020 var
R148605:148611 compcert.lib.Integers Ptrofs agree32 def
R148615:148615 compcert.lib.Integers <> b:1021 var
R148613:148613 compcert.lib.Integers <> a:1020 var
R148651:148657 compcert.lib.Integers Ptrofs of_ints def
R148680:148693 compcert.lib.Integers Ptrofs agree32_signed thm
R148680:148693 compcert.lib.Integers Ptrofs agree32_signed thm
R148680:148693 compcert.lib.Integers Ptrofs agree32_signed thm
R148711:148721 compcert.lib.Integers Ptrofs repr_signed thm
R148711:148721 compcert.lib.Integers Ptrofs repr_signed thm
prf 148736:148749 Ptrofs agree32_to_int
binder 148761:148761 <> a:1022
R148764:148770 compcert.lib.Integers Ptrofs agree32 def
R148775:148780 compcert.lib.Integers Ptrofs to_int def
R148782:148782 compcert.lib.Integers <> a:1022 var
R148772:148772 compcert.lib.Integers <> a:1022 var
R148802:148808 compcert.lib.Integers Ptrofs agree32 def
R148811:148816 compcert.lib.Integers Ptrofs to_int def
R148839:148850 compcert.lib.Integers Ptrofs agree32_repr thm
R148853:148860 compcert.lib.Integers Ptrofs unsigned def
R148839:148850 compcert.lib.Integers Ptrofs agree32_repr thm
R148853:148860 compcert.lib.Integers Ptrofs unsigned def
R148839:148850 compcert.lib.Integers Ptrofs agree32_repr thm
R148853:148860 compcert.lib.Integers Ptrofs unsigned def
R148877:148889 compcert.lib.Integers Ptrofs repr_unsigned thm
R148877:148889 compcert.lib.Integers Ptrofs repr_unsigned thm
R148877:148889 compcert.lib.Integers Ptrofs repr_unsigned thm
prf 148910:148926 Ptrofs agree32_to_int_eq
binder 148938:148938 <> a:1023
binder 148940:148940 <> b:1024
R148954:148957 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R148966:148968 Coq.Init.Logic <> ::type_scope:x_'='_x not
R148958:148963 compcert.lib.Integers Ptrofs to_int def
R148965:148965 compcert.lib.Integers <> a:1023 var
R148969:148969 compcert.lib.Integers <> b:1024 var
R148943:148949 compcert.lib.Integers Ptrofs agree32 def
R148953:148953 compcert.lib.Integers <> b:1024 var
R148951:148951 compcert.lib.Integers <> a:1023 var
R148988:148994 compcert.lib.Integers Ptrofs agree32 def
R148997:149002 compcert.lib.Integers Ptrofs to_int def
R149030:149046 compcert.lib.Integers Int repr_unsigned thm
R149030:149046 compcert.lib.Integers Int repr_unsigned thm
prf 149061:149071 Ptrofs agree32_neg
binder 149083:149084 <> a1:1025
binder 149086:149087 <> b1:1026
R149103:149106 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R149107:149113 compcert.lib.Integers Ptrofs agree32 def
R149132:149138 compcert.lib.Integers Int neg def
R149140:149141 compcert.lib.Integers <> b1:1026 var
R149116:149125 compcert.lib.Integers Ptrofs neg def
R149127:149128 compcert.lib.Integers <> a1:1025 var
R149090:149096 compcert.lib.Integers Ptrofs agree32 def
R149101:149102 compcert.lib.Integers <> b1:1026 var
R149098:149099 compcert.lib.Integers <> a1:1025 var
R149161:149167 compcert.lib.Integers Ptrofs agree32 def
R149170:149179 compcert.lib.Integers Ptrofs neg def
R149182:149188 compcert.lib.Integers Int neg def
R149216:149227 compcert.lib.Integers Ptrofs agree32_repr thm
R149216:149227 compcert.lib.Integers Ptrofs agree32_repr thm
prf 149242:149252 Ptrofs agree32_add
binder 149264:149265 <> a1:1027
binder 149267:149268 <> b1:1028
binder 149270:149271 <> a2:1029
binder 149273:149274 <> b2:1030
R149292:149295 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R149309:149312 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R149313:149319 compcert.lib.Integers Ptrofs agree32 def
R149341:149347 compcert.lib.Integers Int add def
R149352:149353 compcert.lib.Integers <> b2:1030 var
R149349:149350 compcert.lib.Integers <> b1:1028 var
R149322:149331 compcert.lib.Integers Ptrofs add def
R149336:149337 compcert.lib.Integers <> a2:1029 var
R149333:149334 compcert.lib.Integers <> a1:1027 var
R149296:149302 compcert.lib.Integers Ptrofs agree32 def
R149307:149308 compcert.lib.Integers <> b2:1030 var
R149304:149305 compcert.lib.Integers <> a2:1029 var
R149279:149285 compcert.lib.Integers Ptrofs agree32 def
R149290:149291 compcert.lib.Integers <> b1:1028 var
R149287:149288 compcert.lib.Integers <> a1:1027 var
R149373:149379 compcert.lib.Integers Ptrofs agree32 def
R149382:149391 compcert.lib.Integers Ptrofs add def
R149394:149400 compcert.lib.Integers Int add def
R149432:149443 compcert.lib.Integers Ptrofs agree32_repr thm
R149432:149443 compcert.lib.Integers Ptrofs agree32_repr thm
prf 149458:149468 Ptrofs agree32_sub
binder 149480:149481 <> a1:1031
binder 149483:149484 <> b1:1032
binder 149486:149487 <> a2:1033
binder 149489:149490 <> b2:1034
R149508:149511 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R149525:149528 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R149529:149535 compcert.lib.Integers Ptrofs agree32 def
R149557:149563 compcert.lib.Integers Int sub def
R149568:149569 compcert.lib.Integers <> b2:1034 var
R149565:149566 compcert.lib.Integers <> b1:1032 var
R149538:149547 compcert.lib.Integers Ptrofs sub def
R149552:149553 compcert.lib.Integers <> a2:1033 var
R149549:149550 compcert.lib.Integers <> a1:1031 var
R149512:149518 compcert.lib.Integers Ptrofs agree32 def
R149523:149524 compcert.lib.Integers <> b2:1034 var
R149520:149521 compcert.lib.Integers <> a2:1033 var
R149495:149501 compcert.lib.Integers Ptrofs agree32 def
R149506:149507 compcert.lib.Integers <> b1:1032 var
R149503:149504 compcert.lib.Integers <> a1:1031 var
R149589:149595 compcert.lib.Integers Ptrofs agree32 def
R149598:149607 compcert.lib.Integers Ptrofs sub def
R149610:149616 compcert.lib.Integers Int sub def
R149648:149659 compcert.lib.Integers Ptrofs agree32_repr thm
R149648:149659 compcert.lib.Integers Ptrofs agree32_repr thm
prf 149674:149684 Ptrofs agree32_mul
binder 149696:149697 <> a1:1035
binder 149699:149700 <> b1:1036
binder 149702:149703 <> a2:1037
binder 149705:149706 <> b2:1038
R149724:149727 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R149741:149744 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R149745:149751 compcert.lib.Integers Ptrofs agree32 def
R149773:149779 compcert.lib.Integers Int mul def
R149784:149785 compcert.lib.Integers <> b2:1038 var
R149781:149782 compcert.lib.Integers <> b1:1036 var
R149754:149763 compcert.lib.Integers Ptrofs mul def
R149768:149769 compcert.lib.Integers <> a2:1037 var
R149765:149766 compcert.lib.Integers <> a1:1035 var
R149728:149734 compcert.lib.Integers Ptrofs agree32 def
R149739:149740 compcert.lib.Integers <> b2:1038 var
R149736:149737 compcert.lib.Integers <> a2:1037 var
R149711:149717 compcert.lib.Integers Ptrofs agree32 def
R149722:149723 compcert.lib.Integers <> b1:1036 var
R149719:149720 compcert.lib.Integers <> a1:1035 var
R149805:149811 compcert.lib.Integers Ptrofs agree32 def
R149814:149823 compcert.lib.Integers Ptrofs mul def
R149826:149832 compcert.lib.Integers Int mul def
R149864:149875 compcert.lib.Integers Ptrofs agree32_repr thm
R149864:149875 compcert.lib.Integers Ptrofs agree32_repr thm
prf 149890:149901 Ptrofs agree32_divs
binder 149913:149914 <> a1:1039
binder 149916:149917 <> b1:1040
binder 149919:149920 <> a2:1041
binder 149922:149923 <> b2:1042
R149941:149944 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R149958:149961 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R149962:149968 compcert.lib.Integers Ptrofs agree32 def
R149991:149998 compcert.lib.Integers Int divs def
R150003:150004 compcert.lib.Integers <> b2:1042 var
R150000:150001 compcert.lib.Integers <> b1:1040 var
R149971:149981 compcert.lib.Integers Ptrofs divs def
R149986:149987 compcert.lib.Integers <> a2:1041 var
R149983:149984 compcert.lib.Integers <> a1:1039 var
R149945:149951 compcert.lib.Integers Ptrofs agree32 def
R149956:149957 compcert.lib.Integers <> b2:1042 var
R149953:149954 compcert.lib.Integers <> a2:1041 var
R149928:149934 compcert.lib.Integers Ptrofs agree32 def
R149939:149940 compcert.lib.Integers <> b1:1040 var
R149936:149937 compcert.lib.Integers <> a1:1039 var
R150032:150038 compcert.lib.Integers Ptrofs agree32 def
R150041:150051 compcert.lib.Integers Ptrofs divs def
R150054:150061 compcert.lib.Integers Int divs def
R150077:150090 compcert.lib.Integers Ptrofs agree32_signed thm
R150077:150090 compcert.lib.Integers Ptrofs agree32_signed thm
R150077:150090 compcert.lib.Integers Ptrofs agree32_signed thm
R150077:150090 compcert.lib.Integers Ptrofs agree32_signed thm
R150077:150090 compcert.lib.Integers Ptrofs agree32_signed thm
R150108:150119 compcert.lib.Integers Ptrofs agree32_repr thm
R150108:150119 compcert.lib.Integers Ptrofs agree32_repr thm
prf 150134:150146 Ptrofs of_int_to_int
binder 150158:150158 <> n:1043
R150178:150180 Coq.Init.Logic <> ::type_scope:x_'='_x not
R150161:150166 compcert.lib.Integers Ptrofs of_int def
R150169:150174 compcert.lib.Integers Ptrofs to_int def
R150176:150176 compcert.lib.Integers <> n:1043 var
R150181:150181 compcert.lib.Integers <> n:1043 var
R150208:150213 compcert.lib.Integers Ptrofs of_int def
R150216:150221 compcert.lib.Integers Ptrofs to_int def
R150230:150240 compcert.lib.Integers Ptrofs eqm_repr_eq thm
R150230:150240 compcert.lib.Integers Ptrofs eqm_repr_eq thm
R150254:150258 compcert.lib.Integers Ptrofs eqm32 thm
R150254:150258 compcert.lib.Integers Ptrofs eqm32 thm
R150254:150258 compcert.lib.Integers Ptrofs eqm32 thm
R150269:150279 compcert.lib.Integers Int eqm_sym thm
R150288:150308 compcert.lib.Integers Int eqm_unsigned_repr thm
R150269:150279 compcert.lib.Integers Int eqm_sym thm
R150288:150308 compcert.lib.Integers Int eqm_unsigned_repr thm
prf 150323:150335 Ptrofs to_int_of_int
binder 150347:150347 <> n:1044
R150367:150369 Coq.Init.Logic <> ::type_scope:x_'='_x not
R150350:150355 compcert.lib.Integers Ptrofs to_int def
R150358:150363 compcert.lib.Integers Ptrofs of_int def
R150365:150365 compcert.lib.Integers <> n:1044 var
R150370:150370 compcert.lib.Integers <> n:1044 var
R150397:150402 compcert.lib.Integers Ptrofs of_int def
R150405:150410 compcert.lib.Integers Ptrofs to_int def
R150421:150433 compcert.lib.Integers Ptrofs unsigned_repr thm
R150421:150433 compcert.lib.Integers Ptrofs unsigned_repr thm
R150421:150433 compcert.lib.Integers Ptrofs unsigned_repr thm
R150421:150433 compcert.lib.Integers Ptrofs unsigned_repr thm
R150442:150458 compcert.lib.Integers Int repr_unsigned thm
R150442:150458 compcert.lib.Integers Int repr_unsigned thm
R150470:150481 compcert.lib.Integers Ptrofs max_unsigned def
R150492:150503 compcert.lib.Integers Ptrofs modulus_eq32 thm
R150492:150503 compcert.lib.Integers Ptrofs modulus_eq32 thm
R150492:150503 compcert.lib.Integers Ptrofs modulus_eq32 thm
R150516:150533 compcert.lib.Integers Int unsigned_range thm
R150516:150533 compcert.lib.Integers Int unsigned_range thm
R150556:150562 compcert.lib.Integers Ptrofs.AGREE32 <> sec
sec 150574:150580 Ptrofs AGREE64
var 150595:150597 Ptrofs.AGREE64 _64
R150611:150613 Coq.Init.Logic <> ::type_scope:x_'='_x not
R150600:150610 compcert.x86_32.Archi <> ptr64 def
R150614:150617 Coq.Init.Datatypes <> true constr
prf 150627:150638 Ptrofs modulus_eq64
R150648:150650 Coq.Init.Logic <> ::type_scope:x_'='_x not
R150641:150647 compcert.lib.Integers Ptrofs modulus def
R150651:150663 compcert.lib.Integers Int64 modulus def
R150682:150688 compcert.lib.Integers Ptrofs modulus def
R150691:150698 compcert.lib.Integers Ptrofs wordsize def
R150710:150733 compcert.lib.Integers Wordsize_Ptrofs wordsize def
R150744:150754 compcert.x86_32.Archi <> ptr64 def
R150710:150733 compcert.lib.Integers Wordsize_Ptrofs wordsize def
R150744:150754 compcert.x86_32.Archi <> ptr64 def
R150792:150794 compcert.lib.Integers <> Ptrofs.AGREE64._64 var
R150792:150794 compcert.lib.Integers <> Ptrofs.AGREE64._64 var
R150792:150794 compcert.lib.Integers <> Ptrofs.AGREE64._64 var
prf 150822:150826 Ptrofs eqm64
binder 150838:150838 <> x:1046
binder 150840:150840 <> y:1047
R150856:150860 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R150843:150851 compcert.lib.Integers Int64 eqm def
R150855:150855 compcert.lib.Integers <> y:1047 var
R150853:150853 compcert.lib.Integers <> x:1046 var
R150861:150863 compcert.lib.Integers Ptrofs eqm def
R150867:150867 compcert.lib.Integers <> y:1047 var
R150865:150865 compcert.lib.Integers <> x:1046 var
R150894:150902 compcert.lib.Integers Int64 eqm def
R150905:150907 compcert.lib.Integers Ptrofs eqm def
R150918:150929 compcert.lib.Integers Ptrofs modulus_eq64 thm
R150918:150929 compcert.lib.Integers Ptrofs modulus_eq64 thm
R150918:150929 compcert.lib.Integers Ptrofs modulus_eq64 thm
def 150956:150962 Ptrofs agree64
R150968:150977 compcert.lib.Integers Ptrofs int rec
binder 150965:150965 <> a:1048
R150984:150992 compcert.lib.Integers Int64 int rec
binder 150981:150981 <> b:1049
R151024:151026 Coq.Init.Logic <> ::type_scope:x_'='_x not
R151007:151021 compcert.lib.Integers Ptrofs unsigned def
R151023:151023 compcert.lib.Integers <> a:1048 var
R151027:151040 compcert.lib.Integers Int64 unsigned def
R151042:151042 compcert.lib.Integers <> b:1049 var
prf 151052:151063 Ptrofs agree64_repr
binder 151075:151075 <> i:1050
R151078:151084 compcert.lib.Integers Ptrofs agree64 def
R151103:151112 compcert.lib.Integers Int64 repr def
R151114:151114 compcert.lib.Integers <> i:1050 var
R151087:151097 compcert.lib.Integers Ptrofs repr def
R151099:151099 compcert.lib.Integers <> i:1050 var
R151148:151170 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R151173:151194 compcert.lib.Integers Int64 unsigned_repr_eq thm
R151148:151170 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R151148:151170 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R151173:151194 compcert.lib.Integers Int64 unsigned_repr_eq thm
R151173:151194 compcert.lib.Integers Int64 unsigned_repr_eq thm
R151205:151212 Coq.Init.Logic <> f_equal2 thm
R151205:151212 Coq.Init.Logic <> f_equal2 thm
R151227:151238 compcert.lib.Integers Ptrofs modulus_eq64 thm
R151227:151238 compcert.lib.Integers Ptrofs modulus_eq64 thm
prf 151253:151266 Ptrofs agree64_signed
binder 151278:151278 <> a:1051
binder 151280:151280 <> b:1052
R151294:151297 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R151313:151315 Coq.Init.Logic <> ::type_scope:x_'='_x not
R151298:151310 compcert.lib.Integers Ptrofs signed def
R151312:151312 compcert.lib.Integers <> a:1051 var
R151316:151327 compcert.lib.Integers Int64 signed def
R151329:151329 compcert.lib.Integers <> b:1052 var
R151283:151289 compcert.lib.Integers Ptrofs agree64 def
R151293:151293 compcert.lib.Integers <> b:1052 var
R151291:151291 compcert.lib.Integers <> a:1051 var
R151348:151354 compcert.lib.Integers Ptrofs agree64 def
R151372:151377 compcert.lib.Integers Ptrofs signed def
R151380:151391 compcert.lib.Integers Int64 signed def
R151394:151405 compcert.lib.Integers Ptrofs half_modulus def
R151408:151425 compcert.lib.Integers Int64 half_modulus def
R151438:151449 compcert.lib.Integers Ptrofs modulus_eq64 thm
R151438:151449 compcert.lib.Integers Ptrofs modulus_eq64 thm
R151438:151449 compcert.lib.Integers Ptrofs modulus_eq64 thm
prf 151481:151494 Ptrofs agree64_of_int
binder 151506:151506 <> b:1053
R151509:151515 compcert.lib.Integers Ptrofs agree64 def
R151530:151530 compcert.lib.Integers <> b:1053 var
R151518:151525 compcert.lib.Integers Ptrofs of_int64 def
R151527:151527 compcert.lib.Integers <> b:1053 var
R151549:151556 compcert.lib.Integers Ptrofs of_int64 def
R151579:151597 compcert.lib.Integers Int64 repr_unsigned thm
R151579:151597 compcert.lib.Integers Int64 repr_unsigned thm
R151579:151597 compcert.lib.Integers Int64 repr_unsigned thm
R151614:151625 compcert.lib.Integers Ptrofs agree64_repr thm
R151614:151625 compcert.lib.Integers Ptrofs agree64_repr thm
prf 151640:151656 Ptrofs agree64_of_int_eq
binder 151668:151668 <> a:1054
binder 151670:151670 <> b:1055
R151684:151687 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R151698:151700 Coq.Init.Logic <> ::type_scope:x_'='_x not
R151688:151695 compcert.lib.Integers Ptrofs of_int64 def
R151697:151697 compcert.lib.Integers <> b:1055 var
R151701:151701 compcert.lib.Integers <> a:1054 var
R151673:151679 compcert.lib.Integers Ptrofs agree64 def
R151683:151683 compcert.lib.Integers <> b:1055 var
R151681:151681 compcert.lib.Integers <> a:1054 var
R151720:151726 compcert.lib.Integers Ptrofs agree64 def
R151729:151736 compcert.lib.Integers Ptrofs of_int64 def
R151767:151779 compcert.lib.Integers Ptrofs repr_unsigned thm
R151767:151779 compcert.lib.Integers Ptrofs repr_unsigned thm
prf 151794:151807 Ptrofs agree64_to_int
binder 151819:151819 <> a:1056
R151822:151828 compcert.lib.Integers Ptrofs agree64 def
R151833:151840 compcert.lib.Integers Ptrofs to_int64 def
R151842:151842 compcert.lib.Integers <> a:1056 var
R151830:151830 compcert.lib.Integers <> a:1056 var
R151862:151868 compcert.lib.Integers Ptrofs agree64 def
R151871:151878 compcert.lib.Integers Ptrofs to_int64 def
R151901:151912 compcert.lib.Integers Ptrofs agree64_repr thm
R151915:151922 compcert.lib.Integers Ptrofs unsigned def
R151901:151912 compcert.lib.Integers Ptrofs agree64_repr thm
R151915:151922 compcert.lib.Integers Ptrofs unsigned def
R151901:151912 compcert.lib.Integers Ptrofs agree64_repr thm
R151915:151922 compcert.lib.Integers Ptrofs unsigned def
R151939:151951 compcert.lib.Integers Ptrofs repr_unsigned thm
R151939:151951 compcert.lib.Integers Ptrofs repr_unsigned thm
R151939:151951 compcert.lib.Integers Ptrofs repr_unsigned thm
prf 151972:151988 Ptrofs agree64_to_int_eq
binder 152000:152000 <> a:1057
binder 152002:152002 <> b:1058
R152016:152019 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R152030:152032 Coq.Init.Logic <> ::type_scope:x_'='_x not
R152020:152027 compcert.lib.Integers Ptrofs to_int64 def
R152029:152029 compcert.lib.Integers <> a:1057 var
R152033:152033 compcert.lib.Integers <> b:1058 var
R152005:152011 compcert.lib.Integers Ptrofs agree64 def
R152015:152015 compcert.lib.Integers <> b:1058 var
R152013:152013 compcert.lib.Integers <> a:1057 var
R152052:152058 compcert.lib.Integers Ptrofs agree64 def
R152061:152068 compcert.lib.Integers Ptrofs to_int64 def
R152096:152114 compcert.lib.Integers Int64 repr_unsigned thm
R152096:152114 compcert.lib.Integers Int64 repr_unsigned thm
prf 152129:152139 Ptrofs agree64_neg
binder 152151:152152 <> a1:1059
binder 152154:152155 <> b1:1060
R152171:152174 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R152175:152181 compcert.lib.Integers Ptrofs agree64 def
R152200:152208 compcert.lib.Integers Int64 neg def
R152210:152211 compcert.lib.Integers <> b1:1060 var
R152184:152193 compcert.lib.Integers Ptrofs neg def
R152195:152196 compcert.lib.Integers <> a1:1059 var
R152158:152164 compcert.lib.Integers Ptrofs agree64 def
R152169:152170 compcert.lib.Integers <> b1:1060 var
R152166:152167 compcert.lib.Integers <> a1:1059 var
R152231:152237 compcert.lib.Integers Ptrofs agree64 def
R152240:152249 compcert.lib.Integers Ptrofs neg def
R152252:152260 compcert.lib.Integers Int64 neg def
R152288:152299 compcert.lib.Integers Ptrofs agree64_repr thm
R152288:152299 compcert.lib.Integers Ptrofs agree64_repr thm
prf 152314:152324 Ptrofs agree64_add
binder 152336:152337 <> a1:1061
binder 152339:152340 <> b1:1062
binder 152342:152343 <> a2:1063
binder 152345:152346 <> b2:1064
R152364:152367 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R152381:152384 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R152385:152391 compcert.lib.Integers Ptrofs agree64 def
R152413:152421 compcert.lib.Integers Int64 add def
R152426:152427 compcert.lib.Integers <> b2:1064 var
R152423:152424 compcert.lib.Integers <> b1:1062 var
R152394:152403 compcert.lib.Integers Ptrofs add def
R152408:152409 compcert.lib.Integers <> a2:1063 var
R152405:152406 compcert.lib.Integers <> a1:1061 var
R152368:152374 compcert.lib.Integers Ptrofs agree64 def
R152379:152380 compcert.lib.Integers <> b2:1064 var
R152376:152377 compcert.lib.Integers <> a2:1063 var
R152351:152357 compcert.lib.Integers Ptrofs agree64 def
R152362:152363 compcert.lib.Integers <> b1:1062 var
R152359:152360 compcert.lib.Integers <> a1:1061 var
R152447:152453 compcert.lib.Integers Ptrofs agree64 def
R152456:152465 compcert.lib.Integers Ptrofs add def
R152468:152474 compcert.lib.Integers Int add def
R152506:152517 compcert.lib.Integers Ptrofs agree64_repr thm
R152506:152517 compcert.lib.Integers Ptrofs agree64_repr thm
prf 152532:152542 Ptrofs agree64_sub
binder 152554:152555 <> a1:1065
binder 152557:152558 <> b1:1066
binder 152560:152561 <> a2:1067
binder 152563:152564 <> b2:1068
R152582:152585 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R152599:152602 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R152603:152609 compcert.lib.Integers Ptrofs agree64 def
R152631:152639 compcert.lib.Integers Int64 sub def
R152644:152645 compcert.lib.Integers <> b2:1068 var
R152641:152642 compcert.lib.Integers <> b1:1066 var
R152612:152621 compcert.lib.Integers Ptrofs sub def
R152626:152627 compcert.lib.Integers <> a2:1067 var
R152623:152624 compcert.lib.Integers <> a1:1065 var
R152586:152592 compcert.lib.Integers Ptrofs agree64 def
R152597:152598 compcert.lib.Integers <> b2:1068 var
R152594:152595 compcert.lib.Integers <> a2:1067 var
R152569:152575 compcert.lib.Integers Ptrofs agree64 def
R152580:152581 compcert.lib.Integers <> b1:1066 var
R152577:152578 compcert.lib.Integers <> a1:1065 var
R152665:152671 compcert.lib.Integers Ptrofs agree64 def
R152674:152683 compcert.lib.Integers Ptrofs sub def
R152686:152692 compcert.lib.Integers Int sub def
R152724:152735 compcert.lib.Integers Ptrofs agree64_repr thm
R152724:152735 compcert.lib.Integers Ptrofs agree64_repr thm
prf 152750:152760 Ptrofs agree64_mul
binder 152772:152773 <> a1:1069
binder 152775:152776 <> b1:1070
binder 152778:152779 <> a2:1071
binder 152781:152782 <> b2:1072
R152800:152803 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R152817:152820 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R152821:152827 compcert.lib.Integers Ptrofs agree64 def
R152849:152857 compcert.lib.Integers Int64 mul def
R152862:152863 compcert.lib.Integers <> b2:1072 var
R152859:152860 compcert.lib.Integers <> b1:1070 var
R152830:152839 compcert.lib.Integers Ptrofs mul def
R152844:152845 compcert.lib.Integers <> a2:1071 var
R152841:152842 compcert.lib.Integers <> a1:1069 var
R152804:152810 compcert.lib.Integers Ptrofs agree64 def
R152815:152816 compcert.lib.Integers <> b2:1072 var
R152812:152813 compcert.lib.Integers <> a2:1071 var
R152787:152793 compcert.lib.Integers Ptrofs agree64 def
R152798:152799 compcert.lib.Integers <> b1:1070 var
R152795:152796 compcert.lib.Integers <> a1:1069 var
R152883:152889 compcert.lib.Integers Ptrofs agree64 def
R152892:152901 compcert.lib.Integers Ptrofs mul def
R152904:152910 compcert.lib.Integers Int mul def
R152942:152953 compcert.lib.Integers Ptrofs agree64_repr thm
R152942:152953 compcert.lib.Integers Ptrofs agree64_repr thm
prf 152968:152979 Ptrofs agree64_divs
binder 152991:152992 <> a1:1073
binder 152994:152995 <> b1:1074
binder 152997:152998 <> a2:1075
binder 153000:153001 <> b2:1076
R153019:153022 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R153036:153039 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R153040:153046 compcert.lib.Integers Ptrofs agree64 def
R153069:153078 compcert.lib.Integers Int64 divs def
R153083:153084 compcert.lib.Integers <> b2:1076 var
R153080:153081 compcert.lib.Integers <> b1:1074 var
R153049:153059 compcert.lib.Integers Ptrofs divs def
R153064:153065 compcert.lib.Integers <> a2:1075 var
R153061:153062 compcert.lib.Integers <> a1:1073 var
R153023:153029 compcert.lib.Integers Ptrofs agree64 def
R153034:153035 compcert.lib.Integers <> b2:1076 var
R153031:153032 compcert.lib.Integers <> a2:1075 var
R153006:153012 compcert.lib.Integers Ptrofs agree64 def
R153017:153018 compcert.lib.Integers <> b1:1074 var
R153014:153015 compcert.lib.Integers <> a1:1073 var
R153112:153118 compcert.lib.Integers Ptrofs agree64 def
R153121:153131 compcert.lib.Integers Ptrofs divs def
R153134:153143 compcert.lib.Integers Int64 divs def
R153159:153172 compcert.lib.Integers Ptrofs agree64_signed thm
R153159:153172 compcert.lib.Integers Ptrofs agree64_signed thm
R153159:153172 compcert.lib.Integers Ptrofs agree64_signed thm
R153159:153172 compcert.lib.Integers Ptrofs agree64_signed thm
R153159:153172 compcert.lib.Integers Ptrofs agree64_signed thm
R153190:153201 compcert.lib.Integers Ptrofs agree64_repr thm
R153190:153201 compcert.lib.Integers Ptrofs agree64_repr thm
prf 153216:153232 Ptrofs of_int64_to_int64
binder 153244:153244 <> n:1077
R153268:153270 Coq.Init.Logic <> ::type_scope:x_'='_x not
R153247:153254 compcert.lib.Integers Ptrofs of_int64 def
R153257:153264 compcert.lib.Integers Ptrofs to_int64 def
R153266:153266 compcert.lib.Integers <> n:1077 var
R153271:153271 compcert.lib.Integers <> n:1077 var
R153298:153305 compcert.lib.Integers Ptrofs of_int64 def
R153308:153315 compcert.lib.Integers Ptrofs to_int64 def
R153324:153334 compcert.lib.Integers Ptrofs eqm_repr_eq thm
R153324:153334 compcert.lib.Integers Ptrofs eqm_repr_eq thm
R153348:153352 compcert.lib.Integers Ptrofs eqm64 thm
R153348:153352 compcert.lib.Integers Ptrofs eqm64 thm
R153348:153352 compcert.lib.Integers Ptrofs eqm64 thm
R153363:153375 compcert.lib.Integers Int64 eqm_sym thm
R153384:153406 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R153363:153375 compcert.lib.Integers Int64 eqm_sym thm
R153384:153406 compcert.lib.Integers Int64 eqm_unsigned_repr thm
prf 153421:153437 Ptrofs to_int64_of_int64
binder 153449:153449 <> n:1078
R153473:153475 Coq.Init.Logic <> ::type_scope:x_'='_x not
R153452:153459 compcert.lib.Integers Ptrofs to_int64 def
R153462:153469 compcert.lib.Integers Ptrofs of_int64 def
R153471:153471 compcert.lib.Integers <> n:1078 var
R153476:153476 compcert.lib.Integers <> n:1078 var
R153503:153510 compcert.lib.Integers Ptrofs of_int64 def
R153513:153520 compcert.lib.Integers Ptrofs to_int64 def
R153531:153543 compcert.lib.Integers Ptrofs unsigned_repr thm
R153531:153543 compcert.lib.Integers Ptrofs unsigned_repr thm
R153531:153543 compcert.lib.Integers Ptrofs unsigned_repr thm
R153531:153543 compcert.lib.Integers Ptrofs unsigned_repr thm
R153552:153570 compcert.lib.Integers Int64 repr_unsigned thm
R153552:153570 compcert.lib.Integers Int64 repr_unsigned thm
R153582:153593 compcert.lib.Integers Ptrofs max_unsigned def
R153605:153616 compcert.lib.Integers Ptrofs modulus_eq64 thm
R153605:153616 compcert.lib.Integers Ptrofs modulus_eq64 thm
R153605:153616 compcert.lib.Integers Ptrofs modulus_eq64 thm
R153629:153648 compcert.lib.Integers Int64 unsigned_range thm
R153629:153648 compcert.lib.Integers Int64 unsigned_range thm
R153671:153677 compcert.lib.Integers Ptrofs.AGREE64 <> sec
R154032:154037 compcert.lib.Integers Ptrofs <> mod
R154053:154076 compcert.lib.Integers <> wordsize def
syndef 154090:154095 <> ptrofs
R154100:154109 compcert.lib.Integers <> int rec
R154127:154137 compcert.lib.Integers <> repr def
