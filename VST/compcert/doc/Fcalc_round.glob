DIGEST NO
Fcompcert.flocq.Calc.Fcalc_round
R770:774 compcert.flocq.Core.Fcore <> <> lib
R792:803 compcert.flocq.Core.Fcore_digits <> <> lib
R821:833 compcert.flocq.Calc.Fcalc_bracket <> <> lib
R851:862 compcert.flocq.Calc.Fcalc_digits <> <> lib
sec 874:884 <> Fcalc_round
var 897:900 Fcalc_round beta
R904:908 compcert.flocq.Core.Fcore_Zaux <> radix rec
syndef 920:923 <> bpow
R931:934 compcert.flocq.Core.Fcore_Raux <> bpow def
R936:939 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
sec 954:969 Fcalc_round Fcalc_round_fexp
var 982:985 Fcalc_round.Fcalc_round_fexp fexp
R990:993 Coq.Init.Logic <> :type_scope:x_'->'_x not
R994:994 Coq.Numbers.BinNums <> Z ind
R989:989 Coq.Numbers.BinNums <> Z ind
R1019:1027 compcert.flocq.Core.Fcore_generic_fmt <> Valid_exp class
R1029:1032 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
syndef 1046:1051 <> format
R1057:1070 compcert.flocq.Core.Fcore_generic_fmt <> generic_format def
R1077:1080 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R1072:1075 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
prf 1132:1152 <> inbetween_float_round
R1179:1180 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1236:1243 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1269:1279 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R1291:1291 compcert.flocq.Calc.Fcalc_round <> x var
R1286:1289 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R1281:1284 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1326:1331 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1353:1355 Coq.Init.Logic <> :type_scope:x_'='_x not
R1332:1336 compcert.flocq.Core.Fcore_generic_fmt <> round def
R1352:1352 compcert.flocq.Calc.Fcalc_round <> x var
R1348:1350 compcert.flocq.Calc.Fcalc_round <> rnd var
R1343:1346 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R1338:1341 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1356:1358 compcert.flocq.Core.Fcore_defs <> F2R def
R1361:1365 compcert.flocq.Core.Fcore_defs <> Float constr
R1385:1385 compcert.flocq.Calc.Fcalc_round <> e var
R1373:1378 compcert.flocq.Calc.Fcalc_round <> choice var
R1382:1382 compcert.flocq.Calc.Fcalc_round <> l var
R1380:1380 compcert.flocq.Calc.Fcalc_round <> m var
R1367:1370 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1298:1312 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R1325:1325 compcert.flocq.Calc.Fcalc_round <> l var
R1323:1323 compcert.flocq.Calc.Fcalc_round <> x var
R1321:1321 compcert.flocq.Calc.Fcalc_round <> e var
R1319:1319 compcert.flocq.Calc.Fcalc_round <> m var
R1314:1317 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1214:1217 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1223:1225 Coq.Init.Logic <> :type_scope:x_'='_x not
R1218:1220 compcert.flocq.Calc.Fcalc_round <> rnd var
R1222:1222 compcert.flocq.Calc.Fcalc_round <> x var
R1226:1231 compcert.flocq.Calc.Fcalc_round <> choice var
R1235:1235 compcert.flocq.Calc.Fcalc_round <> l var
R1233:1233 compcert.flocq.Calc.Fcalc_round <> m var
R1195:1207 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R1213:1213 compcert.flocq.Calc.Fcalc_round <> l var
R1211:1211 compcert.flocq.Calc.Fcalc_round <> x var
R1209:1209 compcert.flocq.Calc.Fcalc_round <> m var
R1436:1440 compcert.flocq.Core.Fcore_generic_fmt <> round def
R1443:1445 compcert.flocq.Core.Fcore_defs <> F2R def
R1462:1468 Coq.Init.Logic <> f_equal thm
R1486:1488 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R1481:1483 compcert.flocq.Core.Fcore_Raux <> Z2R def
R1485:1485 compcert.flocq.Calc.Fcalc_round <> m var
R1489:1492 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R1462:1468 Coq.Init.Logic <> f_equal thm
R1486:1488 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R1481:1483 compcert.flocq.Core.Fcore_Raux <> Z2R def
R1485:1485 compcert.flocq.Calc.Fcalc_round <> m var
R1489:1492 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R1543:1546 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R1518:1535 compcert.flocq.Calc.Fcalc_bracket <> inbetween_mult_reg thm
R1543:1546 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R1518:1535 compcert.flocq.Calc.Fcalc_bracket <> inbetween_mult_reg thm
R1558:1566 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R1558:1566 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R1581:1605 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_mult_bpow thm
R1581:1605 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_mult_bpow thm
R1581:1605 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_mult_bpow thm
def 1625:1633 <> cond_incr
R1640:1643 Coq.Init.Datatypes <> bool ind
R1654:1654 compcert.flocq.Calc.Fcalc_round <> b var
R1676:1676 compcert.flocq.Calc.Fcalc_round <> m var
R1663:1665 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R1662:1662 compcert.flocq.Calc.Fcalc_round <> m var
prf 1688:1713 <> inbetween_float_round_sign
R1740:1741 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1850:1857 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1883:1893 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R1905:1905 compcert.flocq.Calc.Fcalc_round <> x var
R1900:1903 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R1895:1898 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1947:1952 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1974:1976 Coq.Init.Logic <> :type_scope:x_'='_x not
R1953:1957 compcert.flocq.Core.Fcore_generic_fmt <> round def
R1973:1973 compcert.flocq.Calc.Fcalc_round <> x var
R1969:1971 compcert.flocq.Calc.Fcalc_round <> rnd var
R1964:1967 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R1959:1962 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1977:1979 compcert.flocq.Core.Fcore_defs <> F2R def
R1982:1986 compcert.flocq.Core.Fcore_defs <> Float constr
R2048:2048 compcert.flocq.Calc.Fcalc_round <> e var
R1994:2002 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R2020:2025 compcert.flocq.Calc.Fcalc_round <> choice var
R2044:2044 compcert.flocq.Calc.Fcalc_round <> l var
R2042:2042 compcert.flocq.Calc.Fcalc_round <> m var
R2028:2035 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R2037:2037 compcert.flocq.Calc.Fcalc_round <> x var
R2005:2012 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R2014:2014 compcert.flocq.Calc.Fcalc_round <> x var
R1988:1991 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1912:1926 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R1946:1946 compcert.flocq.Calc.Fcalc_round <> l var
R1938:1941 Coq.Reals.Rbasic_fun <> Rabs def
R1943:1943 compcert.flocq.Calc.Fcalc_round <> x var
R1935:1935 compcert.flocq.Calc.Fcalc_round <> e var
R1933:1933 compcert.flocq.Calc.Fcalc_round <> m var
R1928:1931 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1782:1789 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1795:1797 Coq.Init.Logic <> :type_scope:x_'='_x not
R1790:1792 compcert.flocq.Calc.Fcalc_round <> rnd var
R1794:1794 compcert.flocq.Calc.Fcalc_round <> x var
R1798:1806 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R1824:1829 compcert.flocq.Calc.Fcalc_round <> choice var
R1848:1848 compcert.flocq.Calc.Fcalc_round <> l var
R1846:1846 compcert.flocq.Calc.Fcalc_round <> m var
R1832:1839 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R1841:1841 compcert.flocq.Calc.Fcalc_round <> x var
R1809:1816 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R1818:1818 compcert.flocq.Calc.Fcalc_round <> x var
R1756:1768 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R1781:1781 compcert.flocq.Calc.Fcalc_round <> l var
R1773:1776 Coq.Reals.Rbasic_fun <> Rabs def
R1778:1778 compcert.flocq.Calc.Fcalc_round <> x var
R1770:1770 compcert.flocq.Calc.Fcalc_round <> m var
R2099:2105 Coq.Init.Logic <> f_equal thm
R2123:2125 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R2118:2120 compcert.flocq.Core.Fcore_Raux <> Z2R def
R2122:2122 compcert.flocq.Calc.Fcalc_round <> m var
R2126:2129 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2099:2105 Coq.Init.Logic <> f_equal thm
R2123:2125 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R2118:2120 compcert.flocq.Core.Fcore_Raux <> Z2R def
R2122:2122 compcert.flocq.Calc.Fcalc_round <> m var
R2126:2129 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2155:2162 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R2175:2182 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R2185:2199 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R2206:2209 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R2201:2204 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R2175:2182 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R2185:2199 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R2206:2209 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R2201:2204 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R2155:2162 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R2265:2268 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2240:2257 compcert.flocq.Calc.Fcalc_bracket <> inbetween_mult_reg thm
R2265:2268 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2240:2257 compcert.flocq.Calc.Fcalc_bracket <> inbetween_mult_reg thm
R2280:2288 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R2280:2288 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R2303:2312 Coq.Reals.Rbasic_fun <> Rabs_right thm
R2315:2318 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2303:2312 Coq.Reals.Rbasic_fun <> Rabs_right thm
R2315:2318 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2303:2312 Coq.Reals.Rbasic_fun <> Rabs_right thm
R2315:2318 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2303:2312 Coq.Reals.Rbasic_fun <> Rabs_right thm
R2315:2318 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2341:2349 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R2341:2349 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R2341:2349 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R2364:2388 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_mult_bpow thm
R2364:2388 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_mult_bpow thm
R2364:2388 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_mult_bpow thm
R2397:2402 Coq.Reals.RIneq <> Rle_ge thm
R2397:2402 Coq.Reals.RIneq <> Rle_ge thm
R2411:2419 compcert.flocq.Core.Fcore_Raux <> bpow_ge_0 thm
R2411:2419 compcert.flocq.Core.Fcore_Raux <> bpow_ge_0 thm
R2438:2450 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R2438:2450 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R2483:2495 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R2483:2495 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R2510:2518 Coq.Reals.RIneq <> Rmult_0_l thm
R2521:2524 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2527:2527 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R2510:2518 Coq.Reals.RIneq <> Rmult_0_l thm
R2521:2524 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2527:2527 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R2510:2518 Coq.Reals.RIneq <> Rmult_0_l thm
R2521:2524 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2527:2527 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R2540:2556 Coq.Reals.RIneq <> Rmult_lt_compat_r thm
R2540:2556 Coq.Reals.RIneq <> Rmult_lt_compat_r thm
R2580:2588 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R2580:2588 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R2597:2610 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R2597:2610 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R2619:2630 Coq.Reals.RIneq <> Rmult_le_pos thm
R2619:2630 Coq.Reals.RIneq <> Rmult_le_pos thm
R2654:2662 compcert.flocq.Core.Fcore_Raux <> bpow_ge_0 thm
R2654:2662 compcert.flocq.Core.Fcore_Raux <> bpow_ge_0 thm
prf 2723:2738 <> inbetween_int_DN
R2779:2784 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2793:2795 Coq.Init.Logic <> :type_scope:x_'='_x not
R2785:2790 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R2792:2792 compcert.flocq.Calc.Fcalc_round <> x var
R2796:2796 compcert.flocq.Calc.Fcalc_round <> m var
R2760:2772 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R2778:2778 compcert.flocq.Calc.Fcalc_round <> l var
R2776:2776 compcert.flocq.Calc.Fcalc_round <> x var
R2774:2774 compcert.flocq.Calc.Fcalc_round <> m var
R2831:2840 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R2831:2840 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R2856:2871 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R2856:2871 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R2895:2900 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R2895:2900 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R2909:2916 Coq.ZArith.Zorder <> Zlt_succ syndef
R2909:2916 Coq.ZArith.Zorder <> Zlt_succ syndef
prf 2933:2950 <> inbetween_float_DN
R2981:2991 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R3003:3003 compcert.flocq.Calc.Fcalc_round <> x var
R2998:3001 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R2993:2996 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R3038:3043 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3068:3070 Coq.Init.Logic <> :type_scope:x_'='_x not
R3044:3048 compcert.flocq.Core.Fcore_generic_fmt <> round def
R3067:3067 compcert.flocq.Calc.Fcalc_round <> x var
R3060:3065 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R3055:3058 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R3050:3053 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R3071:3073 compcert.flocq.Core.Fcore_defs <> F2R def
R3076:3080 compcert.flocq.Core.Fcore_defs <> Float constr
R3089:3089 compcert.flocq.Calc.Fcalc_round <> e var
R3087:3087 compcert.flocq.Calc.Fcalc_round <> m var
R3082:3085 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R3010:3024 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R3037:3037 compcert.flocq.Calc.Fcalc_round <> l var
R3035:3035 compcert.flocq.Calc.Fcalc_round <> x var
R3033:3033 compcert.flocq.Calc.Fcalc_round <> e var
R3031:3031 compcert.flocq.Calc.Fcalc_round <> m var
R3026:3029 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R3155:3155 compcert.flocq.Calc.Fcalc_round <> m var
R3106:3126 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R3155:3155 compcert.flocq.Calc.Fcalc_round <> m var
R3106:3126 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R3165:3180 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN thm
R3165:3180 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN thm
def 3200:3212 <> round_sign_DN
R3229:3229 compcert.flocq.Calc.Fcalc_round <> l var
R3240:3248 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R3253:3257 Coq.Init.Datatypes <> false constr
R3268:3268 compcert.flocq.Calc.Fcalc_round <> s var
prf 3286:3306 <> inbetween_int_DN_sign
R3354:3359 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3368:3370 Coq.Init.Logic <> :type_scope:x_'='_x not
R3360:3365 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R3367:3367 compcert.flocq.Calc.Fcalc_round <> x var
R3371:3379 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R3397:3405 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R3440:3440 compcert.flocq.Calc.Fcalc_round <> m var
R3408:3420 compcert.flocq.Calc.Fcalc_round <> round_sign_DN def
R3437:3437 compcert.flocq.Calc.Fcalc_round <> l var
R3423:3430 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R3432:3432 compcert.flocq.Calc.Fcalc_round <> x var
R3382:3389 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R3391:3391 compcert.flocq.Calc.Fcalc_round <> x var
R3328:3340 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R3353:3353 compcert.flocq.Calc.Fcalc_round <> l var
R3345:3348 Coq.Reals.Rbasic_fun <> Rabs def
R3350:3350 compcert.flocq.Calc.Fcalc_round <> x var
R3342:3342 compcert.flocq.Calc.Fcalc_round <> m var
R3475:3478 Coq.Reals.Rbasic_fun <> Rabs def
R3497:3505 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R3497:3505 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R3537:3549 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R3537:3549 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R3537:3549 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R3607:3621 Coq.Reals.RIneq <> Ropp_involutive thm
R3607:3621 Coq.Reals.RIneq <> Ropp_involutive thm
R3607:3621 Coq.Reals.RIneq <> Ropp_involutive thm
R3641:3647 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3641:3647 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3641:3647 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3656:3665 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R3656:3665 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R3674:3683 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R3674:3683 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R3699:3704 Coq.Reals.RIneq <> Rlt_le thm
R3699:3704 Coq.Reals.RIneq <> Rlt_le thm
R3715:3721 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3715:3721 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3715:3721 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3730:3743 Coq.Reals.RIneq <> Ropp_lt_cancel thm
R3730:3743 Coq.Reals.RIneq <> Ropp_lt_cancel thm
R3758:3772 Coq.Reals.RIneq <> Ropp_involutive thm
R3758:3772 Coq.Reals.RIneq <> Ropp_involutive thm
R3758:3772 Coq.Reals.RIneq <> Ropp_involutive thm
R3799:3801 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R3790:3792 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R3798:3798 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R3794:3796 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R3799:3801 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R3790:3792 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R3798:3798 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R3794:3796 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R3816:3822 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3816:3822 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3816:3822 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3831:3844 Coq.Reals.RIneq <> Ropp_lt_cancel thm
R3831:3844 Coq.Reals.RIneq <> Ropp_lt_cancel thm
R3859:3873 Coq.Reals.RIneq <> Ropp_involutive thm
R3859:3873 Coq.Reals.RIneq <> Ropp_involutive thm
R3859:3873 Coq.Reals.RIneq <> Ropp_involutive thm
R3890:3903 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R3890:3903 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R3890:3903 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R3890:3903 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R3951:3960 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R3951:3960 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R3969:3978 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R3969:3978 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R3998:4003 Coq.Reals.RIneq <> Rlt_le thm
R3998:4003 Coq.Reals.RIneq <> Rlt_le thm
R4025:4030 Coq.Reals.RIneq <> Rge_le thm
R4025:4030 Coq.Reals.RIneq <> Rge_le thm
prf 4047:4069 <> inbetween_float_DN_sign
R4100:4110 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R4122:4122 compcert.flocq.Calc.Fcalc_round <> x var
R4117:4120 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R4112:4115 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R4164:4169 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4194:4196 Coq.Init.Logic <> :type_scope:x_'='_x not
R4170:4174 compcert.flocq.Core.Fcore_generic_fmt <> round def
R4193:4193 compcert.flocq.Calc.Fcalc_round <> x var
R4186:4191 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R4181:4184 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R4176:4179 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R4197:4199 compcert.flocq.Core.Fcore_defs <> F2R def
R4202:4206 compcert.flocq.Core.Fcore_defs <> Float constr
R4287:4287 compcert.flocq.Calc.Fcalc_round <> e var
R4214:4222 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R4240:4248 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R4283:4283 compcert.flocq.Calc.Fcalc_round <> m var
R4251:4263 compcert.flocq.Calc.Fcalc_round <> round_sign_DN def
R4280:4280 compcert.flocq.Calc.Fcalc_round <> l var
R4266:4273 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R4275:4275 compcert.flocq.Calc.Fcalc_round <> x var
R4225:4232 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R4234:4234 compcert.flocq.Calc.Fcalc_round <> x var
R4208:4211 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R4129:4143 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R4163:4163 compcert.flocq.Calc.Fcalc_round <> l var
R4155:4158 Coq.Reals.Rbasic_fun <> Rabs def
R4160:4160 compcert.flocq.Calc.Fcalc_round <> x var
R4152:4152 compcert.flocq.Calc.Fcalc_round <> e var
R4150:4150 compcert.flocq.Calc.Fcalc_round <> m var
R4145:4148 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R4360:4368 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R4390:4390 compcert.flocq.Calc.Fcalc_round <> m var
R4371:4383 compcert.flocq.Calc.Fcalc_round <> round_sign_DN def
R4387:4387 compcert.flocq.Calc.Fcalc_round <> l var
R4385:4385 compcert.flocq.Calc.Fcalc_round <> s var
R4304:4329 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R4360:4368 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R4390:4390 compcert.flocq.Calc.Fcalc_round <> m var
R4371:4383 compcert.flocq.Calc.Fcalc_round <> round_sign_DN def
R4387:4387 compcert.flocq.Calc.Fcalc_round <> l var
R4385:4385 compcert.flocq.Calc.Fcalc_round <> s var
R4304:4329 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R4400:4420 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN_sign thm
R4400:4420 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN_sign thm
def 4482:4489 <> round_UP
R4504:4504 compcert.flocq.Calc.Fcalc_round <> l var
R4515:4523 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R4528:4532 Coq.Init.Datatypes <> false constr
R4543:4546 Coq.Init.Datatypes <> true constr
prf 4564:4579 <> inbetween_int_UP
R4620:4625 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4633:4635 Coq.Init.Logic <> :type_scope:x_'='_x not
R4626:4630 compcert.flocq.Core.Fcore_Raux <> Zceil def
R4632:4632 compcert.flocq.Calc.Fcalc_round <> x var
R4636:4644 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R4659:4659 compcert.flocq.Calc.Fcalc_round <> m var
R4647:4654 compcert.flocq.Calc.Fcalc_round <> round_UP def
R4656:4656 compcert.flocq.Calc.Fcalc_round <> l var
R4601:4613 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R4619:4619 compcert.flocq.Calc.Fcalc_round <> l var
R4617:4617 compcert.flocq.Calc.Fcalc_round <> x var
R4615:4615 compcert.flocq.Calc.Fcalc_round <> m var
R4712:4716 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R4752:4752 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R4700:4702 Coq.Init.Logic <> :type_scope:x_'='_x not
R4703:4711 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R4731:4734 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4718:4721 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R4722:4730 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R4745:4747 Coq.Init.Logic <> :type_scope:x_'='_x not
R4735:4742 compcert.flocq.Calc.Fcalc_round <> round_UP def
R4748:4751 Coq.Init.Datatypes <> true constr
R4712:4716 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R4752:4752 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R4700:4702 Coq.Init.Logic <> :type_scope:x_'='_x not
R4703:4711 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R4731:4734 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4718:4721 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R4722:4730 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R4745:4747 Coq.Init.Logic <> :type_scope:x_'='_x not
R4735:4742 compcert.flocq.Calc.Fcalc_round <> round_UP def
R4748:4751 Coq.Init.Datatypes <> true constr
R4902:4910 compcert.flocq.Core.Fcore_Raux <> Zceil_Z2R thm
R4902:4910 compcert.flocq.Core.Fcore_Raux <> Zceil_Z2R thm
R4958:4966 compcert.flocq.Core.Fcore_Raux <> Zceil_imp thm
R4958:4966 compcert.flocq.Core.Fcore_Raux <> Zceil_imp thm
R4989:4991 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R4985:4987 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4989:4991 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R4985:4987 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R5020:5023 Coq.Init.Logic <> conj constr
R5036:5041 Coq.Reals.RIneq <> Rlt_le thm
R5048:5052 Coq.Init.Logic <> proj2 thm
R5054:5054 compcert.flocq.Calc.Fcalc_round <> H var
R5026:5030 Coq.Init.Logic <> proj1 thm
R5032:5032 compcert.flocq.Calc.Fcalc_round <> H var
R5020:5023 Coq.Init.Logic <> conj constr
R5036:5041 Coq.Reals.RIneq <> Rlt_le thm
R5048:5052 Coq.Init.Logic <> proj2 thm
R5054:5054 compcert.flocq.Calc.Fcalc_round <> H var
R5026:5030 Coq.Init.Logic <> proj1 thm
R5032:5032 compcert.flocq.Calc.Fcalc_round <> H var
R5066:5088 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds_not_Eq thm
R5066:5088 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds_not_Eq thm
prf 5131:5148 <> inbetween_float_UP
R5179:5189 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R5201:5201 compcert.flocq.Calc.Fcalc_round <> x var
R5196:5199 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R5191:5194 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R5236:5241 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5265:5267 Coq.Init.Logic <> :type_scope:x_'='_x not
R5242:5246 compcert.flocq.Core.Fcore_generic_fmt <> round def
R5264:5264 compcert.flocq.Calc.Fcalc_round <> x var
R5258:5262 compcert.flocq.Core.Fcore_Raux <> Zceil def
R5253:5256 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R5248:5251 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R5268:5270 compcert.flocq.Core.Fcore_defs <> F2R def
R5273:5277 compcert.flocq.Core.Fcore_defs <> Float constr
R5311:5311 compcert.flocq.Calc.Fcalc_round <> e var
R5285:5293 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R5308:5308 compcert.flocq.Calc.Fcalc_round <> m var
R5296:5303 compcert.flocq.Calc.Fcalc_round <> round_UP def
R5305:5305 compcert.flocq.Calc.Fcalc_round <> l var
R5279:5282 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R5208:5222 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R5235:5235 compcert.flocq.Calc.Fcalc_round <> l var
R5233:5233 compcert.flocq.Calc.Fcalc_round <> x var
R5231:5231 compcert.flocq.Calc.Fcalc_round <> e var
R5229:5229 compcert.flocq.Calc.Fcalc_round <> m var
R5224:5227 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R5377:5385 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R5400:5400 compcert.flocq.Calc.Fcalc_round <> m var
R5388:5395 compcert.flocq.Calc.Fcalc_round <> round_UP def
R5397:5397 compcert.flocq.Calc.Fcalc_round <> l var
R5328:5348 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R5377:5385 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R5400:5400 compcert.flocq.Calc.Fcalc_round <> m var
R5388:5395 compcert.flocq.Calc.Fcalc_round <> round_UP def
R5397:5397 compcert.flocq.Calc.Fcalc_round <> l var
R5328:5348 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R5410:5425 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP thm
R5410:5425 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP thm
def 5445:5457 <> round_sign_UP
R5474:5474 compcert.flocq.Calc.Fcalc_round <> l var
R5485:5493 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R5498:5502 Coq.Init.Datatypes <> false constr
R5513:5516 Coq.Init.Datatypes <> negb def
R5518:5518 compcert.flocq.Calc.Fcalc_round <> s var
prf 5536:5556 <> inbetween_int_UP_sign
R5604:5609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5617:5619 Coq.Init.Logic <> :type_scope:x_'='_x not
R5610:5614 compcert.flocq.Core.Fcore_Raux <> Zceil def
R5616:5616 compcert.flocq.Calc.Fcalc_round <> x var
R5620:5628 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R5646:5654 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R5689:5689 compcert.flocq.Calc.Fcalc_round <> m var
R5657:5669 compcert.flocq.Calc.Fcalc_round <> round_sign_UP def
R5686:5686 compcert.flocq.Calc.Fcalc_round <> l var
R5672:5679 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R5681:5681 compcert.flocq.Calc.Fcalc_round <> x var
R5631:5638 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R5640:5640 compcert.flocq.Calc.Fcalc_round <> x var
R5578:5590 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R5603:5603 compcert.flocq.Calc.Fcalc_round <> l var
R5595:5598 Coq.Reals.Rbasic_fun <> Rabs def
R5600:5600 compcert.flocq.Calc.Fcalc_round <> x var
R5592:5592 compcert.flocq.Calc.Fcalc_round <> m var
R5724:5727 Coq.Reals.Rbasic_fun <> Rabs def
R5746:5754 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R5746:5754 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R5786:5798 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R5786:5798 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R5786:5798 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R5830:5834 compcert.flocq.Core.Fcore_Raux <> Zceil def
R5843:5849 Coq.Init.Logic <> f_equal thm
R5843:5849 Coq.Init.Logic <> f_equal thm
R5897:5906 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R5897:5906 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R5915:5924 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R5915:5924 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R5944:5949 Coq.Reals.RIneq <> Rlt_le thm
R5944:5949 Coq.Reals.RIneq <> Rlt_le thm
R5975:5988 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R5975:5988 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R5975:5988 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R5975:5988 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R6043:6051 compcert.flocq.Core.Fcore_Raux <> Zceil_Z2R thm
R6043:6051 compcert.flocq.Core.Fcore_Raux <> Zceil_Z2R thm
R6060:6068 compcert.flocq.Core.Fcore_Raux <> Zceil_imp thm
R6060:6068 compcert.flocq.Core.Fcore_Raux <> Zceil_imp thm
R6105:6109 Coq.ZArith.BinInt <> Zpred syndef
R6112:6116 Coq.ZArith.BinInt <> Zsucc syndef
R6091:6093 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R6087:6089 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R6091:6093 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R6087:6089 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R6105:6109 Coq.ZArith.BinInt <> Zpred syndef
R6112:6116 Coq.ZArith.BinInt <> Zsucc syndef
R6138:6147 Coq.ZArith.BinInt <> Zpred_succ thm
R6138:6147 Coq.ZArith.BinInt <> Zpred_succ thm
R6138:6147 Coq.ZArith.BinInt <> Zpred_succ thm
R6160:6165 Coq.Reals.RIneq <> Rlt_le thm
R6160:6165 Coq.Reals.RIneq <> Rlt_le thm
R6178:6183 Coq.Reals.RIneq <> Rge_le thm
R6178:6183 Coq.Reals.RIneq <> Rge_le thm
prf 6200:6222 <> inbetween_float_UP_sign
R6253:6263 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R6275:6275 compcert.flocq.Calc.Fcalc_round <> x var
R6270:6273 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R6265:6268 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R6317:6322 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6346:6348 Coq.Init.Logic <> :type_scope:x_'='_x not
R6323:6327 compcert.flocq.Core.Fcore_generic_fmt <> round def
R6345:6345 compcert.flocq.Calc.Fcalc_round <> x var
R6339:6343 compcert.flocq.Core.Fcore_Raux <> Zceil def
R6334:6337 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R6329:6332 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R6349:6351 compcert.flocq.Core.Fcore_defs <> F2R def
R6354:6358 compcert.flocq.Core.Fcore_defs <> Float constr
R6439:6439 compcert.flocq.Calc.Fcalc_round <> e var
R6366:6374 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R6392:6400 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R6435:6435 compcert.flocq.Calc.Fcalc_round <> m var
R6403:6415 compcert.flocq.Calc.Fcalc_round <> round_sign_UP def
R6432:6432 compcert.flocq.Calc.Fcalc_round <> l var
R6418:6425 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R6427:6427 compcert.flocq.Calc.Fcalc_round <> x var
R6377:6384 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R6386:6386 compcert.flocq.Calc.Fcalc_round <> x var
R6360:6363 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R6282:6296 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R6316:6316 compcert.flocq.Calc.Fcalc_round <> l var
R6308:6311 Coq.Reals.Rbasic_fun <> Rabs def
R6313:6313 compcert.flocq.Calc.Fcalc_round <> x var
R6305:6305 compcert.flocq.Calc.Fcalc_round <> e var
R6303:6303 compcert.flocq.Calc.Fcalc_round <> m var
R6298:6301 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R6512:6520 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R6542:6542 compcert.flocq.Calc.Fcalc_round <> m var
R6523:6535 compcert.flocq.Calc.Fcalc_round <> round_sign_UP def
R6539:6539 compcert.flocq.Calc.Fcalc_round <> l var
R6537:6537 compcert.flocq.Calc.Fcalc_round <> s var
R6456:6481 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R6512:6520 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R6542:6542 compcert.flocq.Calc.Fcalc_round <> m var
R6523:6535 compcert.flocq.Calc.Fcalc_round <> round_sign_UP def
R6539:6539 compcert.flocq.Calc.Fcalc_round <> l var
R6537:6537 compcert.flocq.Calc.Fcalc_round <> s var
R6456:6481 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R6552:6572 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP_sign thm
R6552:6572 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP_sign thm
def 6643:6650 <> round_ZR
R6657:6660 Coq.Init.Datatypes <> bool ind
R6676:6676 compcert.flocq.Calc.Fcalc_round <> l var
R6687:6695 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R6700:6704 Coq.Init.Datatypes <> false constr
R6715:6715 compcert.flocq.Calc.Fcalc_round <> s var
prf 6733:6748 <> inbetween_int_ZR
R6789:6794 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6803:6805 Coq.Init.Logic <> :type_scope:x_'='_x not
R6795:6800 compcert.flocq.Core.Fcore_Raux <> Ztrunc def
R6802:6802 compcert.flocq.Calc.Fcalc_round <> x var
R6806:6814 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R6844:6844 compcert.flocq.Calc.Fcalc_round <> m var
R6817:6824 compcert.flocq.Calc.Fcalc_round <> round_ZR def
R6841:6841 compcert.flocq.Calc.Fcalc_round <> l var
R6827:6834 Coq.ZArith.Zbool <> Zlt_bool syndef
R6836:6836 compcert.flocq.Calc.Fcalc_round <> m var
R6770:6782 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R6788:6788 compcert.flocq.Calc.Fcalc_round <> l var
R6786:6786 compcert.flocq.Calc.Fcalc_round <> x var
R6784:6784 compcert.flocq.Calc.Fcalc_round <> m var
R6976:6983 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R6976:6983 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R6976:6983 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R6976:6983 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R7011:7016 compcert.flocq.Core.Fcore_Raux <> Ztrunc def
R7039:7041 Coq.Init.Logic <> :type_scope:x_'='_x not
R7031:7036 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R7039:7041 Coq.Init.Logic <> :type_scope:x_'='_x not
R7031:7036 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R7052:7061 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R7052:7061 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R7071:7074 Coq.Init.Logic <> conj constr
R7101:7105 Coq.Init.Logic <> proj2 thm
R7077:7082 Coq.Reals.RIneq <> Rlt_le thm
R7089:7093 Coq.Init.Logic <> proj1 thm
R7071:7074 Coq.Init.Logic <> conj constr
R7101:7105 Coq.Init.Logic <> proj2 thm
R7077:7082 Coq.Reals.RIneq <> Rlt_le thm
R7089:7093 Coq.Init.Logic <> proj1 thm
R7121:7135 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R7121:7135 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R7121:7135 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R7121:7135 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R7157:7165 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R7180:7192 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R7216:7228 compcert.flocq.Core.Fcore_Zaux <> Zlt_bool_spec thm
R7255:7264 Coq.Init.Logic <> refl_equal syndef
R7180:7192 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R7216:7228 compcert.flocq.Core.Fcore_Zaux <> Zlt_bool_spec thm
R7216:7228 compcert.flocq.Core.Fcore_Zaux <> Zlt_bool_spec thm
R7255:7264 Coq.Init.Logic <> refl_equal syndef
R7255:7264 Coq.Init.Logic <> refl_equal syndef
R7255:7264 Coq.Init.Logic <> refl_equal syndef
R7255:7264 Coq.Init.Logic <> refl_equal syndef
R7272:7281 Coq.Reals.RIneq <> Rlt_not_le thm
R7272:7281 Coq.Reals.RIneq <> Rlt_not_le thm
R7306:7311 Coq.Reals.RIneq <> Rlt_le thm
R7306:7311 Coq.Reals.RIneq <> Rlt_le thm
R7344:7348 Coq.Init.Logic <> proj1 thm
R7320:7331 Coq.Reals.RIneq <> Rle_lt_trans thm
R7344:7348 Coq.Init.Logic <> proj1 thm
R7320:7331 Coq.Reals.RIneq <> Rle_lt_trans thm
R7366:7371 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R7366:7371 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R7382:7391 Coq.Reals.RIneq <> Rle_not_lt thm
R7382:7391 Coq.Reals.RIneq <> Rle_not_lt thm
R7440:7444 Coq.Init.Logic <> proj2 thm
R7416:7427 Coq.Reals.RIneq <> Rlt_le_trans thm
R7440:7444 Coq.Init.Logic <> proj2 thm
R7416:7427 Coq.Reals.RIneq <> Rlt_le_trans thm
R7458:7463 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R7458:7463 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R7481:7491 Coq.ZArith.Zorder <> Zlt_le_succ thm
R7481:7491 Coq.ZArith.Zorder <> Zlt_le_succ thm
R7516:7525 Coq.Reals.RIneq <> Rlt_not_eq thm
R7516:7525 Coq.Reals.RIneq <> Rlt_not_eq thm
prf 7542:7559 <> inbetween_float_ZR
R7590:7600 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R7612:7612 compcert.flocq.Calc.Fcalc_round <> x var
R7607:7610 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R7602:7605 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R7647:7652 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7677:7679 Coq.Init.Logic <> :type_scope:x_'='_x not
R7653:7657 compcert.flocq.Core.Fcore_generic_fmt <> round def
R7676:7676 compcert.flocq.Calc.Fcalc_round <> x var
R7669:7674 compcert.flocq.Core.Fcore_Raux <> Ztrunc def
R7664:7667 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R7659:7662 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R7680:7682 compcert.flocq.Core.Fcore_defs <> F2R def
R7685:7689 compcert.flocq.Core.Fcore_defs <> Float constr
R7738:7738 compcert.flocq.Calc.Fcalc_round <> e var
R7697:7705 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R7735:7735 compcert.flocq.Calc.Fcalc_round <> m var
R7708:7715 compcert.flocq.Calc.Fcalc_round <> round_ZR def
R7732:7732 compcert.flocq.Calc.Fcalc_round <> l var
R7718:7725 Coq.ZArith.Zbool <> Zlt_bool syndef
R7727:7727 compcert.flocq.Calc.Fcalc_round <> m var
R7691:7694 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R7619:7633 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R7646:7646 compcert.flocq.Calc.Fcalc_round <> l var
R7644:7644 compcert.flocq.Calc.Fcalc_round <> x var
R7642:7642 compcert.flocq.Calc.Fcalc_round <> e var
R7640:7640 compcert.flocq.Calc.Fcalc_round <> m var
R7635:7638 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R7804:7812 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R7842:7842 compcert.flocq.Calc.Fcalc_round <> m var
R7815:7822 compcert.flocq.Calc.Fcalc_round <> round_ZR def
R7839:7839 compcert.flocq.Calc.Fcalc_round <> l var
R7825:7832 Coq.ZArith.Zbool <> Zlt_bool syndef
R7834:7834 compcert.flocq.Calc.Fcalc_round <> m var
R7755:7775 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R7804:7812 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R7842:7842 compcert.flocq.Calc.Fcalc_round <> m var
R7815:7822 compcert.flocq.Calc.Fcalc_round <> round_ZR def
R7839:7839 compcert.flocq.Calc.Fcalc_round <> l var
R7825:7832 Coq.ZArith.Zbool <> Zlt_bool syndef
R7834:7834 compcert.flocq.Calc.Fcalc_round <> m var
R7755:7775 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R7852:7867 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR thm
R7852:7867 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR thm
prf 7884:7904 <> inbetween_int_ZR_sign
R7952:7957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7966:7968 Coq.Init.Logic <> :type_scope:x_'='_x not
R7958:7963 compcert.flocq.Core.Fcore_Raux <> Ztrunc def
R7965:7965 compcert.flocq.Calc.Fcalc_round <> x var
R7969:7977 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R7994:7994 compcert.flocq.Calc.Fcalc_round <> m var
R7980:7987 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R7989:7989 compcert.flocq.Calc.Fcalc_round <> x var
R7926:7938 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R7951:7951 compcert.flocq.Calc.Fcalc_round <> l var
R7943:7946 Coq.Reals.Rbasic_fun <> Rabs def
R7948:7948 compcert.flocq.Calc.Fcalc_round <> x var
R7940:7940 compcert.flocq.Calc.Fcalc_round <> m var
R8035:8040 compcert.flocq.Core.Fcore_Raux <> Ztrunc def
R8053:8062 Coq.Reals.RIneq <> Rlt_le_dec thm
R8053:8062 Coq.Reals.RIneq <> Rlt_le_dec thm
R8095:8107 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R8095:8107 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R8095:8107 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R8139:8143 compcert.flocq.Core.Fcore_Raux <> Zceil def
R8152:8158 Coq.Init.Logic <> f_equal thm
R8152:8158 Coq.Init.Logic <> f_equal thm
R8167:8176 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R8167:8176 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R8190:8198 Coq.Reals.Rbasic_fun <> Rabs_left thm
R8190:8198 Coq.Reals.Rbasic_fun <> Rabs_left thm
R8190:8198 Coq.Reals.Rbasic_fun <> Rabs_left thm
R8222:8237 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R8222:8237 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R8261:8266 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R8261:8266 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R8275:8282 Coq.ZArith.Zorder <> Zlt_succ syndef
R8275:8282 Coq.ZArith.Zorder <> Zlt_succ syndef
R8299:8312 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R8299:8312 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R8299:8312 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R8343:8352 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R8343:8352 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R8366:8376 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R8366:8376 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R8366:8376 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R8400:8415 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R8400:8415 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R8439:8444 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R8439:8444 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R8453:8460 Coq.ZArith.Zorder <> Zlt_succ syndef
R8453:8460 Coq.ZArith.Zorder <> Zlt_succ syndef
prf 8477:8499 <> inbetween_float_ZR_sign
R8530:8540 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R8552:8552 compcert.flocq.Calc.Fcalc_round <> x var
R8547:8550 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R8542:8545 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R8594:8599 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8624:8626 Coq.Init.Logic <> :type_scope:x_'='_x not
R8600:8604 compcert.flocq.Core.Fcore_generic_fmt <> round def
R8623:8623 compcert.flocq.Calc.Fcalc_round <> x var
R8616:8621 compcert.flocq.Core.Fcore_Raux <> Ztrunc def
R8611:8614 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R8606:8609 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R8627:8629 compcert.flocq.Core.Fcore_defs <> F2R def
R8632:8636 compcert.flocq.Core.Fcore_defs <> Float constr
R8672:8672 compcert.flocq.Calc.Fcalc_round <> e var
R8644:8652 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R8669:8669 compcert.flocq.Calc.Fcalc_round <> m var
R8655:8662 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R8664:8664 compcert.flocq.Calc.Fcalc_round <> x var
R8638:8641 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R8559:8573 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R8593:8593 compcert.flocq.Calc.Fcalc_round <> l var
R8585:8588 Coq.Reals.Rbasic_fun <> Rabs def
R8590:8590 compcert.flocq.Calc.Fcalc_round <> x var
R8582:8582 compcert.flocq.Calc.Fcalc_round <> e var
R8580:8580 compcert.flocq.Calc.Fcalc_round <> m var
R8575:8578 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R8745:8745 compcert.flocq.Calc.Fcalc_round <> m var
R8689:8714 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R8745:8745 compcert.flocq.Calc.Fcalc_round <> m var
R8689:8714 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R8755:8775 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR_sign thm
R8755:8775 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR_sign thm
def 8845:8851 <> round_N
R8858:8861 Coq.Init.Datatypes <> bool ind
R8877:8877 compcert.flocq.Calc.Fcalc_round <> l var
R8888:8896 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R8901:8905 Coq.Init.Datatypes <> false constr
R8911:8921 compcert.flocq.Calc.Fcalc_bracket <> loc_Inexact constr
R8923:8924 Coq.Init.Datatypes <> Lt constr
R8929:8933 Coq.Init.Datatypes <> false constr
R8939:8949 compcert.flocq.Calc.Fcalc_bracket <> loc_Inexact constr
R8951:8952 Coq.Init.Datatypes <> Eq constr
R8957:8957 compcert.flocq.Calc.Fcalc_round <> p var
R8963:8973 compcert.flocq.Calc.Fcalc_bracket <> loc_Inexact constr
R8975:8976 Coq.Init.Datatypes <> Gt constr
R8981:8984 Coq.Init.Datatypes <> true constr
prf 9002:9016 <> inbetween_int_N
R9064:9069 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9087:9089 Coq.Init.Logic <> :type_scope:x_'='_x not
R9070:9077 compcert.flocq.Core.Fcore_generic_fmt <> Znearest def
R9086:9086 compcert.flocq.Calc.Fcalc_round <> x var
R9079:9084 compcert.flocq.Calc.Fcalc_round <> choice var
R9090:9098 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R9123:9123 compcert.flocq.Calc.Fcalc_round <> m var
R9101:9107 compcert.flocq.Calc.Fcalc_round <> round_N def
R9120:9120 compcert.flocq.Calc.Fcalc_round <> l var
R9110:9115 compcert.flocq.Calc.Fcalc_round <> choice var
R9117:9117 compcert.flocq.Calc.Fcalc_round <> m var
R9045:9057 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R9063:9063 compcert.flocq.Calc.Fcalc_round <> l var
R9061:9061 compcert.flocq.Calc.Fcalc_round <> x var
R9059:9059 compcert.flocq.Calc.Fcalc_round <> m var
R9262:9269 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R9262:9269 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R9262:9269 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R9262:9269 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R9297:9304 compcert.flocq.Core.Fcore_generic_fmt <> Znearest def
R9327:9329 Coq.Init.Logic <> :type_scope:x_'='_x not
R9319:9324 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R9327:9329 Coq.Init.Logic <> :type_scope:x_'='_x not
R9319:9324 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R9340:9349 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R9340:9349 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R9359:9362 Coq.Init.Logic <> conj constr
R9389:9393 Coq.Init.Logic <> proj2 thm
R9365:9370 Coq.Reals.RIneq <> Rlt_le thm
R9377:9381 Coq.Init.Logic <> proj1 thm
R9359:9362 Coq.Init.Logic <> conj constr
R9389:9393 Coq.Init.Logic <> proj2 thm
R9365:9370 Coq.Reals.RIneq <> Rlt_le thm
R9377:9381 Coq.Init.Logic <> proj1 thm
R9409:9423 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R9409:9423 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R9409:9423 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R9409:9423 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R9447:9454 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R9469:9469 Coq.Reals.Rdefinitions <> :R_scope:'/'_x not
R9458:9460 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R9461:9463 compcert.flocq.Core.Fcore_Raux <> Z2R def
R9447:9454 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R9469:9469 Coq.Reals.Rdefinitions <> :R_scope:'/'_x not
R9458:9460 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R9461:9463 compcert.flocq.Core.Fcore_Raux <> Z2R def
R9520:9527 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R9520:9527 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R9520:9527 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R9542:9556 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R9559:9560 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R9561:9563 compcert.flocq.Core.Fcore_Raux <> Z2R def
R9542:9556 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R9559:9560 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R9561:9563 compcert.flocq.Core.Fcore_Raux <> Z2R def
R9542:9556 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R9559:9560 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R9561:9563 compcert.flocq.Core.Fcore_Raux <> Z2R def
R9578:9584 Coq.Init.Logic <> f_equal thm
R9578:9584 Coq.Init.Logic <> f_equal thm
R9594:9596 compcert.flocq.Core.Fcore_Raux <> Z2R def
R9594:9596 compcert.flocq.Core.Fcore_Raux <> Z2R def
R9631:9640 Coq.Reals.RIneq <> Rlt_not_eq thm
R9631:9640 Coq.Reals.RIneq <> Rlt_not_eq thm
prf 9657:9676 <> inbetween_int_N_sign
R9731:9736 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9754:9756 Coq.Init.Logic <> :type_scope:x_'='_x not
R9737:9744 compcert.flocq.Core.Fcore_generic_fmt <> Znearest def
R9753:9753 compcert.flocq.Calc.Fcalc_round <> x var
R9746:9751 compcert.flocq.Calc.Fcalc_round <> choice var
R9757:9765 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R9783:9791 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R9869:9869 compcert.flocq.Calc.Fcalc_round <> m var
R9794:9800 compcert.flocq.Calc.Fcalc_round <> round_N def
R9866:9866 compcert.flocq.Calc.Fcalc_round <> l var
R9806:9813 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R9815:9815 compcert.flocq.Calc.Fcalc_round <> x var
R9856:9861 compcert.flocq.Calc.Fcalc_round <> choice var
R9863:9863 compcert.flocq.Calc.Fcalc_round <> m var
R9824:9827 Coq.Init.Datatypes <> negb def
R9830:9835 compcert.flocq.Calc.Fcalc_round <> choice var
R9838:9839 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R9845:9845 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R9841:9843 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9840:9840 compcert.flocq.Calc.Fcalc_round <> m var
R9768:9775 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R9777:9777 compcert.flocq.Calc.Fcalc_round <> x var
R9705:9717 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R9730:9730 compcert.flocq.Calc.Fcalc_round <> l var
R9722:9725 Coq.Reals.Rbasic_fun <> Rabs def
R9727:9727 compcert.flocq.Calc.Fcalc_round <> x var
R9719:9719 compcert.flocq.Calc.Fcalc_round <> m var
R9953:9956 Coq.Reals.Rbasic_fun <> Rabs def
R9975:9983 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R9975:9983 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R10014:10026 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R10014:10026 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R10014:10026 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R10063:10077 Coq.Reals.RIneq <> Ropp_involutive thm
R10063:10077 Coq.Reals.RIneq <> Ropp_involutive thm
R10063:10077 Coq.Reals.RIneq <> Ropp_involutive thm
R10091:10102 compcert.flocq.Core.Fcore_generic_fmt <> Znearest_opp thm
R10091:10102 compcert.flocq.Core.Fcore_generic_fmt <> Znearest_opp thm
R10091:10102 compcert.flocq.Core.Fcore_generic_fmt <> Znearest_opp thm
R10111:10117 Coq.Init.Logic <> f_equal thm
R10111:10117 Coq.Init.Logic <> f_equal thm
R10176:10183 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R10176:10183 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R10211:10213 Coq.Init.Logic <> :type_scope:x_'='_x not
R10200:10205 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R10208:10208 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R10211:10213 Coq.Init.Logic <> :type_scope:x_'='_x not
R10200:10205 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R10208:10208 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R10224:10233 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R10224:10233 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R10243:10246 Coq.Init.Logic <> conj constr
R10273:10277 Coq.Init.Logic <> proj2 thm
R10249:10254 Coq.Reals.RIneq <> Rlt_le thm
R10261:10265 Coq.Init.Logic <> proj1 thm
R10243:10246 Coq.Init.Logic <> conj constr
R10273:10277 Coq.Init.Logic <> proj2 thm
R10249:10254 Coq.Reals.RIneq <> Rlt_le thm
R10261:10265 Coq.Init.Logic <> proj1 thm
R10292:10299 compcert.flocq.Core.Fcore_generic_fmt <> Znearest def
R10310:10324 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10310:10324 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10310:10324 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10310:10324 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10348:10355 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R10372:10372 Coq.Reals.Rdefinitions <> :R_scope:'/'_x not
R10361:10363 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R10358:10359 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R10364:10366 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10348:10355 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R10372:10372 Coq.Reals.Rdefinitions <> :R_scope:'/'_x not
R10361:10363 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R10358:10359 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R10364:10366 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10423:10430 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R10423:10430 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R10423:10430 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R10445:10459 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R10472:10472 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R10462:10463 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R10464:10466 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10445:10459 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R10472:10472 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R10462:10463 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R10464:10466 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10445:10459 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R10472:10472 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R10462:10463 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R10464:10466 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10484:10490 Coq.Init.Logic <> f_equal thm
R10484:10490 Coq.Init.Logic <> f_equal thm
R10500:10502 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10500:10502 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10537:10546 Coq.Reals.RIneq <> Rlt_not_eq thm
R10537:10546 Coq.Reals.RIneq <> Rlt_not_eq thm
R10567:10572 Coq.Reals.RIneq <> Rge_le thm
R10567:10572 Coq.Reals.RIneq <> Rge_le thm
R10612:10625 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R10612:10625 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R10612:10625 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R10706:10713 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R10706:10713 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R10738:10740 Coq.Init.Logic <> :type_scope:x_'='_x not
R10730:10735 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R10738:10740 Coq.Init.Logic <> :type_scope:x_'='_x not
R10730:10735 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R10751:10760 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R10751:10760 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R10770:10773 Coq.Init.Logic <> conj constr
R10800:10804 Coq.Init.Logic <> proj2 thm
R10776:10781 Coq.Reals.RIneq <> Rlt_le thm
R10788:10792 Coq.Init.Logic <> proj1 thm
R10770:10773 Coq.Init.Logic <> conj constr
R10800:10804 Coq.Init.Logic <> proj2 thm
R10776:10781 Coq.Reals.RIneq <> Rlt_le thm
R10788:10792 Coq.Init.Logic <> proj1 thm
R10819:10826 compcert.flocq.Core.Fcore_generic_fmt <> Znearest def
R10837:10851 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10837:10851 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10837:10851 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10837:10851 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10875:10882 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R10897:10897 Coq.Reals.Rdefinitions <> :R_scope:'/'_x not
R10886:10888 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R10889:10891 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10875:10882 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R10897:10897 Coq.Reals.Rdefinitions <> :R_scope:'/'_x not
R10886:10888 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R10889:10891 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10948:10955 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R10948:10955 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R10948:10955 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R10970:10984 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R10987:10988 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R10989:10991 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10970:10984 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R10987:10988 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R10989:10991 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10970:10984 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R10987:10988 Coq.Reals.Rdefinitions <> :R_scope:'-'_x not
R10989:10991 compcert.flocq.Core.Fcore_Raux <> Z2R def
R11006:11012 Coq.Init.Logic <> f_equal thm
R11006:11012 Coq.Init.Logic <> f_equal thm
R11022:11024 compcert.flocq.Core.Fcore_Raux <> Z2R def
R11022:11024 compcert.flocq.Core.Fcore_Raux <> Z2R def
R11059:11068 Coq.Reals.RIneq <> Rlt_not_eq thm
R11059:11068 Coq.Reals.RIneq <> Rlt_not_eq thm
prf 11140:11155 <> inbetween_int_NE
R11196:11201 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11213:11215 Coq.Init.Logic <> :type_scope:x_'='_x not
R11202:11210 compcert.flocq.Core.Fcore_rnd_ne <> ZnearestE syndef
R11212:11212 compcert.flocq.Calc.Fcalc_round <> x var
R11216:11224 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R11255:11255 compcert.flocq.Calc.Fcalc_round <> m var
R11227:11233 compcert.flocq.Calc.Fcalc_round <> round_N def
R11252:11252 compcert.flocq.Calc.Fcalc_round <> l var
R11236:11239 Coq.Init.Datatypes <> negb def
R11242:11246 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11248:11248 compcert.flocq.Calc.Fcalc_round <> m var
R11177:11189 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R11195:11195 compcert.flocq.Calc.Fcalc_round <> l var
R11193:11193 compcert.flocq.Calc.Fcalc_round <> x var
R11191:11191 compcert.flocq.Calc.Fcalc_round <> m var
R11333:11336 Coq.Init.Datatypes <> negb def
R11339:11343 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11345:11345 compcert.flocq.Calc.Fcalc_round <> x var
R11292:11306 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N thm
R11333:11336 Coq.Init.Datatypes <> negb def
R11339:11343 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11345:11345 compcert.flocq.Calc.Fcalc_round <> x var
R11292:11306 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N thm
prf 11364:11381 <> inbetween_float_NE
R11412:11422 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R11434:11434 compcert.flocq.Calc.Fcalc_round <> x var
R11429:11432 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R11424:11427 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R11469:11474 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11502:11504 Coq.Init.Logic <> :type_scope:x_'='_x not
R11475:11479 compcert.flocq.Core.Fcore_generic_fmt <> round def
R11501:11501 compcert.flocq.Calc.Fcalc_round <> x var
R11491:11499 compcert.flocq.Core.Fcore_rnd_ne <> ZnearestE syndef
R11486:11489 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R11481:11484 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R11505:11507 compcert.flocq.Core.Fcore_defs <> F2R def
R11510:11514 compcert.flocq.Core.Fcore_defs <> Float constr
R11564:11564 compcert.flocq.Calc.Fcalc_round <> e var
R11522:11530 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R11561:11561 compcert.flocq.Calc.Fcalc_round <> m var
R11533:11539 compcert.flocq.Calc.Fcalc_round <> round_N def
R11558:11558 compcert.flocq.Calc.Fcalc_round <> l var
R11542:11545 Coq.Init.Datatypes <> negb def
R11548:11552 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11554:11554 compcert.flocq.Calc.Fcalc_round <> m var
R11516:11519 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R11441:11455 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R11468:11468 compcert.flocq.Calc.Fcalc_round <> l var
R11466:11466 compcert.flocq.Calc.Fcalc_round <> x var
R11464:11464 compcert.flocq.Calc.Fcalc_round <> e var
R11462:11462 compcert.flocq.Calc.Fcalc_round <> m var
R11457:11460 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R11630:11638 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R11669:11669 compcert.flocq.Calc.Fcalc_round <> m var
R11641:11647 compcert.flocq.Calc.Fcalc_round <> round_N def
R11666:11666 compcert.flocq.Calc.Fcalc_round <> l var
R11650:11653 Coq.Init.Datatypes <> negb def
R11656:11660 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11662:11662 compcert.flocq.Calc.Fcalc_round <> m var
R11581:11601 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R11630:11638 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R11669:11669 compcert.flocq.Calc.Fcalc_round <> m var
R11641:11647 compcert.flocq.Calc.Fcalc_round <> round_N def
R11666:11666 compcert.flocq.Calc.Fcalc_round <> l var
R11650:11653 Coq.Init.Datatypes <> negb def
R11656:11660 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11662:11662 compcert.flocq.Calc.Fcalc_round <> m var
R11581:11601 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R11679:11694 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE thm
R11679:11694 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE thm
prf 11711:11731 <> inbetween_int_NE_sign
R11779:11784 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11796:11798 Coq.Init.Logic <> :type_scope:x_'='_x not
R11785:11793 compcert.flocq.Core.Fcore_rnd_ne <> ZnearestE syndef
R11795:11795 compcert.flocq.Calc.Fcalc_round <> x var
R11799:11807 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R11825:11833 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R11864:11864 compcert.flocq.Calc.Fcalc_round <> m var
R11836:11842 compcert.flocq.Calc.Fcalc_round <> round_N def
R11861:11861 compcert.flocq.Calc.Fcalc_round <> l var
R11845:11848 Coq.Init.Datatypes <> negb def
R11851:11855 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11857:11857 compcert.flocq.Calc.Fcalc_round <> m var
R11810:11817 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R11819:11819 compcert.flocq.Calc.Fcalc_round <> x var
R11753:11765 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R11778:11778 compcert.flocq.Calc.Fcalc_round <> l var
R11770:11773 Coq.Reals.Rbasic_fun <> Rabs def
R11775:11775 compcert.flocq.Calc.Fcalc_round <> x var
R11767:11767 compcert.flocq.Calc.Fcalc_round <> m var
R11947:11950 Coq.Init.Datatypes <> negb def
R11953:11957 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11959:11959 compcert.flocq.Calc.Fcalc_round <> x var
R11901:11920 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R11947:11950 Coq.Init.Datatypes <> negb def
R11953:11957 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11959:11959 compcert.flocq.Calc.Fcalc_round <> x var
R11901:11920 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R11947:11950 Coq.Init.Datatypes <> negb def
R11953:11957 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11959:11959 compcert.flocq.Calc.Fcalc_round <> x var
R11901:11920 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R11947:11950 Coq.Init.Datatypes <> negb def
R11953:11957 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11959:11959 compcert.flocq.Calc.Fcalc_round <> x var
R11901:11920 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R11984:11990 Coq.Init.Logic <> f_equal thm
R11984:11990 Coq.Init.Logic <> f_equal thm
R11998:12005 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R11998:12005 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R12016:12024 compcert.flocq.Core.Fcore_Zaux <> Zeven_opp thm
R12027:12036 compcert.flocq.Core.Fcore_Zaux <> Zeven_plus thm
R12016:12024 compcert.flocq.Core.Fcore_Zaux <> Zeven_opp thm
R12016:12024 compcert.flocq.Core.Fcore_Zaux <> Zeven_opp thm
R12027:12036 compcert.flocq.Core.Fcore_Zaux <> Zeven_plus thm
R12027:12036 compcert.flocq.Core.Fcore_Zaux <> Zeven_plus thm
R12049:12053 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R12049:12053 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R12065:12074 Coq.Init.Logic <> refl_equal syndef
R12065:12074 Coq.Init.Logic <> refl_equal syndef
prf 12091:12113 <> inbetween_float_NE_sign
R12144:12154 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R12166:12166 compcert.flocq.Calc.Fcalc_round <> x var
R12161:12164 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R12156:12159 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R12208:12213 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12241:12243 Coq.Init.Logic <> :type_scope:x_'='_x not
R12214:12218 compcert.flocq.Core.Fcore_generic_fmt <> round def
R12240:12240 compcert.flocq.Calc.Fcalc_round <> x var
R12230:12238 compcert.flocq.Core.Fcore_rnd_ne <> ZnearestE syndef
R12225:12228 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R12220:12223 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R12244:12246 compcert.flocq.Core.Fcore_defs <> F2R def
R12249:12253 compcert.flocq.Core.Fcore_defs <> Float constr
R12330:12330 compcert.flocq.Calc.Fcalc_round <> e var
R12261:12269 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R12287:12295 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R12326:12326 compcert.flocq.Calc.Fcalc_round <> m var
R12298:12304 compcert.flocq.Calc.Fcalc_round <> round_N def
R12323:12323 compcert.flocq.Calc.Fcalc_round <> l var
R12307:12310 Coq.Init.Datatypes <> negb def
R12313:12317 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R12319:12319 compcert.flocq.Calc.Fcalc_round <> m var
R12272:12279 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R12281:12281 compcert.flocq.Calc.Fcalc_round <> x var
R12255:12258 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R12173:12187 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R12207:12207 compcert.flocq.Calc.Fcalc_round <> l var
R12199:12202 Coq.Reals.Rbasic_fun <> Rabs def
R12204:12204 compcert.flocq.Calc.Fcalc_round <> x var
R12196:12196 compcert.flocq.Calc.Fcalc_round <> e var
R12194:12194 compcert.flocq.Calc.Fcalc_round <> m var
R12189:12192 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R12403:12411 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R12442:12442 compcert.flocq.Calc.Fcalc_round <> m var
R12414:12420 compcert.flocq.Calc.Fcalc_round <> round_N def
R12439:12439 compcert.flocq.Calc.Fcalc_round <> l var
R12423:12426 Coq.Init.Datatypes <> negb def
R12429:12433 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R12435:12435 compcert.flocq.Calc.Fcalc_round <> m var
R12347:12372 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R12403:12411 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R12442:12442 compcert.flocq.Calc.Fcalc_round <> m var
R12414:12420 compcert.flocq.Calc.Fcalc_round <> round_N def
R12439:12439 compcert.flocq.Calc.Fcalc_round <> l var
R12423:12426 Coq.Init.Datatypes <> negb def
R12429:12433 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R12435:12435 compcert.flocq.Calc.Fcalc_round <> m var
R12347:12372 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R12452:12472 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE_sign thm
R12452:12472 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE_sign thm
prf 12544:12559 <> inbetween_int_NA
R12600:12605 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12617:12619 Coq.Init.Logic <> :type_scope:x_'='_x not
R12606:12614 compcert.flocq.Core.Fcore_generic_fmt <> ZnearestA syndef
R12616:12616 compcert.flocq.Calc.Fcalc_round <> x var
R12620:12628 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R12657:12657 compcert.flocq.Calc.Fcalc_round <> m var
R12631:12637 compcert.flocq.Calc.Fcalc_round <> round_N def
R12654:12654 compcert.flocq.Calc.Fcalc_round <> l var
R12640:12647 Coq.ZArith.Zbool <> Zle_bool syndef
R12651:12651 compcert.flocq.Calc.Fcalc_round <> m var
R12581:12593 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R12599:12599 compcert.flocq.Calc.Fcalc_round <> l var
R12597:12597 compcert.flocq.Calc.Fcalc_round <> x var
R12595:12595 compcert.flocq.Calc.Fcalc_round <> m var
R12735:12742 Coq.ZArith.Zbool <> Zle_bool syndef
R12746:12746 compcert.flocq.Calc.Fcalc_round <> x var
R12694:12708 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N thm
R12735:12742 Coq.ZArith.Zbool <> Zle_bool syndef
R12746:12746 compcert.flocq.Calc.Fcalc_round <> x var
R12694:12708 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N thm
prf 12764:12781 <> inbetween_float_NA
R12812:12822 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R12834:12834 compcert.flocq.Calc.Fcalc_round <> x var
R12829:12832 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R12824:12827 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R12869:12874 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12902:12904 Coq.Init.Logic <> :type_scope:x_'='_x not
R12875:12879 compcert.flocq.Core.Fcore_generic_fmt <> round def
R12901:12901 compcert.flocq.Calc.Fcalc_round <> x var
R12891:12899 compcert.flocq.Core.Fcore_generic_fmt <> ZnearestA syndef
R12886:12889 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R12881:12884 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R12905:12907 compcert.flocq.Core.Fcore_defs <> F2R def
R12910:12914 compcert.flocq.Core.Fcore_defs <> Float constr
R12962:12962 compcert.flocq.Calc.Fcalc_round <> e var
R12922:12930 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R12959:12959 compcert.flocq.Calc.Fcalc_round <> m var
R12933:12939 compcert.flocq.Calc.Fcalc_round <> round_N def
R12956:12956 compcert.flocq.Calc.Fcalc_round <> l var
R12942:12949 Coq.ZArith.Zbool <> Zle_bool syndef
R12953:12953 compcert.flocq.Calc.Fcalc_round <> m var
R12916:12919 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R12841:12855 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R12868:12868 compcert.flocq.Calc.Fcalc_round <> l var
R12866:12866 compcert.flocq.Calc.Fcalc_round <> x var
R12864:12864 compcert.flocq.Calc.Fcalc_round <> e var
R12862:12862 compcert.flocq.Calc.Fcalc_round <> m var
R12857:12860 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R13028:13036 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R13065:13065 compcert.flocq.Calc.Fcalc_round <> m var
R13039:13045 compcert.flocq.Calc.Fcalc_round <> round_N def
R13062:13062 compcert.flocq.Calc.Fcalc_round <> l var
R13048:13055 Coq.ZArith.Zbool <> Zle_bool syndef
R13059:13059 compcert.flocq.Calc.Fcalc_round <> m var
R12979:12999 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R13028:13036 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R13065:13065 compcert.flocq.Calc.Fcalc_round <> m var
R13039:13045 compcert.flocq.Calc.Fcalc_round <> round_N def
R13062:13062 compcert.flocq.Calc.Fcalc_round <> l var
R13048:13055 Coq.ZArith.Zbool <> Zle_bool syndef
R13059:13059 compcert.flocq.Calc.Fcalc_round <> m var
R12979:12999 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R13075:13090 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NA thm
R13075:13090 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NA thm
prf 13107:13127 <> inbetween_int_NA_sign
R13175:13180 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13192:13194 Coq.Init.Logic <> :type_scope:x_'='_x not
R13181:13189 compcert.flocq.Core.Fcore_generic_fmt <> ZnearestA syndef
R13191:13191 compcert.flocq.Calc.Fcalc_round <> x var
R13195:13203 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R13221:13229 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R13248:13248 compcert.flocq.Calc.Fcalc_round <> m var
R13232:13238 compcert.flocq.Calc.Fcalc_round <> round_N def
R13245:13245 compcert.flocq.Calc.Fcalc_round <> l var
R13240:13243 Coq.Init.Datatypes <> true constr
R13206:13213 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R13215:13215 compcert.flocq.Calc.Fcalc_round <> x var
R13149:13161 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R13174:13174 compcert.flocq.Calc.Fcalc_round <> l var
R13166:13169 Coq.Reals.Rbasic_fun <> Rabs def
R13171:13171 compcert.flocq.Calc.Fcalc_round <> x var
R13163:13163 compcert.flocq.Calc.Fcalc_round <> m var
R13322:13329 Coq.ZArith.Zbool <> Zle_bool syndef
R13285:13304 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R13322:13329 Coq.ZArith.Zbool <> Zle_bool syndef
R13285:13304 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R13322:13329 Coq.ZArith.Zbool <> Zle_bool syndef
R13285:13304 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R13322:13329 Coq.ZArith.Zbool <> Zle_bool syndef
R13285:13304 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R13355:13361 Coq.Init.Logic <> f_equal thm
R13355:13361 Coq.Init.Logic <> f_equal thm
R13378:13381 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R13378:13381 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R13395:13405 Coq.ZArith.Zorder <> Zlt_succ_le thm
R13395:13405 Coq.ZArith.Zorder <> Zlt_succ_le thm
R13414:13419 compcert.flocq.Core.Fcore_Raux <> lt_Z2R thm
R13414:13419 compcert.flocq.Core.Fcore_Raux <> lt_Z2R thm
R13447:13450 Coq.Reals.Rbasic_fun <> Rabs def
R13428:13439 Coq.Reals.RIneq <> Rle_lt_trans thm
R13447:13450 Coq.Reals.Rbasic_fun <> Rabs def
R13428:13439 Coq.Reals.RIneq <> Rle_lt_trans thm
R13462:13469 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R13462:13469 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R13480:13484 Coq.Init.Logic <> proj2 thm
R13487:13502 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R13480:13484 Coq.Init.Logic <> proj2 thm
R13487:13502 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R13526:13531 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R13526:13531 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R13540:13547 Coq.ZArith.Zorder <> Zlt_succ syndef
R13540:13547 Coq.ZArith.Zorder <> Zlt_succ syndef
R13558:13570 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_true thm
R13558:13570 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_true thm
R13558:13570 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_true thm
R13596:13609 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_false thm
R13596:13609 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_false thm
R13596:13609 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_false thm
R13596:13609 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_false thm
R13621:13628 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R13621:13628 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
def 13655:13666 <> truncate_aux
R13695:13695 compcert.flocq.Calc.Fcalc_round <> t var
R13682:13682 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13684:13685 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13687:13688 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13690:13690 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13711:13716 Coq.ZArith.Zpow_def <> Zpower syndef
R13723:13723 compcert.flocq.Calc.Fcalc_round <> k var
R13718:13721 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R13730:13730 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13739:13740 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13750:13751 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13779:13779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13731:13734 Coq.ZArith.Zdiv <> Zdiv syndef
R13738:13738 compcert.flocq.Calc.Fcalc_round <> p var
R13743:13745 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R13746:13746 compcert.flocq.Calc.Fcalc_round <> k var
R13752:13763 compcert.flocq.Calc.Fcalc_bracket <> new_location def
R13768:13771 Coq.ZArith.Zdiv <> Zmod syndef
R13775:13775 compcert.flocq.Calc.Fcalc_round <> p var
R13765:13765 compcert.flocq.Calc.Fcalc_round <> p var
prf 13791:13807 <> truncate_aux_comp
R13841:13846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13857:13862 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13887:13889 Coq.Init.Logic <> :type_scope:x_'='_x not
R13863:13874 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R13881:13883 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R13879:13880 compcert.flocq.Calc.Fcalc_round <> k1 var
R13884:13885 compcert.flocq.Calc.Fcalc_round <> k2 var
R13876:13876 compcert.flocq.Calc.Fcalc_round <> t var
R13890:13901 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R13923:13924 compcert.flocq.Calc.Fcalc_round <> k2 var
R13904:13915 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R13919:13920 compcert.flocq.Calc.Fcalc_round <> k1 var
R13917:13917 compcert.flocq.Calc.Fcalc_round <> t var
R13849:13851 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R13852:13853 compcert.flocq.Calc.Fcalc_round <> k2 var
R13833:13835 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R13836:13837 compcert.flocq.Calc.Fcalc_round <> k1 var
R13973:13984 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R13997:14014 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_ex thm
R14016:14019 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R13997:14014 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_ex thm
R14016:14019 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R14053:14080 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R14053:14080 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R14118:14120 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R14123:14125 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14118:14120 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R14123:14125 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14151:14153 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14141:14142 Coq.Numbers.BinNums <> Z0 constr
R14141:14142 Coq.Numbers.BinNums <> Z0 constr
R14151:14153 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14170:14184 Coq.ZArith.Zorder <> Zplus_lt_compat syndef
R14170:14184 Coq.ZArith.Zorder <> Zplus_lt_compat syndef
R14201:14228 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R14201:14228 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R14265:14292 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R14265:14292 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R14323:14333 Coq.ZArith.BinInt <> Zplus_assoc syndef
R14323:14333 Coq.ZArith.BinInt <> Zplus_assoc syndef
R14323:14333 Coq.ZArith.BinInt <> Zplus_assoc syndef
R14352:14373 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_unique thm
R14352:14373 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_unique thm
R14416:14426 Coq.ZArith.BinInt <> Zplus_assoc syndef
R14416:14426 Coq.ZArith.BinInt <> Zplus_assoc syndef
R14416:14426 Coq.ZArith.BinInt <> Zplus_assoc syndef
def 14617:14624 <> truncate
R14651:14651 compcert.flocq.Calc.Fcalc_round <> t var
R14638:14638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14640:14641 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14643:14644 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14646:14646 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14693:14695 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R14668:14671 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R14688:14690 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14674:14680 compcert.flocq.Core.Fcore_digits <> Zdigits def
R14682:14685 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R14709:14716 Coq.ZArith.Zbool <> Zlt_bool syndef
R14720:14720 compcert.flocq.Calc.Fcalc_round <> k var
R14751:14751 compcert.flocq.Calc.Fcalc_round <> t var
R14727:14738 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R14742:14742 compcert.flocq.Calc.Fcalc_round <> k var
R14740:14740 compcert.flocq.Calc.Fcalc_round <> t var
prf 14763:14772 <> truncate_0
R14813:14820 compcert.flocq.Calc.Fcalc_round <> truncate def
R14822:14822 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14824:14825 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14827:14828 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14830:14830 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14826:14826 compcert.flocq.Calc.Fcalc_round <> e var
R14829:14829 compcert.flocq.Calc.Fcalc_round <> l var
R14797:14797 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14800:14801 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14804:14805 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14808:14808 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14841:14843 Coq.Init.Logic <> :type_scope:x_'='_x not
R14844:14845 Coq.Numbers.BinNums <> Z0 constr
R14874:14881 compcert.flocq.Calc.Fcalc_round <> truncate def
R14889:14896 Coq.ZArith.Zbool <> Zlt_bool syndef
R14889:14896 Coq.ZArith.Zbool <> Zlt_bool syndef
R14912:14919 Coq.ZArith.Zdiv <> Zdiv_0_l thm
R14912:14919 Coq.ZArith.Zdiv <> Zdiv_0_l thm
R14928:14937 Coq.Init.Logic <> refl_equal syndef
R14928:14937 Coq.Init.Logic <> refl_equal syndef
prf 14954:14976 <> generic_format_truncate
R15008:15013 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15035:15042 compcert.flocq.Calc.Fcalc_round <> truncate def
R15044:15044 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15046:15047 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15049:15050 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15052:15052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15045:15045 compcert.flocq.Calc.Fcalc_round <> m var
R15048:15048 compcert.flocq.Calc.Fcalc_round <> e var
R15051:15051 compcert.flocq.Calc.Fcalc_round <> l var
R15019:15019 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15022:15023 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15026:15027 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15030:15030 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15059:15064 compcert.flocq.Calc.Fcalc_round <> format syndef
R15067:15069 compcert.flocq.Core.Fcore_defs <> F2R def
R15072:15076 compcert.flocq.Core.Fcore_defs <> Float constr
R15078:15081 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15000:15003 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R15004:15004 compcert.flocq.Calc.Fcalc_round <> m var
R15123:15130 compcert.flocq.Calc.Fcalc_round <> truncate def
R15169:15171 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R15144:15147 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R15164:15166 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15150:15156 compcert.flocq.Core.Fcore_digits <> Zdigits def
R15158:15161 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15169:15171 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R15144:15147 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R15164:15166 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15150:15156 compcert.flocq.Core.Fcore_digits <> Zdigits def
R15158:15161 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15184:15196 compcert.flocq.Core.Fcore_Zaux <> Zlt_bool_spec thm
R15184:15196 compcert.flocq.Core.Fcore_Zaux <> Zlt_bool_spec thm
R15224:15235 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R15244:15261 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R15244:15261 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R15282:15292 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R15303:15321 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R15303:15321 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R15303:15321 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R15347:15364 compcert.flocq.Core.Fcore_digits <> Zdigits_div_Zpower thm
R15347:15364 compcert.flocq.Core.Fcore_digits <> Zdigits_div_Zpower thm
R15347:15364 compcert.flocq.Core.Fcore_digits <> Zdigits_div_Zpower thm
R15347:15364 compcert.flocq.Core.Fcore_digits <> Zdigits_div_Zpower thm
R15409:15412 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15418:15418 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15405:15407 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R15391:15397 compcert.flocq.Core.Fcore_digits <> Zdigits def
R15399:15402 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15414:15416 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15443:15445 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15429:15435 compcert.flocq.Core.Fcore_digits <> Zdigits def
R15437:15440 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15443:15445 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15429:15435 compcert.flocq.Core.Fcore_digits <> Zdigits def
R15437:15440 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15409:15412 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15418:15418 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15405:15407 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R15391:15397 compcert.flocq.Core.Fcore_digits <> Zdigits def
R15399:15402 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15414:15416 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15491:15498 Coq.ZArith.Zorder <> Zle_refl syndef
R15491:15498 Coq.ZArith.Zorder <> Zle_refl syndef
R15518:15528 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R15518:15528 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R15537:15546 Coq.ZArith.Zorder <> Znot_gt_le thm
R15537:15546 Coq.ZArith.Zorder <> Znot_gt_le thm
R15570:15579 Coq.ZArith.Zdiv <> Zdiv_small thm
R15570:15579 Coq.ZArith.Zdiv <> Zdiv_small thm
R15588:15591 Coq.Init.Logic <> conj constr
R15588:15591 Coq.Init.Logic <> conj constr
R15620:15626 Coq.ZArith.Zabs <> Zabs_eq syndef
R15620:15626 Coq.ZArith.Zabs <> Zabs_eq syndef
R15620:15626 Coq.ZArith.Zabs <> Zabs_eq syndef
R15650:15666 compcert.flocq.Core.Fcore_digits <> Zpower_gt_Zdigits thm
R15650:15666 compcert.flocq.Core.Fcore_digits <> Zpower_gt_Zdigits thm
R15675:15685 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R15675:15685 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R15698:15703 Coq.ZArith.Zorder <> Zgt_lt syndef
R15698:15703 Coq.ZArith.Zorder <> Zgt_lt syndef
R15722:15733 Coq.ZArith.Zorder <> Zle_lt_or_eq thm
R15722:15733 Coq.ZArith.Zorder <> Zle_lt_or_eq thm
R15763:15780 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R15763:15780 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R15790:15800 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R15811:15829 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R15811:15829 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R15811:15829 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R15811:15829 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R15845:15854 compcert.flocq.Core.Fcore_Zaux <> Zgt_not_eq thm
R15845:15854 compcert.flocq.Core.Fcore_Zaux <> Zgt_not_eq thm
R15907:15911 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R15907:15911 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R15907:15911 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R15920:15935 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_0 thm
R15920:15935 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_0 thm
prf 15952:15974 <> truncate_correct_format
R16001:16006 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16016:16018 compcert.flocq.Core.Fcore_defs <> F2R def
R16021:16025 compcert.flocq.Core.Fcore_defs <> Float constr
R16034:16034 compcert.flocq.Calc.Fcalc_round <> e var
R16032:16032 compcert.flocq.Calc.Fcalc_round <> m var
R16027:16030 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16068:16073 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16108:16113 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16135:16142 compcert.flocq.Calc.Fcalc_round <> truncate def
R16144:16144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16146:16147 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16149:16150 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16160:16160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16145:16145 compcert.flocq.Calc.Fcalc_round <> m var
R16148:16148 compcert.flocq.Calc.Fcalc_round <> e var
R16151:16159 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R16119:16119 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16122:16123 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16126:16127 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16130:16130 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16193:16196 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16168:16170 Coq.Init.Logic <> :type_scope:x_'='_x not
R16167:16167 compcert.flocq.Calc.Fcalc_round <> x var
R16171:16173 compcert.flocq.Core.Fcore_defs <> F2R def
R16176:16180 compcert.flocq.Core.Fcore_defs <> Float constr
R16182:16185 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16199:16201 Coq.Init.Logic <> :type_scope:x_'='_x not
R16202:16212 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R16224:16224 compcert.flocq.Calc.Fcalc_round <> x var
R16219:16222 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16214:16217 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16076:16079 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R16075:16075 compcert.flocq.Calc.Fcalc_round <> e var
R16080:16083 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16100:16102 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16086:16092 compcert.flocq.Core.Fcore_digits <> Zdigits def
R16099:16099 compcert.flocq.Calc.Fcalc_round <> m var
R16094:16097 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16103:16103 compcert.flocq.Calc.Fcalc_round <> e var
R16042:16055 compcert.flocq.Core.Fcore_generic_fmt <> generic_format def
R16067:16067 compcert.flocq.Calc.Fcalc_round <> x var
R16062:16065 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16057:16060 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15995:15998 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15994:15994 compcert.flocq.Calc.Fcalc_round <> m var
R15999:16000 Coq.Numbers.BinNums <> Z0 constr
R16292:16294 Coq.Init.Logic <> :type_scope:x_'='_x not
R16269:16279 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R16286:16289 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16281:16284 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16295:16298 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16315:16317 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16301:16307 compcert.flocq.Core.Fcore_digits <> Zdigits def
R16309:16312 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16292:16294 Coq.Init.Logic <> :type_scope:x_'='_x not
R16269:16279 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R16286:16289 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16281:16284 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16295:16298 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16315:16317 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16301:16307 compcert.flocq.Core.Fcore_digits <> Zdigits def
R16309:16312 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16330:16340 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R16358:16376 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R16358:16376 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R16358:16376 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R16358:16376 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R16386:16393 compcert.flocq.Calc.Fcalc_round <> truncate def
R16445:16447 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R16422:16432 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R16439:16442 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16434:16437 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16445:16447 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R16422:16432 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R16439:16442 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16434:16437 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16460:16472 compcert.flocq.Core.Fcore_Zaux <> Zlt_bool_spec thm
R16460:16472 compcert.flocq.Core.Fcore_Zaux <> Zlt_bool_spec thm
R16500:16511 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R16562:16565 Coq.Init.Logic <> conj constr
R16569:16569 compcert.flocq.Calc.Fcalc_round <> H var
R16562:16565 Coq.Init.Logic <> conj constr
R16569:16569 compcert.flocq.Calc.Fcalc_round <> H var
R16609:16621 compcert.flocq.Core.Fcore_float_prop <> F2R_eq_compat thm
R16609:16621 compcert.flocq.Core.Fcore_float_prop <> F2R_eq_compat thm
R16633:16647 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R16654:16657 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16649:16652 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16668:16670 compcert.flocq.Core.Fcore_Raux <> Z2R def
R16673:16678 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R16681:16695 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R16702:16705 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16697:16700 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16668:16670 compcert.flocq.Core.Fcore_Raux <> Z2R def
R16673:16678 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R16681:16695 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R16702:16705 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16697:16700 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16633:16647 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R16654:16657 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16649:16652 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16721:16730 compcert.flocq.Core.Fcore_Raux <> Ztrunc_Z2R thm
R16721:16730 compcert.flocq.Core.Fcore_Raux <> Ztrunc_Z2R thm
R16721:16730 compcert.flocq.Core.Fcore_Raux <> Ztrunc_Z2R thm
R16740:16754 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R16781:16783 compcert.flocq.Core.Fcore_defs <> F2R def
R16801:16811 Coq.Reals.Raxioms <> Rmult_assoc prfax
R16817:16825 compcert.flocq.Core.Fcore_Raux <> bpow_plus thm
R16801:16811 Coq.Reals.Raxioms <> Rmult_assoc prfax
R16801:16811 Coq.Reals.Raxioms <> Rmult_assoc prfax
R16817:16825 compcert.flocq.Core.Fcore_Raux <> bpow_plus thm
R16817:16825 compcert.flocq.Core.Fcore_Raux <> bpow_plus thm
R16844:16846 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16847:16849 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R16855:16855 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R16851:16853 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16844:16846 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16847:16849 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R16855:16855 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R16851:16853 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16921:16930 compcert.flocq.Core.Fcore_Raux <> Zfloor_div thm
R16921:16930 compcert.flocq.Core.Fcore_Raux <> Zfloor_div thm
R16955:16969 compcert.flocq.Core.Fcore_Zaux <> Zpower_pos_gt_0 thm
R16971:16974 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16980:16994 Coq.ZArith.Zbool <> Zle_bool_imp_le thm
R17001:17010 compcert.flocq.Core.Fcore_Zaux <> radix_prop proj
R17012:17015 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16955:16969 compcert.flocq.Core.Fcore_Zaux <> Zpower_pos_gt_0 thm
R16971:16974 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16980:16994 Coq.ZArith.Zbool <> Zle_bool_imp_le thm
R17001:17010 compcert.flocq.Core.Fcore_Zaux <> radix_prop proj
R17012:17015 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17035:17057 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_generic thm
R17035:17057 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_generic thm
R17035:17057 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_generic thm
R17087:17096 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R17087:17096 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R17087:17096 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R17118:17127 Coq.Init.Logic <> refl_equal syndef
R17118:17127 Coq.Init.Logic <> refl_equal syndef
prf 17167:17190 <> truncate_correct_partial
R17223:17228 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17257:17262 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17297:17302 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17324:17331 compcert.flocq.Calc.Fcalc_round <> truncate def
R17333:17333 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17335:17336 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17338:17339 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17341:17341 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17334:17334 compcert.flocq.Calc.Fcalc_round <> m var
R17337:17337 compcert.flocq.Calc.Fcalc_round <> e var
R17340:17340 compcert.flocq.Calc.Fcalc_round <> l var
R17308:17308 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17311:17312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17315:17316 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17319:17319 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17379:17382 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17348:17362 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R17375:17375 compcert.flocq.Calc.Fcalc_round <> x var
R17364:17367 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17385:17387 Coq.Init.Logic <> :type_scope:x_'='_x not
R17388:17398 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R17410:17410 compcert.flocq.Calc.Fcalc_round <> x var
R17405:17408 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R17400:17403 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17265:17268 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R17264:17264 compcert.flocq.Calc.Fcalc_round <> e var
R17269:17272 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R17289:17291 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17275:17281 compcert.flocq.Core.Fcore_digits <> Zdigits def
R17288:17288 compcert.flocq.Calc.Fcalc_round <> m var
R17283:17286 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17292:17292 compcert.flocq.Calc.Fcalc_round <> e var
R17229:17243 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R17256:17256 compcert.flocq.Calc.Fcalc_round <> l var
R17254:17254 compcert.flocq.Calc.Fcalc_round <> x var
R17252:17252 compcert.flocq.Calc.Fcalc_round <> e var
R17250:17250 compcert.flocq.Calc.Fcalc_round <> m var
R17245:17248 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17216:17218 Coq.Reals.Rdefinitions <> :R_scope:x_'<'_x not
R17219:17219 compcert.flocq.Calc.Fcalc_round <> x var
R17452:17459 compcert.flocq.Calc.Fcalc_round <> truncate def
R17498:17500 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R17473:17476 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R17493:17495 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17479:17485 compcert.flocq.Core.Fcore_digits <> Zdigits def
R17487:17490 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17498:17500 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R17473:17476 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R17493:17495 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17479:17485 compcert.flocq.Core.Fcore_digits <> Zdigits def
R17487:17490 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17518:17523 Coq.ZArith.Zpow_def <> Zpower syndef
R17525:17528 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17518:17523 Coq.ZArith.Zpow_def <> Zpower syndef
R17525:17528 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17574:17577 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x_'<'_x not
R17579:17581 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x_'<'_x not
R17554:17556 compcert.flocq.Core.Fcore_defs <> F2R def
R17559:17563 compcert.flocq.Core.Fcore_defs <> Float constr
R17565:17568 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17582:17584 compcert.flocq.Core.Fcore_defs <> F2R def
R17587:17591 compcert.flocq.Core.Fcore_defs <> Float constr
R17600:17602 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17593:17596 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17574:17577 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x_'<'_x not
R17579:17581 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x_'<'_x not
R17554:17556 compcert.flocq.Core.Fcore_defs <> F2R def
R17559:17563 compcert.flocq.Core.Fcore_defs <> Float constr
R17565:17568 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17582:17584 compcert.flocq.Core.Fcore_defs <> F2R def
R17587:17591 compcert.flocq.Core.Fcore_defs <> Float constr
R17600:17602 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17593:17596 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17620:17641 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_bounds thm
R17620:17641 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_bounds thm
R17679:17682 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R17679:17682 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R17696:17698 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R17700:17702 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17696:17698 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R17700:17702 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17738:17741 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17722:17731 compcert.flocq.Core.Fcore_float_prop <> F2R_lt_reg thm
R17738:17741 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17722:17731 compcert.flocq.Core.Fcore_float_prop <> F2R_lt_reg thm
R17754:17758 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R17754:17758 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R17754:17758 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R17767:17775 Coq.Reals.Raxioms <> Rlt_trans prfax
R17767:17775 Coq.Reals.Raxioms <> Rlt_trans prfax
R17823:17825 Coq.Init.Logic <> :type_scope:x_'='_x not
R17819:17821 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17826:17836 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R17843:17846 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R17838:17841 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17823:17825 Coq.Init.Logic <> :type_scope:x_'='_x not
R17819:17821 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17826:17836 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R17843:17846 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R17838:17841 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17870:17880 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R17893:17904 Coq.ZArith.Zorder <> Zle_lt_or_eq thm
R17893:17904 Coq.ZArith.Zorder <> Zle_lt_or_eq thm
R17951:17968 compcert.flocq.Core.Fcore_float_prop <> ln_beta_F2R_bounds thm
R17951:17968 compcert.flocq.Core.Fcore_float_prop <> ln_beta_F2R_bounds thm
R17951:17968 compcert.flocq.Core.Fcore_float_prop <> ln_beta_F2R_bounds thm
R18010:18013 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R18014:18015 Coq.Numbers.BinNums <> Z0 constr
R18010:18013 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R18014:18015 Coq.Numbers.BinNums <> Z0 constr
R18025:18034 Coq.Init.Logic <> sym_not_eq syndef
R18025:18034 Coq.Init.Logic <> sym_not_eq syndef
R18047:18056 Coq.ZArith.Zorder <> Zlt_not_eq syndef
R18047:18056 Coq.ZArith.Zorder <> Zlt_not_eq syndef
R18067:18077 compcert.flocq.Core.Fcore_float_prop <> ln_beta_F2R thm
R18067:18077 compcert.flocq.Core.Fcore_float_prop <> ln_beta_F2R thm
R18067:18077 compcert.flocq.Core.Fcore_float_prop <> ln_beta_F2R thm
R18105:18119 compcert.flocq.Calc.Fcalc_digits <> Zdigits_ln_beta thm
R18105:18119 compcert.flocq.Calc.Fcalc_digits <> Zdigits_ln_beta thm
R18105:18119 compcert.flocq.Calc.Fcalc_digits <> Zdigits_ln_beta thm
R18199:18205 compcert.flocq.Core.Fcore_Raux <> ln_beta def
R18207:18210 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R18199:18205 compcert.flocq.Core.Fcore_Raux <> ln_beta def
R18207:18210 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R18253:18262 Coq.Reals.RIneq <> Rgt_not_eq thm
R18253:18262 Coq.Reals.RIneq <> Rgt_not_eq thm
R18328:18333 Coq.Init.Logic <> sym_eq syndef
R18328:18333 Coq.Init.Logic <> sym_eq syndef
R18342:18350 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.valid_exp var
R18342:18350 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.valid_exp var
R18369:18377 Coq.ZArith.Zorder <> Zle_trans syndef
R18369:18377 Coq.ZArith.Zorder <> Zle_trans syndef
R18394:18405 compcert.flocq.Core.Fcore_Raux <> bpow_lt_bpow thm
R18394:18405 compcert.flocq.Core.Fcore_Raux <> bpow_lt_bpow thm
R18438:18442 Coq.Init.Logic <> proj1 thm
R18414:18425 Coq.Reals.RIneq <> Rle_lt_trans thm
R18438:18442 Coq.Init.Logic <> proj1 thm
R18414:18425 Coq.Reals.RIneq <> Rle_lt_trans thm
R18458:18468 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R18458:18468 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R18458:18468 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R18458:18468 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R18482:18489 compcert.flocq.Core.Fcore_float_prop <> F2R_bpow thm
R18482:18489 compcert.flocq.Core.Fcore_float_prop <> F2R_bpow thm
R18482:18489 compcert.flocq.Core.Fcore_float_prop <> F2R_bpow thm
R18536:18541 Coq.Reals.RIneq <> Rlt_le thm
R18536:18541 Coq.Reals.RIneq <> Rlt_le thm
R18574:18582 Coq.ZArith.Zbool <> Zlt_cases thm
R18574:18582 Coq.ZArith.Zbool <> Zlt_cases thm
R18596:18603 Coq.ZArith.Zbool <> Zlt_bool syndef
R18596:18603 Coq.ZArith.Zbool <> Zlt_bool syndef
R18657:18684 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R18657:18684 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
prf 18760:18775 <> truncate_correct
R18809:18814 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18843:18848 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18900:18905 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18927:18934 compcert.flocq.Calc.Fcalc_round <> truncate def
R18936:18936 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18938:18939 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18941:18942 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18944:18944 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18937:18937 compcert.flocq.Calc.Fcalc_round <> m var
R18940:18940 compcert.flocq.Calc.Fcalc_round <> e var
R18943:18943 compcert.flocq.Calc.Fcalc_round <> l var
R18911:18911 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18914:18915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18918:18919 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18922:18922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18982:18988 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19049:19049 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18951:18965 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R18978:18978 compcert.flocq.Calc.Fcalc_round <> x var
R18967:18970 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19017:19021 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19048:19048 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18991:18993 Coq.Init.Logic <> :type_scope:x_'='_x not
R18994:19004 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R19016:19016 compcert.flocq.Calc.Fcalc_round <> x var
R19011:19014 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R19006:19009 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19036:19039 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19024:19026 Coq.Init.Logic <> :type_scope:x_'='_x not
R19027:19035 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R19040:19045 compcert.flocq.Calc.Fcalc_round <> format syndef
R19047:19047 compcert.flocq.Calc.Fcalc_round <> x var
R18883:18886 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18851:18854 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18850:18850 compcert.flocq.Calc.Fcalc_round <> e var
R18855:18858 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R18875:18877 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18861:18867 compcert.flocq.Core.Fcore_digits <> Zdigits def
R18874:18874 compcert.flocq.Calc.Fcalc_round <> m var
R18869:18872 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R18878:18878 compcert.flocq.Calc.Fcalc_round <> e var
R18888:18890 Coq.Init.Logic <> :type_scope:x_'='_x not
R18887:18887 compcert.flocq.Calc.Fcalc_round <> l var
R18891:18899 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R18815:18829 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R18842:18842 compcert.flocq.Calc.Fcalc_round <> l var
R18840:18840 compcert.flocq.Calc.Fcalc_round <> x var
R18838:18838 compcert.flocq.Calc.Fcalc_round <> e var
R18836:18836 compcert.flocq.Calc.Fcalc_round <> m var
R18831:18834 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R18801:18804 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R18805:18805 compcert.flocq.Calc.Fcalc_round <> x var
R19111:19119 Coq.ZArith.Zorder <> Zle_or_lt syndef
R19124:19127 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R19144:19146 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19130:19136 compcert.flocq.Core.Fcore_digits <> Zdigits def
R19138:19141 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19111:19119 Coq.ZArith.Zorder <> Zle_or_lt syndef
R19124:19127 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R19144:19146 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19130:19136 compcert.flocq.Core.Fcore_digits <> Zdigits def
R19138:19141 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19198:19221 compcert.flocq.Calc.Fcalc_round <> truncate_correct_partial thm
R19198:19221 compcert.flocq.Calc.Fcalc_round <> truncate_correct_partial thm
R19252:19259 compcert.flocq.Calc.Fcalc_round <> truncate def
R19261:19261 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19263:19264 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19266:19267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19269:19269 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19252:19259 compcert.flocq.Calc.Fcalc_round <> truncate def
R19261:19261 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19263:19264 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19266:19267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19269:19269 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19405:19414 Coq.ZArith.Zorder <> Zlt_irrefl syndef
R19405:19414 Coq.ZArith.Zorder <> Zlt_irrefl syndef
R19430:19441 Coq.ZArith.Zorder <> Zle_lt_trans syndef
R19430:19441 Coq.ZArith.Zorder <> Zle_lt_trans syndef
R19489:19496 compcert.flocq.Calc.Fcalc_round <> truncate def
R19511:19519 Coq.ZArith.Zbool <> Zlt_cases thm
R19549:19551 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R19524:19527 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R19544:19546 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19530:19536 compcert.flocq.Core.Fcore_digits <> Zdigits def
R19538:19541 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19511:19519 Coq.ZArith.Zbool <> Zlt_cases thm
R19549:19551 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R19524:19527 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R19544:19546 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19530:19536 compcert.flocq.Core.Fcore_digits <> Zdigits def
R19538:19541 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19562:19569 Coq.ZArith.Zbool <> Zlt_bool syndef
R19562:19569 Coq.ZArith.Zbool <> Zlt_bool syndef
R19588:19596 Coq.Init.Logic <> False_ind scheme
R19588:19596 Coq.Init.Logic <> False_ind scheme
R19653:19662 Coq.Init.Logic <> refl_equal syndef
R19653:19662 Coq.Init.Logic <> refl_equal syndef
R19702:19719 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R19702:19719 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R19740:19750 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R19761:19779 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R19761:19779 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R19761:19779 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R19807:19817 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R19807:19817 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R19845:19847 Coq.Init.Logic <> :type_scope:x_'='_x not
R19848:19849 Coq.Numbers.BinNums <> Z0 constr
R19845:19847 Coq.Init.Logic <> :type_scope:x_'='_x not
R19848:19849 Coq.Numbers.BinNums <> Z0 constr
R19859:19862 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R19864:19866 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R19868:19870 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19859:19862 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R19864:19866 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R19868:19870 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19918:19921 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x_'<'_x not
R19923:19925 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x_'<'_x not
R19898:19900 compcert.flocq.Core.Fcore_defs <> F2R def
R19903:19907 compcert.flocq.Core.Fcore_defs <> Float constr
R19909:19912 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19926:19928 compcert.flocq.Core.Fcore_defs <> F2R def
R19931:19935 compcert.flocq.Core.Fcore_defs <> Float constr
R19944:19946 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19937:19940 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19918:19921 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x_'<'_x not
R19923:19925 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x_'<'_x not
R19898:19900 compcert.flocq.Core.Fcore_defs <> F2R def
R19903:19907 compcert.flocq.Core.Fcore_defs <> Float constr
R19909:19912 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19926:19928 compcert.flocq.Core.Fcore_defs <> F2R def
R19931:19935 compcert.flocq.Core.Fcore_defs <> Float constr
R19944:19946 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19937:19940 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19964:19985 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_bounds thm
R19964:19985 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_bounds thm
R20062:20066 Coq.Init.Logic <> proj1 thm
R20038:20049 compcert.flocq.Core.Fcore_float_prop <> F2R_le_0_reg thm
R20062:20066 Coq.Init.Logic <> proj1 thm
R20038:20049 compcert.flocq.Core.Fcore_float_prop <> F2R_le_0_reg thm
R20104:20108 Coq.Init.Logic <> proj2 thm
R20080:20091 compcert.flocq.Core.Fcore_float_prop <> F2R_gt_0_reg thm
R20104:20108 Coq.Init.Logic <> proj2 thm
R20080:20091 compcert.flocq.Core.Fcore_float_prop <> F2R_gt_0_reg thm
R20192:20198 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20201:20202 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20230:20232 Coq.Init.Logic <> :type_scope:x_'='_x not
R20203:20210 compcert.flocq.Calc.Fcalc_round <> truncate def
R20212:20212 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20215:20216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20218:20219 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20229:20229 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20213:20214 Coq.Numbers.BinNums <> Z0 constr
R20220:20228 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R20233:20233 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20236:20237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20240:20241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20251:20251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20234:20235 Coq.Numbers.BinNums <> Z0 constr
R20238:20239 compcert.flocq.Calc.Fcalc_round <> e' var
R20242:20250 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R20192:20198 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20201:20202 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20230:20232 Coq.Init.Logic <> :type_scope:x_'='_x not
R20203:20210 compcert.flocq.Calc.Fcalc_round <> truncate def
R20212:20212 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20215:20216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20218:20219 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20229:20229 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20213:20214 Coq.Numbers.BinNums <> Z0 constr
R20220:20228 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R20233:20233 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20236:20237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20240:20241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20251:20251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20234:20235 Coq.Numbers.BinNums <> Z0 constr
R20238:20239 compcert.flocq.Calc.Fcalc_round <> e' var
R20242:20250 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R20262:20269 compcert.flocq.Calc.Fcalc_round <> truncate def
R20272:20283 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R20291:20298 Coq.ZArith.Zbool <> Zlt_bool syndef
R20291:20298 Coq.ZArith.Zbool <> Zlt_bool syndef
R20309:20316 Coq.ZArith.Zdiv <> Zdiv_0_l thm
R20319:20326 Coq.ZArith.Zdiv <> Zmod_0_l thm
R20309:20316 Coq.ZArith.Zdiv <> Zdiv_0_l thm
R20309:20316 Coq.ZArith.Zdiv <> Zdiv_0_l thm
R20319:20326 Coq.ZArith.Zdiv <> Zmod_0_l thm
R20319:20326 Coq.ZArith.Zdiv <> Zmod_0_l thm
R20344:20350 Coq.Init.Logic <> f_equal thm
R20344:20350 Coq.Init.Logic <> f_equal thm
R20360:20371 compcert.flocq.Calc.Fcalc_bracket <> new_location def
R20383:20387 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R20383:20387 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R20463:20468 Coq.Init.Logic <> sym_eq syndef
R20463:20468 Coq.Init.Logic <> sym_eq syndef
R20477:20481 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R20477:20481 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R20511:20526 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_0 thm
R20511:20526 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_0 thm
R20565:20569 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R20565:20569 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R20565:20569 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R20582:20591 Coq.Reals.RIneq <> Rlt_irrefl thm
R20582:20591 Coq.Reals.RIneq <> Rlt_irrefl thm
sec 20622:20630 Fcalc_round.Fcalc_round_fexp round_dir
var 20643:20645 Fcalc_round.Fcalc_round_fexp.round_dir rnd
R20650:20653 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20654:20654 Coq.Numbers.BinNums <> Z ind
R20649:20649 Coq.Reals.Rdefinitions <> R defax
R20679:20687 compcert.flocq.Core.Fcore_generic_fmt <> Valid_rnd class
R20689:20691 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.rnd var
var 20706:20711 Fcalc_round.Fcalc_round_fexp.round_dir choice
R20716:20719 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20728:20731 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20732:20732 Coq.Numbers.BinNums <> Z ind
R20720:20727 compcert.flocq.Calc.Fcalc_bracket <> location ind
R20715:20715 Coq.Numbers.BinNums <> Z ind
var 20746:20764 Fcalc_round.Fcalc_round_fexp.round_dir inbetween_int_valid
R20805:20810 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20816:20818 Coq.Init.Logic <> :type_scope:x_'='_x not
R20811:20813 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.rnd var
R20815:20815 compcert.flocq.Calc.Fcalc_round <> x var
R20819:20824 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.choice var
R20828:20828 compcert.flocq.Calc.Fcalc_round <> l var
R20826:20826 compcert.flocq.Calc.Fcalc_round <> m var
R20786:20798 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R20804:20804 compcert.flocq.Calc.Fcalc_round <> l var
R20802:20802 compcert.flocq.Calc.Fcalc_round <> x var
R20800:20800 compcert.flocq.Calc.Fcalc_round <> m var
prf 20840:20856 <> round_any_correct
R20908:20913 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20914:20914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20973:20979 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21001:21003 Coq.Init.Logic <> :type_scope:x_'='_x not
R20980:20984 compcert.flocq.Core.Fcore_generic_fmt <> round def
R21000:21000 compcert.flocq.Calc.Fcalc_round <> x var
R20996:20998 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.rnd var
R20991:20994 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R20986:20989 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R21004:21006 compcert.flocq.Core.Fcore_defs <> F2R def
R21009:21013 compcert.flocq.Core.Fcore_defs <> Float constr
R21033:21033 compcert.flocq.Calc.Fcalc_round <> e var
R21021:21026 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.choice var
R21030:21030 compcert.flocq.Calc.Fcalc_round <> l var
R21028:21028 compcert.flocq.Calc.Fcalc_round <> m var
R21015:21018 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R20942:20946 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R20972:20972 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R20916:20918 Coq.Init.Logic <> :type_scope:x_'='_x not
R20915:20915 compcert.flocq.Calc.Fcalc_round <> e var
R20919:20929 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R20941:20941 compcert.flocq.Calc.Fcalc_round <> x var
R20936:20939 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R20931:20934 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R20960:20963 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R20948:20950 Coq.Init.Logic <> :type_scope:x_'='_x not
R20947:20947 compcert.flocq.Calc.Fcalc_round <> l var
R20951:20959 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R20964:20969 compcert.flocq.Calc.Fcalc_round <> format syndef
R20971:20971 compcert.flocq.Calc.Fcalc_round <> x var
R20880:20894 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R20907:20907 compcert.flocq.Calc.Fcalc_round <> l var
R20905:20905 compcert.flocq.Calc.Fcalc_round <> x var
R20903:20903 compcert.flocq.Calc.Fcalc_round <> e var
R20901:20901 compcert.flocq.Calc.Fcalc_round <> m var
R20896:20899 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R21142:21162 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R21142:21162 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R21187:21205 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.inbetween_int_valid var
R21187:21205 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.inbetween_int_valid var
R21269:21274 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.choice var
R21278:21286 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R21269:21274 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.choice var
R21278:21286 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R21317:21329 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R21317:21329 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R21346:21353 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R21355:21357 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.rnd var
R21346:21353 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R21355:21357 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.rnd var
R21346:21353 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R21355:21357 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.rnd var
R21374:21392 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.inbetween_int_valid var
R21374:21392 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.inbetween_int_valid var
prf 21492:21514 <> round_trunc_any_correct
R21548:21553 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21582:21587 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21639:21644 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21666:21668 Coq.Init.Logic <> :type_scope:x_'='_x not
R21645:21649 compcert.flocq.Core.Fcore_generic_fmt <> round def
R21665:21665 compcert.flocq.Calc.Fcalc_round <> x var
R21661:21663 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.rnd var
R21656:21659 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R21651:21654 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R21690:21697 compcert.flocq.Calc.Fcalc_round <> truncate def
R21699:21699 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21701:21702 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21704:21705 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21707:21707 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21700:21700 compcert.flocq.Calc.Fcalc_round <> m var
R21703:21703 compcert.flocq.Calc.Fcalc_round <> e var
R21706:21706 compcert.flocq.Calc.Fcalc_round <> l var
R21674:21674 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21677:21678 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21681:21682 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21685:21685 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21712:21714 compcert.flocq.Core.Fcore_defs <> F2R def
R21717:21721 compcert.flocq.Core.Fcore_defs <> Float constr
R21729:21734 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.choice var
R21723:21726 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R21622:21625 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21590:21593 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R21589:21589 compcert.flocq.Calc.Fcalc_round <> e var
R21594:21597 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R21614:21616 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21600:21606 compcert.flocq.Core.Fcore_digits <> Zdigits def
R21613:21613 compcert.flocq.Calc.Fcalc_round <> m var
R21608:21611 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R21617:21617 compcert.flocq.Calc.Fcalc_round <> e var
R21627:21629 Coq.Init.Logic <> :type_scope:x_'='_x not
R21626:21626 compcert.flocq.Calc.Fcalc_round <> l var
R21630:21638 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R21554:21568 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R21581:21581 compcert.flocq.Calc.Fcalc_round <> l var
R21579:21579 compcert.flocq.Calc.Fcalc_round <> x var
R21577:21577 compcert.flocq.Calc.Fcalc_round <> e var
R21575:21575 compcert.flocq.Calc.Fcalc_round <> m var
R21570:21573 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R21540:21543 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R21544:21544 compcert.flocq.Calc.Fcalc_round <> x var
R21792:21807 compcert.flocq.Calc.Fcalc_round <> truncate_correct thm
R21792:21807 compcert.flocq.Calc.Fcalc_round <> truncate_correct thm
R21838:21845 compcert.flocq.Calc.Fcalc_round <> truncate def
R21847:21847 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21849:21850 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21852:21853 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21855:21855 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21838:21845 compcert.flocq.Calc.Fcalc_round <> truncate def
R21847:21847 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21849:21850 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21852:21853 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21855:21855 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21904:21920 compcert.flocq.Calc.Fcalc_round <> round_any_correct thm
R21904:21920 compcert.flocq.Calc.Fcalc_round <> round_any_correct thm
R21933:21941 compcert.flocq.Calc.Fcalc_round Fcalc_round.Fcalc_round_fexp.round_dir <> sec
sec 21953:21966 Fcalc_round.Fcalc_round_fexp round_dir_sign
var 21979:21981 Fcalc_round.Fcalc_round_fexp.round_dir_sign rnd
R21986:21989 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21990:21990 Coq.Numbers.BinNums <> Z ind
R21985:21985 Coq.Reals.Rdefinitions <> R defax
R22015:22023 compcert.flocq.Core.Fcore_generic_fmt <> Valid_rnd class
R22025:22027 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
var 22042:22047 Fcalc_round.Fcalc_round_fexp.round_dir_sign choice
R22055:22058 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22060:22063 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22072:22075 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22076:22076 Coq.Numbers.BinNums <> Z ind
R22064:22071 compcert.flocq.Calc.Fcalc_bracket <> location ind
R22059:22059 Coq.Numbers.BinNums <> Z ind
R22051:22054 Coq.Init.Datatypes <> bool ind
var 22090:22108 Fcalc_round.Fcalc_round_fexp.round_dir_sign inbetween_int_valid
R22156:22161 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22167:22169 Coq.Init.Logic <> :type_scope:x_'='_x not
R22162:22164 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R22166:22166 compcert.flocq.Calc.Fcalc_round <> x var
R22170:22178 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R22196:22201 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R22220:22220 compcert.flocq.Calc.Fcalc_round <> l var
R22218:22218 compcert.flocq.Calc.Fcalc_round <> m var
R22204:22211 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R22213:22213 compcert.flocq.Calc.Fcalc_round <> x var
R22181:22188 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R22190:22190 compcert.flocq.Calc.Fcalc_round <> x var
R22130:22142 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R22155:22155 compcert.flocq.Calc.Fcalc_round <> l var
R22147:22150 Coq.Reals.Rbasic_fun <> Rabs def
R22152:22152 compcert.flocq.Calc.Fcalc_round <> x var
R22144:22144 compcert.flocq.Calc.Fcalc_round <> m var
prf 22233:22254 <> round_sign_any_correct
R22313:22318 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22319:22319 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22378:22384 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22406:22408 Coq.Init.Logic <> :type_scope:x_'='_x not
R22385:22389 compcert.flocq.Core.Fcore_generic_fmt <> round def
R22405:22405 compcert.flocq.Calc.Fcalc_round <> x var
R22401:22403 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R22396:22399 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R22391:22394 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R22409:22411 compcert.flocq.Core.Fcore_defs <> F2R def
R22414:22418 compcert.flocq.Core.Fcore_defs <> Float constr
R22480:22480 compcert.flocq.Calc.Fcalc_round <> e var
R22426:22434 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R22452:22457 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R22476:22476 compcert.flocq.Calc.Fcalc_round <> l var
R22474:22474 compcert.flocq.Calc.Fcalc_round <> m var
R22460:22467 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R22469:22469 compcert.flocq.Calc.Fcalc_round <> x var
R22437:22444 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R22446:22446 compcert.flocq.Calc.Fcalc_round <> x var
R22420:22423 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R22347:22351 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22377:22377 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22321:22323 Coq.Init.Logic <> :type_scope:x_'='_x not
R22320:22320 compcert.flocq.Calc.Fcalc_round <> e var
R22324:22334 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R22346:22346 compcert.flocq.Calc.Fcalc_round <> x var
R22341:22344 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R22336:22339 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R22365:22368 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22353:22355 Coq.Init.Logic <> :type_scope:x_'='_x not
R22352:22352 compcert.flocq.Calc.Fcalc_round <> l var
R22356:22364 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R22369:22374 compcert.flocq.Calc.Fcalc_round <> format syndef
R22376:22376 compcert.flocq.Calc.Fcalc_round <> x var
R22278:22292 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R22312:22312 compcert.flocq.Calc.Fcalc_round <> l var
R22304:22307 Coq.Reals.Rbasic_fun <> Rabs def
R22309:22309 compcert.flocq.Calc.Fcalc_round <> x var
R22301:22301 compcert.flocq.Calc.Fcalc_round <> e var
R22299:22299 compcert.flocq.Calc.Fcalc_round <> m var
R22294:22297 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R22589:22614 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R22589:22614 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R22639:22657 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.inbetween_int_valid var
R22639:22657 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.inbetween_int_valid var
R22721:22726 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R22745:22753 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R22729:22736 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R22721:22726 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R22745:22753 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R22729:22736 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R22777:22780 Coq.Reals.Rbasic_fun <> Rabs def
R22798:22806 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R22798:22806 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R22831:22843 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R22831:22843 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R22831:22843 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R22876:22883 compcert.flocq.Core.Fcore_float_prop <> F2R_Zopp thm
R22876:22883 compcert.flocq.Core.Fcore_float_prop <> F2R_Zopp thm
R22876:22883 compcert.flocq.Core.Fcore_float_prop <> F2R_Zopp thm
R22900:22914 Coq.Reals.RIneq <> Ropp_involutive thm
R22900:22914 Coq.Reals.RIneq <> Ropp_involutive thm
R22900:22914 Coq.Reals.RIneq <> Ropp_involutive thm
R22923:22935 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R22923:22935 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R22948:22961 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R22948:22961 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R22948:22961 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R22948:22961 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R22995:23007 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R22995:23007 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R23020:23025 Coq.Reals.RIneq <> Rge_le thm
R23020:23025 Coq.Reals.RIneq <> Rge_le thm
R23044:23056 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R23044:23056 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R23089:23096 Coq.ZArith.BinInt <> Zopp_inj syndef
R23089:23096 Coq.ZArith.BinInt <> Zopp_inj syndef
R23110:23112 Coq.Init.Logic <> :type_scope:x_'='_x not
R23107:23108 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R23113:23121 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R23129:23134 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R23143:23151 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R23136:23139 Coq.Init.Datatypes <> true constr
R23123:23126 Coq.Init.Datatypes <> true constr
R23110:23112 Coq.Init.Logic <> :type_scope:x_'='_x not
R23107:23108 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R23113:23121 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R23129:23134 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R23143:23151 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R23136:23139 Coq.Init.Datatypes <> true constr
R23123:23126 Coq.Init.Datatypes <> true constr
R23170:23177 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R23184:23184 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R23179:23181 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R23170:23177 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R23184:23184 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R23179:23181 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R23170:23177 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R23184:23184 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R23179:23181 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R23211:23213 Coq.Reals.Rdefinitions <> :R_scope:x_'<'_x not
R23203:23205 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23208:23208 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R23211:23213 Coq.Reals.Rdefinitions <> :R_scope:x_'<'_x not
R23203:23205 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23208:23208 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R23228:23234 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R23228:23234 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R23228:23234 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R23243:23264 Coq.Reals.RIneq <> Ropp_lt_gt_0_contravar thm
R23243:23264 Coq.Reals.RIneq <> Ropp_lt_gt_0_contravar thm
R23274:23279 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R23274:23279 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R23309:23312 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R23291:23302 compcert.flocq.Core.Fcore_float_prop <> F2R_gt_0_reg thm
R23309:23312 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R23291:23302 compcert.flocq.Core.Fcore_float_prop <> F2R_gt_0_reg thm
R23337:23347 Coq.Reals.Rbasic_fun <> Rabs_pos_lt thm
R23337:23347 Coq.Reals.Rbasic_fun <> Rabs_pos_lt thm
R23360:23369 Coq.Reals.RIneq <> Rlt_not_eq thm
R23360:23369 Coq.Reals.RIneq <> Rlt_not_eq thm
R23383:23395 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R23383:23395 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R23383:23395 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R23419:23437 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.inbetween_int_valid var
R23419:23437 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.inbetween_int_valid var
R23461:23469 Coq.Reals.Rbasic_fun <> Rabs_left thm
R23461:23469 Coq.Reals.Rbasic_fun <> Rabs_left thm
R23461:23469 Coq.Reals.Rbasic_fun <> Rabs_left thm
R23495:23501 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R23495:23501 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R23495:23501 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R23510:23524 Coq.Reals.RIneq <> Ropp_involutive thm
R23510:23524 Coq.Reals.RIneq <> Ropp_involutive thm
R23544:23546 Coq.Init.Logic <> :type_scope:x_'='_x not
R23547:23555 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R23564:23569 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R23579:23587 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R23571:23575 Coq.Init.Datatypes <> false constr
R23557:23561 Coq.Init.Datatypes <> false constr
R23544:23546 Coq.Init.Logic <> :type_scope:x_'='_x not
R23547:23555 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R23564:23569 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R23579:23587 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R23571:23575 Coq.Init.Datatypes <> false constr
R23557:23561 Coq.Init.Datatypes <> false constr
R23606:23613 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R23615:23617 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R23606:23613 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R23615:23617 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R23606:23613 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R23615:23617 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R23637:23640 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R23641:23643 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23637:23640 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R23641:23643 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23658:23663 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R23658:23663 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R23693:23696 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R23675:23686 compcert.flocq.Core.Fcore_float_prop <> F2R_ge_0_reg thm
R23693:23696 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R23675:23686 compcert.flocq.Core.Fcore_float_prop <> F2R_ge_0_reg thm
R23721:23728 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R23721:23728 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R23742:23755 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R23742:23755 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R23742:23755 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R23779:23797 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.inbetween_int_valid var
R23779:23797 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.inbetween_int_valid var
R23823:23833 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R23823:23833 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
prf 23916:23943 <> round_trunc_sign_any_correct
R24002:24007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24059:24064 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24086:24088 Coq.Init.Logic <> :type_scope:x_'='_x not
R24065:24069 compcert.flocq.Core.Fcore_generic_fmt <> round def
R24085:24085 compcert.flocq.Calc.Fcalc_round <> x var
R24081:24083 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R24076:24079 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R24071:24074 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R24110:24117 compcert.flocq.Calc.Fcalc_round <> truncate def
R24119:24119 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24121:24122 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24124:24125 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24127:24127 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24120:24120 compcert.flocq.Calc.Fcalc_round <> m var
R24123:24123 compcert.flocq.Calc.Fcalc_round <> e var
R24126:24126 compcert.flocq.Calc.Fcalc_round <> l var
R24094:24094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24097:24098 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24101:24102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24105:24105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24132:24134 compcert.flocq.Core.Fcore_defs <> F2R def
R24137:24141 compcert.flocq.Core.Fcore_defs <> Float constr
R24149:24157 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R24175:24180 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R24183:24190 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R24192:24192 compcert.flocq.Calc.Fcalc_round <> x var
R24160:24167 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R24169:24169 compcert.flocq.Calc.Fcalc_round <> x var
R24143:24146 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R24042:24045 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R24010:24013 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R24009:24009 compcert.flocq.Calc.Fcalc_round <> e var
R24014:24017 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R24034:24036 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R24020:24026 compcert.flocq.Core.Fcore_digits <> Zdigits def
R24033:24033 compcert.flocq.Calc.Fcalc_round <> m var
R24028:24031 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R24037:24037 compcert.flocq.Calc.Fcalc_round <> e var
R24047:24049 Coq.Init.Logic <> :type_scope:x_'='_x not
R24046:24046 compcert.flocq.Calc.Fcalc_round <> l var
R24050:24058 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R23967:23981 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R24001:24001 compcert.flocq.Calc.Fcalc_round <> l var
R23993:23996 Coq.Reals.Rbasic_fun <> Rabs def
R23998:23998 compcert.flocq.Calc.Fcalc_round <> x var
R23990:23990 compcert.flocq.Calc.Fcalc_round <> e var
R23988:23988 compcert.flocq.Calc.Fcalc_round <> m var
R23983:23986 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R24251:24266 compcert.flocq.Calc.Fcalc_round <> truncate_correct thm
R24284:24291 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R24269:24272 Coq.Reals.Rbasic_fun <> Rabs def
R24251:24266 compcert.flocq.Calc.Fcalc_round <> truncate_correct thm
R24284:24291 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R24269:24272 Coq.Reals.Rbasic_fun <> Rabs def
R24314:24321 compcert.flocq.Calc.Fcalc_round <> truncate def
R24323:24323 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24325:24326 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24328:24329 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24331:24331 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24314:24321 compcert.flocq.Calc.Fcalc_round <> truncate def
R24323:24323 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24325:24326 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24328:24329 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24331:24331 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24376:24397 compcert.flocq.Calc.Fcalc_round <> round_sign_any_correct thm
R24376:24397 compcert.flocq.Calc.Fcalc_round <> round_sign_any_correct thm
R24460:24474 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp_abs thm
R24460:24474 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp_abs thm
R24460:24474 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp_abs thm
R24508:24511 Coq.Reals.Rbasic_fun <> Rabs def
R24530:24538 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R24530:24538 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R24561:24575 Coq.Reals.RIneq <> Ropp_involutive thm
R24561:24575 Coq.Reals.RIneq <> Ropp_involutive thm
R24561:24575 Coq.Reals.RIneq <> Ropp_involutive thm
R24588:24605 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_opp thm
R24588:24605 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_opp thm
R24628:24641 compcert.flocq.Calc.Fcalc_round Fcalc_round.Fcalc_round_fexp.round_dir_sign <> sec
def 24729:24744 <> round_DN_correct
R24751:24767 compcert.flocq.Calc.Fcalc_round <> round_any_correct thm
R24786:24801 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN thm
R24783:24783 compcert.flocq.Calc.Fcalc_round <> m var
def 24816:24837 <> round_trunc_DN_correct
R24844:24866 compcert.flocq.Calc.Fcalc_round <> round_trunc_any_correct thm
R24885:24900 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN thm
R24882:24882 compcert.flocq.Calc.Fcalc_round <> m var
def 24915:24935 <> round_sign_DN_correct
R24942:24963 compcert.flocq.Calc.Fcalc_round <> round_sign_any_correct thm
R25014:25034 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN_sign thm
R24981:24989 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25011:25011 compcert.flocq.Calc.Fcalc_round <> m var
R24992:25004 compcert.flocq.Calc.Fcalc_round <> round_sign_DN def
R25008:25008 compcert.flocq.Calc.Fcalc_round <> l var
R25006:25006 compcert.flocq.Calc.Fcalc_round <> s var
def 25049:25075 <> round_trunc_sign_DN_correct
R25082:25109 compcert.flocq.Calc.Fcalc_round <> round_trunc_sign_any_correct thm
R25160:25180 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN_sign thm
R25127:25135 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25157:25157 compcert.flocq.Calc.Fcalc_round <> m var
R25138:25150 compcert.flocq.Calc.Fcalc_round <> round_sign_DN def
R25154:25154 compcert.flocq.Calc.Fcalc_round <> l var
R25152:25152 compcert.flocq.Calc.Fcalc_round <> s var
def 25195:25210 <> round_UP_correct
R25217:25233 compcert.flocq.Calc.Fcalc_round <> round_any_correct thm
R25275:25290 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP thm
R25249:25257 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25272:25272 compcert.flocq.Calc.Fcalc_round <> m var
R25260:25267 compcert.flocq.Calc.Fcalc_round <> round_UP def
R25269:25269 compcert.flocq.Calc.Fcalc_round <> l var
def 25305:25326 <> round_trunc_UP_correct
R25333:25355 compcert.flocq.Calc.Fcalc_round <> round_trunc_any_correct thm
R25397:25412 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP thm
R25371:25379 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25394:25394 compcert.flocq.Calc.Fcalc_round <> m var
R25382:25389 compcert.flocq.Calc.Fcalc_round <> round_UP def
R25391:25391 compcert.flocq.Calc.Fcalc_round <> l var
def 25427:25447 <> round_sign_UP_correct
R25454:25475 compcert.flocq.Calc.Fcalc_round <> round_sign_any_correct thm
R25526:25546 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP_sign thm
R25493:25501 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25523:25523 compcert.flocq.Calc.Fcalc_round <> m var
R25504:25516 compcert.flocq.Calc.Fcalc_round <> round_sign_UP def
R25520:25520 compcert.flocq.Calc.Fcalc_round <> l var
R25518:25518 compcert.flocq.Calc.Fcalc_round <> s var
def 25561:25587 <> round_trunc_sign_UP_correct
R25594:25621 compcert.flocq.Calc.Fcalc_round <> round_trunc_sign_any_correct thm
R25672:25692 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP_sign thm
R25639:25647 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25669:25669 compcert.flocq.Calc.Fcalc_round <> m var
R25650:25662 compcert.flocq.Calc.Fcalc_round <> round_sign_UP def
R25666:25666 compcert.flocq.Calc.Fcalc_round <> l var
R25664:25664 compcert.flocq.Calc.Fcalc_round <> s var
def 25707:25722 <> round_ZR_correct
R25729:25745 compcert.flocq.Calc.Fcalc_round <> round_any_correct thm
R25802:25817 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR thm
R25761:25769 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25799:25799 compcert.flocq.Calc.Fcalc_round <> m var
R25772:25779 compcert.flocq.Calc.Fcalc_round <> round_ZR def
R25796:25796 compcert.flocq.Calc.Fcalc_round <> l var
R25782:25789 Coq.ZArith.Zbool <> Zlt_bool syndef
R25791:25791 compcert.flocq.Calc.Fcalc_round <> m var
def 25832:25853 <> round_trunc_ZR_correct
R25860:25882 compcert.flocq.Calc.Fcalc_round <> round_trunc_any_correct thm
R25939:25954 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR thm
R25898:25906 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25936:25936 compcert.flocq.Calc.Fcalc_round <> m var
R25909:25916 compcert.flocq.Calc.Fcalc_round <> round_ZR def
R25933:25933 compcert.flocq.Calc.Fcalc_round <> l var
R25919:25926 Coq.ZArith.Zbool <> Zlt_bool syndef
R25928:25928 compcert.flocq.Calc.Fcalc_round <> m var
def 25969:25989 <> round_sign_ZR_correct
R25996:26017 compcert.flocq.Calc.Fcalc_round <> round_sign_any_correct thm
R26038:26058 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR_sign thm
R26035:26035 compcert.flocq.Calc.Fcalc_round <> m var
def 26073:26099 <> round_trunc_sign_ZR_correct
R26106:26133 compcert.flocq.Calc.Fcalc_round <> round_trunc_sign_any_correct thm
R26154:26174 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR_sign thm
R26151:26151 compcert.flocq.Calc.Fcalc_round <> m var
def 26189:26204 <> round_NE_correct
R26211:26227 compcert.flocq.Calc.Fcalc_round <> round_any_correct thm
R26285:26300 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE thm
R26243:26251 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R26282:26282 compcert.flocq.Calc.Fcalc_round <> m var
R26254:26260 compcert.flocq.Calc.Fcalc_round <> round_N def
R26279:26279 compcert.flocq.Calc.Fcalc_round <> l var
R26263:26266 Coq.Init.Datatypes <> negb def
R26269:26273 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R26275:26275 compcert.flocq.Calc.Fcalc_round <> m var
def 26315:26336 <> round_trunc_NE_correct
R26343:26365 compcert.flocq.Calc.Fcalc_round <> round_trunc_any_correct thm
R26423:26438 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE thm
R26381:26389 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R26420:26420 compcert.flocq.Calc.Fcalc_round <> m var
R26392:26398 compcert.flocq.Calc.Fcalc_round <> round_N def
R26417:26417 compcert.flocq.Calc.Fcalc_round <> l var
R26401:26404 Coq.Init.Datatypes <> negb def
R26407:26411 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R26413:26413 compcert.flocq.Calc.Fcalc_round <> m var
def 26453:26473 <> round_sign_NE_correct
R26480:26501 compcert.flocq.Calc.Fcalc_round <> round_sign_any_correct thm
R26561:26581 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE_sign thm
R26519:26527 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R26558:26558 compcert.flocq.Calc.Fcalc_round <> m var
R26530:26536 compcert.flocq.Calc.Fcalc_round <> round_N def
R26555:26555 compcert.flocq.Calc.Fcalc_round <> l var
R26539:26542 Coq.Init.Datatypes <> negb def
R26545:26549 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R26551:26551 compcert.flocq.Calc.Fcalc_round <> m var
def 26596:26622 <> round_trunc_sign_NE_correct
R26629:26656 compcert.flocq.Calc.Fcalc_round <> round_trunc_sign_any_correct thm
R26716:26736 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE_sign thm
R26674:26682 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R26713:26713 compcert.flocq.Calc.Fcalc_round <> m var
R26685:26691 compcert.flocq.Calc.Fcalc_round <> round_N def
R26710:26710 compcert.flocq.Calc.Fcalc_round <> l var
R26694:26697 Coq.Init.Datatypes <> negb def
R26700:26704 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R26706:26706 compcert.flocq.Calc.Fcalc_round <> m var
def 26751:26766 <> round_NA_correct
R26773:26789 compcert.flocq.Calc.Fcalc_round <> round_any_correct thm
R26845:26860 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NA thm
R26805:26813 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R26842:26842 compcert.flocq.Calc.Fcalc_round <> m var
R26816:26822 compcert.flocq.Calc.Fcalc_round <> round_N def
R26839:26839 compcert.flocq.Calc.Fcalc_round <> l var
R26825:26832 Coq.ZArith.Zbool <> Zle_bool syndef
R26836:26836 compcert.flocq.Calc.Fcalc_round <> m var
def 26875:26896 <> round_trunc_NA_correct
R26903:26925 compcert.flocq.Calc.Fcalc_round <> round_trunc_any_correct thm
R26981:26996 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NA thm
R26941:26949 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R26978:26978 compcert.flocq.Calc.Fcalc_round <> m var
R26952:26958 compcert.flocq.Calc.Fcalc_round <> round_N def
R26975:26975 compcert.flocq.Calc.Fcalc_round <> l var
R26961:26968 Coq.ZArith.Zbool <> Zle_bool syndef
R26972:26972 compcert.flocq.Calc.Fcalc_round <> m var
def 27011:27031 <> round_sign_NA_correct
R27038:27059 compcert.flocq.Calc.Fcalc_round <> round_sign_any_correct thm
R27107:27127 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NA_sign thm
R27077:27085 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R27104:27104 compcert.flocq.Calc.Fcalc_round <> m var
R27088:27094 compcert.flocq.Calc.Fcalc_round <> round_N def
R27101:27101 compcert.flocq.Calc.Fcalc_round <> l var
R27096:27099 Coq.Init.Datatypes <> true constr
def 27142:27168 <> round_trunc_sign_NA_correct
R27175:27202 compcert.flocq.Calc.Fcalc_round <> round_trunc_sign_any_correct thm
R27250:27270 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NA_sign thm
R27220:27228 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R27247:27247 compcert.flocq.Calc.Fcalc_round <> m var
R27231:27237 compcert.flocq.Calc.Fcalc_round <> round_N def
R27244:27244 compcert.flocq.Calc.Fcalc_round <> l var
R27239:27242 Coq.Init.Datatypes <> true constr
R27278:27293 compcert.flocq.Calc.Fcalc_round Fcalc_round.Fcalc_round_fexp <> sec
var 27358:27361 Fcalc_round emin
R27365:27365 Coq.Numbers.BinNums <> Z ind
def 27380:27391 <> truncate_FIX
R27418:27418 compcert.flocq.Calc.Fcalc_round <> t var
R27405:27405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27407:27408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27410:27411 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27413:27413 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27439:27441 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R27435:27438 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.emin var
R27455:27462 Coq.ZArith.Zbool <> Zlt_bool syndef
R27466:27466 compcert.flocq.Calc.Fcalc_round <> k var
R27565:27565 compcert.flocq.Calc.Fcalc_round <> t var
R27486:27491 Coq.ZArith.Zpow_def <> Zpower syndef
R27498:27498 compcert.flocq.Calc.Fcalc_round <> k var
R27493:27496 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R27507:27507 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27516:27517 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27527:27528 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27556:27556 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27508:27511 Coq.ZArith.Zdiv <> Zdiv syndef
R27515:27515 compcert.flocq.Calc.Fcalc_round <> p var
R27520:27522 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27523:27523 compcert.flocq.Calc.Fcalc_round <> k var
R27529:27540 compcert.flocq.Calc.Fcalc_bracket <> new_location def
R27545:27548 Coq.ZArith.Zdiv <> Zmod syndef
R27552:27552 compcert.flocq.Calc.Fcalc_round <> p var
R27542:27542 compcert.flocq.Calc.Fcalc_round <> p var
prf 27577:27596 <> truncate_FIX_correct
R27648:27653 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27684:27689 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27711:27722 compcert.flocq.Calc.Fcalc_round <> truncate_FIX def
R27724:27724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27726:27727 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27729:27730 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27732:27732 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27725:27725 compcert.flocq.Calc.Fcalc_round <> m var
R27728:27728 compcert.flocq.Calc.Fcalc_round <> e var
R27731:27731 compcert.flocq.Calc.Fcalc_round <> l var
R27695:27695 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27698:27699 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27702:27703 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27706:27706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27770:27776 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27875:27875 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27739:27753 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R27766:27766 compcert.flocq.Calc.Fcalc_round <> x var
R27755:27758 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R27815:27819 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27874:27874 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27779:27781 Coq.Init.Logic <> :type_scope:x_'='_x not
R27782:27792 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R27814:27814 compcert.flocq.Calc.Fcalc_round <> x var
R27800:27806 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R27808:27811 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.emin var
R27794:27797 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R27834:27837 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27822:27824 Coq.Init.Logic <> :type_scope:x_'='_x not
R27825:27833 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R27838:27851 compcert.flocq.Core.Fcore_generic_fmt <> generic_format def
R27873:27873 compcert.flocq.Calc.Fcalc_round <> x var
R27859:27865 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R27867:27870 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.emin var
R27853:27856 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R27667:27670 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27656:27659 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R27655:27655 compcert.flocq.Calc.Fcalc_round <> e var
R27660:27663 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.emin var
R27672:27674 Coq.Init.Logic <> :type_scope:x_'='_x not
R27671:27671 compcert.flocq.Calc.Fcalc_round <> l var
R27675:27683 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R27620:27634 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R27647:27647 compcert.flocq.Calc.Fcalc_round <> l var
R27645:27645 compcert.flocq.Calc.Fcalc_round <> x var
R27643:27643 compcert.flocq.Calc.Fcalc_round <> e var
R27641:27641 compcert.flocq.Calc.Fcalc_round <> m var
R27636:27639 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R27914:27925 compcert.flocq.Calc.Fcalc_round <> truncate_FIX def
R27943:27945 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R27939:27942 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.emin var
R27943:27945 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R27939:27942 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.emin var
R27963:27968 Coq.ZArith.Zpow_def <> Zpower syndef
R27970:27973 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R27963:27968 Coq.ZArith.Zpow_def <> Zpower syndef
R27970:27973 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R27986:27996 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R27999:28005 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R28020:28028 Coq.ZArith.Zbool <> Zlt_cases thm
R28020:28028 Coq.ZArith.Zbool <> Zlt_cases thm
R28042:28049 Coq.ZArith.Zbool <> Zlt_bool syndef
R28042:28049 Coq.ZArith.Zbool <> Zlt_bool syndef
R28098:28125 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R28098:28125 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R28324:28341 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R28324:28341 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R28351:28361 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R28381:28391 compcert.flocq.Calc.Fcalc_round Fcalc_round <> sec
