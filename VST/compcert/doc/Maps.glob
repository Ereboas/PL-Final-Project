DIGEST NO
Fcompcert.lib.Maps
R2123:2133 Coq.Classes.Equivalence <> <> lib
R2135:2142 Coq.Classes.EquivDec <> <> lib
R2160:2165 compcert.lib.Coqlib <> <> lib
modtype 2385:2388 <> TREE
ax 2403:2405 TREE elt
ax 2426:2431 TREE elt_eq
R2447:2449 compcert.lib.Maps TREE elt defax
R2453:2453 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2459:2463 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2470:2470 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2455:2457 Coq.Init.Logic <> :type_scope:x_'='_x not
R2454:2454 compcert.lib.Maps <> a var
R2458:2458 compcert.lib.Maps <> b var
R2465:2468 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R2464:2464 compcert.lib.Maps <> a var
R2469:2469 compcert.lib.Maps <> b var
ax 2485:2485 TREE t
R2492:2495 Coq.Init.Logic <> :type_scope:x_'->'_x not
ax 2514:2518 TREE empty
R2539:2539 compcert.lib.Maps TREE t defax
R2541:2541 compcert.lib.Maps <> A var
ax 2556:2558 TREE get
R2582:2585 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2589:2592 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2593:2598 Coq.Init.Datatypes <> option ind
R2600:2600 compcert.lib.Maps <> A var
R2586:2586 compcert.lib.Maps TREE t defax
R2588:2588 compcert.lib.Maps <> A var
R2579:2581 compcert.lib.Maps TREE elt defax
ax 2615:2617 TREE set
R2641:2644 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2646:2649 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2653:2656 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2657:2657 compcert.lib.Maps TREE t defax
R2659:2659 compcert.lib.Maps <> A var
R2650:2650 compcert.lib.Maps TREE t defax
R2652:2652 compcert.lib.Maps <> A var
R2645:2645 compcert.lib.Maps <> A var
R2638:2640 compcert.lib.Maps TREE elt defax
ax 2674:2679 TREE remove
R2703:2706 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2710:2713 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2714:2714 compcert.lib.Maps TREE t defax
R2716:2716 compcert.lib.Maps <> A var
R2707:2707 compcert.lib.Maps TREE t defax
R2709:2709 compcert.lib.Maps <> A var
R2700:2702 compcert.lib.Maps TREE elt defax
ax 2845:2850 TREE gempty
R2878:2880 compcert.lib.Maps TREE elt defax
R2899:2901 Coq.Init.Logic <> :type_scope:x_'='_x not
R2884:2886 compcert.lib.Maps TREE get defax
R2891:2895 compcert.lib.Maps TREE empty defax
R2897:2897 compcert.lib.Maps <> A var
R2888:2888 compcert.lib.Maps <> i var
R2902:2905 Coq.Init.Datatypes <> None constr
ax 2916:2918 TREE gss
R2946:2948 compcert.lib.Maps TREE elt defax
R2955:2955 compcert.lib.Maps <> A var
R2962:2962 compcert.lib.Maps TREE t defax
R2964:2964 compcert.lib.Maps <> A var
R2985:2987 Coq.Init.Logic <> :type_scope:x_'='_x not
R2968:2970 compcert.lib.Maps TREE get defax
R2975:2977 compcert.lib.Maps TREE set defax
R2983:2983 compcert.lib.Maps <> m var
R2981:2981 compcert.lib.Maps <> x var
R2979:2979 compcert.lib.Maps <> i var
R2972:2972 compcert.lib.Maps <> i var
R2988:2991 Coq.Init.Datatypes <> Some constr
R2993:2993 compcert.lib.Maps <> x var
ax 3004:3006 TREE gso
R3036:3038 compcert.lib.Maps TREE elt defax
R3045:3045 compcert.lib.Maps <> A var
R3052:3052 compcert.lib.Maps TREE t defax
R3054:3054 compcert.lib.Maps <> A var
R3068:3071 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3089:3091 Coq.Init.Logic <> :type_scope:x_'='_x not
R3072:3074 compcert.lib.Maps TREE get defax
R3079:3081 compcert.lib.Maps TREE set defax
R3087:3087 compcert.lib.Maps <> m var
R3085:3085 compcert.lib.Maps <> x var
R3083:3083 compcert.lib.Maps <> j var
R3076:3076 compcert.lib.Maps <> i var
R3092:3094 compcert.lib.Maps TREE get defax
R3098:3098 compcert.lib.Maps <> m var
R3096:3096 compcert.lib.Maps <> i var
R3063:3066 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3062:3062 compcert.lib.Maps <> i var
R3067:3067 compcert.lib.Maps <> j var
ax 3109:3114 TREE gsspec
R3144:3146 compcert.lib.Maps TREE elt defax
R3153:3153 compcert.lib.Maps <> A var
R3160:3160 compcert.lib.Maps TREE t defax
R3162:3162 compcert.lib.Maps <> A var
R3187:3189 Coq.Init.Logic <> :type_scope:x_'='_x not
R3170:3172 compcert.lib.Maps TREE get defax
R3177:3179 compcert.lib.Maps TREE set defax
R3185:3185 compcert.lib.Maps <> m var
R3183:3183 compcert.lib.Maps <> x var
R3181:3181 compcert.lib.Maps <> j var
R3174:3174 compcert.lib.Maps <> i var
R3193:3198 compcert.lib.Maps TREE elt_eq defax
R3202:3202 compcert.lib.Maps <> j var
R3200:3200 compcert.lib.Maps <> i var
R3221:3223 compcert.lib.Maps TREE get defax
R3227:3227 compcert.lib.Maps <> m var
R3225:3225 compcert.lib.Maps <> i var
R3209:3212 Coq.Init.Datatypes <> Some constr
R3214:3214 compcert.lib.Maps <> x var
ax 3533:3535 TREE grs
R3563:3565 compcert.lib.Maps TREE elt defax
R3572:3572 compcert.lib.Maps TREE t defax
R3574:3574 compcert.lib.Maps <> A var
R3596:3598 Coq.Init.Logic <> :type_scope:x_'='_x not
R3578:3580 compcert.lib.Maps TREE get defax
R3585:3590 compcert.lib.Maps TREE remove defax
R3594:3594 compcert.lib.Maps <> m var
R3592:3592 compcert.lib.Maps <> i var
R3582:3582 compcert.lib.Maps <> i var
R3599:3602 Coq.Init.Datatypes <> None constr
ax 3613:3615 TREE gro
R3645:3647 compcert.lib.Maps TREE elt defax
R3654:3654 compcert.lib.Maps TREE t defax
R3656:3656 compcert.lib.Maps <> A var
R3670:3673 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3692:3694 Coq.Init.Logic <> :type_scope:x_'='_x not
R3674:3676 compcert.lib.Maps TREE get defax
R3681:3686 compcert.lib.Maps TREE remove defax
R3690:3690 compcert.lib.Maps <> m var
R3688:3688 compcert.lib.Maps <> j var
R3678:3678 compcert.lib.Maps <> i var
R3695:3697 compcert.lib.Maps TREE get defax
R3701:3701 compcert.lib.Maps <> m var
R3699:3699 compcert.lib.Maps <> i var
R3665:3668 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3664:3664 compcert.lib.Maps <> i var
R3669:3669 compcert.lib.Maps <> j var
ax 3712:3717 TREE grspec
R3747:3749 compcert.lib.Maps TREE elt defax
R3756:3756 compcert.lib.Maps TREE t defax
R3758:3758 compcert.lib.Maps <> A var
R3784:3786 Coq.Init.Logic <> :type_scope:x_'='_x not
R3766:3768 compcert.lib.Maps TREE get defax
R3773:3778 compcert.lib.Maps TREE remove defax
R3782:3782 compcert.lib.Maps <> m var
R3780:3780 compcert.lib.Maps <> j var
R3770:3770 compcert.lib.Maps <> i var
R3790:3795 compcert.lib.Maps TREE elt_eq defax
R3799:3799 compcert.lib.Maps <> j var
R3797:3797 compcert.lib.Maps <> i var
R3816:3818 compcert.lib.Maps TREE get defax
R3822:3822 compcert.lib.Maps <> m var
R3820:3820 compcert.lib.Maps <> i var
R3806:3809 Coq.Init.Datatypes <> None constr
ax 3883:3885 TREE beq
R3906:3906 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3921:3925 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3929:3932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3936:3939 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3940:3943 Coq.Init.Datatypes <> bool ind
R3933:3933 compcert.lib.Maps TREE t defax
R3935:3935 compcert.lib.Maps <> A var
R3926:3926 compcert.lib.Maps TREE t defax
R3928:3928 compcert.lib.Maps <> A var
R3908:3911 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3913:3916 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3917:3920 Coq.Init.Datatypes <> bool ind
R3912:3912 compcert.lib.Maps <> A var
R3907:3907 compcert.lib.Maps <> A var
ax 3954:3964 TREE beq_correct
R3995:3998 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4000:4003 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4004:4007 Coq.Init.Datatypes <> bool ind
R3999:3999 compcert.lib.Maps <> A var
R3994:3994 compcert.lib.Maps <> A var
R4018:4018 compcert.lib.Maps TREE t defax
R4020:4020 compcert.lib.Maps <> A var
R4048:4057 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4208:4208 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4041:4043 Coq.Init.Logic <> :type_scope:x_'='_x not
R4028:4030 compcert.lib.Maps TREE beq defax
R4039:4040 compcert.lib.Maps <> t2 var
R4036:4037 compcert.lib.Maps <> t1 var
R4032:4034 compcert.lib.Maps <> eqA var
R4044:4047 Coq.Init.Datatypes <> true constr
R4069:4071 compcert.lib.Maps TREE elt defax
R4096:4098 compcert.lib.Maps TREE get defax
R4102:4103 compcert.lib.Maps <> t2 var
R4100:4100 compcert.lib.Maps <> x var
R4086:4088 compcert.lib.Maps TREE get defax
R4092:4093 compcert.lib.Maps <> t1 var
R4090:4090 compcert.lib.Maps <> x var
R4117:4120 Coq.Init.Datatypes <> None constr
R4123:4126 Coq.Init.Datatypes <> None constr
R4131:4134 Coq.Init.Logic <> True ind
R4143:4146 Coq.Init.Datatypes <> Some constr
R4152:4155 Coq.Init.Datatypes <> Some constr
R4172:4174 Coq.Init.Logic <> :type_scope:x_'='_x not
R4163:4165 compcert.lib.Maps <> eqA var
R4175:4178 Coq.Init.Datatypes <> true constr
R4195:4199 Coq.Init.Logic <> False ind
ax 4276:4278 TREE map
R4305:4305 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4319:4323 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4327:4330 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4331:4331 compcert.lib.Maps TREE t defax
R4333:4333 compcert.lib.Maps <> B var
R4324:4324 compcert.lib.Maps TREE t defax
R4326:4326 compcert.lib.Maps <> A var
R4309:4312 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4314:4317 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4318:4318 compcert.lib.Maps <> B var
R4313:4313 compcert.lib.Maps <> A var
R4306:4308 compcert.lib.Maps TREE elt defax
ax 4344:4347 TREE gmap
R4380:4383 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4385:4388 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4389:4389 compcert.lib.Maps <> B var
R4384:4384 compcert.lib.Maps <> A var
R4377:4379 compcert.lib.Maps TREE elt defax
R4396:4398 compcert.lib.Maps TREE elt defax
R4405:4405 compcert.lib.Maps TREE t defax
R4407:4407 compcert.lib.Maps <> A var
R4430:4432 Coq.Init.Logic <> :type_scope:x_'='_x not
R4415:4417 compcert.lib.Maps TREE get defax
R4422:4424 compcert.lib.Maps TREE map defax
R4428:4428 compcert.lib.Maps <> m var
R4426:4426 compcert.lib.Maps <> f var
R4419:4419 compcert.lib.Maps <> i var
R4433:4442 compcert.lib.Coqlib <> option_map def
R4451:4453 compcert.lib.Maps TREE get defax
R4457:4457 compcert.lib.Maps <> m var
R4455:4455 compcert.lib.Maps <> i var
R4445:4445 compcert.lib.Maps <> f var
R4447:4447 compcert.lib.Maps <> i var
ax 4552:4555 TREE map1
R4582:4582 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4589:4593 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4597:4600 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4601:4601 compcert.lib.Maps TREE t defax
R4603:4603 compcert.lib.Maps <> B var
R4594:4594 compcert.lib.Maps TREE t defax
R4596:4596 compcert.lib.Maps <> A var
R4584:4587 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4588:4588 compcert.lib.Maps <> B var
R4583:4583 compcert.lib.Maps <> A var
ax 4614:4618 TREE gmap1
R4649:4652 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4653:4653 compcert.lib.Maps <> B var
R4648:4648 compcert.lib.Maps <> A var
R4660:4662 compcert.lib.Maps TREE elt defax
R4669:4669 compcert.lib.Maps TREE t defax
R4671:4671 compcert.lib.Maps <> A var
R4695:4697 Coq.Init.Logic <> :type_scope:x_'='_x not
R4679:4681 compcert.lib.Maps TREE get defax
R4686:4689 compcert.lib.Maps TREE map1 defax
R4693:4693 compcert.lib.Maps <> m var
R4691:4691 compcert.lib.Maps <> f var
R4683:4683 compcert.lib.Maps <> i var
R4698:4707 compcert.lib.Coqlib <> option_map def
R4712:4714 compcert.lib.Maps TREE get defax
R4718:4718 compcert.lib.Maps <> m var
R4716:4716 compcert.lib.Maps <> i var
R4709:4709 compcert.lib.Maps <> f var
ax 4799:4805 TREE combine
R4834:4834 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4867:4871 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4875:4878 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4882:4885 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4886:4886 compcert.lib.Maps TREE t defax
R4888:4888 compcert.lib.Maps <> C var
R4879:4879 compcert.lib.Maps TREE t defax
R4881:4881 compcert.lib.Maps <> B var
R4872:4872 compcert.lib.Maps TREE t defax
R4874:4874 compcert.lib.Maps <> A var
R4843:4846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4855:4858 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4859:4864 Coq.Init.Datatypes <> option ind
R4866:4866 compcert.lib.Maps <> C var
R4847:4852 Coq.Init.Datatypes <> option ind
R4854:4854 compcert.lib.Maps <> B var
R4835:4840 Coq.Init.Datatypes <> option ind
R4842:4842 compcert.lib.Maps <> A var
ax 4899:4906 TREE gcombine
R4946:4949 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4958:4961 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4962:4967 Coq.Init.Datatypes <> option ind
R4969:4969 compcert.lib.Maps <> C var
R4950:4955 Coq.Init.Datatypes <> option ind
R4957:4957 compcert.lib.Maps <> B var
R4938:4943 Coq.Init.Datatypes <> option ind
R4945:4945 compcert.lib.Maps <> A var
R4995:5002 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5015:5015 compcert.lib.Maps TREE t defax
R5017:5017 compcert.lib.Maps <> A var
R5025:5025 compcert.lib.Maps TREE t defax
R5027:5027 compcert.lib.Maps <> B var
R5034:5036 compcert.lib.Maps TREE elt defax
R5067:5069 Coq.Init.Logic <> :type_scope:x_'='_x not
R5044:5046 compcert.lib.Maps TREE get defax
R5051:5057 compcert.lib.Maps TREE combine defax
R5064:5065 compcert.lib.Maps <> m2 var
R5061:5062 compcert.lib.Maps <> m1 var
R5059:5059 compcert.lib.Maps <> f var
R5048:5048 compcert.lib.Maps <> i var
R5070:5070 compcert.lib.Maps <> f var
R5084:5086 compcert.lib.Maps TREE get defax
R5090:5091 compcert.lib.Maps <> m2 var
R5088:5088 compcert.lib.Maps <> i var
R5073:5075 compcert.lib.Maps TREE get defax
R5079:5080 compcert.lib.Maps <> m1 var
R5077:5077 compcert.lib.Maps <> i var
R4988:4990 Coq.Init.Logic <> :type_scope:x_'='_x not
R4977:4977 compcert.lib.Maps <> f var
R4984:4987 Coq.Init.Datatypes <> None constr
R4979:4982 Coq.Init.Datatypes <> None constr
R4991:4994 Coq.Init.Datatypes <> None constr
ax 5153:5160 TREE elements
R5188:5191 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5192:5195 Coq.Init.Datatypes <> list ind
R5201:5203 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R5198:5200 compcert.lib.Maps TREE elt defax
R5204:5204 compcert.lib.Maps <> A var
R5185:5185 compcert.lib.Maps TREE t defax
R5187:5187 compcert.lib.Maps <> A var
ax 5216:5231 TREE elements_correct
R5259:5259 compcert.lib.Maps TREE t defax
R5261:5261 compcert.lib.Maps <> A var
R5268:5270 compcert.lib.Maps TREE elt defax
R5277:5277 compcert.lib.Maps <> A var
R5301:5304 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5305:5306 Coq.Lists.List <> In def
R5316:5323 compcert.lib.Maps TREE elements defax
R5325:5325 compcert.lib.Maps <> m var
R5308:5308 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5310:5311 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5313:5313 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5309:5309 compcert.lib.Maps <> i var
R5312:5312 compcert.lib.Maps <> v var
R5292:5294 Coq.Init.Logic <> :type_scope:x_'='_x not
R5285:5287 compcert.lib.Maps TREE get defax
R5291:5291 compcert.lib.Maps <> m var
R5289:5289 compcert.lib.Maps <> i var
R5295:5298 Coq.Init.Datatypes <> Some constr
R5300:5300 compcert.lib.Maps <> v var
ax 5337:5353 TREE elements_complete
R5381:5381 compcert.lib.Maps TREE t defax
R5383:5383 compcert.lib.Maps <> A var
R5390:5392 compcert.lib.Maps TREE elt defax
R5399:5399 compcert.lib.Maps <> A var
R5429:5432 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5440:5442 Coq.Init.Logic <> :type_scope:x_'='_x not
R5433:5435 compcert.lib.Maps TREE get defax
R5439:5439 compcert.lib.Maps <> m var
R5437:5437 compcert.lib.Maps <> i var
R5443:5446 Coq.Init.Datatypes <> Some constr
R5448:5448 compcert.lib.Maps <> v var
R5407:5408 Coq.Lists.List <> In def
R5418:5425 compcert.lib.Maps TREE elements defax
R5427:5427 compcert.lib.Maps <> m var
R5410:5410 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5412:5413 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5415:5415 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5411:5411 compcert.lib.Maps <> i var
R5414:5414 compcert.lib.Maps <> v var
ax 5459:5479 TREE elements_keys_norepet
R5507:5507 compcert.lib.Maps TREE t defax
R5509:5509 compcert.lib.Maps <> A var
R5517:5528 compcert.lib.Coqlib <> list_norepet ind
R5531:5538 Coq.Lists.List <> map def
R5554:5561 compcert.lib.Maps TREE elements defax
R5563:5563 compcert.lib.Maps <> m var
R5542:5544 Coq.Init.Datatypes <> fst def
R5550:5550 compcert.lib.Maps <> A var
R5546:5548 compcert.lib.Maps TREE elt defax
ax 5576:5595 TREE elements_extensional
R5625:5625 compcert.lib.Maps TREE t defax
R5627:5627 compcert.lib.Maps <> A var
R5635:5635 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5663:5671 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5682:5684 Coq.Init.Logic <> :type_scope:x_'='_x not
R5672:5679 compcert.lib.Maps TREE elements defax
R5681:5681 compcert.lib.Maps <> m var
R5685:5692 compcert.lib.Maps TREE elements defax
R5694:5694 compcert.lib.Maps <> n var
R5653:5655 Coq.Init.Logic <> :type_scope:x_'='_x not
R5646:5648 compcert.lib.Maps TREE get defax
R5652:5652 compcert.lib.Maps <> m var
R5650:5650 compcert.lib.Maps <> i var
R5656:5658 compcert.lib.Maps TREE get defax
R5662:5662 compcert.lib.Maps <> n var
R5660:5660 compcert.lib.Maps <> i var
ax 5705:5719 TREE elements_remove
R5751:5751 compcert.lib.Maps TREE t defax
R5753:5753 compcert.lib.Maps <> A var
R5777:5784 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5785:5791 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5797:5798 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5829:5832 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5809:5811 Coq.Init.Logic <> :type_scope:x_'='_x not
R5799:5806 compcert.lib.Maps TREE elements defax
R5808:5808 compcert.lib.Maps <> m var
R5814:5817 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R5812:5813 compcert.lib.Maps <> l1 var
R5823:5826 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5818:5818 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5820:5820 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5822:5822 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5819:5819 compcert.lib.Maps <> i var
R5821:5821 compcert.lib.Maps <> v var
R5827:5828 compcert.lib.Maps <> l2 var
R5854:5856 Coq.Init.Logic <> :type_scope:x_'='_x not
R5833:5840 compcert.lib.Maps TREE elements defax
R5843:5848 compcert.lib.Maps TREE remove defax
R5852:5852 compcert.lib.Maps <> m var
R5850:5850 compcert.lib.Maps <> i var
R5859:5862 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R5857:5858 compcert.lib.Maps <> l1 var
R5863:5864 compcert.lib.Maps <> l2 var
R5768:5770 Coq.Init.Logic <> :type_scope:x_'='_x not
R5761:5763 compcert.lib.Maps TREE get defax
R5767:5767 compcert.lib.Maps <> m var
R5765:5765 compcert.lib.Maps <> i var
R5771:5774 Coq.Init.Datatypes <> Some constr
R5776:5776 compcert.lib.Maps <> v var
ax 5937:5940 TREE fold
R5967:5967 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5986:5990 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5994:5997 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5999:6002 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6003:6003 compcert.lib.Maps <> B var
R5998:5998 compcert.lib.Maps <> B var
R5991:5991 compcert.lib.Maps TREE t defax
R5993:5993 compcert.lib.Maps <> A var
R5969:5972 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5976:5979 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5981:5984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5985:5985 compcert.lib.Maps <> B var
R5980:5980 compcert.lib.Maps <> A var
R5973:5975 compcert.lib.Maps TREE elt defax
R5968:5968 compcert.lib.Maps <> B var
ax 6014:6022 TREE fold_spec
R6053:6056 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6060:6063 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6065:6068 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6069:6069 compcert.lib.Maps <> B var
R6064:6064 compcert.lib.Maps <> A var
R6057:6059 compcert.lib.Maps TREE elt defax
R6052:6052 compcert.lib.Maps <> B var
R6076:6076 compcert.lib.Maps <> B var
R6083:6083 compcert.lib.Maps TREE t defax
R6085:6085 compcert.lib.Maps <> A var
R6103:6109 Coq.Init.Logic <> :type_scope:x_'='_x not
R6093:6096 compcert.lib.Maps TREE fold defax
R6102:6102 compcert.lib.Maps <> v var
R6100:6100 compcert.lib.Maps <> m var
R6098:6098 compcert.lib.Maps <> f var
R6110:6123 Coq.Lists.List <> fold_left def
R6171:6171 compcert.lib.Maps <> v var
R6159:6166 compcert.lib.Maps TREE elements defax
R6168:6168 compcert.lib.Maps <> m var
R6137:6137 compcert.lib.Maps <> f var
R6150:6152 Coq.Init.Datatypes <> snd def
R6154:6154 compcert.lib.Maps <> p var
R6142:6144 Coq.Init.Datatypes <> fst def
R6146:6146 compcert.lib.Maps <> p var
R6139:6139 compcert.lib.Maps <> a var
ax 6265:6269 TREE fold1
R6296:6296 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6308:6312 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6316:6319 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6321:6324 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6325:6325 compcert.lib.Maps <> B var
R6320:6320 compcert.lib.Maps <> B var
R6313:6313 compcert.lib.Maps TREE t defax
R6315:6315 compcert.lib.Maps <> A var
R6298:6301 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6303:6306 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6307:6307 compcert.lib.Maps <> B var
R6302:6302 compcert.lib.Maps <> A var
R6297:6297 compcert.lib.Maps <> B var
ax 6336:6345 TREE fold1_spec
R6376:6379 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6381:6384 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6385:6385 compcert.lib.Maps <> B var
R6380:6380 compcert.lib.Maps <> A var
R6375:6375 compcert.lib.Maps <> B var
R6392:6392 compcert.lib.Maps <> B var
R6399:6399 compcert.lib.Maps TREE t defax
R6401:6401 compcert.lib.Maps <> A var
R6420:6426 Coq.Init.Logic <> :type_scope:x_'='_x not
R6409:6413 compcert.lib.Maps TREE fold1 defax
R6419:6419 compcert.lib.Maps <> v var
R6417:6417 compcert.lib.Maps <> m var
R6415:6415 compcert.lib.Maps <> f var
R6427:6440 Coq.Lists.List <> fold_left def
R6480:6480 compcert.lib.Maps <> v var
R6468:6475 compcert.lib.Maps TREE elements defax
R6477:6477 compcert.lib.Maps <> m var
R6454:6454 compcert.lib.Maps <> f var
R6459:6461 Coq.Init.Datatypes <> snd def
R6463:6463 compcert.lib.Maps <> p var
R6456:6456 compcert.lib.Maps <> a var
R6487:6490 compcert.lib.Maps TREE <> modtype
modtype 6548:6550 <> MAP
ax 6565:6567 MAP elt
ax 6588:6593 MAP elt_eq
R6609:6611 compcert.lib.Maps MAP elt defax
R6615:6615 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6621:6625 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6632:6632 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6617:6619 Coq.Init.Logic <> :type_scope:x_'='_x not
R6616:6616 compcert.lib.Maps <> a var
R6620:6620 compcert.lib.Maps <> b var
R6627:6630 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R6626:6626 compcert.lib.Maps <> a var
R6631:6631 compcert.lib.Maps <> b var
ax 6647:6647 MAP t
R6654:6657 Coq.Init.Logic <> :type_scope:x_'->'_x not
ax 6676:6679 MAP init
R6701:6704 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6705:6705 compcert.lib.Maps MAP t defax
R6707:6707 compcert.lib.Maps <> A var
R6700:6700 compcert.lib.Maps <> A var
ax 6722:6724 MAP get
R6748:6751 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6755:6758 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6759:6759 compcert.lib.Maps <> A var
R6752:6752 compcert.lib.Maps MAP t defax
R6754:6754 compcert.lib.Maps <> A var
R6745:6747 compcert.lib.Maps MAP elt defax
ax 6774:6776 MAP set
R6800:6803 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6805:6808 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6812:6815 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6816:6816 compcert.lib.Maps MAP t defax
R6818:6818 compcert.lib.Maps <> A var
R6809:6809 compcert.lib.Maps MAP t defax
R6811:6811 compcert.lib.Maps <> A var
R6804:6804 compcert.lib.Maps <> A var
R6797:6799 compcert.lib.Maps MAP elt defax
ax 6829:6830 MAP gi
R6858:6860 compcert.lib.Maps MAP elt defax
R6867:6867 compcert.lib.Maps <> A var
R6885:6887 Coq.Init.Logic <> :type_scope:x_'='_x not
R6871:6873 compcert.lib.Maps MAP get defax
R6878:6881 compcert.lib.Maps MAP init defax
R6883:6883 compcert.lib.Maps <> x var
R6875:6875 compcert.lib.Maps <> i var
R6888:6888 compcert.lib.Maps <> x var
ax 6899:6901 MAP gss
R6929:6931 compcert.lib.Maps MAP elt defax
R6938:6938 compcert.lib.Maps <> A var
R6945:6945 compcert.lib.Maps MAP t defax
R6947:6947 compcert.lib.Maps <> A var
R6968:6970 Coq.Init.Logic <> :type_scope:x_'='_x not
R6951:6953 compcert.lib.Maps MAP get defax
R6958:6960 compcert.lib.Maps MAP set defax
R6966:6966 compcert.lib.Maps <> m var
R6964:6964 compcert.lib.Maps <> x var
R6962:6962 compcert.lib.Maps <> i var
R6955:6955 compcert.lib.Maps <> i var
R6971:6971 compcert.lib.Maps <> x var
ax 6982:6984 MAP gso
R7014:7016 compcert.lib.Maps MAP elt defax
R7023:7023 compcert.lib.Maps <> A var
R7030:7030 compcert.lib.Maps MAP t defax
R7032:7032 compcert.lib.Maps <> A var
R7046:7049 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7067:7069 Coq.Init.Logic <> :type_scope:x_'='_x not
R7050:7052 compcert.lib.Maps MAP get defax
R7057:7059 compcert.lib.Maps MAP set defax
R7065:7065 compcert.lib.Maps <> m var
R7063:7063 compcert.lib.Maps <> x var
R7061:7061 compcert.lib.Maps <> j var
R7054:7054 compcert.lib.Maps <> i var
R7070:7072 compcert.lib.Maps MAP get defax
R7076:7076 compcert.lib.Maps <> m var
R7074:7074 compcert.lib.Maps <> i var
R7041:7044 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R7040:7040 compcert.lib.Maps <> i var
R7045:7045 compcert.lib.Maps <> j var
ax 7087:7092 MAP gsspec
R7122:7124 compcert.lib.Maps MAP elt defax
R7131:7131 compcert.lib.Maps <> A var
R7138:7138 compcert.lib.Maps MAP t defax
R7140:7140 compcert.lib.Maps <> A var
R7165:7167 Coq.Init.Logic <> :type_scope:x_'='_x not
R7148:7150 compcert.lib.Maps MAP get defax
R7155:7157 compcert.lib.Maps MAP set defax
R7163:7163 compcert.lib.Maps <> m var
R7161:7161 compcert.lib.Maps <> x var
R7159:7159 compcert.lib.Maps <> j var
R7152:7152 compcert.lib.Maps <> i var
R7171:7176 compcert.lib.Maps MAP elt_eq defax
R7180:7180 compcert.lib.Maps <> j var
R7178:7178 compcert.lib.Maps <> i var
R7194:7196 compcert.lib.Maps MAP get defax
R7200:7200 compcert.lib.Maps <> m var
R7198:7198 compcert.lib.Maps <> i var
R7187:7187 compcert.lib.Maps <> x var
ax 7211:7217 MAP gsident
R7247:7249 compcert.lib.Maps MAP elt defax
R7256:7256 compcert.lib.Maps MAP t defax
R7258:7258 compcert.lib.Maps <> A var
R7287:7289 Coq.Init.Logic <> :type_scope:x_'='_x not
R7262:7264 compcert.lib.Maps MAP get defax
R7269:7271 compcert.lib.Maps MAP set defax
R7285:7285 compcert.lib.Maps <> m var
R7276:7278 compcert.lib.Maps MAP get defax
R7282:7282 compcert.lib.Maps <> m var
R7280:7280 compcert.lib.Maps <> i var
R7273:7273 compcert.lib.Maps <> i var
R7266:7266 compcert.lib.Maps <> j var
R7290:7292 compcert.lib.Maps MAP get defax
R7296:7296 compcert.lib.Maps <> m var
R7294:7294 compcert.lib.Maps <> j var
ax 7311:7313 MAP map
R7336:7336 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7343:7347 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7351:7354 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7355:7355 compcert.lib.Maps MAP t defax
R7357:7357 compcert.lib.Maps <> B var
R7348:7348 compcert.lib.Maps MAP t defax
R7350:7350 compcert.lib.Maps <> A var
R7338:7341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7342:7342 compcert.lib.Maps <> B var
R7337:7337 compcert.lib.Maps <> A var
ax 7368:7371 MAP gmap
R7402:7405 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7406:7406 compcert.lib.Maps <> B var
R7401:7401 compcert.lib.Maps <> A var
R7413:7415 compcert.lib.Maps MAP elt defax
R7422:7422 compcert.lib.Maps MAP t defax
R7424:7424 compcert.lib.Maps <> A var
R7447:7449 Coq.Init.Logic <> :type_scope:x_'='_x not
R7432:7434 compcert.lib.Maps MAP get defax
R7439:7441 compcert.lib.Maps MAP map defax
R7445:7445 compcert.lib.Maps <> m var
R7443:7443 compcert.lib.Maps <> f var
R7436:7436 compcert.lib.Maps <> i var
R7450:7450 compcert.lib.Maps <> f var
R7452:7454 compcert.lib.Maps MAP get defax
R7458:7458 compcert.lib.Maps <> m var
R7456:7456 compcert.lib.Maps <> i var
R7466:7468 compcert.lib.Maps MAP <> modtype
R7546:7549 compcert.lib.Maps TREE <> mod
mod 7537:7541 <> PTree
def 7565:7567 PTree elt
R7572:7579 Coq.Numbers.BinNums <> positive ind
def 7595:7600 PTree elt_eq
R7605:7607 compcert.lib.Coqlib <> peq def
ind 7623:7626 PTree tree
constr 7655:7658 PTree Leaf
constr 7675:7678 PTree Node
R7662:7665 compcert.lib.Maps <> tree ind
R7688:7691 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7700:7703 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7710:7713 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7714:7717 compcert.lib.Maps <> tree ind
R7704:7707 compcert.lib.Maps <> tree ind
R7692:7697 Coq.Init.Datatypes <> option ind
R7682:7685 compcert.lib.Maps <> tree ind
R7744:7747 compcert.lib.Maps PTree Leaf constr
R7775:7778 compcert.lib.Maps PTree Node constr
def 7794:7801 PTree tree_ind
R7820:7823 compcert.lib.Maps PTree tree ind
def 7850:7850 PTree t
R7855:7858 compcert.lib.Maps PTree tree ind
def 7875:7879 PTree empty
R7903:7903 compcert.lib.Maps PTree t def
R7905:7905 compcert.lib.Maps <> A var
R7896:7899 compcert.lib.Maps PTree Leaf constr
def 7921:7923 PTree get
R7941:7948 Coq.Numbers.BinNums <> positive ind
R7956:7956 compcert.lib.Maps PTree t def
R7958:7958 compcert.lib.Maps <> A var
R7974:7979 Coq.Init.Datatypes <> option ind
R7981:7981 compcert.lib.Maps <> A var
R7996:7996 compcert.lib.Maps <> m var
R8009:8012 compcert.lib.Maps PTree Leaf constr
R8017:8020 Coq.Init.Datatypes <> None constr
R8028:8031 compcert.lib.Maps PTree Node constr
R8056:8056 compcert.lib.Maps <> i var
R8073:8074 Coq.Numbers.BinNums <> xH constr
R8091:8092 Coq.Numbers.BinNums <> xO constr
R8100:8102 compcert.lib.Maps <> get def
R8119:8120 Coq.Numbers.BinNums <> xI constr
R8128:8130 compcert.lib.Maps <> get def
def 8170:8172 PTree set
R8190:8197 Coq.Numbers.BinNums <> positive ind
R8205:8205 compcert.lib.Maps <> A var
R8213:8213 compcert.lib.Maps PTree t def
R8215:8215 compcert.lib.Maps <> A var
R8231:8231 compcert.lib.Maps PTree t def
R8233:8233 compcert.lib.Maps <> A var
R8248:8248 compcert.lib.Maps <> m var
R8261:8264 compcert.lib.Maps PTree Leaf constr
R8283:8283 compcert.lib.Maps <> i var
R8300:8301 Coq.Numbers.BinNums <> xH constr
R8306:8309 compcert.lib.Maps PTree Node constr
R8325:8328 compcert.lib.Maps PTree Leaf constr
R8317:8320 Coq.Init.Datatypes <> Some constr
R8322:8322 compcert.lib.Maps <> v var
R8311:8314 compcert.lib.Maps PTree Leaf constr
R8340:8341 Coq.Numbers.BinNums <> xO constr
R8349:8352 compcert.lib.Maps PTree Node constr
R8375:8378 compcert.lib.Maps PTree Leaf constr
R8370:8373 Coq.Init.Datatypes <> None constr
R8355:8357 compcert.lib.Maps <> set def
R8364:8367 compcert.lib.Maps PTree Leaf constr
R8362:8362 compcert.lib.Maps <> v var
R8390:8391 Coq.Numbers.BinNums <> xI constr
R8399:8402 compcert.lib.Maps PTree Node constr
R8415:8417 compcert.lib.Maps <> set def
R8424:8427 compcert.lib.Maps PTree Leaf constr
R8422:8422 compcert.lib.Maps <> v var
R8409:8412 Coq.Init.Datatypes <> None constr
R8404:8407 compcert.lib.Maps PTree Leaf constr
R8448:8451 compcert.lib.Maps PTree Node constr
R8476:8476 compcert.lib.Maps <> i var
R8493:8494 Coq.Numbers.BinNums <> xH constr
R8499:8502 compcert.lib.Maps PTree Node constr
R8507:8510 Coq.Init.Datatypes <> Some constr
R8512:8512 compcert.lib.Maps <> v var
R8527:8528 Coq.Numbers.BinNums <> xO constr
R8536:8539 compcert.lib.Maps PTree Node constr
R8542:8544 compcert.lib.Maps <> set def
R8549:8549 compcert.lib.Maps <> v var
R8568:8569 Coq.Numbers.BinNums <> xI constr
R8577:8580 compcert.lib.Maps PTree Node constr
R8587:8589 compcert.lib.Maps <> set def
R8594:8594 compcert.lib.Maps <> v var
def 8632:8637 PTree remove
R8655:8662 Coq.Numbers.BinNums <> positive ind
R8670:8670 compcert.lib.Maps PTree t def
R8672:8672 compcert.lib.Maps <> A var
R8688:8688 compcert.lib.Maps PTree t def
R8690:8690 compcert.lib.Maps <> A var
R8705:8705 compcert.lib.Maps <> i var
R8718:8719 Coq.Numbers.BinNums <> xH constr
R8738:8738 compcert.lib.Maps <> m var
R8755:8758 compcert.lib.Maps PTree Leaf constr
R8763:8766 compcert.lib.Maps PTree Leaf constr
R8778:8781 compcert.lib.Maps PTree Node constr
R8783:8786 compcert.lib.Maps PTree Leaf constr
R8790:8793 compcert.lib.Maps PTree Leaf constr
R8798:8801 compcert.lib.Maps PTree Leaf constr
R8813:8816 compcert.lib.Maps PTree Node constr
R8827:8830 compcert.lib.Maps PTree Node constr
R8834:8837 Coq.Init.Datatypes <> None constr
R8859:8860 Coq.Numbers.BinNums <> xO constr
R8882:8882 compcert.lib.Maps <> m var
R8899:8902 compcert.lib.Maps PTree Leaf constr
R8907:8910 compcert.lib.Maps PTree Leaf constr
R8922:8925 compcert.lib.Maps PTree Node constr
R8929:8932 Coq.Init.Datatypes <> None constr
R8934:8937 compcert.lib.Maps PTree Leaf constr
R8960:8965 compcert.lib.Maps <> remove def
R8991:8994 compcert.lib.Maps PTree Leaf constr
R8999:9002 compcert.lib.Maps PTree Leaf constr
R9024:9027 compcert.lib.Maps PTree Node constr
R9037:9040 compcert.lib.Maps PTree Leaf constr
R9032:9035 Coq.Init.Datatypes <> None constr
R9068:9071 compcert.lib.Maps PTree Node constr
R9082:9085 compcert.lib.Maps PTree Node constr
R9088:9093 compcert.lib.Maps <> remove def
R9123:9124 Coq.Numbers.BinNums <> xI constr
R9146:9146 compcert.lib.Maps <> m var
R9163:9166 compcert.lib.Maps PTree Leaf constr
R9171:9174 compcert.lib.Maps PTree Leaf constr
R9186:9189 compcert.lib.Maps PTree Node constr
R9191:9194 compcert.lib.Maps PTree Leaf constr
R9196:9199 Coq.Init.Datatypes <> None constr
R9224:9229 compcert.lib.Maps <> remove def
R9255:9258 compcert.lib.Maps PTree Leaf constr
R9263:9266 compcert.lib.Maps PTree Leaf constr
R9288:9291 compcert.lib.Maps PTree Node constr
R9298:9301 Coq.Init.Datatypes <> None constr
R9293:9296 compcert.lib.Maps PTree Leaf constr
R9332:9335 compcert.lib.Maps PTree Node constr
R9346:9349 compcert.lib.Maps PTree Node constr
R9356:9361 compcert.lib.Maps <> remove def
prf 9401:9406 PTree gempty
R9434:9441 Coq.Numbers.BinNums <> positive ind
R9460:9462 Coq.Init.Logic <> :type_scope:x_'='_x not
R9445:9447 compcert.lib.Maps PTree get def
R9452:9456 compcert.lib.Maps PTree empty def
R9458:9458 compcert.lib.Maps <> A var
R9449:9449 compcert.lib.Maps <> i var
R9463:9466 Coq.Init.Datatypes <> None constr
prf 9526:9528 PTree gss
R9556:9563 Coq.Numbers.BinNums <> positive ind
R9570:9570 compcert.lib.Maps <> A var
R9577:9577 compcert.lib.Maps PTree t def
R9579:9579 compcert.lib.Maps <> A var
R9600:9602 Coq.Init.Logic <> :type_scope:x_'='_x not
R9583:9585 compcert.lib.Maps PTree get def
R9590:9592 compcert.lib.Maps PTree set def
R9598:9598 compcert.lib.Maps <> m var
R9596:9596 compcert.lib.Maps <> x var
R9594:9594 compcert.lib.Maps <> i var
R9587:9587 compcert.lib.Maps <> i var
R9603:9606 Coq.Init.Datatypes <> Some constr
R9608:9608 compcert.lib.Maps <> x var
prf 9680:9684 PTree gleaf
R9711:9718 Coq.Numbers.BinNums <> positive ind
R9740:9742 Coq.Init.Logic <> :type_scope:x_'='_x not
R9722:9724 compcert.lib.Maps PTree get def
R9736:9736 compcert.lib.Maps PTree t def
R9738:9738 compcert.lib.Maps <> A var
R9729:9732 compcert.lib.Maps PTree Leaf constr
R9726:9726 compcert.lib.Maps <> i var
R9743:9746 Coq.Init.Datatypes <> None constr
R9766:9771 compcert.lib.Maps PTree gempty thm
R9766:9771 compcert.lib.Maps PTree gempty thm
prf 9790:9792 PTree gso
R9822:9829 Coq.Numbers.BinNums <> positive ind
R9836:9836 compcert.lib.Maps <> A var
R9843:9843 compcert.lib.Maps PTree t def
R9845:9845 compcert.lib.Maps <> A var
R9859:9862 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9880:9882 Coq.Init.Logic <> :type_scope:x_'='_x not
R9863:9865 compcert.lib.Maps PTree get def
R9870:9872 compcert.lib.Maps PTree set def
R9878:9878 compcert.lib.Maps <> m var
R9876:9876 compcert.lib.Maps <> x var
R9874:9874 compcert.lib.Maps <> j var
R9867:9867 compcert.lib.Maps <> i var
R9883:9885 compcert.lib.Maps PTree get def
R9889:9889 compcert.lib.Maps <> m var
R9887:9887 compcert.lib.Maps <> i var
R9854:9857 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R9853:9853 compcert.lib.Maps <> i var
R9858:9858 compcert.lib.Maps <> j var
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
R9980:9984 compcert.lib.Maps PTree gleaf thm
prf 10043:10048 PTree gsspec
R10078:10085 Coq.Numbers.BinNums <> positive ind
R10092:10092 compcert.lib.Maps <> A var
R10099:10099 compcert.lib.Maps PTree t def
R10101:10101 compcert.lib.Maps <> A var
R10126:10128 Coq.Init.Logic <> :type_scope:x_'='_x not
R10109:10111 compcert.lib.Maps PTree get def
R10116:10118 compcert.lib.Maps PTree set def
R10124:10124 compcert.lib.Maps <> m var
R10122:10122 compcert.lib.Maps <> x var
R10120:10120 compcert.lib.Maps <> j var
R10113:10113 compcert.lib.Maps <> i var
R10132:10134 compcert.lib.Coqlib <> peq def
R10138:10138 compcert.lib.Maps <> j var
R10136:10136 compcert.lib.Maps <> i var
R10157:10159 compcert.lib.Maps PTree get def
R10163:10163 compcert.lib.Maps <> m var
R10161:10161 compcert.lib.Maps <> i var
R10145:10148 Coq.Init.Datatypes <> Some constr
R10150:10150 compcert.lib.Maps <> x var
R10201:10203 compcert.lib.Coqlib <> peq def
R10230:10232 compcert.lib.Maps PTree gss thm
R10242:10244 compcert.lib.Maps PTree gso thm
R10201:10203 compcert.lib.Coqlib <> peq def
R10230:10232 compcert.lib.Maps PTree gss thm
R10242:10244 compcert.lib.Maps PTree gso thm
prf 10273:10279 PTree gsident
R10307:10314 Coq.Numbers.BinNums <> positive ind
R10321:10321 compcert.lib.Maps PTree t def
R10323:10323 compcert.lib.Maps <> A var
R10330:10330 compcert.lib.Maps <> A var
R10354:10357 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10367:10369 Coq.Init.Logic <> :type_scope:x_'='_x not
R10358:10360 compcert.lib.Maps PTree set def
R10366:10366 compcert.lib.Maps <> m var
R10364:10364 compcert.lib.Maps <> v var
R10362:10362 compcert.lib.Maps <> i var
R10370:10370 compcert.lib.Maps <> m var
R10345:10347 Coq.Init.Logic <> :type_scope:x_'='_x not
R10338:10340 compcert.lib.Maps PTree get def
R10344:10344 compcert.lib.Maps <> m var
R10342:10342 compcert.lib.Maps <> i var
R10348:10351 Coq.Init.Datatypes <> Some constr
R10353:10353 compcert.lib.Maps <> v var
prf 10550:10553 PTree set2
R10581:10583 compcert.lib.Maps PTree elt def
R10590:10590 compcert.lib.Maps PTree t def
R10592:10592 compcert.lib.Maps <> A var
R10603:10603 compcert.lib.Maps <> A var
R10632:10634 Coq.Init.Logic <> :type_scope:x_'='_x not
R10611:10613 compcert.lib.Maps PTree set def
R10621:10623 compcert.lib.Maps PTree set def
R10630:10630 compcert.lib.Maps <> m var
R10627:10628 compcert.lib.Maps <> v1 var
R10625:10625 compcert.lib.Maps <> i var
R10617:10618 compcert.lib.Maps <> v2 var
R10615:10615 compcert.lib.Maps <> i var
R10635:10637 compcert.lib.Maps PTree set def
R10644:10644 compcert.lib.Maps <> m var
R10641:10642 compcert.lib.Maps <> v2 var
R10639:10639 compcert.lib.Maps <> i var
prf 10741:10745 PTree rleaf
R10772:10779 Coq.Numbers.BinNums <> positive ind
R10804:10806 Coq.Init.Logic <> :type_scope:x_'='_x not
R10783:10788 compcert.lib.Maps PTree remove def
R10800:10800 compcert.lib.Maps PTree t def
R10802:10802 compcert.lib.Maps <> A var
R10793:10796 compcert.lib.Maps PTree Leaf constr
R10790:10790 compcert.lib.Maps <> i var
R10807:10810 compcert.lib.Maps PTree Leaf constr
prf 10863:10865 PTree grs
R10893:10900 Coq.Numbers.BinNums <> positive ind
R10907:10907 compcert.lib.Maps PTree t def
R10909:10909 compcert.lib.Maps <> A var
R10931:10933 Coq.Init.Logic <> :type_scope:x_'='_x not
R10913:10915 compcert.lib.Maps PTree get def
R10920:10925 compcert.lib.Maps PTree remove def
R10929:10929 compcert.lib.Maps <> m var
R10927:10927 compcert.lib.Maps <> i var
R10917:10917 compcert.lib.Maps <> i var
R10934:10937 Coq.Init.Datatypes <> None constr
R11084:11088 compcert.lib.Maps PTree rleaf thm
R11084:11088 compcert.lib.Maps PTree rleaf thm
R11084:11088 compcert.lib.Maps PTree rleaf thm
R11145:11147 Coq.Init.Logic <> :type_scope:x_'='_x not
R11113:11115 compcert.lib.Maps PTree get def
R11120:11125 compcert.lib.Maps PTree remove def
R11130:11133 compcert.lib.Maps PTree Node constr
R11148:11151 Coq.Init.Datatypes <> None constr
R11145:11147 Coq.Init.Logic <> :type_scope:x_'='_x not
R11113:11115 compcert.lib.Maps PTree get def
R11120:11125 compcert.lib.Maps PTree remove def
R11130:11133 compcert.lib.Maps PTree Node constr
R11148:11151 Coq.Init.Datatypes <> None constr
R11173:11178 compcert.lib.Maps PTree remove def
R11183:11186 compcert.lib.Maps PTree Node constr
R11173:11178 compcert.lib.Maps PTree remove def
R11183:11186 compcert.lib.Maps PTree Node constr
R11342:11346 compcert.lib.Maps PTree rleaf thm
R11342:11346 compcert.lib.Maps PTree rleaf thm
R11342:11346 compcert.lib.Maps PTree rleaf thm
R11403:11405 Coq.Init.Logic <> :type_scope:x_'='_x not
R11371:11373 compcert.lib.Maps PTree get def
R11378:11383 compcert.lib.Maps PTree remove def
R11388:11391 compcert.lib.Maps PTree Node constr
R11406:11409 Coq.Init.Datatypes <> None constr
R11403:11405 Coq.Init.Logic <> :type_scope:x_'='_x not
R11371:11373 compcert.lib.Maps PTree get def
R11378:11383 compcert.lib.Maps PTree remove def
R11388:11391 compcert.lib.Maps PTree Node constr
R11406:11409 Coq.Init.Datatypes <> None constr
R11431:11436 compcert.lib.Maps PTree remove def
R11441:11444 compcert.lib.Maps PTree Node constr
R11431:11436 compcert.lib.Maps PTree remove def
R11441:11444 compcert.lib.Maps PTree Node constr
prf 11574:11576 PTree gro
R11606:11613 Coq.Numbers.BinNums <> positive ind
R11620:11620 compcert.lib.Maps PTree t def
R11622:11622 compcert.lib.Maps <> A var
R11636:11639 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11658:11660 Coq.Init.Logic <> :type_scope:x_'='_x not
R11640:11642 compcert.lib.Maps PTree get def
R11647:11652 compcert.lib.Maps PTree remove def
R11656:11656 compcert.lib.Maps <> m var
R11654:11654 compcert.lib.Maps <> j var
R11644:11644 compcert.lib.Maps <> i var
R11661:11663 compcert.lib.Maps PTree get def
R11667:11667 compcert.lib.Maps <> m var
R11665:11665 compcert.lib.Maps <> i var
R11631:11634 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R11630:11630 compcert.lib.Maps <> i var
R11635:11635 compcert.lib.Maps <> j var
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11749:11753 compcert.lib.Maps PTree rleaf thm
R11758:11759 Coq.Numbers.BinNums <> xI constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11787:11791 compcert.lib.Maps PTree rleaf thm
R11796:11797 Coq.Numbers.BinNums <> xO constr
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11825:11829 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R11964:11968 compcert.lib.Maps PTree rleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12003:12007 compcert.lib.Maps PTree gleaf thm
R12066:12068 Coq.Init.Logic <> :type_scope:x_'='_x not
R12031:12033 compcert.lib.Maps PTree get def
R12038:12043 compcert.lib.Maps PTree remove def
R12048:12051 compcert.lib.Maps PTree Node constr
R12069:12071 compcert.lib.Maps PTree get def
R12076:12079 compcert.lib.Maps PTree Node constr
R12116:12121 compcert.lib.Maps PTree remove def
R12126:12129 compcert.lib.Maps PTree Node constr
R12159:12163 compcert.lib.Maps PTree gleaf thm
R12066:12068 Coq.Init.Logic <> :type_scope:x_'='_x not
R12031:12033 compcert.lib.Maps PTree get def
R12038:12043 compcert.lib.Maps PTree remove def
R12048:12051 compcert.lib.Maps PTree Node constr
R12069:12071 compcert.lib.Maps PTree get def
R12076:12079 compcert.lib.Maps PTree Node constr
R12116:12121 compcert.lib.Maps PTree remove def
R12126:12129 compcert.lib.Maps PTree Node constr
R12159:12163 compcert.lib.Maps PTree gleaf thm
R12159:12163 compcert.lib.Maps PTree gleaf thm
R12159:12163 compcert.lib.Maps PTree gleaf thm
R12226:12231 compcert.lib.Maps PTree remove def
R12236:12239 compcert.lib.Maps PTree Node constr
R12277:12281 compcert.lib.Maps PTree gleaf thm
R12226:12231 compcert.lib.Maps PTree remove def
R12236:12239 compcert.lib.Maps PTree Node constr
R12277:12281 compcert.lib.Maps PTree gleaf thm
R12277:12281 compcert.lib.Maps PTree gleaf thm
R12277:12281 compcert.lib.Maps PTree gleaf thm
R12318:12323 compcert.lib.Maps PTree remove def
R12328:12331 compcert.lib.Maps PTree Node constr
R12368:12372 compcert.lib.Maps PTree gleaf thm
R12318:12323 compcert.lib.Maps PTree remove def
R12328:12331 compcert.lib.Maps PTree Node constr
R12368:12372 compcert.lib.Maps PTree gleaf thm
R12368:12372 compcert.lib.Maps PTree gleaf thm
R12368:12372 compcert.lib.Maps PTree gleaf thm
R12440:12442 Coq.Init.Logic <> :type_scope:x_'='_x not
R12404:12406 compcert.lib.Maps PTree get def
R12411:12416 compcert.lib.Maps PTree remove def
R12421:12424 compcert.lib.Maps PTree Node constr
R12443:12445 compcert.lib.Maps PTree get def
R12450:12453 compcert.lib.Maps PTree Node constr
R12491:12496 compcert.lib.Maps PTree remove def
R12501:12504 compcert.lib.Maps PTree Node constr
R12535:12539 compcert.lib.Maps PTree gleaf thm
R12440:12442 Coq.Init.Logic <> :type_scope:x_'='_x not
R12404:12406 compcert.lib.Maps PTree get def
R12411:12416 compcert.lib.Maps PTree remove def
R12421:12424 compcert.lib.Maps PTree Node constr
R12443:12445 compcert.lib.Maps PTree get def
R12450:12453 compcert.lib.Maps PTree Node constr
R12491:12496 compcert.lib.Maps PTree remove def
R12501:12504 compcert.lib.Maps PTree Node constr
R12535:12539 compcert.lib.Maps PTree gleaf thm
R12535:12539 compcert.lib.Maps PTree gleaf thm
R12535:12539 compcert.lib.Maps PTree gleaf thm
R12602:12607 compcert.lib.Maps PTree remove def
R12612:12615 compcert.lib.Maps PTree Node constr
R12652:12656 compcert.lib.Maps PTree gleaf thm
R12602:12607 compcert.lib.Maps PTree remove def
R12612:12615 compcert.lib.Maps PTree Node constr
R12652:12656 compcert.lib.Maps PTree gleaf thm
R12652:12656 compcert.lib.Maps PTree gleaf thm
R12693:12698 compcert.lib.Maps PTree remove def
R12703:12706 compcert.lib.Maps PTree Node constr
R12744:12748 compcert.lib.Maps PTree gleaf thm
R12693:12698 compcert.lib.Maps PTree remove def
R12703:12706 compcert.lib.Maps PTree Node constr
R12744:12748 compcert.lib.Maps PTree gleaf thm
R12744:12748 compcert.lib.Maps PTree gleaf thm
prf 12788:12793 PTree grspec
R12823:12825 compcert.lib.Maps PTree elt def
R12832:12832 compcert.lib.Maps PTree t def
R12834:12834 compcert.lib.Maps <> A var
R12860:12862 Coq.Init.Logic <> :type_scope:x_'='_x not
R12842:12844 compcert.lib.Maps PTree get def
R12849:12854 compcert.lib.Maps PTree remove def
R12858:12858 compcert.lib.Maps <> m var
R12856:12856 compcert.lib.Maps <> j var
R12846:12846 compcert.lib.Maps <> i var
R12866:12871 compcert.lib.Maps PTree elt_eq def
R12875:12875 compcert.lib.Maps <> j var
R12873:12873 compcert.lib.Maps <> i var
R12892:12894 compcert.lib.Maps PTree get def
R12898:12898 compcert.lib.Maps <> m var
R12896:12896 compcert.lib.Maps <> i var
R12882:12885 Coq.Init.Datatypes <> None constr
R12932:12937 compcert.lib.Maps PTree elt_eq def
R12932:12937 compcert.lib.Maps PTree elt_eq def
R12960:12962 compcert.lib.Maps PTree grs thm
R12960:12962 compcert.lib.Maps PTree grs thm
R12971:12973 compcert.lib.Maps PTree gro thm
R12971:12973 compcert.lib.Maps PTree gro thm
sec 13000:13015 PTree BOOLEAN_EQUALITY
var 13032:13032 PTree.BOOLEAN_EQUALITY A
var 13054:13057 PTree.BOOLEAN_EQUALITY beqA
R13061:13064 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13066:13069 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13070:13073 Coq.Init.Datatypes <> bool ind
R13065:13065 compcert.lib.Maps <> PTree.BOOLEAN_EQUALITY.A var
R13060:13060 compcert.lib.Maps <> PTree.BOOLEAN_EQUALITY.A var
def 13090:13095 PTree bempty
R13101:13101 compcert.lib.Maps PTree t def
R13103:13103 compcert.lib.Maps <> PTree.BOOLEAN_EQUALITY.A var
R13108:13111 Coq.Init.Datatypes <> bool ind
R13128:13128 compcert.lib.Maps <> m var
R13143:13146 compcert.lib.Maps PTree Leaf constr
R13151:13154 Coq.Init.Datatypes <> true constr
R13164:13167 compcert.lib.Maps PTree Node constr
R13171:13174 Coq.Init.Datatypes <> None constr
R13189:13192 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R13181:13186 compcert.lib.Maps <> bempty def
R13193:13198 compcert.lib.Maps <> bempty def
R13210:13213 compcert.lib.Maps PTree Node constr
R13218:13221 Coq.Init.Datatypes <> Some constr
R13231:13235 Coq.Init.Datatypes <> false constr
def 13262:13264 PTree beq
R13274:13274 compcert.lib.Maps PTree t def
R13276:13276 compcert.lib.Maps <> PTree.BOOLEAN_EQUALITY.A var
R13293:13296 Coq.Init.Datatypes <> bool ind
R13317:13318 compcert.lib.Maps <> m2 var
R13313:13314 compcert.lib.Maps <> m1 var
R13333:13336 compcert.lib.Maps PTree Leaf constr
R13344:13349 compcert.lib.Maps PTree bempty def
R13351:13352 compcert.lib.Maps <> m2 var
R13365:13368 compcert.lib.Maps PTree Leaf constr
R13373:13378 compcert.lib.Maps PTree bempty def
R13380:13381 compcert.lib.Maps <> m1 var
R13391:13394 compcert.lib.Maps PTree Node constr
R13406:13409 compcert.lib.Maps PTree Node constr
R13587:13590 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R13564:13577 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R13463:13466 Coq.Init.Datatypes <> None constr
R13469:13472 Coq.Init.Datatypes <> None constr
R13477:13480 Coq.Init.Datatypes <> true constr
R13494:13497 Coq.Init.Datatypes <> Some constr
R13503:13506 Coq.Init.Datatypes <> Some constr
R13514:13517 compcert.lib.Maps <> PTree.BOOLEAN_EQUALITY.beqA var
R13545:13549 Coq.Init.Datatypes <> false constr
R13578:13580 compcert.lib.Maps <> beq def
R13591:13593 compcert.lib.Maps <> beq def
prf 13623:13636 PTree bempty_correct
R13670:13675 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R13700:13700 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R13663:13665 Coq.Init.Logic <> :type_scope:x_'='_x not
R13655:13660 compcert.lib.Maps PTree bempty def
R13662:13662 compcert.lib.Maps <> m var
R13666:13669 Coq.Init.Datatypes <> true constr
R13693:13695 Coq.Init.Logic <> :type_scope:x_'='_x not
R13686:13688 compcert.lib.Maps PTree get def
R13692:13692 compcert.lib.Maps <> m var
R13690:13690 compcert.lib.Maps <> x var
R13696:13699 Coq.Init.Datatypes <> None constr
R13767:13771 compcert.lib.Maps PTree gleaf thm
R13767:13771 compcert.lib.Maps PTree gleaf thm
R13851:13852 Coq.Numbers.BinNums <> xH constr
R13851:13852 Coq.Numbers.BinNums <> xH constr
R13891:13899 Coq.Init.Datatypes <> andb_prop thm
R13891:13899 Coq.Init.Datatypes <> andb_prop thm
R13992:14006 Coq.Init.Datatypes <> andb_true_intro thm
R13992:14006 Coq.Init.Datatypes <> andb_true_intro thm
R14052:14053 Coq.Numbers.BinNums <> xO constr
R14052:14053 Coq.Numbers.BinNums <> xO constr
R14096:14097 Coq.Numbers.BinNums <> xI constr
R14096:14097 Coq.Numbers.BinNums <> xI constr
prf 14124:14134 PTree beq_correct
R14179:14190 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14353:14353 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14172:14174 Coq.Init.Logic <> :type_scope:x_'='_x not
R14163:14165 compcert.lib.Maps PTree beq def
R14170:14171 compcert.lib.Maps <> m2 var
R14167:14168 compcert.lib.Maps <> m1 var
R14175:14178 Coq.Init.Datatypes <> true constr
R14202:14204 compcert.lib.Maps PTree elt def
R14231:14233 compcert.lib.Maps PTree get def
R14237:14238 compcert.lib.Maps <> m2 var
R14235:14235 compcert.lib.Maps <> x var
R14221:14223 compcert.lib.Maps PTree get def
R14227:14228 compcert.lib.Maps <> m1 var
R14225:14225 compcert.lib.Maps <> x var
R14254:14257 Coq.Init.Datatypes <> None constr
R14260:14263 Coq.Init.Datatypes <> None constr
R14268:14271 Coq.Init.Logic <> True ind
R14282:14285 Coq.Init.Datatypes <> Some constr
R14291:14294 Coq.Init.Datatypes <> Some constr
R14312:14314 Coq.Init.Logic <> :type_scope:x_'='_x not
R14302:14305 compcert.lib.Maps <> PTree.BOOLEAN_EQUALITY.beqA var
R14315:14318 Coq.Init.Datatypes <> true constr
R14337:14341 Coq.Init.Logic <> False ind
R14416:14429 compcert.lib.Maps PTree bempty_correct thm
R14416:14429 compcert.lib.Maps PTree bempty_correct thm
R14416:14429 compcert.lib.Maps PTree bempty_correct thm
R14461:14465 compcert.lib.Maps PTree gleaf thm
R14461:14465 compcert.lib.Maps PTree gleaf thm
R14461:14465 compcert.lib.Maps PTree gleaf thm
R14517:14521 compcert.lib.Maps PTree gleaf thm
R14517:14521 compcert.lib.Maps PTree gleaf thm
R14517:14521 compcert.lib.Maps PTree gleaf thm
R14534:14536 compcert.lib.Maps PTree get def
R14534:14536 compcert.lib.Maps PTree get def
R14586:14588 compcert.lib.Maps PTree beq def
R14599:14612 compcert.lib.Maps PTree bempty_correct thm
R14599:14612 compcert.lib.Maps PTree bempty_correct thm
R14599:14612 compcert.lib.Maps PTree bempty_correct thm
R14657:14661 compcert.lib.Maps PTree gleaf thm
R14657:14661 compcert.lib.Maps PTree gleaf thm
R14657:14661 compcert.lib.Maps PTree gleaf thm
R14704:14708 compcert.lib.Maps PTree gleaf thm
R14704:14708 compcert.lib.Maps PTree gleaf thm
R14704:14708 compcert.lib.Maps PTree gleaf thm
R14721:14723 compcert.lib.Maps PTree get def
R14728:14731 compcert.lib.Maps PTree Node constr
R14721:14723 compcert.lib.Maps PTree get def
R14728:14731 compcert.lib.Maps PTree Node constr
R14805:14813 Coq.Init.Datatypes <> andb_prop thm
R14805:14813 Coq.Init.Datatypes <> andb_prop thm
R14833:14841 Coq.Init.Datatypes <> andb_prop thm
R14833:14841 Coq.Init.Datatypes <> andb_prop thm
R15026:15040 Coq.Init.Datatypes <> andb_true_intro thm
R15026:15040 Coq.Init.Datatypes <> andb_true_intro thm
R15056:15070 Coq.Init.Datatypes <> andb_true_intro thm
R15056:15070 Coq.Init.Datatypes <> andb_true_intro thm
R15104:15105 Coq.Numbers.BinNums <> xH constr
R15104:15105 Coq.Numbers.BinNums <> xH constr
R15190:15191 Coq.Numbers.BinNums <> xO constr
R15190:15191 Coq.Numbers.BinNums <> xO constr
R15240:15241 Coq.Numbers.BinNums <> xI constr
R15240:15241 Coq.Numbers.BinNums <> xI constr
R15264:15279 compcert.lib.Maps PTree.BOOLEAN_EQUALITY <> sec
def 15294:15304 PTree prev_append
R15312:15319 Coq.Numbers.BinNums <> positive ind
R15335:15342 Coq.Numbers.BinNums <> positive ind
R15357:15357 compcert.lib.Maps <> i var
R15372:15373 Coq.Numbers.BinNums <> xH constr
R15378:15378 compcert.lib.Maps <> j var
R15388:15389 Coq.Numbers.BinNums <> xI constr
R15397:15407 compcert.lib.Maps <> prev_append def
R15413:15414 Coq.Numbers.BinNums <> xI constr
R15416:15416 compcert.lib.Maps <> j var
R15427:15428 Coq.Numbers.BinNums <> xO constr
R15436:15446 compcert.lib.Maps <> prev_append def
R15452:15453 Coq.Numbers.BinNums <> xO constr
R15455:15455 compcert.lib.Maps <> j var
def 15481:15484 PTree prev
R15490:15497 Coq.Numbers.BinNums <> positive ind
R15502:15509 Coq.Numbers.BinNums <> positive ind
R15518:15528 compcert.lib.Maps PTree prev_append def
R15532:15533 Coq.Numbers.BinNums <> xH constr
R15530:15530 compcert.lib.Maps <> i var
prf 15545:15560 PTree prev_append_prev
R15593:15595 Coq.Init.Logic <> :type_scope:x_'='_x not
R15571:15574 compcert.lib.Maps PTree prev def
R15577:15587 compcert.lib.Maps PTree prev_append def
R15591:15591 compcert.lib.Maps <> j var
R15589:15589 compcert.lib.Maps <> i var
R15596:15606 compcert.lib.Maps PTree prev_append def
R15610:15610 compcert.lib.Maps <> i var
R15608:15608 compcert.lib.Maps <> j var
R15643:15646 compcert.lib.Maps PTree prev def
prf 15806:15820 PTree prev_involutive
R15843:15845 Coq.Init.Logic <> :type_scope:x_'='_x not
R15830:15833 compcert.lib.Maps PTree prev def
R15836:15839 compcert.lib.Maps PTree prev def
R15841:15841 compcert.lib.Maps <> i var
R15846:15846 compcert.lib.Maps <> i var
R15858:15873 compcert.lib.Maps PTree prev_append_prev thm
R15877:15878 Coq.Numbers.BinNums <> xH constr
prf 15891:15905 PTree prev_append_inj
R15954:15957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15959:15961 Coq.Init.Logic <> :type_scope:x_'='_x not
R15958:15958 compcert.lib.Maps <> j var
R15962:15963 compcert.lib.Maps <> j' var
R15935:15937 Coq.Init.Logic <> :type_scope:x_'='_x not
R15920:15930 compcert.lib.Maps PTree prev_append def
R15934:15934 compcert.lib.Maps <> j var
R15932:15932 compcert.lib.Maps <> i var
R15938:15948 compcert.lib.Maps PTree prev_append def
R15952:15953 compcert.lib.Maps <> j' var
R15950:15950 compcert.lib.Maps <> i var
def 16106:16109 PTree xmap
R16137:16140 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16142:16145 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16146:16146 compcert.lib.Maps <> B var
R16141:16141 compcert.lib.Maps <> A var
R16129:16136 Coq.Numbers.BinNums <> positive ind
R16154:16154 compcert.lib.Maps PTree t def
R16156:16156 compcert.lib.Maps <> A var
R16164:16171 Coq.Numbers.BinNums <> positive ind
R16200:16200 compcert.lib.Maps PTree t def
R16202:16202 compcert.lib.Maps <> B var
R16219:16219 compcert.lib.Maps <> m var
R16234:16237 compcert.lib.Maps PTree Leaf constr
R16242:16245 compcert.lib.Maps PTree Leaf constr
R16255:16258 compcert.lib.Maps PTree Node constr
R16269:16272 compcert.lib.Maps PTree Node constr
R16411:16414 compcert.lib.Maps <> xmap def
R16421:16422 Coq.Numbers.BinNums <> xI constr
R16424:16424 compcert.lib.Maps <> i var
R16416:16416 compcert.lib.Maps <> f var
R16333:16336 Coq.Init.Datatypes <> None constr
R16341:16344 Coq.Init.Datatypes <> None constr
R16348:16351 Coq.Init.Datatypes <> Some constr
R16358:16361 Coq.Init.Datatypes <> Some constr
R16364:16364 compcert.lib.Maps <> f var
R16367:16370 compcert.lib.Maps PTree prev def
R16372:16372 compcert.lib.Maps <> i var
R16275:16278 compcert.lib.Maps <> xmap def
R16285:16286 Coq.Numbers.BinNums <> xO constr
R16288:16288 compcert.lib.Maps <> i var
R16280:16280 compcert.lib.Maps <> f var
def 16453:16455 PTree map
R16483:16486 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16488:16491 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16492:16492 compcert.lib.Maps <> B var
R16487:16487 compcert.lib.Maps <> A var
R16475:16482 Coq.Numbers.BinNums <> positive ind
R16500:16503 compcert.lib.Maps PTree xmap def
R16509:16510 Coq.Numbers.BinNums <> xH constr
R16507:16507 compcert.lib.Maps <> m var
R16505:16505 compcert.lib.Maps <> f var
prf 16524:16528 PTree xgmap
R16568:16571 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16573:16576 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16577:16577 compcert.lib.Maps <> B var
R16572:16572 compcert.lib.Maps <> A var
R16560:16567 Coq.Numbers.BinNums <> positive ind
R16587:16594 Coq.Numbers.BinNums <> positive ind
R16601:16601 compcert.lib.Maps PTree t def
R16603:16603 compcert.lib.Maps <> A var
R16631:16633 Coq.Init.Logic <> :type_scope:x_'='_x not
R16613:16615 compcert.lib.Maps PTree get def
R16620:16623 compcert.lib.Maps PTree xmap def
R16629:16629 compcert.lib.Maps <> j var
R16627:16627 compcert.lib.Maps <> m var
R16625:16625 compcert.lib.Maps <> f var
R16617:16617 compcert.lib.Maps <> i var
R16634:16643 compcert.lib.Coqlib <> option_map def
R16675:16677 compcert.lib.Maps PTree get def
R16681:16681 compcert.lib.Maps <> m var
R16679:16679 compcert.lib.Maps <> i var
R16646:16646 compcert.lib.Maps <> f var
R16649:16652 compcert.lib.Maps PTree prev def
R16655:16665 compcert.lib.Maps PTree prev_append def
R16669:16669 compcert.lib.Maps <> j var
R16667:16667 compcert.lib.Maps <> i var
prf 16768:16771 PTree gmap
R16809:16812 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16814:16817 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16818:16818 compcert.lib.Maps <> B var
R16813:16813 compcert.lib.Maps <> A var
R16801:16808 Coq.Numbers.BinNums <> positive ind
R16825:16832 Coq.Numbers.BinNums <> positive ind
R16839:16839 compcert.lib.Maps PTree t def
R16841:16841 compcert.lib.Maps <> A var
R16864:16866 Coq.Init.Logic <> :type_scope:x_'='_x not
R16849:16851 compcert.lib.Maps PTree get def
R16856:16858 compcert.lib.Maps PTree map def
R16862:16862 compcert.lib.Maps <> m var
R16860:16860 compcert.lib.Maps <> f var
R16853:16853 compcert.lib.Maps <> i var
R16867:16876 compcert.lib.Coqlib <> option_map def
R16885:16887 compcert.lib.Maps PTree get def
R16891:16891 compcert.lib.Maps <> m var
R16889:16889 compcert.lib.Maps <> i var
R16879:16879 compcert.lib.Maps <> f var
R16881:16881 compcert.lib.Maps <> i var
R16937:16939 compcert.lib.Maps PTree map def
R16954:16958 compcert.lib.Maps PTree xgmap thm
R16954:16958 compcert.lib.Maps PTree xgmap thm
R16954:16958 compcert.lib.Maps PTree xgmap thm
R16984:16998 compcert.lib.Maps PTree prev_involutive thm
R16984:16998 compcert.lib.Maps PTree prev_involutive thm
def 17023:17026 PTree map1
R17045:17048 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17049:17049 compcert.lib.Maps <> B var
R17044:17044 compcert.lib.Maps <> A var
R17056:17056 compcert.lib.Maps PTree t def
R17058:17058 compcert.lib.Maps <> A var
R17074:17074 compcert.lib.Maps PTree t def
R17076:17076 compcert.lib.Maps <> B var
R17091:17091 compcert.lib.Maps <> m var
R17104:17107 compcert.lib.Maps PTree Leaf constr
R17112:17115 compcert.lib.Maps PTree Leaf constr
R17123:17126 compcert.lib.Maps PTree Node constr
R17137:17140 compcert.lib.Maps PTree Node constr
R17171:17174 compcert.lib.Maps <> map1 def
R17176:17176 compcert.lib.Maps <> f var
R17154:17163 compcert.lib.Coqlib <> option_map def
R17165:17165 compcert.lib.Maps <> f var
R17143:17146 compcert.lib.Maps <> map1 def
R17148:17148 compcert.lib.Maps <> f var
prf 17201:17205 PTree gmap1
R17236:17239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17240:17240 compcert.lib.Maps <> B var
R17235:17235 compcert.lib.Maps <> A var
R17247:17249 compcert.lib.Maps PTree elt def
R17256:17256 compcert.lib.Maps PTree t def
R17258:17258 compcert.lib.Maps <> A var
R17282:17284 Coq.Init.Logic <> :type_scope:x_'='_x not
R17266:17268 compcert.lib.Maps PTree get def
R17273:17276 compcert.lib.Maps PTree map1 def
R17280:17280 compcert.lib.Maps <> m var
R17278:17278 compcert.lib.Maps <> f var
R17270:17270 compcert.lib.Maps <> i var
R17285:17294 compcert.lib.Coqlib <> option_map def
R17299:17301 compcert.lib.Maps PTree get def
R17305:17305 compcert.lib.Maps <> m var
R17303:17303 compcert.lib.Maps <> i var
R17296:17296 compcert.lib.Maps <> f var
def 17389:17393 PTree Node'
R17409:17409 compcert.lib.Maps PTree t def
R17411:17411 compcert.lib.Maps <> A var
R17418:17423 Coq.Init.Datatypes <> option ind
R17425:17425 compcert.lib.Maps <> A var
R17432:17432 compcert.lib.Maps PTree t def
R17434:17434 compcert.lib.Maps <> A var
R17438:17438 compcert.lib.Maps PTree t def
R17440:17440 compcert.lib.Maps <> A var
R17461:17461 compcert.lib.Maps <> r var
R17458:17458 compcert.lib.Maps <> x var
R17455:17455 compcert.lib.Maps <> l var
R17474:17477 compcert.lib.Maps PTree Leaf constr
R17480:17483 Coq.Init.Datatypes <> None constr
R17486:17489 compcert.lib.Maps PTree Leaf constr
R17494:17497 compcert.lib.Maps PTree Leaf constr
R17516:17519 compcert.lib.Maps PTree Node constr
R17525:17525 compcert.lib.Maps <> r var
R17523:17523 compcert.lib.Maps <> x var
R17521:17521 compcert.lib.Maps <> l var
prf 17545:17550 PTree gnode'
R17580:17580 compcert.lib.Maps PTree t def
R17582:17582 compcert.lib.Maps <> A var
R17589:17594 Coq.Init.Datatypes <> option ind
R17596:17596 compcert.lib.Maps <> A var
R17603:17610 Coq.Numbers.BinNums <> positive ind
R17637:17639 Coq.Init.Logic <> :type_scope:x_'='_x not
R17618:17620 compcert.lib.Maps PTree get def
R17625:17629 compcert.lib.Maps PTree Node' def
R17635:17635 compcert.lib.Maps <> r var
R17633:17633 compcert.lib.Maps <> x var
R17631:17631 compcert.lib.Maps <> l var
R17622:17622 compcert.lib.Maps <> i var
R17640:17642 compcert.lib.Maps PTree get def
R17647:17650 compcert.lib.Maps PTree Node constr
R17656:17656 compcert.lib.Maps <> r var
R17654:17654 compcert.lib.Maps <> x var
R17652:17652 compcert.lib.Maps <> l var
R17644:17644 compcert.lib.Maps <> i var
R17688:17692 compcert.lib.Maps PTree Node' def
R17778:17782 compcert.lib.Maps PTree gleaf thm
R17778:17782 compcert.lib.Maps PTree gleaf thm
R17778:17782 compcert.lib.Maps PTree gleaf thm
R17778:17782 compcert.lib.Maps PTree gleaf thm
R17778:17782 compcert.lib.Maps PTree gleaf thm
def 17810:17816 PTree filter1
R17836:17839 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17840:17843 Coq.Init.Datatypes <> bool ind
R17835:17835 compcert.lib.Maps <> A var
R17850:17850 compcert.lib.Maps PTree t def
R17852:17852 compcert.lib.Maps <> A var
R17868:17868 compcert.lib.Maps PTree t def
R17870:17870 compcert.lib.Maps <> A var
R17885:17885 compcert.lib.Maps <> m var
R17898:17901 compcert.lib.Maps PTree Leaf constr
R17906:17909 compcert.lib.Maps PTree Leaf constr
R17917:17920 compcert.lib.Maps PTree Node constr
R17962:17965 Coq.Init.Datatypes <> None constr
R17970:17973 Coq.Init.Datatypes <> None constr
R17977:17980 Coq.Init.Datatypes <> Some constr
R17990:17993 compcert.lib.Maps <> pred var
R18009:18012 Coq.Init.Datatypes <> None constr
R18029:18033 compcert.lib.Maps PTree Node' def
R18056:18062 compcert.lib.Maps <> filter1 def
R18064:18067 compcert.lib.Maps <> pred var
R18052:18053 compcert.lib.Maps <> o' var
R18036:18042 compcert.lib.Maps <> filter1 def
R18044:18047 compcert.lib.Maps <> pred var
prf 18092:18099 PTree gfilter1
R18131:18134 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18135:18138 Coq.Init.Datatypes <> bool ind
R18130:18130 compcert.lib.Maps <> A var
R18145:18147 compcert.lib.Maps PTree elt def
R18154:18154 compcert.lib.Maps PTree t def
R18156:18156 compcert.lib.Maps <> A var
R18186:18192 Coq.Init.Logic <> :type_scope:x_'='_x not
R18164:18166 compcert.lib.Maps PTree get def
R18171:18177 compcert.lib.Maps PTree filter1 def
R18184:18184 compcert.lib.Maps <> m var
R18179:18182 compcert.lib.Maps <> pred var
R18168:18168 compcert.lib.Maps <> i var
R18199:18201 compcert.lib.Maps PTree get def
R18205:18205 compcert.lib.Maps <> m var
R18203:18203 compcert.lib.Maps <> i var
R18212:18215 Coq.Init.Datatypes <> None constr
R18220:18223 Coq.Init.Datatypes <> None constr
R18227:18230 Coq.Init.Datatypes <> Some constr
R18240:18243 compcert.lib.Maps <> pred var
R18264:18267 Coq.Init.Datatypes <> None constr
R18252:18255 Coq.Init.Datatypes <> Some constr
R18355:18359 compcert.lib.Maps PTree gleaf thm
R18355:18359 compcert.lib.Maps PTree gleaf thm
R18355:18359 compcert.lib.Maps PTree gleaf thm
R18380:18385 compcert.lib.Maps PTree gnode' thm
R18380:18385 compcert.lib.Maps PTree gnode' thm
R18380:18385 compcert.lib.Maps PTree gnode' thm
sec 18449:18455 PTree COMBINE
var 18471:18471 PTree.COMBINE A
var 18473:18473 PTree.COMBINE B
var 18475:18475 PTree.COMBINE C
var 18495:18495 PTree.COMBINE f
R18506:18509 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18518:18521 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18522:18527 Coq.Init.Datatypes <> option ind
R18529:18529 compcert.lib.Maps <> PTree.COMBINE.C var
R18510:18515 Coq.Init.Datatypes <> option ind
R18517:18517 compcert.lib.Maps <> PTree.COMBINE.B var
R18498:18503 Coq.Init.Datatypes <> option ind
R18505:18505 compcert.lib.Maps <> PTree.COMBINE.A var
var 18545:18555 PTree.COMBINE f_none_none
R18569:18571 Coq.Init.Logic <> :type_scope:x_'='_x not
R18558:18558 compcert.lib.Maps <> PTree.COMBINE.f var
R18565:18568 Coq.Init.Datatypes <> None constr
R18560:18563 Coq.Init.Datatypes <> None constr
R18572:18575 Coq.Init.Datatypes <> None constr
def 18590:18599 PTree xcombine_l
R18606:18606 compcert.lib.Maps PTree t def
R18608:18608 compcert.lib.Maps <> PTree.COMBINE.A var
R18624:18624 compcert.lib.Maps PTree t def
R18626:18626 compcert.lib.Maps <> PTree.COMBINE.C var
R18643:18643 compcert.lib.Maps <> m var
R18658:18661 compcert.lib.Maps PTree Leaf constr
R18666:18669 compcert.lib.Maps PTree Leaf constr
R18679:18682 compcert.lib.Maps PTree Node constr
R18693:18697 compcert.lib.Maps PTree Node' def
R18726:18735 compcert.lib.Maps <> xcombine_l def
R18715:18715 compcert.lib.Maps <> PTree.COMBINE.f var
R18719:18722 Coq.Init.Datatypes <> None constr
R18700:18709 compcert.lib.Maps <> xcombine_l def
prf 18760:18770 PTree xgcombine_l
R18795:18795 compcert.lib.Maps PTree t def
R18797:18797 compcert.lib.Maps <> PTree.COMBINE.A var
R18805:18812 Coq.Numbers.BinNums <> positive ind
R18846:18848 Coq.Init.Logic <> :type_scope:x_'='_x not
R18826:18828 compcert.lib.Maps PTree get def
R18833:18842 compcert.lib.Maps PTree xcombine_l def
R18844:18844 compcert.lib.Maps <> m var
R18830:18830 compcert.lib.Maps <> i var
R18849:18849 compcert.lib.Maps <> PTree.COMBINE.f var
R18861:18864 Coq.Init.Datatypes <> None constr
R18852:18854 compcert.lib.Maps PTree get def
R18858:18858 compcert.lib.Maps <> m var
R18856:18856 compcert.lib.Maps <> i var
R18933:18937 compcert.lib.Maps PTree gleaf thm
R18933:18937 compcert.lib.Maps PTree gleaf thm
R18933:18937 compcert.lib.Maps PTree gleaf thm
R18933:18937 compcert.lib.Maps PTree gleaf thm
R18933:18937 compcert.lib.Maps PTree gleaf thm
R18933:18937 compcert.lib.Maps PTree gleaf thm
R18960:18965 compcert.lib.Maps PTree gnode' thm
R18960:18965 compcert.lib.Maps PTree gnode' thm
R18960:18965 compcert.lib.Maps PTree gnode' thm
def 19014:19023 PTree xcombine_r
R19030:19030 compcert.lib.Maps PTree t def
R19032:19032 compcert.lib.Maps <> PTree.COMBINE.B var
R19048:19048 compcert.lib.Maps PTree t def
R19050:19050 compcert.lib.Maps <> PTree.COMBINE.C var
R19067:19067 compcert.lib.Maps <> m var
R19082:19085 compcert.lib.Maps PTree Leaf constr
R19090:19093 compcert.lib.Maps PTree Leaf constr
R19103:19106 compcert.lib.Maps PTree Node constr
R19117:19121 compcert.lib.Maps PTree Node' def
R19150:19159 compcert.lib.Maps <> xcombine_r def
R19139:19139 compcert.lib.Maps <> PTree.COMBINE.f var
R19141:19144 Coq.Init.Datatypes <> None constr
R19124:19133 compcert.lib.Maps <> xcombine_r def
prf 19184:19194 PTree xgcombine_r
R19219:19219 compcert.lib.Maps PTree t def
R19221:19221 compcert.lib.Maps <> PTree.COMBINE.B var
R19229:19236 Coq.Numbers.BinNums <> positive ind
R19270:19272 Coq.Init.Logic <> :type_scope:x_'='_x not
R19250:19252 compcert.lib.Maps PTree get def
R19257:19266 compcert.lib.Maps PTree xcombine_r def
R19268:19268 compcert.lib.Maps <> m var
R19254:19254 compcert.lib.Maps <> i var
R19273:19273 compcert.lib.Maps <> PTree.COMBINE.f var
R19281:19283 compcert.lib.Maps PTree get def
R19287:19287 compcert.lib.Maps <> m var
R19285:19285 compcert.lib.Maps <> i var
R19275:19278 Coq.Init.Datatypes <> None constr
R19357:19361 compcert.lib.Maps PTree gleaf thm
R19357:19361 compcert.lib.Maps PTree gleaf thm
R19357:19361 compcert.lib.Maps PTree gleaf thm
R19357:19361 compcert.lib.Maps PTree gleaf thm
R19357:19361 compcert.lib.Maps PTree gleaf thm
R19357:19361 compcert.lib.Maps PTree gleaf thm
R19384:19389 compcert.lib.Maps PTree gnode' thm
R19384:19389 compcert.lib.Maps PTree gnode' thm
R19384:19389 compcert.lib.Maps PTree gnode' thm
def 19438:19444 PTree combine
R19451:19451 compcert.lib.Maps PTree t def
R19453:19453 compcert.lib.Maps <> PTree.COMBINE.A var
R19461:19461 compcert.lib.Maps PTree t def
R19463:19463 compcert.lib.Maps <> PTree.COMBINE.B var
R19480:19480 compcert.lib.Maps PTree t def
R19482:19482 compcert.lib.Maps <> PTree.COMBINE.C var
R19497:19498 compcert.lib.Maps <> m1 var
R19511:19514 compcert.lib.Maps PTree Leaf constr
R19519:19528 compcert.lib.Maps PTree xcombine_r def
R19530:19531 compcert.lib.Maps <> m2 var
R19539:19542 compcert.lib.Maps PTree Node constr
R19570:19571 compcert.lib.Maps <> m2 var
R19588:19591 compcert.lib.Maps PTree Leaf constr
R19596:19605 compcert.lib.Maps PTree xcombine_l def
R19607:19608 compcert.lib.Maps <> m1 var
R19620:19623 compcert.lib.Maps PTree Node constr
R19637:19641 compcert.lib.Maps PTree Node' def
R19670:19676 compcert.lib.Maps <> combine def
R19660:19660 compcert.lib.Maps <> PTree.COMBINE.f var
R19644:19650 compcert.lib.Maps <> combine def
prf 19717:19724 PTree gcombine
R19745:19745 compcert.lib.Maps PTree t def
R19747:19747 compcert.lib.Maps <> PTree.COMBINE.A var
R19755:19755 compcert.lib.Maps PTree t def
R19757:19757 compcert.lib.Maps <> PTree.COMBINE.B var
R19764:19771 Coq.Numbers.BinNums <> positive ind
R19802:19804 Coq.Init.Logic <> :type_scope:x_'='_x not
R19781:19783 compcert.lib.Maps PTree get def
R19788:19794 compcert.lib.Maps PTree combine def
R19799:19800 compcert.lib.Maps <> m2 var
R19796:19797 compcert.lib.Maps <> m1 var
R19785:19785 compcert.lib.Maps <> i var
R19805:19805 compcert.lib.Maps <> PTree.COMBINE.f var
R19819:19821 compcert.lib.Maps PTree get def
R19825:19826 compcert.lib.Maps <> m2 var
R19823:19823 compcert.lib.Maps <> i var
R19808:19810 compcert.lib.Maps PTree get def
R19814:19815 compcert.lib.Maps <> m1 var
R19812:19812 compcert.lib.Maps <> i var
R19884:19888 compcert.lib.Maps PTree gleaf thm
R19884:19888 compcert.lib.Maps PTree gleaf thm
R19884:19888 compcert.lib.Maps PTree gleaf thm
R19897:19907 compcert.lib.Maps PTree xgcombine_r thm
R19897:19907 compcert.lib.Maps PTree xgcombine_r thm
R19946:19950 compcert.lib.Maps PTree gleaf thm
R19946:19950 compcert.lib.Maps PTree gleaf thm
R19946:19950 compcert.lib.Maps PTree gleaf thm
R19964:19974 compcert.lib.Maps PTree xgcombine_l thm
R19964:19974 compcert.lib.Maps PTree xgcombine_l thm
R19964:19974 compcert.lib.Maps PTree xgcombine_l thm
R20002:20007 compcert.lib.Maps PTree gnode' thm
R20002:20007 compcert.lib.Maps PTree gnode' thm
R20002:20007 compcert.lib.Maps PTree gnode' thm
R20002:20007 compcert.lib.Maps PTree gnode' thm
R20049:20055 compcert.lib.Maps PTree.COMBINE <> sec
prf 20067:20077 PTree xcombine_lr
R20119:20122 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20131:20134 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20135:20140 Coq.Init.Datatypes <> option ind
R20142:20142 compcert.lib.Maps <> B var
R20123:20128 Coq.Init.Datatypes <> option ind
R20130:20130 compcert.lib.Maps <> A var
R20111:20116 Coq.Init.Datatypes <> option ind
R20118:20118 compcert.lib.Maps <> A var
R20150:20150 compcert.lib.Maps PTree t def
R20152:20152 compcert.lib.Maps <> A var
R20160:20160 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20199:20207 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20222:20224 Coq.Init.Logic <> :type_scope:x_'='_x not
R20208:20217 compcert.lib.Maps PTree xcombine_l def
R20221:20221 compcert.lib.Maps <> m var
R20219:20219 compcert.lib.Maps <> f var
R20225:20234 compcert.lib.Maps PTree xcombine_r def
R20238:20238 compcert.lib.Maps <> m var
R20236:20236 compcert.lib.Maps <> g var
R20175:20180 Coq.Init.Datatypes <> option ind
R20182:20182 compcert.lib.Maps <> A var
R20191:20193 Coq.Init.Logic <> :type_scope:x_'='_x not
R20186:20186 compcert.lib.Maps <> f var
R20190:20190 compcert.lib.Maps <> j var
R20188:20188 compcert.lib.Maps <> i var
R20194:20194 compcert.lib.Maps <> g var
R20198:20198 compcert.lib.Maps <> i var
R20196:20196 compcert.lib.Maps <> j var
prf 20387:20400 PTree combine_commut
R20440:20443 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20452:20455 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20456:20461 Coq.Init.Datatypes <> option ind
R20463:20463 compcert.lib.Maps <> B var
R20444:20449 Coq.Init.Datatypes <> option ind
R20451:20451 compcert.lib.Maps <> A var
R20432:20437 Coq.Init.Datatypes <> option ind
R20439:20439 compcert.lib.Maps <> A var
R20471:20471 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20509:20517 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20533:20533 compcert.lib.Maps PTree t def
R20535:20535 compcert.lib.Maps <> A var
R20558:20560 Coq.Init.Logic <> :type_scope:x_'='_x not
R20543:20549 compcert.lib.Maps PTree combine def
R20556:20557 compcert.lib.Maps <> m2 var
R20553:20554 compcert.lib.Maps <> m1 var
R20551:20551 compcert.lib.Maps <> f var
R20561:20567 compcert.lib.Maps PTree combine def
R20574:20575 compcert.lib.Maps <> m1 var
R20571:20572 compcert.lib.Maps <> m2 var
R20569:20569 compcert.lib.Maps <> g var
R20485:20490 Coq.Init.Datatypes <> option ind
R20492:20492 compcert.lib.Maps <> A var
R20501:20503 Coq.Init.Logic <> :type_scope:x_'='_x not
R20496:20496 compcert.lib.Maps <> f var
R20500:20500 compcert.lib.Maps <> j var
R20498:20498 compcert.lib.Maps <> i var
R20504:20504 compcert.lib.Maps <> g var
R20508:20508 compcert.lib.Maps <> i var
R20506:20506 compcert.lib.Maps <> j var
R20641:20646 Coq.Init.Datatypes <> option ind
R20657:20659 Coq.Init.Logic <> :type_scope:x_'='_x not
R20656:20656 compcert.lib.Maps <> j var
R20654:20654 compcert.lib.Maps <> i var
R20664:20664 compcert.lib.Maps <> i var
R20662:20662 compcert.lib.Maps <> j var
R20641:20646 Coq.Init.Datatypes <> option ind
R20657:20659 Coq.Init.Logic <> :type_scope:x_'='_x not
R20656:20656 compcert.lib.Maps <> j var
R20654:20654 compcert.lib.Maps <> i var
R20664:20664 compcert.lib.Maps <> i var
R20662:20662 compcert.lib.Maps <> j var
R20779:20789 compcert.lib.Maps PTree xcombine_lr thm
R20819:20829 compcert.lib.Maps PTree xcombine_lr thm
R20779:20789 compcert.lib.Maps PTree xcombine_lr thm
R20779:20789 compcert.lib.Maps PTree xcombine_lr thm
R20779:20789 compcert.lib.Maps PTree xcombine_lr thm
R20779:20789 compcert.lib.Maps PTree xcombine_lr thm
R20779:20789 compcert.lib.Maps PTree xcombine_lr thm
R20779:20789 compcert.lib.Maps PTree xcombine_lr thm
R20779:20789 compcert.lib.Maps PTree xcombine_lr thm
R20779:20789 compcert.lib.Maps PTree xcombine_lr thm
R20779:20789 compcert.lib.Maps PTree xcombine_lr thm
R20779:20789 compcert.lib.Maps PTree xcombine_lr thm
R20779:20789 compcert.lib.Maps PTree xcombine_lr thm
R20779:20789 compcert.lib.Maps PTree xcombine_lr thm
R20819:20829 compcert.lib.Maps PTree xcombine_lr thm
R20819:20829 compcert.lib.Maps PTree xcombine_lr thm
R20819:20829 compcert.lib.Maps PTree xcombine_lr thm
R20819:20829 compcert.lib.Maps PTree xcombine_lr thm
R20819:20829 compcert.lib.Maps PTree xcombine_lr thm
R20819:20829 compcert.lib.Maps PTree xcombine_lr thm
R20819:20829 compcert.lib.Maps PTree xcombine_lr thm
R20819:20829 compcert.lib.Maps PTree xcombine_lr thm
R20819:20829 compcert.lib.Maps PTree xcombine_lr thm
R20819:20829 compcert.lib.Maps PTree xcombine_lr thm
R20819:20829 compcert.lib.Maps PTree xcombine_lr thm
R20819:20829 compcert.lib.Maps PTree xcombine_lr thm
R20819:20829 compcert.lib.Maps PTree xcombine_lr thm
R20819:20829 compcert.lib.Maps PTree xcombine_lr thm
def 20923:20931 PTree xelements
R20949:20949 compcert.lib.Maps PTree t def
R20951:20951 compcert.lib.Maps <> A var
R20959:20966 Coq.Numbers.BinNums <> positive ind
R20996:20999 Coq.Init.Datatypes <> list ind
R21010:21012 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R21002:21009 Coq.Numbers.BinNums <> positive ind
R21013:21013 compcert.lib.Maps <> A var
R21053:21056 Coq.Init.Datatypes <> list ind
R21067:21069 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R21059:21066 Coq.Numbers.BinNums <> positive ind
R21070:21070 compcert.lib.Maps <> A var
R21088:21088 compcert.lib.Maps <> m var
R21103:21106 compcert.lib.Maps PTree Leaf constr
R21111:21111 compcert.lib.Maps <> k var
R21121:21124 compcert.lib.Maps PTree Node constr
R21128:21131 Coq.Init.Datatypes <> None constr
R21148:21156 compcert.lib.Maps <> xelements def
R21168:21176 compcert.lib.Maps <> xelements def
R21187:21187 compcert.lib.Maps <> k var
R21181:21182 Coq.Numbers.BinNums <> xI constr
R21184:21184 compcert.lib.Maps <> i var
R21161:21162 Coq.Numbers.BinNums <> xO constr
R21164:21164 compcert.lib.Maps <> i var
R21198:21201 compcert.lib.Maps PTree Node constr
R21206:21209 Coq.Init.Datatypes <> Some constr
R21229:21237 compcert.lib.Maps <> xelements def
R21272:21275 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R21261:21261 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21268:21269 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21271:21271 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21262:21265 compcert.lib.Maps PTree prev def
R21267:21267 compcert.lib.Maps <> i var
R21276:21284 compcert.lib.Maps <> xelements def
R21295:21295 compcert.lib.Maps <> k var
R21289:21290 Coq.Numbers.BinNums <> xI constr
R21292:21292 compcert.lib.Maps <> i var
R21242:21243 Coq.Numbers.BinNums <> xO constr
R21245:21245 compcert.lib.Maps <> i var
def 21323:21330 PTree elements
R21347:21347 compcert.lib.Maps PTree t def
R21349:21349 compcert.lib.Maps <> A var
R21355:21363 compcert.lib.Maps PTree xelements def
R21370:21372 Coq.Init.Datatypes <> nil constr
R21367:21368 Coq.Numbers.BinNums <> xH constr
R21365:21365 compcert.lib.Maps <> m var
prf 21385:21400 PTree xelements_append
R21420:21420 compcert.lib.Maps PTree t def
R21422:21422 compcert.lib.Maps <> A var
R21462:21464 Coq.Init.Logic <> :type_scope:x_'='_x not
R21438:21446 compcert.lib.Maps PTree xelements def
R21455:21458 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R21453:21454 compcert.lib.Maps <> k1 var
R21459:21460 compcert.lib.Maps <> k2 var
R21450:21450 compcert.lib.Maps <> i var
R21448:21448 compcert.lib.Maps <> m var
R21481:21484 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R21465:21473 compcert.lib.Maps PTree xelements def
R21479:21480 compcert.lib.Maps <> k1 var
R21477:21477 compcert.lib.Maps <> i var
R21475:21475 compcert.lib.Maps <> m var
R21485:21486 compcert.lib.Maps <> k2 var
prf 21610:21623 PTree xelements_leaf
R21667:21669 Coq.Init.Logic <> :type_scope:x_'='_x not
R21642:21650 compcert.lib.Maps PTree xelements def
R21664:21666 Coq.Init.Datatypes <> nil constr
R21662:21662 compcert.lib.Maps <> i var
R21654:21657 compcert.lib.Maps PTree Leaf constr
R21659:21659 compcert.lib.Maps <> A var
R21670:21672 Coq.Init.Datatypes <> nil constr
prf 21726:21739 PTree xelements_node
R21760:21760 compcert.lib.Maps PTree t def
R21762:21762 compcert.lib.Maps <> A var
R21772:21772 compcert.lib.Maps PTree t def
R21774:21774 compcert.lib.Maps <> A var
R21814:21823 Coq.Init.Logic <> :type_scope:x_'='_x not
R21784:21792 compcert.lib.Maps PTree xelements def
R21811:21813 Coq.Init.Datatypes <> nil constr
R21809:21809 compcert.lib.Maps <> i var
R21795:21798 compcert.lib.Maps PTree Node constr
R21805:21806 compcert.lib.Maps <> m2 var
R21803:21803 compcert.lib.Maps <> o var
R21800:21801 compcert.lib.Maps <> m1 var
R21847:21854 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R21824:21832 compcert.lib.Maps PTree xelements def
R21844:21846 Coq.Init.Datatypes <> nil constr
R21838:21839 Coq.Numbers.BinNums <> xO constr
R21841:21841 compcert.lib.Maps <> i var
R21834:21835 compcert.lib.Maps <> m1 var
R21914:21921 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R21861:21861 compcert.lib.Maps <> o var
R21868:21871 Coq.Init.Datatypes <> None constr
R21876:21878 Coq.Init.Datatypes <> nil constr
R21882:21885 Coq.Init.Datatypes <> Some constr
R21903:21906 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R21892:21892 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21899:21900 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21902:21902 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21893:21896 compcert.lib.Maps PTree prev def
R21898:21898 compcert.lib.Maps <> i var
R21907:21909 Coq.Init.Datatypes <> nil constr
R21922:21930 compcert.lib.Maps PTree xelements def
R21942:21944 Coq.Init.Datatypes <> nil constr
R21936:21937 Coq.Numbers.BinNums <> xI constr
R21939:21939 compcert.lib.Maps <> i var
R21932:21933 compcert.lib.Maps <> m2 var
R22005:22020 compcert.lib.Maps PTree xelements_append thm
R22005:22020 compcert.lib.Maps PTree xelements_append thm
R22005:22020 compcert.lib.Maps PTree xelements_append thm
R22005:22020 compcert.lib.Maps PTree xelements_append thm
R22005:22020 compcert.lib.Maps PTree xelements_append thm
prf 22047:22060 PTree xelements_incl
R22090:22090 compcert.lib.Maps PTree t def
R22092:22092 compcert.lib.Maps <> A var
R22100:22107 Coq.Numbers.BinNums <> positive ind
R22127:22130 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22131:22132 Coq.Lists.List <> In def
R22137:22145 compcert.lib.Maps PTree xelements def
R22151:22151 compcert.lib.Maps <> k var
R22149:22149 compcert.lib.Maps <> i var
R22147:22147 compcert.lib.Maps <> m var
R22134:22134 compcert.lib.Maps <> x var
R22121:22122 Coq.Lists.List <> In def
R22126:22126 compcert.lib.Maps <> k var
R22124:22124 compcert.lib.Maps <> x var
prf 22300:22316 PTree xelements_correct
R22346:22346 compcert.lib.Maps PTree t def
R22348:22348 compcert.lib.Maps <> A var
R22358:22365 Coq.Numbers.BinNums <> positive ind
R22372:22372 compcert.lib.Maps <> A var
R22400:22403 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22404:22405 Coq.Lists.List <> In def
R22436:22444 compcert.lib.Maps PTree xelements def
R22450:22450 compcert.lib.Maps <> k var
R22448:22448 compcert.lib.Maps <> j var
R22446:22446 compcert.lib.Maps <> m var
R22407:22407 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22430:22431 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22433:22433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22408:22411 compcert.lib.Maps PTree prev def
R22414:22424 compcert.lib.Maps PTree prev_append def
R22428:22428 compcert.lib.Maps <> j var
R22426:22426 compcert.lib.Maps <> i var
R22432:22432 compcert.lib.Maps <> v var
R22391:22393 Coq.Init.Logic <> :type_scope:x_'='_x not
R22384:22386 compcert.lib.Maps PTree get def
R22390:22390 compcert.lib.Maps <> m var
R22388:22388 compcert.lib.Maps <> i var
R22394:22397 Coq.Init.Datatypes <> Some constr
R22399:22399 compcert.lib.Maps <> v var
R22508:22512 compcert.lib.Maps PTree gleaf thm
R22508:22512 compcert.lib.Maps PTree gleaf thm
R22508:22512 compcert.lib.Maps PTree gleaf thm
R22601:22614 compcert.lib.Maps PTree xelements_incl thm
R22601:22614 compcert.lib.Maps PTree xelements_incl thm
R22665:22678 compcert.lib.Maps PTree xelements_incl thm
R22665:22678 compcert.lib.Maps PTree xelements_incl thm
R22714:22727 compcert.lib.Maps PTree xelements_incl thm
R22714:22727 compcert.lib.Maps PTree xelements_incl thm
prf 22785:22800 PTree elements_correct
R22828:22828 compcert.lib.Maps PTree t def
R22830:22830 compcert.lib.Maps <> A var
R22837:22844 Coq.Numbers.BinNums <> positive ind
R22851:22851 compcert.lib.Maps <> A var
R22875:22878 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22879:22880 Coq.Lists.List <> In def
R22890:22897 compcert.lib.Maps PTree elements def
R22899:22899 compcert.lib.Maps <> m var
R22882:22882 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22884:22885 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22887:22887 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22883:22883 compcert.lib.Maps <> i var
R22886:22886 compcert.lib.Maps <> v var
R22866:22868 Coq.Init.Logic <> :type_scope:x_'='_x not
R22859:22861 compcert.lib.Maps PTree get def
R22865:22865 compcert.lib.Maps <> m var
R22863:22863 compcert.lib.Maps <> i var
R22869:22872 Coq.Init.Datatypes <> Some constr
R22874:22874 compcert.lib.Maps <> v var
R22950:22966 compcert.lib.Maps PTree xelements_correct thm
R22975:22977 Coq.Init.Datatypes <> nil constr
R22972:22973 Coq.Numbers.BinNums <> xH constr
R22950:22966 compcert.lib.Maps PTree xelements_correct thm
R22975:22977 Coq.Init.Datatypes <> nil constr
R22972:22973 Coq.Numbers.BinNums <> xH constr
R22991:23006 compcert.lib.Maps PTree prev_append_prev thm
R22991:23006 compcert.lib.Maps PTree prev_append_prev thm
R22991:23006 compcert.lib.Maps PTree prev_append_prev thm
R23015:23016 Coq.Init.Datatypes <> id def
R23015:23016 Coq.Init.Datatypes <> id def
prf 23035:23046 PTree in_xelements
R23074:23074 compcert.lib.Maps PTree t def
R23076:23076 compcert.lib.Maps <> A var
R23085:23092 Coq.Numbers.BinNums <> positive ind
R23099:23099 compcert.lib.Maps <> A var
R23137:23144 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23145:23151 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23153:23154 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23181:23184 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23156:23158 Coq.Init.Logic <> :type_scope:x_'='_x not
R23155:23155 compcert.lib.Maps <> k var
R23159:23162 compcert.lib.Maps PTree prev def
R23165:23175 compcert.lib.Maps PTree prev_append def
R23179:23179 compcert.lib.Maps <> i var
R23177:23177 compcert.lib.Maps <> j var
R23192:23194 Coq.Init.Logic <> :type_scope:x_'='_x not
R23185:23187 compcert.lib.Maps PTree get def
R23191:23191 compcert.lib.Maps <> m var
R23189:23189 compcert.lib.Maps <> j var
R23195:23198 Coq.Init.Datatypes <> Some constr
R23200:23200 compcert.lib.Maps <> v var
R23108:23109 Coq.Lists.List <> In def
R23119:23127 compcert.lib.Maps PTree xelements def
R23133:23135 Coq.Init.Datatypes <> nil constr
R23131:23131 compcert.lib.Maps <> i var
R23129:23129 compcert.lib.Maps <> m var
R23111:23111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23113:23114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23116:23116 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23112:23112 compcert.lib.Maps <> k var
R23115:23115 compcert.lib.Maps <> v var
R23249:23262 compcert.lib.Maps PTree xelements_leaf thm
R23249:23262 compcert.lib.Maps PTree xelements_leaf thm
R23249:23262 compcert.lib.Maps PTree xelements_leaf thm
R23297:23310 compcert.lib.Maps PTree xelements_node thm
R23297:23310 compcert.lib.Maps PTree xelements_node thm
R23297:23310 compcert.lib.Maps PTree xelements_node thm
R23328:23337 Coq.Lists.List <> in_app_iff thm
R23328:23337 Coq.Lists.List <> in_app_iff thm
R23328:23337 Coq.Lists.List <> in_app_iff thm
R23328:23337 Coq.Lists.List <> in_app_iff thm
R23328:23337 Coq.Lists.List <> in_app_iff thm
R23429:23430 Coq.Numbers.BinNums <> xO constr
R23429:23430 Coq.Numbers.BinNums <> xO constr
R23502:23503 Coq.Numbers.BinNums <> xH constr
R23502:23503 Coq.Numbers.BinNums <> xH constr
R23567:23568 Coq.Numbers.BinNums <> xI constr
R23567:23568 Coq.Numbers.BinNums <> xI constr
prf 23598:23614 PTree elements_complete
R23642:23642 compcert.lib.Maps PTree t def
R23644:23644 compcert.lib.Maps <> A var
R23651:23658 Coq.Numbers.BinNums <> positive ind
R23665:23665 compcert.lib.Maps <> A var
R23695:23698 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23706:23708 Coq.Init.Logic <> :type_scope:x_'='_x not
R23699:23701 compcert.lib.Maps PTree get def
R23705:23705 compcert.lib.Maps <> m var
R23703:23703 compcert.lib.Maps <> i var
R23709:23712 Coq.Init.Datatypes <> Some constr
R23714:23714 compcert.lib.Maps <> v var
R23673:23674 Coq.Lists.List <> In def
R23684:23691 compcert.lib.Maps PTree elements def
R23693:23693 compcert.lib.Maps <> m var
R23676:23676 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23678:23679 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23681:23681 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23677:23677 compcert.lib.Maps <> i var
R23680:23680 compcert.lib.Maps <> v var
R23737:23744 compcert.lib.Maps PTree elements def
R23773:23784 compcert.lib.Maps PTree in_xelements thm
R23826:23841 compcert.lib.Maps PTree prev_append_prev thm
R23826:23841 compcert.lib.Maps PTree prev_append_prev thm
R23826:23841 compcert.lib.Maps PTree prev_append_prev thm
R23864:23874 compcert.lib.Maps PTree prev_append def
R23864:23874 compcert.lib.Maps PTree prev_append def
R23899:23913 compcert.lib.Maps PTree prev_append_inj thm
def 23964:23968 PTree xkeys
R23984:23984 compcert.lib.Maps PTree t def
R23986:23986 compcert.lib.Maps <> A var
R23993:24000 Coq.Numbers.BinNums <> positive ind
R24010:24017 Coq.Lists.List <> map def
R24038:24046 compcert.lib.Maps PTree xelements def
R24052:24054 Coq.Init.Datatypes <> nil constr
R24050:24050 compcert.lib.Maps <> i var
R24048:24048 compcert.lib.Maps <> m var
R24021:24023 Coq.Init.Datatypes <> fst def
R24034:24034 compcert.lib.Maps <> A var
R24025:24032 Coq.Numbers.BinNums <> positive ind
prf 24068:24077 PTree xkeys_leaf
R24113:24115 Coq.Init.Logic <> :type_scope:x_'='_x not
R24096:24100 compcert.lib.Maps PTree xkeys def
R24112:24112 compcert.lib.Maps <> i var
R24104:24107 compcert.lib.Maps PTree Leaf constr
R24109:24109 compcert.lib.Maps <> A var
R24116:24118 Coq.Init.Datatypes <> nil constr
prf 24172:24181 PTree xkeys_node
R24202:24202 compcert.lib.Maps PTree t def
R24204:24204 compcert.lib.Maps <> A var
R24214:24214 compcert.lib.Maps PTree t def
R24216:24216 compcert.lib.Maps <> A var
R24248:24257 Coq.Init.Logic <> :type_scope:x_'='_x not
R24226:24230 compcert.lib.Maps PTree xkeys def
R24247:24247 compcert.lib.Maps <> i var
R24233:24236 compcert.lib.Maps PTree Node constr
R24243:24244 compcert.lib.Maps <> m2 var
R24241:24241 compcert.lib.Maps <> o var
R24238:24239 compcert.lib.Maps <> m1 var
R24273:24280 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24258:24262 compcert.lib.Maps PTree xkeys def
R24268:24269 Coq.Numbers.BinNums <> xO constr
R24271:24271 compcert.lib.Maps <> i var
R24264:24265 compcert.lib.Maps <> m1 var
R24335:24342 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24287:24287 compcert.lib.Maps <> o var
R24294:24297 Coq.Init.Datatypes <> None constr
R24302:24304 Coq.Init.Datatypes <> nil constr
R24308:24311 Coq.Init.Datatypes <> Some constr
R24324:24327 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R24318:24321 compcert.lib.Maps PTree prev def
R24323:24323 compcert.lib.Maps <> i var
R24328:24330 Coq.Init.Datatypes <> nil constr
R24343:24347 compcert.lib.Maps PTree xkeys def
R24353:24354 Coq.Numbers.BinNums <> xI constr
R24356:24356 compcert.lib.Maps <> i var
R24349:24350 compcert.lib.Maps <> m2 var
R24388:24392 compcert.lib.Maps PTree xkeys def
R24403:24416 compcert.lib.Maps PTree xelements_node thm
R24403:24416 compcert.lib.Maps PTree xelements_node thm
R24403:24416 compcert.lib.Maps PTree xelements_node thm
R24429:24435 Coq.Lists.List <> map_app thm
R24429:24435 Coq.Lists.List <> map_app thm
R24429:24435 Coq.Lists.List <> map_app thm
R24429:24435 Coq.Lists.List <> map_app thm
R24429:24435 Coq.Lists.List <> map_app thm
prf 24472:24479 PTree in_xkeys
R24507:24507 compcert.lib.Maps PTree t def
R24509:24509 compcert.lib.Maps <> A var
R24518:24525 Coq.Numbers.BinNums <> positive ind
R24549:24557 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24594:24594 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24558:24564 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24566:24567 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24569:24571 Coq.Init.Logic <> :type_scope:x_'='_x not
R24568:24568 compcert.lib.Maps <> k var
R24572:24575 compcert.lib.Maps PTree prev def
R24578:24588 compcert.lib.Maps PTree prev_append def
R24592:24592 compcert.lib.Maps <> i var
R24590:24590 compcert.lib.Maps <> j var
R24533:24534 Coq.Lists.List <> In def
R24539:24543 compcert.lib.Maps PTree xkeys def
R24547:24547 compcert.lib.Maps <> i var
R24545:24545 compcert.lib.Maps <> m var
R24536:24536 compcert.lib.Maps <> k var
R24617:24621 compcert.lib.Maps PTree xkeys def
R24643:24657 compcert.lib.Coqlib <> list_in_map_inv thm
R24643:24657 compcert.lib.Coqlib <> list_in_map_inv thm
R24711:24722 compcert.lib.Maps PTree in_xelements thm
prf 24784:24805 PTree xelements_keys_norepet
R24833:24833 compcert.lib.Maps PTree t def
R24835:24835 compcert.lib.Maps <> A var
R24842:24849 Coq.Numbers.BinNums <> positive ind
R24857:24868 compcert.lib.Coqlib <> list_norepet ind
R24871:24875 compcert.lib.Maps PTree xkeys def
R24879:24879 compcert.lib.Maps <> i var
R24877:24877 compcert.lib.Maps <> m var
R24929:24938 compcert.lib.Maps PTree xkeys_leaf thm
R24929:24938 compcert.lib.Maps PTree xkeys_leaf thm
R24929:24938 compcert.lib.Maps PTree xkeys_leaf thm
R24974:24975 Coq.Init.Logic <> :type_scope:'~'_x not
R24976:24977 Coq.Lists.List <> In def
R24989:24993 compcert.lib.Maps PTree xkeys def
R24999:25000 Coq.Numbers.BinNums <> xO constr
R24980:24983 compcert.lib.Maps PTree prev def
R24974:24975 Coq.Init.Logic <> :type_scope:'~'_x not
R24976:24977 Coq.Lists.List <> In def
R24989:24993 compcert.lib.Maps PTree xkeys def
R24999:25000 Coq.Numbers.BinNums <> xO constr
R24980:24983 compcert.lib.Maps PTree prev def
R25035:25042 compcert.lib.Maps PTree in_xkeys thm
R25083:25098 compcert.lib.Maps PTree prev_append_prev thm
R25083:25098 compcert.lib.Maps PTree prev_append_prev thm
R25083:25098 compcert.lib.Maps PTree prev_append_prev thm
R25126:25140 compcert.lib.Maps PTree prev_append_inj thm
R25126:25140 compcert.lib.Maps PTree prev_append_inj thm
R25185:25186 Coq.Init.Logic <> :type_scope:'~'_x not
R25187:25188 Coq.Lists.List <> In def
R25200:25204 compcert.lib.Maps PTree xkeys def
R25210:25211 Coq.Numbers.BinNums <> xI constr
R25191:25194 compcert.lib.Maps PTree prev def
R25185:25186 Coq.Init.Logic <> :type_scope:'~'_x not
R25187:25188 Coq.Lists.List <> In def
R25200:25204 compcert.lib.Maps PTree xkeys def
R25210:25211 Coq.Numbers.BinNums <> xI constr
R25191:25194 compcert.lib.Maps PTree prev def
R25246:25253 compcert.lib.Maps PTree in_xkeys thm
R25294:25309 compcert.lib.Maps PTree prev_append_prev thm
R25294:25309 compcert.lib.Maps PTree prev_append_prev thm
R25294:25309 compcert.lib.Maps PTree prev_append_prev thm
R25337:25351 compcert.lib.Maps PTree prev_append_inj thm
R25337:25351 compcert.lib.Maps PTree prev_append_inj thm
R25426:25429 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25452:25455 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25456:25460 Coq.Init.Logic <> False ind
R25430:25431 Coq.Lists.List <> In def
R25436:25440 compcert.lib.Maps PTree xkeys def
R25446:25447 Coq.Numbers.BinNums <> xI constr
R25433:25433 compcert.lib.Maps <> x var
R25404:25405 Coq.Lists.List <> In def
R25410:25414 compcert.lib.Maps PTree xkeys def
R25420:25421 Coq.Numbers.BinNums <> xO constr
R25407:25407 compcert.lib.Maps <> x var
R25426:25429 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25452:25455 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25456:25460 Coq.Init.Logic <> False ind
R25430:25431 Coq.Lists.List <> In def
R25436:25440 compcert.lib.Maps PTree xkeys def
R25446:25447 Coq.Numbers.BinNums <> xI constr
R25433:25433 compcert.lib.Maps <> x var
R25404:25405 Coq.Lists.List <> In def
R25410:25414 compcert.lib.Maps PTree xkeys def
R25420:25421 Coq.Numbers.BinNums <> xO constr
R25407:25407 compcert.lib.Maps <> x var
R25486:25493 compcert.lib.Maps PTree in_xkeys thm
R25539:25546 compcert.lib.Maps PTree in_xkeys thm
R25593:25608 compcert.lib.Maps PTree prev_append_prev thm
R25593:25608 compcert.lib.Maps PTree prev_append_prev thm
R25593:25608 compcert.lib.Maps PTree prev_append_prev thm
R25654:25668 compcert.lib.Maps PTree prev_append_inj thm
R25654:25668 compcert.lib.Maps PTree prev_append_inj thm
R25706:25715 compcert.lib.Maps PTree xkeys_node thm
R25706:25715 compcert.lib.Maps PTree xkeys_node thm
R25706:25715 compcert.lib.Maps PTree xkeys_node thm
R25724:25742 compcert.lib.Coqlib <> list_norepet_append thm
R25724:25742 compcert.lib.Coqlib <> list_norepet_append thm
prf 25928:25948 PTree elements_keys_norepet
R25976:25976 compcert.lib.Maps PTree t def
R25978:25978 compcert.lib.Maps <> A var
R25986:25997 compcert.lib.Coqlib <> list_norepet ind
R26000:26007 Coq.Lists.List <> map def
R26023:26030 compcert.lib.Maps PTree elements def
R26032:26032 compcert.lib.Maps <> m var
R26011:26013 Coq.Init.Datatypes <> fst def
R26019:26019 compcert.lib.Maps <> A var
R26015:26017 compcert.lib.Maps PTree elt def
R26065:26086 compcert.lib.Maps PTree xelements_keys_norepet thm
R26090:26091 Coq.Numbers.BinNums <> xH constr
R26065:26086 compcert.lib.Maps PTree xelements_keys_norepet thm
R26090:26091 Coq.Numbers.BinNums <> xH constr
prf 26112:26126 PTree xelements_empty
R26154:26154 compcert.lib.Maps PTree t def
R26156:26156 compcert.lib.Maps <> A var
R26162:26162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26187:26191 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26209:26211 Coq.Init.Logic <> :type_scope:x_'='_x not
R26192:26200 compcert.lib.Maps PTree xelements def
R26206:26208 Coq.Init.Datatypes <> nil constr
R26204:26204 compcert.lib.Maps <> i var
R26202:26202 compcert.lib.Maps <> m var
R26212:26214 Coq.Init.Datatypes <> nil constr
R26180:26182 Coq.Init.Logic <> :type_scope:x_'='_x not
R26173:26175 compcert.lib.Maps PTree get def
R26179:26179 compcert.lib.Maps <> m var
R26177:26177 compcert.lib.Maps <> i var
R26183:26186 Coq.Init.Datatypes <> None constr
R26273:26286 compcert.lib.Maps PTree xelements_node thm
R26273:26286 compcert.lib.Maps PTree xelements_node thm
R26273:26286 compcert.lib.Maps PTree xelements_node thm
R26345:26346 Coq.Numbers.BinNums <> xH constr
R26345:26346 Coq.Numbers.BinNums <> xH constr
R26391:26392 Coq.Numbers.BinNums <> xI constr
R26391:26392 Coq.Numbers.BinNums <> xI constr
R26422:26423 Coq.Numbers.BinNums <> xO constr
R26422:26423 Coq.Numbers.BinNums <> xO constr
prf 26449:26473 PTree elements_canonical_order'
R26504:26507 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26509:26512 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26508:26508 compcert.lib.Maps <> B var
R26503:26503 compcert.lib.Maps <> A var
R26523:26523 compcert.lib.Maps PTree t def
R26525:26525 compcert.lib.Maps <> A var
R26532:26532 compcert.lib.Maps PTree t def
R26534:26534 compcert.lib.Maps <> B var
R26542:26542 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26585:26593 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26594:26605 compcert.lib.Coqlib <> list_forall2 ind
R26693:26700 compcert.lib.Maps PTree elements def
R26702:26702 compcert.lib.Maps <> n var
R26680:26687 compcert.lib.Maps PTree elements def
R26689:26689 compcert.lib.Maps <> m var
R26646:26649 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26636:26638 Coq.Init.Logic <> :type_scope:x_'='_x not
R26629:26631 Coq.Init.Datatypes <> fst def
R26633:26635 compcert.lib.Maps <> i_x var
R26639:26641 Coq.Init.Datatypes <> fst def
R26643:26645 compcert.lib.Maps <> i_y var
R26650:26650 compcert.lib.Maps <> R var
R26663:26665 Coq.Init.Datatypes <> snd def
R26667:26669 compcert.lib.Maps <> i_y var
R26653:26655 Coq.Init.Datatypes <> snd def
R26657:26659 compcert.lib.Maps <> i_x var
R26553:26562 compcert.lib.Coqlib <> option_rel ind
R26577:26579 compcert.lib.Maps PTree get def
R26583:26583 compcert.lib.Maps <> n var
R26581:26581 compcert.lib.Maps <> i var
R26567:26569 compcert.lib.Maps PTree get def
R26573:26573 compcert.lib.Maps <> m var
R26571:26571 compcert.lib.Maps <> i var
R26564:26564 compcert.lib.Maps <> R var
R26742:26749 compcert.lib.Maps PTree elements def
R26831:26845 compcert.lib.Maps PTree xelements_empty thm
R26831:26845 compcert.lib.Maps PTree xelements_empty thm
R26831:26845 compcert.lib.Maps PTree xelements_empty thm
R26831:26845 compcert.lib.Maps PTree xelements_empty thm
R26899:26904 compcert.lib.Maps PTree gempty thm
R26899:26904 compcert.lib.Maps PTree gempty thm
R26899:26904 compcert.lib.Maps PTree gempty thm
R26972:26986 compcert.lib.Maps PTree xelements_empty thm
R26989:26992 compcert.lib.Maps PTree Node constr
R26972:26986 compcert.lib.Maps PTree xelements_empty thm
R26989:26992 compcert.lib.Maps PTree Node constr
R26972:26986 compcert.lib.Maps PTree xelements_empty thm
R26989:26992 compcert.lib.Maps PTree Node constr
R26972:26986 compcert.lib.Maps PTree xelements_empty thm
R26989:26992 compcert.lib.Maps PTree Node constr
R27063:27068 compcert.lib.Maps PTree gempty thm
R27063:27068 compcert.lib.Maps PTree gempty thm
R27063:27068 compcert.lib.Maps PTree gempty thm
R27103:27116 compcert.lib.Maps PTree xelements_node thm
R27103:27116 compcert.lib.Maps PTree xelements_node thm
R27103:27116 compcert.lib.Maps PTree xelements_node thm
R27103:27116 compcert.lib.Maps PTree xelements_node thm
R27103:27116 compcert.lib.Maps PTree xelements_node thm
R27132:27147 compcert.lib.Coqlib <> list_forall2_app thm
R27132:27147 compcert.lib.Coqlib <> list_forall2_app thm
R27132:27147 compcert.lib.Coqlib <> list_forall2_app thm
R27132:27147 compcert.lib.Coqlib <> list_forall2_app thm
R27132:27147 compcert.lib.Coqlib <> list_forall2_app thm
R27132:27147 compcert.lib.Coqlib <> list_forall2_app thm
R27184:27185 Coq.Numbers.BinNums <> xO constr
R27184:27185 Coq.Numbers.BinNums <> xO constr
R27210:27211 Coq.Numbers.BinNums <> xH constr
R27210:27211 Coq.Numbers.BinNums <> xH constr
R27328:27329 Coq.Numbers.BinNums <> xI constr
R27328:27329 Coq.Numbers.BinNums <> xI constr
prf 27354:27377 PTree elements_canonical_order
R27408:27411 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27413:27416 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27412:27412 compcert.lib.Maps <> B var
R27407:27407 compcert.lib.Maps <> A var
R27427:27427 compcert.lib.Maps PTree t def
R27429:27429 compcert.lib.Maps <> A var
R27436:27436 compcert.lib.Maps PTree t def
R27438:27438 compcert.lib.Maps <> B var
R27446:27446 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27514:27522 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27523:27523 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27591:27599 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27600:27611 compcert.lib.Coqlib <> list_forall2 ind
R27699:27706 compcert.lib.Maps PTree elements def
R27708:27708 compcert.lib.Maps <> n var
R27686:27693 compcert.lib.Maps PTree elements def
R27695:27695 compcert.lib.Maps <> m var
R27652:27655 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27642:27644 Coq.Init.Logic <> :type_scope:x_'='_x not
R27635:27637 Coq.Init.Datatypes <> fst def
R27639:27641 compcert.lib.Maps <> i_x var
R27645:27647 Coq.Init.Datatypes <> fst def
R27649:27651 compcert.lib.Maps <> i_y var
R27656:27656 compcert.lib.Maps <> R var
R27669:27671 Coq.Init.Datatypes <> snd def
R27673:27675 compcert.lib.Maps <> i_y var
R27659:27661 Coq.Init.Datatypes <> snd def
R27663:27665 compcert.lib.Maps <> i_x var
R27552:27555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27556:27562 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27564:27565 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27582:27585 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27573:27575 Coq.Init.Logic <> :type_scope:x_'='_x not
R27566:27568 compcert.lib.Maps PTree get def
R27572:27572 compcert.lib.Maps <> m var
R27570:27570 compcert.lib.Maps <> i var
R27576:27579 Coq.Init.Datatypes <> Some constr
R27581:27581 compcert.lib.Maps <> x var
R27586:27586 compcert.lib.Maps <> R var
R27590:27590 compcert.lib.Maps <> y var
R27588:27588 compcert.lib.Maps <> x var
R27543:27545 Coq.Init.Logic <> :type_scope:x_'='_x not
R27536:27538 compcert.lib.Maps PTree get def
R27542:27542 compcert.lib.Maps <> n var
R27540:27540 compcert.lib.Maps <> i var
R27546:27549 Coq.Init.Datatypes <> Some constr
R27551:27551 compcert.lib.Maps <> y var
R27475:27478 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27479:27485 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27487:27488 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27505:27508 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27496:27498 Coq.Init.Logic <> :type_scope:x_'='_x not
R27489:27491 compcert.lib.Maps PTree get def
R27495:27495 compcert.lib.Maps <> n var
R27493:27493 compcert.lib.Maps <> i var
R27499:27502 Coq.Init.Datatypes <> Some constr
R27504:27504 compcert.lib.Maps <> y var
R27509:27509 compcert.lib.Maps <> R var
R27513:27513 compcert.lib.Maps <> y var
R27511:27511 compcert.lib.Maps <> x var
R27466:27468 Coq.Init.Logic <> :type_scope:x_'='_x not
R27459:27461 compcert.lib.Maps PTree get def
R27465:27465 compcert.lib.Maps <> m var
R27463:27463 compcert.lib.Maps <> i var
R27469:27472 Coq.Init.Datatypes <> Some constr
R27474:27474 compcert.lib.Maps <> x var
R27739:27763 compcert.lib.Maps PTree elements_canonical_order' thm
R27739:27763 compcert.lib.Maps PTree elements_canonical_order' thm
R27789:27791 compcert.lib.Maps PTree get def
R27789:27791 compcert.lib.Maps PTree get def
R27901:27903 compcert.lib.Maps PTree get def
R27901:27903 compcert.lib.Maps PTree get def
prf 28016:28035 PTree elements_extensional
R28065:28065 compcert.lib.Maps PTree t def
R28067:28067 compcert.lib.Maps <> A var
R28075:28075 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28103:28111 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28122:28124 Coq.Init.Logic <> :type_scope:x_'='_x not
R28112:28119 compcert.lib.Maps PTree elements def
R28121:28121 compcert.lib.Maps <> m var
R28125:28132 compcert.lib.Maps PTree elements def
R28134:28134 compcert.lib.Maps <> n var
R28093:28095 Coq.Init.Logic <> :type_scope:x_'='_x not
R28086:28088 compcert.lib.Maps PTree get def
R28092:28092 compcert.lib.Maps <> m var
R28090:28090 compcert.lib.Maps <> i var
R28096:28098 compcert.lib.Maps PTree get def
R28102:28102 compcert.lib.Maps <> n var
R28100:28100 compcert.lib.Maps <> i var
R28172:28196 compcert.lib.Maps PTree elements_canonical_order' thm
R28220:28222 Coq.Init.Logic <> :type_scope:x_'='_x not
R28219:28219 compcert.lib.Maps <> x var
R28223:28223 compcert.lib.Maps <> y var
R28172:28196 compcert.lib.Maps PTree elements_canonical_order' thm
R28220:28222 Coq.Init.Logic <> :type_scope:x_'='_x not
R28219:28219 compcert.lib.Maps <> x var
R28223:28223 compcert.lib.Maps <> y var
R28265:28267 compcert.lib.Maps PTree get def
R28265:28267 compcert.lib.Maps PTree get def
prf 28422:28437 PTree xelements_remove
R28467:28467 compcert.lib.Maps PTree t def
R28469:28469 compcert.lib.Maps <> A var
R28497:28504 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28505:28511 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28517:28522 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28582:28589 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R28540:28542 Coq.Init.Logic <> :type_scope:x_'='_x not
R28523:28531 compcert.lib.Maps PTree xelements def
R28537:28539 Coq.Init.Datatypes <> nil constr
R28535:28535 compcert.lib.Maps <> j var
R28533:28533 compcert.lib.Maps <> m var
R28545:28548 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28543:28544 compcert.lib.Maps <> l1 var
R28576:28579 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28549:28549 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28572:28573 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28575:28575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28550:28553 compcert.lib.Maps PTree prev def
R28556:28566 compcert.lib.Maps PTree prev_append def
R28570:28570 compcert.lib.Maps <> j var
R28568:28568 compcert.lib.Maps <> i var
R28574:28574 compcert.lib.Maps <> v var
R28580:28581 compcert.lib.Maps <> l2 var
R28618:28620 Coq.Init.Logic <> :type_scope:x_'='_x not
R28590:28598 compcert.lib.Maps PTree xelements def
R28615:28617 Coq.Init.Datatypes <> nil constr
R28613:28613 compcert.lib.Maps <> j var
R28601:28606 compcert.lib.Maps PTree remove def
R28610:28610 compcert.lib.Maps <> m var
R28608:28608 compcert.lib.Maps <> i var
R28623:28626 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28621:28622 compcert.lib.Maps <> l1 var
R28627:28628 compcert.lib.Maps <> l2 var
R28488:28490 Coq.Init.Logic <> :type_scope:x_'='_x not
R28481:28483 compcert.lib.Maps PTree get def
R28487:28487 compcert.lib.Maps <> m var
R28485:28485 compcert.lib.Maps <> i var
R28491:28494 Coq.Init.Datatypes <> Some constr
R28496:28496 compcert.lib.Maps <> v var
R28677:28681 compcert.lib.Maps PTree gleaf thm
R28677:28681 compcert.lib.Maps PTree gleaf thm
R28677:28681 compcert.lib.Maps PTree gleaf thm
R28764:28786 Coq.Init.Logic <> :type_scope:x_'='_x not
R28723:28731 compcert.lib.Maps PTree xelements def
R28761:28763 Coq.Init.Datatypes <> nil constr
R28734:28739 compcert.lib.Maps PTree remove def
R28744:28747 compcert.lib.Maps PTree Node constr
R28787:28795 compcert.lib.Maps PTree xelements def
R29037:29039 Coq.Init.Datatypes <> nil constr
R28844:28845 Coq.Numbers.BinNums <> xH constr
R28850:28853 compcert.lib.Maps PTree Node constr
R28858:28861 Coq.Init.Datatypes <> None constr
R28899:28900 Coq.Numbers.BinNums <> xO constr
R28908:28911 compcert.lib.Maps PTree Node constr
R28914:28919 compcert.lib.Maps PTree remove def
R28966:28967 Coq.Numbers.BinNums <> xI constr
R28975:28978 compcert.lib.Maps PTree Node constr
R28986:28991 compcert.lib.Maps PTree remove def
R28764:28786 Coq.Init.Logic <> :type_scope:x_'='_x not
R28723:28731 compcert.lib.Maps PTree xelements def
R28761:28763 Coq.Init.Datatypes <> nil constr
R28734:28739 compcert.lib.Maps PTree remove def
R28744:28747 compcert.lib.Maps PTree Node constr
R28787:28795 compcert.lib.Maps PTree xelements def
R29037:29039 Coq.Init.Datatypes <> nil constr
R28844:28845 Coq.Numbers.BinNums <> xH constr
R28850:28853 compcert.lib.Maps PTree Node constr
R28858:28861 Coq.Init.Datatypes <> None constr
R28899:28900 Coq.Numbers.BinNums <> xO constr
R28908:28911 compcert.lib.Maps PTree Node constr
R28914:28919 compcert.lib.Maps PTree remove def
R28966:28967 Coq.Numbers.BinNums <> xI constr
R28975:28978 compcert.lib.Maps PTree Node constr
R28986:28991 compcert.lib.Maps PTree remove def
R29134:29139 compcert.lib.Maps PTree remove def
R29134:29139 compcert.lib.Maps PTree remove def
R29207:29212 compcert.lib.Maps PTree remove def
R29207:29212 compcert.lib.Maps PTree remove def
R29345:29346 Coq.Numbers.BinNums <> xI constr
R29345:29346 Coq.Numbers.BinNums <> xI constr
R29416:29433 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29393:29401 compcert.lib.Maps PTree xelements def
R29413:29415 Coq.Init.Datatypes <> nil constr
R29407:29408 Coq.Numbers.BinNums <> xO constr
R29493:29510 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29447:29450 Coq.Init.Datatypes <> None constr
R29455:29457 Coq.Init.Datatypes <> nil constr
R29461:29464 Coq.Init.Datatypes <> Some constr
R29482:29485 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29471:29471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29478:29479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29481:29481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29472:29475 compcert.lib.Maps PTree prev def
R29486:29488 Coq.Init.Datatypes <> nil constr
R29416:29433 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29393:29401 compcert.lib.Maps PTree xelements def
R29413:29415 Coq.Init.Datatypes <> nil constr
R29407:29408 Coq.Numbers.BinNums <> xO constr
R29493:29510 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29447:29450 Coq.Init.Datatypes <> None constr
R29455:29457 Coq.Init.Datatypes <> nil constr
R29461:29464 Coq.Init.Datatypes <> Some constr
R29482:29485 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29471:29471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29478:29479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29481:29481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29472:29475 compcert.lib.Maps PTree prev def
R29486:29488 Coq.Init.Datatypes <> nil constr
R29554:29567 compcert.lib.Maps PTree xelements_node thm
R29576:29582 Coq.Lists.List <> app_ass syndef
R29554:29567 compcert.lib.Maps PTree xelements_node thm
R29554:29567 compcert.lib.Maps PTree xelements_node thm
R29576:29582 Coq.Lists.List <> app_ass syndef
R29576:29582 Coq.Lists.List <> app_ass syndef
R29576:29582 Coq.Lists.List <> app_ass syndef
R29576:29582 Coq.Lists.List <> app_ass syndef
R29605:29618 compcert.lib.Maps PTree xelements_node thm
R29628:29634 Coq.Lists.List <> app_ass syndef
R29605:29618 compcert.lib.Maps PTree xelements_node thm
R29605:29618 compcert.lib.Maps PTree xelements_node thm
R29628:29634 Coq.Lists.List <> app_ass syndef
R29628:29634 Coq.Lists.List <> app_ass syndef
R29628:29634 Coq.Lists.List <> app_ass syndef
R29628:29634 Coq.Lists.List <> app_ass syndef
R29667:29668 Coq.Numbers.BinNums <> xO constr
R29667:29668 Coq.Numbers.BinNums <> xO constr
R29734:29751 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29811:29828 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29765:29768 Coq.Init.Datatypes <> None constr
R29773:29775 Coq.Init.Datatypes <> nil constr
R29779:29782 Coq.Init.Datatypes <> Some constr
R29800:29803 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29789:29789 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29796:29797 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29799:29799 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29790:29793 compcert.lib.Maps PTree prev def
R29804:29806 Coq.Init.Datatypes <> nil constr
R29829:29837 compcert.lib.Maps PTree xelements def
R29849:29851 Coq.Init.Datatypes <> nil constr
R29843:29844 Coq.Numbers.BinNums <> xI constr
R29734:29751 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29811:29828 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R29765:29768 Coq.Init.Datatypes <> None constr
R29773:29775 Coq.Init.Datatypes <> nil constr
R29779:29782 Coq.Init.Datatypes <> Some constr
R29800:29803 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29789:29789 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29796:29797 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29799:29799 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29790:29793 compcert.lib.Maps PTree prev def
R29804:29806 Coq.Init.Datatypes <> nil constr
R29829:29837 compcert.lib.Maps PTree xelements def
R29849:29851 Coq.Init.Datatypes <> nil constr
R29843:29844 Coq.Numbers.BinNums <> xI constr
R29882:29895 compcert.lib.Maps PTree xelements_node thm
R29904:29910 Coq.Lists.List <> app_ass syndef
R29882:29895 compcert.lib.Maps PTree xelements_node thm
R29882:29895 compcert.lib.Maps PTree xelements_node thm
R29904:29910 Coq.Lists.List <> app_ass syndef
R29904:29910 Coq.Lists.List <> app_ass syndef
R29904:29910 Coq.Lists.List <> app_ass syndef
R29933:29946 compcert.lib.Maps PTree xelements_node thm
R29956:29962 Coq.Lists.List <> app_ass syndef
R29933:29946 compcert.lib.Maps PTree xelements_node thm
R29933:29946 compcert.lib.Maps PTree xelements_node thm
R29956:29962 Coq.Lists.List <> app_ass syndef
R29956:29962 Coq.Lists.List <> app_ass syndef
R29956:29962 Coq.Lists.List <> app_ass syndef
R29994:30002 compcert.lib.Maps PTree xelements def
R30014:30016 Coq.Init.Datatypes <> nil constr
R30008:30009 Coq.Numbers.BinNums <> xO constr
R30028:30036 compcert.lib.Maps PTree xelements def
R30048:30050 Coq.Init.Datatypes <> nil constr
R30042:30043 Coq.Numbers.BinNums <> xI constr
R29994:30002 compcert.lib.Maps PTree xelements def
R30014:30016 Coq.Init.Datatypes <> nil constr
R30008:30009 Coq.Numbers.BinNums <> xO constr
R30028:30036 compcert.lib.Maps PTree xelements def
R30048:30050 Coq.Init.Datatypes <> nil constr
R30042:30043 Coq.Numbers.BinNums <> xI constr
R30075:30088 compcert.lib.Maps PTree xelements_node thm
R30075:30088 compcert.lib.Maps PTree xelements_node thm
R30075:30088 compcert.lib.Maps PTree xelements_node thm
R30099:30114 compcert.lib.Maps PTree prev_append_prev thm
R30099:30114 compcert.lib.Maps PTree prev_append_prev thm
R30099:30114 compcert.lib.Maps PTree prev_append_prev thm
R30137:30150 compcert.lib.Maps PTree xelements_node thm
R30137:30150 compcert.lib.Maps PTree xelements_node thm
R30137:30150 compcert.lib.Maps PTree xelements_node thm
prf 30177:30191 PTree elements_remove
R30223:30223 compcert.lib.Maps PTree t def
R30225:30225 compcert.lib.Maps <> A var
R30249:30256 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30257:30263 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30269:30270 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30301:30304 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30281:30283 Coq.Init.Logic <> :type_scope:x_'='_x not
R30271:30278 compcert.lib.Maps PTree elements def
R30280:30280 compcert.lib.Maps <> m var
R30286:30289 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R30284:30285 compcert.lib.Maps <> l1 var
R30295:30298 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30290:30290 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30292:30292 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30294:30294 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30291:30291 compcert.lib.Maps <> i var
R30293:30293 compcert.lib.Maps <> v var
R30299:30300 compcert.lib.Maps <> l2 var
R30326:30328 Coq.Init.Logic <> :type_scope:x_'='_x not
R30305:30312 compcert.lib.Maps PTree elements def
R30315:30320 compcert.lib.Maps PTree remove def
R30324:30324 compcert.lib.Maps <> m var
R30322:30322 compcert.lib.Maps <> i var
R30331:30334 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R30329:30330 compcert.lib.Maps <> l1 var
R30335:30336 compcert.lib.Maps <> l2 var
R30240:30242 Coq.Init.Logic <> :type_scope:x_'='_x not
R30233:30235 compcert.lib.Maps PTree get def
R30239:30239 compcert.lib.Maps <> m var
R30237:30237 compcert.lib.Maps <> i var
R30243:30246 Coq.Init.Datatypes <> Some constr
R30248:30248 compcert.lib.Maps <> v var
R30368:30383 compcert.lib.Maps PTree xelements_remove thm
R30411:30412 Coq.Numbers.BinNums <> xH constr
R30428:30443 compcert.lib.Maps PTree prev_append_prev thm
R30428:30443 compcert.lib.Maps PTree prev_append_prev thm
R30428:30443 compcert.lib.Maps PTree prev_append_prev thm
def 30471:30475 PTree xfold
R30494:30497 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30506:30509 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30511:30514 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30515:30515 compcert.lib.Maps <> B var
R30510:30510 compcert.lib.Maps <> A var
R30498:30505 Coq.Numbers.BinNums <> positive ind
R30493:30493 compcert.lib.Maps <> B var
R30539:30546 Coq.Numbers.BinNums <> positive ind
R30553:30553 compcert.lib.Maps PTree t def
R30555:30555 compcert.lib.Maps <> A var
R30562:30562 compcert.lib.Maps <> B var
R30578:30578 compcert.lib.Maps <> B var
R30593:30593 compcert.lib.Maps <> m var
R30606:30609 compcert.lib.Maps PTree Leaf constr
R30614:30614 compcert.lib.Maps <> v var
R30622:30625 compcert.lib.Maps PTree Node constr
R30629:30632 Coq.Init.Datatypes <> None constr
R30657:30661 compcert.lib.Maps <> xfold def
R30674:30674 compcert.lib.Maps <> v var
R30666:30667 Coq.Numbers.BinNums <> xO constr
R30669:30669 compcert.lib.Maps <> i var
R30663:30663 compcert.lib.Maps <> f var
R30687:30691 compcert.lib.Maps <> xfold def
R30704:30705 compcert.lib.Maps <> v1 var
R30696:30697 Coq.Numbers.BinNums <> xI constr
R30699:30699 compcert.lib.Maps <> i var
R30693:30693 compcert.lib.Maps <> f var
R30713:30716 compcert.lib.Maps PTree Node constr
R30721:30724 Coq.Init.Datatypes <> Some constr
R30752:30756 compcert.lib.Maps <> xfold def
R30769:30769 compcert.lib.Maps <> v var
R30761:30762 Coq.Numbers.BinNums <> xO constr
R30764:30764 compcert.lib.Maps <> i var
R30758:30758 compcert.lib.Maps <> f var
R30792:30792 compcert.lib.Maps <> f var
R30798:30801 compcert.lib.Maps PTree prev def
R30803:30803 compcert.lib.Maps <> i var
R30794:30795 compcert.lib.Maps <> v1 var
R30819:30823 compcert.lib.Maps <> xfold def
R30836:30837 compcert.lib.Maps <> v2 var
R30828:30829 Coq.Numbers.BinNums <> xI constr
R30831:30831 compcert.lib.Maps <> i var
R30825:30825 compcert.lib.Maps <> f var
def 30862:30865 PTree fold
R30885:30888 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30897:30900 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30902:30905 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30906:30906 compcert.lib.Maps <> B var
R30901:30901 compcert.lib.Maps <> A var
R30889:30896 Coq.Numbers.BinNums <> positive ind
R30884:30884 compcert.lib.Maps <> B var
R30913:30913 compcert.lib.Maps PTree t def
R30915:30915 compcert.lib.Maps <> A var
R30922:30922 compcert.lib.Maps <> B var
R30932:30936 compcert.lib.Maps PTree xfold def
R30945:30945 compcert.lib.Maps <> v var
R30943:30943 compcert.lib.Maps <> m var
R30940:30941 Coq.Numbers.BinNums <> xH constr
R30938:30938 compcert.lib.Maps <> f var
prf 30957:30971 PTree xfold_xelements
R31002:31005 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31014:31017 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31019:31022 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31023:31023 compcert.lib.Maps <> B var
R31018:31018 compcert.lib.Maps <> A var
R31006:31013 Coq.Numbers.BinNums <> positive ind
R31001:31001 compcert.lib.Maps <> B var
R31104:31110 Coq.Init.Logic <> :type_scope:x_'='_x not
R31039:31052 Coq.Lists.List <> fold_left def
R31090:31094 compcert.lib.Maps PTree xfold def
R31102:31102 compcert.lib.Maps <> v var
R31100:31100 compcert.lib.Maps <> m var
R31098:31098 compcert.lib.Maps <> i var
R31096:31096 compcert.lib.Maps <> f var
R31087:31087 compcert.lib.Maps <> l var
R31066:31066 compcert.lib.Maps <> f var
R31079:31081 Coq.Init.Datatypes <> snd def
R31083:31083 compcert.lib.Maps <> p var
R31071:31073 Coq.Init.Datatypes <> fst def
R31075:31075 compcert.lib.Maps <> p var
R31068:31068 compcert.lib.Maps <> a var
R31111:31124 Coq.Lists.List <> fold_left def
R31177:31177 compcert.lib.Maps <> v var
R31160:31168 compcert.lib.Maps PTree xelements def
R31174:31174 compcert.lib.Maps <> l var
R31172:31172 compcert.lib.Maps <> i var
R31170:31170 compcert.lib.Maps <> m var
R31138:31138 compcert.lib.Maps <> f var
R31151:31153 Coq.Init.Datatypes <> snd def
R31155:31155 compcert.lib.Maps <> p var
R31143:31145 Coq.Init.Datatypes <> fst def
R31147:31147 compcert.lib.Maps <> p var
R31140:31140 compcert.lib.Maps <> a var
prf 31367:31375 PTree fold_spec
R31406:31409 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31418:31421 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31423:31426 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31427:31427 compcert.lib.Maps <> B var
R31422:31422 compcert.lib.Maps <> A var
R31410:31417 Coq.Numbers.BinNums <> positive ind
R31405:31405 compcert.lib.Maps <> B var
R31434:31434 compcert.lib.Maps <> B var
R31441:31441 compcert.lib.Maps PTree t def
R31443:31443 compcert.lib.Maps <> A var
R31461:31467 Coq.Init.Logic <> :type_scope:x_'='_x not
R31451:31454 compcert.lib.Maps PTree fold def
R31460:31460 compcert.lib.Maps <> v var
R31458:31458 compcert.lib.Maps <> m var
R31456:31456 compcert.lib.Maps <> f var
R31468:31481 Coq.Lists.List <> fold_left def
R31529:31529 compcert.lib.Maps <> v var
R31517:31524 compcert.lib.Maps PTree elements def
R31526:31526 compcert.lib.Maps <> m var
R31495:31495 compcert.lib.Maps <> f var
R31508:31510 Coq.Init.Datatypes <> snd def
R31512:31512 compcert.lib.Maps <> p var
R31500:31502 Coq.Init.Datatypes <> fst def
R31504:31504 compcert.lib.Maps <> p var
R31497:31497 compcert.lib.Maps <> a var
R31560:31563 compcert.lib.Maps PTree fold def
R31566:31573 compcert.lib.Maps PTree elements def
R31587:31601 compcert.lib.Maps PTree xfold_xelements thm
R31587:31601 compcert.lib.Maps PTree xfold_xelements thm
R31587:31601 compcert.lib.Maps PTree xfold_xelements thm
def 31629:31633 PTree fold1
R31652:31655 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31657:31660 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31661:31661 compcert.lib.Maps <> B var
R31656:31656 compcert.lib.Maps <> A var
R31651:31651 compcert.lib.Maps <> B var
R31668:31668 compcert.lib.Maps PTree t def
R31670:31670 compcert.lib.Maps <> A var
R31677:31677 compcert.lib.Maps <> B var
R31693:31693 compcert.lib.Maps <> B var
R31708:31708 compcert.lib.Maps <> m var
R31721:31724 compcert.lib.Maps PTree Leaf constr
R31729:31729 compcert.lib.Maps <> v var
R31737:31740 compcert.lib.Maps PTree Node constr
R31744:31747 Coq.Init.Datatypes <> None constr
R31772:31776 compcert.lib.Maps <> fold1 def
R31782:31782 compcert.lib.Maps <> v var
R31778:31778 compcert.lib.Maps <> f var
R31795:31799 compcert.lib.Maps <> fold1 def
R31805:31806 compcert.lib.Maps <> v1 var
R31801:31801 compcert.lib.Maps <> f var
R31814:31817 compcert.lib.Maps PTree Node constr
R31822:31825 Coq.Init.Datatypes <> Some constr
R31853:31857 compcert.lib.Maps <> fold1 def
R31863:31863 compcert.lib.Maps <> v var
R31859:31859 compcert.lib.Maps <> f var
R31886:31886 compcert.lib.Maps <> f var
R31888:31889 compcert.lib.Maps <> v1 var
R31904:31908 compcert.lib.Maps <> fold1 def
R31914:31915 compcert.lib.Maps <> v2 var
R31910:31910 compcert.lib.Maps <> f var
prf 31935:31949 PTree fold1_xelements
R31980:31983 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31985:31988 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31989:31989 compcert.lib.Maps <> B var
R31984:31984 compcert.lib.Maps <> A var
R31979:31979 compcert.lib.Maps <> B var
R32060:32066 Coq.Init.Logic <> :type_scope:x_'='_x not
R32005:32018 Coq.Lists.List <> fold_left def
R32048:32052 compcert.lib.Maps PTree fold1 def
R32058:32058 compcert.lib.Maps <> v var
R32056:32056 compcert.lib.Maps <> m var
R32054:32054 compcert.lib.Maps <> f var
R32045:32045 compcert.lib.Maps <> l var
R32032:32032 compcert.lib.Maps <> f var
R32037:32039 Coq.Init.Datatypes <> snd def
R32041:32041 compcert.lib.Maps <> p var
R32034:32034 compcert.lib.Maps <> a var
R32067:32080 Coq.Lists.List <> fold_left def
R32125:32125 compcert.lib.Maps <> v var
R32108:32116 compcert.lib.Maps PTree xelements def
R32122:32122 compcert.lib.Maps <> l var
R32120:32120 compcert.lib.Maps <> i var
R32118:32118 compcert.lib.Maps <> m var
R32094:32094 compcert.lib.Maps <> f var
R32099:32101 Coq.Init.Datatypes <> snd def
R32103:32103 compcert.lib.Maps <> p var
R32096:32096 compcert.lib.Maps <> a var
prf 32315:32324 PTree fold1_spec
R32355:32358 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32360:32363 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32364:32364 compcert.lib.Maps <> B var
R32359:32359 compcert.lib.Maps <> A var
R32354:32354 compcert.lib.Maps <> B var
R32371:32371 compcert.lib.Maps <> B var
R32378:32378 compcert.lib.Maps PTree t def
R32380:32380 compcert.lib.Maps <> A var
R32399:32405 Coq.Init.Logic <> :type_scope:x_'='_x not
R32388:32392 compcert.lib.Maps PTree fold1 def
R32398:32398 compcert.lib.Maps <> v var
R32396:32396 compcert.lib.Maps <> m var
R32394:32394 compcert.lib.Maps <> f var
R32406:32419 Coq.Lists.List <> fold_left def
R32459:32459 compcert.lib.Maps <> v var
R32447:32454 compcert.lib.Maps PTree elements def
R32456:32456 compcert.lib.Maps <> m var
R32433:32433 compcert.lib.Maps <> f var
R32438:32440 Coq.Init.Datatypes <> snd def
R32442:32442 compcert.lib.Maps <> p var
R32435:32435 compcert.lib.Maps <> a var
R32517:32519 Coq.Init.Datatypes <> nil constr
R32530:32532 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R32522:32529 Coq.Numbers.BinNums <> positive ind
R32489:32503 compcert.lib.Maps PTree fold1_xelements thm
R32517:32519 Coq.Init.Datatypes <> nil constr
R32530:32532 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R32522:32529 Coq.Numbers.BinNums <> positive ind
R32489:32503 compcert.lib.Maps PTree fold1_xelements thm
R32550:32554 compcert.lib.Maps PTree <> mod
R32630:32632 compcert.lib.Maps MAP <> mod
mod 32622:32625 <> PMap
def 32648:32650 PMap elt
R32655:32662 Coq.Numbers.BinNums <> positive ind
def 32678:32683 PMap elt_eq
R32688:32690 compcert.lib.Coqlib <> peq def
def 32707:32707 PMap t
R32732:32734 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R32731:32731 compcert.lib.Maps <> A var
R32735:32741 compcert.lib.Maps PTree t def
R32743:32743 compcert.lib.Maps <> A var
def 32766:32769 PMap init
R32787:32787 compcert.lib.Maps <> A var
R32797:32797 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32799:32800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32814:32814 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32798:32798 compcert.lib.Maps <> x var
R32801:32811 compcert.lib.Maps PTree empty def
R32813:32813 compcert.lib.Maps <> A var
def 32831:32833 PMap get
R32851:32858 Coq.Numbers.BinNums <> positive ind
R32866:32866 compcert.lib.Maps PMap t def
R32868:32868 compcert.lib.Maps <> A var
R32884:32892 compcert.lib.Maps PTree get def
R32897:32899 Coq.Init.Datatypes <> snd def
R32901:32901 compcert.lib.Maps <> m var
R32894:32894 compcert.lib.Maps <> i var
R32915:32918 Coq.Init.Datatypes <> Some constr
R32933:32936 Coq.Init.Datatypes <> None constr
R32941:32943 Coq.Init.Datatypes <> fst def
R32945:32945 compcert.lib.Maps <> m var
def 32970:32972 PMap set
R32990:32997 Coq.Numbers.BinNums <> positive ind
R33005:33005 compcert.lib.Maps <> A var
R33013:33013 compcert.lib.Maps PMap t def
R33015:33015 compcert.lib.Maps <> A var
R33025:33025 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33031:33032 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33054:33054 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33026:33028 Coq.Init.Datatypes <> fst def
R33030:33030 compcert.lib.Maps <> m var
R33033:33041 compcert.lib.Maps PTree set def
R33048:33050 Coq.Init.Datatypes <> snd def
R33052:33052 compcert.lib.Maps <> m var
R33045:33045 compcert.lib.Maps <> x var
R33043:33043 compcert.lib.Maps <> i var
prf 33068:33069 PMap gi
R33097:33104 Coq.Numbers.BinNums <> positive ind
R33111:33111 compcert.lib.Maps <> A var
R33129:33131 Coq.Init.Logic <> :type_scope:x_'='_x not
R33115:33117 compcert.lib.Maps PMap get def
R33122:33125 compcert.lib.Maps PMap init def
R33127:33127 compcert.lib.Maps <> x var
R33119:33119 compcert.lib.Maps <> i var
R33132:33132 compcert.lib.Maps <> x var
R33163:33166 compcert.lib.Maps PMap init def
R33176:33178 compcert.lib.Maps PMap get def
R33196:33207 compcert.lib.Maps PTree gempty thm
R33196:33207 compcert.lib.Maps PTree gempty thm
R33196:33207 compcert.lib.Maps PTree gempty thm
prf 33234:33236 PMap gss
R33264:33271 Coq.Numbers.BinNums <> positive ind
R33278:33278 compcert.lib.Maps <> A var
R33285:33285 compcert.lib.Maps PMap t def
R33287:33287 compcert.lib.Maps <> A var
R33308:33310 Coq.Init.Logic <> :type_scope:x_'='_x not
R33291:33293 compcert.lib.Maps PMap get def
R33298:33300 compcert.lib.Maps PMap set def
R33306:33306 compcert.lib.Maps <> m var
R33304:33304 compcert.lib.Maps <> x var
R33302:33302 compcert.lib.Maps <> i var
R33295:33295 compcert.lib.Maps <> i var
R33311:33311 compcert.lib.Maps <> x var
R33342:33344 compcert.lib.Maps PMap get def
R33354:33356 compcert.lib.Maps PMap set def
R33374:33382 compcert.lib.Maps PTree gss thm
R33374:33382 compcert.lib.Maps PTree gss thm
R33374:33382 compcert.lib.Maps PTree gss thm
prf 33409:33411 PMap gso
R33441:33448 Coq.Numbers.BinNums <> positive ind
R33455:33455 compcert.lib.Maps <> A var
R33462:33462 compcert.lib.Maps PMap t def
R33464:33464 compcert.lib.Maps <> A var
R33478:33481 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33499:33501 Coq.Init.Logic <> :type_scope:x_'='_x not
R33482:33484 compcert.lib.Maps PMap get def
R33489:33491 compcert.lib.Maps PMap set def
R33497:33497 compcert.lib.Maps <> m var
R33495:33495 compcert.lib.Maps <> x var
R33493:33493 compcert.lib.Maps <> j var
R33486:33486 compcert.lib.Maps <> i var
R33502:33504 compcert.lib.Maps PMap get def
R33508:33508 compcert.lib.Maps <> m var
R33506:33506 compcert.lib.Maps <> i var
R33473:33476 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R33472:33472 compcert.lib.Maps <> i var
R33477:33477 compcert.lib.Maps <> j var
R33539:33541 compcert.lib.Maps PMap get def
R33551:33553 compcert.lib.Maps PMap set def
R33571:33579 compcert.lib.Maps PTree gso thm
R33571:33579 compcert.lib.Maps PTree gso thm
R33571:33579 compcert.lib.Maps PTree gso thm
R33571:33579 compcert.lib.Maps PTree gso thm
prf 33606:33611 PMap gsspec
R33641:33648 Coq.Numbers.BinNums <> positive ind
R33655:33655 compcert.lib.Maps <> A var
R33662:33662 compcert.lib.Maps PMap t def
R33664:33664 compcert.lib.Maps <> A var
R33689:33691 Coq.Init.Logic <> :type_scope:x_'='_x not
R33672:33674 compcert.lib.Maps PMap get def
R33679:33681 compcert.lib.Maps PMap set def
R33687:33687 compcert.lib.Maps <> m var
R33685:33685 compcert.lib.Maps <> x var
R33683:33683 compcert.lib.Maps <> j var
R33676:33676 compcert.lib.Maps <> i var
R33695:33697 compcert.lib.Coqlib <> peq def
R33701:33701 compcert.lib.Maps <> j var
R33699:33699 compcert.lib.Maps <> i var
R33715:33717 compcert.lib.Maps PMap get def
R33721:33721 compcert.lib.Maps <> m var
R33719:33719 compcert.lib.Maps <> i var
R33708:33708 compcert.lib.Maps <> x var
R33755:33757 compcert.lib.Coqlib <> peq def
R33755:33757 compcert.lib.Coqlib <> peq def
R33787:33789 compcert.lib.Maps PMap gss thm
R33787:33789 compcert.lib.Maps PMap gss thm
R33809:33811 compcert.lib.Maps PMap gso thm
R33809:33811 compcert.lib.Maps PMap gso thm
prf 33838:33844 PMap gsident
R33874:33881 Coq.Numbers.BinNums <> positive ind
R33888:33888 compcert.lib.Maps PMap t def
R33890:33890 compcert.lib.Maps <> A var
R33923:33925 Coq.Init.Logic <> :type_scope:x_'='_x not
R33898:33900 compcert.lib.Maps PMap get def
R33905:33907 compcert.lib.Maps PMap set def
R33921:33921 compcert.lib.Maps <> m var
R33912:33914 compcert.lib.Maps PMap get def
R33918:33918 compcert.lib.Maps <> m var
R33916:33916 compcert.lib.Maps <> i var
R33909:33909 compcert.lib.Maps <> i var
R33902:33902 compcert.lib.Maps <> j var
R33926:33928 compcert.lib.Maps PMap get def
R33932:33932 compcert.lib.Maps <> m var
R33930:33930 compcert.lib.Maps <> j var
R33966:33968 compcert.lib.Coqlib <> peq def
R33966:33968 compcert.lib.Coqlib <> peq def
R34000:34002 compcert.lib.Maps PMap gss thm
R34000:34002 compcert.lib.Maps PMap gss thm
R34000:34002 compcert.lib.Maps PMap gss thm
R34024:34026 compcert.lib.Maps PMap gso thm
R34024:34026 compcert.lib.Maps PMap gso thm
R34024:34026 compcert.lib.Maps PMap gso thm
R34024:34026 compcert.lib.Maps PMap gso thm
def 34056:34058 PMap map
R34079:34082 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34083:34083 compcert.lib.Maps <> B var
R34078:34078 compcert.lib.Maps <> A var
R34091:34091 compcert.lib.Maps PMap t def
R34093:34093 compcert.lib.Maps <> A var
R34098:34098 compcert.lib.Maps PMap t def
R34100:34100 compcert.lib.Maps <> B var
R34109:34109 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34119:34120 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34141:34141 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34110:34110 compcert.lib.Maps <> f var
R34113:34115 Coq.Init.Datatypes <> fst def
R34117:34117 compcert.lib.Maps <> m var
R34121:34130 compcert.lib.Maps PTree map1 def
R34135:34137 Coq.Init.Datatypes <> snd def
R34139:34139 compcert.lib.Maps <> m var
R34132:34132 compcert.lib.Maps <> f var
prf 34155:34158 PMap gmap
R34189:34192 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34193:34193 compcert.lib.Maps <> B var
R34188:34188 compcert.lib.Maps <> A var
R34200:34207 Coq.Numbers.BinNums <> positive ind
R34214:34214 compcert.lib.Maps PMap t def
R34216:34216 compcert.lib.Maps <> A var
R34239:34241 Coq.Init.Logic <> :type_scope:x_'='_x not
R34224:34226 compcert.lib.Maps PMap get def
R34231:34233 compcert.lib.Maps PMap map def
R34237:34237 compcert.lib.Maps <> m var
R34235:34235 compcert.lib.Maps <> f var
R34228:34228 compcert.lib.Maps <> i var
R34242:34242 compcert.lib.Maps <> f var
R34244:34246 compcert.lib.Maps PMap get def
R34250:34250 compcert.lib.Maps <> m var
R34248:34248 compcert.lib.Maps <> i var
R34282:34284 compcert.lib.Maps PMap map def
R34294:34296 compcert.lib.Maps PMap get def
R34314:34324 compcert.lib.Maps PTree gmap1 thm
R34314:34324 compcert.lib.Maps PTree gmap1 thm
R34314:34324 compcert.lib.Maps PTree gmap1 thm
R34338:34347 compcert.lib.Coqlib <> option_map def
R34360:34368 compcert.lib.Maps PTree get def
R34373:34375 Coq.Init.Datatypes <> snd def
R34360:34368 compcert.lib.Maps PTree get def
R34373:34375 Coq.Init.Datatypes <> snd def
prf 34406:34409 PMap set2
R34437:34439 compcert.lib.Maps PMap elt def
R34448:34448 compcert.lib.Maps <> A var
R34455:34455 compcert.lib.Maps PMap t def
R34457:34457 compcert.lib.Maps <> A var
R34484:34486 Coq.Init.Logic <> :type_scope:x_'='_x not
R34465:34467 compcert.lib.Maps PMap set def
R34474:34476 compcert.lib.Maps PMap set def
R34482:34482 compcert.lib.Maps <> m var
R34480:34480 compcert.lib.Maps <> x var
R34478:34478 compcert.lib.Maps <> i var
R34471:34471 compcert.lib.Maps <> y var
R34469:34469 compcert.lib.Maps <> i var
R34487:34489 compcert.lib.Maps PMap set def
R34495:34495 compcert.lib.Maps <> m var
R34493:34493 compcert.lib.Maps <> y var
R34491:34491 compcert.lib.Maps <> i var
R34526:34528 compcert.lib.Maps PMap set def
R34551:34560 compcert.lib.Maps PTree set2 thm
R34551:34560 compcert.lib.Maps PTree set2 thm
R34575:34578 compcert.lib.Maps PMap <> mod
modtype 34678:34689 <> INDEXED_TYPE
ax 34704:34704 INDEXED_TYPE t
ax 34725:34729 INDEXED_TYPE index
R34733:34736 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34737:34744 Coq.Numbers.BinNums <> positive ind
R34732:34732 compcert.lib.Maps INDEXED_TYPE t defax
ax 34755:34763 INDEXED_TYPE index_inj
R34779:34779 compcert.lib.Maps INDEXED_TYPE t defax
R34800:34803 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34805:34807 Coq.Init.Logic <> :type_scope:x_'='_x not
R34804:34804 compcert.lib.Maps <> x var
R34808:34808 compcert.lib.Maps <> y var
R34790:34792 Coq.Init.Logic <> :type_scope:x_'='_x not
R34783:34787 compcert.lib.Maps INDEXED_TYPE index defax
R34789:34789 compcert.lib.Maps <> x var
R34793:34797 compcert.lib.Maps INDEXED_TYPE index defax
R34799:34799 compcert.lib.Maps <> y var
ax 34823:34824 INDEXED_TYPE eq
R34840:34840 compcert.lib.Maps INDEXED_TYPE t defax
R34844:34844 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34850:34854 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34861:34861 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34846:34848 Coq.Init.Logic <> :type_scope:x_'='_x not
R34845:34845 compcert.lib.Maps <> x var
R34849:34849 compcert.lib.Maps <> y var
R34856:34859 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R34855:34855 compcert.lib.Maps <> x var
R34860:34860 compcert.lib.Maps <> y var
R34868:34879 compcert.lib.Maps INDEXED_TYPE <> modtype
R34898:34909 compcert.lib.Maps INDEXED_TYPE <> mod
mod 34890:34893 <> IMap
def 34927:34929 IMap elt
R34934:34936 compcert.lib.Maps X t defax
def 34952:34957 IMap elt_eq
R34962:34965 compcert.lib.Maps X eq defax
def 34981:34981 IMap t
R34989:34992 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35001:35006 compcert.lib.Maps PMap t def
def 35022:35025 IMap init
R35041:35041 compcert.lib.Maps <> A var
R35047:35055 compcert.lib.Maps PMap init def
R35057:35057 compcert.lib.Maps <> x var
def 35073:35075 IMap get
R35091:35093 compcert.lib.Maps X t defax
R35100:35100 compcert.lib.Maps IMap t def
R35102:35102 compcert.lib.Maps <> A var
R35108:35115 compcert.lib.Maps PMap get def
R35129:35129 compcert.lib.Maps <> m var
R35118:35124 compcert.lib.Maps X index defax
R35126:35126 compcert.lib.Maps <> i var
def 35145:35147 IMap set
R35163:35165 compcert.lib.Maps X t defax
R35172:35172 compcert.lib.Maps <> A var
R35179:35179 compcert.lib.Maps IMap t def
R35181:35181 compcert.lib.Maps <> A var
R35187:35194 compcert.lib.Maps PMap set def
R35210:35210 compcert.lib.Maps <> m var
R35208:35208 compcert.lib.Maps <> v var
R35197:35203 compcert.lib.Maps X index defax
R35205:35205 compcert.lib.Maps <> i var
def 35226:35228 IMap map
R35247:35250 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35251:35251 compcert.lib.Maps <> B var
R35246:35246 compcert.lib.Maps <> A var
R35258:35258 compcert.lib.Maps IMap t def
R35260:35260 compcert.lib.Maps <> A var
R35265:35265 compcert.lib.Maps IMap t def
R35267:35267 compcert.lib.Maps <> B var
R35272:35279 compcert.lib.Maps PMap map def
R35283:35283 compcert.lib.Maps <> m var
R35281:35281 compcert.lib.Maps <> f var
prf 35295:35296 IMap gi
R35324:35324 compcert.lib.Maps <> A var
R35331:35333 compcert.lib.Maps X t defax
R35351:35353 Coq.Init.Logic <> :type_scope:x_'='_x not
R35337:35339 compcert.lib.Maps IMap get def
R35344:35347 compcert.lib.Maps IMap init def
R35349:35349 compcert.lib.Maps <> x var
R35341:35341 compcert.lib.Maps <> i var
R35354:35354 compcert.lib.Maps <> x var
R35385:35387 compcert.lib.Maps IMap get def
R35390:35393 compcert.lib.Maps IMap init def
R35402:35408 compcert.lib.Maps PMap gi thm
R35402:35408 compcert.lib.Maps PMap gi thm
prf 35427:35429 IMap gss
R35457:35459 compcert.lib.Maps X t defax
R35466:35466 compcert.lib.Maps <> A var
R35473:35473 compcert.lib.Maps IMap t def
R35475:35475 compcert.lib.Maps <> A var
R35496:35498 Coq.Init.Logic <> :type_scope:x_'='_x not
R35479:35481 compcert.lib.Maps IMap get def
R35486:35488 compcert.lib.Maps IMap set def
R35494:35494 compcert.lib.Maps <> m var
R35492:35492 compcert.lib.Maps <> x var
R35490:35490 compcert.lib.Maps <> i var
R35483:35483 compcert.lib.Maps <> i var
R35499:35499 compcert.lib.Maps <> x var
R35530:35532 compcert.lib.Maps IMap get def
R35535:35537 compcert.lib.Maps IMap set def
R35546:35553 compcert.lib.Maps PMap gss thm
R35546:35553 compcert.lib.Maps PMap gss thm
prf 35572:35574 IMap gso
R35604:35606 compcert.lib.Maps X t defax
R35613:35613 compcert.lib.Maps <> A var
R35620:35620 compcert.lib.Maps IMap t def
R35622:35622 compcert.lib.Maps <> A var
R35636:35639 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35657:35659 Coq.Init.Logic <> :type_scope:x_'='_x not
R35640:35642 compcert.lib.Maps IMap get def
R35647:35649 compcert.lib.Maps IMap set def
R35655:35655 compcert.lib.Maps <> m var
R35653:35653 compcert.lib.Maps <> x var
R35651:35651 compcert.lib.Maps <> j var
R35644:35644 compcert.lib.Maps <> i var
R35660:35662 compcert.lib.Maps IMap get def
R35666:35666 compcert.lib.Maps <> m var
R35664:35664 compcert.lib.Maps <> i var
R35631:35634 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R35630:35630 compcert.lib.Maps <> i var
R35635:35635 compcert.lib.Maps <> j var
R35697:35699 compcert.lib.Maps IMap get def
R35702:35704 compcert.lib.Maps IMap set def
R35713:35720 compcert.lib.Maps PMap gso thm
R35713:35720 compcert.lib.Maps PMap gso thm
R35754:35764 compcert.lib.Maps X index_inj prfax
R35754:35764 compcert.lib.Maps X index_inj prfax
prf 35789:35794 IMap gsspec
R35824:35826 compcert.lib.Maps X t defax
R35833:35833 compcert.lib.Maps <> A var
R35840:35840 compcert.lib.Maps IMap t def
R35842:35842 compcert.lib.Maps <> A var
R35867:35869 Coq.Init.Logic <> :type_scope:x_'='_x not
R35850:35852 compcert.lib.Maps IMap get def
R35857:35859 compcert.lib.Maps IMap set def
R35865:35865 compcert.lib.Maps <> m var
R35863:35863 compcert.lib.Maps <> x var
R35861:35861 compcert.lib.Maps <> j var
R35854:35854 compcert.lib.Maps <> i var
R35873:35876 compcert.lib.Maps X eq defax
R35880:35880 compcert.lib.Maps <> j var
R35878:35878 compcert.lib.Maps <> i var
R35894:35896 compcert.lib.Maps IMap get def
R35900:35900 compcert.lib.Maps <> m var
R35898:35898 compcert.lib.Maps <> i var
R35887:35887 compcert.lib.Maps <> x var
R35931:35933 compcert.lib.Maps IMap get def
R35936:35938 compcert.lib.Maps IMap set def
R35953:35963 compcert.lib.Maps PMap gsspec thm
R35953:35963 compcert.lib.Maps PMap gsspec thm
R35953:35963 compcert.lib.Maps PMap gsspec thm
R35976:35979 compcert.lib.Maps X eq defax
R35976:35979 compcert.lib.Maps X eq defax
R36015:36022 compcert.lib.Coqlib <> peq_true thm
R36015:36022 compcert.lib.Coqlib <> peq_true thm
R36015:36022 compcert.lib.Coqlib <> peq_true thm
R36050:36058 compcert.lib.Coqlib <> peq_false thm
R36050:36058 compcert.lib.Coqlib <> peq_false thm
R36050:36058 compcert.lib.Coqlib <> peq_false thm
R36050:36058 compcert.lib.Coqlib <> peq_false thm
R36104:36114 compcert.lib.Maps X index_inj prfax
R36104:36114 compcert.lib.Maps X index_inj prfax
prf 36139:36142 IMap gmap
R36173:36176 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36177:36177 compcert.lib.Maps <> B var
R36172:36172 compcert.lib.Maps <> A var
R36184:36186 compcert.lib.Maps X t defax
R36193:36193 compcert.lib.Maps IMap t def
R36195:36195 compcert.lib.Maps <> A var
R36218:36220 Coq.Init.Logic <> :type_scope:x_'='_x not
R36203:36205 compcert.lib.Maps IMap get def
R36210:36212 compcert.lib.Maps IMap map def
R36216:36216 compcert.lib.Maps <> m var
R36214:36214 compcert.lib.Maps <> f var
R36207:36207 compcert.lib.Maps <> i var
R36221:36221 compcert.lib.Maps <> f var
R36223:36225 compcert.lib.Maps IMap get def
R36229:36229 compcert.lib.Maps <> m var
R36227:36227 compcert.lib.Maps <> i var
R36261:36263 compcert.lib.Maps IMap map def
R36266:36268 compcert.lib.Maps IMap get def
R36277:36285 compcert.lib.Maps PMap gmap thm
R36277:36285 compcert.lib.Maps PMap gmap thm
prf 36304:36307 IMap set2
R36335:36337 compcert.lib.Maps IMap elt def
R36346:36346 compcert.lib.Maps <> A var
R36353:36353 compcert.lib.Maps IMap t def
R36355:36355 compcert.lib.Maps <> A var
R36382:36384 Coq.Init.Logic <> :type_scope:x_'='_x not
R36363:36365 compcert.lib.Maps IMap set def
R36372:36374 compcert.lib.Maps IMap set def
R36380:36380 compcert.lib.Maps <> m var
R36378:36378 compcert.lib.Maps <> x var
R36376:36376 compcert.lib.Maps <> i var
R36369:36369 compcert.lib.Maps <> y var
R36367:36367 compcert.lib.Maps <> i var
R36385:36387 compcert.lib.Maps IMap set def
R36393:36393 compcert.lib.Maps <> m var
R36391:36391 compcert.lib.Maps <> y var
R36389:36389 compcert.lib.Maps <> i var
R36424:36426 compcert.lib.Maps IMap set def
R36435:36443 compcert.lib.Maps PMap set2 thm
R36435:36443 compcert.lib.Maps PMap set2 thm
R36458:36461 compcert.lib.Maps IMap <> mod
mod 36472:36479 <> ZIndexed
def 36495:36495 ZIndexed t
R36500:36500 Coq.Numbers.BinNums <> Z ind
def 36516:36520 ZIndexed index
R36526:36526 Coq.Numbers.BinNums <> Z ind
R36530:36537 Coq.Numbers.BinNums <> positive ind
R36552:36552 compcert.lib.Maps <> z var
R36565:36566 Coq.Numbers.BinNums <> Z0 constr
R36571:36572 Coq.Numbers.BinNums <> xH constr
R36580:36583 Coq.Numbers.BinNums <> Zpos constr
R36590:36591 Coq.Numbers.BinNums <> xO constr
R36601:36604 Coq.Numbers.BinNums <> Zneg constr
R36611:36612 Coq.Numbers.BinNums <> xI constr
prf 36633:36641 ZIndexed index_inj
R36657:36657 Coq.Numbers.BinNums <> Z ind
R36678:36681 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36683:36685 Coq.Init.Logic <> :type_scope:x_'='_x not
R36682:36682 compcert.lib.Maps <> x var
R36686:36686 compcert.lib.Maps <> y var
R36668:36670 Coq.Init.Logic <> :type_scope:x_'='_x not
R36661:36665 compcert.lib.Maps ZIndexed index def
R36667:36667 compcert.lib.Maps <> x var
R36671:36675 compcert.lib.Maps ZIndexed index def
R36677:36677 compcert.lib.Maps <> y var
R36709:36713 compcert.lib.Maps ZIndexed index def
def 36839:36840 ZIndexed eq
R36845:36847 compcert.lib.Coqlib <> zeq def
R36854:36861 compcert.lib.Maps ZIndexed <> mod
R36880:36883 compcert.lib.Maps IMap <> modtype
R36885:36892 compcert.lib.Maps ZIndexed <> modtype
mod 36872:36875 <> ZMap
mod 36904:36911 <> NIndexed
def 36927:36927 NIndexed t
R36932:36932 Coq.Numbers.BinNums <> N ind
def 36948:36952 NIndexed index
R36958:36958 Coq.Numbers.BinNums <> N ind
R36962:36969 Coq.Numbers.BinNums <> positive ind
R36984:36984 compcert.lib.Maps <> n var
R36997:36998 Coq.Numbers.BinNums <> N0 constr
R37003:37004 Coq.Numbers.BinNums <> xH constr
R37012:37015 Coq.Numbers.BinNums <> Npos constr
R37022:37023 Coq.Numbers.BinNums <> xO constr
prf 37044:37052 NIndexed index_inj
R37068:37068 Coq.Numbers.BinNums <> N ind
R37089:37092 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37094:37096 Coq.Init.Logic <> :type_scope:x_'='_x not
R37093:37093 compcert.lib.Maps <> x var
R37097:37097 compcert.lib.Maps <> y var
R37079:37081 Coq.Init.Logic <> :type_scope:x_'='_x not
R37072:37076 compcert.lib.Maps NIndexed index def
R37078:37078 compcert.lib.Maps <> x var
R37082:37086 compcert.lib.Maps NIndexed index def
R37088:37088 compcert.lib.Maps <> y var
R37120:37124 compcert.lib.Maps NIndexed index def
prf 37229:37230 NIndexed eq
R37246:37246 Coq.Numbers.BinNums <> N ind
R37250:37250 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37256:37260 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37267:37267 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37252:37254 Coq.Init.Logic <> :type_scope:x_'='_x not
R37251:37251 compcert.lib.Maps <> x var
R37255:37255 compcert.lib.Maps <> y var
R37262:37265 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37261:37261 compcert.lib.Maps <> x var
R37266:37266 compcert.lib.Maps <> y var
R37306:37308 compcert.lib.Coqlib <> peq def
R37306:37308 compcert.lib.Coqlib <> peq def
R37322:37329 compcert.lib.Maps NIndexed <> mod
R37348:37351 compcert.lib.Maps IMap <> modtype
R37353:37360 compcert.lib.Maps NIndexed <> modtype
mod 37340:37343 <> NMap
modtype 37451:37463 <> EQUALITY_TYPE
ax 37478:37478 EQUALITY_TYPE t
ax 37499:37500 EQUALITY_TYPE eq
R37516:37516 compcert.lib.Maps EQUALITY_TYPE t defax
R37520:37520 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37526:37530 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37537:37537 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37522:37524 Coq.Init.Logic <> :type_scope:x_'='_x not
R37521:37521 compcert.lib.Maps <> x var
R37525:37525 compcert.lib.Maps <> y var
R37532:37535 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37531:37531 compcert.lib.Maps <> x var
R37536:37536 compcert.lib.Maps <> y var
R37544:37556 compcert.lib.Maps EQUALITY_TYPE <> modtype
R37575:37587 compcert.lib.Maps EQUALITY_TYPE <> mod
R37593:37595 compcert.lib.Maps MAP <> mod
mod 37567:37570 <> EMap
def 37612:37614 EMap elt
R37619:37621 compcert.lib.Maps X t defax
def 37637:37642 EMap elt_eq
R37647:37650 compcert.lib.Maps X eq defax
def 37666:37666 EMap t
R37684:37687 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37688:37688 compcert.lib.Maps <> A var
R37681:37683 compcert.lib.Maps X t defax
def 37704:37707 EMap init
R37723:37723 compcert.lib.Maps <> A var
R37737:37739 compcert.lib.Maps X t defax
R37745:37745 compcert.lib.Maps <> v var
def 37761:37763 EMap get
R37779:37781 compcert.lib.Maps X t defax
R37788:37788 compcert.lib.Maps EMap t def
R37790:37790 compcert.lib.Maps <> A var
R37796:37796 compcert.lib.Maps <> m var
R37798:37798 compcert.lib.Maps <> x var
def 37814:37816 EMap set
R37832:37834 compcert.lib.Maps X t defax
R37841:37841 compcert.lib.Maps <> A var
R37848:37848 compcert.lib.Maps EMap t def
R37850:37850 compcert.lib.Maps <> A var
R37868:37870 compcert.lib.Maps X t defax
R37879:37882 compcert.lib.Maps X eq defax
R37886:37886 compcert.lib.Maps <> x var
R37884:37884 compcert.lib.Maps <> y var
R37900:37900 compcert.lib.Maps <> m var
R37902:37902 compcert.lib.Maps <> y var
R37893:37893 compcert.lib.Maps <> v var
prf 37913:37914 EMap gi
R37942:37944 compcert.lib.Maps EMap elt def
R37951:37951 compcert.lib.Maps <> A var
R37963:37965 Coq.Init.Logic <> :type_scope:x_'='_x not
R37955:37958 compcert.lib.Maps EMap init def
R37962:37962 compcert.lib.Maps <> i var
R37960:37960 compcert.lib.Maps <> x var
R37966:37966 compcert.lib.Maps <> x var
prf 38018:38020 EMap gss
R38048:38050 compcert.lib.Maps EMap elt def
R38057:38057 compcert.lib.Maps <> A var
R38064:38064 compcert.lib.Maps EMap t def
R38066:38066 compcert.lib.Maps <> A var
R38083:38085 Coq.Init.Logic <> :type_scope:x_'='_x not
R38071:38073 compcert.lib.Maps EMap set def
R38079:38079 compcert.lib.Maps <> m var
R38077:38077 compcert.lib.Maps <> x var
R38075:38075 compcert.lib.Maps <> i var
R38082:38082 compcert.lib.Maps <> i var
R38086:38086 compcert.lib.Maps <> x var
R38117:38119 compcert.lib.Maps EMap set def
R38128:38131 compcert.lib.Maps X eq defax
R38128:38131 compcert.lib.Maps X eq defax
prf 38185:38187 EMap gso
R38217:38219 compcert.lib.Maps EMap elt def
R38226:38226 compcert.lib.Maps <> A var
R38233:38233 compcert.lib.Maps EMap t def
R38235:38235 compcert.lib.Maps <> A var
R38249:38252 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38266:38268 Coq.Init.Logic <> :type_scope:x_'='_x not
R38254:38256 compcert.lib.Maps EMap set def
R38262:38262 compcert.lib.Maps <> m var
R38260:38260 compcert.lib.Maps <> x var
R38258:38258 compcert.lib.Maps <> j var
R38265:38265 compcert.lib.Maps <> i var
R38269:38269 compcert.lib.Maps <> m var
R38271:38271 compcert.lib.Maps <> i var
R38244:38247 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R38243:38243 compcert.lib.Maps <> i var
R38248:38248 compcert.lib.Maps <> j var
R38302:38304 compcert.lib.Maps EMap set def
R38313:38316 compcert.lib.Maps X eq defax
R38313:38316 compcert.lib.Maps X eq defax
prf 38375:38380 EMap gsspec
R38410:38412 compcert.lib.Maps EMap elt def
R38419:38419 compcert.lib.Maps <> A var
R38426:38426 compcert.lib.Maps EMap t def
R38428:38428 compcert.lib.Maps <> A var
R38453:38455 Coq.Init.Logic <> :type_scope:x_'='_x not
R38436:38438 compcert.lib.Maps EMap get def
R38443:38445 compcert.lib.Maps EMap set def
R38451:38451 compcert.lib.Maps <> m var
R38449:38449 compcert.lib.Maps <> x var
R38447:38447 compcert.lib.Maps <> j var
R38440:38440 compcert.lib.Maps <> i var
R38459:38464 compcert.lib.Maps EMap elt_eq def
R38468:38468 compcert.lib.Maps <> j var
R38466:38466 compcert.lib.Maps <> i var
R38482:38484 compcert.lib.Maps EMap get def
R38488:38488 compcert.lib.Maps <> m var
R38486:38486 compcert.lib.Maps <> i var
R38475:38475 compcert.lib.Maps <> x var
R38519:38521 compcert.lib.Maps EMap get def
R38524:38526 compcert.lib.Maps EMap set def
R38529:38534 compcert.lib.Maps EMap elt_eq def
prf 38565:38571 EMap gsident
R38601:38603 compcert.lib.Maps EMap elt def
R38610:38610 compcert.lib.Maps EMap t def
R38612:38612 compcert.lib.Maps <> A var
R38641:38643 Coq.Init.Logic <> :type_scope:x_'='_x not
R38616:38618 compcert.lib.Maps EMap get def
R38623:38625 compcert.lib.Maps EMap set def
R38639:38639 compcert.lib.Maps <> m var
R38630:38632 compcert.lib.Maps EMap get def
R38636:38636 compcert.lib.Maps <> m var
R38634:38634 compcert.lib.Maps <> i var
R38627:38627 compcert.lib.Maps <> i var
R38620:38620 compcert.lib.Maps <> j var
R38644:38646 compcert.lib.Maps EMap get def
R38650:38650 compcert.lib.Maps <> m var
R38648:38648 compcert.lib.Maps <> j var
R38681:38683 compcert.lib.Maps EMap get def
R38686:38688 compcert.lib.Maps EMap set def
R38697:38700 compcert.lib.Maps X eq defax
R38697:38700 compcert.lib.Maps X eq defax
def 38764:38766 EMap map
R38785:38788 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38789:38789 compcert.lib.Maps <> B var
R38784:38784 compcert.lib.Maps <> A var
R38796:38796 compcert.lib.Maps EMap t def
R38798:38798 compcert.lib.Maps <> A var
R38816:38818 compcert.lib.Maps X t defax
R38824:38824 compcert.lib.Maps <> f var
R38826:38826 compcert.lib.Maps <> m var
R38828:38828 compcert.lib.Maps <> x var
prf 38840:38843 EMap gmap
R38874:38877 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38878:38878 compcert.lib.Maps <> B var
R38873:38873 compcert.lib.Maps <> A var
R38885:38887 compcert.lib.Maps EMap elt def
R38894:38894 compcert.lib.Maps EMap t def
R38896:38896 compcert.lib.Maps <> A var
R38919:38921 Coq.Init.Logic <> :type_scope:x_'='_x not
R38904:38906 compcert.lib.Maps EMap get def
R38911:38913 compcert.lib.Maps EMap map def
R38917:38917 compcert.lib.Maps <> m var
R38915:38915 compcert.lib.Maps <> f var
R38908:38908 compcert.lib.Maps <> i var
R38922:38922 compcert.lib.Maps <> f var
R38924:38926 compcert.lib.Maps EMap get def
R38930:38930 compcert.lib.Maps <> m var
R38928:38928 compcert.lib.Maps <> i var
R38962:38964 compcert.lib.Maps EMap get def
R38967:38969 compcert.lib.Maps EMap map def
R38996:38999 compcert.lib.Maps EMap <> mod
R39111:39122 compcert.lib.Maps INDEXED_TYPE <> mod
mod 39102:39106 <> ITree
def 39140:39142 ITree elt
R39147:39149 compcert.lib.Maps X t defax
def 39165:39170 ITree elt_eq
R39175:39178 compcert.lib.Maps X eq defax
def 39194:39194 ITree t
R39202:39205 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39214:39220 compcert.lib.Maps PTree t def
def 39237:39241 ITree empty
R39254:39254 compcert.lib.Maps ITree t def
R39256:39256 compcert.lib.Maps <> A var
R39261:39271 compcert.lib.Maps PTree empty def
R39273:39273 compcert.lib.Maps <> A var
def 39289:39291 ITree get
R39307:39309 compcert.lib.Maps ITree elt def
R39316:39316 compcert.lib.Maps ITree t def
R39318:39318 compcert.lib.Maps <> A var
R39322:39327 Coq.Init.Datatypes <> option ind
R39329:39329 compcert.lib.Maps <> A var
R39334:39342 compcert.lib.Maps PTree get def
R39356:39356 compcert.lib.Maps <> m var
R39345:39351 compcert.lib.Maps X index defax
R39353:39353 compcert.lib.Maps <> k var
def 39372:39374 ITree set
R39390:39392 compcert.lib.Maps ITree elt def
R39399:39399 compcert.lib.Maps <> A var
R39406:39406 compcert.lib.Maps ITree t def
R39408:39408 compcert.lib.Maps <> A var
R39412:39412 compcert.lib.Maps ITree t def
R39414:39414 compcert.lib.Maps <> A var
R39419:39427 compcert.lib.Maps PTree set def
R39443:39443 compcert.lib.Maps <> m var
R39441:39441 compcert.lib.Maps <> v var
R39430:39436 compcert.lib.Maps X index defax
R39438:39438 compcert.lib.Maps <> k var
def 39459:39464 ITree remove
R39480:39482 compcert.lib.Maps ITree elt def
R39489:39489 compcert.lib.Maps ITree t def
R39491:39491 compcert.lib.Maps <> A var
R39495:39495 compcert.lib.Maps ITree t def
R39497:39497 compcert.lib.Maps <> A var
R39502:39513 compcert.lib.Maps PTree remove def
R39527:39527 compcert.lib.Maps <> m var
R39516:39522 compcert.lib.Maps X index defax
R39524:39524 compcert.lib.Maps <> k var
prf 39541:39546 ITree gempty
R39574:39576 compcert.lib.Maps ITree elt def
R39595:39597 Coq.Init.Logic <> :type_scope:x_'='_x not
R39580:39582 compcert.lib.Maps ITree get def
R39587:39591 compcert.lib.Maps ITree empty def
R39593:39593 compcert.lib.Maps <> A var
R39584:39584 compcert.lib.Maps <> i var
R39598:39601 Coq.Init.Datatypes <> None constr
R39631:39642 compcert.lib.Maps PTree gempty thm
R39631:39642 compcert.lib.Maps PTree gempty thm
prf 39662:39664 ITree gss
R39692:39694 compcert.lib.Maps ITree elt def
R39701:39701 compcert.lib.Maps <> A var
R39708:39708 compcert.lib.Maps ITree t def
R39710:39710 compcert.lib.Maps <> A var
R39731:39733 Coq.Init.Logic <> :type_scope:x_'='_x not
R39714:39716 compcert.lib.Maps ITree get def
R39721:39723 compcert.lib.Maps ITree set def
R39729:39729 compcert.lib.Maps <> m var
R39727:39727 compcert.lib.Maps <> x var
R39725:39725 compcert.lib.Maps <> i var
R39718:39718 compcert.lib.Maps <> i var
R39734:39737 Coq.Init.Datatypes <> Some constr
R39739:39739 compcert.lib.Maps <> x var
R39769:39777 compcert.lib.Maps PTree gss thm
R39769:39777 compcert.lib.Maps PTree gss thm
prf 39797:39799 ITree gso
R39829:39831 compcert.lib.Maps ITree elt def
R39838:39838 compcert.lib.Maps <> A var
R39845:39845 compcert.lib.Maps ITree t def
R39847:39847 compcert.lib.Maps <> A var
R39861:39864 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39882:39884 Coq.Init.Logic <> :type_scope:x_'='_x not
R39865:39867 compcert.lib.Maps ITree get def
R39872:39874 compcert.lib.Maps ITree set def
R39880:39880 compcert.lib.Maps <> m var
R39878:39878 compcert.lib.Maps <> x var
R39876:39876 compcert.lib.Maps <> j var
R39869:39869 compcert.lib.Maps <> i var
R39885:39887 compcert.lib.Maps ITree get def
R39891:39891 compcert.lib.Maps <> m var
R39889:39889 compcert.lib.Maps <> i var
R39856:39859 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R39855:39855 compcert.lib.Maps <> i var
R39860:39860 compcert.lib.Maps <> j var
R39921:39929 compcert.lib.Maps PTree gso thm
R39921:39929 compcert.lib.Maps PTree gso thm
R39959:39969 compcert.lib.Maps X index_inj prfax
R39959:39969 compcert.lib.Maps X index_inj prfax
prf 39995:40000 ITree gsspec
R40030:40032 compcert.lib.Maps ITree elt def
R40039:40039 compcert.lib.Maps <> A var
R40046:40046 compcert.lib.Maps ITree t def
R40048:40048 compcert.lib.Maps <> A var
R40073:40075 Coq.Init.Logic <> :type_scope:x_'='_x not
R40056:40058 compcert.lib.Maps ITree get def
R40063:40065 compcert.lib.Maps ITree set def
R40071:40071 compcert.lib.Maps <> m var
R40069:40069 compcert.lib.Maps <> x var
R40067:40067 compcert.lib.Maps <> j var
R40060:40060 compcert.lib.Maps <> i var
R40079:40084 compcert.lib.Maps ITree elt_eq def
R40088:40088 compcert.lib.Maps <> j var
R40086:40086 compcert.lib.Maps <> i var
R40107:40109 compcert.lib.Maps ITree get def
R40113:40113 compcert.lib.Maps <> m var
R40111:40111 compcert.lib.Maps <> i var
R40095:40098 Coq.Init.Datatypes <> Some constr
R40100:40100 compcert.lib.Maps <> x var
R40147:40152 compcert.lib.Maps ITree elt_eq def
R40147:40152 compcert.lib.Maps ITree elt_eq def
R40175:40177 compcert.lib.Maps ITree gss thm
R40175:40177 compcert.lib.Maps ITree gss thm
R40186:40188 compcert.lib.Maps ITree gso thm
R40186:40188 compcert.lib.Maps ITree gso thm
prf 40214:40216 ITree grs
R40244:40246 compcert.lib.Maps ITree elt def
R40253:40253 compcert.lib.Maps ITree t def
R40255:40255 compcert.lib.Maps <> A var
R40277:40279 Coq.Init.Logic <> :type_scope:x_'='_x not
R40259:40261 compcert.lib.Maps ITree get def
R40266:40271 compcert.lib.Maps ITree remove def
R40275:40275 compcert.lib.Maps <> m var
R40273:40273 compcert.lib.Maps <> i var
R40263:40263 compcert.lib.Maps <> i var
R40280:40283 Coq.Init.Datatypes <> None constr
R40313:40321 compcert.lib.Maps PTree grs thm
R40313:40321 compcert.lib.Maps PTree grs thm
prf 40341:40343 ITree gro
R40373:40375 compcert.lib.Maps ITree elt def
R40382:40382 compcert.lib.Maps ITree t def
R40384:40384 compcert.lib.Maps <> A var
R40398:40401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40420:40422 Coq.Init.Logic <> :type_scope:x_'='_x not
R40402:40404 compcert.lib.Maps ITree get def
R40409:40414 compcert.lib.Maps ITree remove def
R40418:40418 compcert.lib.Maps <> m var
R40416:40416 compcert.lib.Maps <> j var
R40406:40406 compcert.lib.Maps <> i var
R40423:40425 compcert.lib.Maps ITree get def
R40429:40429 compcert.lib.Maps <> m var
R40427:40427 compcert.lib.Maps <> i var
R40393:40396 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40392:40392 compcert.lib.Maps <> i var
R40397:40397 compcert.lib.Maps <> j var
R40459:40467 compcert.lib.Maps PTree gro thm
R40459:40467 compcert.lib.Maps PTree gro thm
R40497:40507 compcert.lib.Maps X index_inj prfax
R40497:40507 compcert.lib.Maps X index_inj prfax
prf 40533:40538 ITree grspec
R40568:40570 compcert.lib.Maps ITree elt def
R40577:40577 compcert.lib.Maps ITree t def
R40579:40579 compcert.lib.Maps <> A var
R40605:40607 Coq.Init.Logic <> :type_scope:x_'='_x not
R40587:40589 compcert.lib.Maps ITree get def
R40594:40599 compcert.lib.Maps ITree remove def
R40603:40603 compcert.lib.Maps <> m var
R40601:40601 compcert.lib.Maps <> j var
R40591:40591 compcert.lib.Maps <> i var
R40611:40616 compcert.lib.Maps ITree elt_eq def
R40620:40620 compcert.lib.Maps <> j var
R40618:40618 compcert.lib.Maps <> i var
R40637:40639 compcert.lib.Maps ITree get def
R40643:40643 compcert.lib.Maps <> m var
R40641:40641 compcert.lib.Maps <> i var
R40627:40630 Coq.Init.Datatypes <> None constr
R40677:40682 compcert.lib.Maps ITree elt_eq def
R40677:40682 compcert.lib.Maps ITree elt_eq def
R40705:40707 compcert.lib.Maps ITree grs thm
R40705:40707 compcert.lib.Maps ITree grs thm
R40716:40718 compcert.lib.Maps ITree gro thm
R40716:40718 compcert.lib.Maps ITree gro thm
def 40748:40750 ITree beq
R40771:40771 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40786:40790 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40794:40797 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40801:40804 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40805:40808 Coq.Init.Datatypes <> bool ind
R40798:40798 compcert.lib.Maps ITree t def
R40800:40800 compcert.lib.Maps <> A var
R40791:40791 compcert.lib.Maps ITree t def
R40793:40793 compcert.lib.Maps <> A var
R40773:40776 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40778:40781 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40782:40785 Coq.Init.Datatypes <> bool ind
R40777:40777 compcert.lib.Maps <> A var
R40772:40772 compcert.lib.Maps <> A var
R40813:40821 compcert.lib.Maps PTree beq def
prf 40834:40842 ITree beq_sound
R40873:40876 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40878:40881 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40882:40885 Coq.Init.Datatypes <> bool ind
R40877:40877 compcert.lib.Maps <> A var
R40872:40872 compcert.lib.Maps <> A var
R40896:40896 compcert.lib.Maps ITree t def
R40898:40898 compcert.lib.Maps <> A var
R40926:40933 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40945:40947 compcert.lib.Maps ITree elt def
R40972:40974 compcert.lib.Maps ITree get def
R40978:40979 compcert.lib.Maps <> t2 var
R40976:40976 compcert.lib.Maps <> x var
R40962:40964 compcert.lib.Maps ITree get def
R40968:40969 compcert.lib.Maps <> t1 var
R40966:40966 compcert.lib.Maps <> x var
R40993:40996 Coq.Init.Datatypes <> None constr
R40999:41002 Coq.Init.Datatypes <> None constr
R41007:41010 Coq.Init.Logic <> True ind
R41019:41022 Coq.Init.Datatypes <> Some constr
R41028:41031 Coq.Init.Datatypes <> Some constr
R41048:41050 Coq.Init.Logic <> :type_scope:x_'='_x not
R41039:41041 compcert.lib.Maps <> eqA var
R41051:41054 Coq.Init.Datatypes <> true constr
R41071:41075 Coq.Init.Logic <> False ind
R40919:40921 Coq.Init.Logic <> :type_scope:x_'='_x not
R40906:40908 compcert.lib.Maps ITree beq def
R40917:40918 compcert.lib.Maps <> t2 var
R40914:40915 compcert.lib.Maps <> t1 var
R40910:40912 compcert.lib.Maps <> eqA var
R40922:40925 Coq.Init.Datatypes <> true constr
R41106:41108 compcert.lib.Maps ITree beq def
R41111:41113 compcert.lib.Maps ITree get def
R41132:41148 compcert.lib.Maps PTree beq_correct thm
R41132:41148 compcert.lib.Maps PTree beq_correct thm
R41132:41148 compcert.lib.Maps PTree beq_correct thm
def 41187:41193 ITree combine
R41218:41218 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41251:41255 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41259:41262 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41266:41269 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41270:41270 compcert.lib.Maps ITree t def
R41272:41272 compcert.lib.Maps <> C var
R41263:41263 compcert.lib.Maps ITree t def
R41265:41265 compcert.lib.Maps <> B var
R41256:41256 compcert.lib.Maps ITree t def
R41258:41258 compcert.lib.Maps <> A var
R41227:41230 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41239:41242 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41243:41248 Coq.Init.Datatypes <> option ind
R41250:41250 compcert.lib.Maps <> C var
R41231:41236 Coq.Init.Datatypes <> option ind
R41238:41238 compcert.lib.Maps <> B var
R41219:41224 Coq.Init.Datatypes <> option ind
R41226:41226 compcert.lib.Maps <> A var
R41277:41289 compcert.lib.Maps PTree combine def
prf 41302:41309 ITree gcombine
R41349:41352 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41361:41364 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41365:41370 Coq.Init.Datatypes <> option ind
R41372:41372 compcert.lib.Maps <> C var
R41353:41358 Coq.Init.Datatypes <> option ind
R41360:41360 compcert.lib.Maps <> B var
R41341:41346 Coq.Init.Datatypes <> option ind
R41348:41348 compcert.lib.Maps <> A var
R41398:41405 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41418:41418 compcert.lib.Maps ITree t def
R41420:41420 compcert.lib.Maps <> A var
R41428:41428 compcert.lib.Maps ITree t def
R41430:41430 compcert.lib.Maps <> B var
R41437:41439 compcert.lib.Maps ITree elt def
R41470:41472 Coq.Init.Logic <> :type_scope:x_'='_x not
R41447:41449 compcert.lib.Maps ITree get def
R41454:41460 compcert.lib.Maps ITree combine def
R41467:41468 compcert.lib.Maps <> m2 var
R41464:41465 compcert.lib.Maps <> m1 var
R41462:41462 compcert.lib.Maps <> f var
R41451:41451 compcert.lib.Maps <> i var
R41473:41473 compcert.lib.Maps <> f var
R41487:41489 compcert.lib.Maps ITree get def
R41493:41494 compcert.lib.Maps <> m2 var
R41491:41491 compcert.lib.Maps <> i var
R41476:41478 compcert.lib.Maps ITree get def
R41482:41483 compcert.lib.Maps <> m1 var
R41480:41480 compcert.lib.Maps <> i var
R41391:41393 Coq.Init.Logic <> :type_scope:x_'='_x not
R41380:41380 compcert.lib.Maps <> f var
R41387:41390 Coq.Init.Datatypes <> None constr
R41382:41385 Coq.Init.Datatypes <> None constr
R41394:41397 Coq.Init.Datatypes <> None constr
R41525:41538 compcert.lib.Maps PTree gcombine thm
R41525:41538 compcert.lib.Maps PTree gcombine thm
R41558:41562 compcert.lib.Maps ITree <> mod
R41582:41586 compcert.lib.Maps ITree <> modtype
R41588:41595 compcert.lib.Maps ZIndexed <> modtype
mod 41573:41577 <> ZTree
R41669:41672 compcert.lib.Maps TREE <> mod
mod 41650:41664 <> Tree_Properties
sec 41729:41741 Tree_Properties TREE_FOLD_IND
var 41755:41755 Tree_Properties.TREE_FOLD_IND V
var 41757:41757 Tree_Properties.TREE_FOLD_IND A
var 41775:41775 Tree_Properties.TREE_FOLD_IND f
R41779:41782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41788:41791 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41793:41796 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41797:41797 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.A var
R41792:41792 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R41783:41787 compcert.lib.Maps T elt defax
R41778:41778 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.A var
var 41809:41809 Tree_Properties.TREE_FOLD_IND P
R41817:41820 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41822:41825 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41821:41821 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.A var
R41812:41814 compcert.lib.Maps T t defax
R41816:41816 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
var 41841:41844 Tree_Properties.TREE_FOLD_IND init
R41847:41847 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.A var
var 41859:41865 Tree_Properties.TREE_FOLD_IND m_final
R41868:41870 compcert.lib.Maps T t defax
R41872:41872 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
var 41887:41894 Tree_Properties.TREE_FOLD_IND P_compat
R41916:41916 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41949:41955 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41961:41964 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41965:41965 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R41970:41970 compcert.lib.Maps <> a var
R41967:41968 compcert.lib.Maps <> m' var
R41956:41956 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R41960:41960 compcert.lib.Maps <> a var
R41958:41958 compcert.lib.Maps <> m var
R41936:41938 Coq.Init.Logic <> :type_scope:x_'='_x not
R41927:41931 compcert.lib.Maps T get defax
R41935:41935 compcert.lib.Maps <> m var
R41933:41933 compcert.lib.Maps <> x var
R41939:41943 compcert.lib.Maps T get defax
R41947:41948 compcert.lib.Maps <> m' var
R41945:41945 compcert.lib.Maps <> x var
var 41985:41990 Tree_Properties.TREE_FOLD_IND H_base
R41995:41995 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R42009:42012 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.init var
R41998:42004 compcert.lib.Maps T empty defax
var 42027:42031 Tree_Properties.TREE_FOLD_IND H_rec
R42070:42073 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42098:42101 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42107:42110 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42111:42111 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R42128:42128 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f var
R42134:42134 compcert.lib.Maps <> v var
R42132:42132 compcert.lib.Maps <> k var
R42130:42130 compcert.lib.Maps <> a var
R42114:42118 compcert.lib.Maps T set defax
R42124:42124 compcert.lib.Maps <> m var
R42122:42122 compcert.lib.Maps <> v var
R42120:42120 compcert.lib.Maps <> k var
R42102:42102 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R42106:42106 compcert.lib.Maps <> a var
R42104:42104 compcert.lib.Maps <> m var
R42089:42091 Coq.Init.Logic <> :type_scope:x_'='_x not
R42074:42078 compcert.lib.Maps T get defax
R42082:42088 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R42080:42080 compcert.lib.Maps <> k var
R42092:42095 Coq.Init.Datatypes <> Some constr
R42097:42097 compcert.lib.Maps <> v var
R42063:42065 Coq.Init.Logic <> :type_scope:x_'='_x not
R42054:42058 compcert.lib.Maps T get defax
R42062:42062 compcert.lib.Maps <> m var
R42060:42060 compcert.lib.Maps <> k var
R42066:42069 Coq.Init.Datatypes <> None constr
var 42143:42144 Tree_Properties.TREE_FOLD_IND f'
R42150:42150 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.A var
R42163:42165 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R42158:42162 compcert.lib.Maps T elt defax
R42166:42166 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R42172:42172 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f var
R42185:42187 Coq.Init.Datatypes <> snd def
R42189:42189 compcert.lib.Maps <> p var
R42177:42179 Coq.Init.Datatypes <> fst def
R42181:42181 compcert.lib.Maps <> p var
R42174:42174 compcert.lib.Maps <> a var
var 42198:42199 Tree_Properties.TREE_FOLD_IND P'
R42205:42208 Coq.Init.Datatypes <> list ind
R42216:42218 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R42211:42215 compcert.lib.Maps T elt defax
R42219:42219 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R42227:42227 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.A var
R42279:42282 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42283:42283 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R42287:42287 compcert.lib.Maps <> a var
R42285:42285 compcert.lib.Maps <> m var
R42252:42261 compcert.lib.Coqlib <> list_equiv def
R42266:42275 compcert.lib.Maps T elements defax
R42277:42277 compcert.lib.Maps <> m var
R42263:42263 compcert.lib.Maps <> l var
prf 42298:42304 Tree_Properties H_base'
R42309:42310 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R42316:42319 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.init var
R42312:42314 Coq.Init.Datatypes <> nil constr
R42365:42371 compcert.lib.Maps T empty defax
R42350:42357 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R42365:42371 compcert.lib.Maps T empty defax
R42350:42357 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R42401:42408 compcert.lib.Maps T gempty prfax
R42401:42408 compcert.lib.Maps T gempty prfax
R42401:42408 compcert.lib.Maps T gempty prfax
R42430:42434 compcert.lib.Maps T get defax
R42430:42434 compcert.lib.Maps T get defax
R42466:42467 Coq.Lists.List <> In def
R42476:42478 Coq.Init.Datatypes <> nil constr
R42469:42469 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42471:42472 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42474:42474 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42466:42467 Coq.Lists.List <> In def
R42476:42478 Coq.Init.Datatypes <> nil constr
R42469:42469 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42471:42472 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42474:42474 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42493:42493 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42495:42496 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42498:42498 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42493:42493 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42495:42496 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42498:42498 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42493:42493 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42495:42496 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42498:42498 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42508:42525 compcert.lib.Maps T elements_correct prfax
R42508:42525 compcert.lib.Maps T elements_correct prfax
prf 42564:42569 Tree_Properties H_rec'
R42625:42630 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42661:42666 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42673:42678 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42679:42680 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R42704:42704 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f var
R42710:42710 compcert.lib.Maps <> v var
R42708:42708 compcert.lib.Maps <> k var
R42706:42706 compcert.lib.Maps <> a var
R42684:42687 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R42683:42683 compcert.lib.Maps <> l var
R42694:42697 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R42688:42688 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42690:42691 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42693:42693 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42689:42689 compcert.lib.Maps <> k var
R42692:42692 compcert.lib.Maps <> v var
R42698:42700 Coq.Init.Datatypes <> nil constr
R42667:42668 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R42672:42672 compcert.lib.Maps <> a var
R42670:42670 compcert.lib.Maps <> l var
R42631:42632 Coq.Lists.List <> In def
R42642:42651 compcert.lib.Maps T elements defax
R42653:42659 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R42634:42634 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42636:42637 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42639:42639 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42635:42635 compcert.lib.Maps <> k var
R42638:42638 compcert.lib.Maps <> v var
R42592:42592 Coq.Init.Logic <> :type_scope:'~'_x not
R42593:42594 Coq.Lists.List <> In def
R42599:42606 Coq.Lists.List <> map def
R42623:42623 compcert.lib.Maps <> l var
R42610:42612 Coq.Init.Datatypes <> fst def
R42620:42620 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R42614:42618 compcert.lib.Maps T elt defax
R42596:42596 compcert.lib.Maps <> k var
R42730:42731 compcert.lib.Maps Tree_Properties P' vardef
R42755:42762 compcert.lib.Maps T remove defax
R42755:42762 compcert.lib.Maps T remove defax
R42793:42797 compcert.lib.Maps T set defax
R42778:42785 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R42793:42797 compcert.lib.Maps T set defax
R42778:42785 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R42839:42846 compcert.lib.Maps T gsspec prfax
R42839:42846 compcert.lib.Maps T gsspec prfax
R42839:42846 compcert.lib.Maps T gsspec prfax
R42859:42866 compcert.lib.Maps T elt_eq defax
R42859:42866 compcert.lib.Maps T elt_eq defax
R42894:42912 compcert.lib.Maps T elements_complete prfax
R42894:42912 compcert.lib.Maps T elements_complete prfax
R42930:42930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42932:42933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42935:42935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42930:42930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42932:42933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42935:42935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42930:42930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42932:42933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42935:42935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42949:42957 Coq.Lists.List <> in_or_app thm
R42949:42957 Coq.Lists.List <> in_or_app thm
R42999:43003 compcert.lib.Maps T gro prfax
R42999:43003 compcert.lib.Maps T gro prfax
R43020:43024 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.H_rec var
R43020:43024 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.H_rec var
R43044:43048 compcert.lib.Maps T grs prfax
R43044:43048 compcert.lib.Maps T grs prfax
R43057:43075 compcert.lib.Maps T elements_complete prfax
R43057:43075 compcert.lib.Maps T elements_complete prfax
R43142:43159 compcert.lib.Maps T elements_correct prfax
R43142:43159 compcert.lib.Maps T elements_correct prfax
R43181:43185 compcert.lib.Maps T gro prfax
R43181:43185 compcert.lib.Maps T gro prfax
R43181:43185 compcert.lib.Maps T gro prfax
R43181:43185 compcert.lib.Maps T gro prfax
R43194:43212 compcert.lib.Maps T elements_complete prfax
R43194:43212 compcert.lib.Maps T elements_complete prfax
R43232:43232 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43235:43236 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43239:43239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43232:43232 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43235:43236 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43239:43239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43232:43232 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43235:43236 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43239:43239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43249:43257 Coq.Lists.List <> in_or_app thm
R43249:43257 Coq.Lists.List <> in_or_app thm
R43313:43315 Coq.Init.Datatypes <> fst def
R43317:43317 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43319:43320 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43323:43323 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43313:43315 Coq.Init.Datatypes <> fst def
R43317:43317 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43319:43320 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43323:43323 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43333:43338 Coq.Lists.List <> in_map thm
R43333:43338 Coq.Lists.List <> in_map thm
R43368:43370 Coq.Init.Logic <> :type_scope:x_'='_x not
R43357:43361 compcert.lib.Maps T get defax
R43371:43374 Coq.Init.Datatypes <> Some constr
R43368:43370 Coq.Init.Logic <> :type_scope:x_'='_x not
R43357:43361 compcert.lib.Maps T get defax
R43371:43374 Coq.Init.Datatypes <> Some constr
R43387:43405 compcert.lib.Maps T elements_complete prfax
R43387:43405 compcert.lib.Maps T elements_complete prfax
R43441:43448 compcert.lib.Maps T grspec prfax
R43441:43448 compcert.lib.Maps T grspec prfax
R43441:43448 compcert.lib.Maps T grspec prfax
R43467:43474 compcert.lib.Maps T elt_eq defax
R43467:43474 compcert.lib.Maps T elt_eq defax
R43505:43506 Coq.Lists.List <> In def
R43518:43527 compcert.lib.Maps T elements defax
R43508:43508 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43511:43512 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43515:43515 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43505:43506 Coq.Lists.List <> In def
R43518:43527 compcert.lib.Maps T elements defax
R43508:43508 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43511:43512 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43515:43515 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43540:43557 compcert.lib.Maps T elements_correct prfax
R43540:43557 compcert.lib.Maps T elements_correct prfax
R43583:43583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43586:43587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43590:43590 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43583:43583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43586:43587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43590:43590 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43583:43583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43586:43587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43590:43590 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43610:43618 Coq.Lists.List <> in_app_or thm
R43610:43618 Coq.Lists.List <> in_app_or thm
prf 43686:43697 Tree_Properties fold_rec_aux
R43762:43767 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43839:43844 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43886:43891 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43899:43902 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43903:43904 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R43918:43931 Coq.Lists.List <> fold_left def
R43939:43939 compcert.lib.Maps <> a var
R43936:43937 compcert.lib.Maps <> l1 var
R43933:43934 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R43909:43912 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43907:43908 compcert.lib.Maps <> l2 var
R43913:43914 compcert.lib.Maps <> l1 var
R43892:43893 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R43898:43898 compcert.lib.Maps <> a var
R43895:43896 compcert.lib.Maps <> l2 var
R43845:43856 compcert.lib.Coqlib <> list_norepet ind
R43859:43866 Coq.Lists.List <> map def
R43883:43884 compcert.lib.Maps <> l1 var
R43870:43872 Coq.Init.Datatypes <> fst def
R43880:43880 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R43874:43878 compcert.lib.Maps T elt defax
R43768:43780 compcert.lib.Coqlib <> list_disjoint def
R43812:43819 Coq.Lists.List <> map def
R43836:43837 compcert.lib.Maps <> l2 var
R43823:43825 Coq.Init.Datatypes <> fst def
R43833:43833 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R43827:43831 compcert.lib.Maps T elt defax
R43783:43790 Coq.Lists.List <> map def
R43807:43808 compcert.lib.Maps <> l1 var
R43794:43796 Coq.Init.Datatypes <> fst def
R43804:43804 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R43798:43802 compcert.lib.Maps T elt defax
R43720:43729 compcert.lib.Coqlib <> list_equiv def
R43743:43752 compcert.lib.Maps T elements defax
R43754:43760 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R43734:43737 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R43732:43733 compcert.lib.Maps <> l2 var
R43738:43739 compcert.lib.Maps <> l1 var
R43994:44009 Coq.Lists.List <> app_nil_end thm
R43994:44009 Coq.Lists.List <> app_nil_end thm
R43994:44009 Coq.Lists.List <> app_nil_end thm
R44091:44091 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44105:44109 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44098:44101 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44092:44092 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44094:44095 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44097:44097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44102:44104 Coq.Init.Datatypes <> nil constr
R44077:44080 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44071:44071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44073:44074 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44076:44076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44077:44080 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44071:44071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44073:44074 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44076:44076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44091:44091 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44105:44109 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44098:44101 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44092:44092 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44094:44095 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44097:44097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44102:44104 Coq.Init.Datatypes <> nil constr
R44126:44137 Coq.Lists.List <> app_ass syndef
R44126:44137 Coq.Lists.List <> app_ass syndef
R44126:44137 Coq.Lists.List <> app_ass syndef
R44162:44168 Coq.Lists.List <> app_ass syndef
R44162:44168 Coq.Lists.List <> app_ass syndef
R44162:44168 Coq.Lists.List <> app_ass syndef
R44200:44206 Coq.Lists.List <> map_app thm
R44200:44206 Coq.Lists.List <> map_app thm
R44200:44206 Coq.Lists.List <> map_app thm
R44225:44233 Coq.Lists.List <> in_app_or thm
R44225:44233 Coq.Lists.List <> in_app_or thm
R44328:44329 compcert.lib.Maps Tree_Properties f' vardef
R44345:44350 compcert.lib.Maps Tree_Properties H_rec' thm
R44345:44350 compcert.lib.Maps Tree_Properties H_rec' thm
R44366:44384 compcert.lib.Coqlib <> list_disjoint_notin thm
R44366:44384 compcert.lib.Coqlib <> list_disjoint_notin thm
R44422:44422 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44424:44425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44427:44427 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44422:44422 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44424:44425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44427:44427 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44422:44422 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44424:44425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44427:44427 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44437:44445 Coq.Lists.List <> in_or_app thm
R44437:44445 Coq.Lists.List <> in_or_app thm
prf 44475:44482 Tree_Properties fold_rec
R44487:44487 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R44498:44503 compcert.lib.Maps T fold defax
R44515:44518 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.init var
R44507:44513 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44505:44505 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f var
R44489:44495 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44547:44557 compcert.lib.Maps T fold_spec prfax
R44547:44557 compcert.lib.Maps T fold_spec prfax
R44547:44557 compcert.lib.Maps T fold_spec prfax
R44565:44566 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R44565:44566 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R44579:44580 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R44611:44624 Coq.Lists.List <> fold_left def
R44650:44653 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.init var
R44630:44639 compcert.lib.Maps T elements defax
R44641:44647 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44626:44627 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R44586:44589 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44583:44585 Coq.Init.Datatypes <> nil constr
R44590:44599 compcert.lib.Maps T elements defax
R44601:44607 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44579:44580 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R44611:44624 Coq.Lists.List <> fold_left def
R44650:44653 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.init var
R44630:44639 compcert.lib.Maps T elements defax
R44641:44647 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44626:44627 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R44586:44589 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R44583:44585 Coq.Init.Datatypes <> nil constr
R44590:44599 compcert.lib.Maps T elements defax
R44601:44607 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44668:44679 compcert.lib.Maps Tree_Properties fold_rec_aux thm
R44668:44679 compcert.lib.Maps Tree_Properties fold_rec_aux thm
R44756:44778 compcert.lib.Maps T elements_keys_norepet prfax
R44756:44778 compcert.lib.Maps T elements_keys_norepet prfax
R44791:44797 compcert.lib.Maps Tree_Properties H_base' thm
R44791:44797 compcert.lib.Maps Tree_Properties H_base' thm
R44863:44875 compcert.lib.Maps Tree_Properties.TREE_FOLD_IND <> sec
sec 44928:44934 Tree_Properties MEASURE
var 44947:44947 Tree_Properties.MEASURE V
def 44968:44975 Tree_Properties cardinal
R44981:44983 compcert.lib.Maps T t defax
R44985:44985 compcert.lib.Maps <> Tree_Properties.MEASURE.V var
R44990:44992 Coq.Init.Datatypes <> nat ind
R44997:45007 Coq.Lists.List <> length syndef
R45010:45019 compcert.lib.Maps T elements defax
R45021:45021 compcert.lib.Maps <> x var
prf 45034:45048 Tree_Properties cardinal_remove
R45085:45088 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45113:45115 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R45090:45097 compcert.lib.Maps Tree_Properties cardinal def
R45100:45107 compcert.lib.Maps T remove defax
R45111:45111 compcert.lib.Maps <> m var
R45109:45109 compcert.lib.Maps <> x var
R45116:45123 compcert.lib.Maps Tree_Properties cardinal def
R45125:45125 compcert.lib.Maps <> m var
R45076:45078 Coq.Init.Logic <> :type_scope:x_'='_x not
R45067:45071 compcert.lib.Maps T get defax
R45075:45075 compcert.lib.Maps <> m var
R45073:45073 compcert.lib.Maps <> x var
R45079:45082 Coq.Init.Datatypes <> Some constr
R45084:45084 compcert.lib.Maps <> y var
R45149:45156 compcert.lib.Maps Tree_Properties cardinal def
R45177:45193 compcert.lib.Maps T elements_remove prfax
R45255:45264 Coq.Lists.List <> app_length thm
R45255:45264 Coq.Lists.List <> app_length thm
R45255:45264 Coq.Lists.List <> app_length thm
R45255:45264 Coq.Lists.List <> app_length thm
R45255:45264 Coq.Lists.List <> app_length thm
prf 45295:45306 Tree_Properties cardinal_set
R45341:45344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45356:45358 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R45346:45353 compcert.lib.Maps Tree_Properties cardinal def
R45355:45355 compcert.lib.Maps <> m var
R45359:45366 compcert.lib.Maps Tree_Properties cardinal def
R45369:45373 compcert.lib.Maps T set defax
R45379:45379 compcert.lib.Maps <> m var
R45377:45377 compcert.lib.Maps <> y var
R45375:45375 compcert.lib.Maps <> x var
R45334:45336 Coq.Init.Logic <> :type_scope:x_'='_x not
R45325:45329 compcert.lib.Maps T get defax
R45333:45333 compcert.lib.Maps <> m var
R45331:45331 compcert.lib.Maps <> x var
R45337:45340 Coq.Init.Datatypes <> None constr
R45416:45420 compcert.lib.Maps T set defax
R45416:45420 compcert.lib.Maps T set defax
R45441:45448 compcert.lib.Maps Tree_Properties cardinal def
R45459:45466 compcert.lib.Maps Tree_Properties cardinal def
R45469:45476 compcert.lib.Maps T remove defax
R45459:45466 compcert.lib.Maps Tree_Properties cardinal def
R45469:45476 compcert.lib.Maps T remove defax
R45441:45448 compcert.lib.Maps Tree_Properties cardinal def
R45494:45508 compcert.lib.Maps Tree_Properties cardinal_remove thm
R45494:45508 compcert.lib.Maps Tree_Properties cardinal_remove thm
R45535:45539 compcert.lib.Maps T gss prfax
R45535:45539 compcert.lib.Maps T gss prfax
R45551:45558 compcert.lib.Maps Tree_Properties cardinal def
R45576:45597 compcert.lib.Maps T elements_extensional prfax
R45576:45597 compcert.lib.Maps T elements_extensional prfax
R45629:45636 compcert.lib.Maps T grspec prfax
R45639:45646 compcert.lib.Maps T gsspec prfax
R45629:45636 compcert.lib.Maps T grspec prfax
R45629:45636 compcert.lib.Maps T grspec prfax
R45639:45646 compcert.lib.Maps T gsspec prfax
R45639:45646 compcert.lib.Maps T gsspec prfax
R45661:45668 compcert.lib.Maps T elt_eq defax
R45661:45668 compcert.lib.Maps T elt_eq defax
R45704:45710 compcert.lib.Maps Tree_Properties.MEASURE <> sec
sec 45748:45760 Tree_Properties FORALL_EXISTS
var 45773:45773 Tree_Properties.FORALL_EXISTS A
def 45794:45800 Tree_Properties for_all
R45806:45808 compcert.lib.Maps T t defax
R45810:45810 compcert.lib.Maps <> Tree_Properties.FORALL_EXISTS.A var
R45822:45825 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45827:45830 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45831:45834 Coq.Init.Datatypes <> bool ind
R45826:45826 compcert.lib.Maps <> Tree_Properties.FORALL_EXISTS.A var
R45817:45821 compcert.lib.Maps T elt defax
R45839:45842 Coq.Init.Datatypes <> bool ind
R45849:45854 compcert.lib.Maps T fold defax
R45884:45887 Coq.Init.Datatypes <> true constr
R45882:45882 compcert.lib.Maps <> m var
R45871:45874 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R45870:45870 compcert.lib.Maps <> b var
R45875:45875 compcert.lib.Maps <> f var
R45879:45879 compcert.lib.Maps <> a var
R45877:45877 compcert.lib.Maps <> x var
prf 45897:45911 Tree_Properties for_all_correct
R45948:45953 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46000:46000 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45941:45943 Coq.Init.Logic <> :type_scope:x_'='_x not
R45930:45936 compcert.lib.Maps Tree_Properties for_all def
R45940:45940 compcert.lib.Maps <> f var
R45938:45938 compcert.lib.Maps <> m var
R45944:45947 Coq.Init.Datatypes <> true constr
R45984:45987 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45993:45995 Coq.Init.Logic <> :type_scope:x_'='_x not
R45988:45988 compcert.lib.Maps <> f var
R45992:45992 compcert.lib.Maps <> a var
R45990:45990 compcert.lib.Maps <> x var
R45996:45999 Coq.Init.Datatypes <> true constr
R45975:45977 Coq.Init.Logic <> :type_scope:x_'='_x not
R45966:45970 compcert.lib.Maps T get defax
R45974:45974 compcert.lib.Maps <> m var
R45972:45972 compcert.lib.Maps <> x var
R45978:45981 Coq.Init.Datatypes <> Some constr
R45983:45983 compcert.lib.Maps <> a var
R46034:46040 compcert.lib.Maps Tree_Properties for_all def
R46049:46056 compcert.lib.Maps Tree_Properties fold_rec thm
R46049:46056 compcert.lib.Maps Tree_Properties fold_rec thm
R46211:46218 compcert.lib.Maps T gempty prfax
R46211:46218 compcert.lib.Maps T gempty prfax
R46211:46218 compcert.lib.Maps T gempty prfax
R46297:46305 Coq.Init.Datatypes <> andb_prop thm
R46297:46305 Coq.Init.Datatypes <> andb_prop thm
R46324:46331 compcert.lib.Maps T gsspec prfax
R46324:46331 compcert.lib.Maps T gsspec prfax
R46324:46331 compcert.lib.Maps T gsspec prfax
R46350:46357 compcert.lib.Maps T elt_eq defax
R46350:46357 compcert.lib.Maps T elt_eq defax
R46407:46421 Coq.Init.Datatypes <> andb_true_intro thm
R46407:46421 Coq.Init.Datatypes <> andb_true_intro thm
R46471:46475 compcert.lib.Maps T gso prfax
R46471:46475 compcert.lib.Maps T gso prfax
R46471:46475 compcert.lib.Maps T gso prfax
R46471:46475 compcert.lib.Maps T gso prfax
R46514:46518 compcert.lib.Maps T gss prfax
R46514:46518 compcert.lib.Maps T gss prfax
def 46538:46544 Tree_Properties exists_
R46550:46552 compcert.lib.Maps T t defax
R46554:46554 compcert.lib.Maps <> Tree_Properties.FORALL_EXISTS.A var
R46566:46569 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46571:46574 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46575:46578 Coq.Init.Datatypes <> bool ind
R46570:46570 compcert.lib.Maps <> Tree_Properties.FORALL_EXISTS.A var
R46561:46565 compcert.lib.Maps T elt defax
R46583:46586 Coq.Init.Datatypes <> bool ind
R46593:46598 compcert.lib.Maps T fold defax
R46628:46632 Coq.Init.Datatypes <> false constr
R46626:46626 compcert.lib.Maps <> m var
R46615:46618 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R46614:46614 compcert.lib.Maps <> b var
R46619:46619 compcert.lib.Maps <> f var
R46623:46623 compcert.lib.Maps <> a var
R46621:46621 compcert.lib.Maps <> x var
prf 46642:46655 Tree_Properties exists_correct
R46692:46697 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46744:46744 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46685:46687 Coq.Init.Logic <> :type_scope:x_'='_x not
R46674:46680 compcert.lib.Maps Tree_Properties exists_ def
R46684:46684 compcert.lib.Maps <> f var
R46682:46682 compcert.lib.Maps <> m var
R46688:46691 Coq.Init.Datatypes <> true constr
R46698:46704 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46708:46709 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46728:46731 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46719:46721 Coq.Init.Logic <> :type_scope:x_'='_x not
R46710:46714 compcert.lib.Maps T get defax
R46718:46718 compcert.lib.Maps <> m var
R46716:46716 compcert.lib.Maps <> x var
R46722:46725 Coq.Init.Datatypes <> Some constr
R46727:46727 compcert.lib.Maps <> a var
R46737:46739 Coq.Init.Logic <> :type_scope:x_'='_x not
R46732:46732 compcert.lib.Maps <> f var
R46736:46736 compcert.lib.Maps <> a var
R46734:46734 compcert.lib.Maps <> x var
R46740:46743 Coq.Init.Datatypes <> true constr
R46778:46784 compcert.lib.Maps Tree_Properties exists_ def
R46793:46800 compcert.lib.Maps Tree_Properties fold_rec thm
R46793:46800 compcert.lib.Maps Tree_Properties fold_rec thm
R47014:47021 compcert.lib.Maps T gempty prfax
R47014:47021 compcert.lib.Maps T gempty prfax
R47014:47021 compcert.lib.Maps T gempty prfax
R47093:47105 Coq.Bool.Bool <> orb_true_elim thm
R47093:47105 Coq.Bool.Bool <> orb_true_elim thm
R47213:47217 compcert.lib.Maps T gso prfax
R47213:47217 compcert.lib.Maps T gso prfax
R47213:47217 compcert.lib.Maps T gso prfax
R47213:47217 compcert.lib.Maps T gso prfax
R47279:47283 compcert.lib.Maps T gss prfax
R47279:47283 compcert.lib.Maps T gss prfax
R47328:47341 Coq.Bool.Bool <> orb_true_intro thm
R47328:47341 Coq.Bool.Bool <> orb_true_intro thm
R47354:47361 compcert.lib.Maps T gsspec prfax
R47354:47361 compcert.lib.Maps T gsspec prfax
R47354:47361 compcert.lib.Maps T gsspec prfax
R47379:47386 compcert.lib.Maps T elt_eq defax
R47379:47386 compcert.lib.Maps T elt_eq defax
prf 47476:47489 Tree_Properties exists_for_all
R47519:47521 Coq.Init.Logic <> :type_scope:x_'='_x not
R47508:47514 compcert.lib.Maps Tree_Properties exists_ def
R47518:47518 compcert.lib.Maps <> f var
R47516:47516 compcert.lib.Maps <> m var
R47522:47525 Coq.Init.Datatypes <> negb def
R47528:47534 compcert.lib.Maps Tree_Properties for_all def
R47550:47553 Coq.Init.Datatypes <> negb def
R47556:47556 compcert.lib.Maps <> f var
R47560:47560 compcert.lib.Maps <> a var
R47558:47558 compcert.lib.Maps <> x var
R47536:47536 compcert.lib.Maps <> m var
R47590:47596 compcert.lib.Maps Tree_Properties exists_ def
R47599:47605 compcert.lib.Maps Tree_Properties for_all def
R47618:47628 compcert.lib.Maps T fold_spec prfax
R47618:47628 compcert.lib.Maps T fold_spec prfax
R47618:47628 compcert.lib.Maps T fold_spec prfax
R47618:47628 compcert.lib.Maps T fold_spec prfax
R47618:47628 compcert.lib.Maps T fold_spec prfax
R47652:47655 Coq.Init.Datatypes <> negb def
R47657:47660 Coq.Init.Datatypes <> true constr
R47640:47644 Coq.Init.Datatypes <> false constr
R47640:47644 Coq.Init.Datatypes <> false constr
R47652:47655 Coq.Init.Datatypes <> negb def
R47657:47660 Coq.Init.Datatypes <> true constr
R47676:47685 compcert.lib.Maps T elements defax
R47690:47693 Coq.Init.Datatypes <> true constr
R47676:47685 compcert.lib.Maps T elements defax
R47690:47693 Coq.Init.Datatypes <> true constr
R47796:47798 Coq.Init.Datatypes <> snd def
R47788:47790 Coq.Init.Datatypes <> fst def
R47796:47798 Coq.Init.Datatypes <> snd def
R47788:47790 Coq.Init.Datatypes <> fst def
R47796:47798 Coq.Init.Datatypes <> snd def
R47788:47790 Coq.Init.Datatypes <> fst def
prf 47831:47844 Tree_Properties for_all_exists
R47874:47876 Coq.Init.Logic <> :type_scope:x_'='_x not
R47863:47869 compcert.lib.Maps Tree_Properties for_all def
R47873:47873 compcert.lib.Maps <> f var
R47871:47871 compcert.lib.Maps <> m var
R47877:47880 Coq.Init.Datatypes <> negb def
R47883:47889 compcert.lib.Maps Tree_Properties exists_ def
R47905:47908 Coq.Init.Datatypes <> negb def
R47911:47911 compcert.lib.Maps <> f var
R47915:47915 compcert.lib.Maps <> a var
R47913:47913 compcert.lib.Maps <> x var
R47891:47891 compcert.lib.Maps <> m var
R47945:47951 compcert.lib.Maps Tree_Properties exists_ def
R47954:47960 compcert.lib.Maps Tree_Properties for_all def
R47973:47983 compcert.lib.Maps T fold_spec prfax
R47973:47983 compcert.lib.Maps T fold_spec prfax
R47973:47983 compcert.lib.Maps T fold_spec prfax
R47973:47983 compcert.lib.Maps T fold_spec prfax
R47973:47983 compcert.lib.Maps T fold_spec prfax
R48006:48009 Coq.Init.Datatypes <> negb def
R48011:48015 Coq.Init.Datatypes <> false constr
R47995:47998 Coq.Init.Datatypes <> true constr
R47995:47998 Coq.Init.Datatypes <> true constr
R48006:48009 Coq.Init.Datatypes <> negb def
R48011:48015 Coq.Init.Datatypes <> false constr
R48031:48040 compcert.lib.Maps T elements defax
R48045:48049 Coq.Init.Datatypes <> false constr
R48031:48040 compcert.lib.Maps T elements defax
R48045:48049 Coq.Init.Datatypes <> false constr
R48152:48154 Coq.Init.Datatypes <> snd def
R48144:48146 Coq.Init.Datatypes <> fst def
R48152:48154 Coq.Init.Datatypes <> snd def
R48144:48146 Coq.Init.Datatypes <> fst def
R48152:48154 Coq.Init.Datatypes <> snd def
R48144:48146 Coq.Init.Datatypes <> fst def
prf 48186:48198 Tree_Properties for_all_false
R48236:48241 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48289:48289 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48228:48230 Coq.Init.Logic <> :type_scope:x_'='_x not
R48217:48223 compcert.lib.Maps Tree_Properties for_all def
R48227:48227 compcert.lib.Maps <> f var
R48225:48225 compcert.lib.Maps <> m var
R48231:48235 Coq.Init.Datatypes <> false constr
R48242:48248 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R48252:48253 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R48272:48275 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R48263:48265 Coq.Init.Logic <> :type_scope:x_'='_x not
R48254:48258 compcert.lib.Maps T get defax
R48262:48262 compcert.lib.Maps <> m var
R48260:48260 compcert.lib.Maps <> x var
R48266:48269 Coq.Init.Datatypes <> Some constr
R48271:48271 compcert.lib.Maps <> a var
R48281:48283 Coq.Init.Logic <> :type_scope:x_'='_x not
R48276:48276 compcert.lib.Maps <> f var
R48280:48280 compcert.lib.Maps <> a var
R48278:48278 compcert.lib.Maps <> x var
R48284:48288 Coq.Init.Datatypes <> false constr
R48317:48330 compcert.lib.Maps Tree_Properties for_all_exists thm
R48317:48330 compcert.lib.Maps Tree_Properties for_all_exists thm
R48317:48330 compcert.lib.Maps Tree_Properties for_all_exists thm
R48343:48356 Coq.Bool.Bool <> negb_false_iff thm
R48343:48356 Coq.Bool.Bool <> negb_false_iff thm
R48343:48356 Coq.Bool.Bool <> negb_false_iff thm
R48367:48380 compcert.lib.Maps Tree_Properties exists_correct thm
R48367:48380 compcert.lib.Maps Tree_Properties exists_correct thm
R48367:48380 compcert.lib.Maps Tree_Properties exists_correct thm
R48459:48471 Coq.Bool.Bool <> negb_true_iff thm
R48459:48471 Coq.Bool.Bool <> negb_true_iff thm
R48459:48471 Coq.Bool.Bool <> negb_true_iff thm
prf 48516:48527 Tree_Properties exists_false
R48565:48570 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48618:48618 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48557:48559 Coq.Init.Logic <> :type_scope:x_'='_x not
R48546:48552 compcert.lib.Maps Tree_Properties exists_ def
R48556:48556 compcert.lib.Maps <> f var
R48554:48554 compcert.lib.Maps <> m var
R48560:48564 Coq.Init.Datatypes <> false constr
R48601:48604 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48610:48612 Coq.Init.Logic <> :type_scope:x_'='_x not
R48605:48605 compcert.lib.Maps <> f var
R48609:48609 compcert.lib.Maps <> a var
R48607:48607 compcert.lib.Maps <> x var
R48613:48617 Coq.Init.Datatypes <> false constr
R48592:48594 Coq.Init.Logic <> :type_scope:x_'='_x not
R48583:48587 compcert.lib.Maps T get defax
R48591:48591 compcert.lib.Maps <> m var
R48589:48589 compcert.lib.Maps <> x var
R48595:48598 Coq.Init.Datatypes <> Some constr
R48600:48600 compcert.lib.Maps <> a var
R48646:48659 compcert.lib.Maps Tree_Properties exists_for_all thm
R48646:48659 compcert.lib.Maps Tree_Properties exists_for_all thm
R48646:48659 compcert.lib.Maps Tree_Properties exists_for_all thm
R48672:48685 Coq.Bool.Bool <> negb_false_iff thm
R48672:48685 Coq.Bool.Bool <> negb_false_iff thm
R48672:48685 Coq.Bool.Bool <> negb_false_iff thm
R48696:48710 compcert.lib.Maps Tree_Properties for_all_correct thm
R48696:48710 compcert.lib.Maps Tree_Properties for_all_correct thm
R48696:48710 compcert.lib.Maps Tree_Properties for_all_correct thm
R48753:48765 Coq.Bool.Bool <> negb_true_iff thm
R48753:48765 Coq.Bool.Bool <> negb_true_iff thm
R48753:48765 Coq.Bool.Bool <> negb_true_iff thm
R48807:48819 compcert.lib.Maps Tree_Properties.FORALL_EXISTS <> sec
sec 48856:48871 Tree_Properties BOOLEAN_EQUALITY
var 48884:48884 Tree_Properties.BOOLEAN_EQUALITY A
var 48902:48905 Tree_Properties.BOOLEAN_EQUALITY beqA
R48909:48912 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48914:48917 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48918:48921 Coq.Init.Datatypes <> bool ind
R48913:48913 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.A var
R48908:48908 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.A var
prf 48933:48941 Tree_Properties beq_false
R48986:48992 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48978:48980 Coq.Init.Logic <> :type_scope:x_'='_x not
R48962:48966 compcert.lib.Maps T beq defax
R48976:48977 compcert.lib.Maps <> m2 var
R48973:48974 compcert.lib.Maps <> m1 var
R48968:48971 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R48981:48985 Coq.Init.Datatypes <> false constr
R48993:48999 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49001:49002 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49021:49025 compcert.lib.Maps T get defax
R49029:49030 compcert.lib.Maps <> m2 var
R49027:49027 compcert.lib.Maps <> x var
R49009:49013 compcert.lib.Maps T get defax
R49017:49018 compcert.lib.Maps <> m1 var
R49015:49015 compcert.lib.Maps <> x var
R49051:49054 Coq.Init.Datatypes <> None constr
R49057:49060 Coq.Init.Datatypes <> None constr
R49065:49069 Coq.Init.Logic <> False ind
R49085:49088 Coq.Init.Datatypes <> Some constr
R49094:49097 Coq.Init.Datatypes <> Some constr
R49115:49117 Coq.Init.Logic <> :type_scope:x_'='_x not
R49105:49108 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49118:49122 Coq.Init.Datatypes <> false constr
R49146:49149 Coq.Init.Logic <> True ind
R49264:49268 compcert.lib.Maps T get defax
R49270:49270 compcert.lib.Maps <> x var
R49280:49283 Coq.Init.Datatypes <> None constr
R49288:49292 Coq.Init.Datatypes <> false constr
R49296:49299 Coq.Init.Datatypes <> Some constr
R49307:49310 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49312:49313 compcert.lib.Maps <> a1 var
R49264:49268 compcert.lib.Maps T get defax
R49270:49270 compcert.lib.Maps <> x var
R49280:49283 Coq.Init.Datatypes <> None constr
R49288:49292 Coq.Init.Datatypes <> false constr
R49296:49299 Coq.Init.Datatypes <> Some constr
R49307:49310 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49312:49313 compcert.lib.Maps <> a1 var
R49355:49359 compcert.lib.Maps T get defax
R49361:49361 compcert.lib.Maps <> x var
R49371:49374 Coq.Init.Datatypes <> None constr
R49379:49383 Coq.Init.Datatypes <> false constr
R49387:49390 Coq.Init.Datatypes <> Some constr
R49398:49401 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49406:49407 compcert.lib.Maps <> a2 var
R49355:49359 compcert.lib.Maps T get defax
R49361:49361 compcert.lib.Maps <> x var
R49371:49374 Coq.Init.Datatypes <> None constr
R49379:49383 Coq.Init.Datatypes <> false constr
R49387:49390 Coq.Init.Datatypes <> Some constr
R49398:49401 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49406:49407 compcert.lib.Maps <> a2 var
R49427:49433 compcert.lib.Maps Tree_Properties for_all def
R49461:49467 compcert.lib.Maps Tree_Properties for_all def
R49427:49433 compcert.lib.Maps Tree_Properties for_all def
R49461:49467 compcert.lib.Maps Tree_Properties for_all def
R49518:49520 Coq.Init.Logic <> :type_scope:x_'='_x not
R49502:49506 compcert.lib.Maps T beq defax
R49508:49511 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49521:49524 Coq.Init.Datatypes <> true constr
R49518:49520 Coq.Init.Logic <> :type_scope:x_'='_x not
R49502:49506 compcert.lib.Maps T beq defax
R49508:49511 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49521:49524 Coq.Init.Datatypes <> true constr
R49552:49566 compcert.lib.Maps Tree_Properties for_all_correct thm
R49552:49566 compcert.lib.Maps Tree_Properties for_all_correct thm
R49552:49566 compcert.lib.Maps Tree_Properties for_all_correct thm
R49582:49594 compcert.lib.Maps T beq_correct prfax
R49582:49594 compcert.lib.Maps T beq_correct prfax
R49582:49594 compcert.lib.Maps T beq_correct prfax
R49619:49623 compcert.lib.Maps T get defax
R49619:49623 compcert.lib.Maps T get defax
R49697:49701 compcert.lib.Maps T get defax
R49697:49701 compcert.lib.Maps T get defax
R49736:49740 compcert.lib.Maps T get defax
R49736:49740 compcert.lib.Maps T get defax
R49846:49858 compcert.lib.Maps Tree_Properties for_all_false thm
R49846:49858 compcert.lib.Maps Tree_Properties for_all_false thm
R49846:49858 compcert.lib.Maps Tree_Properties for_all_false thm
R49950:49954 compcert.lib.Maps T get defax
R49950:49954 compcert.lib.Maps T get defax
R49981:49993 compcert.lib.Maps Tree_Properties for_all_false thm
R49981:49993 compcert.lib.Maps Tree_Properties for_all_false thm
R49981:49993 compcert.lib.Maps Tree_Properties for_all_false thm
R50085:50089 compcert.lib.Maps T get defax
R50085:50089 compcert.lib.Maps T get defax
R50172:50176 compcert.lib.Maps T beq defax
R50178:50181 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R50172:50176 compcert.lib.Maps T beq defax
R50178:50181 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R50213:50225 compcert.lib.Maps T beq_correct prfax
R50213:50225 compcert.lib.Maps T beq_correct prfax
R50213:50225 compcert.lib.Maps T beq_correct prfax
R50263:50267 compcert.lib.Maps T get defax
R50286:50290 compcert.lib.Maps T get defax
R50263:50267 compcert.lib.Maps T get defax
R50286:50290 compcert.lib.Maps T get defax
R50286:50290 compcert.lib.Maps T get defax
R50330:50345 compcert.lib.Maps Tree_Properties.BOOLEAN_EQUALITY <> sec
sec 50400:50419 Tree_Properties EXTENSIONAL_EQUALITY
var 50432:50432 Tree_Properties.EXTENSIONAL_EQUALITY A
var 50450:50452 Tree_Properties.EXTENSIONAL_EQUALITY eqA
R50456:50459 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50461:50464 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50460:50460 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R50455:50455 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
var 50482:50486 Tree_Properties.EXTENSIONAL_EQUALITY eqAeq
R50489:50499 Coq.Classes.RelationClasses <> Equivalence class
R50501:50503 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.eqA var
def 50518:50522 Tree_Properties Equal
R50532:50534 compcert.lib.Maps T t defax
R50536:50536 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R50579:50583 compcert.lib.Maps T get defax
R50587:50588 compcert.lib.Maps <> m2 var
R50585:50585 compcert.lib.Maps <> x var
R50567:50571 compcert.lib.Maps T get defax
R50575:50576 compcert.lib.Maps <> m1 var
R50573:50573 compcert.lib.Maps <> x var
R50613:50616 Coq.Init.Datatypes <> None constr
R50619:50622 Coq.Init.Datatypes <> None constr
R50627:50630 Coq.Init.Logic <> True ind
R50650:50653 Coq.Init.Datatypes <> Some constr
R50659:50662 Coq.Init.Datatypes <> Some constr
R50672:50676 Coq.Classes.Equivalence <> :equiv_scope:x_'==='_x not
R50706:50710 Coq.Init.Logic <> False ind
prf 50736:50745 Tree_Properties Equal_refl
R50758:50762 compcert.lib.Maps Tree_Properties Equal def
R50766:50766 compcert.lib.Maps <> m var
R50764:50764 compcert.lib.Maps <> m var
R50809:50813 compcert.lib.Maps T get defax
R50809:50813 compcert.lib.Maps T get defax
prf 50852:50860 Tree_Properties Equal_sym
R50888:50891 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50892:50896 compcert.lib.Maps Tree_Properties Equal def
R50901:50902 compcert.lib.Maps <> m1 var
R50898:50899 compcert.lib.Maps <> m2 var
R50877:50881 compcert.lib.Maps Tree_Properties Equal def
R50886:50887 compcert.lib.Maps <> m2 var
R50883:50884 compcert.lib.Maps <> m1 var
R50963:50967 compcert.lib.Maps T get defax
R50986:50990 compcert.lib.Maps T get defax
R50963:50967 compcert.lib.Maps T get defax
R50986:50990 compcert.lib.Maps T get defax
R50986:50990 compcert.lib.Maps T get defax
prf 51041:51051 Tree_Properties Equal_trans
R51082:51085 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51097:51100 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51101:51105 compcert.lib.Maps Tree_Properties Equal def
R51110:51111 compcert.lib.Maps <> m3 var
R51107:51108 compcert.lib.Maps <> m1 var
R51086:51090 compcert.lib.Maps Tree_Properties Equal def
R51095:51096 compcert.lib.Maps <> m3 var
R51092:51093 compcert.lib.Maps <> m2 var
R51071:51075 compcert.lib.Maps Tree_Properties Equal def
R51080:51081 compcert.lib.Maps <> m2 var
R51077:51078 compcert.lib.Maps <> m1 var
R51181:51185 compcert.lib.Maps T get defax
R51204:51208 compcert.lib.Maps T get defax
R51240:51244 compcert.lib.Maps T get defax
R51181:51185 compcert.lib.Maps T get defax
R51204:51208 compcert.lib.Maps T get defax
R51204:51208 compcert.lib.Maps T get defax
R51240:51244 compcert.lib.Maps T get defax
inst 51312:51328 Tree_Properties Equal_Equivalence
R51332:51342 Coq.Classes.RelationClasses <> Equivalence class
R51344:51348 compcert.lib.Maps Tree_Properties Equal def
R51434:51455 Coq.Classes.RelationClasses <> Equivalence_Transitive meth
R51396:51416 Coq.Classes.RelationClasses <> Equivalence_Symmetric meth
R51357:51377 Coq.Classes.RelationClasses <> Equivalence_Reflexive meth
R51382:51391 compcert.lib.Maps Tree_Properties Equal_refl thm
R51421:51429 compcert.lib.Maps Tree_Properties Equal_sym thm
R51460:51470 compcert.lib.Maps Tree_Properties Equal_trans thm
var 51487:51492 Tree_Properties.EXTENSIONAL_EQUALITY eqAdec
R51495:51499 Coq.Classes.EquivDec <> EqDec class
R51503:51505 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.eqA var
R51501:51501 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
def 51528:51536 Tree_Properties Equal_dec
R51546:51548 compcert.lib.Maps T t defax
R51550:51550 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R51555:51556 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R51566:51572 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R51582:51583 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R51559:51563 Coq.Classes.Equivalence <> :equiv_scope:x_'==='_x not
R51557:51558 compcert.lib.Maps <> m1 var
R51564:51565 compcert.lib.Maps <> m2 var
R51575:51579 Coq.Classes.Equivalence <> :equiv_scope:x_'=/='_x not
R51573:51574 compcert.lib.Maps <> m1 var
R51580:51581 compcert.lib.Maps <> m2 var
R51596:51600 compcert.lib.Maps T beq defax
R51644:51645 compcert.lib.Maps <> m2 var
R51641:51642 compcert.lib.Maps <> m1 var
R51616:51627 compcert.lib.Coqlib <> proj_sumbool def
R51632:51635 Coq.Classes.EquivDec <> :equiv_scope:x_'=='_x not
R51630:51631 compcert.lib.Maps <> a1 var
R51636:51637 compcert.lib.Maps <> a2 var
R51656:51659 Coq.Init.Datatypes <> true constr
R51664:51667 Coq.Init.Specif <> left constr
R51675:51679 Coq.Init.Datatypes <> false constr
R51684:51688 Coq.Init.Specif <> right constr
R51772:51784 compcert.lib.Maps T beq_correct prfax
R51772:51784 compcert.lib.Maps T beq_correct prfax
R51772:51784 compcert.lib.Maps T beq_correct prfax
R51837:51841 compcert.lib.Maps T get defax
R51860:51864 compcert.lib.Maps T get defax
R51837:51841 compcert.lib.Maps T get defax
R51860:51864 compcert.lib.Maps T get defax
R51860:51864 compcert.lib.Maps T get defax
R51896:51912 compcert.lib.Coqlib <> proj_sumbool_true thm
R51896:51912 compcert.lib.Coqlib <> proj_sumbool_true thm
R52004:52006 Coq.Init.Logic <> :type_scope:x_'='_x not
R51954:51958 compcert.lib.Maps T beq defax
R51974:51985 compcert.lib.Coqlib <> proj_sumbool def
R51990:51993 Coq.Classes.EquivDec <> :equiv_scope:x_'=='_x not
R51988:51989 compcert.lib.Maps <> a1 var
R51994:51995 compcert.lib.Maps <> a2 var
R52007:52010 Coq.Init.Datatypes <> true constr
R52004:52006 Coq.Init.Logic <> :type_scope:x_'='_x not
R51954:51958 compcert.lib.Maps T beq defax
R51974:51985 compcert.lib.Coqlib <> proj_sumbool def
R51990:51993 Coq.Classes.EquivDec <> :equiv_scope:x_'=='_x not
R51988:51989 compcert.lib.Maps <> a1 var
R51994:51995 compcert.lib.Maps <> a2 var
R52007:52010 Coq.Init.Datatypes <> true constr
R52022:52034 compcert.lib.Maps T beq_correct prfax
R52022:52034 compcert.lib.Maps T beq_correct prfax
R52077:52081 compcert.lib.Maps T get defax
R52100:52104 compcert.lib.Maps T get defax
R52077:52081 compcert.lib.Maps T get defax
R52100:52104 compcert.lib.Maps T get defax
R52100:52104 compcert.lib.Maps T get defax
R52140:52159 compcert.lib.Coqlib <> proj_sumbool_is_true thm
R52140:52159 compcert.lib.Coqlib <> proj_sumbool_is_true thm
R52177:52181 Coq.Classes.Equivalence <> equiv def
R52184:52193 Coq.Classes.RelationClasses <> complement def
inst 52229:52239 Tree_Properties Equal_EqDec
R52243:52247 Coq.Classes.EquivDec <> EqDec class
R52257:52261 compcert.lib.Maps Tree_Properties Equal def
R52250:52252 compcert.lib.Maps T t defax
R52254:52254 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R52266:52274 compcert.lib.Maps Tree_Properties Equal_dec def
R52282:52301 compcert.lib.Maps Tree_Properties.EXTENSIONAL_EQUALITY <> sec
sec 52372:52378 Tree_Properties OF_LIST
var 52391:52391 Tree_Properties.OF_LIST A
var 52405:52405 Tree_Properties.OF_LIST f
R52418:52420 compcert.lib.Maps T t defax
R52422:52422 compcert.lib.Maps <> Tree_Properties.OF_LIST.A var
R52436:52438 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R52431:52435 compcert.lib.Maps T elt defax
R52439:52439 compcert.lib.Maps <> Tree_Properties.OF_LIST.A var
R52445:52449 compcert.lib.Maps T set defax
R52471:52471 compcert.lib.Maps <> m var
R52462:52464 Coq.Init.Datatypes <> snd def
R52466:52468 compcert.lib.Maps <> k_v var
R52452:52454 Coq.Init.Datatypes <> fst def
R52456:52458 compcert.lib.Maps <> k_v var
def 52486:52492 Tree_Properties of_list
R52498:52501 Coq.Init.Datatypes <> list ind
R52509:52511 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R52504:52508 compcert.lib.Maps T elt defax
R52512:52512 compcert.lib.Maps <> Tree_Properties.OF_LIST.A var
R52518:52520 compcert.lib.Maps T t defax
R52522:52522 compcert.lib.Maps <> Tree_Properties.OF_LIST.A var
R52529:52542 Coq.Lists.List <> fold_left def
R52549:52555 compcert.lib.Maps T empty defax
R52546:52546 compcert.lib.Maps <> l var
R52544:52544 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
prf 52568:52577 Tree_Properties in_of_list
R52624:52627 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52628:52629 Coq.Lists.List <> In def
R52638:52638 compcert.lib.Maps <> l var
R52631:52631 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52633:52634 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52636:52636 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52632:52632 compcert.lib.Maps <> k var
R52635:52635 compcert.lib.Maps <> v var
R52615:52617 Coq.Init.Logic <> :type_scope:x_'='_x not
R52596:52600 compcert.lib.Maps T get defax
R52605:52611 compcert.lib.Maps Tree_Properties of_list def
R52613:52613 compcert.lib.Maps <> l var
R52602:52602 compcert.lib.Maps <> k var
R52618:52621 Coq.Init.Datatypes <> Some constr
R52623:52623 compcert.lib.Maps <> v var
R52724:52727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52739:52742 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R52728:52729 Coq.Lists.List <> In def
R52738:52738 compcert.lib.Maps <> l var
R52731:52731 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52733:52734 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52736:52736 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52732:52732 compcert.lib.Maps <> k var
R52735:52735 compcert.lib.Maps <> v var
R52752:52754 Coq.Init.Logic <> :type_scope:x_'='_x not
R52743:52747 compcert.lib.Maps T get defax
R52751:52751 compcert.lib.Maps <> m var
R52749:52749 compcert.lib.Maps <> k var
R52755:52758 Coq.Init.Datatypes <> Some constr
R52760:52760 compcert.lib.Maps <> v var
R52715:52717 Coq.Init.Logic <> :type_scope:x_'='_x not
R52690:52694 compcert.lib.Maps T get defax
R52699:52707 Coq.Lists.List <> fold_left def
R52713:52713 compcert.lib.Maps <> m var
R52711:52711 compcert.lib.Maps <> l var
R52709:52709 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
R52696:52696 compcert.lib.Maps <> k var
R52718:52721 Coq.Init.Datatypes <> Some constr
R52723:52723 compcert.lib.Maps <> v var
R52724:52727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52739:52742 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R52728:52729 Coq.Lists.List <> In def
R52738:52738 compcert.lib.Maps <> l var
R52731:52731 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52733:52734 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52736:52736 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52732:52732 compcert.lib.Maps <> k var
R52735:52735 compcert.lib.Maps <> v var
R52752:52754 Coq.Init.Logic <> :type_scope:x_'='_x not
R52743:52747 compcert.lib.Maps T get defax
R52751:52751 compcert.lib.Maps <> m var
R52749:52749 compcert.lib.Maps <> k var
R52755:52758 Coq.Init.Datatypes <> Some constr
R52760:52760 compcert.lib.Maps <> v var
R52715:52717 Coq.Init.Logic <> :type_scope:x_'='_x not
R52690:52694 compcert.lib.Maps T get defax
R52699:52707 Coq.Lists.List <> fold_left def
R52713:52713 compcert.lib.Maps <> m var
R52711:52711 compcert.lib.Maps <> l var
R52709:52709 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
R52696:52696 compcert.lib.Maps <> k var
R52718:52721 Coq.Init.Datatypes <> Some constr
R52723:52723 compcert.lib.Maps <> v var
R52852:52852 compcert.lib.Maps Tree_Properties f vardef
R52880:52887 compcert.lib.Maps T gsspec prfax
R52880:52887 compcert.lib.Maps T gsspec prfax
R52880:52887 compcert.lib.Maps T gsspec prfax
R52932:52939 compcert.lib.Maps T elt_eq defax
R52932:52939 compcert.lib.Maps T elt_eq defax
R53006:53013 compcert.lib.Maps T gempty prfax
R53006:53013 compcert.lib.Maps T gempty prfax
R53006:53013 compcert.lib.Maps T gempty prfax
prf 53055:53065 Tree_Properties of_list_dom
R53098:53101 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53102:53108 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53110:53111 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53131:53133 Coq.Init.Logic <> :type_scope:x_'='_x not
R53112:53116 compcert.lib.Maps T get defax
R53121:53127 compcert.lib.Maps Tree_Properties of_list def
R53129:53129 compcert.lib.Maps <> l var
R53118:53118 compcert.lib.Maps <> k var
R53134:53137 Coq.Init.Datatypes <> Some constr
R53139:53139 compcert.lib.Maps <> v var
R53082:53083 Coq.Lists.List <> In def
R53088:53090 Coq.Lists.List <> map def
R53096:53096 compcert.lib.Maps <> l var
R53092:53094 Coq.Init.Datatypes <> fst def
R53085:53085 compcert.lib.Maps <> k var
R53240:53255 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53256:53262 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53264:53265 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53291:53293 Coq.Init.Logic <> :type_scope:x_'='_x not
R53266:53270 compcert.lib.Maps T get defax
R53275:53283 Coq.Lists.List <> fold_left def
R53289:53289 compcert.lib.Maps <> m var
R53287:53287 compcert.lib.Maps <> l var
R53285:53285 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
R53272:53272 compcert.lib.Maps <> k var
R53294:53297 Coq.Init.Datatypes <> Some constr
R53299:53299 compcert.lib.Maps <> v var
R53206:53210 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R53239:53239 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R53190:53191 Coq.Lists.List <> In def
R53196:53198 Coq.Lists.List <> map def
R53204:53204 compcert.lib.Maps <> l var
R53200:53202 Coq.Init.Datatypes <> fst def
R53193:53193 compcert.lib.Maps <> k var
R53211:53217 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53219:53220 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53230:53232 Coq.Init.Logic <> :type_scope:x_'='_x not
R53221:53225 compcert.lib.Maps T get defax
R53229:53229 compcert.lib.Maps <> m var
R53227:53227 compcert.lib.Maps <> k var
R53233:53236 Coq.Init.Datatypes <> Some constr
R53238:53238 compcert.lib.Maps <> v var
R53240:53255 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53256:53262 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53264:53265 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53291:53293 Coq.Init.Logic <> :type_scope:x_'='_x not
R53266:53270 compcert.lib.Maps T get defax
R53275:53283 Coq.Lists.List <> fold_left def
R53289:53289 compcert.lib.Maps <> m var
R53287:53287 compcert.lib.Maps <> l var
R53285:53285 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
R53272:53272 compcert.lib.Maps <> k var
R53294:53297 Coq.Init.Datatypes <> Some constr
R53299:53299 compcert.lib.Maps <> v var
R53206:53210 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R53239:53239 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R53190:53191 Coq.Lists.List <> In def
R53196:53198 Coq.Lists.List <> map def
R53204:53204 compcert.lib.Maps <> l var
R53200:53202 Coq.Init.Datatypes <> fst def
R53193:53193 compcert.lib.Maps <> k var
R53211:53217 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53219:53220 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53230:53232 Coq.Init.Logic <> :type_scope:x_'='_x not
R53221:53225 compcert.lib.Maps T get defax
R53229:53229 compcert.lib.Maps <> m var
R53227:53227 compcert.lib.Maps <> k var
R53233:53236 Coq.Init.Datatypes <> Some constr
R53238:53238 compcert.lib.Maps <> v var
R53386:53386 compcert.lib.Maps Tree_Properties f vardef
R53397:53404 compcert.lib.Maps T gsspec prfax
R53397:53404 compcert.lib.Maps T gsspec prfax
R53397:53404 compcert.lib.Maps T gsspec prfax
R53424:53431 compcert.lib.Maps T elt_eq defax
R53424:53431 compcert.lib.Maps T elt_eq defax
prf 53543:53559 Tree_Properties of_list_unchanged
R53595:53598 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53629:53631 Coq.Init.Logic <> :type_scope:x_'='_x not
R53599:53603 compcert.lib.Maps T get defax
R53608:53621 Coq.Lists.List <> fold_left def
R53627:53627 compcert.lib.Maps <> m var
R53625:53625 compcert.lib.Maps <> l var
R53623:53623 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
R53605:53605 compcert.lib.Maps <> k var
R53632:53636 compcert.lib.Maps T get defax
R53640:53640 compcert.lib.Maps <> m var
R53638:53638 compcert.lib.Maps <> k var
R53578:53578 Coq.Init.Logic <> :type_scope:'~'_x not
R53579:53580 Coq.Lists.List <> In def
R53585:53587 Coq.Lists.List <> map def
R53593:53593 compcert.lib.Maps <> l var
R53589:53591 Coq.Init.Datatypes <> fst def
R53582:53582 compcert.lib.Maps <> k var
R53737:53737 compcert.lib.Maps Tree_Properties f vardef
R53746:53750 compcert.lib.Maps T gso prfax
R53746:53750 compcert.lib.Maps T gso prfax
prf 53781:53794 Tree_Properties of_list_unique
R53837:53840 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53879:53881 Coq.Init.Logic <> :type_scope:x_'='_x not
R53841:53845 compcert.lib.Maps T get defax
R53850:53856 compcert.lib.Maps Tree_Properties of_list def
R53861:53864 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R53859:53860 compcert.lib.Maps <> l1 var
R53871:53874 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R53865:53865 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53867:53868 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53870:53870 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53866:53866 compcert.lib.Maps <> k var
R53869:53869 compcert.lib.Maps <> v var
R53875:53876 compcert.lib.Maps <> l2 var
R53847:53847 compcert.lib.Maps <> k var
R53882:53885 Coq.Init.Datatypes <> Some constr
R53887:53887 compcert.lib.Maps <> v var
R53819:53819 Coq.Init.Logic <> :type_scope:'~'_x not
R53820:53821 Coq.Lists.List <> In def
R53826:53828 Coq.Lists.List <> map def
R53834:53835 compcert.lib.Maps <> l2 var
R53830:53832 Coq.Init.Datatypes <> fst def
R53823:53823 compcert.lib.Maps <> k var
R53914:53920 compcert.lib.Maps Tree_Properties of_list def
R53931:53943 Coq.Lists.List <> fold_left_app thm
R53931:53943 Coq.Lists.List <> fold_left_app thm
R53931:53943 Coq.Lists.List <> fold_left_app thm
R53964:53980 compcert.lib.Maps Tree_Properties of_list_unchanged thm
R53964:53980 compcert.lib.Maps Tree_Properties of_list_unchanged thm
R53964:53980 compcert.lib.Maps Tree_Properties of_list_unchanged thm
R53998:53998 compcert.lib.Maps Tree_Properties f vardef
R54007:54011 compcert.lib.Maps T gss prfax
R54007:54011 compcert.lib.Maps T gss prfax
prf 54026:54040 Tree_Properties of_list_norepet
R54083:54086 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54098:54101 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54121:54123 Coq.Init.Logic <> :type_scope:x_'='_x not
R54102:54106 compcert.lib.Maps T get defax
R54111:54117 compcert.lib.Maps Tree_Properties of_list def
R54119:54119 compcert.lib.Maps <> l var
R54108:54108 compcert.lib.Maps <> k var
R54124:54127 Coq.Init.Datatypes <> Some constr
R54129:54129 compcert.lib.Maps <> v var
R54087:54088 Coq.Lists.List <> In def
R54097:54097 compcert.lib.Maps <> l var
R54090:54090 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54092:54093 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54095:54095 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54091:54091 compcert.lib.Maps <> k var
R54094:54094 compcert.lib.Maps <> v var
R54059:54070 compcert.lib.Coqlib <> list_norepet ind
R54073:54075 Coq.Lists.List <> map def
R54081:54081 compcert.lib.Maps <> l var
R54077:54079 Coq.Init.Datatypes <> fst def
R54206:54221 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54233:54248 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54274:54276 Coq.Init.Logic <> :type_scope:x_'='_x not
R54249:54253 compcert.lib.Maps T get defax
R54258:54266 Coq.Lists.List <> fold_left def
R54272:54272 compcert.lib.Maps <> m var
R54270:54270 compcert.lib.Maps <> l var
R54268:54268 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
R54255:54255 compcert.lib.Maps <> k var
R54277:54280 Coq.Init.Datatypes <> Some constr
R54282:54282 compcert.lib.Maps <> v var
R54222:54223 Coq.Lists.List <> In def
R54232:54232 compcert.lib.Maps <> l var
R54225:54225 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54227:54228 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54230:54230 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54226:54226 compcert.lib.Maps <> k var
R54229:54229 compcert.lib.Maps <> v var
R54182:54193 compcert.lib.Coqlib <> list_norepet ind
R54196:54198 Coq.Lists.List <> map def
R54204:54204 compcert.lib.Maps <> l var
R54200:54202 Coq.Init.Datatypes <> fst def
R54206:54221 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54233:54248 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54274:54276 Coq.Init.Logic <> :type_scope:x_'='_x not
R54249:54253 compcert.lib.Maps T get defax
R54258:54266 Coq.Lists.List <> fold_left def
R54272:54272 compcert.lib.Maps <> m var
R54270:54270 compcert.lib.Maps <> l var
R54268:54268 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
R54255:54255 compcert.lib.Maps <> k var
R54277:54280 Coq.Init.Datatypes <> Some constr
R54282:54282 compcert.lib.Maps <> v var
R54222:54223 Coq.Lists.List <> In def
R54232:54232 compcert.lib.Maps <> l var
R54225:54225 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54227:54228 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54230:54230 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54226:54226 compcert.lib.Maps <> k var
R54229:54229 compcert.lib.Maps <> v var
R54182:54193 compcert.lib.Coqlib <> list_norepet ind
R54196:54198 Coq.Lists.List <> map def
R54204:54204 compcert.lib.Maps <> l var
R54200:54202 Coq.Init.Datatypes <> fst def
R54398:54414 compcert.lib.Maps Tree_Properties of_list_unchanged thm
R54398:54414 compcert.lib.Maps Tree_Properties of_list_unchanged thm
R54398:54414 compcert.lib.Maps Tree_Properties of_list_unchanged thm
R54431:54435 compcert.lib.Maps T gss prfax
R54431:54435 compcert.lib.Maps T gss prfax
prf 54504:54519 Tree_Properties of_list_elements
R54568:54570 Coq.Init.Logic <> :type_scope:x_'='_x not
R54536:54540 compcert.lib.Maps T get defax
R54545:54551 compcert.lib.Maps Tree_Properties of_list def
R54554:54563 compcert.lib.Maps T elements defax
R54565:54565 compcert.lib.Maps <> m var
R54542:54542 compcert.lib.Maps <> k var
R54571:54575 compcert.lib.Maps T get defax
R54579:54579 compcert.lib.Maps <> m var
R54577:54577 compcert.lib.Maps <> k var
R54609:54613 compcert.lib.Maps T get defax
R54609:54613 compcert.lib.Maps T get defax
R54643:54657 compcert.lib.Maps Tree_Properties of_list_norepet thm
R54643:54657 compcert.lib.Maps Tree_Properties of_list_norepet thm
R54666:54688 compcert.lib.Maps T elements_keys_norepet prfax
R54666:54688 compcert.lib.Maps T elements_keys_norepet prfax
R54697:54714 compcert.lib.Maps T elements_correct prfax
R54697:54714 compcert.lib.Maps T elements_correct prfax
R54735:54739 compcert.lib.Maps T get defax
R54744:54750 compcert.lib.Maps Tree_Properties of_list def
R54753:54762 compcert.lib.Maps T elements defax
R54735:54739 compcert.lib.Maps T get defax
R54744:54750 compcert.lib.Maps Tree_Properties of_list def
R54753:54762 compcert.lib.Maps T elements defax
R54799:54808 compcert.lib.Maps Tree_Properties in_of_list thm
R54799:54808 compcert.lib.Maps Tree_Properties in_of_list thm
R54823:54841 compcert.lib.Maps T elements_complete prfax
R54823:54841 compcert.lib.Maps T elements_complete prfax
R54872:54878 compcert.lib.Maps Tree_Properties.OF_LIST <> sec
prf 54888:54902 Tree_Properties of_list_related
R54931:54934 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54936:54939 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54935:54935 compcert.lib.Maps <> B var
R54930:54930 compcert.lib.Maps <> A var
R55029:55034 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55035:55044 compcert.lib.Coqlib <> option_rel ind
R55072:55076 compcert.lib.Maps T get defax
R55081:55087 compcert.lib.Maps Tree_Properties of_list def
R55089:55090 compcert.lib.Maps <> l2 var
R55078:55078 compcert.lib.Maps <> k var
R55049:55053 compcert.lib.Maps T get defax
R55058:55064 compcert.lib.Maps Tree_Properties of_list def
R55066:55067 compcert.lib.Maps <> l1 var
R55055:55055 compcert.lib.Maps <> k var
R55046:55046 compcert.lib.Maps <> R var
R54957:54968 compcert.lib.Coqlib <> list_forall2 ind
R55027:55028 compcert.lib.Maps <> l2 var
R55024:55025 compcert.lib.Maps <> l1 var
R54999:55002 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54990:54992 Coq.Init.Logic <> :type_scope:x_'='_x not
R54984:54986 Coq.Init.Datatypes <> fst def
R54988:54989 compcert.lib.Maps <> ka var
R54993:54995 Coq.Init.Datatypes <> fst def
R54997:54998 compcert.lib.Maps <> kb var
R55003:55003 compcert.lib.Maps <> R var
R55015:55017 Coq.Init.Datatypes <> snd def
R55019:55020 compcert.lib.Maps <> kb var
R55006:55008 Coq.Init.Datatypes <> snd def
R55010:55011 compcert.lib.Maps <> ka var
R55127:55133 compcert.lib.Maps Tree_Properties of_list def
R55177:55180 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R55168:55170 Coq.Init.Logic <> :type_scope:x_'='_x not
R55162:55164 Coq.Init.Datatypes <> fst def
R55166:55167 compcert.lib.Maps <> ka var
R55171:55173 Coq.Init.Datatypes <> fst def
R55175:55176 compcert.lib.Maps <> kb var
R55193:55195 Coq.Init.Datatypes <> snd def
R55197:55198 compcert.lib.Maps <> kb var
R55184:55186 Coq.Init.Datatypes <> snd def
R55188:55189 compcert.lib.Maps <> ka var
R55177:55180 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R55168:55170 Coq.Init.Logic <> :type_scope:x_'='_x not
R55162:55164 Coq.Init.Datatypes <> fst def
R55166:55167 compcert.lib.Maps <> ka var
R55171:55173 Coq.Init.Datatypes <> fst def
R55175:55176 compcert.lib.Maps <> kb var
R55193:55195 Coq.Init.Datatypes <> snd def
R55197:55198 compcert.lib.Maps <> kb var
R55184:55186 Coq.Init.Datatypes <> snd def
R55188:55189 compcert.lib.Maps <> ka var
R55225:55227 compcert.lib.Maps T t defax
R55244:55246 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55239:55243 compcert.lib.Maps T elt defax
R55253:55257 compcert.lib.Maps T set defax
R55279:55279 compcert.lib.Maps <> m var
R55270:55272 Coq.Init.Datatypes <> snd def
R55274:55276 compcert.lib.Maps <> k_v var
R55260:55262 Coq.Init.Datatypes <> fst def
R55264:55266 compcert.lib.Maps <> k_v var
R55225:55227 compcert.lib.Maps T t defax
R55244:55246 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55239:55243 compcert.lib.Maps T elt defax
R55253:55257 compcert.lib.Maps T set defax
R55279:55279 compcert.lib.Maps <> m var
R55270:55272 Coq.Init.Datatypes <> snd def
R55274:55276 compcert.lib.Maps <> k_v var
R55260:55262 Coq.Init.Datatypes <> fst def
R55264:55266 compcert.lib.Maps <> k_v var
R55305:55307 compcert.lib.Maps T t defax
R55324:55326 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55319:55323 compcert.lib.Maps T elt defax
R55333:55337 compcert.lib.Maps T set defax
R55359:55359 compcert.lib.Maps <> m var
R55350:55352 Coq.Init.Datatypes <> snd def
R55354:55356 compcert.lib.Maps <> k_v var
R55340:55342 Coq.Init.Datatypes <> fst def
R55344:55346 compcert.lib.Maps <> k_v var
R55305:55307 compcert.lib.Maps T t defax
R55324:55326 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55319:55323 compcert.lib.Maps T elt defax
R55333:55337 compcert.lib.Maps T set defax
R55359:55359 compcert.lib.Maps <> m var
R55350:55352 Coq.Init.Datatypes <> snd def
R55354:55356 compcert.lib.Maps <> k_v var
R55340:55342 Coq.Init.Datatypes <> fst def
R55344:55346 compcert.lib.Maps <> k_v var
R55413:55431 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55484:55502 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55503:55512 compcert.lib.Coqlib <> option_rel ind
R55548:55552 compcert.lib.Maps T get defax
R55557:55565 Coq.Lists.List <> fold_left def
R55573:55574 compcert.lib.Maps <> m2 var
R55570:55571 compcert.lib.Maps <> l2 var
R55517:55521 compcert.lib.Maps T get defax
R55526:55534 Coq.Lists.List <> fold_left def
R55542:55543 compcert.lib.Maps <> m1 var
R55539:55540 compcert.lib.Maps <> l1 var
R55446:55455 compcert.lib.Coqlib <> option_rel ind
R55473:55477 compcert.lib.Maps T get defax
R55481:55482 compcert.lib.Maps <> m2 var
R55460:55464 compcert.lib.Maps T get defax
R55468:55469 compcert.lib.Maps <> m1 var
R55392:55403 compcert.lib.Coqlib <> list_forall2 ind
R55411:55412 compcert.lib.Maps <> l2 var
R55408:55409 compcert.lib.Maps <> l1 var
R55413:55431 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55484:55502 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55503:55512 compcert.lib.Coqlib <> option_rel ind
R55548:55552 compcert.lib.Maps T get defax
R55557:55565 Coq.Lists.List <> fold_left def
R55573:55574 compcert.lib.Maps <> m2 var
R55570:55571 compcert.lib.Maps <> l2 var
R55517:55521 compcert.lib.Maps T get defax
R55526:55534 Coq.Lists.List <> fold_left def
R55542:55543 compcert.lib.Maps <> m1 var
R55539:55540 compcert.lib.Maps <> l1 var
R55446:55455 compcert.lib.Coqlib <> option_rel ind
R55473:55477 compcert.lib.Maps T get defax
R55481:55482 compcert.lib.Maps <> m2 var
R55460:55464 compcert.lib.Maps T get defax
R55468:55469 compcert.lib.Maps <> m1 var
R55392:55403 compcert.lib.Coqlib <> list_forall2 ind
R55411:55412 compcert.lib.Maps <> l2 var
R55408:55409 compcert.lib.Maps <> l1 var
R55673:55680 compcert.lib.Maps T gsspec prfax
R55673:55680 compcert.lib.Maps T gsspec prfax
R55673:55680 compcert.lib.Maps T gsspec prfax
R55673:55680 compcert.lib.Maps T gsspec prfax
R55673:55680 compcert.lib.Maps T gsspec prfax
R55729:55736 compcert.lib.Maps T elt_eq defax
R55741:55743 Coq.Init.Datatypes <> fst def
R55729:55736 compcert.lib.Maps T elt_eq defax
R55741:55743 Coq.Init.Datatypes <> fst def
R55823:55830 compcert.lib.Maps T gempty prfax
R55823:55830 compcert.lib.Maps T gempty prfax
R55823:55830 compcert.lib.Maps T gempty prfax
R55823:55830 compcert.lib.Maps T gempty prfax
R55823:55830 compcert.lib.Maps T gempty prfax
R55856:55870 compcert.lib.Maps Tree_Properties <> mod
R55901:55915 compcert.lib.Maps Tree_Properties <> modtype
R55917:55921 compcert.lib.Maps PTree <> modtype
mod 55881:55896 <> PTree_Properties
R55974:55982 compcert.lib.Maps PTree get def
not 55962:55962 <> ::x_'!'_x
R56025:56032 compcert.lib.Maps PMap get def
not 56012:56012 <> ::x_'!!'_x
