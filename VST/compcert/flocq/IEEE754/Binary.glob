DIGEST 81cabc49c152bce01d20129e02ca70eb
Fcompcert.flocq.IEEE754.Binary
R723:726 compcert.flocq.Core.Core <> <> lib
R728:733 compcert.flocq.Core.Digits <> <> lib
R735:739 compcert.flocq.Calc.Round <> <> lib
R741:747 compcert.flocq.Calc.Bracket <> <> lib
R749:758 compcert.flocq.Calc.Operations <> <> lib
R760:762 compcert.flocq.Calc.Div <> <> lib
R764:767 compcert.flocq.Calc.Sqrt <> <> lib
R769:776 compcert.flocq.Prop.Relative <> <> lib
R794:798 Coq.micromega.Psatz <> <> lib
sec 810:817 <> AnyRadix
ind 831:840 <> full_float
constr 849:857 <> F754_zero
constr 874:886 <> F754_infinity
constr 903:910 <> F754_nan
constr 942:952 <> F754_finite
R864:867 Coq.Init.Datatypes <> bool ind
R869:869 compcert.flocq.IEEE754.Binary <> full_float ind
R893:896 Coq.Init.Datatypes <> bool ind
R898:898 compcert.flocq.IEEE754.Binary <> full_float ind
R917:920 Coq.Init.Datatypes <> bool ind
R928:935 Coq.Numbers.BinNums <> positive ind
R937:937 compcert.flocq.IEEE754.Binary <> full_float ind
R959:962 Coq.Init.Datatypes <> bool ind
R970:977 Coq.Numbers.BinNums <> positive ind
R985:985 Coq.Numbers.BinNums <> Z ind
R987:987 compcert.flocq.IEEE754.Binary <> full_float ind
def 1001:1004 <> FF2R
R1024:1024 compcert.flocq.IEEE754.Binary <> x var
R1035:1045 compcert.flocq.IEEE754.Binary <> F754_finite constr
R1056:1058 compcert.flocq.Core.Defs <> F2R def
R1061:1065 compcert.flocq.Core.Defs <> Float constr
R1073:1081 compcert.flocq.Core.Zaux <> cond_Zopp def
R1086:1089 Coq.Numbers.BinNums <> Zpos constr
R1067:1070 compcert.flocq.IEEE754.Binary <> beta var
R1123:1130 compcert.flocq.IEEE754.Binary AnyRadix <> sec
sec 1142:1147 <> Binary
R1161:1165 Coq.Init.Specif <> exist constr
R1161:1165 Coq.Init.Specif <> exist constr
var 1383:1386 Binary prec
var 1388:1391 Binary emax
R1395:1395 Coq.Numbers.BinNums <> Z ind
R1420:1428 compcert.flocq.Core.FLX <> Prec_gt_0 class
R1430:1433 compcert.flocq.IEEE754.Binary <> Binary.prec var
var 1448:1451 Binary Hmax
R1460:1462 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R1456:1459 compcert.flocq.IEEE754.Binary <> Binary.prec var
R1463:1466 compcert.flocq.IEEE754.Binary <> Binary.emax var
var 1477:1480 Binary emin
R1494:1496 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1487:1489 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1490:1493 compcert.flocq.IEEE754.Binary <> Binary.emax var
R1497:1500 compcert.flocq.IEEE754.Binary <> Binary.prec var
var 1510:1513 Binary fexp
R1518:1524 compcert.flocq.Core.FLT <> FLT_exp def
R1531:1534 compcert.flocq.IEEE754.Binary <> Binary.prec var
R1526:1529 compcert.flocq.IEEE754.Binary <> Binary.emin var
inst 1546:1557 <> fexp_correct
R1561:1569 compcert.flocq.Core.Generic_fmt <> Valid_exp class
R1571:1574 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R1579:1591 compcert.flocq.Core.FLT <> FLT_exp_valid inst
R1598:1601 compcert.flocq.IEEE754.Binary <> Binary.prec var
R1593:1596 compcert.flocq.IEEE754.Binary <> Binary.emin var
inst 1613:1625 <> fexp_monotone
R1629:1640 compcert.flocq.Core.Generic_fmt <> Monotone_exp class
R1642:1645 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R1650:1665 compcert.flocq.Core.FLT <> FLT_exp_monotone inst
R1672:1675 compcert.flocq.IEEE754.Binary <> Binary.prec var
R1667:1670 compcert.flocq.IEEE754.Binary <> Binary.emin var
def 1690:1707 <> canonical_mantissa
R1718:1725 Coq.ZArith.Zbool <> Zeq_bool def
R1761:1761 compcert.flocq.IEEE754.Binary <> e var
R1728:1731 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R1754:1756 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1734:1737 Coq.Numbers.BinNums <> Zpos constr
R1740:1750 compcert.flocq.Core.Digits <> digits2_pos def
R1752:1752 compcert.flocq.IEEE754.Binary <> m var
R1757:1757 compcert.flocq.IEEE754.Binary <> e var
def 1776:1782 <> bounded
R1793:1796 Coq.Init.Datatypes <> andb def
R1824:1831 Coq.ZArith.Zbool <> Zle_bool syndef
R1840:1842 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1836:1839 compcert.flocq.IEEE754.Binary <> Binary.emax var
R1843:1846 compcert.flocq.IEEE754.Binary <> Binary.prec var
R1833:1833 compcert.flocq.IEEE754.Binary <> e var
R1799:1816 compcert.flocq.IEEE754.Binary <> canonical_mantissa def
R1820:1820 compcert.flocq.IEEE754.Binary <> e var
R1818:1818 compcert.flocq.IEEE754.Binary <> m var
def 1863:1868 <> nan_pl
R1878:1885 Coq.ZArith.Zbool <> Zlt_bool syndef
R1911:1914 compcert.flocq.IEEE754.Binary <> Binary.prec var
R1888:1891 Coq.Numbers.BinNums <> Zpos constr
R1894:1904 compcert.flocq.Core.Digits <> digits2_pos def
R1906:1907 compcert.flocq.IEEE754.Binary <> pl var
def 1929:1940 <> valid_binary
R1955:1955 compcert.flocq.IEEE754.Binary <> x var
R1966:1976 compcert.flocq.IEEE754.Binary <> F754_finite constr
R1987:1993 compcert.flocq.IEEE754.Binary <> bounded def
R2003:2010 compcert.flocq.IEEE754.Binary <> F754_nan constr
R2020:2025 compcert.flocq.IEEE754.Binary <> nan_pl def
R2039:2042 Coq.Init.Datatypes <> true constr
ind 2183:2194 <> binary_float
constr 2203:2211 <> B754_zero
constr 2228:2240 <> B754_infinity
constr 2257:2264 <> B754_nan
constr 2336:2346 <> B754_finite
R2218:2221 Coq.Init.Datatypes <> bool ind
R2223:2223 compcert.flocq.IEEE754.Binary <> binary_float ind
R2247:2250 Coq.Init.Datatypes <> bool ind
R2252:2252 compcert.flocq.IEEE754.Binary <> binary_float ind
R2271:2274 Coq.Init.Datatypes <> bool ind
R2283:2290 Coq.Numbers.BinNums <> positive ind
R2315:2318 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2319:2330 compcert.flocq.IEEE754.Binary <> binary_float ind
R2308:2310 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2299:2304 compcert.flocq.IEEE754.Binary <> nan_pl def
R2306:2307 compcert.flocq.IEEE754.Binary <> pl var
R2311:2314 Coq.Init.Datatypes <> true constr
R2353:2356 Coq.Init.Datatypes <> bool ind
R2364:2371 Coq.Numbers.BinNums <> positive ind
R2379:2379 Coq.Numbers.BinNums <> Z ind
R2406:2409 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2410:2421 compcert.flocq.IEEE754.Binary <> binary_float ind
R2399:2401 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2388:2394 compcert.flocq.IEEE754.Binary <> bounded def
R2398:2398 compcert.flocq.IEEE754.Binary <> e var
R2396:2396 compcert.flocq.IEEE754.Binary <> m var
R2402:2405 Coq.Init.Datatypes <> true constr
def 2436:2439 <> FF2B
R2454:2454 compcert.flocq.IEEE754.Binary <> x var
R2489:2492 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2493:2504 compcert.flocq.IEEE754.Binary <> binary_float ind
R2482:2484 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2468:2479 compcert.flocq.IEEE754.Binary <> valid_binary def
R2481:2481 compcert.flocq.IEEE754.Binary <> x var
R2485:2488 Coq.Init.Datatypes <> true constr
R2515:2525 compcert.flocq.IEEE754.Binary <> F754_finite constr
R2536:2546 compcert.flocq.IEEE754.Binary <> B754_finite constr
R2558:2570 compcert.flocq.IEEE754.Binary <> F754_infinity constr
R2586:2598 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R2606:2614 compcert.flocq.IEEE754.Binary <> F754_zero constr
R2630:2638 compcert.flocq.IEEE754.Binary <> B754_zero constr
R2646:2653 compcert.flocq.IEEE754.Binary <> F754_nan constr
R2672:2679 compcert.flocq.IEEE754.Binary <> B754_nan constr
R2686:2686 compcert.flocq.IEEE754.Binary <> H var
def 2707:2710 <> B2FF
R2725:2725 compcert.flocq.IEEE754.Binary <> x var
R2736:2746 compcert.flocq.IEEE754.Binary <> B754_finite constr
R2759:2769 compcert.flocq.IEEE754.Binary <> F754_finite constr
R2781:2793 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R2800:2812 compcert.flocq.IEEE754.Binary <> F754_infinity constr
R2820:2828 compcert.flocq.IEEE754.Binary <> B754_zero constr
R2835:2843 compcert.flocq.IEEE754.Binary <> F754_zero constr
R2851:2858 compcert.flocq.IEEE754.Binary <> B754_nan constr
R2870:2877 compcert.flocq.IEEE754.Binary <> F754_nan constr
def 2903:2905 <> B2R
R2920:2920 compcert.flocq.IEEE754.Binary <> f var
R2931:2941 compcert.flocq.IEEE754.Binary <> B754_finite constr
R2954:2956 compcert.flocq.Core.Defs <> F2R def
R2959:2963 compcert.flocq.Core.Defs <> Float constr
R2973:2981 compcert.flocq.Core.Zaux <> cond_Zopp def
R2986:2989 Coq.Numbers.BinNums <> Zpos constr
R2965:2970 compcert.flocq.Core.Zaux <> radix2 def
prf 3027:3035 <> FF2R_B2FF
R3073:3075 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3053:3056 compcert.flocq.IEEE754.Binary <> FF2R def
R3066:3069 compcert.flocq.IEEE754.Binary <> B2FF def
R3071:3071 compcert.flocq.IEEE754.Binary <> x var
R3058:3063 compcert.flocq.Core.Zaux <> radix2 def
R3076:3078 compcert.flocq.IEEE754.Binary <> B2R def
R3080:3080 compcert.flocq.IEEE754.Binary <> x var
prf 3148:3156 <> B2FF_FF2B
R3193:3195 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3177:3180 compcert.flocq.IEEE754.Binary <> B2FF def
R3183:3186 compcert.flocq.IEEE754.Binary <> FF2B def
R3190:3191 compcert.flocq.IEEE754.Binary <> Hx var
R3188:3188 compcert.flocq.IEEE754.Binary <> x var
R3196:3196 compcert.flocq.IEEE754.Binary <> x var
prf 3259:3275 <> valid_binary_B2FF
R3314:3316 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3293:3304 compcert.flocq.IEEE754.Binary <> valid_binary def
R3307:3310 compcert.flocq.IEEE754.Binary <> B2FF def
R3312:3312 compcert.flocq.IEEE754.Binary <> x var
R3317:3320 Coq.Init.Datatypes <> true constr
prf 3388:3396 <> FF2B_B2FF
R3431:3433 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3416:3419 compcert.flocq.IEEE754.Binary <> FF2B def
R3430:3430 compcert.flocq.IEEE754.Binary <> H var
R3422:3425 compcert.flocq.IEEE754.Binary <> B2FF def
R3427:3427 compcert.flocq.IEEE754.Binary <> x var
R3434:3434 compcert.flocq.IEEE754.Binary <> x var
R3503:3509 Coq.Init.Logic <> f_equal thm
R3512:3529 compcert.flocq.Core.Zaux <> eqbool_irrelevance thm
R3503:3509 Coq.Init.Logic <> f_equal thm
R3512:3529 compcert.flocq.Core.Zaux <> eqbool_irrelevance thm
R3538:3544 Coq.Init.Logic <> f_equal thm
R3547:3564 compcert.flocq.Core.Zaux <> eqbool_irrelevance thm
R3538:3544 Coq.Init.Logic <> f_equal thm
R3547:3564 compcert.flocq.Core.Zaux <> eqbool_irrelevance thm
prf 3581:3595 <> FF2B_B2FF_valid
R3648:3650 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3613:3616 compcert.flocq.IEEE754.Binary <> FF2B def
R3628:3644 compcert.flocq.IEEE754.Binary <> valid_binary_B2FF thm
R3646:3646 compcert.flocq.IEEE754.Binary <> x var
R3619:3622 compcert.flocq.IEEE754.Binary <> B2FF def
R3624:3624 compcert.flocq.IEEE754.Binary <> x var
R3651:3651 compcert.flocq.IEEE754.Binary <> x var
R3677:3685 compcert.flocq.IEEE754.Binary <> FF2B_B2FF thm
R3677:3685 compcert.flocq.IEEE754.Binary <> FF2B_B2FF thm
prf 3702:3709 <> B2R_FF2B
R3745:3747 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3730:3732 compcert.flocq.IEEE754.Binary <> B2R def
R3735:3738 compcert.flocq.IEEE754.Binary <> FF2B def
R3742:3743 compcert.flocq.IEEE754.Binary <> Hx var
R3740:3740 compcert.flocq.IEEE754.Binary <> x var
R3748:3751 compcert.flocq.IEEE754.Binary <> FF2R def
R3760:3760 compcert.flocq.IEEE754.Binary <> x var
R3753:3758 compcert.flocq.Core.Zaux <> radix2 def
prf 3823:3832 <> match_FF2B
R4031:4035 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3875:3878 compcert.flocq.IEEE754.Binary <> FF2B def
R3882:3883 compcert.flocq.IEEE754.Binary <> Hx var
R3880:3880 compcert.flocq.IEEE754.Binary <> x var
R3892:3892 compcert.flocq.IEEE754.Binary <> T var
R3903:3911 compcert.flocq.IEEE754.Binary <> B754_zero constr
R3919:3920 compcert.flocq.IEEE754.Binary <> fz var
R3929:3941 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R3949:3950 compcert.flocq.IEEE754.Binary <> fi var
R3959:3966 compcert.flocq.IEEE754.Binary <> B754_nan constr
R3977:3978 compcert.flocq.IEEE754.Binary <> fn var
R3988:3998 compcert.flocq.IEEE754.Binary <> B754_finite constr
R4014:4015 compcert.flocq.IEEE754.Binary <> ff var
R4042:4042 compcert.flocq.IEEE754.Binary <> x var
R4053:4061 compcert.flocq.IEEE754.Binary <> F754_zero constr
R4069:4070 compcert.flocq.IEEE754.Binary <> fz var
R4079:4091 compcert.flocq.IEEE754.Binary <> F754_infinity constr
R4099:4100 compcert.flocq.IEEE754.Binary <> fi var
R4109:4116 compcert.flocq.IEEE754.Binary <> F754_nan constr
R4125:4126 compcert.flocq.IEEE754.Binary <> fn var
R4136:4146 compcert.flocq.IEEE754.Binary <> F754_finite constr
R4160:4161 compcert.flocq.IEEE754.Binary <> ff var
prf 4253:4280 <> canonical_canonical_mantissa
R4299:4302 Coq.Init.Datatypes <> bool ind
R4345:4350 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4351:4359 compcert.flocq.Core.Generic_fmt <> canonical def
R4374:4378 compcert.flocq.Core.Defs <> Float constr
R4412:4413 compcert.flocq.IEEE754.Binary <> ex var
R4388:4396 compcert.flocq.Core.Zaux <> cond_Zopp def
R4402:4405 Coq.Numbers.BinNums <> Zpos constr
R4407:4408 compcert.flocq.IEEE754.Binary <> mx var
R4398:4399 compcert.flocq.IEEE754.Binary <> sx var
R4380:4385 compcert.flocq.Core.Zaux <> radix2 def
R4368:4371 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R4361:4366 compcert.flocq.Core.Zaux <> radix2 def
R4338:4340 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4314:4331 compcert.flocq.IEEE754.Binary <> canonical_mantissa def
R4336:4337 compcert.flocq.IEEE754.Binary <> ex var
R4333:4334 compcert.flocq.IEEE754.Binary <> mx var
R4341:4344 Coq.Init.Datatypes <> true constr
R4457:4467 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R4457:4467 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R4492:4497 Coq.Init.Logic <> sym_eq syndef
R4492:4497 Coq.Init.Logic <> sym_eq syndef
R4547:4553 Coq.Init.Logic <> f_equal thm
R4555:4558 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R4547:4553 Coq.Init.Logic <> f_equal thm
R4555:4558 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R4570:4584 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R4570:4584 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R4570:4584 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R4570:4584 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R4598:4608 compcert.flocq.Core.Digits <> Zdigits_abs thm
R4598:4608 compcert.flocq.Core.Digits <> Zdigits_abs thm
R4598:4608 compcert.flocq.Core.Digits <> Zdigits_abs thm
R4619:4634 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R4619:4634 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R4619:4634 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
prf 4677:4694 <> generic_format_B2R
R4712:4725 compcert.flocq.Core.Generic_fmt <> generic_format def
R4740:4742 compcert.flocq.IEEE754.Binary <> B2R def
R4744:4744 compcert.flocq.IEEE754.Binary <> x var
R4734:4737 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R4727:4732 compcert.flocq.Core.Zaux <> radix2 def
R4805:4820 compcert.flocq.Core.Generic_fmt <> generic_format_0 thm
R4805:4820 compcert.flocq.Core.Generic_fmt <> generic_format_0 thm
R4805:4820 compcert.flocq.Core.Generic_fmt <> generic_format_0 thm
R4805:4820 compcert.flocq.Core.Generic_fmt <> generic_format_0 thm
R4805:4820 compcert.flocq.Core.Generic_fmt <> generic_format_0 thm
R4836:4859 compcert.flocq.Core.Generic_fmt <> generic_format_canonical thm
R4836:4859 compcert.flocq.Core.Generic_fmt <> generic_format_canonical thm
R4868:4895 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R4868:4895 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R4912:4920 Coq.Init.Datatypes <> andb_prop thm
R4912:4920 Coq.Init.Datatypes <> andb_prop thm
prf 4955:4968 <> FLT_format_B2R
R4986:4995 compcert.flocq.Core.FLT <> FLT_format ind
R5015:5017 compcert.flocq.IEEE754.Binary <> B2R def
R5019:5019 compcert.flocq.IEEE754.Binary <> x var
R5009:5012 compcert.flocq.IEEE754.Binary <> Binary.prec var
R5004:5007 compcert.flocq.IEEE754.Binary <> Binary.emin var
R4997:5002 compcert.flocq.Core.Zaux <> radix2 def
R5081:5098 compcert.flocq.Core.FLT <> FLT_format_generic thm
R5081:5098 compcert.flocq.Core.FLT <> FLT_format_generic thm
R5109:5126 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R5109:5126 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
prf 5143:5150 <> B2FF_inj
R5169:5180 compcert.flocq.IEEE754.Binary <> binary_float ind
R5200:5205 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5207:5209 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5206:5206 compcert.flocq.IEEE754.Binary <> x var
R5210:5210 compcert.flocq.IEEE754.Binary <> y var
R5191:5193 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5185:5188 compcert.flocq.IEEE754.Binary <> B2FF def
R5190:5190 compcert.flocq.IEEE754.Binary <> x var
R5194:5197 compcert.flocq.IEEE754.Binary <> B2FF def
R5199:5199 compcert.flocq.IEEE754.Binary <> y var
R5449:5455 Coq.Init.Logic <> f_equal thm
R5458:5475 compcert.flocq.Core.Zaux <> eqbool_irrelevance thm
R5449:5455 Coq.Init.Logic <> f_equal thm
R5458:5475 compcert.flocq.Core.Zaux <> eqbool_irrelevance thm
R5560:5566 Coq.Init.Logic <> f_equal thm
R5569:5586 compcert.flocq.Core.Zaux <> eqbool_irrelevance thm
R5560:5566 Coq.Init.Logic <> f_equal thm
R5569:5586 compcert.flocq.Core.Zaux <> eqbool_irrelevance thm
def 5606:5621 <> is_finite_strict
R5636:5636 compcert.flocq.IEEE754.Binary <> f var
R5647:5657 compcert.flocq.IEEE754.Binary <> B754_finite constr
R5670:5673 Coq.Init.Datatypes <> true constr
R5684:5688 Coq.Init.Datatypes <> false constr
prf 5706:5712 <> B2R_inj
R5730:5741 compcert.flocq.IEEE754.Binary <> binary_float ind
R5771:5776 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5802:5807 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5821:5826 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5828:5830 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5827:5827 compcert.flocq.IEEE754.Binary <> x var
R5831:5831 compcert.flocq.IEEE754.Binary <> y var
R5813:5815 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5808:5810 compcert.flocq.IEEE754.Binary <> B2R def
R5812:5812 compcert.flocq.IEEE754.Binary <> x var
R5816:5818 compcert.flocq.IEEE754.Binary <> B2R def
R5820:5820 compcert.flocq.IEEE754.Binary <> y var
R5795:5797 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5777:5792 compcert.flocq.IEEE754.Binary <> is_finite_strict def
R5794:5794 compcert.flocq.IEEE754.Binary <> y var
R5798:5801 Coq.Init.Datatypes <> true constr
R5764:5766 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5746:5761 compcert.flocq.IEEE754.Binary <> is_finite_strict def
R5763:5763 compcert.flocq.IEEE754.Binary <> x var
R5767:5770 Coq.Init.Datatypes <> true constr
R5941:5943 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5941:5943 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6026:6034 Coq.Init.Logic <> False_ind scheme
R6026:6034 Coq.Init.Logic <> False_ind scheme
R6026:6034 Coq.Init.Logic <> False_ind scheme
R6056:6065 Coq.Reals.RIneq <> Rlt_not_eq thm
R6056:6065 Coq.Reals.RIneq <> Rlt_not_eq thm
R6089:6090 Coq.Reals.Rdefinitions <> R0 defax
R6074:6082 Coq.Reals.Raxioms <> Rlt_trans prfax
R6089:6090 Coq.Reals.Rdefinitions <> R0 defax
R6074:6082 Coq.Reals.Raxioms <> Rlt_trans prfax
R6103:6110 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R6103:6110 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R6123:6130 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R6123:6130 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R6139:6148 Coq.Reals.RIneq <> Rgt_not_eq thm
R6139:6148 Coq.Reals.RIneq <> Rgt_not_eq thm
R6172:6173 Coq.Reals.Rdefinitions <> R0 defax
R6157:6165 Coq.Reals.RIneq <> Rgt_trans thm
R6172:6173 Coq.Reals.Rdefinitions <> R0 defax
R6157:6165 Coq.Reals.RIneq <> Rgt_trans thm
R6186:6193 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R6186:6193 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R6206:6213 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R6206:6213 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R6231:6234 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6226:6228 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6237:6239 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6231:6234 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6226:6228 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6237:6239 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6262:6277 compcert.flocq.Core.Generic_fmt <> canonical_unique thm
R6281:6284 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R6262:6277 compcert.flocq.Core.Generic_fmt <> canonical_unique thm
R6281:6284 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R6364:6391 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R6364:6391 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R6401:6405 Coq.Init.Logic <> proj1 thm
R6408:6416 Coq.Init.Datatypes <> andb_prop thm
R6401:6405 Coq.Init.Logic <> proj1 thm
R6408:6416 Coq.Init.Datatypes <> andb_prop thm
R6434:6461 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R6434:6461 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R6471:6475 Coq.Init.Logic <> proj1 thm
R6478:6486 Coq.Init.Datatypes <> andb_prop thm
R6471:6475 Coq.Init.Logic <> proj1 thm
R6478:6486 Coq.Init.Datatypes <> andb_prop thm
R6528:6532 Coq.Init.Logic <> proj1 thm
R6539:6543 Coq.Init.Logic <> proj2 thm
R6528:6532 Coq.Init.Logic <> proj1 thm
R6528:6532 Coq.Init.Logic <> proj1 thm
R6539:6543 Coq.Init.Logic <> proj2 thm
R6539:6543 Coq.Init.Logic <> proj2 thm
R6566:6572 Coq.Init.Logic <> f_equal thm
R6566:6572 Coq.Init.Logic <> f_equal thm
R6581:6598 compcert.flocq.Core.Zaux <> eqbool_irrelevance thm
R6581:6598 compcert.flocq.Core.Zaux <> eqbool_irrelevance thm
def 6618:6622 <> Bsign
R6637:6637 compcert.flocq.IEEE754.Binary <> x var
R6648:6655 compcert.flocq.IEEE754.Binary <> B754_nan constr
R6672:6680 compcert.flocq.IEEE754.Binary <> B754_zero constr
R6693:6705 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R6718:6728 compcert.flocq.IEEE754.Binary <> B754_finite constr
def 6762:6768 <> sign_FF
R6783:6783 compcert.flocq.IEEE754.Binary <> x var
R6794:6801 compcert.flocq.IEEE754.Binary <> F754_nan constr
R6816:6824 compcert.flocq.IEEE754.Binary <> F754_zero constr
R6837:6849 compcert.flocq.IEEE754.Binary <> F754_infinity constr
R6862:6872 compcert.flocq.IEEE754.Binary <> F754_finite constr
prf 6901:6910 <> Bsign_FF2B
R6946:6948 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6930:6934 compcert.flocq.IEEE754.Binary <> Bsign def
R6937:6940 compcert.flocq.IEEE754.Binary <> FF2B def
R6944:6944 compcert.flocq.IEEE754.Binary <> H var
R6942:6942 compcert.flocq.IEEE754.Binary <> x var
R6949:6955 compcert.flocq.IEEE754.Binary <> sign_FF def
R6957:6957 compcert.flocq.IEEE754.Binary <> x var
def 7022:7030 <> is_finite
R7045:7045 compcert.flocq.IEEE754.Binary <> f var
R7056:7066 compcert.flocq.IEEE754.Binary <> B754_finite constr
R7079:7082 Coq.Init.Datatypes <> true constr
R7088:7096 compcert.flocq.IEEE754.Binary <> B754_zero constr
R7103:7106 Coq.Init.Datatypes <> true constr
R7117:7121 Coq.Init.Datatypes <> false constr
def 7142:7153 <> is_finite_FF
R7168:7168 compcert.flocq.IEEE754.Binary <> f var
R7179:7189 compcert.flocq.IEEE754.Binary <> F754_finite constr
R7200:7203 Coq.Init.Datatypes <> true constr
R7209:7217 compcert.flocq.IEEE754.Binary <> F754_zero constr
R7224:7227 Coq.Init.Datatypes <> true constr
R7238:7242 Coq.Init.Datatypes <> false constr
prf 7260:7273 <> is_finite_FF2B
R7315:7317 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7294:7302 compcert.flocq.IEEE754.Binary <> is_finite def
R7305:7308 compcert.flocq.IEEE754.Binary <> FF2B def
R7312:7313 compcert.flocq.IEEE754.Binary <> Hx var
R7310:7310 compcert.flocq.IEEE754.Binary <> x var
R7318:7329 compcert.flocq.IEEE754.Binary <> is_finite_FF def
R7331:7331 compcert.flocq.IEEE754.Binary <> x var
prf 7375:7391 <> is_finite_FF_B2FF
R7430:7432 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7409:7420 compcert.flocq.IEEE754.Binary <> is_finite_FF def
R7423:7426 compcert.flocq.IEEE754.Binary <> B2FF def
R7428:7428 compcert.flocq.IEEE754.Binary <> x var
R7433:7441 compcert.flocq.IEEE754.Binary <> is_finite def
R7443:7443 compcert.flocq.IEEE754.Binary <> x var
prf 7490:7502 <> B2R_Bsign_inj
R7520:7531 compcert.flocq.IEEE754.Binary <> binary_float ind
R7556:7563 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7582:7589 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7603:7610 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7628:7635 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7637:7639 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7636:7636 compcert.flocq.IEEE754.Binary <> x var
R7640:7640 compcert.flocq.IEEE754.Binary <> y var
R7618:7620 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7611:7615 compcert.flocq.IEEE754.Binary <> Bsign def
R7617:7617 compcert.flocq.IEEE754.Binary <> x var
R7621:7625 compcert.flocq.IEEE754.Binary <> Bsign def
R7627:7627 compcert.flocq.IEEE754.Binary <> y var
R7595:7597 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7590:7592 compcert.flocq.IEEE754.Binary <> B2R def
R7594:7594 compcert.flocq.IEEE754.Binary <> x var
R7598:7600 compcert.flocq.IEEE754.Binary <> B2R def
R7602:7602 compcert.flocq.IEEE754.Binary <> y var
R7575:7577 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7564:7572 compcert.flocq.IEEE754.Binary <> is_finite def
R7574:7574 compcert.flocq.IEEE754.Binary <> y var
R7578:7581 Coq.Init.Datatypes <> true constr
R7549:7551 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7538:7546 compcert.flocq.IEEE754.Binary <> is_finite def
R7548:7548 compcert.flocq.IEEE754.Binary <> x var
R7552:7555 Coq.Init.Datatypes <> true constr
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7684:7690 compcert.flocq.IEEE754.Binary <> B2R_inj thm
R7756:7769 Coq.Reals.RIneq <> Rmult_integral thm
R7756:7769 Coq.Reals.RIneq <> Rmult_integral thm
R7800:7805 Coq.Reals.RIneq <> eq_IZR thm
R7800:7805 Coq.Reals.RIneq <> eq_IZR thm
R7876:7884 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R7886:7891 compcert.flocq.Core.Zaux <> radix2 def
R7876:7884 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R7886:7891 compcert.flocq.Core.Zaux <> radix2 def
R7923:7932 Coq.Reals.RIneq <> Rlt_irrefl thm
R7923:7932 Coq.Reals.RIneq <> Rlt_irrefl thm
R7962:7975 Coq.Reals.RIneq <> Rmult_integral thm
R7962:7975 Coq.Reals.RIneq <> Rmult_integral thm
R8006:8011 Coq.Reals.RIneq <> eq_IZR thm
R8006:8011 Coq.Reals.RIneq <> eq_IZR thm
R8081:8089 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R8091:8096 compcert.flocq.Core.Zaux <> radix2 def
R8081:8089 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R8091:8096 compcert.flocq.Core.Zaux <> radix2 def
R8128:8137 Coq.Reals.RIneq <> Rlt_irrefl thm
R8128:8137 Coq.Reals.RIneq <> Rlt_irrefl thm
def 8176:8181 <> is_nan
R8196:8196 compcert.flocq.IEEE754.Binary <> f var
R8207:8214 compcert.flocq.IEEE754.Binary <> B754_nan constr
R8225:8228 Coq.Init.Datatypes <> true constr
R8239:8243 Coq.Init.Datatypes <> false constr
def 8264:8272 <> is_nan_FF
R8287:8287 compcert.flocq.IEEE754.Binary <> f var
R8298:8305 compcert.flocq.IEEE754.Binary <> F754_nan constr
R8314:8317 Coq.Init.Datatypes <> true constr
R8328:8332 Coq.Init.Datatypes <> false constr
prf 8350:8360 <> is_nan_FF2B
R8399:8401 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8381:8386 compcert.flocq.IEEE754.Binary <> is_nan def
R8389:8392 compcert.flocq.IEEE754.Binary <> FF2B def
R8396:8397 compcert.flocq.IEEE754.Binary <> Hx var
R8394:8394 compcert.flocq.IEEE754.Binary <> x var
R8402:8410 compcert.flocq.IEEE754.Binary <> is_nan_FF def
R8412:8412 compcert.flocq.IEEE754.Binary <> x var
prf 8456:8469 <> is_nan_FF_B2FF
R8505:8507 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8487:8495 compcert.flocq.IEEE754.Binary <> is_nan_FF def
R8498:8501 compcert.flocq.IEEE754.Binary <> B2FF def
R8503:8503 compcert.flocq.IEEE754.Binary <> x var
R8508:8513 compcert.flocq.IEEE754.Binary <> is_nan def
R8515:8515 compcert.flocq.IEEE754.Binary <> x var
def 8565:8574 <> get_nan_pl
R8581:8592 compcert.flocq.IEEE754.Binary <> binary_float ind
R8597:8604 Coq.Numbers.BinNums <> positive ind
R8617:8617 compcert.flocq.IEEE754.Binary <> x var
R8624:8631 compcert.flocq.IEEE754.Binary <> B754_nan constr
R8653:8654 Coq.Numbers.BinNums <> xH constr
def 8673:8681 <> build_nan
R8688:8689 Coq.Init.Specif <> ::type_scope:'{'_x_'|'_x_'}' not
R8691:8693 Coq.Init.Specif <> ::type_scope:'{'_x_'|'_x_'}' not
R8709:8710 Coq.Init.Specif <> ::type_scope:'{'_x_'|'_x_'}' not
R8702:8704 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8694:8699 compcert.flocq.IEEE754.Binary <> is_nan def
R8701:8701 compcert.flocq.IEEE754.Binary <> x var
R8705:8708 Coq.Init.Datatypes <> true constr
R8715:8726 compcert.flocq.IEEE754.Binary <> binary_float ind
R8743:8750 compcert.flocq.IEEE754.Binary <> B754_nan constr
R8775:8784 compcert.flocq.IEEE754.Binary <> get_nan_pl def
R8787:8795 Coq.Init.Specif <> proj1_sig def
R8753:8757 compcert.flocq.IEEE754.Binary <> Bsign def
R8760:8768 Coq.Init.Specif <> proj1_sig def
R8743:8750 compcert.flocq.IEEE754.Binary <> B754_nan constr
R8775:8784 compcert.flocq.IEEE754.Binary <> get_nan_pl def
R8787:8795 Coq.Init.Specif <> proj1_sig def
R8753:8757 compcert.flocq.IEEE754.Binary <> Bsign def
R8760:8768 Coq.Init.Specif <> proj1_sig def
R8864:8867 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8876:8878 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8868:8873 compcert.flocq.IEEE754.Binary <> nan_pl def
R8879:8882 Coq.Init.Datatypes <> true constr
R8857:8859 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8852:8856 Coq.Init.Datatypes <> false constr
R8860:8863 Coq.Init.Datatypes <> true constr
R8902:8907 compcert.flocq.IEEE754.Binary <> nan_pl def
R8864:8867 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8876:8878 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8868:8873 compcert.flocq.IEEE754.Binary <> nan_pl def
R8879:8882 Coq.Init.Datatypes <> true constr
R8857:8859 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8852:8856 Coq.Init.Datatypes <> false constr
R8860:8863 Coq.Init.Datatypes <> true constr
R8902:8907 compcert.flocq.IEEE754.Binary <> nan_pl def
prf 8975:8991 <> build_nan_correct
R9008:9009 Coq.Init.Specif <> ::type_scope:'{'_x_'|'_x_'}' not
R9011:9013 Coq.Init.Specif <> ::type_scope:'{'_x_'|'_x_'}' not
R9029:9030 Coq.Init.Specif <> ::type_scope:'{'_x_'|'_x_'}' not
R9022:9024 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9014:9019 compcert.flocq.IEEE754.Binary <> is_nan def
R9021:9021 compcert.flocq.IEEE754.Binary <> x var
R9025:9028 Coq.Init.Datatypes <> true constr
R9046:9048 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9035:9043 compcert.flocq.IEEE754.Binary <> build_nan def
R9045:9045 compcert.flocq.IEEE754.Binary <> x var
R9049:9057 Coq.Init.Specif <> proj1_sig def
R9059:9059 compcert.flocq.IEEE754.Binary <> x var
prf 9113:9125 <> B2R_build_nan
R9158:9160 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9141:9143 compcert.flocq.IEEE754.Binary <> B2R def
R9146:9154 compcert.flocq.IEEE754.Binary <> build_nan def
R9156:9156 compcert.flocq.IEEE754.Binary <> x var
prf 9193:9211 <> is_finite_build_nan
R9250:9252 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9227:9235 compcert.flocq.IEEE754.Binary <> is_finite def
R9238:9246 compcert.flocq.IEEE754.Binary <> build_nan def
R9248:9248 compcert.flocq.IEEE754.Binary <> x var
R9253:9257 Coq.Init.Datatypes <> false constr
prf 9287:9302 <> is_nan_build_nan
R9338:9340 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9318:9323 compcert.flocq.IEEE754.Binary <> is_nan def
R9326:9334 compcert.flocq.IEEE754.Binary <> build_nan def
R9336:9336 compcert.flocq.IEEE754.Binary <> x var
R9341:9344 Coq.Init.Datatypes <> true constr
def 9377:9381 <> erase
R9388:9399 compcert.flocq.IEEE754.Binary <> binary_float ind
R9404:9415 compcert.flocq.IEEE754.Binary <> binary_float ind
R9470:9478 compcert.flocq.IEEE754.Binary <> B754_zero constr
R9470:9478 compcert.flocq.IEEE754.Binary <> B754_zero constr
R9493:9505 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R9493:9505 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R9520:9527 compcert.flocq.IEEE754.Binary <> B754_nan constr
R9520:9527 compcert.flocq.IEEE754.Binary <> B754_nan constr
R9547:9552 compcert.flocq.IEEE754.Binary <> nan_pl def
R9563:9569 Coq.Init.Logic <> eq_refl constr
R9563:9569 Coq.Init.Logic <> eq_refl constr
R9592:9602 compcert.flocq.IEEE754.Binary <> B754_finite constr
R9592:9602 compcert.flocq.IEEE754.Binary <> B754_finite constr
R9623:9629 compcert.flocq.IEEE754.Binary <> bounded def
R9640:9646 Coq.Init.Logic <> eq_refl constr
R9640:9646 Coq.Init.Logic <> eq_refl constr
prf 9678:9690 <> erase_correct
R9713:9715 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9706:9710 compcert.flocq.IEEE754.Binary <> erase def
R9712:9712 compcert.flocq.IEEE754.Binary <> x var
R9716:9716 compcert.flocq.IEEE754.Binary <> x var
R9789:9795 Coq.Init.Logic <> f_equal thm
R9798:9815 compcert.flocq.Core.Zaux <> eqbool_irrelevance thm
R9789:9795 Coq.Init.Logic <> f_equal thm
R9798:9815 compcert.flocq.Core.Zaux <> eqbool_irrelevance thm
R9826:9832 Coq.Init.Logic <> f_equal thm
R9835:9852 compcert.flocq.Core.Zaux <> eqbool_irrelevance thm
R9826:9832 Coq.Init.Logic <> f_equal thm
R9835:9852 compcert.flocq.Core.Zaux <> eqbool_irrelevance thm
def 9889:9892 <> Bopp
R9915:9915 compcert.flocq.IEEE754.Binary <> x var
R9926:9933 compcert.flocq.IEEE754.Binary <> B754_nan constr
R9944:9952 compcert.flocq.IEEE754.Binary <> build_nan def
R9955:9961 compcert.flocq.IEEE754.Binary <> opp_nan var
R9963:9963 compcert.flocq.IEEE754.Binary <> x var
R9970:9982 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R9990:10002 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R10005:10008 Coq.Init.Datatypes <> negb def
R10018:10028 compcert.flocq.IEEE754.Binary <> B754_finite constr
R10045:10055 compcert.flocq.IEEE754.Binary <> B754_finite constr
R10058:10061 Coq.Init.Datatypes <> negb def
R10080:10088 compcert.flocq.IEEE754.Binary <> B754_zero constr
R10096:10104 compcert.flocq.IEEE754.Binary <> B754_zero constr
R10107:10110 Coq.Init.Datatypes <> negb def
prf 10132:10146 <> Bopp_involutive
R10188:10193 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10223:10225 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10194:10197 compcert.flocq.IEEE754.Binary <> Bopp def
R10208:10211 compcert.flocq.IEEE754.Binary <> Bopp def
R10221:10221 compcert.flocq.IEEE754.Binary <> x var
R10213:10219 compcert.flocq.IEEE754.Binary <> opp_nan var
R10199:10205 compcert.flocq.IEEE754.Binary <> opp_nan var
R10226:10226 compcert.flocq.IEEE754.Binary <> x var
R10180:10182 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10172:10177 compcert.flocq.IEEE754.Binary <> is_nan def
R10179:10179 compcert.flocq.IEEE754.Binary <> x var
R10183:10187 Coq.Init.Datatypes <> false constr
R10304:10323 Coq.Bool.Bool <> negb_involutive thm
R10304:10323 Coq.Bool.Bool <> negb_involutive thm
R10304:10323 Coq.Bool.Bool <> negb_involutive thm
R10304:10323 Coq.Bool.Bool <> negb_involutive thm
R10304:10323 Coq.Bool.Bool <> negb_involutive thm
R10304:10323 Coq.Bool.Bool <> negb_involutive thm
R10304:10323 Coq.Bool.Bool <> negb_involutive thm
R10304:10323 Coq.Bool.Bool <> negb_involutive thm
prf 10340:10347 <> B2R_Bopp
R10393:10395 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10373:10375 compcert.flocq.IEEE754.Binary <> B2R def
R10378:10381 compcert.flocq.IEEE754.Binary <> Bopp def
R10391:10391 compcert.flocq.IEEE754.Binary <> x var
R10383:10389 compcert.flocq.IEEE754.Binary <> opp_nan var
R10397:10398 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R10399:10401 compcert.flocq.IEEE754.Binary <> B2R def
R10403:10403 compcert.flocq.IEEE754.Binary <> x var
R10470:10475 Coq.Init.Logic <> sym_eq syndef
R10489:10494 Coq.Reals.RIneq <> Ropp_0 thm
R10470:10475 Coq.Init.Logic <> sym_eq syndef
R10470:10475 Coq.Init.Logic <> sym_eq syndef
R10470:10475 Coq.Init.Logic <> sym_eq syndef
R10470:10475 Coq.Init.Logic <> sym_eq syndef
R10489:10494 Coq.Reals.RIneq <> Ropp_0 thm
R10489:10494 Coq.Reals.RIneq <> Ropp_0 thm
R10489:10494 Coq.Reals.RIneq <> Ropp_0 thm
R10489:10494 Coq.Reals.RIneq <> Ropp_0 thm
R10515:10521 compcert.flocq.Calc.Operations <> F2R_opp thm
R10515:10521 compcert.flocq.Calc.Operations <> F2R_opp thm
R10515:10521 compcert.flocq.Calc.Operations <> F2R_opp thm
prf 10551:10564 <> is_finite_Bopp
R10616:10618 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10590:10598 compcert.flocq.IEEE754.Binary <> is_finite def
R10601:10604 compcert.flocq.IEEE754.Binary <> Bopp def
R10614:10614 compcert.flocq.IEEE754.Binary <> x var
R10606:10612 compcert.flocq.IEEE754.Binary <> opp_nan var
R10619:10627 compcert.flocq.IEEE754.Binary <> is_finite def
R10629:10629 compcert.flocq.IEEE754.Binary <> x var
prf 10679:10688 <> Bsign_Bopp
R10728:10731 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10754:10756 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10732:10736 compcert.flocq.IEEE754.Binary <> Bsign def
R10739:10742 compcert.flocq.IEEE754.Binary <> Bopp def
R10752:10752 compcert.flocq.IEEE754.Binary <> x var
R10744:10750 compcert.flocq.IEEE754.Binary <> opp_nan var
R10757:10760 Coq.Init.Datatypes <> negb def
R10763:10767 compcert.flocq.IEEE754.Binary <> Bsign def
R10769:10769 compcert.flocq.IEEE754.Binary <> x var
R10720:10722 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10712:10717 compcert.flocq.IEEE754.Binary <> is_nan def
R10719:10719 compcert.flocq.IEEE754.Binary <> x var
R10723:10727 Coq.Init.Datatypes <> false constr
def 10861:10864 <> Babs
R10879:10890 compcert.flocq.IEEE754.Binary <> binary_float ind
R10895:10906 compcert.flocq.IEEE754.Binary <> binary_float ind
R10919:10919 compcert.flocq.IEEE754.Binary <> x var
R10930:10937 compcert.flocq.IEEE754.Binary <> B754_nan constr
R10948:10956 compcert.flocq.IEEE754.Binary <> build_nan def
R10959:10965 compcert.flocq.IEEE754.Binary <> abs_nan var
R10967:10967 compcert.flocq.IEEE754.Binary <> x var
R10974:10986 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R10994:11006 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R11008:11012 Coq.Init.Datatypes <> false constr
R11018:11028 compcert.flocq.IEEE754.Binary <> B754_finite constr
R11045:11055 compcert.flocq.IEEE754.Binary <> B754_finite constr
R11057:11061 Coq.Init.Datatypes <> false constr
R11076:11084 compcert.flocq.IEEE754.Binary <> B754_zero constr
R11092:11100 compcert.flocq.IEEE754.Binary <> B754_zero constr
R11102:11106 Coq.Init.Datatypes <> false constr
prf 11124:11131 <> B2R_Babs
R11177:11179 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11157:11159 compcert.flocq.IEEE754.Binary <> B2R def
R11162:11165 compcert.flocq.IEEE754.Binary <> Babs def
R11175:11175 compcert.flocq.IEEE754.Binary <> x var
R11167:11173 compcert.flocq.IEEE754.Binary <> abs_nan var
R11180:11183 Coq.Reals.Rbasic_fun <> Rabs def
R11186:11188 compcert.flocq.IEEE754.Binary <> B2R def
R11190:11190 compcert.flocq.IEEE754.Binary <> x var
R11255:11260 Coq.Init.Logic <> sym_eq syndef
R11274:11280 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R11255:11260 Coq.Init.Logic <> sym_eq syndef
R11255:11260 Coq.Init.Logic <> sym_eq syndef
R11255:11260 Coq.Init.Logic <> sym_eq syndef
R11255:11260 Coq.Init.Logic <> sym_eq syndef
R11274:11280 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R11274:11280 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R11274:11280 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R11274:11280 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R11303:11309 compcert.flocq.Calc.Operations <> F2R_abs thm
R11303:11309 compcert.flocq.Calc.Operations <> F2R_abs thm
R11303:11309 compcert.flocq.Calc.Operations <> F2R_abs thm
prf 11343:11356 <> is_finite_Babs
R11408:11410 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11382:11390 compcert.flocq.IEEE754.Binary <> is_finite def
R11393:11396 compcert.flocq.IEEE754.Binary <> Babs def
R11406:11406 compcert.flocq.IEEE754.Binary <> x var
R11398:11404 compcert.flocq.IEEE754.Binary <> abs_nan var
R11411:11419 compcert.flocq.IEEE754.Binary <> is_finite def
R11421:11421 compcert.flocq.IEEE754.Binary <> x var
prf 11475:11484 <> Bsign_Babs
R11526:11531 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11554:11556 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11532:11536 compcert.flocq.IEEE754.Binary <> Bsign def
R11539:11542 compcert.flocq.IEEE754.Binary <> Babs def
R11552:11552 compcert.flocq.IEEE754.Binary <> x var
R11544:11550 compcert.flocq.IEEE754.Binary <> abs_nan var
R11557:11561 Coq.Init.Datatypes <> false constr
R11518:11520 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11510:11515 compcert.flocq.IEEE754.Binary <> is_nan def
R11517:11517 compcert.flocq.IEEE754.Binary <> x var
R11521:11525 Coq.Init.Datatypes <> false constr
prf 11615:11629 <> Babs_idempotent
R11654:11665 compcert.flocq.IEEE754.Binary <> binary_float ind
R11687:11692 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11722:11724 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11693:11696 compcert.flocq.IEEE754.Binary <> Babs def
R11707:11710 compcert.flocq.IEEE754.Binary <> Babs def
R11720:11720 compcert.flocq.IEEE754.Binary <> x var
R11712:11718 compcert.flocq.IEEE754.Binary <> abs_nan var
R11698:11704 compcert.flocq.IEEE754.Binary <> abs_nan var
R11725:11728 compcert.flocq.IEEE754.Binary <> Babs def
R11738:11738 compcert.flocq.IEEE754.Binary <> x var
R11730:11736 compcert.flocq.IEEE754.Binary <> abs_nan var
R11679:11681 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11671:11676 compcert.flocq.IEEE754.Binary <> is_nan def
R11678:11678 compcert.flocq.IEEE754.Binary <> x var
R11682:11686 Coq.Init.Datatypes <> false constr
prf 11811:11819 <> Babs_Bopp
R11869:11874 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11904:11906 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11875:11878 compcert.flocq.IEEE754.Binary <> Babs def
R11889:11892 compcert.flocq.IEEE754.Binary <> Bopp def
R11902:11902 compcert.flocq.IEEE754.Binary <> x var
R11894:11900 compcert.flocq.IEEE754.Binary <> opp_nan var
R11880:11886 compcert.flocq.IEEE754.Binary <> abs_nan var
R11907:11910 compcert.flocq.IEEE754.Binary <> Babs def
R11920:11920 compcert.flocq.IEEE754.Binary <> x var
R11912:11918 compcert.flocq.IEEE754.Binary <> abs_nan var
R11861:11863 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11853:11858 compcert.flocq.IEEE754.Binary <> is_nan def
R11860:11860 compcert.flocq.IEEE754.Binary <> x var
R11864:11868 Coq.Init.Datatypes <> false constr
def 12064:12071 <> Bcompare
R12082:12093 compcert.flocq.IEEE754.Binary <> binary_float ind
R12098:12103 Coq.Init.Datatypes <> option ind
R12105:12114 Coq.Init.Datatypes <> comparison ind
R12131:12132 compcert.flocq.IEEE754.Binary <> f2 var
R12127:12128 compcert.flocq.IEEE754.Binary <> f1 var
R12143:12150 compcert.flocq.IEEE754.Binary <> B754_nan constr
R12164:12171 compcert.flocq.IEEE754.Binary <> B754_nan constr
R12182:12185 Coq.Init.Datatypes <> None constr
R12182:12185 Coq.Init.Datatypes <> None constr
R12191:12203 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R12209:12221 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R12233:12236 Coq.Init.Datatypes <> Some constr
R12262:12265 Coq.Init.Datatypes <> true constr
R12268:12271 Coq.Init.Datatypes <> true constr
R12276:12277 Coq.Init.Datatypes <> Eq constr
R12285:12289 Coq.Init.Datatypes <> false constr
R12292:12296 Coq.Init.Datatypes <> false constr
R12301:12302 Coq.Init.Datatypes <> Eq constr
R12310:12313 Coq.Init.Datatypes <> true constr
R12316:12320 Coq.Init.Datatypes <> false constr
R12325:12326 Coq.Init.Datatypes <> Lt constr
R12334:12338 Coq.Init.Datatypes <> false constr
R12341:12344 Coq.Init.Datatypes <> true constr
R12349:12350 Coq.Init.Datatypes <> Gt constr
R12364:12376 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R12386:12389 Coq.Init.Datatypes <> Some constr
R12410:12411 Coq.Init.Datatypes <> Gt constr
R12402:12403 Coq.Init.Datatypes <> Lt constr
R12421:12433 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R12440:12443 Coq.Init.Datatypes <> Some constr
R12464:12465 Coq.Init.Datatypes <> Lt constr
R12456:12457 Coq.Init.Datatypes <> Gt constr
R12472:12482 compcert.flocq.IEEE754.Binary <> B754_finite constr
R12493:12501 compcert.flocq.IEEE754.Binary <> B754_zero constr
R12508:12511 Coq.Init.Datatypes <> Some constr
R12532:12533 Coq.Init.Datatypes <> Gt constr
R12524:12525 Coq.Init.Datatypes <> Lt constr
R12540:12548 compcert.flocq.IEEE754.Binary <> B754_zero constr
R12553:12563 compcert.flocq.IEEE754.Binary <> B754_finite constr
R12576:12579 Coq.Init.Datatypes <> Some constr
R12600:12601 Coq.Init.Datatypes <> Lt constr
R12592:12593 Coq.Init.Datatypes <> Gt constr
R12608:12616 compcert.flocq.IEEE754.Binary <> B754_zero constr
R12621:12629 compcert.flocq.IEEE754.Binary <> B754_zero constr
R12636:12639 Coq.Init.Datatypes <> Some constr
R12641:12642 Coq.Init.Datatypes <> Eq constr
R12648:12658 compcert.flocq.IEEE754.Binary <> B754_finite constr
R12672:12682 compcert.flocq.IEEE754.Binary <> B754_finite constr
R12702:12705 Coq.Init.Datatypes <> Some constr
R12731:12734 Coq.Init.Datatypes <> true constr
R12737:12741 Coq.Init.Datatypes <> false constr
R12746:12747 Coq.Init.Datatypes <> Lt constr
R12755:12759 Coq.Init.Datatypes <> false constr
R12762:12765 Coq.Init.Datatypes <> true constr
R12770:12771 Coq.Init.Datatypes <> Gt constr
R12779:12783 Coq.Init.Datatypes <> false constr
R12786:12790 Coq.Init.Datatypes <> false constr
R12807:12815 Coq.ZArith.BinInt Z compare def
R12836:12837 Coq.Init.Datatypes <> Lt constr
R12842:12843 Coq.Init.Datatypes <> Lt constr
R12853:12854 Coq.Init.Datatypes <> Gt constr
R12859:12860 Coq.Init.Datatypes <> Gt constr
R12870:12871 Coq.Init.Datatypes <> Eq constr
R12876:12883 Coq.PArith.BinPos <> Pcompare syndef
R12891:12892 Coq.Init.Datatypes <> Eq constr
R12910:12913 Coq.Init.Datatypes <> true constr
R12916:12919 Coq.Init.Datatypes <> true constr
R12936:12944 Coq.ZArith.BinInt Z compare def
R12965:12966 Coq.Init.Datatypes <> Lt constr
R12971:12972 Coq.Init.Datatypes <> Gt constr
R12982:12983 Coq.Init.Datatypes <> Gt constr
R12988:12989 Coq.Init.Datatypes <> Lt constr
R12999:13000 Coq.Init.Datatypes <> Eq constr
R13005:13011 Coq.Init.Datatypes <> CompOpp def
R13014:13021 Coq.PArith.BinPos <> Pcompare syndef
R13029:13030 Coq.Init.Datatypes <> Eq constr
prf 13067:13082 <> Bcompare_correct
R13123:13126 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13146:13151 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13166:13168 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13152:13159 compcert.flocq.IEEE754.Binary <> Bcompare def
R13164:13165 compcert.flocq.IEEE754.Binary <> f2 var
R13161:13162 compcert.flocq.IEEE754.Binary <> f1 var
R13169:13172 Coq.Init.Datatypes <> Some constr
R13175:13182 compcert.flocq.Core.Raux <> Rcompare def
R13194:13196 compcert.flocq.IEEE754.Binary <> B2R def
R13198:13199 compcert.flocq.IEEE754.Binary <> f2 var
R13185:13187 compcert.flocq.IEEE754.Binary <> B2R def
R13189:13190 compcert.flocq.IEEE754.Binary <> f1 var
R13139:13141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13127:13135 compcert.flocq.IEEE754.Binary <> is_finite def
R13137:13138 compcert.flocq.IEEE754.Binary <> f2 var
R13142:13145 Coq.Init.Datatypes <> true constr
R13116:13118 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13104:13112 compcert.flocq.IEEE754.Binary <> is_finite def
R13114:13115 compcert.flocq.IEEE754.Binary <> f1 var
R13119:13122 Coq.Init.Datatypes <> true constr
R13271:13273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13269:13270 Coq.Init.Datatypes <> Lt constr
R13274:13281 compcert.flocq.Core.Raux <> Rcompare def
R13271:13273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13269:13270 Coq.Init.Datatypes <> Lt constr
R13274:13281 compcert.flocq.Core.Raux <> Rcompare def
R13335:13337 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13333:13334 Coq.Init.Datatypes <> Eq constr
R13338:13345 compcert.flocq.Core.Raux <> Rcompare def
R13335:13337 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13333:13334 Coq.Init.Datatypes <> Eq constr
R13338:13345 compcert.flocq.Core.Raux <> Rcompare def
R13399:13401 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13397:13398 Coq.Init.Datatypes <> Gt constr
R13402:13409 compcert.flocq.Core.Raux <> Rcompare def
R13399:13401 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13397:13398 Coq.Init.Datatypes <> Gt constr
R13402:13409 compcert.flocq.Core.Raux <> Rcompare def
R13436:13446 compcert.flocq.Core.Raux <> Rcompare_Gt thm
R13372:13382 compcert.flocq.Core.Raux <> Rcompare_Eq thm
R13308:13318 compcert.flocq.Core.Raux <> Rcompare_Lt thm
R13466:13473 compcert.flocq.IEEE754.Binary <> Bcompare def
R13531:13537 Coq.Init.Logic <> f_equal thm
R13531:13537 Coq.Init.Logic <> f_equal thm
R13531:13537 Coq.Init.Logic <> f_equal thm
R13531:13537 Coq.Init.Logic <> f_equal thm
R13531:13537 Coq.Init.Logic <> f_equal thm
R13567:13577 compcert.flocq.Core.Raux <> Rcompare_Eq thm
R13567:13577 compcert.flocq.Core.Raux <> Rcompare_Eq thm
R13567:13577 compcert.flocq.Core.Raux <> Rcompare_Eq thm
R13567:13577 compcert.flocq.Core.Raux <> Rcompare_Eq thm
R13624:13631 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R13624:13631 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R13646:13653 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R13646:13653 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R13699:13706 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R13699:13706 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R13721:13728 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R13721:13728 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R13748:13756 Coq.Init.Datatypes <> andb_prop thm
R13785:13812 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R13814:13818 Coq.Init.Datatypes <> false constr
R13748:13756 Coq.Init.Datatypes <> andb_prop thm
R13785:13812 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R13814:13818 Coq.Init.Datatypes <> false constr
R13835:13843 Coq.Init.Datatypes <> andb_prop thm
R13872:13899 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R13901:13905 Coq.Init.Datatypes <> false constr
R13835:13843 Coq.Init.Datatypes <> andb_prop thm
R13872:13899 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R13901:13905 Coq.Init.Datatypes <> false constr
R13929:13941 compcert.flocq.Core.Zaux <> Zcompare_spec thm
R13957:13965 compcert.flocq.Core.Generic_fmt <> canonical def
R13968:13971 compcert.flocq.Core.Defs <> Fexp proj
R13929:13941 compcert.flocq.Core.Zaux <> Zcompare_spec thm
R14040:14042 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R14027:14029 Coq.Reals.Rdefinitions <> IZR def
R14032:14035 Coq.Numbers.BinNums <> Zpos constr
R14037:14038 compcert.flocq.IEEE754.Binary <> m1 var
R14043:14046 compcert.flocq.Core.Raux <> bpow def
R14055:14056 compcert.flocq.IEEE754.Binary <> e1 var
R14048:14053 compcert.flocq.Core.Zaux <> radix2 def
R14091:14093 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R14078:14080 Coq.Reals.Rdefinitions <> IZR def
R14083:14086 Coq.Numbers.BinNums <> Zpos constr
R14088:14089 compcert.flocq.IEEE754.Binary <> m2 var
R14094:14097 compcert.flocq.Core.Raux <> bpow def
R14106:14107 compcert.flocq.IEEE754.Binary <> e2 var
R14099:14104 compcert.flocq.Core.Zaux <> radix2 def
R14162:14165 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14168:14170 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x not
R14167:14167 compcert.flocq.IEEE754.Binary <> x var
R14171:14171 compcert.flocq.IEEE754.Binary <> y var
R14138:14140 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R14120:14123 compcert.flocq.Core.Generic_fmt <> cexp def
R14137:14137 compcert.flocq.IEEE754.Binary <> x var
R14132:14135 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R14125:14130 compcert.flocq.Core.Zaux <> radix2 def
R14141:14144 compcert.flocq.Core.Generic_fmt <> cexp def
R14158:14158 compcert.flocq.IEEE754.Binary <> y var
R14153:14156 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R14146:14151 compcert.flocq.Core.Zaux <> radix2 def
R14040:14042 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R14027:14029 Coq.Reals.Rdefinitions <> IZR def
R14032:14035 Coq.Numbers.BinNums <> Zpos constr
R14037:14038 compcert.flocq.IEEE754.Binary <> m1 var
R14043:14046 compcert.flocq.Core.Raux <> bpow def
R14055:14056 compcert.flocq.IEEE754.Binary <> e1 var
R14048:14053 compcert.flocq.Core.Zaux <> radix2 def
R14091:14093 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R14078:14080 Coq.Reals.Rdefinitions <> IZR def
R14083:14086 Coq.Numbers.BinNums <> Zpos constr
R14088:14089 compcert.flocq.IEEE754.Binary <> m2 var
R14094:14097 compcert.flocq.Core.Raux <> bpow def
R14106:14107 compcert.flocq.IEEE754.Binary <> e2 var
R14099:14104 compcert.flocq.Core.Zaux <> radix2 def
R14162:14165 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14168:14170 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x not
R14167:14167 compcert.flocq.IEEE754.Binary <> x var
R14171:14171 compcert.flocq.IEEE754.Binary <> y var
R14138:14140 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R14120:14123 compcert.flocq.Core.Generic_fmt <> cexp def
R14137:14137 compcert.flocq.IEEE754.Binary <> x var
R14132:14135 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R14125:14130 compcert.flocq.Core.Zaux <> radix2 def
R14141:14144 compcert.flocq.Core.Generic_fmt <> cexp def
R14158:14158 compcert.flocq.IEEE754.Binary <> y var
R14153:14156 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R14146:14151 compcert.flocq.Core.Zaux <> radix2 def
R14198:14207 Coq.Reals.RIneq <> Rnot_le_lt thm
R14224:14229 compcert.flocq.Core.Raux <> mag_le thm
R14231:14236 compcert.flocq.Core.Zaux <> radix2 def
R14198:14207 Coq.Reals.RIneq <> Rnot_le_lt thm
R14224:14229 compcert.flocq.Core.Raux <> mag_le thm
R14231:14236 compcert.flocq.Core.Zaux <> radix2 def
R14254:14263 Coq.ZArith.Zorder <> Zlt_not_le thm
R14254:14263 Coq.ZArith.Zorder <> Zlt_not_le thm
R14293:14305 compcert.flocq.IEEE754.Binary <> fexp_monotone inst
R14293:14305 compcert.flocq.IEEE754.Binary <> fexp_monotone inst
R14321:14328 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R14333:14337 compcert.flocq.Core.Defs <> Float constr
R14347:14350 Coq.Numbers.BinNums <> Zpos constr
R14339:14344 compcert.flocq.Core.Zaux <> radix2 def
R14321:14328 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R14333:14337 compcert.flocq.Core.Defs <> Float constr
R14347:14350 Coq.Numbers.BinNums <> Zpos constr
R14339:14344 compcert.flocq.Core.Zaux <> radix2 def
R14429:14431 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x not
R14412:14414 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R14397:14399 Coq.Reals.Rdefinitions <> IZR def
R14402:14403 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R14404:14407 Coq.Numbers.BinNums <> Zpos constr
R14409:14410 compcert.flocq.IEEE754.Binary <> m1 var
R14415:14418 compcert.flocq.Core.Raux <> bpow def
R14427:14428 compcert.flocq.IEEE754.Binary <> e1 var
R14420:14425 compcert.flocq.Core.Zaux <> radix2 def
R14445:14447 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R14432:14434 Coq.Reals.Rdefinitions <> IZR def
R14437:14440 Coq.Numbers.BinNums <> Zpos constr
R14442:14443 compcert.flocq.IEEE754.Binary <> m2 var
R14448:14451 compcert.flocq.Core.Raux <> bpow def
R14460:14461 compcert.flocq.IEEE754.Binary <> e2 var
R14453:14458 compcert.flocq.Core.Zaux <> radix2 def
R14429:14431 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x not
R14412:14414 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R14397:14399 Coq.Reals.Rdefinitions <> IZR def
R14402:14403 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R14404:14407 Coq.Numbers.BinNums <> Zpos constr
R14409:14410 compcert.flocq.IEEE754.Binary <> m1 var
R14415:14418 compcert.flocq.Core.Raux <> bpow def
R14427:14428 compcert.flocq.IEEE754.Binary <> e1 var
R14420:14425 compcert.flocq.Core.Zaux <> radix2 def
R14445:14447 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R14432:14434 Coq.Reals.Rdefinitions <> IZR def
R14437:14440 Coq.Numbers.BinNums <> Zpos constr
R14442:14443 compcert.flocq.IEEE754.Binary <> m2 var
R14448:14451 compcert.flocq.Core.Raux <> bpow def
R14460:14461 compcert.flocq.IEEE754.Binary <> e2 var
R14453:14458 compcert.flocq.Core.Zaux <> radix2 def
R14489:14497 Coq.Reals.Raxioms <> Rlt_trans prfax
R14489:14497 Coq.Reals.Raxioms <> Rlt_trans prfax
R14520:14527 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R14532:14536 compcert.flocq.Core.Defs <> Float constr
R14546:14549 Coq.Numbers.BinNums <> Zneg constr
R14538:14543 compcert.flocq.Core.Zaux <> radix2 def
R14520:14527 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R14532:14536 compcert.flocq.Core.Defs <> Float constr
R14546:14549 Coq.Numbers.BinNums <> Zneg constr
R14538:14543 compcert.flocq.Core.Zaux <> radix2 def
R14574:14581 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R14586:14590 compcert.flocq.Core.Defs <> Float constr
R14600:14603 Coq.Numbers.BinNums <> Zpos constr
R14592:14597 compcert.flocq.Core.Zaux <> radix2 def
R14574:14581 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R14586:14590 compcert.flocq.Core.Defs <> Float constr
R14600:14603 Coq.Numbers.BinNums <> Zpos constr
R14592:14597 compcert.flocq.Core.Zaux <> radix2 def
R14628:14630 compcert.flocq.Core.Defs <> F2R def
R14633:14636 compcert.flocq.Core.Defs <> Fnum proj
R14639:14642 compcert.flocq.Core.Defs <> Fexp proj
R14820:14826 Coq.Reals.RIneq <> opp_IZR thm
R14829:14853 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R14868:14884 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R14987:14995 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R14947:14961 compcert.flocq.Core.Raux <> Rcompare_mult_r thm
R14964:14975 compcert.flocq.Core.Raux <> Rcompare_IZR thm
R14820:14826 Coq.Reals.RIneq <> opp_IZR thm
R14820:14826 Coq.Reals.RIneq <> opp_IZR thm
R14829:14853 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R14829:14853 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R14820:14826 Coq.Reals.RIneq <> opp_IZR thm
R14820:14826 Coq.Reals.RIneq <> opp_IZR thm
R14829:14853 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R14829:14853 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R14868:14884 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R14820:14826 Coq.Reals.RIneq <> opp_IZR thm
R14820:14826 Coq.Reals.RIneq <> opp_IZR thm
R14829:14853 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R14829:14853 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R14820:14826 Coq.Reals.RIneq <> opp_IZR thm
R14820:14826 Coq.Reals.RIneq <> opp_IZR thm
R14829:14853 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R14829:14853 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R14868:14884 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R14947:14961 compcert.flocq.Core.Raux <> Rcompare_mult_r thm
R14987:14995 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R14947:14961 compcert.flocq.Core.Raux <> Rcompare_mult_r thm
R14964:14975 compcert.flocq.Core.Raux <> Rcompare_IZR thm
R14964:14975 compcert.flocq.Core.Raux <> Rcompare_IZR thm
R14947:14961 compcert.flocq.Core.Raux <> Rcompare_mult_r thm
R14987:14995 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R14947:14961 compcert.flocq.Core.Raux <> Rcompare_mult_r thm
R14964:14975 compcert.flocq.Core.Raux <> Rcompare_IZR thm
R14964:14975 compcert.flocq.Core.Raux <> Rcompare_IZR thm
R13271:13273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13269:13270 Coq.Init.Datatypes <> Lt constr
R13274:13281 compcert.flocq.Core.Raux <> Rcompare def
R13271:13273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13269:13270 Coq.Init.Datatypes <> Lt constr
R13274:13281 compcert.flocq.Core.Raux <> Rcompare def
R13335:13337 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13333:13334 Coq.Init.Datatypes <> Eq constr
R13338:13345 compcert.flocq.Core.Raux <> Rcompare def
R13335:13337 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13333:13334 Coq.Init.Datatypes <> Eq constr
R13338:13345 compcert.flocq.Core.Raux <> Rcompare def
R13399:13401 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13397:13398 Coq.Init.Datatypes <> Gt constr
R13402:13409 compcert.flocq.Core.Raux <> Rcompare def
R13399:13401 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13397:13398 Coq.Init.Datatypes <> Gt constr
R13402:13409 compcert.flocq.Core.Raux <> Rcompare def
R13436:13446 compcert.flocq.Core.Raux <> Rcompare_Gt thm
R13372:13382 compcert.flocq.Core.Raux <> Rcompare_Eq thm
R13308:13318 compcert.flocq.Core.Raux <> Rcompare_Lt thm
prf 15026:15038 <> Bcompare_swap
R15070:15072 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15058:15065 compcert.flocq.IEEE754.Binary <> Bcompare def
R15069:15069 compcert.flocq.IEEE754.Binary <> x var
R15067:15067 compcert.flocq.IEEE754.Binary <> y var
R15079:15086 compcert.flocq.IEEE754.Binary <> Bcompare def
R15090:15090 compcert.flocq.IEEE754.Binary <> y var
R15088:15088 compcert.flocq.IEEE754.Binary <> x var
R15097:15100 Coq.Init.Datatypes <> Some constr
R15107:15110 Coq.Init.Datatypes <> Some constr
R15113:15119 Coq.Init.Datatypes <> CompOpp def
R15126:15129 Coq.Init.Datatypes <> None constr
R15134:15137 Coq.Init.Datatypes <> None constr
R15288:15303 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R15288:15303 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R15288:15303 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R15325:15328 Coq.ZArith.BinInt <> ::Z_scope:x_'?='_x not
R15325:15328 Coq.ZArith.BinInt <> ::Z_scope:x_'?='_x not
R15361:15376 Coq.PArith.BinPos <> Pcompare_antisym syndef
R15361:15376 Coq.PArith.BinPos <> Pcompare_antisym syndef
R15361:15376 Coq.PArith.BinPos <> Pcompare_antisym syndef
R15400:15415 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R15400:15415 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R15400:15415 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R15437:15440 Coq.ZArith.BinInt <> ::Z_scope:x_'?='_x not
R15437:15440 Coq.ZArith.BinInt <> ::Z_scope:x_'?='_x not
R15472:15487 Coq.PArith.BinPos <> Pcompare_antisym syndef
R15472:15487 Coq.PArith.BinPos <> Pcompare_antisym syndef
R15472:15487 Coq.PArith.BinPos <> Pcompare_antisym syndef
prf 15504:15518 <> bounded_lt_emax
R15560:15565 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15598:15600 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x not
R15567:15569 compcert.flocq.Core.Defs <> F2R def
R15572:15576 compcert.flocq.Core.Defs <> Float constr
R15595:15596 compcert.flocq.IEEE754.Binary <> ex var
R15586:15589 Coq.Numbers.BinNums <> Zpos constr
R15591:15592 compcert.flocq.IEEE754.Binary <> mx var
R15578:15583 compcert.flocq.Core.Zaux <> radix2 def
R15601:15604 compcert.flocq.Core.Raux <> bpow def
R15613:15616 compcert.flocq.IEEE754.Binary <> Binary.emax var
R15606:15611 compcert.flocq.Core.Zaux <> radix2 def
R15553:15555 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15540:15546 compcert.flocq.IEEE754.Binary <> bounded def
R15551:15552 compcert.flocq.IEEE754.Binary <> ex var
R15548:15549 compcert.flocq.IEEE754.Binary <> mx var
R15556:15559 Coq.Init.Datatypes <> true constr
R15656:15664 Coq.Init.Datatypes <> andb_prop thm
R15656:15664 Coq.Init.Datatypes <> andb_prop thm
R15698:15708 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R15698:15708 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R15751:15765 Coq.ZArith.Zbool <> Zle_bool_imp_le thm
R15751:15765 Coq.ZArith.Zbool <> Zle_bool_imp_le thm
R15808:15822 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R15832:15835 Coq.Numbers.BinNums <> Zpos constr
R15824:15829 compcert.flocq.Core.Zaux <> radix2 def
R15808:15822 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R15832:15835 Coq.Numbers.BinNums <> Zpos constr
R15824:15829 compcert.flocq.Core.Zaux <> radix2 def
R15856:15858 compcert.flocq.Core.Raux <> mag def
R15868:15870 compcert.flocq.Core.Defs <> F2R def
R15873:15877 compcert.flocq.Core.Defs <> Float constr
R15887:15890 Coq.Numbers.BinNums <> Zpos constr
R15879:15884 compcert.flocq.Core.Zaux <> radix2 def
R15860:15865 compcert.flocq.Core.Zaux <> radix2 def
R15856:15858 compcert.flocq.Core.Raux <> mag def
R15868:15870 compcert.flocq.Core.Defs <> F2R def
R15873:15877 compcert.flocq.Core.Defs <> Float constr
R15887:15890 Coq.Numbers.BinNums <> Zpos constr
R15879:15884 compcert.flocq.Core.Zaux <> radix2 def
R15860:15865 compcert.flocq.Core.Zaux <> radix2 def
R15921:15927 compcert.flocq.Core.Raux <> mag_val proj
R15965:15968 compcert.flocq.Core.Raux <> bpow def
R15970:15975 compcert.flocq.Core.Zaux <> radix2 def
R15946:15957 Coq.Reals.RIneq <> Rlt_le_trans thm
R15965:15968 compcert.flocq.Core.Raux <> bpow def
R15970:15975 compcert.flocq.Core.Zaux <> radix2 def
R15946:15957 Coq.Reals.RIneq <> Rlt_le_trans thm
R15990:15993 Coq.Numbers.BinNums <> Zpos constr
R16005:16009 Coq.ZArith.BinInt Z abs def
R16012:16015 Coq.Numbers.BinNums <> Zpos constr
R15990:15993 Coq.Numbers.BinNums <> Zpos constr
R16005:16009 Coq.ZArith.BinInt Z abs def
R16012:16015 Coq.Numbers.BinNums <> Zpos constr
R16031:16038 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R16031:16038 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R16031:16038 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R16057:16066 Coq.Reals.RIneq <> Rgt_not_eq thm
R16057:16066 Coq.Reals.RIneq <> Rgt_not_eq thm
R16079:16086 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R16079:16086 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R16095:16101 compcert.flocq.Core.Raux <> bpow_le thm
R16095:16101 compcert.flocq.Core.Raux <> bpow_le thm
R16162:16177 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R16162:16177 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R16162:16177 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R16187:16190 compcert.flocq.IEEE754.Binary <> fexp vardef
R16193:16199 compcert.flocq.Core.FLT <> FLT_exp def
prf 16239:16253 <> bounded_ge_emin
R16295:16300 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16318:16321 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R16302:16305 compcert.flocq.Core.Raux <> bpow def
R16314:16317 compcert.flocq.IEEE754.Binary <> Binary.emin var
R16307:16312 compcert.flocq.Core.Zaux <> radix2 def
R16322:16324 compcert.flocq.Core.Defs <> F2R def
R16327:16331 compcert.flocq.Core.Defs <> Float constr
R16350:16351 compcert.flocq.IEEE754.Binary <> ex var
R16341:16344 Coq.Numbers.BinNums <> Zpos constr
R16346:16347 compcert.flocq.IEEE754.Binary <> mx var
R16333:16338 compcert.flocq.Core.Zaux <> radix2 def
R16288:16290 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16275:16281 compcert.flocq.IEEE754.Binary <> bounded def
R16286:16287 compcert.flocq.IEEE754.Binary <> ex var
R16283:16284 compcert.flocq.IEEE754.Binary <> mx var
R16291:16294 Coq.Init.Datatypes <> true constr
R16392:16400 Coq.Init.Datatypes <> andb_prop thm
R16392:16400 Coq.Init.Datatypes <> andb_prop thm
R16427:16437 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R16427:16437 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R16458:16472 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R16482:16485 Coq.Numbers.BinNums <> Zpos constr
R16474:16479 compcert.flocq.Core.Zaux <> radix2 def
R16458:16472 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R16482:16485 Coq.Numbers.BinNums <> Zpos constr
R16474:16479 compcert.flocq.Core.Zaux <> radix2 def
R16506:16508 compcert.flocq.Core.Raux <> mag def
R16518:16520 compcert.flocq.Core.Defs <> F2R def
R16523:16527 compcert.flocq.Core.Defs <> Float constr
R16537:16540 Coq.Numbers.BinNums <> Zpos constr
R16529:16534 compcert.flocq.Core.Zaux <> radix2 def
R16510:16515 compcert.flocq.Core.Zaux <> radix2 def
R16506:16508 compcert.flocq.Core.Raux <> mag def
R16518:16520 compcert.flocq.Core.Defs <> F2R def
R16523:16527 compcert.flocq.Core.Defs <> Float constr
R16537:16540 Coq.Numbers.BinNums <> Zpos constr
R16529:16534 compcert.flocq.Core.Zaux <> radix2 def
R16510:16515 compcert.flocq.Core.Zaux <> radix2 def
R16571:16577 compcert.flocq.Core.Raux <> mag_val proj
R16610:16613 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R16603:16606 Coq.Numbers.BinNums <> Zpos constr
R16610:16613 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R16603:16606 Coq.Numbers.BinNums <> Zpos constr
R16667:16674 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R16636:16646 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R16636:16646 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R16667:16674 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R16636:16646 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R16685:16693 Coq.Reals.RIneq <> Rle_trans thm
R16704:16708 Coq.Init.Logic <> proj1 thm
R16685:16693 Coq.Reals.RIneq <> Rle_trans thm
R16704:16708 Coq.Init.Logic <> proj1 thm
R16733:16741 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
R16733:16741 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
R16750:16756 compcert.flocq.Core.Raux <> bpow_le thm
R16750:16756 compcert.flocq.Core.Raux <> bpow_le thm
R16797:16812 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R16797:16812 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R16797:16812 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R16827:16833 compcert.flocq.Core.Digits <> Zdigits def
R16843:16846 Coq.Numbers.BinNums <> Zpos constr
R16835:16840 compcert.flocq.Core.Zaux <> radix2 def
R16854:16865 compcert.flocq.Core.Digits <> Zdigits_gt_0 thm
R16875:16878 Coq.Numbers.BinNums <> Zpos constr
R16867:16872 compcert.flocq.Core.Zaux <> radix2 def
R16827:16833 compcert.flocq.Core.Digits <> Zdigits def
R16843:16846 Coq.Numbers.BinNums <> Zpos constr
R16835:16840 compcert.flocq.Core.Zaux <> radix2 def
R16854:16865 compcert.flocq.Core.Digits <> Zdigits_gt_0 thm
R16875:16878 Coq.Numbers.BinNums <> Zpos constr
R16867:16872 compcert.flocq.Core.Zaux <> radix2 def
R16896:16899 compcert.flocq.IEEE754.Binary <> fexp vardef
R16902:16908 compcert.flocq.Core.FLT <> FLT_exp def
R16937:16945 compcert.flocq.Core.FLX <> Prec_gt_0 class
prf 17015:17029 <> abs_B2R_lt_emax
R17060:17062 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x not
R17048:17051 Coq.Reals.Rbasic_fun <> Rabs def
R17054:17056 compcert.flocq.IEEE754.Binary <> B2R def
R17058:17058 compcert.flocq.IEEE754.Binary <> x var
R17063:17066 compcert.flocq.Core.Raux <> bpow def
R17075:17078 compcert.flocq.IEEE754.Binary <> Binary.emax var
R17068:17073 compcert.flocq.Core.Zaux <> radix2 def
R17152:17158 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R17168:17176 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R17152:17158 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R17152:17158 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R17168:17176 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R17152:17158 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R17152:17158 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R17168:17176 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R17152:17158 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R17152:17158 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R17168:17176 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R17152:17158 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R17192:17199 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R17202:17214 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R17192:17199 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R17192:17199 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R17202:17214 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R17202:17214 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R17227:17241 compcert.flocq.IEEE754.Binary <> bounded_lt_emax thm
R17227:17241 compcert.flocq.IEEE754.Binary <> bounded_lt_emax thm
prf 17258:17272 <> abs_B2R_ge_emin
R17315:17320 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17338:17341 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R17322:17325 compcert.flocq.Core.Raux <> bpow def
R17334:17337 compcert.flocq.IEEE754.Binary <> Binary.emin var
R17327:17332 compcert.flocq.Core.Zaux <> radix2 def
R17342:17345 Coq.Reals.Rbasic_fun <> Rabs def
R17348:17350 compcert.flocq.IEEE754.Binary <> B2R def
R17352:17352 compcert.flocq.IEEE754.Binary <> x var
R17308:17310 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17290:17305 compcert.flocq.IEEE754.Binary <> is_finite_strict def
R17307:17307 compcert.flocq.IEEE754.Binary <> x var
R17311:17314 Coq.Init.Datatypes <> true constr
R17464:17466 compcert.flocq.Core.Defs <> F2R def
R17484:17492 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R17497:17503 Coq.Reals.Rbasic_fun <> abs_IZR thm
R17484:17492 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R17484:17492 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R17497:17503 Coq.Reals.Rbasic_fun <> abs_IZR thm
R17497:17503 Coq.Reals.Rbasic_fun <> abs_IZR thm
R17523:17533 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R17544:17552 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R17523:17533 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R17523:17533 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R17523:17533 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R17544:17552 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R17568:17582 compcert.flocq.IEEE754.Binary <> bounded_ge_emin thm
R17568:17582 compcert.flocq.IEEE754.Binary <> bounded_ge_emin thm
R17594:17596 compcert.flocq.Core.Defs <> F2R def
R17614:17622 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R17627:17633 Coq.Reals.Rbasic_fun <> abs_IZR thm
R17614:17622 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R17614:17622 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R17627:17633 Coq.Reals.Rbasic_fun <> abs_IZR thm
R17627:17633 Coq.Reals.Rbasic_fun <> abs_IZR thm
R17653:17663 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R17674:17682 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R17653:17663 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R17653:17663 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R17653:17663 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R17674:17682 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R17698:17712 compcert.flocq.IEEE754.Binary <> bounded_ge_emin thm
R17698:17712 compcert.flocq.IEEE754.Binary <> bounded_ge_emin thm
prf 17729:17753 <> bounded_canonical_lt_emax
R17824:17829 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17884:17889 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17903:17905 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17890:17896 compcert.flocq.IEEE754.Binary <> bounded def
R17901:17902 compcert.flocq.IEEE754.Binary <> ex var
R17898:17899 compcert.flocq.IEEE754.Binary <> mx var
R17906:17909 Coq.Init.Datatypes <> true constr
R17862:17864 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x not
R17831:17833 compcert.flocq.Core.Defs <> F2R def
R17836:17840 compcert.flocq.Core.Defs <> Float constr
R17859:17860 compcert.flocq.IEEE754.Binary <> ex var
R17850:17853 Coq.Numbers.BinNums <> Zpos constr
R17855:17856 compcert.flocq.IEEE754.Binary <> mx var
R17842:17847 compcert.flocq.Core.Zaux <> radix2 def
R17865:17868 compcert.flocq.Core.Raux <> bpow def
R17877:17880 compcert.flocq.IEEE754.Binary <> Binary.emax var
R17870:17875 compcert.flocq.Core.Zaux <> radix2 def
R17775:17783 compcert.flocq.Core.Generic_fmt <> canonical def
R17798:17802 compcert.flocq.Core.Defs <> Float constr
R17821:17822 compcert.flocq.IEEE754.Binary <> ex var
R17812:17815 Coq.Numbers.BinNums <> Zpos constr
R17817:17818 compcert.flocq.IEEE754.Binary <> mx var
R17804:17809 compcert.flocq.Core.Zaux <> radix2 def
R17792:17795 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R17785:17790 compcert.flocq.Core.Zaux <> radix2 def
R17945:17959 Coq.Init.Datatypes <> andb_true_intro thm
R17945:17959 Coq.Init.Datatypes <> andb_true_intro thm
R17976:17993 compcert.flocq.IEEE754.Binary <> canonical_mantissa def
R18003:18011 compcert.flocq.Core.Generic_fmt <> canonical def
R18014:18017 compcert.flocq.Core.Defs <> Fexp proj
R18051:18066 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R18051:18066 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R18051:18066 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R18076:18079 compcert.flocq.Core.Generic_fmt <> cexp def
R18090:18104 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R18090:18104 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R18090:18104 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R18090:18104 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R18137:18150 Coq.ZArith.Zbool <> Zeq_is_eq_bool thm
R18137:18150 Coq.ZArith.Zbool <> Zeq_is_eq_bool thm
R18159:18171 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R18159:18171 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R18181:18189 compcert.flocq.Core.Generic_fmt <> canonical def
R18192:18195 compcert.flocq.Core.Defs <> Fexp proj
R18223:18226 compcert.flocq.Core.Generic_fmt <> cexp def
R18229:18232 compcert.flocq.IEEE754.Binary <> fexp vardef
R18235:18241 compcert.flocq.Core.FLT <> FLT_exp def
R18254:18256 compcert.flocq.Core.Raux <> mag def
R18266:18268 compcert.flocq.Core.Defs <> F2R def
R18271:18275 compcert.flocq.Core.Defs <> Float constr
R18285:18288 Coq.Numbers.BinNums <> Zpos constr
R18277:18282 compcert.flocq.Core.Zaux <> radix2 def
R18258:18263 compcert.flocq.Core.Zaux <> radix2 def
R18254:18256 compcert.flocq.Core.Raux <> mag def
R18266:18268 compcert.flocq.Core.Defs <> F2R def
R18271:18275 compcert.flocq.Core.Defs <> Float constr
R18285:18288 Coq.Numbers.BinNums <> Zpos constr
R18277:18282 compcert.flocq.Core.Zaux <> radix2 def
R18258:18263 compcert.flocq.Core.Zaux <> radix2 def
R18325:18333 Coq.ZArith.BinInt Z max_lub thm
R18325:18333 Coq.ZArith.BinInt Z max_lub thm
R18347:18349 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R18343:18345 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18350:18353 compcert.flocq.IEEE754.Binary <> Binary.emax var
R18347:18349 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R18343:18345 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18350:18353 compcert.flocq.IEEE754.Binary <> Binary.emax var
R18393:18398 compcert.flocq.Core.Zaux <> radix2 def
R18380:18386 compcert.flocq.Core.Raux <> lt_bpow thm
R18393:18398 compcert.flocq.Core.Zaux <> radix2 def
R18380:18386 compcert.flocq.Core.Raux <> lt_bpow thm
R18407:18418 Coq.Reals.RIneq <> Rle_lt_trans thm
R18407:18418 Coq.Reals.RIneq <> Rle_lt_trans thm
R18444:18447 Coq.Numbers.BinNums <> Zpos constr
R18459:18463 Coq.ZArith.BinInt Z abs def
R18466:18469 Coq.Numbers.BinNums <> Zpos constr
R18444:18447 Coq.Numbers.BinNums <> Zpos constr
R18459:18463 Coq.ZArith.BinInt Z abs def
R18466:18469 Coq.Numbers.BinNums <> Zpos constr
R18485:18492 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R18485:18492 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R18485:18492 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R18511:18520 Coq.Reals.RIneq <> Rgt_not_eq thm
R18511:18520 Coq.Reals.RIneq <> Rgt_not_eq thm
R18533:18540 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R18533:18540 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R18550:18553 compcert.flocq.IEEE754.Binary <> emin vardef
R18568:18576 compcert.flocq.Core.FLX <> prec_gt_0 def
R18578:18581 compcert.flocq.IEEE754.Binary <> Binary.prec var
R18568:18576 compcert.flocq.Core.FLX <> prec_gt_0 def
R18578:18581 compcert.flocq.IEEE754.Binary <> Binary.prec var
rec 18638:18647 <> shr_record
proj 18654:18658 <> shr_m
proj 18666:18670 <> shr_r
proj 18681:18685 <> shr_s
R18662:18662 Coq.Numbers.BinNums <> Z ind
R18674:18677 Coq.Init.Datatypes <> bool ind
R18689:18692 Coq.Init.Datatypes <> bool ind
def 18709:18713 <> shr_1
R18757:18759 compcert.flocq.IEEE754.Binary <> mrs var
R18730:18745 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R18775:18777 Coq.Init.Datatypes <> orb def
R18805:18806 Coq.Numbers.BinNums <> Z0 constr
R18811:18826 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R18837:18837 compcert.flocq.IEEE754.Binary <> s var
R18831:18835 Coq.Init.Datatypes <> false constr
R18828:18829 Coq.Numbers.BinNums <> Z0 constr
R18843:18846 Coq.Numbers.BinNums <> Zpos constr
R18848:18849 Coq.Numbers.BinNums <> xH constr
R18854:18869 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R18879:18879 compcert.flocq.IEEE754.Binary <> s var
R18874:18877 Coq.Init.Datatypes <> true constr
R18871:18872 Coq.Numbers.BinNums <> Z0 constr
R18885:18888 Coq.Numbers.BinNums <> Zpos constr
R18891:18892 Coq.Numbers.BinNums <> xO constr
R18900:18915 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R18932:18932 compcert.flocq.IEEE754.Binary <> s var
R18926:18930 Coq.Init.Datatypes <> false constr
R18918:18921 Coq.Numbers.BinNums <> Zpos constr
R18938:18941 Coq.Numbers.BinNums <> Zpos constr
R18944:18945 Coq.Numbers.BinNums <> xI constr
R18953:18968 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R18984:18984 compcert.flocq.IEEE754.Binary <> s var
R18979:18982 Coq.Init.Datatypes <> true constr
R18971:18974 Coq.Numbers.BinNums <> Zpos constr
R18990:18993 Coq.Numbers.BinNums <> Zneg constr
R18995:18996 Coq.Numbers.BinNums <> xH constr
R19001:19016 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R19026:19026 compcert.flocq.IEEE754.Binary <> s var
R19021:19024 Coq.Init.Datatypes <> true constr
R19018:19019 Coq.Numbers.BinNums <> Z0 constr
R19032:19035 Coq.Numbers.BinNums <> Zneg constr
R19038:19039 Coq.Numbers.BinNums <> xO constr
R19047:19062 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R19079:19079 compcert.flocq.IEEE754.Binary <> s var
R19073:19077 Coq.Init.Datatypes <> false constr
R19065:19068 Coq.Numbers.BinNums <> Zneg constr
R19085:19088 Coq.Numbers.BinNums <> Zneg constr
R19091:19092 Coq.Numbers.BinNums <> xI constr
R19100:19115 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R19131:19131 compcert.flocq.IEEE754.Binary <> s var
R19126:19129 Coq.Init.Datatypes <> true constr
R19118:19121 Coq.Numbers.BinNums <> Zneg constr
def 19152:19168 <> loc_of_shr_record
R19185:19187 compcert.flocq.IEEE754.Binary <> mrs var
R19198:19213 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R19217:19221 Coq.Init.Datatypes <> false constr
R19223:19227 Coq.Init.Datatypes <> false constr
R19232:19240 compcert.flocq.Calc.Bracket <> loc_Exact constr
R19246:19261 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R19265:19269 Coq.Init.Datatypes <> false constr
R19271:19274 Coq.Init.Datatypes <> true constr
R19279:19289 compcert.flocq.Calc.Bracket <> loc_Inexact constr
R19291:19292 Coq.Init.Datatypes <> Lt constr
R19298:19313 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R19317:19320 Coq.Init.Datatypes <> true constr
R19322:19326 Coq.Init.Datatypes <> false constr
R19331:19341 compcert.flocq.Calc.Bracket <> loc_Inexact constr
R19343:19344 Coq.Init.Datatypes <> Eq constr
R19350:19365 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R19369:19372 Coq.Init.Datatypes <> true constr
R19374:19377 Coq.Init.Datatypes <> true constr
R19382:19392 compcert.flocq.Calc.Bracket <> loc_Inexact constr
R19394:19395 Coq.Init.Datatypes <> Gt constr
def 19416:19432 <> shr_record_of_loc
R19449:19449 compcert.flocq.IEEE754.Binary <> l var
R19460:19468 compcert.flocq.Calc.Bracket <> loc_Exact constr
R19473:19488 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R19498:19502 Coq.Init.Datatypes <> false constr
R19492:19496 Coq.Init.Datatypes <> false constr
R19490:19490 compcert.flocq.IEEE754.Binary <> m var
R19508:19518 compcert.flocq.Calc.Bracket <> loc_Inexact constr
R19520:19521 Coq.Init.Datatypes <> Lt constr
R19526:19541 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R19551:19554 Coq.Init.Datatypes <> true constr
R19545:19549 Coq.Init.Datatypes <> false constr
R19543:19543 compcert.flocq.IEEE754.Binary <> m var
R19560:19570 compcert.flocq.Calc.Bracket <> loc_Inexact constr
R19572:19573 Coq.Init.Datatypes <> Eq constr
R19578:19593 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R19602:19606 Coq.Init.Datatypes <> false constr
R19597:19600 Coq.Init.Datatypes <> true constr
R19595:19595 compcert.flocq.IEEE754.Binary <> m var
R19612:19622 compcert.flocq.Calc.Bracket <> loc_Inexact constr
R19624:19625 Coq.Init.Datatypes <> Gt constr
R19630:19645 compcert.flocq.IEEE754.Binary <> Build_shr_record constr
R19654:19657 Coq.Init.Datatypes <> true constr
R19649:19652 Coq.Init.Datatypes <> true constr
R19647:19647 compcert.flocq.IEEE754.Binary <> m var
prf 19675:19697 <> shr_m_shr_record_of_loc
R19746:19748 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19717:19721 compcert.flocq.IEEE754.Binary <> shr_m proj
R19724:19740 compcert.flocq.IEEE754.Binary <> shr_record_of_loc def
R19744:19744 compcert.flocq.IEEE754.Binary <> l var
R19742:19742 compcert.flocq.IEEE754.Binary <> m var
R19749:19749 compcert.flocq.IEEE754.Binary <> m var
prf 19796:19819 <> loc_of_shr_record_of_loc
R19880:19882 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19839:19855 compcert.flocq.IEEE754.Binary <> loc_of_shr_record def
R19858:19874 compcert.flocq.IEEE754.Binary <> shr_record_of_loc def
R19878:19878 compcert.flocq.IEEE754.Binary <> l var
R19876:19876 compcert.flocq.IEEE754.Binary <> m var
R19883:19883 compcert.flocq.IEEE754.Binary <> l var
def 19933:19935 <> shr
R19956:19956 compcert.flocq.IEEE754.Binary <> n var
R19967:19970 Coq.Numbers.BinNums <> Zpos constr
R19977:19977 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19998:19999 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20009:20009 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19978:19985 compcert.flocq.Core.Zaux <> iter_pos def
R19995:19997 compcert.flocq.IEEE754.Binary <> mrs var
R19987:19991 compcert.flocq.IEEE754.Binary <> shr_1 def
R20002:20004 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20001:20001 compcert.flocq.IEEE754.Binary <> e var
R20005:20005 compcert.flocq.IEEE754.Binary <> n var
R20020:20020 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20024:20025 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20027:20027 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20021:20023 compcert.flocq.IEEE754.Binary <> mrs var
R20026:20026 compcert.flocq.IEEE754.Binary <> e var
prf 20043:20057 <> inbetween_shr_1
R20099:20104 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20167:20172 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20173:20187 compcert.flocq.Calc.Bracket <> inbetween_float def
R20227:20243 compcert.flocq.IEEE754.Binary <> loc_of_shr_record def
R20246:20250 compcert.flocq.IEEE754.Binary <> shr_1 def
R20252:20254 compcert.flocq.IEEE754.Binary <> mrs var
R20224:20224 compcert.flocq.IEEE754.Binary <> x var
R20218:20220 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20217:20217 compcert.flocq.IEEE754.Binary <> e var
R20197:20201 compcert.flocq.IEEE754.Binary <> shr_m proj
R20204:20208 compcert.flocq.IEEE754.Binary <> shr_1 def
R20210:20212 compcert.flocq.IEEE754.Binary <> mrs var
R20189:20194 compcert.flocq.Core.Zaux <> radix2 def
R20105:20119 compcert.flocq.Calc.Bracket <> inbetween_float def
R20145:20161 compcert.flocq.IEEE754.Binary <> loc_of_shr_record def
R20163:20165 compcert.flocq.IEEE754.Binary <> mrs var
R20142:20142 compcert.flocq.IEEE754.Binary <> x var
R20140:20140 compcert.flocq.IEEE754.Binary <> e var
R20129:20133 compcert.flocq.IEEE754.Binary <> shr_m proj
R20135:20137 compcert.flocq.IEEE754.Binary <> mrs var
R20121:20126 compcert.flocq.Core.Zaux <> radix2 def
R20083:20086 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R20087:20091 compcert.flocq.IEEE754.Binary <> shr_m proj
R20093:20095 compcert.flocq.IEEE754.Binary <> mrs var
R20299:20323 compcert.flocq.Calc.Bracket <> new_location_even_correct thm
R20438:20454 compcert.flocq.IEEE754.Binary <> loc_of_shr_record def
R20404:20408 compcert.flocq.IEEE754.Binary <> shr_r proj
R20411:20415 compcert.flocq.IEEE754.Binary <> shr_1 def
R20375:20378 compcert.flocq.Core.Raux <> bpow def
R20380:20385 compcert.flocq.Core.Zaux <> radix2 def
R20326:20328 compcert.flocq.Core.Defs <> F2R def
R20331:20335 compcert.flocq.Core.Defs <> Float constr
R20366:20368 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20345:20349 compcert.flocq.IEEE754.Binary <> shr_m proj
R20352:20356 compcert.flocq.IEEE754.Binary <> shr_1 def
R20337:20342 compcert.flocq.Core.Zaux <> radix2 def
R20299:20323 compcert.flocq.Calc.Bracket <> new_location_even_correct thm
R20438:20454 compcert.flocq.IEEE754.Binary <> loc_of_shr_record def
R20404:20408 compcert.flocq.IEEE754.Binary <> shr_r proj
R20411:20415 compcert.flocq.IEEE754.Binary <> shr_1 def
R20375:20378 compcert.flocq.Core.Raux <> bpow def
R20380:20385 compcert.flocq.Core.Zaux <> radix2 def
R20326:20328 compcert.flocq.Core.Defs <> F2R def
R20331:20335 compcert.flocq.Core.Defs <> Float constr
R20366:20368 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20345:20349 compcert.flocq.IEEE754.Binary <> shr_m proj
R20352:20356 compcert.flocq.IEEE754.Binary <> shr_1 def
R20337:20342 compcert.flocq.Core.Zaux <> radix2 def
R20488:20496 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R20488:20496 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R20512:20516 compcert.flocq.IEEE754.Binary <> shr_r proj
R20519:20523 compcert.flocq.IEEE754.Binary <> shr_1 def
R20512:20516 compcert.flocq.IEEE754.Binary <> shr_r proj
R20519:20523 compcert.flocq.IEEE754.Binary <> shr_1 def
R20557:20560 compcert.flocq.Core.Raux <> bpow def
R20562:20567 compcert.flocq.Core.Zaux <> radix2 def
R20557:20560 compcert.flocq.Core.Raux <> bpow def
R20562:20567 compcert.flocq.Core.Zaux <> radix2 def
R20584:20592 compcert.flocq.Core.Raux <> bpow_plus thm
R20584:20592 compcert.flocq.Core.Raux <> bpow_plus thm
R20584:20592 compcert.flocq.Core.Raux <> bpow_plus thm
R20604:20613 Coq.ZArith.BinInt <> Zplus_comm syndef
R20623:20630 compcert.flocq.Core.Float_prop <> F2R_bpow thm
R20641:20643 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20632:20637 compcert.flocq.Core.Zaux <> radix2 def
R20604:20613 Coq.ZArith.BinInt <> Zplus_comm syndef
R20604:20613 Coq.ZArith.BinInt <> Zplus_comm syndef
R20623:20630 compcert.flocq.Core.Float_prop <> F2R_bpow thm
R20641:20643 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20632:20637 compcert.flocq.Core.Zaux <> radix2 def
R20623:20630 compcert.flocq.Core.Float_prop <> F2R_bpow thm
R20641:20643 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20632:20637 compcert.flocq.Core.Zaux <> radix2 def
R20656:20670 compcert.flocq.Calc.Bracket <> inbetween_float def
R20673:20675 compcert.flocq.Core.Defs <> F2R def
R20693:20700 Coq.Reals.RIneq <> plus_IZR thm
R20703:20720 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R20693:20700 Coq.Reals.RIneq <> plus_IZR thm
R20693:20700 Coq.Reals.RIneq <> plus_IZR thm
R20703:20720 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R20703:20720 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R20732:20748 compcert.flocq.Calc.Bracket <> new_location_even def
R20794:20810 compcert.flocq.IEEE754.Binary <> loc_of_shr_record def
R20756:20760 compcert.flocq.IEEE754.Binary <> shr_r proj
R20763:20767 compcert.flocq.IEEE754.Binary <> shr_1 def
R20824:20840 compcert.flocq.IEEE754.Binary <> loc_of_shr_record def
R20843:20847 compcert.flocq.IEEE754.Binary <> shr_1 def
R20732:20748 compcert.flocq.Calc.Bracket <> new_location_even def
R20794:20810 compcert.flocq.IEEE754.Binary <> loc_of_shr_record def
R20756:20760 compcert.flocq.IEEE754.Binary <> shr_r proj
R20763:20767 compcert.flocq.IEEE754.Binary <> shr_1 def
R20824:20840 compcert.flocq.IEEE754.Binary <> loc_of_shr_record def
R20843:20847 compcert.flocq.IEEE754.Binary <> shr_1 def
R21000:21013 compcert.flocq.Core.Float_prop <> F2R_change_exp thm
R21015:21020 compcert.flocq.Core.Zaux <> radix2 def
R21000:21013 compcert.flocq.Core.Float_prop <> F2R_change_exp thm
R21015:21020 compcert.flocq.Core.Zaux <> radix2 def
R21000:21013 compcert.flocq.Core.Float_prop <> F2R_change_exp thm
R21015:21020 compcert.flocq.Core.Zaux <> radix2 def
R21000:21013 compcert.flocq.Core.Float_prop <> F2R_change_exp thm
R21015:21020 compcert.flocq.Core.Zaux <> radix2 def
R21035:21042 Coq.ZArith.Zorder <> Zle_succ syndef
R21035:21042 Coq.ZArith.Zorder <> Zle_succ syndef
R21052:21054 compcert.flocq.Core.Defs <> F2R def
R21077:21094 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R21102:21109 Coq.Reals.RIneq <> plus_IZR thm
R21077:21094 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R21077:21094 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R21077:21094 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R21102:21109 Coq.Reals.RIneq <> plus_IZR thm
R21102:21109 Coq.Reals.RIneq <> plus_IZR thm
R21102:21109 Coq.Reals.RIneq <> plus_IZR thm
R21120:21130 Coq.ZArith.BinInt <> Zplus_assoc syndef
R21120:21130 Coq.ZArith.BinInt <> Zplus_assoc syndef
R21120:21130 Coq.ZArith.BinInt <> Zplus_assoc syndef
R21177:21180 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21219:21219 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21159:21161 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R21142:21146 compcert.flocq.IEEE754.Binary <> shr_m proj
R21149:21153 compcert.flocq.IEEE754.Binary <> shr_1 def
R21163:21166 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R21176:21176 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R21172:21174 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R21168:21170 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21184:21188 compcert.flocq.IEEE754.Binary <> shr_r proj
R21191:21195 compcert.flocq.IEEE754.Binary <> shr_1 def
R21230:21234 compcert.flocq.IEEE754.Binary <> shr_m proj
R21177:21180 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21219:21219 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21159:21161 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R21142:21146 compcert.flocq.IEEE754.Binary <> shr_m proj
R21149:21153 compcert.flocq.IEEE754.Binary <> shr_1 def
R21163:21166 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R21176:21176 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R21172:21174 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R21168:21170 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21184:21188 compcert.flocq.IEEE754.Binary <> shr_r proj
R21191:21195 compcert.flocq.IEEE754.Binary <> shr_1 def
R21230:21234 compcert.flocq.IEEE754.Binary <> shr_m proj
R21272:21274 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R21268:21270 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21272:21274 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R21268:21270 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21290:21290 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R21290:21290 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R21314:21323 Coq.ZArith.BinInt <> Zmult_comm syndef
R21314:21323 Coq.ZArith.BinInt <> Zmult_comm syndef
R21314:21323 Coq.ZArith.BinInt <> Zmult_comm syndef
prf 21469:21481 <> inbetween_shr
R21517:21522 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21553:21558 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21577:21579 compcert.flocq.IEEE754.Binary <> shr def
R21607:21607 compcert.flocq.IEEE754.Binary <> n var
R21605:21605 compcert.flocq.IEEE754.Binary <> e var
R21582:21598 compcert.flocq.IEEE754.Binary <> shr_record_of_loc def
R21602:21602 compcert.flocq.IEEE754.Binary <> l var
R21600:21600 compcert.flocq.IEEE754.Binary <> m var
R21564:21564 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21568:21569 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21572:21572 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21614:21628 compcert.flocq.Calc.Bracket <> inbetween_float def
R21655:21671 compcert.flocq.IEEE754.Binary <> loc_of_shr_record def
R21652:21652 compcert.flocq.IEEE754.Binary <> x var
R21638:21642 compcert.flocq.IEEE754.Binary <> shr_m proj
R21630:21635 compcert.flocq.Core.Zaux <> radix2 def
R21523:21537 compcert.flocq.Calc.Bracket <> inbetween_float def
R21552:21552 compcert.flocq.IEEE754.Binary <> l var
R21550:21550 compcert.flocq.IEEE754.Binary <> x var
R21548:21548 compcert.flocq.IEEE754.Binary <> e var
R21546:21546 compcert.flocq.IEEE754.Binary <> m var
R21539:21544 compcert.flocq.Core.Zaux <> radix2 def
R21509:21512 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R21513:21513 compcert.flocq.IEEE754.Binary <> m var
R21798:21800 compcert.flocq.IEEE754.Binary <> shr def
R21811:21822 compcert.flocq.Core.Zaux <> iter_pos_nat thm
R21811:21822 compcert.flocq.Core.Zaux <> iter_pos_nat thm
R21811:21822 compcert.flocq.Core.Zaux <> iter_pos_nat thm
R21833:21859 Coq.ZArith.Znat <> Zpos_eq_Z_of_nat_o_nat_of_P syndef
R21833:21859 Coq.ZArith.Znat <> Zpos_eq_Z_of_nat_o_nat_of_P syndef
R21833:21859 Coq.ZArith.Znat <> Zpos_eq_Z_of_nat_o_nat_of_P syndef
R21873:21880 Coq.PArith.BinPos <> nat_of_P syndef
R21873:21880 Coq.PArith.BinPos <> nat_of_P syndef
R21901:21909 Coq.ZArith.BinInt <> Zplus_0_r syndef
R21901:21909 Coq.ZArith.BinInt <> Zplus_0_r syndef
R21901:21909 Coq.ZArith.BinInt <> Zplus_0_r syndef
R21948:21957 compcert.flocq.Core.Zaux <> iter_nat_S thm
R21948:21957 compcert.flocq.Core.Zaux <> iter_nat_S thm
R21948:21957 compcert.flocq.Core.Zaux <> iter_nat_S thm
R21968:21972 Coq.ZArith.Znat <> inj_S syndef
R21968:21972 Coq.ZArith.Znat <> inj_S syndef
R21968:21972 Coq.ZArith.Znat <> inj_S syndef
R21982:21987 Coq.ZArith.BinInt Z succ def
R21998:22008 Coq.ZArith.BinInt <> Zplus_assoc syndef
R21998:22008 Coq.ZArith.BinInt <> Zplus_assoc syndef
R21998:22008 Coq.ZArith.BinInt <> Zplus_assoc syndef
R22030:22044 compcert.flocq.IEEE754.Binary <> inbetween_shr_1 thm
R22030:22044 compcert.flocq.IEEE754.Binary <> inbetween_shr_1 thm
R22108:22117 compcert.flocq.Core.Zaux <> iter_nat_S thm
R22108:22117 compcert.flocq.Core.Zaux <> iter_nat_S thm
R22108:22117 compcert.flocq.Core.Zaux <> iter_nat_S thm
R22145:22152 compcert.flocq.Core.Zaux <> iter_nat def
R22164:22180 compcert.flocq.IEEE754.Binary <> shr_record_of_loc def
R22154:22158 compcert.flocq.IEEE754.Binary <> shr_1 def
R22145:22152 compcert.flocq.Core.Zaux <> iter_nat def
R22164:22180 compcert.flocq.IEEE754.Binary <> shr_record_of_loc def
R22154:22158 compcert.flocq.IEEE754.Binary <> shr_1 def
def 22325:22332 <> shr_fexp
R22345:22347 compcert.flocq.IEEE754.Binary <> shr def
R22397:22399 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R22376:22379 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R22392:22394 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22382:22389 compcert.flocq.Core.Digits <> Zdigits2 def
R22391:22391 compcert.flocq.IEEE754.Binary <> m var
R22395:22395 compcert.flocq.IEEE754.Binary <> e var
R22400:22400 compcert.flocq.IEEE754.Binary <> e var
R22373:22373 compcert.flocq.IEEE754.Binary <> e var
R22350:22366 compcert.flocq.IEEE754.Binary <> shr_record_of_loc def
R22370:22370 compcert.flocq.IEEE754.Binary <> l var
R22368:22368 compcert.flocq.IEEE754.Binary <> m var
prf 22413:22424 <> shr_truncate
R22456:22461 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22476:22480 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22462:22469 compcert.flocq.IEEE754.Binary <> shr_fexp def
R22475:22475 compcert.flocq.IEEE754.Binary <> l var
R22473:22473 compcert.flocq.IEEE754.Binary <> e var
R22471:22471 compcert.flocq.IEEE754.Binary <> m var
R22502:22509 compcert.flocq.Calc.Round <> truncate def
R22523:22523 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22525:22526 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22528:22529 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22531:22531 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22524:22524 compcert.flocq.IEEE754.Binary <> m var
R22527:22527 compcert.flocq.IEEE754.Binary <> e var
R22530:22530 compcert.flocq.IEEE754.Binary <> l var
R22518:22521 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R22511:22516 compcert.flocq.Core.Zaux <> radix2 def
R22486:22486 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22489:22490 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22493:22494 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22497:22497 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22536:22536 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22560:22561 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22564:22564 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22537:22553 compcert.flocq.IEEE754.Binary <> shr_record_of_loc def
R22448:22451 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R22452:22452 compcert.flocq.IEEE754.Binary <> m var
R22600:22607 compcert.flocq.Calc.Round <> truncate def
R22621:22621 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22623:22624 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22626:22627 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22629:22629 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22616:22619 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R22609:22614 compcert.flocq.Core.Zaux <> radix2 def
R22600:22607 compcert.flocq.Calc.Round <> truncate def
R22621:22621 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22623:22624 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22626:22627 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22629:22629 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22616:22619 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R22609:22614 compcert.flocq.Core.Zaux <> radix2 def
R22660:22667 compcert.flocq.IEEE754.Binary <> shr_fexp def
R22678:22693 compcert.flocq.Core.Digits <> Zdigits2_Zdigits thm
R22678:22693 compcert.flocq.Core.Digits <> Zdigits2_Zdigits thm
R22678:22693 compcert.flocq.Core.Digits <> Zdigits2_Zdigits thm
R22732:22734 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R22705:22708 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R22727:22729 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22711:22717 compcert.flocq.Core.Digits <> Zdigits def
R22719:22724 compcert.flocq.Core.Zaux <> radix2 def
R22732:22734 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R22705:22708 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R22727:22729 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22711:22717 compcert.flocq.Core.Digits <> Zdigits def
R22719:22724 compcert.flocq.Core.Zaux <> radix2 def
R22765:22772 compcert.flocq.Calc.Round <> truncate def
R22854:22857 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R22858:22861 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R22880:22882 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22864:22870 compcert.flocq.Core.Digits <> Zdigits def
R22872:22877 compcert.flocq.Core.Zaux <> radix2 def
R22854:22857 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R22858:22861 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R22880:22882 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22864:22870 compcert.flocq.Core.Digits <> Zdigits def
R22872:22877 compcert.flocq.Core.Zaux <> radix2 def
R22927:22944 compcert.flocq.Calc.Bracket <> inbetween_float_ex thm
R22946:22951 compcert.flocq.Core.Zaux <> radix2 def
R22927:22944 compcert.flocq.Calc.Bracket <> inbetween_float_ex thm
R22946:22951 compcert.flocq.Core.Zaux <> radix2 def
R22984:22996 compcert.flocq.IEEE754.Binary <> inbetween_shr thm
R23034:23036 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R23007:23010 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R23029:23031 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23013:23019 compcert.flocq.Core.Digits <> Zdigits def
R23021:23026 compcert.flocq.Core.Zaux <> radix2 def
R22984:22996 compcert.flocq.IEEE754.Binary <> inbetween_shr thm
R23034:23036 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R23007:23010 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R23029:23031 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23013:23019 compcert.flocq.Core.Digits <> Zdigits def
R23021:23026 compcert.flocq.Core.Zaux <> radix2 def
R23064:23067 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R23064:23067 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R23097:23099 compcert.flocq.Core.Defs <> F2R def
R23102:23106 compcert.flocq.Core.Defs <> Float constr
R23108:23113 compcert.flocq.Core.Zaux <> radix2 def
R23081:23089 Coq.Reals.RIneq <> Rle_trans thm
R23097:23099 compcert.flocq.Core.Defs <> F2R def
R23102:23106 compcert.flocq.Core.Defs <> Float constr
R23108:23113 compcert.flocq.Core.Zaux <> radix2 def
R23081:23089 Coq.Reals.RIneq <> Rle_trans thm
R23132:23139 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R23132:23139 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R23149:23153 Coq.Init.Logic <> proj1 thm
R23156:23177 compcert.flocq.Calc.Bracket <> inbetween_float_bounds thm
R23149:23153 Coq.Init.Logic <> proj1 thm
R23156:23177 compcert.flocq.Calc.Bracket <> inbetween_float_bounds thm
R23204:23206 compcert.flocq.IEEE754.Binary <> shr def
R23262:23264 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R23235:23238 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R23257:23259 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23241:23247 compcert.flocq.Core.Digits <> Zdigits def
R23249:23254 compcert.flocq.Core.Zaux <> radix2 def
R23209:23225 compcert.flocq.IEEE754.Binary <> shr_record_of_loc def
R23204:23206 compcert.flocq.IEEE754.Binary <> shr def
R23262:23264 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R23235:23238 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R23257:23259 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23241:23247 compcert.flocq.Core.Digits <> Zdigits def
R23249:23254 compcert.flocq.Core.Zaux <> radix2 def
R23209:23225 compcert.flocq.IEEE754.Binary <> shr_record_of_loc def
R23307:23322 compcert.flocq.Calc.Round <> truncate_correct thm
R23349:23357 Coq.Init.Logic <> or_introl constr
R23324:23329 compcert.flocq.Core.Zaux <> radix2 def
R23307:23322 compcert.flocq.Calc.Round <> truncate_correct thm
R23349:23357 Coq.Init.Logic <> or_introl constr
R23324:23329 compcert.flocq.Core.Zaux <> radix2 def
R23424:23426 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23424:23426 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23454:23456 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23440:23442 Coq.Init.Datatypes <> snd def
R23444:23444 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23448:23449 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23453:23453 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23457:23459 Coq.Init.Datatypes <> snd def
R23462:23464 Coq.Init.Datatypes <> fst def
R23466:23466 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23469:23469 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23472:23472 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23475:23475 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23454:23456 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23440:23442 Coq.Init.Datatypes <> snd def
R23444:23444 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23448:23449 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23453:23453 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23457:23459 Coq.Init.Datatypes <> snd def
R23462:23464 Coq.Init.Datatypes <> fst def
R23466:23466 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23469:23469 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23472:23472 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23475:23475 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23509:23516 compcert.flocq.Calc.Round <> truncate def
R23564:23570 Coq.Init.Logic <> f_equal thm
R23582:23582 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23584:23585 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23587:23587 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23583:23583 compcert.flocq.IEEE754.Binary <> v var
R23564:23570 Coq.Init.Logic <> f_equal thm
R23582:23582 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23584:23585 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23587:23587 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23583:23583 compcert.flocq.IEEE754.Binary <> v var
R23602:23623 compcert.flocq.Calc.Bracket <> inbetween_float_unique thm
R23602:23623 compcert.flocq.Calc.Bracket <> inbetween_float_unique thm
R23734:23741 compcert.flocq.Calc.Round <> truncate def
ind 23829:23832 <> mode
constr 23837:23843 <> mode_NE
constr 23847:23853 <> mode_ZR
constr 23857:23863 <> mode_DN
constr 23867:23873 <> mode_UP
constr 23877:23883 <> mode_NA
R23844:23844 compcert.flocq.IEEE754.Binary <> mode ind
R23854:23854 compcert.flocq.IEEE754.Binary <> mode ind
R23864:23864 compcert.flocq.IEEE754.Binary <> mode ind
R23874:23874 compcert.flocq.IEEE754.Binary <> mode ind
R23884:23884 compcert.flocq.IEEE754.Binary <> mode ind
def 23898:23907 <> round_mode
R23922:23922 compcert.flocq.IEEE754.Binary <> m var
R23933:23939 compcert.flocq.IEEE754.Binary <> mode_NE constr
R23944:23952 compcert.flocq.Core.Round_NE <> ZnearestE syndef
R23958:23964 compcert.flocq.IEEE754.Binary <> mode_ZR constr
R23969:23974 compcert.flocq.Core.Raux <> Ztrunc def
R23980:23986 compcert.flocq.IEEE754.Binary <> mode_DN constr
R23991:23996 compcert.flocq.Core.Raux <> Zfloor def
R24002:24008 compcert.flocq.IEEE754.Binary <> mode_UP constr
R24013:24017 compcert.flocq.Core.Raux <> Zceil def
R24023:24029 compcert.flocq.IEEE754.Binary <> mode_NA constr
R24034:24042 compcert.flocq.Core.Generic_fmt <> ZnearestA syndef
def 24063:24073 <> choice_mode
R24097:24097 compcert.flocq.IEEE754.Binary <> m var
R24108:24114 compcert.flocq.IEEE754.Binary <> mode_NE constr
R24119:24127 compcert.flocq.Calc.Round <> cond_incr def
R24161:24162 compcert.flocq.IEEE754.Binary <> mx var
R24130:24136 compcert.flocq.Calc.Round <> round_N def
R24157:24158 compcert.flocq.IEEE754.Binary <> lx var
R24139:24142 Coq.Init.Datatypes <> negb def
R24145:24150 Coq.ZArith.BinInt Z even def
R24152:24153 compcert.flocq.IEEE754.Binary <> mx var
R24168:24174 compcert.flocq.IEEE754.Binary <> mode_ZR constr
R24179:24180 compcert.flocq.IEEE754.Binary <> mx var
R24186:24192 compcert.flocq.IEEE754.Binary <> mode_DN constr
R24197:24205 compcert.flocq.Calc.Round <> cond_incr def
R24229:24230 compcert.flocq.IEEE754.Binary <> mx var
R24208:24220 compcert.flocq.Calc.Round <> round_sign_DN def
R24225:24226 compcert.flocq.IEEE754.Binary <> lx var
R24222:24223 compcert.flocq.IEEE754.Binary <> sx var
R24236:24242 compcert.flocq.IEEE754.Binary <> mode_UP constr
R24247:24255 compcert.flocq.Calc.Round <> cond_incr def
R24279:24280 compcert.flocq.IEEE754.Binary <> mx var
R24258:24270 compcert.flocq.Calc.Round <> round_sign_UP def
R24275:24276 compcert.flocq.IEEE754.Binary <> lx var
R24272:24273 compcert.flocq.IEEE754.Binary <> sx var
R24286:24292 compcert.flocq.IEEE754.Binary <> mode_NA constr
R24297:24305 compcert.flocq.Calc.Round <> cond_incr def
R24325:24326 compcert.flocq.IEEE754.Binary <> mx var
R24308:24314 compcert.flocq.Calc.Round <> round_N def
R24321:24322 compcert.flocq.IEEE754.Binary <> lx var
R24316:24319 Coq.Init.Datatypes <> true constr
inst 24352:24371 <> valid_rnd_round_mode
R24385:24393 compcert.flocq.Core.Generic_fmt <> Valid_rnd class
R24396:24405 compcert.flocq.IEEE754.Binary <> round_mode def
R24407:24407 compcert.flocq.IEEE754.Binary <> m var
R24438:24447 compcert.flocq.IEEE754.Binary <> round_mode def
def 24499:24513 <> overflow_to_inf
R24530:24530 compcert.flocq.IEEE754.Binary <> m var
R24541:24547 compcert.flocq.IEEE754.Binary <> mode_NE constr
R24552:24555 Coq.Init.Datatypes <> true constr
R24561:24567 compcert.flocq.IEEE754.Binary <> mode_NA constr
R24572:24575 Coq.Init.Datatypes <> true constr
R24581:24587 compcert.flocq.IEEE754.Binary <> mode_ZR constr
R24592:24596 Coq.Init.Datatypes <> false constr
R24602:24608 compcert.flocq.IEEE754.Binary <> mode_UP constr
R24613:24616 Coq.Init.Datatypes <> negb def
R24618:24618 compcert.flocq.IEEE754.Binary <> s var
R24624:24630 compcert.flocq.IEEE754.Binary <> mode_DN constr
R24635:24635 compcert.flocq.IEEE754.Binary <> s var
def 24656:24670 <> binary_overflow
R24684:24698 compcert.flocq.IEEE754.Binary <> overflow_to_inf def
R24702:24702 compcert.flocq.IEEE754.Binary <> s var
R24700:24700 compcert.flocq.IEEE754.Binary <> m var
R24732:24742 compcert.flocq.IEEE754.Binary <> F754_finite constr
R24812:24814 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R24808:24811 compcert.flocq.IEEE754.Binary <> Binary.emax var
R24815:24818 compcert.flocq.IEEE754.Binary <> Binary.prec var
R24767:24769 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R24754:24759 Coq.ZArith.Zpow_def <> Zpower syndef
R24763:24766 compcert.flocq.IEEE754.Binary <> Binary.prec var
R24780:24783 Coq.Numbers.BinNums <> Zpos constr
R24799:24800 Coq.Numbers.BinNums <> xH constr
R24744:24744 compcert.flocq.IEEE754.Binary <> s var
R24709:24721 compcert.flocq.IEEE754.Binary <> F754_infinity constr
R24723:24723 compcert.flocq.IEEE754.Binary <> s var
def 24834:24849 <> binary_round_aux
R24892:24899 compcert.flocq.IEEE754.Binary <> shr_fexp def
R24907:24908 compcert.flocq.IEEE754.Binary <> lx var
R24904:24905 compcert.flocq.IEEE754.Binary <> ex var
R24901:24902 compcert.flocq.IEEE754.Binary <> mx var
R24878:24878 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24883:24884 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24887:24887 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24936:24943 compcert.flocq.IEEE754.Binary <> shr_fexp def
R25008:25016 compcert.flocq.Calc.Bracket <> loc_Exact constr
R24946:24956 compcert.flocq.IEEE754.Binary <> choice_mode def
R24980:24996 compcert.flocq.IEEE754.Binary <> loc_of_shr_record def
R24967:24971 compcert.flocq.IEEE754.Binary <> shr_m proj
R24963:24964 compcert.flocq.IEEE754.Binary <> sx var
R24958:24961 compcert.flocq.IEEE754.Binary <> mode var
R24920:24920 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24926:24927 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24931:24931 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25029:25033 compcert.flocq.IEEE754.Binary <> shr_m proj
R25050:25051 Coq.Numbers.BinNums <> Z0 constr
R25056:25064 compcert.flocq.IEEE754.Binary <> F754_zero constr
R25066:25067 compcert.flocq.IEEE754.Binary <> sx var
R25073:25076 Coq.Numbers.BinNums <> Zpos constr
R25086:25093 Coq.ZArith.Zbool <> Zle_bool syndef
R25104:25106 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R25100:25103 compcert.flocq.IEEE754.Binary <> Binary.emax var
R25107:25110 compcert.flocq.IEEE754.Binary <> Binary.prec var
R25144:25158 compcert.flocq.IEEE754.Binary <> binary_overflow def
R25165:25166 compcert.flocq.IEEE754.Binary <> sx var
R25160:25163 compcert.flocq.IEEE754.Binary <> mode var
R25118:25128 compcert.flocq.IEEE754.Binary <> F754_finite constr
R25130:25131 compcert.flocq.IEEE754.Binary <> sx var
R25177:25184 compcert.flocq.IEEE754.Binary <> F754_nan constr
R25192:25193 Coq.Numbers.BinNums <> xH constr
R25186:25190 Coq.Init.Datatypes <> false constr
prf 25223:25247 <> binary_round_aux_correct'
R25289:25294 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25335:25340 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25369:25374 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25384:25399 compcert.flocq.IEEE754.Binary <> binary_round_aux def
R25427:25428 compcert.flocq.IEEE754.Binary <> lx var
R25424:25425 compcert.flocq.IEEE754.Binary <> ex var
R25421:25422 compcert.flocq.IEEE754.Binary <> mx var
R25407:25414 compcert.flocq.Core.Raux <> Rlt_bool def
R25416:25416 compcert.flocq.IEEE754.Binary <> x var
R25401:25404 compcert.flocq.IEEE754.Binary <> mode var
R25456:25461 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25449:25451 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25435:25446 compcert.flocq.IEEE754.Binary <> valid_binary def
R25448:25448 compcert.flocq.IEEE754.Binary <> z var
R25452:25455 Coq.Init.Datatypes <> true constr
R25465:25472 compcert.flocq.Core.Raux <> Rlt_bool def
R25522:25525 compcert.flocq.Core.Raux <> bpow def
R25534:25537 compcert.flocq.IEEE754.Binary <> Binary.emax var
R25527:25532 compcert.flocq.Core.Zaux <> radix2 def
R25475:25478 Coq.Reals.Rbasic_fun <> Rabs def
R25481:25485 compcert.flocq.Core.Generic_fmt <> round def
R25517:25517 compcert.flocq.IEEE754.Binary <> x var
R25500:25509 compcert.flocq.IEEE754.Binary <> round_mode def
R25511:25514 compcert.flocq.IEEE754.Binary <> mode var
R25494:25497 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R25487:25492 compcert.flocq.Core.Zaux <> radix2 def
R25672:25674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25671:25671 compcert.flocq.IEEE754.Binary <> z var
R25675:25689 compcert.flocq.IEEE754.Binary <> binary_overflow def
R25697:25704 compcert.flocq.Core.Raux <> Rlt_bool def
R25706:25706 compcert.flocq.IEEE754.Binary <> x var
R25691:25694 compcert.flocq.IEEE754.Binary <> mode var
R25602:25609 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25562:25564 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25549:25552 compcert.flocq.IEEE754.Binary <> FF2R def
R25561:25561 compcert.flocq.IEEE754.Binary <> z var
R25554:25559 compcert.flocq.Core.Zaux <> radix2 def
R25565:25569 compcert.flocq.Core.Generic_fmt <> round def
R25601:25601 compcert.flocq.IEEE754.Binary <> x var
R25584:25593 compcert.flocq.IEEE754.Binary <> round_mode def
R25595:25598 compcert.flocq.IEEE754.Binary <> mode var
R25578:25581 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R25571:25576 compcert.flocq.Core.Zaux <> radix2 def
R25631:25634 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25624:25626 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25610:25621 compcert.flocq.IEEE754.Binary <> is_finite_FF def
R25623:25623 compcert.flocq.IEEE754.Binary <> z var
R25627:25630 Coq.Init.Datatypes <> true constr
R25644:25646 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25635:25641 compcert.flocq.IEEE754.Binary <> sign_FF def
R25643:25643 compcert.flocq.IEEE754.Binary <> z var
R25647:25654 compcert.flocq.Core.Raux <> Rlt_bool def
R25656:25656 compcert.flocq.IEEE754.Binary <> x var
R25344:25347 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R25342:25343 compcert.flocq.IEEE754.Binary <> ex var
R25348:25351 compcert.flocq.Core.Generic_fmt <> cexp def
R25365:25365 compcert.flocq.IEEE754.Binary <> x var
R25360:25363 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R25353:25358 compcert.flocq.Core.Zaux <> radix2 def
R25295:25309 compcert.flocq.Calc.Bracket <> inbetween_float def
R25333:25334 compcert.flocq.IEEE754.Binary <> lx var
R25325:25328 Coq.Reals.Rbasic_fun <> Rabs def
R25330:25330 compcert.flocq.IEEE754.Binary <> x var
R25321:25322 compcert.flocq.IEEE754.Binary <> ex var
R25318:25319 compcert.flocq.IEEE754.Binary <> mx var
R25311:25316 compcert.flocq.Core.Zaux <> radix2 def
R25281:25284 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R25280:25280 compcert.flocq.IEEE754.Binary <> x var
R25793:25808 compcert.flocq.IEEE754.Binary <> binary_round_aux def
R25834:25845 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R25834:25845 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R25834:25845 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R25834:25845 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R25859:25887 compcert.flocq.Calc.Round <> round_trunc_sign_any_correct' thm
R25941:25949 Coq.Init.Logic <> or_introl constr
R25909:25919 compcert.flocq.IEEE754.Binary <> choice_mode def
R25894:25903 compcert.flocq.IEEE754.Binary <> round_mode def
R25859:25887 compcert.flocq.Calc.Round <> round_trunc_sign_any_correct' thm
R25941:25949 Coq.Init.Logic <> or_introl constr
R25909:25919 compcert.flocq.IEEE754.Binary <> choice_mode def
R25894:25903 compcert.flocq.IEEE754.Binary <> round_mode def
R25971:25978 compcert.flocq.Core.Generic_fmt <> cexp_abs thm
R25971:25978 compcert.flocq.Core.Generic_fmt <> cexp_abs thm
R25971:25978 compcert.flocq.Core.Generic_fmt <> cexp_abs thm
R25998:26022 compcert.flocq.Calc.Round <> truncate_correct_partial' thm
R26026:26029 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R25998:26022 compcert.flocq.Calc.Round <> truncate_correct_partial' thm
R26026:26029 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R26060:26067 compcert.flocq.Calc.Round <> truncate def
R26081:26081 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26084:26085 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26088:26089 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26092:26092 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26076:26079 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R26069:26074 compcert.flocq.Core.Zaux <> radix2 def
R26060:26067 compcert.flocq.Calc.Round <> truncate def
R26081:26081 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26084:26085 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26088:26089 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26092:26092 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26076:26079 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R26069:26074 compcert.flocq.Core.Zaux <> radix2 def
R26122:26145 compcert.flocq.IEEE754.Binary <> loc_of_shr_record_of_loc thm
R26148:26170 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R26122:26145 compcert.flocq.IEEE754.Binary <> loc_of_shr_record_of_loc thm
R26122:26145 compcert.flocq.IEEE754.Binary <> loc_of_shr_record_of_loc thm
R26148:26170 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R26148:26170 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R26185:26195 compcert.flocq.IEEE754.Binary <> choice_mode def
R26200:26207 compcert.flocq.Core.Raux <> Rlt_bool def
R26185:26195 compcert.flocq.IEEE754.Binary <> choice_mode def
R26200:26207 compcert.flocq.Core.Raux <> Rlt_bool def
R26272:26275 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R26272:26275 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R26305:26315 compcert.flocq.IEEE754.Binary <> choice_mode def
R26318:26326 compcert.flocq.Calc.Round <> cond_incr def
R26350:26358 Coq.ZArith.BinInt Z le_refl thm
R26386:26389 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R26386:26389 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R26437:26444 Coq.ZArith.Zorder <> Zle_succ syndef
R26454:26462 Coq.ZArith.BinInt Z le_refl thm
R26350:26358 Coq.ZArith.BinInt Z le_refl thm
R26350:26358 Coq.ZArith.BinInt Z le_refl thm
R26350:26358 Coq.ZArith.BinInt Z le_refl thm
R26350:26358 Coq.ZArith.BinInt Z le_refl thm
R26350:26358 Coq.ZArith.BinInt Z le_refl thm
R26437:26444 Coq.ZArith.Zorder <> Zle_succ syndef
R26454:26462 Coq.ZArith.BinInt Z le_refl thm
R26437:26444 Coq.ZArith.Zorder <> Zle_succ syndef
R26454:26462 Coq.ZArith.BinInt Z le_refl thm
R26437:26444 Coq.ZArith.Zorder <> Zle_succ syndef
R26454:26462 Coq.ZArith.BinInt Z le_refl thm
R26437:26444 Coq.ZArith.Zorder <> Zle_succ syndef
R26454:26462 Coq.ZArith.BinInt Z le_refl thm
R26524:26526 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26483:26486 Coq.Reals.Rbasic_fun <> Rabs def
R26489:26493 compcert.flocq.Core.Generic_fmt <> round def
R26508:26517 compcert.flocq.IEEE754.Binary <> round_mode def
R26502:26505 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R26495:26500 compcert.flocq.Core.Zaux <> radix2 def
R26527:26529 compcert.flocq.Core.Defs <> F2R def
R26532:26536 compcert.flocq.Core.Defs <> Float constr
R26538:26543 compcert.flocq.Core.Zaux <> radix2 def
R26524:26526 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26483:26486 Coq.Reals.Rbasic_fun <> Rabs def
R26489:26493 compcert.flocq.Core.Generic_fmt <> round def
R26508:26517 compcert.flocq.IEEE754.Binary <> round_mode def
R26502:26505 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R26495:26500 compcert.flocq.Core.Zaux <> radix2 def
R26527:26529 compcert.flocq.Core.Defs <> F2R def
R26532:26536 compcert.flocq.Core.Defs <> Float constr
R26538:26543 compcert.flocq.Core.Zaux <> radix2 def
R26575:26582 Coq.ZArith.BinInt Z abs_eq thm
R26575:26582 Coq.ZArith.BinInt Z abs_eq thm
R26575:26582 Coq.ZArith.BinInt Z abs_eq thm
R26575:26582 Coq.ZArith.BinInt Z abs_eq thm
R26599:26603 Coq.ZArith.BinInt Z abs def
R26616:26620 Coq.ZArith.BinInt Z abs def
R26623:26631 compcert.flocq.Core.Zaux <> cond_Zopp def
R26634:26641 compcert.flocq.Core.Raux <> Rlt_bool def
R26599:26603 Coq.ZArith.BinInt Z abs def
R26616:26620 Coq.ZArith.BinInt Z abs def
R26623:26631 compcert.flocq.Core.Zaux <> cond_Zopp def
R26634:26641 compcert.flocq.Core.Raux <> Rlt_bool def
R26663:26670 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R26663:26670 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R26663:26670 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R26683:26689 Coq.Init.Logic <> f_equal thm
R26683:26689 Coq.Init.Logic <> f_equal thm
R26698:26710 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R26698:26710 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R26719:26728 Coq.ZArith.BinInt Z le_trans thm
R26719:26728 Coq.ZArith.BinInt Z le_trans thm
R26752:26762 Coq.ZArith.Zorder <> Zlt_succ_le thm
R26752:26762 Coq.ZArith.Zorder <> Zlt_succ_le thm
R26785:26790 compcert.flocq.Core.Zaux <> radix2 def
R26771:26778 compcert.flocq.Core.Float_prop <> gt_0_F2R thm
R26785:26790 compcert.flocq.Core.Zaux <> radix2 def
R26771:26778 compcert.flocq.Core.Float_prop <> gt_0_F2R thm
R26826:26833 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R26802:26813 Coq.Reals.RIneq <> Rle_lt_trans thm
R26826:26833 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R26802:26813 Coq.Reals.RIneq <> Rle_lt_trans thm
R26846:26850 Coq.Init.Logic <> proj2 thm
R26853:26874 compcert.flocq.Calc.Bracket <> inbetween_float_bounds thm
R26846:26850 Coq.Init.Logic <> proj2 thm
R26853:26874 compcert.flocq.Calc.Bracket <> inbetween_float_bounds thm
R26913:26927 compcert.flocq.Calc.Bracket <> inbetween_float def
R26987:26995 compcert.flocq.Calc.Bracket <> loc_Exact constr
R26944:26947 Coq.Reals.Rbasic_fun <> Rabs def
R26950:26954 compcert.flocq.Core.Generic_fmt <> round def
R26969:26978 compcert.flocq.IEEE754.Binary <> round_mode def
R26963:26966 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R26956:26961 compcert.flocq.Core.Zaux <> radix2 def
R26929:26934 compcert.flocq.Core.Zaux <> radix2 def
R26913:26927 compcert.flocq.Calc.Bracket <> inbetween_float def
R26987:26995 compcert.flocq.Calc.Bracket <> loc_Exact constr
R26944:26947 Coq.Reals.Rbasic_fun <> Rabs def
R26950:26954 compcert.flocq.Core.Generic_fmt <> round def
R26969:26978 compcert.flocq.IEEE754.Binary <> round_mode def
R26963:26966 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R26956:26961 compcert.flocq.Core.Zaux <> radix2 def
R26929:26934 compcert.flocq.Core.Zaux <> radix2 def
R27009:27023 compcert.flocq.Calc.Bracket <> inbetween_Exact constr
R27009:27023 compcert.flocq.Calc.Bracket <> inbetween_Exact constr
R27078:27089 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R27078:27089 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R27078:27089 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R27078:27089 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R27101:27109 Coq.ZArith.BinInt Z le_refl thm
R27101:27109 Coq.ZArith.BinInt Z le_refl thm
R27124:27133 compcert.flocq.Calc.Round <> truncate_0 thm
R27150:27158 compcert.flocq.Calc.Bracket <> loc_Exact constr
R27142:27145 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R27135:27140 compcert.flocq.Core.Zaux <> radix2 def
R27124:27133 compcert.flocq.Calc.Round <> truncate_0 thm
R27150:27158 compcert.flocq.Calc.Bracket <> loc_Exact constr
R27142:27145 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R27135:27140 compcert.flocq.Core.Zaux <> radix2 def
R27172:27179 compcert.flocq.Calc.Round <> truncate def
R27193:27193 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27196:27197 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27200:27201 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27211:27211 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27194:27195 Coq.Numbers.BinNums <> Z0 constr
R27202:27210 compcert.flocq.Calc.Bracket <> loc_Exact constr
R27188:27191 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R27181:27186 compcert.flocq.Core.Zaux <> radix2 def
R27172:27179 compcert.flocq.Calc.Round <> truncate def
R27193:27193 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27196:27197 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27200:27201 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27211:27211 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27194:27195 Coq.Numbers.BinNums <> Z0 constr
R27202:27210 compcert.flocq.Calc.Bracket <> loc_Exact constr
R27188:27191 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R27181:27186 compcert.flocq.Core.Zaux <> radix2 def
R27241:27263 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R27241:27263 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R27241:27263 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R27313:27325 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R27313:27325 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R27313:27325 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R27313:27325 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R27348:27353 Coq.Init.Logic <> sym_eq syndef
R27348:27353 Coq.Init.Logic <> sym_eq syndef
R27361:27368 compcert.flocq.Core.Raux <> Rlt_bool def
R27378:27382 compcert.flocq.Core.Float_prop <> F2R_0 thm
R27361:27368 compcert.flocq.Core.Raux <> Rlt_bool def
R27378:27382 compcert.flocq.Core.Float_prop <> F2R_0 thm
R27378:27382 compcert.flocq.Core.Float_prop <> F2R_0 thm
R27396:27403 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R27406:27418 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R27421:27425 compcert.flocq.Core.Float_prop <> F2R_0 thm
R27396:27403 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R27396:27403 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R27406:27418 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R27406:27418 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R27421:27425 compcert.flocq.Core.Float_prop <> F2R_0 thm
R27421:27425 compcert.flocq.Core.Float_prop <> F2R_0 thm
R27434:27442 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R27434:27442 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R27476:27479 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R27480:27483 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R27511:27513 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27486:27492 compcert.flocq.Core.Digits <> Zdigits def
R27502:27505 Coq.Numbers.BinNums <> Zpos constr
R27494:27499 compcert.flocq.Core.Zaux <> radix2 def
R27476:27479 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R27480:27483 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R27511:27513 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27486:27492 compcert.flocq.Core.Digits <> Zdigits def
R27502:27505 Coq.Numbers.BinNums <> Zpos constr
R27494:27499 compcert.flocq.Core.Zaux <> radix2 def
R27534:27548 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R27558:27564 compcert.flocq.Core.Raux <> mag_abs thm
R27534:27548 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R27534:27548 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R27534:27548 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R27558:27564 compcert.flocq.Core.Raux <> mag_abs thm
R27558:27564 compcert.flocq.Core.Raux <> mag_abs thm
R27605:27612 compcert.flocq.Core.Generic_fmt <> cexp_abs thm
R27605:27612 compcert.flocq.Core.Generic_fmt <> cexp_abs thm
R27605:27612 compcert.flocq.Core.Generic_fmt <> cexp_abs thm
R27621:27624 compcert.flocq.Core.Generic_fmt <> cexp def
R27639:27643 compcert.flocq.Core.Generic_fmt <> round def
R27658:27667 compcert.flocq.IEEE754.Binary <> round_mode def
R27652:27655 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R27645:27650 compcert.flocq.Core.Zaux <> radix2 def
R27633:27636 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R27626:27631 compcert.flocq.Core.Zaux <> radix2 def
R27621:27624 compcert.flocq.Core.Generic_fmt <> cexp def
R27639:27643 compcert.flocq.Core.Generic_fmt <> round def
R27658:27667 compcert.flocq.IEEE754.Binary <> round_mode def
R27652:27655 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R27645:27650 compcert.flocq.Core.Zaux <> radix2 def
R27633:27636 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R27626:27631 compcert.flocq.Core.Zaux <> radix2 def
R27683:27695 compcert.flocq.Core.Generic_fmt <> cexp_round_ge thm
R27683:27695 compcert.flocq.Core.Generic_fmt <> cexp_round_ge thm
R27719:27726 compcert.flocq.Core.Raux <> Rlt_bool def
R27719:27726 compcert.flocq.Core.Raux <> Rlt_bool def
R27740:27749 Coq.Reals.RIneq <> Rlt_not_eq thm
R27740:27749 Coq.Reals.RIneq <> Rlt_not_eq thm
R27762:27769 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R27762:27769 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R27778:27787 Coq.Reals.RIneq <> Rgt_not_eq thm
R27778:27787 Coq.Reals.RIneq <> Rgt_not_eq thm
R27800:27807 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R27800:27807 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R27821:27844 compcert.flocq.Calc.Round <> truncate_correct_partial thm
R27821:27844 compcert.flocq.Calc.Round <> truncate_correct_partial thm
R27895:27902 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R27895:27902 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R27916:27938 compcert.flocq.Calc.Round <> truncate_correct_format thm
R27953:27956 Coq.Numbers.BinNums <> Zpos constr
R27947:27950 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R27940:27945 compcert.flocq.Core.Zaux <> radix2 def
R27916:27938 compcert.flocq.Calc.Round <> truncate_correct_format thm
R27953:27956 Coq.Numbers.BinNums <> Zpos constr
R27947:27950 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R27940:27945 compcert.flocq.Core.Zaux <> radix2 def
R28001:28012 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R28001:28012 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R28001:28012 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R28001:28012 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R28034:28041 compcert.flocq.Calc.Round <> truncate def
R28055:28055 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28064:28065 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28068:28069 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28079:28079 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28056:28059 Coq.Numbers.BinNums <> Zpos constr
R28070:28078 compcert.flocq.Calc.Bracket <> loc_Exact constr
R28050:28053 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R28043:28048 compcert.flocq.Core.Zaux <> radix2 def
R28034:28041 compcert.flocq.Calc.Round <> truncate def
R28055:28055 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28064:28065 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28068:28069 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28079:28079 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28056:28059 Coq.Numbers.BinNums <> Zpos constr
R28070:28078 compcert.flocq.Calc.Bracket <> loc_Exact constr
R28050:28053 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R28043:28048 compcert.flocq.Core.Zaux <> radix2 def
R28109:28131 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R28109:28131 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R28109:28131 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R28187:28196 Coq.Reals.RIneq <> Rgt_not_eq thm
R28187:28196 Coq.Reals.RIneq <> Rgt_not_eq thm
R28222:28226 compcert.flocq.Core.Float_prop <> F2R_0 thm
R28222:28226 compcert.flocq.Core.Float_prop <> F2R_0 thm
R28222:28226 compcert.flocq.Core.Float_prop <> F2R_0 thm
R28239:28246 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R28239:28246 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R28257:28269 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R28276:28288 compcert.flocq.Core.Raux <> abs_cond_Ropp thm
R28294:28300 compcert.flocq.Calc.Operations <> F2R_abs thm
R28257:28269 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R28257:28269 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R28276:28288 compcert.flocq.Core.Raux <> abs_cond_Ropp thm
R28276:28288 compcert.flocq.Core.Raux <> abs_cond_Ropp thm
R28294:28300 compcert.flocq.Calc.Operations <> F2R_abs thm
R28294:28300 compcert.flocq.Calc.Operations <> F2R_abs thm
R28325:28332 Coq.ZArith.Zbool <> Zle_bool syndef
R28342:28344 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28338:28341 compcert.flocq.IEEE754.Binary <> Binary.emax var
R28345:28348 compcert.flocq.IEEE754.Binary <> Binary.prec var
R28325:28332 Coq.ZArith.Zbool <> Zle_bool syndef
R28342:28344 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28338:28341 compcert.flocq.IEEE754.Binary <> Binary.emax var
R28345:28348 compcert.flocq.IEEE754.Binary <> Binary.prec var
R28387:28389 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28374:28380 compcert.flocq.IEEE754.Binary <> bounded def
R28390:28393 Coq.Init.Datatypes <> true constr
R28387:28389 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28374:28380 compcert.flocq.IEEE754.Binary <> bounded def
R28390:28393 Coq.Init.Datatypes <> true constr
R28403:28417 Coq.Init.Datatypes <> andb_true_intro thm
R28403:28417 Coq.Init.Datatypes <> andb_true_intro thm
R28434:28451 compcert.flocq.IEEE754.Binary <> canonical_mantissa def
R28460:28472 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R28460:28472 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R28483:28498 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R28483:28498 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R28483:28498 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R28512:28526 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R28512:28526 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R28512:28526 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R28512:28526 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R28535:28540 Coq.Init.Logic <> sym_eq syndef
R28535:28540 Coq.Init.Logic <> sym_eq syndef
R28597:28600 Coq.Init.Logic <> conj constr
R28597:28600 Coq.Init.Logic <> conj constr
R28614:28626 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R28614:28626 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R28614:28626 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R28614:28626 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R28649:28661 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R28649:28661 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R28674:28688 compcert.flocq.IEEE754.Binary <> bounded_lt_emax thm
R28674:28688 compcert.flocq.IEEE754.Binary <> bounded_lt_emax thm
R28700:28713 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R28718:28721 compcert.flocq.Core.Raux <> bpow def
R28730:28733 compcert.flocq.IEEE754.Binary <> Binary.emax var
R28723:28728 compcert.flocq.Core.Zaux <> radix2 def
R28700:28713 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R28718:28721 compcert.flocq.Core.Raux <> bpow def
R28730:28733 compcert.flocq.IEEE754.Binary <> Binary.emax var
R28723:28728 compcert.flocq.Core.Zaux <> radix2 def
R28700:28713 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R28718:28721 compcert.flocq.Core.Raux <> bpow def
R28730:28733 compcert.flocq.IEEE754.Binary <> Binary.emax var
R28723:28728 compcert.flocq.Core.Zaux <> radix2 def
R28700:28713 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R28718:28721 compcert.flocq.Core.Raux <> bpow def
R28730:28733 compcert.flocq.IEEE754.Binary <> Binary.emax var
R28723:28728 compcert.flocq.Core.Zaux <> radix2 def
R28746:28749 Coq.Init.Logic <> conj constr
R28754:28763 Coq.Init.Logic <> refl_equal syndef
R28746:28749 Coq.Init.Logic <> conj constr
R28754:28763 Coq.Init.Logic <> refl_equal syndef
R28777:28791 compcert.flocq.IEEE754.Binary <> binary_overflow def
R28799:28813 compcert.flocq.IEEE754.Binary <> overflow_to_inf def
R28799:28813 compcert.flocq.IEEE754.Binary <> overflow_to_inf def
R28822:28831 Coq.Init.Logic <> refl_equal syndef
R28822:28831 Coq.Init.Logic <> refl_equal syndef
R28841:28852 compcert.flocq.IEEE754.Binary <> valid_binary def
R28855:28861 compcert.flocq.IEEE754.Binary <> bounded def
R28872:28884 Coq.ZArith.Zbool <> Zle_bool_refl syndef
R28872:28884 Coq.ZArith.Zbool <> Zle_bool_refl syndef
R28872:28884 Coq.ZArith.Zbool <> Zle_bool_refl syndef
R28895:28910 Coq.Bool.Bool <> andb_true_r thm
R28895:28910 Coq.Bool.Bool <> andb_true_r thm
R28895:28910 Coq.Bool.Bool <> andb_true_r thm
R28919:28931 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R28919:28931 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R28942:28957 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R28942:28957 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R28942:28957 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R28969:28975 compcert.flocq.Core.Digits <> Zdigits def
R28985:28988 Coq.Numbers.BinNums <> Zpos constr
R29011:29013 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28998:29003 Coq.ZArith.Zpow_def <> Zpower syndef
R29007:29010 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29024:29027 Coq.Numbers.BinNums <> Zpos constr
R29043:29044 Coq.Numbers.BinNums <> xH constr
R28977:28982 compcert.flocq.Core.Zaux <> radix2 def
R29058:29061 compcert.flocq.IEEE754.Binary <> Binary.prec var
R28969:28975 compcert.flocq.Core.Digits <> Zdigits def
R28985:28988 Coq.Numbers.BinNums <> Zpos constr
R29011:29013 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28998:29003 Coq.ZArith.Zpow_def <> Zpower syndef
R29007:29010 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29024:29027 Coq.Numbers.BinNums <> Zpos constr
R29043:29044 Coq.Numbers.BinNums <> xH constr
R28977:28982 compcert.flocq.Core.Zaux <> radix2 def
R29058:29061 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29071:29074 compcert.flocq.IEEE754.Binary <> fexp vardef
R29077:29083 compcert.flocq.Core.FLT <> FLT_exp def
R29086:29089 compcert.flocq.IEEE754.Binary <> emin vardef
R29104:29112 compcert.flocq.Core.FLX <> prec_gt_0 def
R29114:29117 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29104:29112 compcert.flocq.Core.FLX <> prec_gt_0 def
R29114:29117 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29166:29174 compcert.flocq.Core.Zaux <> radix_val proj
R29176:29181 compcert.flocq.Core.Zaux <> radix2 def
R29166:29174 compcert.flocq.Core.Zaux <> radix_val proj
R29176:29181 compcert.flocq.Core.Zaux <> radix2 def
R29212:29214 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R29194:29199 Coq.ZArith.Zpow_def <> Zpower syndef
R29208:29211 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29201:29206 compcert.flocq.Core.Zaux <> radix2 def
R29212:29214 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R29194:29199 Coq.ZArith.Zpow_def <> Zpower syndef
R29208:29211 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29201:29206 compcert.flocq.Core.Zaux <> radix2 def
R29248:29258 compcert.flocq.Core.Zaux <> Zpower_gt_1 thm
R29273:29281 compcert.flocq.Core.FLX <> prec_gt_0 def
R29283:29286 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29267:29270 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29260:29265 compcert.flocq.Core.Zaux <> radix2 def
R29248:29258 compcert.flocq.Core.Zaux <> Zpower_gt_1 thm
R29273:29281 compcert.flocq.Core.FLX <> prec_gt_0 def
R29283:29286 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29267:29270 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29260:29265 compcert.flocq.Core.Zaux <> radix2 def
R29325:29335 Coq.ZArith.Zorder <> Zle_antisym syndef
R29325:29335 Coq.ZArith.Zorder <> Zle_antisym syndef
R29351:29353 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R29347:29349 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R29343:29346 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29354:29360 compcert.flocq.Core.Digits <> Zdigits def
R29370:29373 Coq.Numbers.BinNums <> Zpos constr
R29362:29367 compcert.flocq.Core.Zaux <> radix2 def
R29351:29353 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R29347:29349 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R29343:29346 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29354:29360 compcert.flocq.Core.Digits <> Zdigits def
R29370:29373 Coq.Numbers.BinNums <> Zpos constr
R29362:29367 compcert.flocq.Core.Zaux <> radix2 def
R29403:29419 compcert.flocq.Core.Digits <> Zdigits_gt_Zpower thm
R29403:29419 compcert.flocq.Core.Digits <> Zdigits_gt_Zpower thm
R29479:29481 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R29455:29460 Coq.ZArith.Zpow_def <> Zpower syndef
R29474:29476 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R29470:29473 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29462:29467 compcert.flocq.Core.Zaux <> radix2 def
R29482:29487 Coq.ZArith.Zpow_def <> Zpower syndef
R29496:29499 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29489:29494 compcert.flocq.Core.Zaux <> radix2 def
R29479:29481 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R29455:29460 Coq.ZArith.Zpow_def <> Zpower syndef
R29474:29476 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R29470:29473 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29462:29467 compcert.flocq.Core.Zaux <> radix2 def
R29482:29487 Coq.ZArith.Zpow_def <> Zpower syndef
R29496:29499 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29489:29494 compcert.flocq.Core.Zaux <> radix2 def
R29526:29531 Coq.Reals.RIneq <> lt_IZR thm
R29526:29531 Coq.Reals.RIneq <> lt_IZR thm
R29544:29553 compcert.flocq.Core.Raux <> IZR_Zpower thm
R29544:29553 compcert.flocq.Core.Raux <> IZR_Zpower thm
R29544:29553 compcert.flocq.Core.Raux <> IZR_Zpower thm
R29544:29553 compcert.flocq.Core.Raux <> IZR_Zpower thm
R29544:29553 compcert.flocq.Core.Raux <> IZR_Zpower thm
R29544:29553 compcert.flocq.Core.Raux <> IZR_Zpower thm
R29569:29579 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R29569:29579 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R29588:29594 compcert.flocq.Core.Raux <> bpow_lt thm
R29588:29594 compcert.flocq.Core.Raux <> bpow_lt thm
R29603:29610 Coq.ZArith.Zorder <> Zlt_pred syndef
R29603:29610 Coq.ZArith.Zorder <> Zlt_pred syndef
R29623:29637 Coq.ZArith.Zorder <> Zlt_0_le_0_pred thm
R29623:29637 Coq.ZArith.Zorder <> Zlt_0_le_0_pred thm
R29646:29662 compcert.flocq.Core.Digits <> Zdigits_le_Zpower thm
R29646:29662 compcert.flocq.Core.Digits <> Zdigits_le_Zpower thm
R29699:29706 Coq.ZArith.Zorder <> Zlt_pred syndef
R29699:29706 Coq.ZArith.Zorder <> Zlt_pred syndef
R29734:29744 compcert.flocq.Core.Zaux <> Zpower_gt_1 thm
R29756:29764 compcert.flocq.Core.FLX <> prec_gt_0 def
R29766:29769 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29746:29751 compcert.flocq.Core.Zaux <> radix2 def
R29734:29744 compcert.flocq.Core.Zaux <> Zpower_gt_1 thm
R29756:29764 compcert.flocq.Core.FLX <> prec_gt_0 def
R29766:29769 compcert.flocq.IEEE754.Binary <> Binary.prec var
R29746:29751 compcert.flocq.Core.Zaux <> radix2 def
R29806:29815 Coq.Reals.RIneq <> Rnot_lt_le thm
R29806:29815 Coq.Reals.RIneq <> Rnot_lt_le thm
R29841:29850 Coq.Init.Logic <> refl_equal syndef
R29853:29859 compcert.flocq.IEEE754.Binary <> bounded def
R29841:29850 Coq.Init.Logic <> refl_equal syndef
R29853:29859 compcert.flocq.IEEE754.Binary <> bounded def
R29877:29883 compcert.flocq.IEEE754.Binary <> bounded def
R29912:29928 Coq.Bool.Bool <> andb_false_r thm
R29912:29928 Coq.Bool.Bool <> andb_false_r thm
R29912:29928 Coq.Bool.Bool <> andb_false_r thm
R29939:29963 compcert.flocq.IEEE754.Binary <> bounded_canonical_lt_emax thm
R29939:29963 compcert.flocq.IEEE754.Binary <> bounded_canonical_lt_emax thm
R29939:29963 compcert.flocq.IEEE754.Binary <> bounded_canonical_lt_emax thm
R29939:29963 compcert.flocq.IEEE754.Binary <> bounded_canonical_lt_emax thm
R30002:30010 compcert.flocq.Core.Generic_fmt <> canonical def
R30037:30046 Coq.Reals.RIneq <> Rgt_not_eq thm
R30037:30046 Coq.Reals.RIneq <> Rgt_not_eq thm
R30085:30086 Coq.Reals.Rdefinitions <> R0 defax
R30070:30078 Coq.Reals.Raxioms <> Rlt_trans prfax
R30085:30086 Coq.Reals.Rdefinitions <> R0 defax
R30070:30078 Coq.Reals.Raxioms <> Rlt_trans prfax
R30099:30106 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R30099:30106 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R30119:30126 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R30119:30126 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R30150:30167 compcert.flocq.Core.Generic_fmt <> generic_format_abs thm
R30150:30167 compcert.flocq.Core.Generic_fmt <> generic_format_abs thm
R30178:30197 compcert.flocq.Core.Generic_fmt <> generic_format_round thm
R30178:30197 compcert.flocq.Core.Generic_fmt <> generic_format_round thm
R30227:30236 Coq.Reals.RIneq <> Rgt_not_eq thm
R30227:30236 Coq.Reals.RIneq <> Rgt_not_eq thm
R30278:30279 Coq.Reals.Rdefinitions <> R0 defax
R30260:30271 Coq.Reals.RIneq <> Rlt_le_trans thm
R30278:30279 Coq.Reals.Rdefinitions <> R0 defax
R30260:30271 Coq.Reals.RIneq <> Rlt_le_trans thm
R30292:30299 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R30292:30299 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R30308:30315 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R30308:30315 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R30334:30344 Coq.Reals.Rbasic_fun <> Rabs_pos_lt thm
R30334:30344 Coq.Reals.Rbasic_fun <> Rabs_pos_lt thm
R30398:30418 compcert.flocq.Calc.Round <> inbetween_int_NE_sign thm
R30398:30418 compcert.flocq.Calc.Round <> inbetween_int_NE_sign thm
R30427:30447 compcert.flocq.Calc.Round <> inbetween_int_ZR_sign thm
R30427:30447 compcert.flocq.Calc.Round <> inbetween_int_ZR_sign thm
R30456:30476 compcert.flocq.Calc.Round <> inbetween_int_DN_sign thm
R30456:30476 compcert.flocq.Calc.Round <> inbetween_int_DN_sign thm
R30485:30505 compcert.flocq.Calc.Round <> inbetween_int_UP_sign thm
R30485:30505 compcert.flocq.Calc.Round <> inbetween_int_UP_sign thm
R30514:30534 compcert.flocq.Calc.Round <> inbetween_int_NA_sign thm
R30514:30534 compcert.flocq.Calc.Round <> inbetween_int_NA_sign thm
R30549:30570 compcert.flocq.Calc.Bracket <> inbetween_float_bounds thm
R30549:30570 compcert.flocq.Calc.Bracket <> inbetween_float_bounds thm
R30585:30595 Coq.ZArith.Zorder <> Zlt_succ_le thm
R30585:30595 Coq.ZArith.Zorder <> Zlt_succ_le thm
R30605:30612 compcert.flocq.Core.Float_prop <> gt_0_F2R thm
R30605:30612 compcert.flocq.Core.Float_prop <> gt_0_F2R thm
R30645:30649 Coq.Init.Logic <> proj2 thm
R30621:30632 Coq.Reals.RIneq <> Rle_lt_trans thm
R30645:30649 Coq.Init.Logic <> proj2 thm
R30621:30632 Coq.Reals.RIneq <> Rle_lt_trans thm
R30662:30669 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R30662:30669 Coq.Reals.Rbasic_fun <> Rabs_pos thm
prf 30686:30709 <> binary_round_aux_correct
R30788:30793 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30840:30845 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30855:30870 compcert.flocq.IEEE754.Binary <> binary_round_aux def
R30905:30906 compcert.flocq.IEEE754.Binary <> lx var
R30902:30903 compcert.flocq.IEEE754.Binary <> ex var
R30893:30896 Coq.Numbers.BinNums <> Zpos constr
R30898:30899 compcert.flocq.IEEE754.Binary <> mx var
R30878:30885 compcert.flocq.Core.Raux <> Rlt_bool def
R30887:30887 compcert.flocq.IEEE754.Binary <> x var
R30872:30875 compcert.flocq.IEEE754.Binary <> mode var
R30934:30939 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R30927:30929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30913:30924 compcert.flocq.IEEE754.Binary <> valid_binary def
R30926:30926 compcert.flocq.IEEE754.Binary <> z var
R30930:30933 Coq.Init.Datatypes <> true constr
R30943:30950 compcert.flocq.Core.Raux <> Rlt_bool def
R31000:31003 compcert.flocq.Core.Raux <> bpow def
R31012:31015 compcert.flocq.IEEE754.Binary <> Binary.emax var
R31005:31010 compcert.flocq.Core.Zaux <> radix2 def
R30953:30956 Coq.Reals.Rbasic_fun <> Rabs def
R30959:30963 compcert.flocq.Core.Generic_fmt <> round def
R30995:30995 compcert.flocq.IEEE754.Binary <> x var
R30978:30987 compcert.flocq.IEEE754.Binary <> round_mode def
R30989:30992 compcert.flocq.IEEE754.Binary <> mode var
R30972:30975 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R30965:30970 compcert.flocq.Core.Zaux <> radix2 def
R31150:31152 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31149:31149 compcert.flocq.IEEE754.Binary <> z var
R31153:31167 compcert.flocq.IEEE754.Binary <> binary_overflow def
R31175:31182 compcert.flocq.Core.Raux <> Rlt_bool def
R31184:31184 compcert.flocq.IEEE754.Binary <> x var
R31169:31172 compcert.flocq.IEEE754.Binary <> mode var
R31080:31087 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R31040:31042 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31027:31030 compcert.flocq.IEEE754.Binary <> FF2R def
R31039:31039 compcert.flocq.IEEE754.Binary <> z var
R31032:31037 compcert.flocq.Core.Zaux <> radix2 def
R31043:31047 compcert.flocq.Core.Generic_fmt <> round def
R31079:31079 compcert.flocq.IEEE754.Binary <> x var
R31062:31071 compcert.flocq.IEEE754.Binary <> round_mode def
R31073:31076 compcert.flocq.IEEE754.Binary <> mode var
R31056:31059 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R31049:31054 compcert.flocq.Core.Zaux <> radix2 def
R31109:31112 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R31102:31104 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31088:31099 compcert.flocq.IEEE754.Binary <> is_finite_FF def
R31101:31101 compcert.flocq.IEEE754.Binary <> z var
R31105:31108 Coq.Init.Datatypes <> true constr
R31122:31124 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31113:31119 compcert.flocq.IEEE754.Binary <> sign_FF def
R31121:31121 compcert.flocq.IEEE754.Binary <> z var
R31125:31132 compcert.flocq.Core.Raux <> Rlt_bool def
R31134:31134 compcert.flocq.IEEE754.Binary <> x var
R30797:30800 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R30795:30796 compcert.flocq.IEEE754.Binary <> ex var
R30801:30804 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R30831:30833 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30807:30813 compcert.flocq.Core.Digits <> Zdigits def
R30823:30826 Coq.Numbers.BinNums <> Zpos constr
R30828:30829 compcert.flocq.IEEE754.Binary <> mx var
R30815:30820 compcert.flocq.Core.Zaux <> radix2 def
R30834:30835 compcert.flocq.IEEE754.Binary <> ex var
R30741:30755 compcert.flocq.Calc.Bracket <> inbetween_float def
R30786:30787 compcert.flocq.IEEE754.Binary <> lx var
R30778:30781 Coq.Reals.Rbasic_fun <> Rabs def
R30783:30783 compcert.flocq.IEEE754.Binary <> x var
R30774:30775 compcert.flocq.IEEE754.Binary <> ex var
R30765:30768 Coq.Numbers.BinNums <> Zpos constr
R30770:30771 compcert.flocq.IEEE754.Binary <> mx var
R30757:30762 compcert.flocq.Core.Zaux <> radix2 def
R31268:31283 compcert.flocq.IEEE754.Binary <> binary_round_aux def
R31309:31320 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R31309:31320 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R31309:31320 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R31309:31320 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R31343:31370 compcert.flocq.Calc.Round <> round_trunc_sign_any_correct thm
R31431:31439 Coq.Init.Logic <> or_introl constr
R31412:31415 Coq.Numbers.BinNums <> Zpos constr
R31392:31402 compcert.flocq.IEEE754.Binary <> choice_mode def
R31377:31386 compcert.flocq.IEEE754.Binary <> round_mode def
R31343:31370 compcert.flocq.Calc.Round <> round_trunc_sign_any_correct thm
R31431:31439 Coq.Init.Logic <> or_introl constr
R31412:31415 Coq.Numbers.BinNums <> Zpos constr
R31392:31402 compcert.flocq.IEEE754.Binary <> choice_mode def
R31377:31386 compcert.flocq.IEEE754.Binary <> round_mode def
R31461:31484 compcert.flocq.Calc.Round <> truncate_correct_partial thm
R31461:31484 compcert.flocq.Calc.Round <> truncate_correct_partial thm
R31519:31526 compcert.flocq.Calc.Round <> truncate def
R31540:31540 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31548:31549 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31552:31553 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31556:31556 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31541:31544 Coq.Numbers.BinNums <> Zpos constr
R31535:31538 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R31528:31533 compcert.flocq.Core.Zaux <> radix2 def
R31519:31526 compcert.flocq.Calc.Round <> truncate def
R31540:31540 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31548:31549 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31552:31553 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31556:31556 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31541:31544 Coq.Numbers.BinNums <> Zpos constr
R31535:31538 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R31528:31533 compcert.flocq.Core.Zaux <> radix2 def
R31586:31609 compcert.flocq.IEEE754.Binary <> loc_of_shr_record_of_loc thm
R31612:31634 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R31586:31609 compcert.flocq.IEEE754.Binary <> loc_of_shr_record_of_loc thm
R31586:31609 compcert.flocq.IEEE754.Binary <> loc_of_shr_record_of_loc thm
R31612:31634 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R31612:31634 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R31649:31659 compcert.flocq.IEEE754.Binary <> choice_mode def
R31664:31671 compcert.flocq.Core.Raux <> Rlt_bool def
R31649:31659 compcert.flocq.IEEE754.Binary <> choice_mode def
R31664:31671 compcert.flocq.Core.Raux <> Rlt_bool def
R31736:31739 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R31736:31739 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R31769:31779 compcert.flocq.IEEE754.Binary <> choice_mode def
R31782:31790 compcert.flocq.Calc.Round <> cond_incr def
R31814:31822 Coq.ZArith.BinInt Z le_refl thm
R31850:31853 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R31850:31853 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R31901:31908 Coq.ZArith.Zorder <> Zle_succ syndef
R31918:31926 Coq.ZArith.BinInt Z le_refl thm
R31814:31822 Coq.ZArith.BinInt Z le_refl thm
R31814:31822 Coq.ZArith.BinInt Z le_refl thm
R31814:31822 Coq.ZArith.BinInt Z le_refl thm
R31814:31822 Coq.ZArith.BinInt Z le_refl thm
R31814:31822 Coq.ZArith.BinInt Z le_refl thm
R31901:31908 Coq.ZArith.Zorder <> Zle_succ syndef
R31918:31926 Coq.ZArith.BinInt Z le_refl thm
R31901:31908 Coq.ZArith.Zorder <> Zle_succ syndef
R31918:31926 Coq.ZArith.BinInt Z le_refl thm
R31901:31908 Coq.ZArith.Zorder <> Zle_succ syndef
R31918:31926 Coq.ZArith.BinInt Z le_refl thm
R31901:31908 Coq.ZArith.Zorder <> Zle_succ syndef
R31918:31926 Coq.ZArith.BinInt Z le_refl thm
R31988:31990 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31947:31950 Coq.Reals.Rbasic_fun <> Rabs def
R31953:31957 compcert.flocq.Core.Generic_fmt <> round def
R31972:31981 compcert.flocq.IEEE754.Binary <> round_mode def
R31966:31969 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R31959:31964 compcert.flocq.Core.Zaux <> radix2 def
R31991:31993 compcert.flocq.Core.Defs <> F2R def
R31996:32000 compcert.flocq.Core.Defs <> Float constr
R32002:32007 compcert.flocq.Core.Zaux <> radix2 def
R31988:31990 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31947:31950 Coq.Reals.Rbasic_fun <> Rabs def
R31953:31957 compcert.flocq.Core.Generic_fmt <> round def
R31972:31981 compcert.flocq.IEEE754.Binary <> round_mode def
R31966:31969 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R31959:31964 compcert.flocq.Core.Zaux <> radix2 def
R31991:31993 compcert.flocq.Core.Defs <> F2R def
R31996:32000 compcert.flocq.Core.Defs <> Float constr
R32002:32007 compcert.flocq.Core.Zaux <> radix2 def
R32039:32046 Coq.ZArith.BinInt Z abs_eq thm
R32039:32046 Coq.ZArith.BinInt Z abs_eq thm
R32039:32046 Coq.ZArith.BinInt Z abs_eq thm
R32039:32046 Coq.ZArith.BinInt Z abs_eq thm
R32063:32067 Coq.ZArith.BinInt Z abs def
R32080:32084 Coq.ZArith.BinInt Z abs def
R32087:32095 compcert.flocq.Core.Zaux <> cond_Zopp def
R32098:32105 compcert.flocq.Core.Raux <> Rlt_bool def
R32063:32067 Coq.ZArith.BinInt Z abs def
R32080:32084 Coq.ZArith.BinInt Z abs def
R32087:32095 compcert.flocq.Core.Zaux <> cond_Zopp def
R32098:32105 compcert.flocq.Core.Raux <> Rlt_bool def
R32127:32134 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R32127:32134 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R32127:32134 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R32147:32153 Coq.Init.Logic <> f_equal thm
R32147:32153 Coq.Init.Logic <> f_equal thm
R32162:32174 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R32162:32174 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R32183:32192 Coq.ZArith.BinInt Z le_trans thm
R32183:32192 Coq.ZArith.BinInt Z le_trans thm
R32216:32226 Coq.ZArith.Zorder <> Zlt_succ_le thm
R32216:32226 Coq.ZArith.Zorder <> Zlt_succ_le thm
R32249:32254 compcert.flocq.Core.Zaux <> radix2 def
R32235:32242 compcert.flocq.Core.Float_prop <> gt_0_F2R thm
R32249:32254 compcert.flocq.Core.Zaux <> radix2 def
R32235:32242 compcert.flocq.Core.Float_prop <> gt_0_F2R thm
R32290:32297 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R32266:32277 Coq.Reals.RIneq <> Rle_lt_trans thm
R32290:32297 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R32266:32277 Coq.Reals.RIneq <> Rle_lt_trans thm
R32310:32314 Coq.Init.Logic <> proj2 thm
R32317:32338 compcert.flocq.Calc.Bracket <> inbetween_float_bounds thm
R32310:32314 Coq.Init.Logic <> proj2 thm
R32317:32338 compcert.flocq.Calc.Bracket <> inbetween_float_bounds thm
R32377:32391 compcert.flocq.Calc.Bracket <> inbetween_float def
R32451:32459 compcert.flocq.Calc.Bracket <> loc_Exact constr
R32408:32411 Coq.Reals.Rbasic_fun <> Rabs def
R32414:32418 compcert.flocq.Core.Generic_fmt <> round def
R32433:32442 compcert.flocq.IEEE754.Binary <> round_mode def
R32427:32430 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R32420:32425 compcert.flocq.Core.Zaux <> radix2 def
R32393:32398 compcert.flocq.Core.Zaux <> radix2 def
R32377:32391 compcert.flocq.Calc.Bracket <> inbetween_float def
R32451:32459 compcert.flocq.Calc.Bracket <> loc_Exact constr
R32408:32411 Coq.Reals.Rbasic_fun <> Rabs def
R32414:32418 compcert.flocq.Core.Generic_fmt <> round def
R32433:32442 compcert.flocq.IEEE754.Binary <> round_mode def
R32427:32430 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R32420:32425 compcert.flocq.Core.Zaux <> radix2 def
R32393:32398 compcert.flocq.Core.Zaux <> radix2 def
R32473:32487 compcert.flocq.Calc.Bracket <> inbetween_Exact constr
R32473:32487 compcert.flocq.Calc.Bracket <> inbetween_Exact constr
R32542:32553 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R32542:32553 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R32542:32553 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R32542:32553 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R32565:32573 Coq.ZArith.BinInt Z le_refl thm
R32565:32573 Coq.ZArith.BinInt Z le_refl thm
R32588:32597 compcert.flocq.Calc.Round <> truncate_0 thm
R32614:32622 compcert.flocq.Calc.Bracket <> loc_Exact constr
R32606:32609 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R32599:32604 compcert.flocq.Core.Zaux <> radix2 def
R32588:32597 compcert.flocq.Calc.Round <> truncate_0 thm
R32614:32622 compcert.flocq.Calc.Bracket <> loc_Exact constr
R32606:32609 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R32599:32604 compcert.flocq.Core.Zaux <> radix2 def
R32636:32643 compcert.flocq.Calc.Round <> truncate def
R32657:32657 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32660:32661 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32664:32665 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32675:32675 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32658:32659 Coq.Numbers.BinNums <> Z0 constr
R32666:32674 compcert.flocq.Calc.Bracket <> loc_Exact constr
R32652:32655 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R32645:32650 compcert.flocq.Core.Zaux <> radix2 def
R32636:32643 compcert.flocq.Calc.Round <> truncate def
R32657:32657 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32660:32661 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32664:32665 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32675:32675 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32658:32659 Coq.Numbers.BinNums <> Z0 constr
R32666:32674 compcert.flocq.Calc.Bracket <> loc_Exact constr
R32652:32655 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R32645:32650 compcert.flocq.Core.Zaux <> radix2 def
R32705:32727 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R32705:32727 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R32705:32727 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R32777:32789 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R32777:32789 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R32777:32789 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R32777:32789 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R32812:32817 Coq.Init.Logic <> sym_eq syndef
R32812:32817 Coq.Init.Logic <> sym_eq syndef
R32825:32832 compcert.flocq.Core.Raux <> Rlt_bool def
R32842:32846 compcert.flocq.Core.Float_prop <> F2R_0 thm
R32825:32832 compcert.flocq.Core.Raux <> Rlt_bool def
R32842:32846 compcert.flocq.Core.Float_prop <> F2R_0 thm
R32842:32846 compcert.flocq.Core.Float_prop <> F2R_0 thm
R32860:32867 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R32870:32882 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R32885:32889 compcert.flocq.Core.Float_prop <> F2R_0 thm
R32860:32867 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R32860:32867 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R32870:32882 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R32870:32882 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R32885:32889 compcert.flocq.Core.Float_prop <> F2R_0 thm
R32885:32889 compcert.flocq.Core.Float_prop <> F2R_0 thm
R32898:32906 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R32898:32906 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R32940:32943 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R32944:32947 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R32975:32977 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R32950:32956 compcert.flocq.Core.Digits <> Zdigits def
R32966:32969 Coq.Numbers.BinNums <> Zpos constr
R32958:32963 compcert.flocq.Core.Zaux <> radix2 def
R32940:32943 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R32944:32947 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R32975:32977 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R32950:32956 compcert.flocq.Core.Digits <> Zdigits def
R32966:32969 Coq.Numbers.BinNums <> Zpos constr
R32958:32963 compcert.flocq.Core.Zaux <> radix2 def
R32998:33012 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R33022:33028 compcert.flocq.Core.Raux <> mag_abs thm
R32998:33012 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R32998:33012 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R32998:33012 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R33022:33028 compcert.flocq.Core.Raux <> mag_abs thm
R33022:33028 compcert.flocq.Core.Raux <> mag_abs thm
R33069:33076 compcert.flocq.Core.Generic_fmt <> cexp_abs thm
R33069:33076 compcert.flocq.Core.Generic_fmt <> cexp_abs thm
R33069:33076 compcert.flocq.Core.Generic_fmt <> cexp_abs thm
R33085:33088 compcert.flocq.Core.Generic_fmt <> cexp def
R33103:33107 compcert.flocq.Core.Generic_fmt <> round def
R33122:33131 compcert.flocq.IEEE754.Binary <> round_mode def
R33116:33119 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R33109:33114 compcert.flocq.Core.Zaux <> radix2 def
R33097:33100 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R33090:33095 compcert.flocq.Core.Zaux <> radix2 def
R33085:33088 compcert.flocq.Core.Generic_fmt <> cexp def
R33103:33107 compcert.flocq.Core.Generic_fmt <> round def
R33122:33131 compcert.flocq.IEEE754.Binary <> round_mode def
R33116:33119 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R33109:33114 compcert.flocq.Core.Zaux <> radix2 def
R33097:33100 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R33090:33095 compcert.flocq.Core.Zaux <> radix2 def
R33147:33159 compcert.flocq.Core.Generic_fmt <> cexp_round_ge thm
R33147:33159 compcert.flocq.Core.Generic_fmt <> cexp_round_ge thm
R33183:33190 compcert.flocq.Core.Raux <> Rlt_bool def
R33183:33190 compcert.flocq.Core.Raux <> Rlt_bool def
R33204:33213 Coq.Reals.RIneq <> Rlt_not_eq thm
R33204:33213 Coq.Reals.RIneq <> Rlt_not_eq thm
R33226:33233 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R33226:33233 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R33242:33251 Coq.Reals.RIneq <> Rgt_not_eq thm
R33242:33251 Coq.Reals.RIneq <> Rgt_not_eq thm
R33264:33271 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R33264:33271 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R33285:33308 compcert.flocq.Calc.Round <> truncate_correct_partial thm
R33285:33308 compcert.flocq.Calc.Round <> truncate_correct_partial thm
R33359:33366 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R33359:33366 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R33380:33402 compcert.flocq.Calc.Round <> truncate_correct_format thm
R33417:33420 Coq.Numbers.BinNums <> Zpos constr
R33411:33414 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R33404:33409 compcert.flocq.Core.Zaux <> radix2 def
R33380:33402 compcert.flocq.Calc.Round <> truncate_correct_format thm
R33417:33420 Coq.Numbers.BinNums <> Zpos constr
R33411:33414 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R33404:33409 compcert.flocq.Core.Zaux <> radix2 def
R33465:33476 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R33465:33476 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R33465:33476 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R33465:33476 compcert.flocq.IEEE754.Binary <> shr_truncate thm
R33498:33505 compcert.flocq.Calc.Round <> truncate def
R33519:33519 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33528:33529 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33532:33533 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33543:33543 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33520:33523 Coq.Numbers.BinNums <> Zpos constr
R33534:33542 compcert.flocq.Calc.Bracket <> loc_Exact constr
R33514:33517 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R33507:33512 compcert.flocq.Core.Zaux <> radix2 def
R33498:33505 compcert.flocq.Calc.Round <> truncate def
R33519:33519 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33528:33529 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33532:33533 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33543:33543 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33520:33523 Coq.Numbers.BinNums <> Zpos constr
R33534:33542 compcert.flocq.Calc.Bracket <> loc_Exact constr
R33514:33517 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R33507:33512 compcert.flocq.Core.Zaux <> radix2 def
R33573:33595 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R33573:33595 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R33573:33595 compcert.flocq.IEEE754.Binary <> shr_m_shr_record_of_loc thm
R33651:33660 Coq.Reals.RIneq <> Rgt_not_eq thm
R33651:33660 Coq.Reals.RIneq <> Rgt_not_eq thm
R33686:33690 compcert.flocq.Core.Float_prop <> F2R_0 thm
R33686:33690 compcert.flocq.Core.Float_prop <> F2R_0 thm
R33686:33690 compcert.flocq.Core.Float_prop <> F2R_0 thm
R33703:33710 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R33703:33710 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R33721:33733 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R33740:33752 compcert.flocq.Core.Raux <> abs_cond_Ropp thm
R33758:33764 compcert.flocq.Calc.Operations <> F2R_abs thm
R33721:33733 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R33721:33733 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R33740:33752 compcert.flocq.Core.Raux <> abs_cond_Ropp thm
R33740:33752 compcert.flocq.Core.Raux <> abs_cond_Ropp thm
R33758:33764 compcert.flocq.Calc.Operations <> F2R_abs thm
R33758:33764 compcert.flocq.Calc.Operations <> F2R_abs thm
R33789:33796 Coq.ZArith.Zbool <> Zle_bool syndef
R33806:33808 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R33802:33805 compcert.flocq.IEEE754.Binary <> Binary.emax var
R33809:33812 compcert.flocq.IEEE754.Binary <> Binary.prec var
R33789:33796 Coq.ZArith.Zbool <> Zle_bool syndef
R33806:33808 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R33802:33805 compcert.flocq.IEEE754.Binary <> Binary.emax var
R33809:33812 compcert.flocq.IEEE754.Binary <> Binary.prec var
R33851:33853 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33838:33844 compcert.flocq.IEEE754.Binary <> bounded def
R33854:33857 Coq.Init.Datatypes <> true constr
R33851:33853 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33838:33844 compcert.flocq.IEEE754.Binary <> bounded def
R33854:33857 Coq.Init.Datatypes <> true constr
R33867:33881 Coq.Init.Datatypes <> andb_true_intro thm
R33867:33881 Coq.Init.Datatypes <> andb_true_intro thm
R33898:33915 compcert.flocq.IEEE754.Binary <> canonical_mantissa def
R33924:33936 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R33924:33936 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R33947:33962 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R33947:33962 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R33947:33962 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R33976:33990 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R33976:33990 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R33976:33990 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R33976:33990 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R33999:34004 Coq.Init.Logic <> sym_eq syndef
R33999:34004 Coq.Init.Logic <> sym_eq syndef
R34061:34064 Coq.Init.Logic <> conj constr
R34061:34064 Coq.Init.Logic <> conj constr
R34078:34090 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R34078:34090 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R34078:34090 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R34078:34090 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R34113:34125 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R34113:34125 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R34138:34152 compcert.flocq.IEEE754.Binary <> bounded_lt_emax thm
R34138:34152 compcert.flocq.IEEE754.Binary <> bounded_lt_emax thm
R34164:34177 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R34182:34185 compcert.flocq.Core.Raux <> bpow def
R34194:34197 compcert.flocq.IEEE754.Binary <> Binary.emax var
R34187:34192 compcert.flocq.Core.Zaux <> radix2 def
R34164:34177 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R34182:34185 compcert.flocq.Core.Raux <> bpow def
R34194:34197 compcert.flocq.IEEE754.Binary <> Binary.emax var
R34187:34192 compcert.flocq.Core.Zaux <> radix2 def
R34164:34177 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R34182:34185 compcert.flocq.Core.Raux <> bpow def
R34194:34197 compcert.flocq.IEEE754.Binary <> Binary.emax var
R34187:34192 compcert.flocq.Core.Zaux <> radix2 def
R34164:34177 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R34182:34185 compcert.flocq.Core.Raux <> bpow def
R34194:34197 compcert.flocq.IEEE754.Binary <> Binary.emax var
R34187:34192 compcert.flocq.Core.Zaux <> radix2 def
R34210:34213 Coq.Init.Logic <> conj constr
R34218:34227 Coq.Init.Logic <> refl_equal syndef
R34210:34213 Coq.Init.Logic <> conj constr
R34218:34227 Coq.Init.Logic <> refl_equal syndef
R34241:34255 compcert.flocq.IEEE754.Binary <> binary_overflow def
R34263:34277 compcert.flocq.IEEE754.Binary <> overflow_to_inf def
R34263:34277 compcert.flocq.IEEE754.Binary <> overflow_to_inf def
R34286:34295 Coq.Init.Logic <> refl_equal syndef
R34286:34295 Coq.Init.Logic <> refl_equal syndef
R34305:34316 compcert.flocq.IEEE754.Binary <> valid_binary def
R34319:34325 compcert.flocq.IEEE754.Binary <> bounded def
R34336:34348 Coq.ZArith.Zbool <> Zle_bool_refl syndef
R34336:34348 Coq.ZArith.Zbool <> Zle_bool_refl syndef
R34336:34348 Coq.ZArith.Zbool <> Zle_bool_refl syndef
R34359:34374 Coq.Bool.Bool <> andb_true_r thm
R34359:34374 Coq.Bool.Bool <> andb_true_r thm
R34359:34374 Coq.Bool.Bool <> andb_true_r thm
R34383:34395 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R34383:34395 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R34406:34421 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R34406:34421 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R34406:34421 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R34433:34439 compcert.flocq.Core.Digits <> Zdigits def
R34449:34452 Coq.Numbers.BinNums <> Zpos constr
R34475:34477 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R34462:34467 Coq.ZArith.Zpow_def <> Zpower syndef
R34471:34474 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34488:34491 Coq.Numbers.BinNums <> Zpos constr
R34507:34508 Coq.Numbers.BinNums <> xH constr
R34441:34446 compcert.flocq.Core.Zaux <> radix2 def
R34522:34525 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34433:34439 compcert.flocq.Core.Digits <> Zdigits def
R34449:34452 Coq.Numbers.BinNums <> Zpos constr
R34475:34477 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R34462:34467 Coq.ZArith.Zpow_def <> Zpower syndef
R34471:34474 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34488:34491 Coq.Numbers.BinNums <> Zpos constr
R34507:34508 Coq.Numbers.BinNums <> xH constr
R34441:34446 compcert.flocq.Core.Zaux <> radix2 def
R34522:34525 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34535:34538 compcert.flocq.IEEE754.Binary <> fexp vardef
R34541:34547 compcert.flocq.Core.FLT <> FLT_exp def
R34550:34553 compcert.flocq.IEEE754.Binary <> emin vardef
R34568:34576 compcert.flocq.Core.FLX <> prec_gt_0 def
R34578:34581 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34568:34576 compcert.flocq.Core.FLX <> prec_gt_0 def
R34578:34581 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34630:34638 compcert.flocq.Core.Zaux <> radix_val proj
R34640:34645 compcert.flocq.Core.Zaux <> radix2 def
R34630:34638 compcert.flocq.Core.Zaux <> radix_val proj
R34640:34645 compcert.flocq.Core.Zaux <> radix2 def
R34676:34678 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R34658:34663 Coq.ZArith.Zpow_def <> Zpower syndef
R34672:34675 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34665:34670 compcert.flocq.Core.Zaux <> radix2 def
R34676:34678 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R34658:34663 Coq.ZArith.Zpow_def <> Zpower syndef
R34672:34675 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34665:34670 compcert.flocq.Core.Zaux <> radix2 def
R34712:34722 compcert.flocq.Core.Zaux <> Zpower_gt_1 thm
R34737:34745 compcert.flocq.Core.FLX <> prec_gt_0 def
R34747:34750 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34731:34734 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34724:34729 compcert.flocq.Core.Zaux <> radix2 def
R34712:34722 compcert.flocq.Core.Zaux <> Zpower_gt_1 thm
R34737:34745 compcert.flocq.Core.FLX <> prec_gt_0 def
R34747:34750 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34731:34734 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34724:34729 compcert.flocq.Core.Zaux <> radix2 def
R34789:34799 Coq.ZArith.Zorder <> Zle_antisym syndef
R34789:34799 Coq.ZArith.Zorder <> Zle_antisym syndef
R34815:34817 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R34811:34813 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R34807:34810 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34818:34824 compcert.flocq.Core.Digits <> Zdigits def
R34834:34837 Coq.Numbers.BinNums <> Zpos constr
R34826:34831 compcert.flocq.Core.Zaux <> radix2 def
R34815:34817 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R34811:34813 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R34807:34810 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34818:34824 compcert.flocq.Core.Digits <> Zdigits def
R34834:34837 Coq.Numbers.BinNums <> Zpos constr
R34826:34831 compcert.flocq.Core.Zaux <> radix2 def
R34867:34883 compcert.flocq.Core.Digits <> Zdigits_gt_Zpower thm
R34867:34883 compcert.flocq.Core.Digits <> Zdigits_gt_Zpower thm
R34943:34945 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R34919:34924 Coq.ZArith.Zpow_def <> Zpower syndef
R34938:34940 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R34934:34937 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34926:34931 compcert.flocq.Core.Zaux <> radix2 def
R34946:34951 Coq.ZArith.Zpow_def <> Zpower syndef
R34960:34963 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34953:34958 compcert.flocq.Core.Zaux <> radix2 def
R34943:34945 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R34919:34924 Coq.ZArith.Zpow_def <> Zpower syndef
R34938:34940 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R34934:34937 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34926:34931 compcert.flocq.Core.Zaux <> radix2 def
R34946:34951 Coq.ZArith.Zpow_def <> Zpower syndef
R34960:34963 compcert.flocq.IEEE754.Binary <> Binary.prec var
R34953:34958 compcert.flocq.Core.Zaux <> radix2 def
R34990:34995 Coq.Reals.RIneq <> lt_IZR thm
R34990:34995 Coq.Reals.RIneq <> lt_IZR thm
R35008:35017 compcert.flocq.Core.Raux <> IZR_Zpower thm
R35008:35017 compcert.flocq.Core.Raux <> IZR_Zpower thm
R35008:35017 compcert.flocq.Core.Raux <> IZR_Zpower thm
R35008:35017 compcert.flocq.Core.Raux <> IZR_Zpower thm
R35008:35017 compcert.flocq.Core.Raux <> IZR_Zpower thm
R35008:35017 compcert.flocq.Core.Raux <> IZR_Zpower thm
R35033:35043 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R35033:35043 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R35052:35058 compcert.flocq.Core.Raux <> bpow_lt thm
R35052:35058 compcert.flocq.Core.Raux <> bpow_lt thm
R35067:35074 Coq.ZArith.Zorder <> Zlt_pred syndef
R35067:35074 Coq.ZArith.Zorder <> Zlt_pred syndef
R35087:35101 Coq.ZArith.Zorder <> Zlt_0_le_0_pred thm
R35087:35101 Coq.ZArith.Zorder <> Zlt_0_le_0_pred thm
R35110:35126 compcert.flocq.Core.Digits <> Zdigits_le_Zpower thm
R35110:35126 compcert.flocq.Core.Digits <> Zdigits_le_Zpower thm
R35163:35170 Coq.ZArith.Zorder <> Zlt_pred syndef
R35163:35170 Coq.ZArith.Zorder <> Zlt_pred syndef
R35198:35208 compcert.flocq.Core.Zaux <> Zpower_gt_1 thm
R35220:35228 compcert.flocq.Core.FLX <> prec_gt_0 def
R35230:35233 compcert.flocq.IEEE754.Binary <> Binary.prec var
R35210:35215 compcert.flocq.Core.Zaux <> radix2 def
R35198:35208 compcert.flocq.Core.Zaux <> Zpower_gt_1 thm
R35220:35228 compcert.flocq.Core.FLX <> prec_gt_0 def
R35230:35233 compcert.flocq.IEEE754.Binary <> Binary.prec var
R35210:35215 compcert.flocq.Core.Zaux <> radix2 def
R35270:35279 Coq.Reals.RIneq <> Rnot_lt_le thm
R35270:35279 Coq.Reals.RIneq <> Rnot_lt_le thm
R35305:35314 Coq.Init.Logic <> refl_equal syndef
R35317:35323 compcert.flocq.IEEE754.Binary <> bounded def
R35305:35314 Coq.Init.Logic <> refl_equal syndef
R35317:35323 compcert.flocq.IEEE754.Binary <> bounded def
R35341:35347 compcert.flocq.IEEE754.Binary <> bounded def
R35376:35392 Coq.Bool.Bool <> andb_false_r thm
R35376:35392 Coq.Bool.Bool <> andb_false_r thm
R35376:35392 Coq.Bool.Bool <> andb_false_r thm
R35403:35427 compcert.flocq.IEEE754.Binary <> bounded_canonical_lt_emax thm
R35403:35427 compcert.flocq.IEEE754.Binary <> bounded_canonical_lt_emax thm
R35403:35427 compcert.flocq.IEEE754.Binary <> bounded_canonical_lt_emax thm
R35403:35427 compcert.flocq.IEEE754.Binary <> bounded_canonical_lt_emax thm
R35466:35474 compcert.flocq.Core.Generic_fmt <> canonical def
R35501:35510 Coq.Reals.RIneq <> Rgt_not_eq thm
R35501:35510 Coq.Reals.RIneq <> Rgt_not_eq thm
R35549:35550 Coq.Reals.Rdefinitions <> R0 defax
R35534:35542 Coq.Reals.Raxioms <> Rlt_trans prfax
R35549:35550 Coq.Reals.Rdefinitions <> R0 defax
R35534:35542 Coq.Reals.Raxioms <> Rlt_trans prfax
R35563:35570 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R35563:35570 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R35583:35590 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R35583:35590 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R35614:35631 compcert.flocq.Core.Generic_fmt <> generic_format_abs thm
R35614:35631 compcert.flocq.Core.Generic_fmt <> generic_format_abs thm
R35642:35661 compcert.flocq.Core.Generic_fmt <> generic_format_round thm
R35642:35661 compcert.flocq.Core.Generic_fmt <> generic_format_round thm
R35691:35700 Coq.Reals.RIneq <> Rgt_not_eq thm
R35691:35700 Coq.Reals.RIneq <> Rgt_not_eq thm
R35742:35743 Coq.Reals.Rdefinitions <> R0 defax
R35724:35735 Coq.Reals.RIneq <> Rlt_le_trans thm
R35742:35743 Coq.Reals.Rdefinitions <> R0 defax
R35724:35735 Coq.Reals.RIneq <> Rlt_le_trans thm
R35756:35763 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R35756:35763 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R35772:35779 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R35772:35779 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R35818:35822 Coq.Init.Logic <> proj1 thm
R35825:35846 compcert.flocq.Calc.Bracket <> inbetween_float_bounds thm
R35794:35805 Coq.Reals.RIneq <> Rlt_le_trans thm
R35818:35822 Coq.Init.Logic <> proj1 thm
R35825:35846 compcert.flocq.Calc.Bracket <> inbetween_float_bounds thm
R35794:35805 Coq.Reals.RIneq <> Rlt_le_trans thm
R35874:35881 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R35874:35881 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R35935:35955 compcert.flocq.Calc.Round <> inbetween_int_NE_sign thm
R35935:35955 compcert.flocq.Calc.Round <> inbetween_int_NE_sign thm
R35964:35984 compcert.flocq.Calc.Round <> inbetween_int_ZR_sign thm
R35964:35984 compcert.flocq.Calc.Round <> inbetween_int_ZR_sign thm
R35993:36013 compcert.flocq.Calc.Round <> inbetween_int_DN_sign thm
R35993:36013 compcert.flocq.Calc.Round <> inbetween_int_DN_sign thm
R36022:36042 compcert.flocq.Calc.Round <> inbetween_int_UP_sign thm
R36022:36042 compcert.flocq.Calc.Round <> inbetween_int_UP_sign thm
R36051:36071 compcert.flocq.Calc.Round <> inbetween_int_NA_sign thm
R36051:36071 compcert.flocq.Calc.Round <> inbetween_int_NA_sign thm
prf 36109:36125 <> Bmult_correct_aux
R36168:36170 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36155:36161 compcert.flocq.IEEE754.Binary <> bounded def
R36166:36167 compcert.flocq.IEEE754.Binary <> ex var
R36163:36164 compcert.flocq.IEEE754.Binary <> mx var
R36171:36174 Coq.Init.Datatypes <> true constr
R36205:36207 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36192:36198 compcert.flocq.IEEE754.Binary <> bounded def
R36203:36204 compcert.flocq.IEEE754.Binary <> ey var
R36200:36201 compcert.flocq.IEEE754.Binary <> my var
R36208:36211 Coq.Init.Datatypes <> true constr
R36226:36228 compcert.flocq.Core.Defs <> F2R def
R36231:36235 compcert.flocq.Core.Defs <> Float constr
R36269:36270 compcert.flocq.IEEE754.Binary <> ex var
R36245:36253 compcert.flocq.Core.Zaux <> cond_Zopp def
R36259:36262 Coq.Numbers.BinNums <> Zpos constr
R36264:36265 compcert.flocq.IEEE754.Binary <> mx var
R36255:36256 compcert.flocq.IEEE754.Binary <> sx var
R36237:36242 compcert.flocq.Core.Zaux <> radix2 def
R36287:36289 compcert.flocq.Core.Defs <> F2R def
R36292:36296 compcert.flocq.Core.Defs <> Float constr
R36330:36331 compcert.flocq.IEEE754.Binary <> ey var
R36306:36314 compcert.flocq.Core.Zaux <> cond_Zopp def
R36320:36323 Coq.Numbers.BinNums <> Zpos constr
R36325:36326 compcert.flocq.IEEE754.Binary <> my var
R36316:36317 compcert.flocq.IEEE754.Binary <> sy var
R36298:36303 compcert.flocq.Core.Zaux <> radix2 def
R36348:36363 compcert.flocq.IEEE754.Binary <> binary_round_aux def
R36407:36415 compcert.flocq.Calc.Bracket <> loc_Exact constr
R36400:36402 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R36398:36399 compcert.flocq.IEEE754.Binary <> ex var
R36403:36404 compcert.flocq.IEEE754.Binary <> ey var
R36381:36384 Coq.Numbers.BinNums <> Zpos constr
R36389:36391 Coq.PArith.BinPos <> ::positive_scope:x_'*'_x not
R36387:36388 compcert.flocq.IEEE754.Binary <> mx var
R36392:36393 compcert.flocq.IEEE754.Binary <> my var
R36368:36371 Coq.Init.Datatypes <> xorb def
R36376:36377 compcert.flocq.IEEE754.Binary <> sy var
R36373:36374 compcert.flocq.IEEE754.Binary <> sx var
R36365:36365 compcert.flocq.IEEE754.Binary <> m var
R36443:36448 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R36436:36438 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36422:36433 compcert.flocq.IEEE754.Binary <> valid_binary def
R36435:36435 compcert.flocq.IEEE754.Binary <> z var
R36439:36442 Coq.Init.Datatypes <> true constr
R36452:36459 compcert.flocq.Core.Raux <> Rlt_bool def
R36512:36515 compcert.flocq.Core.Raux <> bpow def
R36524:36527 compcert.flocq.IEEE754.Binary <> Binary.emax var
R36517:36522 compcert.flocq.Core.Zaux <> radix2 def
R36462:36465 Coq.Reals.Rbasic_fun <> Rabs def
R36468:36472 compcert.flocq.Core.Generic_fmt <> round def
R36503:36505 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R36502:36502 compcert.flocq.IEEE754.Binary <> x var
R36506:36506 compcert.flocq.IEEE754.Binary <> y var
R36487:36496 compcert.flocq.IEEE754.Binary <> round_mode def
R36498:36498 compcert.flocq.IEEE754.Binary <> m var
R36481:36484 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R36474:36479 compcert.flocq.Core.Zaux <> radix2 def
R36663:36665 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36662:36662 compcert.flocq.IEEE754.Binary <> z var
R36666:36680 compcert.flocq.IEEE754.Binary <> binary_overflow def
R36685:36688 Coq.Init.Datatypes <> xorb def
R36693:36694 compcert.flocq.IEEE754.Binary <> sy var
R36690:36691 compcert.flocq.IEEE754.Binary <> sx var
R36682:36682 compcert.flocq.IEEE754.Binary <> m var
R36595:36602 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R36552:36554 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36539:36542 compcert.flocq.IEEE754.Binary <> FF2R def
R36551:36551 compcert.flocq.IEEE754.Binary <> z var
R36544:36549 compcert.flocq.Core.Zaux <> radix2 def
R36555:36559 compcert.flocq.Core.Generic_fmt <> round def
R36590:36592 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R36589:36589 compcert.flocq.IEEE754.Binary <> x var
R36593:36593 compcert.flocq.IEEE754.Binary <> y var
R36574:36583 compcert.flocq.IEEE754.Binary <> round_mode def
R36585:36585 compcert.flocq.IEEE754.Binary <> m var
R36568:36571 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R36561:36566 compcert.flocq.Core.Zaux <> radix2 def
R36624:36627 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R36617:36619 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36603:36614 compcert.flocq.IEEE754.Binary <> is_finite_FF def
R36616:36616 compcert.flocq.IEEE754.Binary <> z var
R36620:36623 Coq.Init.Datatypes <> true constr
R36637:36639 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36628:36634 compcert.flocq.IEEE754.Binary <> sign_FF def
R36636:36636 compcert.flocq.IEEE754.Binary <> z var
R36640:36643 Coq.Init.Datatypes <> xorb def
R36648:36649 compcert.flocq.IEEE754.Binary <> sy var
R36645:36646 compcert.flocq.IEEE754.Binary <> sx var
R36767:36774 compcert.flocq.Calc.Operations <> F2R_mult thm
R36767:36774 compcert.flocq.Calc.Operations <> F2R_mult thm
R36767:36774 compcert.flocq.Calc.Operations <> F2R_mult thm
R36793:36796 Coq.Init.Datatypes <> xorb def
R36811:36818 compcert.flocq.Core.Raux <> Rlt_bool def
R36821:36823 compcert.flocq.Core.Defs <> F2R def
R36826:36830 compcert.flocq.Core.Defs <> Float constr
R36892:36894 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R36862:36864 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R36840:36848 compcert.flocq.Core.Zaux <> cond_Zopp def
R36854:36857 Coq.Numbers.BinNums <> Zpos constr
R36865:36873 compcert.flocq.Core.Zaux <> cond_Zopp def
R36879:36882 Coq.Numbers.BinNums <> Zpos constr
R36832:36837 compcert.flocq.Core.Zaux <> radix2 def
R36793:36796 Coq.Init.Datatypes <> xorb def
R36811:36818 compcert.flocq.Core.Raux <> Rlt_bool def
R36821:36823 compcert.flocq.Core.Defs <> F2R def
R36826:36830 compcert.flocq.Core.Defs <> Float constr
R36892:36894 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R36862:36864 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R36840:36848 compcert.flocq.Core.Zaux <> cond_Zopp def
R36854:36857 Coq.Numbers.BinNums <> Zpos constr
R36865:36873 compcert.flocq.Core.Zaux <> cond_Zopp def
R36879:36882 Coq.Numbers.BinNums <> Zpos constr
R36832:36837 compcert.flocq.Core.Zaux <> radix2 def
R36911:36934 compcert.flocq.IEEE754.Binary <> binary_round_aux_correct thm
R36911:36934 compcert.flocq.IEEE754.Binary <> binary_round_aux_correct thm
R36961:36967 compcert.flocq.Calc.Operations <> F2R_abs thm
R36961:36967 compcert.flocq.Calc.Operations <> F2R_abs thm
R36961:36967 compcert.flocq.Calc.Operations <> F2R_abs thm
R36976:36981 compcert.flocq.Core.Float_prop <> F2R_eq thm
R36976:36981 compcert.flocq.Core.Float_prop <> F2R_eq thm
R36992:37001 Coq.ZArith.Zabs <> Zabs_Zmult syndef
R36992:37001 Coq.ZArith.Zabs <> Zabs_Zmult syndef
R36992:37001 Coq.ZArith.Zabs <> Zabs_Zmult syndef
R37018:37030 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R37018:37030 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R37018:37030 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R37018:37030 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R37047:37050 Coq.Numbers.BinNums <> Zpos constr
R37055:37057 Coq.PArith.BinPos <> ::positive_scope:x_'*'_x not
R37076:37078 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R37069:37072 Coq.Numbers.BinNums <> Zpos constr
R37079:37082 Coq.Numbers.BinNums <> Zpos constr
R37047:37050 Coq.Numbers.BinNums <> Zpos constr
R37055:37057 Coq.PArith.BinPos <> ::positive_scope:x_'*'_x not
R37076:37078 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R37069:37072 Coq.Numbers.BinNums <> Zpos constr
R37079:37082 Coq.Numbers.BinNums <> Zpos constr
R37129:37132 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37167:37169 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37133:37136 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R37162:37164 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R37139:37145 compcert.flocq.Core.Digits <> Zdigits def
R37155:37158 Coq.Numbers.BinNums <> Zpos constr
R37160:37160 compcert.flocq.IEEE754.Binary <> m var
R37147:37152 compcert.flocq.Core.Zaux <> radix2 def
R37165:37165 compcert.flocq.IEEE754.Binary <> e var
R37170:37170 compcert.flocq.IEEE754.Binary <> e var
R37122:37124 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37111:37117 compcert.flocq.IEEE754.Binary <> bounded def
R37121:37121 compcert.flocq.IEEE754.Binary <> e var
R37119:37119 compcert.flocq.IEEE754.Binary <> m var
R37125:37128 Coq.Init.Datatypes <> true constr
R37129:37132 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37167:37169 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37133:37136 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R37162:37164 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R37139:37145 compcert.flocq.Core.Digits <> Zdigits def
R37155:37158 Coq.Numbers.BinNums <> Zpos constr
R37160:37160 compcert.flocq.IEEE754.Binary <> m var
R37147:37152 compcert.flocq.Core.Zaux <> radix2 def
R37165:37165 compcert.flocq.IEEE754.Binary <> e var
R37170:37170 compcert.flocq.IEEE754.Binary <> e var
R37122:37124 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37111:37117 compcert.flocq.IEEE754.Binary <> bounded def
R37121:37121 compcert.flocq.IEEE754.Binary <> e var
R37119:37119 compcert.flocq.IEEE754.Binary <> m var
R37125:37128 Coq.Init.Datatypes <> true constr
R37208:37216 Coq.Init.Datatypes <> andb_prop thm
R37208:37216 Coq.Init.Datatypes <> andb_prop thm
R37242:37252 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R37242:37252 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R37270:37285 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R37270:37285 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R37270:37285 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R37354:37357 compcert.flocq.IEEE754.Binary <> fexp vardef
R37360:37366 compcert.flocq.Core.FLT <> FLT_exp def
R37380:37394 compcert.flocq.Core.Digits <> Zdigits_mult_ge thm
R37414:37417 Coq.Numbers.BinNums <> Zpos constr
R37404:37407 Coq.Numbers.BinNums <> Zpos constr
R37396:37401 compcert.flocq.Core.Zaux <> radix2 def
R37380:37394 compcert.flocq.Core.Digits <> Zdigits_mult_ge thm
R37414:37417 Coq.Numbers.BinNums <> Zpos constr
R37404:37407 Coq.Numbers.BinNums <> Zpos constr
R37396:37401 compcert.flocq.Core.Zaux <> radix2 def
R37494:37505 compcert.flocq.Core.Digits <> Zdigits_gt_0 thm
R37515:37518 Coq.Numbers.BinNums <> Zpos constr
R37507:37512 compcert.flocq.Core.Zaux <> radix2 def
R37460:37471 compcert.flocq.Core.Digits <> Zdigits_gt_0 thm
R37481:37484 Coq.Numbers.BinNums <> Zpos constr
R37473:37478 compcert.flocq.Core.Zaux <> radix2 def
R37494:37505 compcert.flocq.Core.Digits <> Zdigits_gt_0 thm
R37515:37518 Coq.Numbers.BinNums <> Zpos constr
R37507:37512 compcert.flocq.Core.Zaux <> radix2 def
R37460:37471 compcert.flocq.Core.Digits <> Zdigits_gt_0 thm
R37481:37484 Coq.Numbers.BinNums <> Zpos constr
R37473:37478 compcert.flocq.Core.Zaux <> radix2 def
R37560:37566 compcert.flocq.Core.Digits <> Zdigits def
R37576:37579 Coq.Numbers.BinNums <> Zpos constr
R37568:37573 compcert.flocq.Core.Zaux <> radix2 def
R37587:37593 compcert.flocq.Core.Digits <> Zdigits def
R37603:37606 Coq.Numbers.BinNums <> Zpos constr
R37595:37600 compcert.flocq.Core.Zaux <> radix2 def
R37614:37620 compcert.flocq.Core.Digits <> Zdigits def
R37637:37639 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R37630:37633 Coq.Numbers.BinNums <> Zpos constr
R37640:37643 Coq.Numbers.BinNums <> Zpos constr
R37622:37627 compcert.flocq.Core.Zaux <> radix2 def
R37560:37566 compcert.flocq.Core.Digits <> Zdigits def
R37576:37579 Coq.Numbers.BinNums <> Zpos constr
R37568:37573 compcert.flocq.Core.Zaux <> radix2 def
R37587:37593 compcert.flocq.Core.Digits <> Zdigits def
R37603:37606 Coq.Numbers.BinNums <> Zpos constr
R37595:37600 compcert.flocq.Core.Zaux <> radix2 def
R37614:37620 compcert.flocq.Core.Digits <> Zdigits def
R37637:37639 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R37630:37633 Coq.Numbers.BinNums <> Zpos constr
R37640:37643 Coq.Numbers.BinNums <> Zpos constr
R37622:37627 compcert.flocq.Core.Zaux <> radix2 def
R37671:37674 compcert.flocq.IEEE754.Binary <> emin vardef
R37766:37779 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R37766:37779 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R37792:37799 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R37792:37799 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R37808:37820 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R37808:37820 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R37833:37840 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R37833:37840 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R37849:37861 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R37849:37861 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R37874:37881 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R37874:37881 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R37890:37903 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R37890:37903 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R37916:37923 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R37916:37923 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
def 37943:37947 <> Bmult
R37978:37978 compcert.flocq.IEEE754.Binary <> y var
R37975:37975 compcert.flocq.IEEE754.Binary <> x var
R37989:37996 compcert.flocq.IEEE754.Binary <> B754_nan constr
R38012:38019 compcert.flocq.IEEE754.Binary <> B754_nan constr
R38030:38038 compcert.flocq.IEEE754.Binary <> build_nan def
R38041:38048 compcert.flocq.IEEE754.Binary <> mult_nan var
R38052:38052 compcert.flocq.IEEE754.Binary <> y var
R38050:38050 compcert.flocq.IEEE754.Binary <> x var
R38030:38038 compcert.flocq.IEEE754.Binary <> build_nan def
R38041:38048 compcert.flocq.IEEE754.Binary <> mult_nan var
R38052:38052 compcert.flocq.IEEE754.Binary <> y var
R38050:38050 compcert.flocq.IEEE754.Binary <> x var
R38059:38071 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R38077:38089 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R38097:38109 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R38112:38115 Coq.Init.Datatypes <> xorb def
R38128:38140 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R38146:38156 compcert.flocq.IEEE754.Binary <> B754_finite constr
R38170:38182 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R38185:38188 Coq.Init.Datatypes <> xorb def
R38201:38211 compcert.flocq.IEEE754.Binary <> B754_finite constr
R38223:38235 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R38243:38255 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R38258:38261 Coq.Init.Datatypes <> xorb def
R38274:38286 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R38291:38299 compcert.flocq.IEEE754.Binary <> B754_zero constr
R38306:38314 compcert.flocq.IEEE754.Binary <> build_nan def
R38317:38324 compcert.flocq.IEEE754.Binary <> mult_nan var
R38328:38328 compcert.flocq.IEEE754.Binary <> y var
R38326:38326 compcert.flocq.IEEE754.Binary <> x var
R38335:38343 compcert.flocq.IEEE754.Binary <> B754_zero constr
R38348:38360 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R38367:38375 compcert.flocq.IEEE754.Binary <> build_nan def
R38378:38385 compcert.flocq.IEEE754.Binary <> mult_nan var
R38389:38389 compcert.flocq.IEEE754.Binary <> y var
R38387:38387 compcert.flocq.IEEE754.Binary <> x var
R38396:38406 compcert.flocq.IEEE754.Binary <> B754_finite constr
R38418:38426 compcert.flocq.IEEE754.Binary <> B754_zero constr
R38434:38442 compcert.flocq.IEEE754.Binary <> B754_zero constr
R38445:38448 Coq.Init.Datatypes <> xorb def
R38461:38469 compcert.flocq.IEEE754.Binary <> B754_zero constr
R38475:38485 compcert.flocq.IEEE754.Binary <> B754_finite constr
R38499:38507 compcert.flocq.IEEE754.Binary <> B754_zero constr
R38510:38513 Coq.Init.Datatypes <> xorb def
R38526:38534 compcert.flocq.IEEE754.Binary <> B754_zero constr
R38540:38548 compcert.flocq.IEEE754.Binary <> B754_zero constr
R38556:38564 compcert.flocq.IEEE754.Binary <> B754_zero constr
R38567:38570 Coq.Init.Datatypes <> xorb def
R38583:38593 compcert.flocq.IEEE754.Binary <> B754_finite constr
R38608:38618 compcert.flocq.IEEE754.Binary <> B754_finite constr
R38639:38642 compcert.flocq.IEEE754.Binary <> FF2B def
R38647:38651 Coq.Init.Logic <> proj1 thm
R38654:38670 compcert.flocq.IEEE754.Binary <> Bmult_correct_aux thm
R38672:38672 compcert.flocq.IEEE754.Binary <> m var
prf 38716:38728 <> Bmult_correct
R38762:38769 compcert.flocq.Core.Raux <> Rlt_bool def
R38830:38833 compcert.flocq.Core.Raux <> bpow def
R38842:38845 compcert.flocq.IEEE754.Binary <> Binary.emax var
R38835:38840 compcert.flocq.Core.Zaux <> radix2 def
R38772:38775 Coq.Reals.Rbasic_fun <> Rabs def
R38778:38782 compcert.flocq.Core.Generic_fmt <> round def
R38817:38819 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R38812:38814 compcert.flocq.IEEE754.Binary <> B2R def
R38816:38816 compcert.flocq.IEEE754.Binary <> x var
R38820:38822 compcert.flocq.IEEE754.Binary <> B2R def
R38824:38824 compcert.flocq.IEEE754.Binary <> y var
R38797:38806 compcert.flocq.IEEE754.Binary <> round_mode def
R38808:38808 compcert.flocq.IEEE754.Binary <> m var
R38791:38794 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R38784:38789 compcert.flocq.Core.Zaux <> radix2 def
R39160:39162 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39133:39136 compcert.flocq.IEEE754.Binary <> B2FF def
R39139:39143 compcert.flocq.IEEE754.Binary <> Bmult def
R39158:39158 compcert.flocq.IEEE754.Binary <> y var
R39156:39156 compcert.flocq.IEEE754.Binary <> x var
R39154:39154 compcert.flocq.IEEE754.Binary <> m var
R39145:39152 compcert.flocq.IEEE754.Binary <> mult_nan var
R39163:39177 compcert.flocq.IEEE754.Binary <> binary_overflow def
R39182:39185 Coq.Init.Datatypes <> xorb def
R39198:39202 compcert.flocq.IEEE754.Binary <> Bsign def
R39204:39204 compcert.flocq.IEEE754.Binary <> y var
R39188:39192 compcert.flocq.IEEE754.Binary <> Bsign def
R39194:39194 compcert.flocq.IEEE754.Binary <> x var
R39179:39179 compcert.flocq.IEEE754.Binary <> m var
R38934:38941 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R38883:38885 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38857:38859 compcert.flocq.IEEE754.Binary <> B2R def
R38862:38866 compcert.flocq.IEEE754.Binary <> Bmult def
R38881:38881 compcert.flocq.IEEE754.Binary <> y var
R38879:38879 compcert.flocq.IEEE754.Binary <> x var
R38877:38877 compcert.flocq.IEEE754.Binary <> m var
R38868:38875 compcert.flocq.IEEE754.Binary <> mult_nan var
R38886:38890 compcert.flocq.Core.Generic_fmt <> round def
R38925:38927 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R38920:38922 compcert.flocq.IEEE754.Binary <> B2R def
R38924:38924 compcert.flocq.IEEE754.Binary <> x var
R38928:38930 compcert.flocq.IEEE754.Binary <> B2R def
R38932:38932 compcert.flocq.IEEE754.Binary <> y var
R38905:38914 compcert.flocq.IEEE754.Binary <> round_mode def
R38916:38916 compcert.flocq.IEEE754.Binary <> m var
R38899:38902 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R38892:38897 compcert.flocq.Core.Zaux <> radix2 def
R39009:39017 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R39120:39120 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R38974:38976 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38942:38950 compcert.flocq.IEEE754.Binary <> is_finite def
R38953:38957 compcert.flocq.IEEE754.Binary <> Bmult def
R38972:38972 compcert.flocq.IEEE754.Binary <> y var
R38970:38970 compcert.flocq.IEEE754.Binary <> x var
R38968:38968 compcert.flocq.IEEE754.Binary <> m var
R38959:38966 compcert.flocq.IEEE754.Binary <> mult_nan var
R38977:38980 Coq.Init.Datatypes <> andb def
R38997:39005 compcert.flocq.IEEE754.Binary <> is_finite def
R39007:39007 compcert.flocq.IEEE754.Binary <> y var
R38983:38991 compcert.flocq.IEEE754.Binary <> is_finite def
R38993:38993 compcert.flocq.IEEE754.Binary <> x var
R39055:39064 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39093:39095 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39065:39069 compcert.flocq.IEEE754.Binary <> Bsign def
R39072:39076 compcert.flocq.IEEE754.Binary <> Bmult def
R39091:39091 compcert.flocq.IEEE754.Binary <> y var
R39089:39089 compcert.flocq.IEEE754.Binary <> x var
R39087:39087 compcert.flocq.IEEE754.Binary <> m var
R39078:39085 compcert.flocq.IEEE754.Binary <> mult_nan var
R39096:39099 Coq.Init.Datatypes <> xorb def
R39112:39116 compcert.flocq.IEEE754.Binary <> Bsign def
R39118:39118 compcert.flocq.IEEE754.Binary <> y var
R39102:39106 compcert.flocq.IEEE754.Binary <> Bsign def
R39108:39108 compcert.flocq.IEEE754.Binary <> x var
R39047:39049 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39018:39023 compcert.flocq.IEEE754.Binary <> is_nan def
R39026:39030 compcert.flocq.IEEE754.Binary <> Bmult def
R39045:39045 compcert.flocq.IEEE754.Binary <> y var
R39043:39043 compcert.flocq.IEEE754.Binary <> x var
R39041:39041 compcert.flocq.IEEE754.Binary <> m var
R39032:39039 compcert.flocq.IEEE754.Binary <> mult_nan var
R39050:39054 Coq.Init.Datatypes <> false constr
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39407:39419 compcert.flocq.IEEE754.Binary <> B2R_build_nan thm
R39422:39440 compcert.flocq.IEEE754.Binary <> is_finite_build_nan thm
R39443:39458 compcert.flocq.IEEE754.Binary <> is_nan_build_nan thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39349:39355 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39358:39370 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R39468:39476 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39317:39325 Coq.Reals.RIneq <> Rmult_0_r thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39329:39337 Coq.Reals.RIneq <> Rmult_0_l thm
R39340:39346 compcert.flocq.Core.Generic_fmt <> round_0 thm
R39531:39547 compcert.flocq.IEEE754.Binary <> Bmult_correct_aux thm
R39531:39547 compcert.flocq.IEEE754.Binary <> Bmult_correct_aux thm
R39566:39573 compcert.flocq.Core.Raux <> Rlt_bool def
R39566:39573 compcert.flocq.Core.Raux <> Rlt_bool def
R39618:39625 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R39618:39625 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R39618:39625 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R39647:39660 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R39647:39660 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R39647:39660 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R39671:39680 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R39671:39680 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R39671:39680 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R39712:39720 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R39712:39720 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R39712:39720 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
def 39775:39783 <> shl_align
R39810:39812 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R39807:39809 compcert.flocq.IEEE754.Binary <> ex' var
R39813:39814 compcert.flocq.IEEE754.Binary <> ex var
R39828:39831 Coq.Numbers.BinNums <> Zneg constr
R39838:39838 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39853:39854 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39858:39858 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39839:39847 Coq.ZArith.Zpower <> shift_pos def
R39851:39852 compcert.flocq.IEEE754.Binary <> mx var
R39855:39857 compcert.flocq.IEEE754.Binary <> ex' var
R39869:39869 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39872:39873 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39876:39876 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39870:39871 compcert.flocq.IEEE754.Binary <> mx var
R39874:39875 compcert.flocq.IEEE754.Binary <> ex var
prf 39894:39910 <> shl_align_correct
R39955:39963 compcert.flocq.IEEE754.Binary <> shl_align def
R39971:39973 compcert.flocq.IEEE754.Binary <> ex' var
R39968:39969 compcert.flocq.IEEE754.Binary <> ex var
R39965:39966 compcert.flocq.IEEE754.Binary <> mx var
R40048:40053 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R40011:40013 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39980:39982 compcert.flocq.Core.Defs <> F2R def
R39985:39989 compcert.flocq.Core.Defs <> Float constr
R40008:40009 compcert.flocq.IEEE754.Binary <> ex var
R39999:40002 Coq.Numbers.BinNums <> Zpos constr
R40004:40005 compcert.flocq.IEEE754.Binary <> mx var
R39991:39996 compcert.flocq.Core.Zaux <> radix2 def
R40014:40016 compcert.flocq.Core.Defs <> F2R def
R40019:40023 compcert.flocq.Core.Defs <> Float constr
R40043:40046 compcert.flocq.IEEE754.Binary <> ex'' var
R40033:40036 Coq.Numbers.BinNums <> Zpos constr
R40038:40040 compcert.flocq.IEEE754.Binary <> mx' var
R40025:40030 compcert.flocq.Core.Zaux <> radix2 def
R40059:40062 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R40055:40058 compcert.flocq.IEEE754.Binary <> ex'' var
R40063:40065 compcert.flocq.IEEE754.Binary <> ex' var
R40103:40111 compcert.flocq.IEEE754.Binary <> shl_align def
R40126:40128 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R40126:40128 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R40180:40188 Coq.ZArith.BinInt <> Zminus_eq thm
R40180:40188 Coq.ZArith.BinInt <> Zminus_eq thm
R40180:40188 Coq.ZArith.BinInt <> Zminus_eq thm
R40211:40219 Coq.ZArith.BinInt Z le_refl thm
R40211:40219 Coq.ZArith.BinInt Z le_refl thm
R40287:40289 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R40282:40284 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R40287:40289 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R40282:40284 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R40346:40354 Coq.ZArith.BinInt <> Zplus_0_l syndef
R40346:40354 Coq.ZArith.BinInt <> Zplus_0_l syndef
R40346:40354 Coq.ZArith.BinInt <> Zplus_0_l syndef
R40367:40383 Coq.ZArith.Zorder <> Zplus_le_compat_r thm
R40367:40383 Coq.ZArith.Zorder <> Zplus_le_compat_r thm
R40419:40435 Coq.ZArith.Zpower <> shift_pos_correct thm
R40438:40447 Coq.ZArith.BinInt <> Zmult_comm syndef
R40419:40435 Coq.ZArith.Zpower <> shift_pos_correct thm
R40419:40435 Coq.ZArith.Zpower <> shift_pos_correct thm
R40438:40447 Coq.ZArith.BinInt <> Zmult_comm syndef
R40438:40447 Coq.ZArith.BinInt <> Zmult_comm syndef
R40458:40467 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R40480:40485 Coq.ZArith.Zpow_def <> Zpower syndef
R40495:40498 Coq.Numbers.BinNums <> Zpos constr
R40487:40492 compcert.flocq.Core.Zaux <> radix2 def
R40458:40467 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R40480:40485 Coq.ZArith.Zpow_def <> Zpower syndef
R40495:40498 Coq.Numbers.BinNums <> Zpos constr
R40487:40492 compcert.flocq.Core.Zaux <> radix2 def
R40513:40516 Coq.Numbers.BinNums <> Zpos constr
R40527:40531 Coq.ZArith.BinInt Z opp def
R40534:40537 Coq.Numbers.BinNums <> Zneg constr
R40513:40516 Coq.Numbers.BinNums <> Zpos constr
R40527:40531 Coq.ZArith.BinInt Z opp def
R40534:40537 Coq.Numbers.BinNums <> Zneg constr
R40575:40577 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R40586:40586 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R40581:40583 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R40599:40601 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R40575:40577 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R40586:40586 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R40581:40583 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R40599:40601 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R40624:40637 compcert.flocq.Core.Float_prop <> F2R_change_exp thm
R40624:40637 compcert.flocq.Core.Float_prop <> F2R_change_exp thm
R40646:40659 Coq.ZArith.Zorder <> Zle_0_minus_le thm
R40646:40659 Coq.ZArith.Zorder <> Zle_0_minus_le thm
R40673:40675 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R40689:40691 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R40700:40700 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R40695:40697 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R40673:40675 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R40689:40691 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R40700:40700 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R40695:40697 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R40736:40744 Coq.ZArith.BinInt Z le_refl thm
R40736:40744 Coq.ZArith.BinInt Z le_refl thm
prf 40761:40773 <> snd_shl_align
R40812:40817 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40843:40845 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40818:40820 Coq.Init.Datatypes <> snd def
R40823:40831 compcert.flocq.IEEE754.Binary <> shl_align def
R40839:40841 compcert.flocq.IEEE754.Binary <> ex' var
R40836:40837 compcert.flocq.IEEE754.Binary <> ex var
R40833:40834 compcert.flocq.IEEE754.Binary <> mx var
R40846:40848 compcert.flocq.IEEE754.Binary <> ex' var
R40803:40806 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R40800:40802 compcert.flocq.IEEE754.Binary <> ex' var
R40807:40808 compcert.flocq.IEEE754.Binary <> ex var
R40886:40894 compcert.flocq.IEEE754.Binary <> shl_align def
R40909:40911 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R40909:40911 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R40949:40957 Coq.ZArith.BinInt <> Zminus_eq thm
R40949:40957 Coq.ZArith.BinInt <> Zminus_eq thm
R40949:40957 Coq.ZArith.BinInt <> Zminus_eq thm
R41024:41033 Coq.Init.Logic <> refl_equal syndef
R41024:41033 Coq.Init.Logic <> refl_equal syndef
def 41053:41066 <> shl_align_fexp
R41079:41087 compcert.flocq.IEEE754.Binary <> shl_align def
R41096:41099 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R41123:41125 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R41102:41105 Coq.Numbers.BinNums <> Zpos constr
R41108:41118 compcert.flocq.Core.Digits <> digits2_pos def
R41120:41121 compcert.flocq.IEEE754.Binary <> mx var
R41126:41127 compcert.flocq.IEEE754.Binary <> ex var
R41092:41093 compcert.flocq.IEEE754.Binary <> ex var
R41089:41090 compcert.flocq.IEEE754.Binary <> mx var
prf 41141:41162 <> shl_align_fexp_correct
R41202:41215 compcert.flocq.IEEE754.Binary <> shl_align_fexp def
R41220:41221 compcert.flocq.IEEE754.Binary <> ex var
R41217:41218 compcert.flocq.IEEE754.Binary <> mx var
R41295:41300 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R41259:41261 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41228:41230 compcert.flocq.Core.Defs <> F2R def
R41233:41237 compcert.flocq.Core.Defs <> Float constr
R41256:41257 compcert.flocq.IEEE754.Binary <> ex var
R41247:41250 Coq.Numbers.BinNums <> Zpos constr
R41252:41253 compcert.flocq.IEEE754.Binary <> mx var
R41239:41244 compcert.flocq.Core.Zaux <> radix2 def
R41262:41264 compcert.flocq.Core.Defs <> F2R def
R41267:41271 compcert.flocq.Core.Defs <> Float constr
R41291:41293 compcert.flocq.IEEE754.Binary <> ex' var
R41281:41284 Coq.Numbers.BinNums <> Zpos constr
R41286:41288 compcert.flocq.IEEE754.Binary <> mx' var
R41273:41278 compcert.flocq.Core.Zaux <> radix2 def
R41305:41308 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R41302:41304 compcert.flocq.IEEE754.Binary <> ex' var
R41309:41312 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R41340:41342 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R41315:41321 compcert.flocq.Core.Digits <> Zdigits def
R41331:41334 Coq.Numbers.BinNums <> Zpos constr
R41336:41338 compcert.flocq.IEEE754.Binary <> mx' var
R41323:41328 compcert.flocq.Core.Zaux <> radix2 def
R41343:41345 compcert.flocq.IEEE754.Binary <> ex' var
R41380:41393 compcert.flocq.IEEE754.Binary <> shl_align_fexp def
R41408:41424 compcert.flocq.IEEE754.Binary <> shl_align_correct thm
R41433:41436 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R41460:41462 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R41439:41442 Coq.Numbers.BinNums <> Zpos constr
R41445:41455 compcert.flocq.Core.Digits <> digits2_pos def
R41408:41424 compcert.flocq.IEEE754.Binary <> shl_align_correct thm
R41433:41436 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R41460:41462 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R41439:41442 Coq.Numbers.BinNums <> Zpos constr
R41445:41455 compcert.flocq.Core.Digits <> digits2_pos def
R41478:41493 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R41478:41493 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R41478:41493 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R41501:41509 compcert.flocq.IEEE754.Binary <> shl_align def
R41501:41509 compcert.flocq.IEEE754.Binary <> shl_align def
R41565:41579 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R41565:41579 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R41565:41579 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R41565:41579 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R41618:41632 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R41618:41632 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R41618:41632 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R41618:41632 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
def 41652:41663 <> binary_round
R41698:41711 compcert.flocq.IEEE754.Binary <> shl_align_fexp def
R41716:41717 compcert.flocq.IEEE754.Binary <> ex var
R41713:41714 compcert.flocq.IEEE754.Binary <> mx var
R41686:41686 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41689:41690 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41693:41693 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41722:41737 compcert.flocq.IEEE754.Binary <> binary_round_aux def
R41757:41765 compcert.flocq.Calc.Bracket <> loc_Exact constr
R41745:41748 Coq.Numbers.BinNums <> Zpos constr
R41741:41742 compcert.flocq.IEEE754.Binary <> sx var
R41739:41739 compcert.flocq.IEEE754.Binary <> m var
prf 41777:41796 <> binary_round_correct
R41832:41843 compcert.flocq.IEEE754.Binary <> binary_round def
R41853:41854 compcert.flocq.IEEE754.Binary <> ex var
R41850:41851 compcert.flocq.IEEE754.Binary <> mx var
R41847:41848 compcert.flocq.IEEE754.Binary <> sx var
R41845:41845 compcert.flocq.IEEE754.Binary <> m var
R41882:41887 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R41875:41877 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41861:41872 compcert.flocq.IEEE754.Binary <> valid_binary def
R41874:41874 compcert.flocq.IEEE754.Binary <> z var
R41878:41881 Coq.Init.Datatypes <> true constr
R41897:41899 compcert.flocq.Core.Defs <> F2R def
R41902:41906 compcert.flocq.Core.Defs <> Float constr
R41940:41941 compcert.flocq.IEEE754.Binary <> ex var
R41916:41924 compcert.flocq.Core.Zaux <> cond_Zopp def
R41930:41933 Coq.Numbers.BinNums <> Zpos constr
R41935:41936 compcert.flocq.IEEE754.Binary <> mx var
R41926:41927 compcert.flocq.IEEE754.Binary <> sx var
R41908:41913 compcert.flocq.Core.Zaux <> radix2 def
R41952:41959 compcert.flocq.Core.Raux <> Rlt_bool def
R42006:42009 compcert.flocq.Core.Raux <> bpow def
R42018:42021 compcert.flocq.IEEE754.Binary <> Binary.emax var
R42011:42016 compcert.flocq.Core.Zaux <> radix2 def
R41962:41965 Coq.Reals.Rbasic_fun <> Rabs def
R41968:41972 compcert.flocq.Core.Generic_fmt <> round def
R42001:42001 compcert.flocq.IEEE754.Binary <> x var
R41987:41996 compcert.flocq.IEEE754.Binary <> round_mode def
R41998:41998 compcert.flocq.IEEE754.Binary <> m var
R41981:41984 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R41974:41979 compcert.flocq.Core.Zaux <> radix2 def
R42147:42149 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42146:42146 compcert.flocq.IEEE754.Binary <> z var
R42150:42164 compcert.flocq.IEEE754.Binary <> binary_overflow def
R42168:42169 compcert.flocq.IEEE754.Binary <> sx var
R42166:42166 compcert.flocq.IEEE754.Binary <> m var
R42083:42090 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R42046:42048 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42033:42036 compcert.flocq.IEEE754.Binary <> FF2R def
R42045:42045 compcert.flocq.IEEE754.Binary <> z var
R42038:42043 compcert.flocq.Core.Zaux <> radix2 def
R42049:42053 compcert.flocq.Core.Generic_fmt <> round def
R42082:42082 compcert.flocq.IEEE754.Binary <> x var
R42068:42077 compcert.flocq.IEEE754.Binary <> round_mode def
R42079:42079 compcert.flocq.IEEE754.Binary <> m var
R42062:42065 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R42055:42060 compcert.flocq.Core.Zaux <> radix2 def
R42112:42119 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R42105:42107 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42091:42102 compcert.flocq.IEEE754.Binary <> is_finite_FF def
R42104:42104 compcert.flocq.IEEE754.Binary <> z var
R42108:42111 Coq.Init.Datatypes <> true constr
R42129:42131 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42120:42126 compcert.flocq.IEEE754.Binary <> sign_FF def
R42128:42128 compcert.flocq.IEEE754.Binary <> z var
R42132:42133 compcert.flocq.IEEE754.Binary <> sx var
R42205:42216 compcert.flocq.IEEE754.Binary <> binary_round def
R42231:42252 compcert.flocq.IEEE754.Binary <> shl_align_fexp_correct thm
R42231:42252 compcert.flocq.IEEE754.Binary <> shl_align_fexp_correct thm
R42272:42285 compcert.flocq.IEEE754.Binary <> shl_align_fexp def
R42272:42285 compcert.flocq.IEEE754.Binary <> shl_align_fexp def
R42334:42336 compcert.flocq.Core.Defs <> F2R def
R42339:42343 compcert.flocq.Core.Defs <> Float constr
R42353:42361 compcert.flocq.Core.Zaux <> cond_Zopp def
R42367:42370 Coq.Numbers.BinNums <> Zpos constr
R42345:42350 compcert.flocq.Core.Zaux <> radix2 def
R42334:42336 compcert.flocq.Core.Defs <> F2R def
R42339:42343 compcert.flocq.Core.Defs <> Float constr
R42353:42361 compcert.flocq.Core.Zaux <> cond_Zopp def
R42367:42370 Coq.Numbers.BinNums <> Zpos constr
R42345:42350 compcert.flocq.Core.Zaux <> radix2 def
R42400:42407 compcert.flocq.Core.Raux <> Rlt_bool def
R42400:42407 compcert.flocq.Core.Raux <> Rlt_bool def
R42421:42444 compcert.flocq.IEEE754.Binary <> binary_round_aux_correct thm
R42421:42444 compcert.flocq.IEEE754.Binary <> binary_round_aux_correct thm
R42485:42492 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R42495:42507 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R42485:42492 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R42485:42492 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R42495:42507 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R42495:42507 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R42545:42557 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R42545:42557 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R42570:42577 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R42570:42577 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R42586:42599 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R42586:42599 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R42612:42619 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R42612:42619 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
def 42639:42654 <> binary_normalize
R42682:42682 compcert.flocq.IEEE754.Binary <> m var
R42693:42694 Coq.Numbers.BinNums <> Z0 constr
R42699:42707 compcert.flocq.IEEE754.Binary <> B754_zero constr
R42709:42713 compcert.flocq.IEEE754.Binary <> szero var
R42719:42722 Coq.Numbers.BinNums <> Zpos constr
R42729:42732 compcert.flocq.IEEE754.Binary <> FF2B def
R42737:42741 Coq.Init.Logic <> proj1 thm
R42744:42763 compcert.flocq.IEEE754.Binary <> binary_round_correct thm
R42778:42778 compcert.flocq.IEEE754.Binary <> e var
R42776:42776 compcert.flocq.IEEE754.Binary <> m var
R42770:42774 Coq.Init.Datatypes <> false constr
R42765:42768 compcert.flocq.IEEE754.Binary <> mode var
R42786:42789 Coq.Numbers.BinNums <> Zneg constr
R42796:42799 compcert.flocq.IEEE754.Binary <> FF2B def
R42804:42808 Coq.Init.Logic <> proj1 thm
R42811:42830 compcert.flocq.IEEE754.Binary <> binary_round_correct thm
R42844:42844 compcert.flocq.IEEE754.Binary <> e var
R42842:42842 compcert.flocq.IEEE754.Binary <> m var
R42837:42840 Coq.Init.Datatypes <> true constr
R42832:42835 compcert.flocq.IEEE754.Binary <> mode var
prf 42864:42887 <> binary_normalize_correct
R42920:42927 compcert.flocq.Core.Raux <> Rlt_bool def
R42999:43002 compcert.flocq.Core.Raux <> bpow def
R43011:43014 compcert.flocq.IEEE754.Binary <> Binary.emax var
R43004:43009 compcert.flocq.Core.Zaux <> radix2 def
R42930:42933 Coq.Reals.Rbasic_fun <> Rabs def
R42936:42940 compcert.flocq.Core.Generic_fmt <> round def
R42970:42972 compcert.flocq.Core.Defs <> F2R def
R42975:42979 compcert.flocq.Core.Defs <> Float constr
R42991:42992 compcert.flocq.IEEE754.Binary <> ex var
R42988:42989 compcert.flocq.IEEE754.Binary <> mx var
R42981:42986 compcert.flocq.Core.Zaux <> radix2 def
R42955:42964 compcert.flocq.IEEE754.Binary <> round_mode def
R42966:42966 compcert.flocq.IEEE754.Binary <> m var
R42949:42952 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R42942:42947 compcert.flocq.Core.Zaux <> radix2 def
R43408:43410 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43371:43374 compcert.flocq.IEEE754.Binary <> B2FF def
R43377:43392 compcert.flocq.IEEE754.Binary <> binary_normalize def
R43402:43406 compcert.flocq.IEEE754.Binary <> szero var
R43399:43400 compcert.flocq.IEEE754.Binary <> ex var
R43396:43397 compcert.flocq.IEEE754.Binary <> mx var
R43394:43394 compcert.flocq.IEEE754.Binary <> m var
R43411:43425 compcert.flocq.IEEE754.Binary <> binary_overflow def
R43430:43437 compcert.flocq.Core.Raux <> Rlt_bool def
R43440:43442 compcert.flocq.Core.Defs <> F2R def
R43445:43449 compcert.flocq.Core.Defs <> Float constr
R43461:43462 compcert.flocq.IEEE754.Binary <> ex var
R43458:43459 compcert.flocq.IEEE754.Binary <> mx var
R43451:43456 compcert.flocq.Core.Zaux <> radix2 def
R43427:43427 compcert.flocq.IEEE754.Binary <> m var
R43124:43131 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R43062:43064 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43026:43028 compcert.flocq.IEEE754.Binary <> B2R def
R43031:43046 compcert.flocq.IEEE754.Binary <> binary_normalize def
R43056:43060 compcert.flocq.IEEE754.Binary <> szero var
R43053:43054 compcert.flocq.IEEE754.Binary <> ex var
R43050:43051 compcert.flocq.IEEE754.Binary <> mx var
R43048:43048 compcert.flocq.IEEE754.Binary <> m var
R43065:43069 compcert.flocq.Core.Generic_fmt <> round def
R43099:43101 compcert.flocq.Core.Defs <> F2R def
R43104:43108 compcert.flocq.Core.Defs <> Float constr
R43120:43121 compcert.flocq.IEEE754.Binary <> ex var
R43117:43118 compcert.flocq.IEEE754.Binary <> mx var
R43110:43115 compcert.flocq.Core.Zaux <> radix2 def
R43084:43093 compcert.flocq.IEEE754.Binary <> round_mode def
R43095:43095 compcert.flocq.IEEE754.Binary <> m var
R43078:43081 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R43071:43076 compcert.flocq.Core.Zaux <> radix2 def
R43181:43188 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R43174:43176 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43132:43140 compcert.flocq.IEEE754.Binary <> is_finite def
R43143:43158 compcert.flocq.IEEE754.Binary <> binary_normalize def
R43168:43172 compcert.flocq.IEEE754.Binary <> szero var
R43165:43166 compcert.flocq.IEEE754.Binary <> ex var
R43162:43163 compcert.flocq.IEEE754.Binary <> mx var
R43160:43160 compcert.flocq.IEEE754.Binary <> m var
R43177:43180 Coq.Init.Datatypes <> true constr
R43227:43235 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43189:43193 compcert.flocq.IEEE754.Binary <> Bsign def
R43196:43211 compcert.flocq.IEEE754.Binary <> binary_normalize def
R43221:43225 compcert.flocq.IEEE754.Binary <> szero var
R43218:43219 compcert.flocq.IEEE754.Binary <> ex var
R43215:43216 compcert.flocq.IEEE754.Binary <> mx var
R43213:43213 compcert.flocq.IEEE754.Binary <> m var
R43242:43249 compcert.flocq.Core.Raux <> Rcompare def
R43252:43254 compcert.flocq.Core.Defs <> F2R def
R43257:43261 compcert.flocq.Core.Defs <> Float constr
R43273:43274 compcert.flocq.IEEE754.Binary <> ex var
R43270:43271 compcert.flocq.IEEE754.Binary <> mx var
R43263:43268 compcert.flocq.Core.Zaux <> radix2 def
R43295:43296 Coq.Init.Datatypes <> Eq constr
R43301:43305 compcert.flocq.IEEE754.Binary <> szero var
R43317:43318 Coq.Init.Datatypes <> Lt constr
R43323:43326 Coq.Init.Datatypes <> true constr
R43338:43339 Coq.Init.Datatypes <> Gt constr
R43344:43348 Coq.Init.Datatypes <> false constr
R43575:43579 compcert.flocq.Core.Float_prop <> F2R_0 thm
R43582:43588 compcert.flocq.Core.Generic_fmt <> round_0 thm
R43591:43597 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R43600:43612 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R43575:43579 compcert.flocq.Core.Float_prop <> F2R_0 thm
R43575:43579 compcert.flocq.Core.Float_prop <> F2R_0 thm
R43582:43588 compcert.flocq.Core.Generic_fmt <> round_0 thm
R43582:43588 compcert.flocq.Core.Generic_fmt <> round_0 thm
R43582:43588 compcert.flocq.Core.Generic_fmt <> round_0 thm
R43591:43597 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R43591:43597 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R43600:43612 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R43600:43612 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R43600:43612 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R43643:43653 compcert.flocq.Core.Raux <> Rcompare_Eq thm
R43643:43653 compcert.flocq.Core.Raux <> Rcompare_Eq thm
R43643:43653 compcert.flocq.Core.Raux <> Rcompare_Eq thm
R43643:43653 compcert.flocq.Core.Raux <> Rcompare_Eq thm
R43664:43672 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R43664:43672 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R43702:43721 compcert.flocq.IEEE754.Binary <> binary_round_correct thm
R43725:43729 Coq.Init.Datatypes <> false constr
R43702:43721 compcert.flocq.IEEE754.Binary <> binary_round_correct thm
R43725:43729 Coq.Init.Datatypes <> false constr
R43751:43763 compcert.flocq.Core.Raux <> Rlt_bool_spec thm
R43751:43763 compcert.flocq.Core.Raux <> Rlt_bool_spec thm
R43819:43826 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R43819:43826 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R43819:43826 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R43848:43861 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R43848:43861 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R43848:43861 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R43872:43881 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R43872:43881 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R43872:43881 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R43898:43908 compcert.flocq.Core.Raux <> Rcompare_Gt thm
R43898:43908 compcert.flocq.Core.Raux <> Rcompare_Gt thm
R43898:43908 compcert.flocq.Core.Raux <> Rcompare_Gt thm
R43898:43908 compcert.flocq.Core.Raux <> Rcompare_Gt thm
R43919:43926 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R43919:43926 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R43978:43986 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R43978:43986 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R43978:43986 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R43999:44005 Coq.Init.Logic <> f_equal thm
R43999:44005 Coq.Init.Logic <> f_equal thm
R44014:44019 Coq.Init.Logic <> sym_eq syndef
R44014:44019 Coq.Init.Logic <> sym_eq syndef
R44028:44041 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R44028:44041 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R44054:44061 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R44054:44061 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R44091:44110 compcert.flocq.IEEE754.Binary <> binary_round_correct thm
R44114:44117 Coq.Init.Datatypes <> true constr
R44091:44110 compcert.flocq.IEEE754.Binary <> binary_round_correct thm
R44114:44117 Coq.Init.Datatypes <> true constr
R44139:44151 compcert.flocq.Core.Raux <> Rlt_bool_spec thm
R44139:44151 compcert.flocq.Core.Raux <> Rlt_bool_spec thm
R44207:44214 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R44207:44214 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R44207:44214 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R44236:44249 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R44236:44249 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R44236:44249 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R44260:44269 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R44260:44269 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R44260:44269 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R44286:44296 compcert.flocq.Core.Raux <> Rcompare_Lt thm
R44286:44296 compcert.flocq.Core.Raux <> Rcompare_Lt thm
R44286:44296 compcert.flocq.Core.Raux <> Rcompare_Lt thm
R44286:44296 compcert.flocq.Core.Raux <> Rcompare_Lt thm
R44307:44314 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R44307:44314 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R44366:44374 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R44366:44374 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R44366:44374 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R44387:44393 Coq.Init.Logic <> f_equal thm
R44387:44393 Coq.Init.Logic <> f_equal thm
R44402:44407 Coq.Init.Logic <> sym_eq syndef
R44402:44407 Coq.Init.Logic <> sym_eq syndef
R44416:44428 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R44416:44428 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R44441:44448 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R44441:44448 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
def 44485:44489 <> Bplus
R44520:44520 compcert.flocq.IEEE754.Binary <> y var
R44517:44517 compcert.flocq.IEEE754.Binary <> x var
R44531:44538 compcert.flocq.IEEE754.Binary <> B754_nan constr
R44554:44561 compcert.flocq.IEEE754.Binary <> B754_nan constr
R44572:44580 compcert.flocq.IEEE754.Binary <> build_nan def
R44583:44590 compcert.flocq.IEEE754.Binary <> plus_nan var
R44594:44594 compcert.flocq.IEEE754.Binary <> y var
R44592:44592 compcert.flocq.IEEE754.Binary <> x var
R44572:44580 compcert.flocq.IEEE754.Binary <> build_nan def
R44583:44590 compcert.flocq.IEEE754.Binary <> plus_nan var
R44594:44594 compcert.flocq.IEEE754.Binary <> y var
R44592:44592 compcert.flocq.IEEE754.Binary <> x var
R44601:44613 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R44619:44631 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R44646:44653 Coq.Bool.Bool <> eqb def
R44673:44681 compcert.flocq.IEEE754.Binary <> build_nan def
R44684:44691 compcert.flocq.IEEE754.Binary <> plus_nan var
R44695:44695 compcert.flocq.IEEE754.Binary <> y var
R44693:44693 compcert.flocq.IEEE754.Binary <> x var
R44666:44666 compcert.flocq.IEEE754.Binary <> x var
R44702:44714 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R44724:44724 compcert.flocq.IEEE754.Binary <> x var
R44733:44745 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R44752:44752 compcert.flocq.IEEE754.Binary <> y var
R44758:44766 compcert.flocq.IEEE754.Binary <> B754_zero constr
R44772:44780 compcert.flocq.IEEE754.Binary <> B754_zero constr
R44795:44802 Coq.Bool.Bool <> eqb def
R44832:44832 compcert.flocq.IEEE754.Binary <> m var
R44839:44845 compcert.flocq.IEEE754.Binary <> mode_DN constr
R44850:44858 compcert.flocq.IEEE754.Binary <> B754_zero constr
R44860:44863 Coq.Init.Datatypes <> true constr
R44872:44880 compcert.flocq.IEEE754.Binary <> B754_zero constr
R44882:44886 Coq.Init.Datatypes <> false constr
R44815:44815 compcert.flocq.IEEE754.Binary <> x var
R44896:44904 compcert.flocq.IEEE754.Binary <> B754_zero constr
R44914:44914 compcert.flocq.IEEE754.Binary <> y var
R44923:44931 compcert.flocq.IEEE754.Binary <> B754_zero constr
R44938:44938 compcert.flocq.IEEE754.Binary <> x var
R44944:44954 compcert.flocq.IEEE754.Binary <> B754_finite constr
R44969:44979 compcert.flocq.IEEE754.Binary <> B754_finite constr
R45010:45014 Coq.ZArith.BinInt Z min def
R45029:45044 compcert.flocq.IEEE754.Binary <> binary_normalize def
R45170:45170 compcert.flocq.IEEE754.Binary <> m var
R45177:45183 compcert.flocq.IEEE754.Binary <> mode_DN constr
R45188:45191 Coq.Init.Datatypes <> true constr
R45200:45204 Coq.Init.Datatypes <> false constr
R45160:45161 compcert.flocq.IEEE754.Binary <> ez var
R45049:45053 Coq.ZArith.BinInt <> Zplus syndef
R45105:45113 compcert.flocq.Core.Zaux <> cond_Zopp def
R45119:45122 Coq.Numbers.BinNums <> Zpos constr
R45125:45127 Coq.Init.Datatypes <> fst def
R45130:45138 compcert.flocq.IEEE754.Binary <> shl_align def
R45146:45147 compcert.flocq.IEEE754.Binary <> ez var
R45056:45064 compcert.flocq.Core.Zaux <> cond_Zopp def
R45070:45073 Coq.Numbers.BinNums <> Zpos constr
R45076:45078 Coq.Init.Datatypes <> fst def
R45081:45089 compcert.flocq.IEEE754.Binary <> shl_align def
R45097:45098 compcert.flocq.IEEE754.Binary <> ez var
R45046:45046 compcert.flocq.IEEE754.Binary <> m var
prf 45227:45239 <> Bplus_correct
R45288:45293 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45312:45317 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45321:45328 compcert.flocq.Core.Raux <> Rlt_bool def
R45389:45392 compcert.flocq.Core.Raux <> bpow def
R45401:45404 compcert.flocq.IEEE754.Binary <> Binary.emax var
R45394:45399 compcert.flocq.Core.Zaux <> radix2 def
R45331:45334 Coq.Reals.Rbasic_fun <> Rabs def
R45337:45341 compcert.flocq.Core.Generic_fmt <> round def
R45376:45378 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R45371:45373 compcert.flocq.IEEE754.Binary <> B2R def
R45375:45375 compcert.flocq.IEEE754.Binary <> x var
R45379:45381 compcert.flocq.IEEE754.Binary <> B2R def
R45383:45383 compcert.flocq.IEEE754.Binary <> y var
R45356:45365 compcert.flocq.IEEE754.Binary <> round_mode def
R45367:45367 compcert.flocq.IEEE754.Binary <> m var
R45350:45353 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R45343:45348 compcert.flocq.Core.Zaux <> radix2 def
R45878:45881 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R45848:45850 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45821:45824 compcert.flocq.IEEE754.Binary <> B2FF def
R45827:45831 compcert.flocq.IEEE754.Binary <> Bplus def
R45846:45846 compcert.flocq.IEEE754.Binary <> y var
R45844:45844 compcert.flocq.IEEE754.Binary <> x var
R45842:45842 compcert.flocq.IEEE754.Binary <> m var
R45833:45840 compcert.flocq.IEEE754.Binary <> plus_nan var
R45851:45865 compcert.flocq.IEEE754.Binary <> binary_overflow def
R45870:45874 compcert.flocq.IEEE754.Binary <> Bsign def
R45876:45876 compcert.flocq.IEEE754.Binary <> x var
R45867:45867 compcert.flocq.IEEE754.Binary <> m var
R45889:45891 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45882:45886 compcert.flocq.IEEE754.Binary <> Bsign def
R45888:45888 compcert.flocq.IEEE754.Binary <> x var
R45892:45896 compcert.flocq.IEEE754.Binary <> Bsign def
R45898:45898 compcert.flocq.IEEE754.Binary <> y var
R45493:45500 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R45442:45444 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45416:45418 compcert.flocq.IEEE754.Binary <> B2R def
R45421:45425 compcert.flocq.IEEE754.Binary <> Bplus def
R45440:45440 compcert.flocq.IEEE754.Binary <> y var
R45438:45438 compcert.flocq.IEEE754.Binary <> x var
R45436:45436 compcert.flocq.IEEE754.Binary <> m var
R45427:45434 compcert.flocq.IEEE754.Binary <> plus_nan var
R45445:45449 compcert.flocq.Core.Generic_fmt <> round def
R45484:45486 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R45479:45481 compcert.flocq.IEEE754.Binary <> B2R def
R45483:45483 compcert.flocq.IEEE754.Binary <> x var
R45487:45489 compcert.flocq.IEEE754.Binary <> B2R def
R45491:45491 compcert.flocq.IEEE754.Binary <> y var
R45464:45473 compcert.flocq.IEEE754.Binary <> round_mode def
R45475:45475 compcert.flocq.IEEE754.Binary <> m var
R45458:45461 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R45451:45456 compcert.flocq.Core.Zaux <> radix2 def
R45540:45547 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R45533:45535 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45501:45509 compcert.flocq.IEEE754.Binary <> is_finite def
R45512:45516 compcert.flocq.IEEE754.Binary <> Bplus def
R45531:45531 compcert.flocq.IEEE754.Binary <> y var
R45529:45529 compcert.flocq.IEEE754.Binary <> x var
R45527:45527 compcert.flocq.IEEE754.Binary <> m var
R45518:45525 compcert.flocq.IEEE754.Binary <> plus_nan var
R45536:45539 Coq.Init.Datatypes <> true constr
R45576:45584 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45548:45552 compcert.flocq.IEEE754.Binary <> Bsign def
R45555:45559 compcert.flocq.IEEE754.Binary <> Bplus def
R45574:45574 compcert.flocq.IEEE754.Binary <> y var
R45572:45572 compcert.flocq.IEEE754.Binary <> x var
R45570:45570 compcert.flocq.IEEE754.Binary <> m var
R45561:45568 compcert.flocq.IEEE754.Binary <> plus_nan var
R45591:45598 compcert.flocq.Core.Raux <> Rcompare def
R45606:45608 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R45601:45603 compcert.flocq.IEEE754.Binary <> B2R def
R45605:45605 compcert.flocq.IEEE754.Binary <> x var
R45609:45611 compcert.flocq.IEEE754.Binary <> B2R def
R45613:45613 compcert.flocq.IEEE754.Binary <> y var
R45633:45634 Coq.Init.Datatypes <> Eq constr
R45645:45645 compcert.flocq.IEEE754.Binary <> m var
R45652:45658 compcert.flocq.IEEE754.Binary <> mode_DN constr
R45663:45665 Coq.Init.Datatypes <> orb def
R45678:45682 compcert.flocq.IEEE754.Binary <> Bsign def
R45684:45684 compcert.flocq.IEEE754.Binary <> y var
R45668:45672 compcert.flocq.IEEE754.Binary <> Bsign def
R45674:45674 compcert.flocq.IEEE754.Binary <> x var
R45727:45730 Coq.Init.Datatypes <> andb def
R45743:45747 compcert.flocq.IEEE754.Binary <> Bsign def
R45749:45749 compcert.flocq.IEEE754.Binary <> y var
R45733:45737 compcert.flocq.IEEE754.Binary <> Bsign def
R45739:45739 compcert.flocq.IEEE754.Binary <> x var
R45766:45767 Coq.Init.Datatypes <> Lt constr
R45772:45775 Coq.Init.Datatypes <> true constr
R45787:45788 Coq.Init.Datatypes <> Gt constr
R45793:45797 Coq.Init.Datatypes <> false constr
R45305:45307 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45294:45302 compcert.flocq.IEEE754.Binary <> is_finite def
R45304:45304 compcert.flocq.IEEE754.Binary <> y var
R45308:45311 Coq.Init.Datatypes <> true constr
R45281:45283 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45270:45278 compcert.flocq.IEEE754.Binary <> is_finite def
R45280:45280 compcert.flocq.IEEE754.Binary <> x var
R45284:45287 Coq.Init.Datatypes <> true constr
R46038:46046 Coq.Reals.RIneq <> Rplus_0_r thm
R46049:46055 compcert.flocq.Core.Generic_fmt <> round_0 thm
R46058:46064 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R46067:46079 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R46038:46046 Coq.Reals.RIneq <> Rplus_0_r thm
R46038:46046 Coq.Reals.RIneq <> Rplus_0_r thm
R46049:46055 compcert.flocq.Core.Generic_fmt <> round_0 thm
R46049:46055 compcert.flocq.Core.Generic_fmt <> round_0 thm
R46049:46055 compcert.flocq.Core.Generic_fmt <> round_0 thm
R46058:46064 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R46058:46064 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R46067:46079 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R46067:46079 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R46067:46079 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R46099:46109 compcert.flocq.Core.Raux <> Rcompare_Eq thm
R46099:46109 compcert.flocq.Core.Raux <> Rcompare_Eq thm
R46099:46109 compcert.flocq.Core.Raux <> Rcompare_Eq thm
R46165:46173 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R46165:46173 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R46190:46198 Coq.Reals.Raxioms <> Rplus_0_l prfax
R46201:46213 compcert.flocq.Core.Generic_fmt <> round_generic thm
R46216:46228 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R46190:46198 Coq.Reals.Raxioms <> Rplus_0_l prfax
R46190:46198 Coq.Reals.Raxioms <> Rplus_0_l prfax
R46201:46213 compcert.flocq.Core.Generic_fmt <> round_generic thm
R46201:46213 compcert.flocq.Core.Generic_fmt <> round_generic thm
R46201:46213 compcert.flocq.Core.Generic_fmt <> round_generic thm
R46201:46213 compcert.flocq.Core.Generic_fmt <> round_generic thm
R46216:46228 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R46216:46228 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R46216:46228 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R46265:46267 compcert.flocq.Core.Defs <> F2R def
R46282:46290 Coq.Reals.RIneq <> Rmult_0_l thm
R46293:46307 compcert.flocq.Core.Raux <> Rcompare_mult_r thm
R46282:46290 Coq.Reals.RIneq <> Rmult_0_l thm
R46282:46290 Coq.Reals.RIneq <> Rmult_0_l thm
R46293:46307 compcert.flocq.Core.Raux <> Rcompare_mult_r thm
R46293:46307 compcert.flocq.Core.Raux <> Rcompare_mult_r thm
R46293:46307 compcert.flocq.Core.Raux <> Rcompare_mult_r thm
R46318:46329 compcert.flocq.Core.Raux <> Rcompare_IZR thm
R46318:46329 compcert.flocq.Core.Raux <> Rcompare_IZR thm
R46318:46329 compcert.flocq.Core.Raux <> Rcompare_IZR thm
R46367:46375 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R46367:46375 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R46384:46398 compcert.flocq.IEEE754.Binary <> abs_B2R_lt_emax thm
R46384:46398 compcert.flocq.IEEE754.Binary <> abs_B2R_lt_emax thm
R46407:46424 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R46407:46424 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R46441:46449 Coq.Reals.RIneq <> Rplus_0_r thm
R46452:46464 compcert.flocq.Core.Generic_fmt <> round_generic thm
R46467:46479 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R46441:46449 Coq.Reals.RIneq <> Rplus_0_r thm
R46441:46449 Coq.Reals.RIneq <> Rplus_0_r thm
R46452:46464 compcert.flocq.Core.Generic_fmt <> round_generic thm
R46452:46464 compcert.flocq.Core.Generic_fmt <> round_generic thm
R46452:46464 compcert.flocq.Core.Generic_fmt <> round_generic thm
R46452:46464 compcert.flocq.Core.Generic_fmt <> round_generic thm
R46467:46479 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R46467:46479 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R46467:46479 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R46516:46518 compcert.flocq.Core.Defs <> F2R def
R46533:46541 Coq.Reals.RIneq <> Rmult_0_l thm
R46544:46558 compcert.flocq.Core.Raux <> Rcompare_mult_r thm
R46533:46541 Coq.Reals.RIneq <> Rmult_0_l thm
R46533:46541 Coq.Reals.RIneq <> Rmult_0_l thm
R46544:46558 compcert.flocq.Core.Raux <> Rcompare_mult_r thm
R46544:46558 compcert.flocq.Core.Raux <> Rcompare_mult_r thm
R46544:46558 compcert.flocq.Core.Raux <> Rcompare_mult_r thm
R46569:46580 compcert.flocq.Core.Raux <> Rcompare_IZR thm
R46569:46580 compcert.flocq.Core.Raux <> Rcompare_IZR thm
R46569:46580 compcert.flocq.Core.Raux <> Rcompare_IZR thm
R46618:46626 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R46618:46626 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R46635:46649 compcert.flocq.IEEE754.Binary <> abs_B2R_lt_emax thm
R46635:46649 compcert.flocq.IEEE754.Binary <> abs_B2R_lt_emax thm
R46658:46675 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R46658:46675 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R46731:46737 compcert.flocq.IEEE754.Binary <> mode_DN constr
R46742:46745 Coq.Init.Datatypes <> true constr
R46754:46758 Coq.Init.Datatypes <> false constr
R46731:46737 compcert.flocq.IEEE754.Binary <> mode_DN constr
R46742:46745 Coq.Init.Datatypes <> true constr
R46754:46758 Coq.Init.Datatypes <> false constr
R46777:46781 Coq.ZArith.BinInt Z min def
R46777:46781 Coq.ZArith.BinInt Z min def
R46849:46851 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R46803:46811 compcert.flocq.Core.Zaux <> cond_Zopp def
R46817:46820 Coq.Numbers.BinNums <> Zpos constr
R46823:46825 Coq.Init.Datatypes <> fst def
R46828:46836 compcert.flocq.IEEE754.Binary <> shl_align def
R46852:46860 compcert.flocq.Core.Zaux <> cond_Zopp def
R46866:46869 Coq.Numbers.BinNums <> Zpos constr
R46872:46874 Coq.Init.Datatypes <> fst def
R46877:46885 compcert.flocq.IEEE754.Binary <> shl_align def
R46849:46851 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R46803:46811 compcert.flocq.Core.Zaux <> cond_Zopp def
R46817:46820 Coq.Numbers.BinNums <> Zpos constr
R46823:46825 Coq.Init.Datatypes <> fst def
R46828:46836 compcert.flocq.IEEE754.Binary <> shl_align def
R46852:46860 compcert.flocq.Core.Zaux <> cond_Zopp def
R46866:46869 Coq.Numbers.BinNums <> Zpos constr
R46872:46874 Coq.Init.Datatypes <> fst def
R46877:46885 compcert.flocq.IEEE754.Binary <> shl_align def
R47017:47019 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46963:46967 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R46917:46919 compcert.flocq.Core.Defs <> F2R def
R46922:46926 compcert.flocq.Core.Defs <> Float constr
R46936:46944 compcert.flocq.Core.Zaux <> cond_Zopp def
R46950:46953 Coq.Numbers.BinNums <> Zpos constr
R46928:46933 compcert.flocq.Core.Zaux <> radix2 def
R46968:46970 compcert.flocq.Core.Defs <> F2R def
R46973:46977 compcert.flocq.Core.Defs <> Float constr
R46987:46995 compcert.flocq.Core.Zaux <> cond_Zopp def
R47001:47004 Coq.Numbers.BinNums <> Zpos constr
R46979:46984 compcert.flocq.Core.Zaux <> radix2 def
R47020:47022 compcert.flocq.Core.Defs <> F2R def
R47025:47029 compcert.flocq.Core.Defs <> Float constr
R47031:47036 compcert.flocq.Core.Zaux <> radix2 def
R47017:47019 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46963:46967 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R46917:46919 compcert.flocq.Core.Defs <> F2R def
R46922:46926 compcert.flocq.Core.Defs <> Float constr
R46936:46944 compcert.flocq.Core.Zaux <> cond_Zopp def
R46950:46953 Coq.Numbers.BinNums <> Zpos constr
R46928:46933 compcert.flocq.Core.Zaux <> radix2 def
R46968:46970 compcert.flocq.Core.Defs <> F2R def
R46973:46977 compcert.flocq.Core.Defs <> Float constr
R46987:46995 compcert.flocq.Core.Zaux <> cond_Zopp def
R47001:47004 Coq.Numbers.BinNums <> Zpos constr
R46979:46984 compcert.flocq.Core.Zaux <> radix2 def
R47020:47022 compcert.flocq.Core.Defs <> F2R def
R47025:47029 compcert.flocq.Core.Defs <> Float constr
R47031:47036 compcert.flocq.Core.Zaux <> radix2 def
R47057:47069 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R47057:47069 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R47057:47069 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R47057:47069 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R47084:47100 compcert.flocq.IEEE754.Binary <> shl_align_correct thm
R47084:47100 compcert.flocq.IEEE754.Binary <> shl_align_correct thm
R47125:47141 compcert.flocq.IEEE754.Binary <> shl_align_correct thm
R47125:47141 compcert.flocq.IEEE754.Binary <> shl_align_correct thm
R47166:47178 compcert.flocq.IEEE754.Binary <> snd_shl_align thm
R47190:47199 Coq.ZArith.BinInt Z le_min_l thm
R47166:47178 compcert.flocq.IEEE754.Binary <> snd_shl_align thm
R47190:47199 Coq.ZArith.BinInt Z le_min_l thm
R47222:47234 compcert.flocq.IEEE754.Binary <> snd_shl_align thm
R47246:47255 Coq.ZArith.BinInt Z le_min_r thm
R47222:47234 compcert.flocq.IEEE754.Binary <> snd_shl_align thm
R47246:47255 Coq.ZArith.BinInt Z le_min_r thm
R47276:47284 compcert.flocq.IEEE754.Binary <> shl_align def
R47276:47284 compcert.flocq.IEEE754.Binary <> shl_align def
R47321:47329 compcert.flocq.IEEE754.Binary <> shl_align def
R47321:47329 compcert.flocq.IEEE754.Binary <> shl_align def
R47472:47484 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R47472:47484 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R47472:47484 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R47472:47484 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R47494:47496 compcert.flocq.Core.Defs <> F2R def
R47521:47538 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R47544:47551 Coq.Reals.RIneq <> plus_IZR thm
R47521:47538 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R47521:47538 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R47544:47551 Coq.Reals.RIneq <> plus_IZR thm
R47544:47551 Coq.Reals.RIneq <> plus_IZR thm
R47668:47671 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47714:47717 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R47674:47676 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47677:47684 compcert.flocq.Core.Raux <> Rlt_bool def
R47687:47689 compcert.flocq.Core.Defs <> F2R def
R47692:47696 compcert.flocq.Core.Defs <> Float constr
R47698:47703 compcert.flocq.Core.Zaux <> radix2 def
R47720:47722 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47595:47598 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R47579:47582 compcert.flocq.Core.Raux <> bpow def
R47591:47594 compcert.flocq.IEEE754.Binary <> Binary.emax var
R47584:47589 compcert.flocq.Core.Zaux <> radix2 def
R47599:47602 Coq.Reals.Rbasic_fun <> Rabs def
R47605:47609 compcert.flocq.Core.Generic_fmt <> round def
R47639:47641 compcert.flocq.Core.Defs <> F2R def
R47644:47648 compcert.flocq.Core.Defs <> Float constr
R47650:47655 compcert.flocq.Core.Zaux <> radix2 def
R47624:47633 compcert.flocq.IEEE754.Binary <> round_mode def
R47618:47621 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R47611:47616 compcert.flocq.Core.Zaux <> radix2 def
R47668:47671 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47714:47717 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R47674:47676 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47677:47684 compcert.flocq.Core.Raux <> Rlt_bool def
R47687:47689 compcert.flocq.Core.Defs <> F2R def
R47692:47696 compcert.flocq.Core.Defs <> Float constr
R47698:47703 compcert.flocq.Core.Zaux <> radix2 def
R47720:47722 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47595:47598 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R47579:47582 compcert.flocq.Core.Raux <> bpow def
R47591:47594 compcert.flocq.IEEE754.Binary <> Binary.emax var
R47584:47589 compcert.flocq.Core.Zaux <> radix2 def
R47599:47602 Coq.Reals.Rbasic_fun <> Rabs def
R47605:47609 compcert.flocq.Core.Generic_fmt <> round def
R47639:47641 compcert.flocq.Core.Defs <> F2R def
R47644:47648 compcert.flocq.Core.Defs <> Float constr
R47650:47655 compcert.flocq.Core.Zaux <> radix2 def
R47624:47633 compcert.flocq.IEEE754.Binary <> round_mode def
R47618:47621 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R47611:47616 compcert.flocq.Core.Zaux <> radix2 def
R47772:47784 Coq.Bool.Bool <> bool_dec thm
R47772:47784 Coq.Bool.Bool <> bool_dec thm
R47822:47825 Coq.Init.Logic <> conj constr
R47822:47825 Coq.Init.Logic <> conj constr
R47852:47857 Coq.Init.Logic <> sym_eq syndef
R47852:47857 Coq.Init.Logic <> sym_eq syndef
R47875:47887 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R47875:47887 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R47902:47910 Coq.Reals.RIneq <> Rplus_0_r thm
R47902:47910 Coq.Reals.RIneq <> Rplus_0_r thm
R47902:47910 Coq.Reals.RIneq <> Rplus_0_r thm
R47922:47936 Coq.Reals.RIneq <> Rplus_lt_compat thm
R47922:47936 Coq.Reals.RIneq <> Rplus_lt_compat thm
R47949:47956 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R47949:47956 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R47969:47976 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R47969:47976 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R47985:47998 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R47985:47998 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R48013:48021 Coq.Reals.RIneq <> Rplus_0_r thm
R48013:48021 Coq.Reals.RIneq <> Rplus_0_r thm
R48013:48021 Coq.Reals.RIneq <> Rplus_0_r thm
R48033:48047 Coq.Reals.RIneq <> Rplus_le_compat thm
R48033:48047 Coq.Reals.RIneq <> Rplus_le_compat thm
R48060:48067 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R48060:48067 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R48080:48087 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R48080:48087 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R48104:48113 Coq.Reals.RIneq <> Rle_not_lt thm
R48104:48113 Coq.Reals.RIneq <> Rle_not_lt thm
R48143:48157 compcert.flocq.IEEE754.Binary <> bounded_lt_emax thm
R48168:48182 compcert.flocq.IEEE754.Binary <> bounded_lt_emax thm
R48193:48201 Coq.Init.Datatypes <> andb_prop thm
R48212:48220 Coq.Init.Datatypes <> andb_prop thm
R48143:48157 compcert.flocq.IEEE754.Binary <> bounded_lt_emax thm
R48168:48182 compcert.flocq.IEEE754.Binary <> bounded_lt_emax thm
R48193:48201 Coq.Init.Datatypes <> andb_prop thm
R48212:48220 Coq.Init.Datatypes <> andb_prop thm
R48273:48300 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R48315:48342 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R48273:48300 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R48315:48342 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R48464:48470 compcert.flocq.Core.Raux <> Rabs_lt thm
R48464:48470 compcert.flocq.Core.Raux <> Rabs_lt thm
R48505:48507 compcert.flocq.Core.Defs <> F2R def
R48510:48514 compcert.flocq.Core.Defs <> Float constr
R48524:48532 compcert.flocq.Core.Zaux <> cond_Zopp def
R48540:48543 Coq.Numbers.BinNums <> Zpos constr
R48534:48537 Coq.Init.Datatypes <> true constr
R48516:48521 compcert.flocq.Core.Zaux <> radix2 def
R48486:48497 Coq.Reals.RIneq <> Rlt_le_trans thm
R48505:48507 compcert.flocq.Core.Defs <> F2R def
R48510:48514 compcert.flocq.Core.Defs <> Float constr
R48524:48532 compcert.flocq.Core.Zaux <> cond_Zopp def
R48540:48543 Coq.Numbers.BinNums <> Zpos constr
R48534:48537 Coq.Init.Datatypes <> true constr
R48516:48521 compcert.flocq.Core.Zaux <> radix2 def
R48486:48497 Coq.Reals.RIneq <> Rlt_le_trans thm
R48564:48571 compcert.flocq.Core.Float_prop <> F2R_Zopp thm
R48564:48571 compcert.flocq.Core.Float_prop <> F2R_Zopp thm
R48564:48571 compcert.flocq.Core.Float_prop <> F2R_Zopp thm
R48584:48600 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R48584:48600 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R48609:48624 compcert.flocq.Core.Generic_fmt <> round_ge_generic thm
R48609:48624 compcert.flocq.Core.Generic_fmt <> round_ge_generic thm
R48639:48662 compcert.flocq.Core.Generic_fmt <> generic_format_canonical thm
R48639:48662 compcert.flocq.Core.Generic_fmt <> generic_format_canonical thm
R48674:48676 compcert.flocq.Core.Defs <> F2R def
R48679:48683 compcert.flocq.Core.Defs <> Float constr
R48693:48701 compcert.flocq.Core.Zaux <> cond_Zopp def
R48709:48712 Coq.Numbers.BinNums <> Zpos constr
R48703:48706 Coq.Init.Datatypes <> true constr
R48685:48690 compcert.flocq.Core.Zaux <> radix2 def
R48742:48750 Coq.Reals.RIneq <> Rplus_0_r thm
R48674:48676 compcert.flocq.Core.Defs <> F2R def
R48679:48683 compcert.flocq.Core.Defs <> Float constr
R48693:48701 compcert.flocq.Core.Zaux <> cond_Zopp def
R48709:48712 Coq.Numbers.BinNums <> Zpos constr
R48703:48706 Coq.Init.Datatypes <> true constr
R48685:48690 compcert.flocq.Core.Zaux <> radix2 def
R48742:48750 Coq.Reals.RIneq <> Rplus_0_r thm
R48742:48750 Coq.Reals.RIneq <> Rplus_0_r thm
R48759:48775 Coq.Reals.RIneq <> Rplus_le_compat_l thm
R48759:48775 Coq.Reals.RIneq <> Rplus_le_compat_l thm
R48788:48795 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R48788:48795 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R48804:48815 Coq.Reals.RIneq <> Rle_lt_trans thm
R48804:48815 Coq.Reals.RIneq <> Rle_lt_trans thm
R48839:48854 compcert.flocq.Core.Generic_fmt <> round_le_generic thm
R48839:48854 compcert.flocq.Core.Generic_fmt <> round_le_generic thm
R48869:48892 compcert.flocq.Core.Generic_fmt <> generic_format_canonical thm
R48869:48892 compcert.flocq.Core.Generic_fmt <> generic_format_canonical thm
R48907:48915 Coq.Reals.Raxioms <> Rplus_0_l prfax
R48918:48920 compcert.flocq.Core.Defs <> F2R def
R48923:48927 compcert.flocq.Core.Defs <> Float constr
R48937:48940 Coq.Numbers.BinNums <> Zpos constr
R48929:48934 compcert.flocq.Core.Zaux <> radix2 def
R48907:48915 Coq.Reals.Raxioms <> Rplus_0_l prfax
R48918:48920 compcert.flocq.Core.Defs <> F2R def
R48923:48927 compcert.flocq.Core.Defs <> Float constr
R48937:48940 Coq.Numbers.BinNums <> Zpos constr
R48929:48934 compcert.flocq.Core.Zaux <> radix2 def
R48907:48915 Coq.Reals.Raxioms <> Rplus_0_l prfax
R48918:48920 compcert.flocq.Core.Defs <> F2R def
R48923:48927 compcert.flocq.Core.Defs <> Float constr
R48937:48940 Coq.Numbers.BinNums <> Zpos constr
R48929:48934 compcert.flocq.Core.Zaux <> radix2 def
R48959:48975 Coq.Reals.RIneq <> Rplus_le_compat_r thm
R48959:48975 Coq.Reals.RIneq <> Rplus_le_compat_r thm
R48988:48995 compcert.flocq.Core.Float_prop <> F2R_le_0 thm
R48988:48995 compcert.flocq.Core.Float_prop <> F2R_le_0 thm
R49053:49059 compcert.flocq.Core.Raux <> Rabs_lt thm
R49053:49059 compcert.flocq.Core.Raux <> Rabs_lt thm
R49094:49096 compcert.flocq.Core.Defs <> F2R def
R49099:49103 compcert.flocq.Core.Defs <> Float constr
R49113:49121 compcert.flocq.Core.Zaux <> cond_Zopp def
R49129:49132 Coq.Numbers.BinNums <> Zpos constr
R49123:49126 Coq.Init.Datatypes <> true constr
R49105:49110 compcert.flocq.Core.Zaux <> radix2 def
R49075:49086 Coq.Reals.RIneq <> Rlt_le_trans thm
R49094:49096 compcert.flocq.Core.Defs <> F2R def
R49099:49103 compcert.flocq.Core.Defs <> Float constr
R49113:49121 compcert.flocq.Core.Zaux <> cond_Zopp def
R49129:49132 Coq.Numbers.BinNums <> Zpos constr
R49123:49126 Coq.Init.Datatypes <> true constr
R49105:49110 compcert.flocq.Core.Zaux <> radix2 def
R49075:49086 Coq.Reals.RIneq <> Rlt_le_trans thm
R49153:49160 compcert.flocq.Core.Float_prop <> F2R_Zopp thm
R49153:49160 compcert.flocq.Core.Float_prop <> F2R_Zopp thm
R49153:49160 compcert.flocq.Core.Float_prop <> F2R_Zopp thm
R49173:49189 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R49173:49189 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R49198:49213 compcert.flocq.Core.Generic_fmt <> round_ge_generic thm
R49198:49213 compcert.flocq.Core.Generic_fmt <> round_ge_generic thm
R49228:49251 compcert.flocq.Core.Generic_fmt <> generic_format_canonical thm
R49228:49251 compcert.flocq.Core.Generic_fmt <> generic_format_canonical thm
R49263:49265 compcert.flocq.Core.Defs <> F2R def
R49268:49272 compcert.flocq.Core.Defs <> Float constr
R49282:49290 compcert.flocq.Core.Zaux <> cond_Zopp def
R49298:49301 Coq.Numbers.BinNums <> Zpos constr
R49292:49295 Coq.Init.Datatypes <> true constr
R49274:49279 compcert.flocq.Core.Zaux <> radix2 def
R49331:49339 Coq.Reals.Raxioms <> Rplus_0_l prfax
R49263:49265 compcert.flocq.Core.Defs <> F2R def
R49268:49272 compcert.flocq.Core.Defs <> Float constr
R49282:49290 compcert.flocq.Core.Zaux <> cond_Zopp def
R49298:49301 Coq.Numbers.BinNums <> Zpos constr
R49292:49295 Coq.Init.Datatypes <> true constr
R49274:49279 compcert.flocq.Core.Zaux <> radix2 def
R49331:49339 Coq.Reals.Raxioms <> Rplus_0_l prfax
R49331:49339 Coq.Reals.Raxioms <> Rplus_0_l prfax
R49348:49364 Coq.Reals.RIneq <> Rplus_le_compat_r thm
R49348:49364 Coq.Reals.RIneq <> Rplus_le_compat_r thm
R49377:49384 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R49377:49384 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R49393:49404 Coq.Reals.RIneq <> Rle_lt_trans thm
R49393:49404 Coq.Reals.RIneq <> Rle_lt_trans thm
R49428:49443 compcert.flocq.Core.Generic_fmt <> round_le_generic thm
R49428:49443 compcert.flocq.Core.Generic_fmt <> round_le_generic thm
R49458:49481 compcert.flocq.Core.Generic_fmt <> generic_format_canonical thm
R49458:49481 compcert.flocq.Core.Generic_fmt <> generic_format_canonical thm
R49496:49504 Coq.Reals.RIneq <> Rplus_0_r thm
R49507:49509 compcert.flocq.Core.Defs <> F2R def
R49512:49516 compcert.flocq.Core.Defs <> Float constr
R49526:49529 Coq.Numbers.BinNums <> Zpos constr
R49518:49523 compcert.flocq.Core.Zaux <> radix2 def
R49496:49504 Coq.Reals.RIneq <> Rplus_0_r thm
R49507:49509 compcert.flocq.Core.Defs <> F2R def
R49512:49516 compcert.flocq.Core.Defs <> Float constr
R49526:49529 Coq.Numbers.BinNums <> Zpos constr
R49518:49523 compcert.flocq.Core.Zaux <> radix2 def
R49496:49504 Coq.Reals.RIneq <> Rplus_0_r thm
R49507:49509 compcert.flocq.Core.Defs <> F2R def
R49512:49516 compcert.flocq.Core.Defs <> Float constr
R49526:49529 Coq.Numbers.BinNums <> Zpos constr
R49518:49523 compcert.flocq.Core.Zaux <> radix2 def
R49548:49564 Coq.Reals.RIneq <> Rplus_le_compat_l thm
R49548:49564 Coq.Reals.RIneq <> Rplus_le_compat_l thm
R49577:49584 compcert.flocq.Core.Float_prop <> F2R_le_0 thm
R49577:49584 compcert.flocq.Core.Float_prop <> F2R_le_0 thm
R49607:49630 compcert.flocq.IEEE754.Binary <> binary_normalize_correct thm
R49607:49630 compcert.flocq.IEEE754.Binary <> binary_normalize_correct thm
R49653:49665 compcert.flocq.Core.Raux <> Rlt_bool_spec thm
R49653:49665 compcert.flocq.Core.Raux <> Rlt_bool_spec thm
R49712:49724 compcert.flocq.Core.Raux <> Rcompare_spec thm
R49727:49729 compcert.flocq.Core.Defs <> F2R def
R49749:49770 compcert.flocq.Core.Defs <> Float constr
R49738:49743 compcert.flocq.Core.Zaux <> radix2 def
R49712:49724 compcert.flocq.Core.Raux <> Rcompare_spec thm
R49727:49729 compcert.flocq.Core.Defs <> F2R def
R49749:49770 compcert.flocq.Core.Defs <> Float constr
R49738:49743 compcert.flocq.Core.Zaux <> radix2 def
R49814:49829 Coq.Reals.RIneq <> Rplus_opp_r_uniq thm
R49814:49829 Coq.Reals.RIneq <> Rplus_opp_r_uniq thm
R49849:49856 compcert.flocq.Core.Float_prop <> F2R_Zopp thm
R49849:49856 compcert.flocq.Core.Float_prop <> F2R_Zopp thm
R49849:49856 compcert.flocq.Core.Float_prop <> F2R_Zopp thm
R49872:49887 compcert.flocq.Core.Generic_fmt <> canonical_unique thm
R49872:49887 compcert.flocq.Core.Generic_fmt <> canonical_unique thm
R49963:49990 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R49963:49990 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R49999:50016 Coq.Bool.Bool <> andb_true_iff thm
R49999:50016 Coq.Bool.Bool <> andb_true_iff thm
R50040:50040 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R50041:50049 compcert.flocq.Core.Zaux <> cond_Zopp def
R50055:50059 Coq.ZArith.BinInt Z pos syndef
R50074:50082 compcert.flocq.Core.Zaux <> cond_Zopp def
R50095:50099 Coq.ZArith.BinInt Z pos syndef
R50085:50088 Coq.Init.Datatypes <> negb def
R50040:50040 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R50041:50049 compcert.flocq.Core.Zaux <> cond_Zopp def
R50055:50059 Coq.ZArith.BinInt Z pos syndef
R50074:50082 compcert.flocq.Core.Zaux <> cond_Zopp def
R50095:50099 Coq.ZArith.BinInt Z pos syndef
R50085:50088 Coq.Init.Datatypes <> negb def
R50138:50165 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R50138:50165 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R50174:50191 Coq.Bool.Bool <> andb_true_iff thm
R50174:50191 Coq.Bool.Bool <> andb_true_iff thm
R50271:50277 Coq.Init.Logic <> f_equal thm
R50271:50277 Coq.Init.Logic <> f_equal thm
def 50327:50332 <> Bminus
R50364:50364 compcert.flocq.IEEE754.Binary <> y var
R50361:50361 compcert.flocq.IEEE754.Binary <> x var
R50375:50382 compcert.flocq.IEEE754.Binary <> B754_nan constr
R50398:50405 compcert.flocq.IEEE754.Binary <> B754_nan constr
R50416:50424 compcert.flocq.IEEE754.Binary <> build_nan def
R50427:50435 compcert.flocq.IEEE754.Binary <> minus_nan var
R50439:50439 compcert.flocq.IEEE754.Binary <> y var
R50437:50437 compcert.flocq.IEEE754.Binary <> x var
R50416:50424 compcert.flocq.IEEE754.Binary <> build_nan def
R50427:50435 compcert.flocq.IEEE754.Binary <> minus_nan var
R50439:50439 compcert.flocq.IEEE754.Binary <> y var
R50437:50437 compcert.flocq.IEEE754.Binary <> x var
R50446:50458 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R50464:50476 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R50491:50498 Coq.Bool.Bool <> eqb def
R50504:50507 Coq.Init.Datatypes <> negb def
R50525:50533 compcert.flocq.IEEE754.Binary <> build_nan def
R50536:50544 compcert.flocq.IEEE754.Binary <> minus_nan var
R50548:50548 compcert.flocq.IEEE754.Binary <> y var
R50546:50546 compcert.flocq.IEEE754.Binary <> x var
R50518:50518 compcert.flocq.IEEE754.Binary <> x var
R50555:50567 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R50577:50577 compcert.flocq.IEEE754.Binary <> x var
R50586:50598 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R50606:50618 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R50621:50624 Coq.Init.Datatypes <> negb def
R50634:50642 compcert.flocq.IEEE754.Binary <> B754_zero constr
R50648:50656 compcert.flocq.IEEE754.Binary <> B754_zero constr
R50671:50678 Coq.Bool.Bool <> eqb def
R50684:50687 Coq.Init.Datatypes <> negb def
R50715:50715 compcert.flocq.IEEE754.Binary <> m var
R50722:50728 compcert.flocq.IEEE754.Binary <> mode_DN constr
R50733:50741 compcert.flocq.IEEE754.Binary <> B754_zero constr
R50743:50746 Coq.Init.Datatypes <> true constr
R50755:50763 compcert.flocq.IEEE754.Binary <> B754_zero constr
R50765:50769 Coq.Init.Datatypes <> false constr
R50698:50698 compcert.flocq.IEEE754.Binary <> x var
R50779:50787 compcert.flocq.IEEE754.Binary <> B754_zero constr
R50792:50802 compcert.flocq.IEEE754.Binary <> B754_finite constr
R50819:50829 compcert.flocq.IEEE754.Binary <> B754_finite constr
R50832:50835 Coq.Init.Datatypes <> negb def
R50857:50865 compcert.flocq.IEEE754.Binary <> B754_zero constr
R50872:50872 compcert.flocq.IEEE754.Binary <> x var
R50878:50888 compcert.flocq.IEEE754.Binary <> B754_finite constr
R50903:50913 compcert.flocq.IEEE754.Binary <> B754_finite constr
R50944:50948 Coq.ZArith.BinInt Z min def
R50963:50978 compcert.flocq.IEEE754.Binary <> binary_normalize def
R51105:51105 compcert.flocq.IEEE754.Binary <> m var
R51112:51118 compcert.flocq.IEEE754.Binary <> mode_DN constr
R51123:51126 Coq.Init.Datatypes <> true constr
R51135:51139 Coq.Init.Datatypes <> false constr
R51095:51096 compcert.flocq.IEEE754.Binary <> ez var
R50983:50988 Coq.ZArith.BinInt <> Zminus syndef
R51040:51048 compcert.flocq.Core.Zaux <> cond_Zopp def
R51054:51057 Coq.Numbers.BinNums <> Zpos constr
R51060:51062 Coq.Init.Datatypes <> fst def
R51065:51073 compcert.flocq.IEEE754.Binary <> shl_align def
R51081:51082 compcert.flocq.IEEE754.Binary <> ez var
R50991:50999 compcert.flocq.Core.Zaux <> cond_Zopp def
R51005:51008 Coq.Numbers.BinNums <> Zpos constr
R51011:51013 Coq.Init.Datatypes <> fst def
R51016:51024 compcert.flocq.IEEE754.Binary <> shl_align def
R51032:51033 compcert.flocq.IEEE754.Binary <> ez var
R50980:50980 compcert.flocq.IEEE754.Binary <> m var
prf 51162:51175 <> Bminus_correct
R51225:51230 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51249:51254 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51258:51265 compcert.flocq.Core.Raux <> Rlt_bool def
R51326:51329 compcert.flocq.Core.Raux <> bpow def
R51338:51341 compcert.flocq.IEEE754.Binary <> Binary.emax var
R51331:51336 compcert.flocq.Core.Zaux <> radix2 def
R51268:51271 Coq.Reals.Rbasic_fun <> Rabs def
R51274:51278 compcert.flocq.Core.Generic_fmt <> round def
R51313:51315 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R51308:51310 compcert.flocq.IEEE754.Binary <> B2R def
R51312:51312 compcert.flocq.IEEE754.Binary <> x var
R51316:51318 compcert.flocq.IEEE754.Binary <> B2R def
R51320:51320 compcert.flocq.IEEE754.Binary <> y var
R51293:51302 compcert.flocq.IEEE754.Binary <> round_mode def
R51304:51304 compcert.flocq.IEEE754.Binary <> m var
R51287:51290 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R51280:51285 compcert.flocq.Core.Zaux <> radix2 def
R51837:51840 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R51807:51809 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51778:51781 compcert.flocq.IEEE754.Binary <> B2FF def
R51784:51789 compcert.flocq.IEEE754.Binary <> Bminus def
R51805:51805 compcert.flocq.IEEE754.Binary <> y var
R51803:51803 compcert.flocq.IEEE754.Binary <> x var
R51801:51801 compcert.flocq.IEEE754.Binary <> m var
R51791:51799 compcert.flocq.IEEE754.Binary <> minus_nan var
R51810:51824 compcert.flocq.IEEE754.Binary <> binary_overflow def
R51829:51833 compcert.flocq.IEEE754.Binary <> Bsign def
R51835:51835 compcert.flocq.IEEE754.Binary <> x var
R51826:51826 compcert.flocq.IEEE754.Binary <> m var
R51848:51850 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51841:51845 compcert.flocq.IEEE754.Binary <> Bsign def
R51847:51847 compcert.flocq.IEEE754.Binary <> x var
R51851:51854 Coq.Init.Datatypes <> negb def
R51857:51861 compcert.flocq.IEEE754.Binary <> Bsign def
R51863:51863 compcert.flocq.IEEE754.Binary <> y var
R51432:51439 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R51381:51383 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51353:51355 compcert.flocq.IEEE754.Binary <> B2R def
R51358:51363 compcert.flocq.IEEE754.Binary <> Bminus def
R51379:51379 compcert.flocq.IEEE754.Binary <> y var
R51377:51377 compcert.flocq.IEEE754.Binary <> x var
R51375:51375 compcert.flocq.IEEE754.Binary <> m var
R51365:51373 compcert.flocq.IEEE754.Binary <> minus_nan var
R51384:51388 compcert.flocq.Core.Generic_fmt <> round def
R51423:51425 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R51418:51420 compcert.flocq.IEEE754.Binary <> B2R def
R51422:51422 compcert.flocq.IEEE754.Binary <> x var
R51426:51428 compcert.flocq.IEEE754.Binary <> B2R def
R51430:51430 compcert.flocq.IEEE754.Binary <> y var
R51403:51412 compcert.flocq.IEEE754.Binary <> round_mode def
R51414:51414 compcert.flocq.IEEE754.Binary <> m var
R51397:51400 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R51390:51395 compcert.flocq.Core.Zaux <> radix2 def
R51481:51488 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R51474:51476 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51440:51448 compcert.flocq.IEEE754.Binary <> is_finite def
R51451:51456 compcert.flocq.IEEE754.Binary <> Bminus def
R51472:51472 compcert.flocq.IEEE754.Binary <> y var
R51470:51470 compcert.flocq.IEEE754.Binary <> x var
R51468:51468 compcert.flocq.IEEE754.Binary <> m var
R51458:51466 compcert.flocq.IEEE754.Binary <> minus_nan var
R51477:51480 Coq.Init.Datatypes <> true constr
R51519:51527 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51489:51493 compcert.flocq.IEEE754.Binary <> Bsign def
R51496:51501 compcert.flocq.IEEE754.Binary <> Bminus def
R51517:51517 compcert.flocq.IEEE754.Binary <> y var
R51515:51515 compcert.flocq.IEEE754.Binary <> x var
R51513:51513 compcert.flocq.IEEE754.Binary <> m var
R51503:51511 compcert.flocq.IEEE754.Binary <> minus_nan var
R51534:51541 compcert.flocq.Core.Raux <> Rcompare def
R51549:51551 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R51544:51546 compcert.flocq.IEEE754.Binary <> B2R def
R51548:51548 compcert.flocq.IEEE754.Binary <> x var
R51552:51554 compcert.flocq.IEEE754.Binary <> B2R def
R51556:51556 compcert.flocq.IEEE754.Binary <> y var
R51576:51577 Coq.Init.Datatypes <> Eq constr
R51588:51588 compcert.flocq.IEEE754.Binary <> m var
R51595:51601 compcert.flocq.IEEE754.Binary <> mode_DN constr
R51606:51608 Coq.Init.Datatypes <> orb def
R51621:51624 Coq.Init.Datatypes <> negb def
R51627:51631 compcert.flocq.IEEE754.Binary <> Bsign def
R51633:51633 compcert.flocq.IEEE754.Binary <> y var
R51611:51615 compcert.flocq.IEEE754.Binary <> Bsign def
R51617:51617 compcert.flocq.IEEE754.Binary <> x var
R51677:51680 Coq.Init.Datatypes <> andb def
R51693:51696 Coq.Init.Datatypes <> negb def
R51699:51703 compcert.flocq.IEEE754.Binary <> Bsign def
R51705:51705 compcert.flocq.IEEE754.Binary <> y var
R51683:51687 compcert.flocq.IEEE754.Binary <> Bsign def
R51689:51689 compcert.flocq.IEEE754.Binary <> x var
R51723:51724 Coq.Init.Datatypes <> Lt constr
R51729:51732 Coq.Init.Datatypes <> true constr
R51744:51745 Coq.Init.Datatypes <> Gt constr
R51750:51754 Coq.Init.Datatypes <> false constr
R51242:51244 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51231:51239 compcert.flocq.IEEE754.Binary <> is_finite def
R51241:51241 compcert.flocq.IEEE754.Binary <> y var
R51245:51248 Coq.Init.Datatypes <> true constr
R51218:51220 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51207:51215 compcert.flocq.IEEE754.Binary <> is_finite def
R51217:51217 compcert.flocq.IEEE754.Binary <> x var
R51221:51224 Coq.Init.Datatypes <> true constr
R51952:51964 compcert.flocq.IEEE754.Binary <> Bplus_correct thm
R51981:51984 compcert.flocq.IEEE754.Binary <> Bopp def
R52009:52017 compcert.flocq.IEEE754.Binary <> B754_zero constr
R52019:52023 Coq.Init.Datatypes <> false constr
R52006:52006 compcert.flocq.IEEE754.Binary <> n var
R51952:51964 compcert.flocq.IEEE754.Binary <> Bplus_correct thm
R51981:51984 compcert.flocq.IEEE754.Binary <> Bopp def
R52009:52017 compcert.flocq.IEEE754.Binary <> B754_zero constr
R52019:52023 Coq.Init.Datatypes <> false constr
R52006:52006 compcert.flocq.IEEE754.Binary <> n var
R52043:52056 compcert.flocq.IEEE754.Binary <> is_finite_Bopp thm
R52059:52066 compcert.flocq.IEEE754.Binary <> B2R_Bopp thm
R52043:52056 compcert.flocq.IEEE754.Binary <> is_finite_Bopp thm
R52043:52056 compcert.flocq.IEEE754.Binary <> is_finite_Bopp thm
R52059:52066 compcert.flocq.IEEE754.Binary <> B2R_Bopp thm
R52059:52066 compcert.flocq.IEEE754.Binary <> B2R_Bopp thm
R52107:52110 Coq.Init.Datatypes <> negb def
R52113:52117 compcert.flocq.IEEE754.Binary <> Bsign def
R52129:52133 compcert.flocq.IEEE754.Binary <> Bsign def
R52136:52139 compcert.flocq.IEEE754.Binary <> Bopp def
R52164:52172 compcert.flocq.IEEE754.Binary <> B754_zero constr
R52174:52178 Coq.Init.Datatypes <> false constr
R52161:52161 compcert.flocq.IEEE754.Binary <> n var
R52107:52110 Coq.Init.Datatypes <> negb def
R52113:52117 compcert.flocq.IEEE754.Binary <> Bsign def
R52129:52133 compcert.flocq.IEEE754.Binary <> Bsign def
R52136:52139 compcert.flocq.IEEE754.Binary <> Bopp def
R52164:52172 compcert.flocq.IEEE754.Binary <> B754_zero constr
R52174:52178 Coq.Init.Datatypes <> false constr
R52161:52161 compcert.flocq.IEEE754.Binary <> n var
R52264:52269 compcert.flocq.IEEE754.Binary <> Bminus def
R52272:52277 Coq.ZArith.BinInt Z sub def
R52295:52308 compcert.flocq.Core.Zaux <> cond_Zopp_negb thm
R52295:52308 compcert.flocq.Core.Zaux <> cond_Zopp_negb thm
R52295:52308 compcert.flocq.Core.Zaux <> cond_Zopp_negb thm
def 52374:52389 <> Fdiv_core_binary
R52418:52425 compcert.flocq.Core.Digits <> Zdigits2 def
R52427:52428 compcert.flocq.IEEE754.Binary <> m1 var
R52445:52452 compcert.flocq.Core.Digits <> Zdigits2 def
R52454:52455 compcert.flocq.IEEE754.Binary <> m2 var
R52472:52476 Coq.ZArith.BinInt Z min def
R52510:52512 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R52508:52509 compcert.flocq.IEEE754.Binary <> e1 var
R52513:52514 compcert.flocq.IEEE754.Binary <> e2 var
R52479:52482 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R52492:52495 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R52503:52503 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R52487:52489 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R52485:52486 compcert.flocq.IEEE754.Binary <> d1 var
R52490:52491 compcert.flocq.IEEE754.Binary <> e1 var
R52498:52500 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R52496:52497 compcert.flocq.IEEE754.Binary <> d2 var
R52501:52502 compcert.flocq.IEEE754.Binary <> e2 var
R52539:52541 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R52534:52536 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R52532:52533 compcert.flocq.IEEE754.Binary <> e1 var
R52537:52538 compcert.flocq.IEEE754.Binary <> e2 var
R52542:52543 compcert.flocq.IEEE754.Binary <> e' var
R52573:52573 compcert.flocq.IEEE754.Binary <> s var
R52586:52589 Coq.Numbers.BinNums <> Zpos constr
R52597:52604 Coq.ZArith.BinInt Z shiftl def
R52609:52609 compcert.flocq.IEEE754.Binary <> s var
R52606:52607 compcert.flocq.IEEE754.Binary <> m1 var
R52617:52618 Coq.Numbers.BinNums <> Z0 constr
R52623:52624 compcert.flocq.IEEE754.Binary <> m1 var
R52632:52635 Coq.Numbers.BinNums <> Zneg constr
R52642:52643 Coq.Numbers.BinNums <> Z0 constr
R52674:52687 compcert.flocq.Core.Zaux <> Zfast_div_eucl def
R52692:52693 compcert.flocq.IEEE754.Binary <> m2 var
R52689:52690 compcert.flocq.IEEE754.Binary <> m' var
R52663:52663 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52665:52666 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52668:52668 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52700:52700 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52702:52703 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52706:52707 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52735:52735 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52704:52705 compcert.flocq.IEEE754.Binary <> e' var
R52708:52719 compcert.flocq.Calc.Bracket <> new_location def
R52726:52734 compcert.flocq.Calc.Bracket <> loc_Exact constr
R52721:52722 compcert.flocq.IEEE754.Binary <> m2 var
prf 52745:52760 <> Bdiv_correct_aux
R52805:52807 compcert.flocq.Core.Defs <> F2R def
R52810:52814 compcert.flocq.Core.Defs <> Float constr
R52848:52849 compcert.flocq.IEEE754.Binary <> ex var
R52824:52832 compcert.flocq.Core.Zaux <> cond_Zopp def
R52838:52841 Coq.Numbers.BinNums <> Zpos constr
R52843:52844 compcert.flocq.IEEE754.Binary <> mx var
R52834:52835 compcert.flocq.IEEE754.Binary <> sx var
R52816:52821 compcert.flocq.Core.Zaux <> radix2 def
R52866:52868 compcert.flocq.Core.Defs <> F2R def
R52871:52875 compcert.flocq.Core.Defs <> Float constr
R52909:52910 compcert.flocq.IEEE754.Binary <> ey var
R52885:52893 compcert.flocq.Core.Zaux <> cond_Zopp def
R52899:52902 Coq.Numbers.BinNums <> Zpos constr
R52904:52905 compcert.flocq.IEEE754.Binary <> my var
R52895:52896 compcert.flocq.IEEE754.Binary <> sy var
R52877:52882 compcert.flocq.Core.Zaux <> radix2 def
R52952:52967 compcert.flocq.IEEE754.Binary <> Fdiv_core_binary def
R52992:52993 compcert.flocq.IEEE754.Binary <> ey var
R52983:52986 Coq.Numbers.BinNums <> Zpos constr
R52988:52989 compcert.flocq.IEEE754.Binary <> my var
R52979:52980 compcert.flocq.IEEE754.Binary <> ex var
R52970:52973 Coq.Numbers.BinNums <> Zpos constr
R52975:52976 compcert.flocq.IEEE754.Binary <> mx var
R52936:52936 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52939:52940 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52943:52944 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52947:52947 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53002:53017 compcert.flocq.IEEE754.Binary <> binary_round_aux def
R53022:53025 Coq.Init.Datatypes <> xorb def
R53030:53031 compcert.flocq.IEEE754.Binary <> sy var
R53027:53028 compcert.flocq.IEEE754.Binary <> sx var
R53019:53019 compcert.flocq.IEEE754.Binary <> m var
R53069:53074 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R53062:53064 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53048:53059 compcert.flocq.IEEE754.Binary <> valid_binary def
R53061:53061 compcert.flocq.IEEE754.Binary <> z var
R53065:53068 Coq.Init.Datatypes <> true constr
R53078:53085 compcert.flocq.Core.Raux <> Rlt_bool def
R53138:53141 compcert.flocq.Core.Raux <> bpow def
R53150:53153 compcert.flocq.IEEE754.Binary <> Binary.emax var
R53143:53148 compcert.flocq.Core.Zaux <> radix2 def
R53088:53091 Coq.Reals.Rbasic_fun <> Rabs def
R53094:53098 compcert.flocq.Core.Generic_fmt <> round def
R53129:53131 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R53128:53128 compcert.flocq.IEEE754.Binary <> x var
R53132:53132 compcert.flocq.IEEE754.Binary <> y var
R53113:53122 compcert.flocq.IEEE754.Binary <> round_mode def
R53124:53124 compcert.flocq.IEEE754.Binary <> m var
R53107:53110 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R53100:53105 compcert.flocq.Core.Zaux <> radix2 def
R53289:53291 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53288:53288 compcert.flocq.IEEE754.Binary <> z var
R53292:53306 compcert.flocq.IEEE754.Binary <> binary_overflow def
R53311:53314 Coq.Init.Datatypes <> xorb def
R53319:53320 compcert.flocq.IEEE754.Binary <> sy var
R53316:53317 compcert.flocq.IEEE754.Binary <> sx var
R53308:53308 compcert.flocq.IEEE754.Binary <> m var
R53221:53228 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R53178:53180 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53165:53168 compcert.flocq.IEEE754.Binary <> FF2R def
R53177:53177 compcert.flocq.IEEE754.Binary <> z var
R53170:53175 compcert.flocq.Core.Zaux <> radix2 def
R53181:53185 compcert.flocq.Core.Generic_fmt <> round def
R53216:53218 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R53215:53215 compcert.flocq.IEEE754.Binary <> x var
R53219:53219 compcert.flocq.IEEE754.Binary <> y var
R53200:53209 compcert.flocq.IEEE754.Binary <> round_mode def
R53211:53211 compcert.flocq.IEEE754.Binary <> m var
R53194:53197 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R53187:53192 compcert.flocq.Core.Zaux <> radix2 def
R53250:53253 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R53243:53245 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53229:53240 compcert.flocq.IEEE754.Binary <> is_finite_FF def
R53242:53242 compcert.flocq.IEEE754.Binary <> z var
R53246:53249 Coq.Init.Datatypes <> true constr
R53263:53265 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53254:53260 compcert.flocq.IEEE754.Binary <> sign_FF def
R53262:53262 compcert.flocq.IEEE754.Binary <> z var
R53266:53269 Coq.Init.Datatypes <> xorb def
R53274:53275 compcert.flocq.IEEE754.Binary <> sy var
R53271:53272 compcert.flocq.IEEE754.Binary <> sx var
R53366:53381 compcert.flocq.IEEE754.Binary <> Fdiv_core_binary def
R53394:53409 compcert.flocq.Core.Digits <> Zdigits2_Zdigits thm
R53394:53409 compcert.flocq.Core.Digits <> Zdigits2_Zdigits thm
R53394:53409 compcert.flocq.Core.Digits <> Zdigits2_Zdigits thm
R53394:53409 compcert.flocq.Core.Digits <> Zdigits2_Zdigits thm
R53423:53427 Coq.ZArith.BinInt Z min def
R53423:53427 Coq.ZArith.BinInt Z min def
R53447:53463 compcert.flocq.Calc.Div <> Fdiv_core_correct thm
R53509:53515 Coq.Init.Logic <> eq_refl constr
R53501:53507 Coq.Init.Logic <> eq_refl constr
R53486:53489 Coq.Numbers.BinNums <> Zpos constr
R53473:53476 Coq.Numbers.BinNums <> Zpos constr
R53465:53470 compcert.flocq.Core.Zaux <> radix2 def
R53447:53463 compcert.flocq.Calc.Div <> Fdiv_core_correct thm
R53509:53515 Coq.Init.Logic <> eq_refl constr
R53501:53507 Coq.Init.Logic <> eq_refl constr
R53486:53489 Coq.Numbers.BinNums <> Zpos constr
R53473:53476 Coq.Numbers.BinNums <> Zpos constr
R53465:53470 compcert.flocq.Core.Zaux <> radix2 def
R53526:53534 compcert.flocq.Calc.Div <> Fdiv_core def
R53568:53577 Coq.ZArith.BinInt Z le_min_r thm
R53545:53557 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R53545:53557 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R53568:53577 Coq.ZArith.BinInt Z le_min_r thm
R53545:53557 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R53608:53621 compcert.flocq.Core.Zaux <> Zfast_div_eucl def
R53608:53621 compcert.flocq.Core.Zaux <> Zfast_div_eucl def
R53663:53665 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53673:53675 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R53666:53669 Coq.Numbers.BinNums <> Zpos constr
R53676:53681 Coq.ZArith.Zpow_def <> Zpower syndef
R53698:53700 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R53693:53695 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R53683:53688 compcert.flocq.Core.Zaux <> radix2 def
R53663:53665 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53673:53675 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R53666:53669 Coq.Numbers.BinNums <> Zpos constr
R53676:53681 Coq.ZArith.Zpow_def <> Zpower syndef
R53698:53700 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R53693:53695 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R53683:53688 compcert.flocq.Core.Zaux <> radix2 def
R53748:53750 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R53743:53745 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R53748:53750 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R53743:53745 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R53782:53790 Coq.ZArith.BinInt <> Zmult_1_r syndef
R53782:53790 Coq.ZArith.BinInt <> Zmult_1_r syndef
R53782:53790 Coq.ZArith.BinInt <> Zmult_1_r syndef
R53807:53823 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R53807:53823 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R53807:53823 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R53807:53823 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R53859:53880 compcert.flocq.Core.Zaux <> Zfast_div_eucl_correct thm
R53859:53880 compcert.flocq.Core.Zaux <> Zfast_div_eucl_correct thm
R53859:53880 compcert.flocq.Core.Zaux <> Zfast_div_eucl_correct thm
R53892:53901 Coq.ZArith.BinInt Z div_eucl def
R53892:53901 Coq.ZArith.BinInt Z div_eucl def
R53942:53944 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53932:53935 Coq.Init.Datatypes <> xorb def
R53945:53952 compcert.flocq.Core.Raux <> Rlt_bool def
R54001:54005 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R53955:53957 compcert.flocq.Core.Defs <> F2R def
R53960:53964 compcert.flocq.Core.Defs <> Float constr
R53974:53982 compcert.flocq.Core.Zaux <> cond_Zopp def
R53988:53991 Coq.Numbers.BinNums <> Zpos constr
R53966:53971 compcert.flocq.Core.Zaux <> radix2 def
R54006:54007 Coq.Reals.Rdefinitions <> ::R_scope:'/'_x not
R54008:54010 compcert.flocq.Core.Defs <> F2R def
R54013:54017 compcert.flocq.Core.Defs <> Float constr
R54027:54035 compcert.flocq.Core.Zaux <> cond_Zopp def
R54041:54044 Coq.Numbers.BinNums <> Zpos constr
R54019:54024 compcert.flocq.Core.Zaux <> radix2 def
R53942:53944 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53932:53935 Coq.Init.Datatypes <> xorb def
R53945:53952 compcert.flocq.Core.Raux <> Rlt_bool def
R54001:54005 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R53955:53957 compcert.flocq.Core.Defs <> F2R def
R53960:53964 compcert.flocq.Core.Defs <> Float constr
R53974:53982 compcert.flocq.Core.Zaux <> cond_Zopp def
R53988:53991 Coq.Numbers.BinNums <> Zpos constr
R53966:53971 compcert.flocq.Core.Zaux <> radix2 def
R54006:54007 Coq.Reals.Rdefinitions <> ::R_scope:'/'_x not
R54008:54010 compcert.flocq.Core.Defs <> F2R def
R54013:54017 compcert.flocq.Core.Defs <> Float constr
R54027:54035 compcert.flocq.Core.Zaux <> cond_Zopp def
R54041:54044 Coq.Numbers.BinNums <> Zpos constr
R54019:54024 compcert.flocq.Core.Zaux <> radix2 def
R54074:54079 Coq.Init.Logic <> eq_sym thm
R54074:54079 Coq.Init.Logic <> eq_sym thm
R54107:54110 Coq.Numbers.BinNums <> Zneg constr
R54122:54126 Coq.ZArith.BinInt Z opp def
R54129:54132 Coq.Numbers.BinNums <> Zpos constr
R54107:54110 Coq.Numbers.BinNums <> Zneg constr
R54122:54126 Coq.ZArith.BinInt Z opp def
R54129:54132 Coq.Numbers.BinNums <> Zpos constr
R54148:54155 compcert.flocq.Core.Float_prop <> F2R_Zopp thm
R54148:54155 compcert.flocq.Core.Float_prop <> F2R_Zopp thm
R54148:54155 compcert.flocq.Core.Float_prop <> F2R_Zopp thm
R54169:54184 Coq.Reals.RIneq <> Ropp_inv_permute thm
R54169:54184 Coq.Reals.RIneq <> Ropp_inv_permute thm
R54169:54184 Coq.Reals.RIneq <> Ropp_inv_permute thm
R54169:54184 Coq.Reals.RIneq <> Ropp_inv_permute thm
R54195:54219 Coq.Reals.RIneq <> Ropp_mult_distr_r_reverse thm
R54195:54219 Coq.Reals.RIneq <> Ropp_mult_distr_r_reverse thm
R54195:54219 Coq.Reals.RIneq <> Ropp_mult_distr_r_reverse thm
R54245:54258 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R54245:54258 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R54272:54296 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R54272:54296 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R54272:54296 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R54305:54316 Coq.Reals.RIneq <> Rmult_le_pos thm
R54305:54316 Coq.Reals.RIneq <> Rmult_le_pos thm
R54330:54336 compcert.flocq.Calc.Operations <> F2R_opp thm
R54330:54336 compcert.flocq.Calc.Operations <> F2R_opp thm
R54330:54336 compcert.flocq.Calc.Operations <> F2R_opp thm
R54349:54356 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R54349:54356 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R54365:54370 Coq.Reals.RIneq <> Rlt_le thm
R54365:54370 Coq.Reals.RIneq <> Rlt_le thm
R54379:54394 Coq.Reals.RIneq <> Rinv_0_lt_compat thm
R54379:54394 Coq.Reals.RIneq <> Rinv_0_lt_compat thm
R54407:54414 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R54407:54414 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R54423:54435 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R54423:54435 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R54449:54454 Coq.Reals.RIneq <> Ropp_0 thm
R54449:54454 Coq.Reals.RIneq <> Ropp_0 thm
R54449:54454 Coq.Reals.RIneq <> Ropp_0 thm
R54463:54479 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R54463:54479 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R54488:54504 Coq.Reals.RIneq <> Rmult_lt_0_compat thm
R54488:54504 Coq.Reals.RIneq <> Rmult_lt_0_compat thm
R54517:54524 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R54517:54524 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R54533:54548 Coq.Reals.RIneq <> Rinv_0_lt_compat thm
R54533:54548 Coq.Reals.RIneq <> Rinv_0_lt_compat thm
R54561:54568 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R54561:54568 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R54577:54586 Coq.Reals.RIneq <> Rgt_not_eq thm
R54577:54586 Coq.Reals.RIneq <> Rgt_not_eq thm
R54599:54606 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R54599:54606 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R54624:54636 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R54624:54636 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R54647:54654 compcert.flocq.Core.Float_prop <> F2R_Zopp thm
R54647:54654 compcert.flocq.Core.Float_prop <> F2R_Zopp thm
R54647:54654 compcert.flocq.Core.Float_prop <> F2R_Zopp thm
R54665:54689 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R54665:54689 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R54665:54689 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R54703:54708 Coq.Reals.RIneq <> Ropp_0 thm
R54703:54708 Coq.Reals.RIneq <> Ropp_0 thm
R54703:54708 Coq.Reals.RIneq <> Ropp_0 thm
R54717:54733 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R54717:54733 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R54742:54758 Coq.Reals.RIneq <> Rmult_lt_0_compat thm
R54742:54758 Coq.Reals.RIneq <> Rmult_lt_0_compat thm
R54771:54778 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R54771:54778 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R54787:54802 Coq.Reals.RIneq <> Rinv_0_lt_compat thm
R54787:54802 Coq.Reals.RIneq <> Rinv_0_lt_compat thm
R54815:54822 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R54815:54822 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R54831:54844 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R54831:54844 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R54853:54864 Coq.Reals.RIneq <> Rmult_le_pos thm
R54853:54864 Coq.Reals.RIneq <> Rmult_le_pos thm
R54877:54884 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R54877:54884 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R54893:54898 Coq.Reals.RIneq <> Rlt_le thm
R54893:54898 Coq.Reals.RIneq <> Rlt_le thm
R54907:54922 Coq.Reals.RIneq <> Rinv_0_lt_compat thm
R54907:54922 Coq.Reals.RIneq <> Rinv_0_lt_compat thm
R54935:54942 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R54935:54942 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R54954:54957 Coq.Reals.Rdefinitions <> Rdiv def
R54966:54990 compcert.flocq.IEEE754.Binary <> binary_round_aux_correct' thm
R54966:54990 compcert.flocq.IEEE754.Binary <> binary_round_aux_correct' thm
R55001:55039 Coq.Reals.RIneq <> Rmult_integral_contrapositive_currified thm
R55001:55039 Coq.Reals.RIneq <> Rmult_integral_contrapositive_currified thm
R55054:55062 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
R55054:55062 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
R55083:55099 Coq.Reals.RIneq <> Rinv_neq_0_compat thm
R55083:55099 Coq.Reals.RIneq <> Rinv_neq_0_compat thm
R55114:55122 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
R55114:55122 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
R55145:55153 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R55156:55164 Coq.Reals.Rbasic_fun <> Rabs_Rinv thm
R55145:55153 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R55145:55153 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R55156:55164 Coq.Reals.Rbasic_fun <> Rabs_Rinv thm
R55156:55164 Coq.Reals.Rbasic_fun <> Rabs_Rinv thm
R55156:55164 Coq.Reals.Rbasic_fun <> Rabs_Rinv thm
R55186:55193 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R55198:55210 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R55186:55193 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R55186:55193 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R55186:55193 compcert.flocq.Core.Float_prop <> F2R_Zabs thm
R55198:55210 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R55198:55210 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R55198:55210 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R55225:55233 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
R55225:55233 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
R55259:55266 compcert.flocq.Core.Generic_fmt <> cexp_abs thm
R55269:55277 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R55280:55288 Coq.Reals.Rbasic_fun <> Rabs_Rinv thm
R55259:55266 compcert.flocq.Core.Generic_fmt <> cexp_abs thm
R55259:55266 compcert.flocq.Core.Generic_fmt <> cexp_abs thm
R55269:55277 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R55269:55277 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R55280:55288 Coq.Reals.Rbasic_fun <> Rabs_Rinv thm
R55280:55288 Coq.Reals.Rbasic_fun <> Rabs_Rinv thm
R55280:55288 Coq.Reals.Rbasic_fun <> Rabs_Rinv thm
R55303:55315 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R55320:55332 compcert.flocq.Core.Raux <> abs_cond_Ropp thm
R55338:55346 Coq.Reals.Rbasic_fun <> Rabs_Rinv thm
R55303:55315 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R55303:55315 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R55303:55315 compcert.flocq.Core.Float_prop <> F2R_cond_Zopp thm
R55320:55332 compcert.flocq.Core.Raux <> abs_cond_Ropp thm
R55320:55332 compcert.flocq.Core.Raux <> abs_cond_Ropp thm
R55320:55332 compcert.flocq.Core.Raux <> abs_cond_Ropp thm
R55338:55346 Coq.Reals.Rbasic_fun <> Rabs_Rinv thm
R55338:55346 Coq.Reals.Rbasic_fun <> Rabs_Rinv thm
R55338:55346 Coq.Reals.Rbasic_fun <> Rabs_Rinv thm
R55362:55370 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R55373:55380 compcert.flocq.Core.Generic_fmt <> cexp_abs thm
R55362:55370 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R55362:55370 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R55373:55380 compcert.flocq.Core.Generic_fmt <> cexp_abs thm
R55373:55380 compcert.flocq.Core.Generic_fmt <> cexp_abs thm
R55413:55422 Coq.ZArith.BinInt Z le_min_l thm
R55391:55400 Coq.ZArith.BinInt Z le_trans thm
R55413:55422 Coq.ZArith.BinInt Z le_min_l thm
R55391:55400 Coq.ZArith.BinInt Z le_trans thm
R55438:55453 compcert.flocq.Core.FLT <> FLT_exp_monotone inst
R55438:55453 compcert.flocq.Core.FLT <> FLT_exp_monotone inst
R55468:55478 compcert.flocq.Calc.Div <> mag_div_F2R thm
R55468:55478 compcert.flocq.Calc.Div <> mag_div_F2R thm
R55493:55501 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
R55493:55501 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
R55516:55524 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
R55516:55524 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
def 55554:55557 <> Bdiv
R55587:55587 compcert.flocq.IEEE754.Binary <> y var
R55584:55584 compcert.flocq.IEEE754.Binary <> x var
R55598:55605 compcert.flocq.IEEE754.Binary <> B754_nan constr
R55621:55628 compcert.flocq.IEEE754.Binary <> B754_nan constr
R55639:55647 compcert.flocq.IEEE754.Binary <> build_nan def
R55650:55656 compcert.flocq.IEEE754.Binary <> div_nan var
R55660:55660 compcert.flocq.IEEE754.Binary <> y var
R55658:55658 compcert.flocq.IEEE754.Binary <> x var
R55639:55647 compcert.flocq.IEEE754.Binary <> build_nan def
R55650:55656 compcert.flocq.IEEE754.Binary <> div_nan var
R55660:55660 compcert.flocq.IEEE754.Binary <> y var
R55658:55658 compcert.flocq.IEEE754.Binary <> x var
R55667:55679 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R55685:55697 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R55705:55713 compcert.flocq.IEEE754.Binary <> build_nan def
R55716:55722 compcert.flocq.IEEE754.Binary <> div_nan var
R55726:55726 compcert.flocq.IEEE754.Binary <> y var
R55724:55724 compcert.flocq.IEEE754.Binary <> x var
R55733:55745 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R55751:55761 compcert.flocq.IEEE754.Binary <> B754_finite constr
R55775:55787 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R55790:55793 Coq.Init.Datatypes <> xorb def
R55806:55816 compcert.flocq.IEEE754.Binary <> B754_finite constr
R55828:55840 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R55848:55856 compcert.flocq.IEEE754.Binary <> B754_zero constr
R55859:55862 Coq.Init.Datatypes <> xorb def
R55875:55887 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R55893:55901 compcert.flocq.IEEE754.Binary <> B754_zero constr
R55909:55921 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R55924:55927 Coq.Init.Datatypes <> xorb def
R55940:55948 compcert.flocq.IEEE754.Binary <> B754_zero constr
R55954:55966 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R55974:55982 compcert.flocq.IEEE754.Binary <> B754_zero constr
R55985:55988 Coq.Init.Datatypes <> xorb def
R56001:56011 compcert.flocq.IEEE754.Binary <> B754_finite constr
R56023:56031 compcert.flocq.IEEE754.Binary <> B754_zero constr
R56039:56051 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R56054:56057 Coq.Init.Datatypes <> xorb def
R56070:56078 compcert.flocq.IEEE754.Binary <> B754_zero constr
R56084:56094 compcert.flocq.IEEE754.Binary <> B754_finite constr
R56108:56116 compcert.flocq.IEEE754.Binary <> B754_zero constr
R56119:56122 Coq.Init.Datatypes <> xorb def
R56135:56143 compcert.flocq.IEEE754.Binary <> B754_zero constr
R56149:56157 compcert.flocq.IEEE754.Binary <> B754_zero constr
R56165:56173 compcert.flocq.IEEE754.Binary <> build_nan def
R56176:56182 compcert.flocq.IEEE754.Binary <> div_nan var
R56186:56186 compcert.flocq.IEEE754.Binary <> y var
R56184:56184 compcert.flocq.IEEE754.Binary <> x var
R56193:56203 compcert.flocq.IEEE754.Binary <> B754_finite constr
R56217:56227 compcert.flocq.IEEE754.Binary <> B754_finite constr
R56247:56250 compcert.flocq.IEEE754.Binary <> FF2B def
R56255:56259 Coq.Init.Logic <> proj1 thm
R56262:56277 compcert.flocq.IEEE754.Binary <> Bdiv_correct_aux thm
R56279:56279 compcert.flocq.IEEE754.Binary <> m var
prf 56317:56328 <> Bdiv_correct
R56370:56375 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56379:56386 compcert.flocq.Core.Raux <> Rlt_bool def
R56447:56450 compcert.flocq.Core.Raux <> bpow def
R56459:56462 compcert.flocq.IEEE754.Binary <> Binary.emax var
R56452:56457 compcert.flocq.Core.Zaux <> radix2 def
R56389:56392 Coq.Reals.Rbasic_fun <> Rabs def
R56395:56399 compcert.flocq.Core.Generic_fmt <> round def
R56434:56436 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R56429:56431 compcert.flocq.IEEE754.Binary <> B2R def
R56433:56433 compcert.flocq.IEEE754.Binary <> x var
R56437:56439 compcert.flocq.IEEE754.Binary <> B2R def
R56441:56441 compcert.flocq.IEEE754.Binary <> y var
R56414:56423 compcert.flocq.IEEE754.Binary <> round_mode def
R56425:56425 compcert.flocq.IEEE754.Binary <> m var
R56408:56411 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R56401:56406 compcert.flocq.Core.Zaux <> radix2 def
R56746:56748 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56721:56724 compcert.flocq.IEEE754.Binary <> B2FF def
R56727:56730 compcert.flocq.IEEE754.Binary <> Bdiv def
R56744:56744 compcert.flocq.IEEE754.Binary <> y var
R56742:56742 compcert.flocq.IEEE754.Binary <> x var
R56740:56740 compcert.flocq.IEEE754.Binary <> m var
R56732:56738 compcert.flocq.IEEE754.Binary <> div_nan var
R56749:56763 compcert.flocq.IEEE754.Binary <> binary_overflow def
R56768:56771 Coq.Init.Datatypes <> xorb def
R56784:56788 compcert.flocq.IEEE754.Binary <> Bsign def
R56790:56790 compcert.flocq.IEEE754.Binary <> y var
R56774:56778 compcert.flocq.IEEE754.Binary <> Bsign def
R56780:56780 compcert.flocq.IEEE754.Binary <> x var
R56765:56765 compcert.flocq.IEEE754.Binary <> m var
R56549:56556 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R56498:56500 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56474:56476 compcert.flocq.IEEE754.Binary <> B2R def
R56479:56482 compcert.flocq.IEEE754.Binary <> Bdiv def
R56496:56496 compcert.flocq.IEEE754.Binary <> y var
R56494:56494 compcert.flocq.IEEE754.Binary <> x var
R56492:56492 compcert.flocq.IEEE754.Binary <> m var
R56484:56490 compcert.flocq.IEEE754.Binary <> div_nan var
R56501:56505 compcert.flocq.Core.Generic_fmt <> round def
R56540:56542 Coq.Reals.Rdefinitions <> ::R_scope:x_'/'_x not
R56535:56537 compcert.flocq.IEEE754.Binary <> B2R def
R56539:56539 compcert.flocq.IEEE754.Binary <> x var
R56543:56545 compcert.flocq.IEEE754.Binary <> B2R def
R56547:56547 compcert.flocq.IEEE754.Binary <> y var
R56520:56529 compcert.flocq.IEEE754.Binary <> round_mode def
R56531:56531 compcert.flocq.IEEE754.Binary <> m var
R56514:56517 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R56507:56512 compcert.flocq.Core.Zaux <> radix2 def
R56601:56609 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R56708:56708 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R56587:56589 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56557:56565 compcert.flocq.IEEE754.Binary <> is_finite def
R56568:56571 compcert.flocq.IEEE754.Binary <> Bdiv def
R56585:56585 compcert.flocq.IEEE754.Binary <> y var
R56583:56583 compcert.flocq.IEEE754.Binary <> x var
R56581:56581 compcert.flocq.IEEE754.Binary <> m var
R56573:56579 compcert.flocq.IEEE754.Binary <> div_nan var
R56590:56598 compcert.flocq.IEEE754.Binary <> is_finite def
R56600:56600 compcert.flocq.IEEE754.Binary <> x var
R56645:56654 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56681:56683 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56655:56659 compcert.flocq.IEEE754.Binary <> Bsign def
R56662:56665 compcert.flocq.IEEE754.Binary <> Bdiv def
R56679:56679 compcert.flocq.IEEE754.Binary <> y var
R56677:56677 compcert.flocq.IEEE754.Binary <> x var
R56675:56675 compcert.flocq.IEEE754.Binary <> m var
R56667:56673 compcert.flocq.IEEE754.Binary <> div_nan var
R56684:56687 Coq.Init.Datatypes <> xorb def
R56700:56704 compcert.flocq.IEEE754.Binary <> Bsign def
R56706:56706 compcert.flocq.IEEE754.Binary <> y var
R56690:56694 compcert.flocq.IEEE754.Binary <> Bsign def
R56696:56696 compcert.flocq.IEEE754.Binary <> x var
R56637:56639 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56610:56615 compcert.flocq.IEEE754.Binary <> is_nan def
R56618:56621 compcert.flocq.IEEE754.Binary <> Bdiv def
R56635:56635 compcert.flocq.IEEE754.Binary <> y var
R56633:56633 compcert.flocq.IEEE754.Binary <> x var
R56631:56631 compcert.flocq.IEEE754.Binary <> m var
R56623:56629 compcert.flocq.IEEE754.Binary <> div_nan var
R56640:56644 Coq.Init.Datatypes <> false constr
R56363:56366 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R56358:56360 compcert.flocq.IEEE754.Binary <> B2R def
R56362:56362 compcert.flocq.IEEE754.Binary <> y var
R56887:56890 Coq.Reals.Rdefinitions <> Rdiv def
R56948:56956 Coq.Reals.RIneq <> Rmult_0_l thm
R56959:56965 compcert.flocq.Core.Generic_fmt <> round_0 thm
R56968:56974 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R56977:56989 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R57026:57038 compcert.flocq.IEEE754.Binary <> B2R_build_nan thm
R57041:57059 compcert.flocq.IEEE754.Binary <> is_finite_build_nan thm
R57062:57077 compcert.flocq.IEEE754.Binary <> is_nan_build_nan thm
R57087:57095 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R56948:56956 Coq.Reals.RIneq <> Rmult_0_l thm
R56948:56956 Coq.Reals.RIneq <> Rmult_0_l thm
R56959:56965 compcert.flocq.Core.Generic_fmt <> round_0 thm
R56959:56965 compcert.flocq.Core.Generic_fmt <> round_0 thm
R56959:56965 compcert.flocq.Core.Generic_fmt <> round_0 thm
R56968:56974 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R56968:56974 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R56977:56989 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R56977:56989 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R56977:56989 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R57087:57095 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R56948:56956 Coq.Reals.RIneq <> Rmult_0_l thm
R56948:56956 Coq.Reals.RIneq <> Rmult_0_l thm
R56959:56965 compcert.flocq.Core.Generic_fmt <> round_0 thm
R56959:56965 compcert.flocq.Core.Generic_fmt <> round_0 thm
R56959:56965 compcert.flocq.Core.Generic_fmt <> round_0 thm
R56968:56974 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R56968:56974 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R56977:56989 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R56977:56989 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R56977:56989 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R57087:57095 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R56948:56956 Coq.Reals.RIneq <> Rmult_0_l thm
R56948:56956 Coq.Reals.RIneq <> Rmult_0_l thm
R56959:56965 compcert.flocq.Core.Generic_fmt <> round_0 thm
R56959:56965 compcert.flocq.Core.Generic_fmt <> round_0 thm
R56959:56965 compcert.flocq.Core.Generic_fmt <> round_0 thm
R56968:56974 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R56968:56974 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R56977:56989 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R56977:56989 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R56977:56989 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R57087:57095 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R56948:56956 Coq.Reals.RIneq <> Rmult_0_l thm
R57146:57161 compcert.flocq.IEEE754.Binary <> Bdiv_correct_aux thm
R57146:57161 compcert.flocq.IEEE754.Binary <> Bdiv_correct_aux thm
R57182:57185 Coq.Reals.Rdefinitions <> Rdiv def
R57193:57200 compcert.flocq.Core.Raux <> Rlt_bool def
R57193:57200 compcert.flocq.Core.Raux <> Rlt_bool def
R57245:57252 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R57245:57252 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R57245:57252 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R57274:57287 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R57274:57287 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R57274:57287 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R57298:57307 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R57298:57307 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R57298:57307 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R57345:57353 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R57345:57353 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R57345:57353 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
def 57393:57409 <> Fsqrt_core_binary
R57429:57436 compcert.flocq.Core.Digits <> Zdigits2 def
R57438:57438 compcert.flocq.IEEE754.Binary <> m var
R57455:57459 Coq.ZArith.BinInt Z min def
R57490:57495 Coq.ZArith.BinInt Z div2 def
R57497:57497 compcert.flocq.IEEE754.Binary <> e var
R57462:57465 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R57468:57473 Coq.ZArith.BinInt Z div2 def
R57481:57483 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R57477:57479 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R57476:57476 compcert.flocq.IEEE754.Binary <> d var
R57480:57480 compcert.flocq.IEEE754.Binary <> e var
R57516:57518 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R57515:57515 compcert.flocq.IEEE754.Binary <> e var
R57520:57522 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R57523:57524 compcert.flocq.IEEE754.Binary <> e' var
R57554:57554 compcert.flocq.IEEE754.Binary <> s var
R57567:57570 Coq.Numbers.BinNums <> Zpos constr
R57577:57584 Coq.ZArith.BinInt Z shiftl def
R57588:57588 compcert.flocq.IEEE754.Binary <> s var
R57586:57586 compcert.flocq.IEEE754.Binary <> m var
R57596:57597 Coq.Numbers.BinNums <> Z0 constr
R57602:57602 compcert.flocq.IEEE754.Binary <> m var
R57610:57613 Coq.Numbers.BinNums <> Zneg constr
R57620:57621 Coq.Numbers.BinNums <> Z0 constr
R57650:57658 Coq.ZArith.BinInt Z sqrtrem def
R57660:57661 compcert.flocq.IEEE754.Binary <> m' var
R57684:57691 Coq.ZArith.Zbool <> Zeq_bool def
R57693:57693 compcert.flocq.IEEE754.Binary <> r var
R57721:57731 compcert.flocq.Calc.Bracket <> loc_Inexact constr
R57737:57744 Coq.ZArith.Zbool <> Zle_bool syndef
R57748:57748 compcert.flocq.IEEE754.Binary <> q var
R57746:57746 compcert.flocq.IEEE754.Binary <> r var
R57763:57764 Coq.Init.Datatypes <> Gt constr
R57755:57756 Coq.Init.Datatypes <> Lt constr
R57702:57710 compcert.flocq.Calc.Bracket <> loc_Exact constr
R57772:57772 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57774:57775 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57778:57779 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57781:57781 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57773:57773 compcert.flocq.IEEE754.Binary <> q var
R57776:57777 compcert.flocq.IEEE754.Binary <> e' var
R57780:57780 compcert.flocq.IEEE754.Binary <> l var
prf 57791:57807 <> Bsqrt_correct_aux
R57847:57849 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57834:57840 compcert.flocq.IEEE754.Binary <> bounded def
R57845:57846 compcert.flocq.IEEE754.Binary <> ex var
R57842:57843 compcert.flocq.IEEE754.Binary <> mx var
R57850:57853 Coq.Init.Datatypes <> true constr
R57868:57870 compcert.flocq.Core.Defs <> F2R def
R57873:57877 compcert.flocq.Core.Defs <> Float constr
R57896:57897 compcert.flocq.IEEE754.Binary <> ex var
R57887:57890 Coq.Numbers.BinNums <> Zpos constr
R57892:57893 compcert.flocq.IEEE754.Binary <> mx var
R57879:57884 compcert.flocq.Core.Zaux <> radix2 def
R57939:57955 compcert.flocq.IEEE754.Binary <> Fsqrt_core_binary def
R57967:57968 compcert.flocq.IEEE754.Binary <> ex var
R57958:57961 Coq.Numbers.BinNums <> Zpos constr
R57963:57964 compcert.flocq.IEEE754.Binary <> mx var
R57923:57923 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57926:57927 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57930:57931 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57934:57934 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57977:57992 compcert.flocq.IEEE754.Binary <> binary_round_aux def
R57996:58000 Coq.Init.Datatypes <> false constr
R57994:57994 compcert.flocq.IEEE754.Binary <> m var
R58037:58042 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R58030:58032 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58016:58027 compcert.flocq.IEEE754.Binary <> valid_binary def
R58029:58029 compcert.flocq.IEEE754.Binary <> z var
R58033:58036 Coq.Init.Datatypes <> true constr
R58100:58105 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R58056:58058 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58043:58046 compcert.flocq.IEEE754.Binary <> FF2R def
R58055:58055 compcert.flocq.IEEE754.Binary <> z var
R58048:58053 compcert.flocq.Core.Zaux <> radix2 def
R58059:58063 compcert.flocq.Core.Generic_fmt <> round def
R58093:58096 Coq.Reals.R_sqrt <> sqrt def
R58098:58098 compcert.flocq.IEEE754.Binary <> x var
R58078:58087 compcert.flocq.IEEE754.Binary <> round_mode def
R58089:58089 compcert.flocq.IEEE754.Binary <> m var
R58072:58075 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R58065:58070 compcert.flocq.Core.Zaux <> radix2 def
R58127:58130 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R58120:58122 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58106:58117 compcert.flocq.IEEE754.Binary <> is_finite_FF def
R58119:58119 compcert.flocq.IEEE754.Binary <> z var
R58123:58126 Coq.Init.Datatypes <> true constr
R58140:58142 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58131:58137 compcert.flocq.IEEE754.Binary <> sign_FF def
R58139:58139 compcert.flocq.IEEE754.Binary <> z var
R58143:58147 Coq.Init.Datatypes <> false constr
R58218:58234 compcert.flocq.IEEE754.Binary <> Fsqrt_core_binary def
R58245:58260 compcert.flocq.Core.Digits <> Zdigits2_Zdigits thm
R58245:58260 compcert.flocq.Core.Digits <> Zdigits2_Zdigits thm
R58245:58260 compcert.flocq.Core.Digits <> Zdigits2_Zdigits thm
R58274:58278 Coq.ZArith.BinInt Z min def
R58274:58278 Coq.ZArith.BinInt Z min def
R58300:58303 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R58295:58297 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R58300:58303 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R58295:58297 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R58329:58332 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R58333:58338 Coq.ZArith.BinInt Z div2 def
R58355:58364 Coq.ZArith.BinInt Z le_min_r thm
R58329:58332 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R58333:58338 Coq.ZArith.BinInt Z div2 def
R58355:58364 Coq.ZArith.BinInt Z le_min_r thm
R58378:58390 Coq.ZArith.Zeven <> Zdiv2_odd_eqn thm
R58378:58390 Coq.ZArith.Zeven <> Zdiv2_odd_eqn thm
R58378:58390 Coq.ZArith.Zeven <> Zdiv2_odd_eqn thm
R58408:58412 Coq.ZArith.BinInt Z odd def
R58408:58412 Coq.ZArith.BinInt Z odd def
R58437:58454 compcert.flocq.Calc.Sqrt <> Fsqrt_core_correct thm
R58479:58485 Coq.Init.Logic <> eq_refl constr
R58464:58467 Coq.Numbers.BinNums <> Zpos constr
R58456:58461 compcert.flocq.Core.Zaux <> radix2 def
R58437:58454 compcert.flocq.Calc.Sqrt <> Fsqrt_core_correct thm
R58479:58485 Coq.Init.Logic <> eq_refl constr
R58464:58467 Coq.Numbers.BinNums <> Zpos constr
R58456:58461 compcert.flocq.Core.Zaux <> radix2 def
R58499:58508 compcert.flocq.Calc.Sqrt <> Fsqrt_core def
R58532:58534 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R58536:58538 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R58550:58551 Coq.Numbers.BinNums <> Z0 constr
R58532:58534 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R58536:58538 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R58550:58551 Coq.Numbers.BinNums <> Z0 constr
R58584:58586 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58594:58596 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R58587:58590 Coq.Numbers.BinNums <> Zpos constr
R58597:58602 Coq.ZArith.Zpow_def <> Zpower syndef
R58614:58616 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R58618:58620 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R58604:58609 compcert.flocq.Core.Zaux <> radix2 def
R58584:58586 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58594:58596 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R58587:58590 Coq.Numbers.BinNums <> Zpos constr
R58597:58602 Coq.ZArith.Zpow_def <> Zpower syndef
R58614:58616 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R58618:58620 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R58604:58609 compcert.flocq.Core.Zaux <> radix2 def
R58663:58665 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R58667:58669 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R58663:58665 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R58667:58669 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R58701:58709 Coq.ZArith.BinInt <> Zmult_1_r syndef
R58701:58709 Coq.ZArith.BinInt <> Zmult_1_r syndef
R58701:58709 Coq.ZArith.BinInt <> Zmult_1_r syndef
R58726:58742 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R58726:58742 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R58726:58742 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R58726:58742 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R58779:58787 Coq.ZArith.BinInt Z sqrtrem def
R58779:58787 Coq.ZArith.BinInt Z sqrtrem def
R58814:58821 Coq.ZArith.Zbool <> Zeq_bool def
R58814:58821 Coq.ZArith.Zbool <> Zeq_bool def
R58879:58903 compcert.flocq.IEEE754.Binary <> binary_round_aux_correct' thm
R58908:58911 Coq.Reals.R_sqrt <> sqrt def
R58914:58916 compcert.flocq.Core.Defs <> F2R def
R58919:58923 compcert.flocq.Core.Defs <> Float constr
R58933:58936 Coq.Numbers.BinNums <> Zpos constr
R58925:58930 compcert.flocq.Core.Zaux <> radix2 def
R58879:58903 compcert.flocq.IEEE754.Binary <> binary_round_aux_correct' thm
R58908:58911 Coq.Reals.R_sqrt <> sqrt def
R58914:58916 compcert.flocq.Core.Defs <> F2R def
R58919:58923 compcert.flocq.Core.Defs <> Float constr
R58933:58936 Coq.Numbers.BinNums <> Zpos constr
R58925:58930 compcert.flocq.Core.Zaux <> radix2 def
R58988:58997 Coq.Reals.RIneq <> Rgt_not_eq thm
R59000:59009 Coq.Reals.R_sqrt <> sqrt_lt_R0 thm
R59012:59019 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R58988:58997 Coq.Reals.RIneq <> Rgt_not_eq thm
R59000:59009 Coq.Reals.R_sqrt <> sqrt_lt_R0 thm
R59012:59019 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R59032:59042 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R59032:59042 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R59032:59042 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R59032:59042 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R59065:59073 compcert.flocq.Core.Raux <> sqrt_ge_0 thm
R59065:59073 compcert.flocq.Core.Raux <> sqrt_ge_0 thm
R59106:59115 Coq.ZArith.BinInt Z le_min_l thm
R59084:59093 Coq.ZArith.BinInt Z le_trans thm
R59106:59115 Coq.ZArith.BinInt Z le_min_l thm
R59084:59093 Coq.ZArith.BinInt Z le_trans thm
R59131:59146 compcert.flocq.Core.FLT <> FLT_exp_monotone inst
R59131:59146 compcert.flocq.Core.FLT <> FLT_exp_monotone inst
R59159:59170 compcert.flocq.Calc.Sqrt <> mag_sqrt_F2R thm
R59159:59170 compcert.flocq.Calc.Sqrt <> mag_sqrt_F2R thm
R59159:59170 compcert.flocq.Calc.Sqrt <> mag_sqrt_F2R thm
R59189:59197 Coq.ZArith.BinInt Z le_refl thm
R59189:59197 Coq.ZArith.BinInt Z le_refl thm
R59232:59240 compcert.flocq.Core.Raux <> sqrt_ge_0 thm
R59208:59221 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R59208:59221 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R59232:59240 compcert.flocq.Core.Raux <> sqrt_ge_0 thm
R59208:59221 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R59251:59263 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R59251:59263 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R59251:59263 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R59251:59263 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R59280:59290 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R59280:59290 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R59280:59290 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R59280:59290 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R59304:59324 compcert.flocq.Prop.Relative <> relative_error_FLT_ex thm
R59376:59379 Coq.Reals.R_sqrt <> sqrt def
R59382:59384 compcert.flocq.Core.Defs <> F2R def
R59387:59391 compcert.flocq.Core.Defs <> Float constr
R59401:59404 Coq.Numbers.BinNums <> Zpos constr
R59393:59398 compcert.flocq.Core.Zaux <> radix2 def
R59361:59370 compcert.flocq.IEEE754.Binary <> round_mode def
R59344:59352 compcert.flocq.Core.FLX <> prec_gt_0 def
R59354:59357 compcert.flocq.IEEE754.Binary <> Binary.prec var
R59338:59341 compcert.flocq.IEEE754.Binary <> Binary.prec var
R59333:59336 compcert.flocq.IEEE754.Binary <> Binary.emin var
R59326:59331 compcert.flocq.Core.Zaux <> radix2 def
R59304:59324 compcert.flocq.Prop.Relative <> relative_error_FLT_ex thm
R59376:59379 Coq.Reals.R_sqrt <> sqrt def
R59382:59384 compcert.flocq.Core.Defs <> F2R def
R59387:59391 compcert.flocq.Core.Defs <> Float constr
R59401:59404 Coq.Numbers.BinNums <> Zpos constr
R59393:59398 compcert.flocq.Core.Zaux <> radix2 def
R59361:59370 compcert.flocq.IEEE754.Binary <> round_mode def
R59344:59352 compcert.flocq.Core.FLX <> prec_gt_0 def
R59354:59357 compcert.flocq.IEEE754.Binary <> Binary.prec var
R59338:59341 compcert.flocq.IEEE754.Binary <> Binary.prec var
R59333:59336 compcert.flocq.IEEE754.Binary <> Binary.emin var
R59326:59331 compcert.flocq.Core.Zaux <> radix2 def
R59426:59429 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R59426:59429 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R59494:59496 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x not
R59486:59489 Coq.Reals.Rbasic_fun <> Rabs def
R59494:59496 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x not
R59486:59489 Coq.Reals.Rbasic_fun <> Rabs def
R59510:59521 Coq.Reals.RIneq <> Rlt_le_trans thm
R59510:59521 Coq.Reals.RIneq <> Rlt_le_trans thm
R59547:59550 compcert.flocq.Core.Raux <> bpow def
R59552:59557 compcert.flocq.Core.Zaux <> radix2 def
R59547:59550 compcert.flocq.Core.Raux <> bpow def
R59552:59557 compcert.flocq.Core.Zaux <> radix2 def
R59569:59575 compcert.flocq.Core.Raux <> bpow_le thm
R59569:59575 compcert.flocq.Core.Raux <> bpow_le thm
R59590:59598 compcert.flocq.Core.FLX <> prec_gt_0 def
R59600:59603 compcert.flocq.IEEE754.Binary <> Binary.prec var
R59590:59598 compcert.flocq.Core.FLX <> prec_gt_0 def
R59600:59603 compcert.flocq.IEEE754.Binary <> Binary.prec var
R59628:59640 Coq.Reals.R_sqr <> Rsqr_incrst_0 thm
R59628:59640 Coq.Reals.R_sqr <> Rsqr_incrst_0 thm
R59652:59660 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R59652:59660 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R59671:59679 Coq.Reals.R_sqr <> Rsqr_mult thm
R59671:59679 Coq.Reals.R_sqr <> Rsqr_mult thm
R59671:59679 Coq.Reals.R_sqr <> Rsqr_mult thm
R59690:59698 Coq.Reals.R_sqrt <> Rsqr_sqrt thm
R59690:59698 Coq.Reals.R_sqrt <> Rsqr_sqrt thm
R59690:59698 Coq.Reals.R_sqrt <> Rsqr_sqrt thm
R59690:59698 Coq.Reals.R_sqrt <> Rsqr_sqrt thm
R59714:59721 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R59714:59721 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R59731:59734 Coq.Reals.RIneq <> Rsqr def
R59743:59767 Coq.Reals.RIneq <> Rmult_ge_0_gt_0_lt_compat thm
R59743:59767 Coq.Reals.RIneq <> Rmult_ge_0_gt_0_lt_compat thm
R59776:59781 Coq.Reals.RIneq <> Rle_ge thm
R59776:59781 Coq.Reals.RIneq <> Rle_ge thm
R59790:59798 Coq.Reals.RIneq <> Rle_0_sqr thm
R59790:59798 Coq.Reals.RIneq <> Rle_0_sqr thm
R59807:59815 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R59807:59815 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R59828:59842 compcert.flocq.IEEE754.Binary <> bounded_lt_emax thm
R59828:59842 compcert.flocq.IEEE754.Binary <> bounded_lt_emax thm
R59851:59862 Coq.Reals.RIneq <> Rlt_le_trans thm
R59851:59862 Coq.Reals.RIneq <> Rlt_le_trans thm
R59881:59893 Coq.Reals.R_sqr <> Rsqr_incrst_1 thm
R59881:59893 Coq.Reals.R_sqr <> Rsqr_incrst_1 thm
R59907:59923 Coq.Reals.Raxioms <> Rplus_lt_compat_l prfax
R59907:59923 Coq.Reals.Raxioms <> Rplus_lt_compat_l prfax
R59933:59943 compcert.flocq.Core.Raux <> Rabs_lt_inv thm
R59933:59943 compcert.flocq.Core.Raux <> Rabs_lt_inv thm
R59969:59979 Coq.Reals.Raxioms <> Rplus_opp_r prfax
R59969:59979 Coq.Reals.Raxioms <> Rplus_opp_r prfax
R59969:59979 Coq.Reals.Raxioms <> Rplus_opp_r prfax
R59991:60007 Coq.Reals.RIneq <> Rplus_le_compat_l thm
R59991:60007 Coq.Reals.RIneq <> Rplus_le_compat_l thm
R60016:60021 Coq.Reals.RIneq <> Rlt_le thm
R60016:60021 Coq.Reals.RIneq <> Rlt_le thm
R60031:60041 compcert.flocq.Core.Raux <> Rabs_lt_inv thm
R60031:60041 compcert.flocq.Core.Raux <> Rabs_lt_inv thm
R60065:60070 Coq.Reals.RIneq <> IZR_le thm
R60065:60070 Coq.Reals.RIneq <> IZR_le thm
R60090:60093 compcert.flocq.Core.Raux <> bpow def
R60095:60100 compcert.flocq.Core.Zaux <> radix2 def
R60090:60093 compcert.flocq.Core.Raux <> bpow def
R60095:60100 compcert.flocq.Core.Zaux <> radix2 def
R60112:60118 compcert.flocq.Core.Raux <> bpow_le thm
R60112:60118 compcert.flocq.Core.Raux <> bpow_le thm
R60133:60141 compcert.flocq.Core.FLX <> prec_gt_0 def
R60143:60146 compcert.flocq.IEEE754.Binary <> Binary.prec var
R60133:60141 compcert.flocq.Core.FLX <> prec_gt_0 def
R60143:60146 compcert.flocq.IEEE754.Binary <> Binary.prec var
R60177:60188 Coq.Reals.RIneq <> Rmult_le_pos thm
R60177:60188 Coq.Reals.RIneq <> Rmult_le_pos thm
R60197:60205 compcert.flocq.Core.Raux <> sqrt_ge_0 thm
R60197:60205 compcert.flocq.Core.Raux <> sqrt_ge_0 thm
R60220:60230 Coq.Reals.Raxioms <> Rplus_opp_r prfax
R60220:60230 Coq.Reals.Raxioms <> Rplus_opp_r prfax
R60220:60230 Coq.Reals.Raxioms <> Rplus_opp_r prfax
R60242:60258 Coq.Reals.RIneq <> Rplus_le_compat_l thm
R60242:60258 Coq.Reals.RIneq <> Rplus_le_compat_l thm
R60267:60272 Coq.Reals.RIneq <> Rlt_le thm
R60267:60272 Coq.Reals.RIneq <> Rlt_le thm
R60282:60292 compcert.flocq.Core.Raux <> Rabs_lt_inv thm
R60282:60292 compcert.flocq.Core.Raux <> Rabs_lt_inv thm
R60314:60324 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R60314:60324 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R60314:60324 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R60314:60324 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R60336:60344 compcert.flocq.Core.Raux <> sqrt_ge_0 thm
R60336:60344 compcert.flocq.Core.Raux <> sqrt_ge_0 thm
R60353:60363 Coq.Reals.R_sqr <> Rsqr_incr_0 thm
R60353:60363 Coq.Reals.R_sqr <> Rsqr_incr_0 thm
R60375:60383 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R60375:60383 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R60395:60403 compcert.flocq.Core.Raux <> sqrt_ge_0 thm
R60395:60403 compcert.flocq.Core.Raux <> sqrt_ge_0 thm
R60414:60422 Coq.Reals.R_sqrt <> Rsqr_sqrt thm
R60414:60422 Coq.Reals.R_sqrt <> Rsqr_sqrt thm
R60414:60422 Coq.Reals.R_sqrt <> Rsqr_sqrt thm
R60414:60422 Coq.Reals.R_sqrt <> Rsqr_sqrt thm
R60438:60445 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R60438:60445 compcert.flocq.Core.Float_prop <> F2R_ge_0 thm
R60470:60473 compcert.flocq.Core.Raux <> bpow def
R60482:60485 compcert.flocq.IEEE754.Binary <> Binary.emin var
R60475:60480 compcert.flocq.Core.Zaux <> radix2 def
R60454:60462 Coq.Reals.RIneq <> Rle_trans thm
R60470:60473 compcert.flocq.Core.Raux <> bpow def
R60482:60485 compcert.flocq.IEEE754.Binary <> Binary.emin var
R60475:60480 compcert.flocq.Core.Zaux <> radix2 def
R60454:60462 Coq.Reals.RIneq <> Rle_trans thm
R60496:60499 Coq.Reals.RIneq <> Rsqr def
R60513:60521 compcert.flocq.Core.Raux <> bpow_plus thm
R60513:60521 compcert.flocq.Core.Raux <> bpow_plus thm
R60513:60521 compcert.flocq.Core.Raux <> bpow_plus thm
R60530:60536 compcert.flocq.Core.Raux <> bpow_le thm
R60530:60536 compcert.flocq.Core.Raux <> bpow_le thm
R60546:60549 compcert.flocq.IEEE754.Binary <> emin vardef
R60607:60610 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R60579:60600 compcert.flocq.Core.Generic_fmt <> generic_format_ge_bpow thm
R60607:60610 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R60579:60600 compcert.flocq.Core.Generic_fmt <> generic_format_ge_bpow thm
R60627:60636 Coq.ZArith.BinInt Z le_max_r thm
R60627:60636 Coq.ZArith.BinInt Z le_max_r thm
R60649:60656 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R60649:60656 compcert.flocq.Core.Float_prop <> F2R_gt_0 thm
R60665:60688 compcert.flocq.Core.Generic_fmt <> generic_format_canonical thm
R60665:60688 compcert.flocq.Core.Generic_fmt <> generic_format_canonical thm
R60698:60725 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R60727:60731 Coq.Init.Datatypes <> false constr
R60698:60725 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R60727:60731 Coq.Init.Datatypes <> false constr
R60742:60750 Coq.Init.Datatypes <> andb_prop thm
R60742:60750 Coq.Init.Datatypes <> andb_prop thm
R60767:60782 compcert.flocq.Core.Generic_fmt <> round_ge_generic thm
R60767:60782 compcert.flocq.Core.Generic_fmt <> round_ge_generic thm
R60793:60808 compcert.flocq.Core.Generic_fmt <> generic_format_0 thm
R60793:60808 compcert.flocq.Core.Generic_fmt <> generic_format_0 thm
R60817:60825 compcert.flocq.Core.Raux <> sqrt_ge_0 thm
R60817:60825 compcert.flocq.Core.Raux <> sqrt_ge_0 thm
def 60845:60849 <> Bsqrt
R60875:60875 compcert.flocq.IEEE754.Binary <> x var
R60886:60893 compcert.flocq.IEEE754.Binary <> B754_nan constr
R60907:60915 compcert.flocq.IEEE754.Binary <> build_nan def
R60918:60925 compcert.flocq.IEEE754.Binary <> sqrt_nan var
R60927:60927 compcert.flocq.IEEE754.Binary <> x var
R60934:60946 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R60948:60952 Coq.Init.Datatypes <> false constr
R60957:60957 compcert.flocq.IEEE754.Binary <> x var
R60963:60975 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R60977:60980 Coq.Init.Datatypes <> true constr
R60985:60993 compcert.flocq.IEEE754.Binary <> build_nan def
R60996:61003 compcert.flocq.IEEE754.Binary <> sqrt_nan var
R61005:61005 compcert.flocq.IEEE754.Binary <> x var
R61012:61022 compcert.flocq.IEEE754.Binary <> B754_finite constr
R61024:61027 Coq.Init.Datatypes <> true constr
R61038:61046 compcert.flocq.IEEE754.Binary <> build_nan def
R61049:61056 compcert.flocq.IEEE754.Binary <> sqrt_nan var
R61058:61058 compcert.flocq.IEEE754.Binary <> x var
R61065:61073 compcert.flocq.IEEE754.Binary <> B754_zero constr
R61080:61080 compcert.flocq.IEEE754.Binary <> x var
R61086:61096 compcert.flocq.IEEE754.Binary <> B754_finite constr
R61117:61120 compcert.flocq.IEEE754.Binary <> FF2B def
R61125:61129 Coq.Init.Logic <> proj1 thm
R61132:61148 compcert.flocq.IEEE754.Binary <> Bsqrt_correct_aux thm
R61150:61150 compcert.flocq.IEEE754.Binary <> m var
prf 61179:61191 <> Bsqrt_correct
R61294:61299 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R61244:61246 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61220:61222 compcert.flocq.IEEE754.Binary <> B2R def
R61225:61229 compcert.flocq.IEEE754.Binary <> Bsqrt def
R61242:61242 compcert.flocq.IEEE754.Binary <> x var
R61240:61240 compcert.flocq.IEEE754.Binary <> m var
R61231:61238 compcert.flocq.IEEE754.Binary <> sqrt_nan var
R61247:61251 compcert.flocq.Core.Generic_fmt <> round def
R61281:61284 Coq.Reals.R_sqrt <> sqrt def
R61287:61289 compcert.flocq.IEEE754.Binary <> B2R def
R61291:61291 compcert.flocq.IEEE754.Binary <> x var
R61266:61275 compcert.flocq.IEEE754.Binary <> round_mode def
R61277:61277 compcert.flocq.IEEE754.Binary <> m var
R61260:61263 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R61253:61258 compcert.flocq.Core.Zaux <> radix2 def
R61416:61422 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R61498:61498 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R61330:61332 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61300:61308 compcert.flocq.IEEE754.Binary <> is_finite def
R61311:61315 compcert.flocq.IEEE754.Binary <> Bsqrt def
R61328:61328 compcert.flocq.IEEE754.Binary <> x var
R61326:61326 compcert.flocq.IEEE754.Binary <> m var
R61317:61324 compcert.flocq.IEEE754.Binary <> sqrt_nan var
R61339:61339 compcert.flocq.IEEE754.Binary <> x var
R61346:61354 compcert.flocq.IEEE754.Binary <> B754_zero constr
R61361:61364 Coq.Init.Datatypes <> true constr
R61368:61378 compcert.flocq.IEEE754.Binary <> B754_finite constr
R61380:61384 Coq.Init.Datatypes <> false constr
R61395:61398 Coq.Init.Datatypes <> true constr
R61407:61411 Coq.Init.Datatypes <> false constr
R61458:61461 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61488:61490 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61462:61466 compcert.flocq.IEEE754.Binary <> Bsign def
R61469:61473 compcert.flocq.IEEE754.Binary <> Bsqrt def
R61486:61486 compcert.flocq.IEEE754.Binary <> x var
R61484:61484 compcert.flocq.IEEE754.Binary <> m var
R61475:61482 compcert.flocq.IEEE754.Binary <> sqrt_nan var
R61491:61495 compcert.flocq.IEEE754.Binary <> Bsign def
R61497:61497 compcert.flocq.IEEE754.Binary <> x var
R61450:61452 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61423:61428 compcert.flocq.IEEE754.Binary <> is_nan def
R61431:61435 compcert.flocq.IEEE754.Binary <> Bsqrt def
R61448:61448 compcert.flocq.IEEE754.Binary <> x var
R61446:61446 compcert.flocq.IEEE754.Binary <> m var
R61437:61444 compcert.flocq.IEEE754.Binary <> sqrt_nan var
R61453:61457 Coq.Init.Datatypes <> false constr
R61585:61590 Coq.Reals.R_sqrt <> sqrt_0 thm
R61593:61599 compcert.flocq.Core.Generic_fmt <> round_0 thm
R61603:61615 compcert.flocq.IEEE754.Binary <> B2R_build_nan thm
R61619:61637 compcert.flocq.IEEE754.Binary <> is_finite_build_nan thm
R61641:61656 compcert.flocq.IEEE754.Binary <> is_nan_build_nan thm
R61585:61590 Coq.Reals.R_sqrt <> sqrt_0 thm
R61585:61590 Coq.Reals.R_sqrt <> sqrt_0 thm
R61593:61599 compcert.flocq.Core.Generic_fmt <> round_0 thm
R61593:61599 compcert.flocq.Core.Generic_fmt <> round_0 thm
R61593:61599 compcert.flocq.Core.Generic_fmt <> round_0 thm
R61603:61615 compcert.flocq.IEEE754.Binary <> B2R_build_nan thm
R61603:61615 compcert.flocq.IEEE754.Binary <> B2R_build_nan thm
R61619:61637 compcert.flocq.IEEE754.Binary <> is_finite_build_nan thm
R61619:61637 compcert.flocq.IEEE754.Binary <> is_finite_build_nan thm
R61641:61656 compcert.flocq.IEEE754.Binary <> is_nan_build_nan thm
R61641:61656 compcert.flocq.IEEE754.Binary <> is_nan_build_nan thm
R61585:61590 Coq.Reals.R_sqrt <> sqrt_0 thm
R61585:61590 Coq.Reals.R_sqrt <> sqrt_0 thm
R61593:61599 compcert.flocq.Core.Generic_fmt <> round_0 thm
R61593:61599 compcert.flocq.Core.Generic_fmt <> round_0 thm
R61593:61599 compcert.flocq.Core.Generic_fmt <> round_0 thm
R61603:61615 compcert.flocq.IEEE754.Binary <> B2R_build_nan thm
R61603:61615 compcert.flocq.IEEE754.Binary <> B2R_build_nan thm
R61619:61637 compcert.flocq.IEEE754.Binary <> is_finite_build_nan thm
R61619:61637 compcert.flocq.IEEE754.Binary <> is_finite_build_nan thm
R61641:61656 compcert.flocq.IEEE754.Binary <> is_nan_build_nan thm
R61641:61656 compcert.flocq.IEEE754.Binary <> is_nan_build_nan thm
R61585:61590 Coq.Reals.R_sqrt <> sqrt_0 thm
R61585:61590 Coq.Reals.R_sqrt <> sqrt_0 thm
R61593:61599 compcert.flocq.Core.Generic_fmt <> round_0 thm
R61593:61599 compcert.flocq.Core.Generic_fmt <> round_0 thm
R61593:61599 compcert.flocq.Core.Generic_fmt <> round_0 thm
R61603:61615 compcert.flocq.IEEE754.Binary <> B2R_build_nan thm
R61603:61615 compcert.flocq.IEEE754.Binary <> B2R_build_nan thm
R61619:61637 compcert.flocq.IEEE754.Binary <> is_finite_build_nan thm
R61619:61637 compcert.flocq.IEEE754.Binary <> is_finite_build_nan thm
R61641:61656 compcert.flocq.IEEE754.Binary <> is_nan_build_nan thm
R61641:61656 compcert.flocq.IEEE754.Binary <> is_nan_build_nan thm
R61585:61590 Coq.Reals.R_sqrt <> sqrt_0 thm
R61585:61590 Coq.Reals.R_sqrt <> sqrt_0 thm
R61593:61599 compcert.flocq.Core.Generic_fmt <> round_0 thm
R61593:61599 compcert.flocq.Core.Generic_fmt <> round_0 thm
R61593:61599 compcert.flocq.Core.Generic_fmt <> round_0 thm
R61603:61615 compcert.flocq.IEEE754.Binary <> B2R_build_nan thm
R61603:61615 compcert.flocq.IEEE754.Binary <> B2R_build_nan thm
R61619:61637 compcert.flocq.IEEE754.Binary <> is_finite_build_nan thm
R61619:61637 compcert.flocq.IEEE754.Binary <> is_finite_build_nan thm
R61641:61656 compcert.flocq.IEEE754.Binary <> is_nan_build_nan thm
R61641:61656 compcert.flocq.IEEE754.Binary <> is_nan_build_nan thm
R61585:61590 Coq.Reals.R_sqrt <> sqrt_0 thm
R61721:61737 compcert.flocq.IEEE754.Binary <> Bsqrt_correct_aux thm
R61721:61737 compcert.flocq.IEEE754.Binary <> Bsqrt_correct_aux thm
R61783:61795 compcert.flocq.IEEE754.Binary <> B2R_build_nan thm
R61798:61816 compcert.flocq.IEEE754.Binary <> is_finite_build_nan thm
R61819:61834 compcert.flocq.IEEE754.Binary <> is_nan_build_nan thm
R61783:61795 compcert.flocq.IEEE754.Binary <> B2R_build_nan thm
R61783:61795 compcert.flocq.IEEE754.Binary <> B2R_build_nan thm
R61798:61816 compcert.flocq.IEEE754.Binary <> is_finite_build_nan thm
R61798:61816 compcert.flocq.IEEE754.Binary <> is_finite_build_nan thm
R61819:61834 compcert.flocq.IEEE754.Binary <> is_nan_build_nan thm
R61819:61834 compcert.flocq.IEEE754.Binary <> is_nan_build_nan thm
R61845:61848 Coq.Init.Logic <> conj constr
R61853:61856 Coq.Init.Logic <> conj constr
R61859:61868 Coq.Init.Logic <> refl_equal syndef
R61870:61874 Coq.Init.Datatypes <> false constr
R61845:61848 Coq.Init.Logic <> conj constr
R61853:61856 Coq.Init.Logic <> conj constr
R61859:61868 Coq.Init.Logic <> refl_equal syndef
R61870:61874 Coq.Init.Datatypes <> false constr
R61888:61893 Coq.Init.Logic <> sym_eq syndef
R61888:61893 Coq.Init.Logic <> sym_eq syndef
R61903:61906 Coq.Reals.R_sqrt <> sqrt def
R61914:61922 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R61914:61922 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R61941:61947 compcert.flocq.Core.Generic_fmt <> round_0 thm
R61941:61947 compcert.flocq.Core.Generic_fmt <> round_0 thm
R61996:62005 Coq.Reals.RIneq <> Rge_not_lt thm
R61996:62005 Coq.Reals.RIneq <> Rge_not_lt thm
R62032:62039 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R62032:62039 compcert.flocq.Core.Float_prop <> F2R_lt_0 thm
R62067:62074 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R62067:62074 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R62067:62074 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R62096:62109 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R62096:62109 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R62096:62109 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R62134:62143 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R62134:62143 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R62134:62143 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
def 62184:62187 <> Bone
R62192:62195 compcert.flocq.IEEE754.Binary <> FF2B def
R62200:62204 Coq.Init.Logic <> proj1 thm
R62207:62226 compcert.flocq.IEEE754.Binary <> binary_round_correct thm
R62236:62240 Coq.Init.Datatypes <> false constr
R62228:62234 compcert.flocq.IEEE754.Binary <> mode_NE constr
prf 62258:62269 <> Bone_correct
R62281:62283 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62273:62275 compcert.flocq.IEEE754.Binary <> B2R def
R62277:62280 compcert.flocq.IEEE754.Binary <> Bone def
R62303:62306 compcert.flocq.IEEE754.Binary <> Bone def
R62327:62346 compcert.flocq.IEEE754.Binary <> binary_round_correct thm
R62327:62346 compcert.flocq.IEEE754.Binary <> binary_round_correct thm
R62377:62384 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R62377:62384 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R62377:62384 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R62428:62431 compcert.flocq.IEEE754.Binary <> Binary.emin var
R62428:62431 compcert.flocq.IEEE754.Binary <> Binary.emin var
R62449:62461 compcert.flocq.Core.Generic_fmt <> round_generic thm
R62476:62486 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R62449:62461 compcert.flocq.Core.Generic_fmt <> round_generic thm
R62449:62461 compcert.flocq.Core.Generic_fmt <> round_generic thm
R62449:62461 compcert.flocq.Core.Generic_fmt <> round_generic thm
R62449:62461 compcert.flocq.Core.Generic_fmt <> round_generic thm
R62476:62486 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R62500:62502 compcert.flocq.Core.Defs <> F2R def
R62520:62528 Coq.Reals.RIneq <> Rmult_1_r thm
R62520:62528 Coq.Reals.RIneq <> Rmult_1_r thm
R62520:62528 Coq.Reals.RIneq <> Rmult_1_r thm
R62541:62553 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R62541:62553 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R62541:62553 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R62541:62553 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R62606:62616 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R62606:62616 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R62606:62616 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R62606:62616 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R62648:62651 compcert.flocq.Core.Raux <> bpow def
R62653:62658 compcert.flocq.Core.Zaux <> radix2 def
R62670:62676 compcert.flocq.Core.Raux <> bpow_lt thm
R62648:62651 compcert.flocq.Core.Raux <> bpow def
R62653:62658 compcert.flocq.Core.Zaux <> radix2 def
R62670:62676 compcert.flocq.Core.Raux <> bpow_lt thm
R62690:62698 compcert.flocq.Core.FLX <> Prec_gt_0 class
R62728:62745 compcert.flocq.Core.Generic_fmt <> generic_format_F2R thm
R62728:62745 compcert.flocq.Core.Generic_fmt <> generic_format_F2R thm
R62767:62770 compcert.flocq.Core.Generic_fmt <> cexp def
R62773:62776 compcert.flocq.IEEE754.Binary <> fexp vardef
R62779:62785 compcert.flocq.Core.FLT <> FLT_exp def
R62788:62790 compcert.flocq.Core.Defs <> F2R def
R62808:62816 Coq.Reals.RIneq <> Rmult_1_r thm
R62819:62823 compcert.flocq.Core.Raux <> mag_1 thm
R62808:62816 Coq.Reals.RIneq <> Rmult_1_r thm
R62808:62816 Coq.Reals.RIneq <> Rmult_1_r thm
R62819:62823 compcert.flocq.Core.Raux <> mag_1 thm
R62819:62823 compcert.flocq.Core.Raux <> mag_1 thm
R62835:62838 compcert.flocq.IEEE754.Binary <> emin vardef
R62848:62856 compcert.flocq.Core.FLX <> Prec_gt_0 class
prf 62890:62903 <> is_finite_Bone
R62921:62923 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62907:62915 compcert.flocq.IEEE754.Binary <> is_finite def
R62917:62920 compcert.flocq.IEEE754.Binary <> Bone def
R62924:62927 Coq.Init.Datatypes <> true constr
R62948:62959 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R62967:62970 compcert.flocq.IEEE754.Binary <> Bone def
R62948:62959 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R62967:62970 compcert.flocq.IEEE754.Binary <> Bone def
prf 63042:63051 <> Bsign_Bone
R63065:63067 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63055:63059 compcert.flocq.IEEE754.Binary <> Bsign def
R63061:63064 compcert.flocq.IEEE754.Binary <> Bone def
R63068:63072 Coq.Init.Datatypes <> false constr
R63093:63104 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R63112:63115 compcert.flocq.IEEE754.Binary <> Bone def
R63093:63104 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R63112:63115 compcert.flocq.IEEE754.Binary <> Bone def
R63202:63204 compcert.flocq.Core.Defs <> F2R def
R63248:63257 Coq.Reals.RIneq <> Rlt_not_eq thm
R63261:63272 Coq.Reals.RIneq <> Rle_lt_trans thm
R63248:63257 Coq.Reals.RIneq <> Rlt_not_eq thm
R63261:63272 Coq.Reals.RIneq <> Rle_lt_trans thm
R63298:63303 Coq.Reals.RIneq <> Ropp_0 thm
R63309:63323 Coq.Reals.RIneq <> Ropp_involutive thm
R63327:63329 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R63341:63357 Coq.Reals.RIneq <> Ropp_le_contravar thm
R63298:63303 Coq.Reals.RIneq <> Ropp_0 thm
R63298:63303 Coq.Reals.RIneq <> Ropp_0 thm
R63309:63323 Coq.Reals.RIneq <> Ropp_involutive thm
R63327:63329 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R63309:63323 Coq.Reals.RIneq <> Ropp_involutive thm
R63327:63329 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R63341:63357 Coq.Reals.RIneq <> Ropp_le_contravar thm
R63368:63384 Coq.Reals.RIneq <> Ropp_mult_distr_l thm
R63393:63404 Coq.Reals.RIneq <> Rmult_le_pos thm
R63419:63427 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R63368:63384 Coq.Reals.RIneq <> Ropp_mult_distr_l thm
R63368:63384 Coq.Reals.RIneq <> Ropp_mult_distr_l thm
R63393:63404 Coq.Reals.RIneq <> Rmult_le_pos thm
R63419:63427 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R63438:63440 Coq.Reals.Rdefinitions <> IZR def
R63453:63459 Coq.Reals.RIneq <> INR_IPR thm
R63474:63480 Coq.Reals.RIneq <> INR_pos syndef
R63453:63459 Coq.Reals.RIneq <> INR_IPR thm
R63453:63459 Coq.Reals.RIneq <> INR_IPR thm
R63474:63480 Coq.Reals.RIneq <> INR_pos syndef
prf 63503:63518 <> Bmax_float_proof
R63608:63612 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63524:63535 compcert.flocq.IEEE754.Binary <> valid_binary def
R63542:63552 compcert.flocq.IEEE754.Binary <> F754_finite constr
R63599:63601 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R63595:63598 compcert.flocq.IEEE754.Binary <> Binary.emax var
R63602:63605 compcert.flocq.IEEE754.Binary <> Binary.prec var
R63588:63590 Coq.PArith.BinPos <> ::positive_scope:x_'-'_x not
R63561:63569 Coq.ZArith.Zpower <> shift_pos def
R63572:63579 Coq.ZArith.BinInt Z to_pos def
R63581:63584 compcert.flocq.IEEE754.Binary <> Binary.prec var
R63554:63558 Coq.Init.Datatypes <> false constr
R63613:63616 Coq.Init.Datatypes <> true constr
R63633:63644 compcert.flocq.IEEE754.Binary <> valid_binary def
R63647:63653 compcert.flocq.IEEE754.Binary <> bounded def
R63662:63676 Coq.Init.Datatypes <> andb_true_intro thm
R63662:63676 Coq.Init.Datatypes <> andb_true_intro thm
R63695:63712 compcert.flocq.IEEE754.Binary <> canonical_mantissa def
R63721:63733 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R63721:63733 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R63748:63752 Coq.ZArith.BinInt Z pos syndef
R63755:63765 compcert.flocq.Core.Digits <> digits2_pos def
R63748:63752 Coq.ZArith.BinInt Z pos syndef
R63755:63765 compcert.flocq.Core.Digits <> digits2_pos def
R63787:63789 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63790:63793 compcert.flocq.IEEE754.Binary <> Binary.prec var
R63787:63789 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63790:63793 compcert.flocq.IEEE754.Binary <> Binary.prec var
R63819:63834 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R63837:63849 Coq.ZArith.BinInt Pos2Z inj_sub thm
R63819:63834 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R63819:63834 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R63837:63849 Coq.ZArith.BinInt Pos2Z inj_sub thm
R63837:63849 Coq.ZArith.BinInt Pos2Z inj_sub thm
R63837:63849 Coq.ZArith.BinInt Pos2Z inj_sub thm
R63866:63882 Coq.ZArith.Zpower <> shift_pos_correct thm
R63885:63893 Coq.ZArith.BinInt Z mul_1_r thm
R63866:63882 Coq.ZArith.Zpower <> shift_pos_correct thm
R63866:63882 Coq.ZArith.Zpower <> shift_pos_correct thm
R63885:63893 Coq.ZArith.BinInt Z mul_1_r thm
R63885:63893 Coq.ZArith.BinInt Z mul_1_r thm
R63920:63923 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R63932:63934 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R63925:63927 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R63928:63931 compcert.flocq.IEEE754.Binary <> Binary.prec var
R63920:63923 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R63932:63934 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R63925:63927 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R63928:63931 compcert.flocq.IEEE754.Binary <> Binary.prec var
R63957:63970 Coq.ZArith.Zorder <> Zplus_le_reg_r thm
R63957:63970 Coq.ZArith.Zorder <> Zplus_le_reg_r thm
R64021:64023 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R64056:64056 Coq.Numbers.BinNums <> Z ind
R64047:64052 compcert.flocq.Core.Zaux <> radix2 def
R64021:64023 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R64056:64056 Coq.Numbers.BinNums <> Z ind
R64047:64052 compcert.flocq.Core.Zaux <> radix2 def
R64056:64056 Coq.Numbers.BinNums <> Z ind
R64047:64052 compcert.flocq.Core.Zaux <> radix2 def
R64074:64082 compcert.flocq.Core.Zaux <> Zpower_le thm
R64092:64100 compcert.flocq.Core.FLX <> Prec_gt_0 class
R64074:64082 compcert.flocq.Core.Zaux <> Zpower_le thm
R64136:64149 compcert.flocq.Core.Digits <> Zdigits_unique thm
R64168:64181 Coq.ZArith.BinInt Z pow_pos_fold thm
R64184:64191 Coq.ZArith.BinInt Z2Pos id thm
R64202:64211 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R64136:64149 compcert.flocq.Core.Digits <> Zdigits_unique thm
R64168:64181 Coq.ZArith.BinInt Z pow_pos_fold thm
R64168:64181 Coq.ZArith.BinInt Z pow_pos_fold thm
R64184:64191 Coq.ZArith.BinInt Z2Pos id thm
R64184:64191 Coq.ZArith.BinInt Z2Pos id thm
R64184:64191 Coq.ZArith.BinInt Z2Pos id thm
R64202:64211 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R64246:64253 Coq.ZArith.BinInt Z abs_eq thm
R64246:64253 Coq.ZArith.BinInt Z abs_eq thm
R64246:64253 Coq.ZArith.BinInt Z abs_eq thm
R64281:64284 compcert.flocq.IEEE754.Binary <> Binary.prec var
R64300:64302 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R64296:64298 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R64292:64295 compcert.flocq.IEEE754.Binary <> Binary.prec var
R64281:64284 compcert.flocq.IEEE754.Binary <> Binary.prec var
R64300:64302 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R64296:64298 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R64292:64295 compcert.flocq.IEEE754.Binary <> Binary.prec var
R64338:64348 compcert.flocq.Core.Zaux <> Zpower_plus thm
R64361:64369 compcert.flocq.Core.FLX <> Prec_gt_0 class
R64338:64348 compcert.flocq.Core.Zaux <> Zpower_plus thm
R64338:64348 compcert.flocq.Core.Zaux <> Zpower_plus thm
R64338:64348 compcert.flocq.Core.Zaux <> Zpower_plus thm
R64338:64348 compcert.flocq.Core.Zaux <> Zpower_plus thm
R64418:64426 Coq.ZArith.BinInt Z pow_pos def
R64453:64456 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R64458:64461 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R64470:64470 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R64466:64468 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R64462:64465 compcert.flocq.IEEE754.Binary <> Binary.prec var
R64453:64456 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R64458:64461 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R64470:64470 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R64466:64468 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R64462:64465 compcert.flocq.IEEE754.Binary <> Binary.prec var
R64510:64512 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R64545:64545 Coq.Numbers.BinNums <> Z ind
R64536:64541 compcert.flocq.Core.Zaux <> radix2 def
R64510:64512 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R64510:64512 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R64545:64545 Coq.Numbers.BinNums <> Z ind
R64536:64541 compcert.flocq.Core.Zaux <> radix2 def
R64545:64545 Coq.Numbers.BinNums <> Z ind
R64536:64541 compcert.flocq.Core.Zaux <> radix2 def
R64545:64545 Coq.Numbers.BinNums <> Z ind
R64536:64541 compcert.flocq.Core.Zaux <> radix2 def
R64563:64571 compcert.flocq.Core.Zaux <> Zpower_le thm
R64588:64596 compcert.flocq.Core.FLX <> Prec_gt_0 class
R64563:64571 compcert.flocq.Core.Zaux <> Zpower_le thm
R64638:64645 Coq.ZArith.BinInt Z abs_eq thm
R64638:64645 Coq.ZArith.BinInt Z abs_eq thm
R64638:64645 Coq.ZArith.BinInt Z abs_eq thm
R64638:64645 Coq.ZArith.BinInt Z abs_eq thm
R64671:64673 Coq.PArith.BinPos <> ::positive_scope:x_'<'_x not
R64707:64709 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R64700:64704 Coq.ZArith.BinInt Z pos syndef
R64710:64714 Coq.ZArith.BinInt Z pos syndef
R64717:64725 Coq.ZArith.Zpower <> shift_pos def
R64728:64735 Coq.ZArith.BinInt Z to_pos def
R64737:64740 compcert.flocq.IEEE754.Binary <> Binary.prec var
R64671:64673 Coq.PArith.BinPos <> ::positive_scope:x_'<'_x not
R64707:64709 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R64700:64704 Coq.ZArith.BinInt Z pos syndef
R64710:64714 Coq.ZArith.BinInt Z pos syndef
R64717:64725 Coq.ZArith.Zpower <> shift_pos def
R64728:64735 Coq.ZArith.BinInt Z to_pos def
R64737:64740 compcert.flocq.IEEE754.Binary <> Binary.prec var
R64764:64780 Coq.ZArith.Zpower <> shift_pos_correct thm
R64783:64791 Coq.ZArith.BinInt Z mul_1_r thm
R64794:64807 Coq.ZArith.BinInt Z pow_pos_fold thm
R64764:64780 Coq.ZArith.Zpower <> shift_pos_correct thm
R64764:64780 Coq.ZArith.Zpower <> shift_pos_correct thm
R64783:64791 Coq.ZArith.BinInt Z mul_1_r thm
R64783:64791 Coq.ZArith.BinInt Z mul_1_r thm
R64794:64807 Coq.ZArith.BinInt Z pow_pos_fold thm
R64794:64807 Coq.ZArith.BinInt Z pow_pos_fold thm
R64824:64831 Coq.ZArith.BinInt Z2Pos id thm
R64842:64851 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R64824:64831 Coq.ZArith.BinInt Z2Pos id thm
R64824:64831 Coq.ZArith.BinInt Z2Pos id thm
R64824:64831 Coq.ZArith.BinInt Z2Pos id thm
R64842:64851 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R64879:64881 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R64914:64914 Coq.Numbers.BinNums <> Z ind
R64905:64910 compcert.flocq.Core.Zaux <> radix2 def
R64879:64881 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R64914:64914 Coq.Numbers.BinNums <> Z ind
R64905:64910 compcert.flocq.Core.Zaux <> radix2 def
R64914:64914 Coq.Numbers.BinNums <> Z ind
R64905:64910 compcert.flocq.Core.Zaux <> radix2 def
R64930:64938 compcert.flocq.Core.Zaux <> Zpower_lt thm
R64948:64956 compcert.flocq.Core.FLX <> Prec_gt_0 class
R64930:64938 compcert.flocq.Core.Zaux <> Zpower_lt thm
R64989:64992 compcert.flocq.IEEE754.Binary <> fexp vardef
R64995:65001 compcert.flocq.Core.FLT <> FLT_exp def
R65015:65021 Coq.ZArith.BinInt Z max_l thm
R65015:65021 Coq.ZArith.BinInt Z max_l thm
R65015:65021 Coq.ZArith.BinInt Z max_l thm
R65015:65021 Coq.ZArith.BinInt Z max_l thm
R65042:65050 compcert.flocq.Core.FLX <> Prec_gt_0 class
R65074:65077 compcert.flocq.IEEE754.Binary <> emin vardef
R65093:65105 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R65115:65118 compcert.flocq.IEEE754.Binary <> emin vardef
R65128:65136 compcert.flocq.Core.FLX <> Prec_gt_0 class
R65093:65105 compcert.flocq.Core.Zaux <> Zle_bool_true thm
def 65175:65184 <> Bmax_float
R65189:65192 compcert.flocq.IEEE754.Binary <> FF2B def
R65196:65211 compcert.flocq.IEEE754.Binary <> Bmax_float_proof thm
def 65279:65294 <> Bnormfr_mantissa
R65309:65309 compcert.flocq.IEEE754.Binary <> x var
R65320:65330 compcert.flocq.IEEE754.Binary <> B754_finite constr
R65352:65356 Coq.ZArith.BinInt Z eqb def
R65362:65362 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R65363:65366 compcert.flocq.IEEE754.Binary <> Binary.prec var
R65376:65379 Coq.Numbers.BinNums <> Npos constr
def 65425:65430 <> Bldexp
R65452:65452 compcert.flocq.IEEE754.Binary <> f var
R65463:65473 compcert.flocq.IEEE754.Binary <> B754_finite constr
R65493:65496 compcert.flocq.IEEE754.Binary <> FF2B def
R65501:65505 Coq.Init.Logic <> proj1 thm
R65508:65527 compcert.flocq.IEEE754.Binary <> binary_round_correct thm
R65543:65543 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R65544:65544 compcert.flocq.IEEE754.Binary <> e var
R65529:65532 compcert.flocq.IEEE754.Binary <> mode var
R65558:65558 compcert.flocq.IEEE754.Binary <> f var
prf 65576:65589 <> Bldexp_correct
R65609:65620 compcert.flocq.IEEE754.Binary <> binary_float ind
R65631:65638 compcert.flocq.Core.Raux <> Rlt_bool def
R65721:65724 compcert.flocq.Core.Raux <> bpow def
R65733:65736 compcert.flocq.IEEE754.Binary <> Binary.emax var
R65726:65731 compcert.flocq.Core.Zaux <> radix2 def
R65648:65651 Coq.Reals.Rbasic_fun <> Rabs def
R65654:65658 compcert.flocq.Core.Generic_fmt <> round def
R65693:65695 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R65688:65690 compcert.flocq.IEEE754.Binary <> B2R def
R65692:65692 compcert.flocq.IEEE754.Binary <> f var
R65696:65699 compcert.flocq.Core.Raux <> bpow def
R65708:65708 compcert.flocq.IEEE754.Binary <> e var
R65701:65706 compcert.flocq.Core.Zaux <> radix2 def
R65673:65682 compcert.flocq.IEEE754.Binary <> round_mode def
R65684:65684 compcert.flocq.IEEE754.Binary <> m var
R65667:65670 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R65660:65665 compcert.flocq.Core.Zaux <> radix2 def
R65949:65951 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65930:65933 compcert.flocq.IEEE754.Binary <> B2FF def
R65936:65941 compcert.flocq.IEEE754.Binary <> Bldexp def
R65947:65947 compcert.flocq.IEEE754.Binary <> e var
R65945:65945 compcert.flocq.IEEE754.Binary <> f var
R65943:65943 compcert.flocq.IEEE754.Binary <> m var
R65952:65966 compcert.flocq.IEEE754.Binary <> binary_overflow def
R65971:65975 compcert.flocq.IEEE754.Binary <> Bsign def
R65977:65977 compcert.flocq.IEEE754.Binary <> f var
R65968:65968 compcert.flocq.IEEE754.Binary <> m var
R65834:65841 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R65767:65774 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65749:65751 compcert.flocq.IEEE754.Binary <> B2R def
R65754:65759 compcert.flocq.IEEE754.Binary <> Bldexp def
R65765:65765 compcert.flocq.IEEE754.Binary <> e var
R65763:65763 compcert.flocq.IEEE754.Binary <> f var
R65761:65761 compcert.flocq.IEEE754.Binary <> m var
R65775:65779 compcert.flocq.Core.Generic_fmt <> round def
R65814:65816 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R65809:65811 compcert.flocq.IEEE754.Binary <> B2R def
R65813:65813 compcert.flocq.IEEE754.Binary <> f var
R65817:65820 compcert.flocq.Core.Raux <> bpow def
R65829:65829 compcert.flocq.IEEE754.Binary <> e var
R65822:65827 compcert.flocq.Core.Zaux <> radix2 def
R65794:65803 compcert.flocq.IEEE754.Binary <> round_mode def
R65805:65805 compcert.flocq.IEEE754.Binary <> m var
R65788:65791 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R65781:65786 compcert.flocq.Core.Zaux <> radix2 def
R65880:65887 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R65866:65868 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65842:65850 compcert.flocq.IEEE754.Binary <> is_finite def
R65853:65858 compcert.flocq.IEEE754.Binary <> Bldexp def
R65864:65864 compcert.flocq.IEEE754.Binary <> e var
R65862:65862 compcert.flocq.IEEE754.Binary <> f var
R65860:65860 compcert.flocq.IEEE754.Binary <> m var
R65869:65877 compcert.flocq.IEEE754.Binary <> is_finite def
R65879:65879 compcert.flocq.IEEE754.Binary <> f var
R65908:65910 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65888:65892 compcert.flocq.IEEE754.Binary <> Bsign def
R65895:65900 compcert.flocq.IEEE754.Binary <> Bldexp def
R65906:65906 compcert.flocq.IEEE754.Binary <> e var
R65904:65904 compcert.flocq.IEEE754.Binary <> f var
R65902:65902 compcert.flocq.IEEE754.Binary <> m var
R65911:65915 compcert.flocq.IEEE754.Binary <> Bsign def
R65917:65917 compcert.flocq.IEEE754.Binary <> f var
R66036:66044 Coq.Reals.RIneq <> Rmult_0_l thm
R66047:66053 compcert.flocq.Core.Generic_fmt <> round_0 thm
R66064:66083 compcert.flocq.IEEE754.Binary <> valid_rnd_round_mode inst
R66036:66044 Coq.Reals.RIneq <> Rmult_0_l thm
R66036:66044 Coq.Reals.RIneq <> Rmult_0_l thm
R66047:66053 compcert.flocq.Core.Generic_fmt <> round_0 thm
R66047:66053 compcert.flocq.Core.Generic_fmt <> round_0 thm
R66047:66053 compcert.flocq.Core.Generic_fmt <> round_0 thm
R66064:66083 compcert.flocq.IEEE754.Binary <> valid_rnd_round_mode inst
R66101:66107 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R66110:66122 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66137:66145 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R66101:66107 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R66101:66107 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R66110:66122 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66110:66122 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66110:66122 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66137:66145 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R66175:66183 Coq.Reals.RIneq <> Rmult_0_l thm
R66186:66192 compcert.flocq.Core.Generic_fmt <> round_0 thm
R66203:66222 compcert.flocq.IEEE754.Binary <> valid_rnd_round_mode inst
R66175:66183 Coq.Reals.RIneq <> Rmult_0_l thm
R66175:66183 Coq.Reals.RIneq <> Rmult_0_l thm
R66186:66192 compcert.flocq.Core.Generic_fmt <> round_0 thm
R66186:66192 compcert.flocq.Core.Generic_fmt <> round_0 thm
R66186:66192 compcert.flocq.Core.Generic_fmt <> round_0 thm
R66203:66222 compcert.flocq.IEEE754.Binary <> valid_rnd_round_mode inst
R66240:66246 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R66249:66261 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66276:66284 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R66240:66246 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R66240:66246 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R66249:66261 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66249:66261 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66249:66261 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66276:66284 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R66314:66322 Coq.Reals.RIneq <> Rmult_0_l thm
R66325:66331 compcert.flocq.Core.Generic_fmt <> round_0 thm
R66342:66361 compcert.flocq.IEEE754.Binary <> valid_rnd_round_mode inst
R66314:66322 Coq.Reals.RIneq <> Rmult_0_l thm
R66314:66322 Coq.Reals.RIneq <> Rmult_0_l thm
R66325:66331 compcert.flocq.Core.Generic_fmt <> round_0 thm
R66325:66331 compcert.flocq.Core.Generic_fmt <> round_0 thm
R66325:66331 compcert.flocq.Core.Generic_fmt <> round_0 thm
R66342:66361 compcert.flocq.IEEE754.Binary <> valid_rnd_round_mode inst
R66379:66385 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R66388:66400 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66415:66423 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R66379:66385 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R66379:66385 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R66388:66400 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66388:66400 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66388:66400 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66415:66423 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R66458:66470 compcert.flocq.Core.Raux <> Rlt_bool_spec thm
R66458:66470 compcert.flocq.Core.Raux <> Rlt_bool_spec thm
R66502:66507 compcert.flocq.IEEE754.Binary <> Bldexp def
R66518:66525 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R66528:66541 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R66544:66553 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R66518:66525 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R66518:66525 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R66528:66541 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R66528:66541 compcert.flocq.IEEE754.Binary <> is_finite_FF2B thm
R66544:66553 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R66544:66553 compcert.flocq.IEEE754.Binary <> Bsign_FF2B thm
R66574:66576 compcert.flocq.Core.Defs <> F2R def
R66594:66604 Coq.Reals.Raxioms <> Rmult_assoc prfax
R66609:66617 compcert.flocq.Core.Raux <> bpow_plus thm
R66594:66604 Coq.Reals.Raxioms <> Rmult_assoc prfax
R66594:66604 Coq.Reals.Raxioms <> Rmult_assoc prfax
R66609:66617 compcert.flocq.Core.Raux <> bpow_plus thm
R66609:66617 compcert.flocq.Core.Raux <> bpow_plus thm
R66634:66653 compcert.flocq.IEEE754.Binary <> binary_round_correct thm
R66665:66667 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R66634:66653 compcert.flocq.IEEE754.Binary <> binary_round_correct thm
R66665:66667 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R66694:66697 compcert.flocq.IEEE754.Binary <> Binary.emin var
R66727:66739 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66694:66697 compcert.flocq.IEEE754.Binary <> Binary.emin var
R66727:66739 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66727:66739 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66727:66739 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R66844:66846 compcert.flocq.IEEE754.Binary <> B2R def
R66849:66851 compcert.flocq.Core.Defs <> F2R def
R66869:66879 Coq.Reals.Raxioms <> Rmult_assoc prfax
R66882:66890 compcert.flocq.Core.Raux <> bpow_plus thm
R66869:66879 Coq.Reals.Raxioms <> Rmult_assoc prfax
R66869:66879 Coq.Reals.Raxioms <> Rmult_assoc prfax
R66882:66890 compcert.flocq.Core.Raux <> bpow_plus thm
R66882:66890 compcert.flocq.Core.Raux <> bpow_plus thm
R66904:66909 compcert.flocq.IEEE754.Binary <> Bldexp def
R66920:66928 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R66920:66928 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R66920:66928 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R66952:66971 compcert.flocq.IEEE754.Binary <> binary_round_correct thm
R66983:66985 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R66952:66971 compcert.flocq.IEEE754.Binary <> binary_round_correct thm
R66983:66985 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R67012:67015 compcert.flocq.IEEE754.Binary <> Binary.emin var
R67045:67058 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R67012:67015 compcert.flocq.IEEE754.Binary <> Binary.emin var
R67045:67058 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R67045:67058 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R67045:67058 compcert.flocq.Core.Raux <> Rlt_bool_false thm
R67109:67111 compcert.flocq.IEEE754.Binary <> B2R def
R67114:67116 compcert.flocq.Core.Defs <> F2R def
R67134:67144 Coq.Reals.Raxioms <> Rmult_assoc prfax
R67147:67155 compcert.flocq.Core.Raux <> bpow_plus thm
R67134:67144 Coq.Reals.Raxioms <> Rmult_assoc prfax
R67134:67144 Coq.Reals.Raxioms <> Rmult_assoc prfax
R67147:67155 compcert.flocq.Core.Raux <> bpow_plus thm
R67147:67155 compcert.flocq.Core.Raux <> bpow_plus thm
var 67328:67332 Binary Hemax
R67338:67341 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R67342:67345 compcert.flocq.IEEE754.Binary <> Binary.emax var
def 67363:67380 <> Ffrexp_core_binary
R67410:67414 Coq.PArith.BinPos <> ::positive_scope:x_'<=?'_x not
R67397:67404 Coq.ZArith.BinInt Z to_pos def
R67406:67409 compcert.flocq.IEEE754.Binary <> Binary.prec var
R67415:67425 compcert.flocq.Core.Digits <> digits2_pos def
R67427:67427 compcert.flocq.IEEE754.Binary <> m var
R67513:67515 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R67509:67512 compcert.flocq.IEEE754.Binary <> Binary.prec var
R67516:67520 Coq.ZArith.BinInt Z pos syndef
R67523:67533 compcert.flocq.Core.Digits <> digits2_pos def
R67535:67535 compcert.flocq.IEEE754.Binary <> m var
R67548:67548 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67597:67598 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67615:67615 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67549:67559 compcert.flocq.IEEE754.Binary <> F754_finite constr
R67591:67591 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R67592:67595 compcert.flocq.IEEE754.Binary <> Binary.prec var
R67564:67572 Coq.ZArith.Zpower <> shift_pos def
R67587:67587 compcert.flocq.IEEE754.Binary <> m var
R67575:67582 Coq.ZArith.BinInt Z to_pos def
R67584:67584 compcert.flocq.IEEE754.Binary <> d var
R67561:67561 compcert.flocq.IEEE754.Binary <> s var
R67608:67610 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R67601:67603 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R67600:67600 compcert.flocq.IEEE754.Binary <> e var
R67604:67607 compcert.flocq.IEEE754.Binary <> Binary.prec var
R67611:67611 compcert.flocq.IEEE754.Binary <> d var
R67448:67448 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67472:67473 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67486:67486 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67449:67459 compcert.flocq.IEEE754.Binary <> F754_finite constr
R67466:67466 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R67467:67470 compcert.flocq.IEEE754.Binary <> Binary.prec var
R67463:67463 compcert.flocq.IEEE754.Binary <> m var
R67461:67461 compcert.flocq.IEEE754.Binary <> s var
R67476:67478 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R67475:67475 compcert.flocq.IEEE754.Binary <> e var
R67479:67482 compcert.flocq.IEEE754.Binary <> Binary.prec var
prf 67625:67642 <> Bfrexp_correct_aux
R67683:67685 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67670:67676 compcert.flocq.IEEE754.Binary <> bounded def
R67681:67682 compcert.flocq.IEEE754.Binary <> ex var
R67678:67679 compcert.flocq.IEEE754.Binary <> mx var
R67686:67689 Coq.Init.Datatypes <> true constr
R67704:67706 compcert.flocq.Core.Defs <> F2R def
R67709:67713 compcert.flocq.Core.Defs <> Float constr
R67748:67749 compcert.flocq.IEEE754.Binary <> ex var
R67723:67731 compcert.flocq.Core.Zaux <> cond_Zopp def
R67737:67741 Coq.ZArith.BinInt Z pos syndef
R67743:67744 compcert.flocq.IEEE754.Binary <> mx var
R67733:67734 compcert.flocq.IEEE754.Binary <> sx var
R67715:67720 compcert.flocq.Core.Zaux <> radix2 def
R67766:67768 Coq.Init.Datatypes <> fst def
R67771:67788 compcert.flocq.IEEE754.Binary <> Ffrexp_core_binary def
R67796:67797 compcert.flocq.IEEE754.Binary <> ex var
R67793:67794 compcert.flocq.IEEE754.Binary <> mx var
R67790:67791 compcert.flocq.IEEE754.Binary <> sx var
R67814:67816 Coq.Init.Datatypes <> snd def
R67819:67836 compcert.flocq.IEEE754.Binary <> Ffrexp_core_binary def
R67844:67845 compcert.flocq.IEEE754.Binary <> ex var
R67841:67842 compcert.flocq.IEEE754.Binary <> mx var
R67838:67839 compcert.flocq.IEEE754.Binary <> sx var
R67874:67879 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R67867:67869 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67853:67864 compcert.flocq.IEEE754.Binary <> valid_binary def
R67866:67866 compcert.flocq.IEEE754.Binary <> z var
R67870:67873 Coq.Init.Datatypes <> true constr
R67914:67919 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R67883:67886 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x_'<'_x not
R67907:67909 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x_'<'_x not
R67881:67881 Coq.Reals.Rdefinitions <> ::R_scope:'/'_x not
R67887:67890 Coq.Reals.Rbasic_fun <> Rabs def
R67893:67896 compcert.flocq.IEEE754.Binary <> FF2R def
R67905:67905 compcert.flocq.IEEE754.Binary <> z var
R67898:67903 compcert.flocq.Core.Zaux <> radix2 def
R67887:67890 Coq.Reals.Rbasic_fun <> Rabs def
R67893:67896 compcert.flocq.IEEE754.Binary <> FF2R def
R67905:67905 compcert.flocq.IEEE754.Binary <> z var
R67898:67903 compcert.flocq.Core.Zaux <> radix2 def
R67922:67924 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67921:67921 compcert.flocq.IEEE754.Binary <> x var
R67938:67940 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R67925:67928 compcert.flocq.IEEE754.Binary <> FF2R def
R67937:67937 compcert.flocq.IEEE754.Binary <> z var
R67930:67935 compcert.flocq.Core.Zaux <> radix2 def
R67941:67944 compcert.flocq.Core.Raux <> bpow def
R67953:67953 compcert.flocq.IEEE754.Binary <> e var
R67946:67951 compcert.flocq.Core.Zaux <> radix2 def
R67996:67998 compcert.flocq.Core.Defs <> F2R def
R67996:67998 compcert.flocq.Core.Defs <> F2R def
R68014:68016 Coq.Init.Datatypes <> fst def
R68014:68016 Coq.Init.Datatypes <> fst def
R68032:68034 Coq.Init.Datatypes <> snd def
R68032:68034 Coq.Init.Datatypes <> snd def
R68092:68095 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R68070:68074 Coq.ZArith.BinInt Z pos syndef
R68077:68087 compcert.flocq.Core.Digits <> digits2_pos def
R68096:68099 compcert.flocq.IEEE754.Binary <> Binary.prec var
R68092:68095 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R68070:68074 Coq.ZArith.BinInt Z pos syndef
R68077:68087 compcert.flocq.Core.Digits <> digits2_pos def
R68096:68099 compcert.flocq.IEEE754.Binary <> Binary.prec var
R68126:68132 compcert.flocq.IEEE754.Binary <> bounded def
R68143:68160 Coq.Bool.Bool <> andb_true_iff thm
R68143:68160 Coq.Bool.Bool <> andb_true_iff thm
R68143:68160 Coq.Bool.Bool <> andb_true_iff thm
R68172:68189 compcert.flocq.IEEE754.Binary <> canonical_mantissa def
R68202:68215 Coq.ZArith.Zbool <> Zeq_is_eq_bool thm
R68225:68228 compcert.flocq.IEEE754.Binary <> fexp vardef
R68231:68237 compcert.flocq.Core.FLT <> FLT_exp def
R68202:68215 Coq.ZArith.Zbool <> Zeq_is_eq_bool thm
R68202:68215 Coq.ZArith.Zbool <> Zeq_is_eq_bool thm
R68248:68257 Coq.ZArith.BinInt Z max_spec thm
R68296:68299 compcert.flocq.IEEE754.Binary <> Binary.emin var
R68287:68289 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R68282:68284 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R68260:68264 Coq.ZArith.BinInt Z pos syndef
R68267:68277 compcert.flocq.Core.Digits <> digits2_pos def
R68290:68293 compcert.flocq.IEEE754.Binary <> Binary.prec var
R68248:68257 Coq.ZArith.BinInt Z max_spec thm
R68296:68299 compcert.flocq.IEEE754.Binary <> Binary.emin var
R68287:68289 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R68282:68284 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R68260:68264 Coq.ZArith.BinInt Z pos syndef
R68267:68277 compcert.flocq.Core.Digits <> digits2_pos def
R68290:68293 compcert.flocq.IEEE754.Binary <> Binary.prec var
R68348:68351 Coq.PArith.BinPos <> ::positive_scope:x_'<='_x not
R68334:68344 compcert.flocq.Core.Digits <> digits2_pos def
R68352:68359 Coq.ZArith.BinInt Z to_pos def
R68361:68364 compcert.flocq.IEEE754.Binary <> Binary.prec var
R68348:68351 Coq.PArith.BinPos <> ::positive_scope:x_'<='_x not
R68334:68344 compcert.flocq.Core.Digits <> digits2_pos def
R68352:68359 Coq.ZArith.BinInt Z to_pos def
R68361:68364 compcert.flocq.IEEE754.Binary <> Binary.prec var
R68389:68392 Coq.PArith.BinPos <> ::positive_scope:x_'<='_x not
R68437:68440 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R68415:68419 Coq.ZArith.BinInt Z pos syndef
R68422:68432 compcert.flocq.Core.Digits <> digits2_pos def
R68441:68445 Coq.ZArith.BinInt Z pos syndef
R68448:68455 Coq.ZArith.BinInt Z to_pos def
R68457:68460 compcert.flocq.IEEE754.Binary <> Binary.prec var
R68389:68392 Coq.PArith.BinPos <> ::positive_scope:x_'<='_x not
R68437:68440 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R68415:68419 Coq.ZArith.BinInt Z pos syndef
R68422:68432 compcert.flocq.Core.Digits <> digits2_pos def
R68441:68445 Coq.ZArith.BinInt Z pos syndef
R68448:68455 Coq.ZArith.BinInt Z to_pos def
R68457:68460 compcert.flocq.IEEE754.Binary <> Binary.prec var
R68481:68488 Coq.ZArith.BinInt Z2Pos id thm
R68503:68512 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R68481:68488 Coq.ZArith.BinInt Z2Pos id thm
R68481:68488 Coq.ZArith.BinInt Z2Pos id thm
R68481:68488 Coq.ZArith.BinInt Z2Pos id thm
R68503:68512 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R68531:68548 compcert.flocq.IEEE754.Binary <> Ffrexp_core_binary def
R68557:68568 Coq.PArith.BinPos Pos leb_spec thm
R68557:68568 Coq.PArith.BinPos Pos leb_spec thm
R68603:68609 compcert.flocq.IEEE754.Binary <> bounded def
R68612:68614 compcert.flocq.Core.Defs <> F2R def
R68655:68657 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68641:68651 compcert.flocq.Core.Digits <> digits2_pos def
R68658:68665 Coq.ZArith.BinInt Z to_pos def
R68667:68670 compcert.flocq.IEEE754.Binary <> Binary.prec var
R68655:68657 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68641:68651 compcert.flocq.Core.Digits <> digits2_pos def
R68658:68665 Coq.ZArith.BinInt Z to_pos def
R68667:68670 compcert.flocq.IEEE754.Binary <> Binary.prec var
R68688:68701 Coq.PArith.BinPos Pos le_antisym thm
R68688:68701 Coq.PArith.BinPos Pos le_antisym thm
R68746:68748 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68724:68728 Coq.ZArith.BinInt Z pos syndef
R68731:68741 compcert.flocq.Core.Digits <> digits2_pos def
R68749:68752 compcert.flocq.IEEE754.Binary <> Binary.prec var
R68746:68748 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68724:68728 Coq.ZArith.BinInt Z pos syndef
R68731:68741 compcert.flocq.Core.Digits <> digits2_pos def
R68749:68752 compcert.flocq.IEEE754.Binary <> Binary.prec var
R68778:68785 Coq.ZArith.BinInt Z2Pos id thm
R68796:68805 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R68778:68785 Coq.ZArith.BinInt Z2Pos id thm
R68778:68785 Coq.ZArith.BinInt Z2Pos id thm
R68778:68785 Coq.ZArith.BinInt Z2Pos id thm
R68796:68805 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R68840:68854 Coq.Init.Datatypes <> andb_true_intro thm
R68840:68854 Coq.Init.Datatypes <> andb_true_intro thm
R68876:68888 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R68876:68888 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R68907:68919 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R68929:68932 compcert.flocq.IEEE754.Binary <> fexp vardef
R68935:68941 compcert.flocq.Core.FLT <> FLT_exp def
R68907:68919 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R68962:68969 Coq.ZArith.BinInt Z2Pos id thm
R68984:68993 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R68962:68969 Coq.ZArith.BinInt Z2Pos id thm
R68962:68969 Coq.ZArith.BinInt Z2Pos id thm
R68962:68969 Coq.ZArith.BinInt Z2Pos id thm
R68984:68993 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R69009:69015 Coq.ZArith.BinInt Z max_l thm
R69031:69034 compcert.flocq.IEEE754.Binary <> emin vardef
R69009:69015 Coq.ZArith.BinInt Z max_l thm
R69009:69015 Coq.ZArith.BinInt Z max_l thm
R69009:69015 Coq.ZArith.BinInt Z max_l thm
R69055:69063 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R69067:69077 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R69080:69083 compcert.flocq.Core.Raux <> bpow def
R69104:69112 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R69055:69063 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R69055:69063 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R69067:69077 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R69080:69083 compcert.flocq.Core.Raux <> bpow def
R69067:69077 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R69080:69083 compcert.flocq.Core.Raux <> bpow def
R69067:69077 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R69080:69083 compcert.flocq.Core.Raux <> bpow def
R69104:69112 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R69130:69136 Coq.Reals.Rbasic_fun <> abs_IZR thm
R69139:69151 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R69130:69136 Coq.Reals.Rbasic_fun <> abs_IZR thm
R69130:69136 Coq.Reals.Rbasic_fun <> abs_IZR thm
R69139:69151 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R69139:69151 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R69181:69194 Coq.Reals.RIneq <> Rmult_le_reg_r thm
R69197:69200 compcert.flocq.Core.Raux <> bpow def
R69209:69212 compcert.flocq.IEEE754.Binary <> Binary.prec var
R69202:69207 compcert.flocq.Core.Zaux <> radix2 def
R69228:69236 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R69181:69194 Coq.Reals.RIneq <> Rmult_le_reg_r thm
R69197:69200 compcert.flocq.Core.Raux <> bpow def
R69209:69212 compcert.flocq.IEEE754.Binary <> Binary.prec var
R69202:69207 compcert.flocq.Core.Zaux <> radix2 def
R69228:69236 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R69255:69265 Coq.Reals.Raxioms <> Rmult_assoc prfax
R69270:69278 compcert.flocq.Core.Raux <> bpow_plus thm
R69281:69296 Coq.ZArith.BinInt Z add_opp_diag_l thm
R69255:69265 Coq.Reals.Raxioms <> Rmult_assoc prfax
R69255:69265 Coq.Reals.Raxioms <> Rmult_assoc prfax
R69270:69278 compcert.flocq.Core.Raux <> bpow_plus thm
R69270:69278 compcert.flocq.Core.Raux <> bpow_plus thm
R69281:69296 Coq.ZArith.BinInt Z add_opp_diag_l thm
R69281:69296 Coq.ZArith.BinInt Z add_opp_diag_l thm
R69320:69328 Coq.Reals.RIneq <> Rmult_1_r thm
R69320:69328 Coq.Reals.RIneq <> Rmult_1_r thm
R69320:69328 Coq.Reals.RIneq <> Rmult_1_r thm
R69345:69346 Coq.Reals.Rdefinitions <> ::R_scope:'/'_x not
R69358:69361 compcert.flocq.Core.Raux <> bpow def
R69363:69368 compcert.flocq.Core.Zaux <> radix2 def
R69388:69396 compcert.flocq.Core.Raux <> bpow_plus thm
R69345:69346 Coq.Reals.Rdefinitions <> ::R_scope:'/'_x not
R69358:69361 compcert.flocq.Core.Raux <> bpow def
R69363:69368 compcert.flocq.Core.Zaux <> radix2 def
R69388:69396 compcert.flocq.Core.Raux <> bpow_plus thm
R69388:69396 compcert.flocq.Core.Raux <> bpow_plus thm
R69422:69431 Coq.ZArith.BinInt Z add_comm thm
R69434:69449 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R69452:69462 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R69422:69431 Coq.ZArith.BinInt Z add_comm thm
R69422:69431 Coq.ZArith.BinInt Z add_comm thm
R69434:69449 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R69434:69449 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R69452:69462 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R69452:69462 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R69452:69462 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R69489:69492 compcert.flocq.Core.Raux <> bpow def
R69489:69492 compcert.flocq.Core.Raux <> bpow def
R69517:69527 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R69530:69532 Coq.Reals.Rdefinitions <> IZR def
R69547:69552 Coq.Reals.RIneq <> IZR_le thm
R69517:69527 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R69530:69532 Coq.Reals.Rdefinitions <> IZR def
R69517:69527 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R69530:69532 Coq.Reals.Rdefinitions <> IZR def
R69517:69527 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R69530:69532 Coq.Reals.Rdefinitions <> IZR def
R69547:69552 Coq.Reals.RIneq <> IZR_le thm
R69573:69583 compcert.flocq.Core.Raux <> bpow_mag_le thm
R69592:69598 Coq.Reals.RIneq <> IZR_neq thm
R69573:69583 compcert.flocq.Core.Raux <> bpow_mag_le thm
R69592:69598 Coq.Reals.RIneq <> IZR_neq thm
R69619:69632 Coq.Reals.RIneq <> Rmult_lt_reg_r thm
R69635:69638 compcert.flocq.Core.Raux <> bpow def
R69647:69650 compcert.flocq.IEEE754.Binary <> Binary.prec var
R69640:69645 compcert.flocq.Core.Zaux <> radix2 def
R69666:69674 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R69619:69632 Coq.Reals.RIneq <> Rmult_lt_reg_r thm
R69635:69638 compcert.flocq.Core.Raux <> bpow def
R69647:69650 compcert.flocq.IEEE754.Binary <> Binary.prec var
R69640:69645 compcert.flocq.Core.Zaux <> radix2 def
R69666:69674 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R69693:69703 Coq.Reals.Raxioms <> Rmult_assoc prfax
R69708:69716 compcert.flocq.Core.Raux <> bpow_plus thm
R69719:69734 Coq.ZArith.BinInt Z add_opp_diag_l thm
R69693:69703 Coq.Reals.Raxioms <> Rmult_assoc prfax
R69693:69703 Coq.Reals.Raxioms <> Rmult_assoc prfax
R69708:69716 compcert.flocq.Core.Raux <> bpow_plus thm
R69708:69716 compcert.flocq.Core.Raux <> bpow_plus thm
R69719:69734 Coq.ZArith.BinInt Z add_opp_diag_l thm
R69719:69734 Coq.ZArith.BinInt Z add_opp_diag_l thm
R69758:69766 Coq.Reals.Raxioms <> Rmult_1_l prfax
R69769:69777 Coq.Reals.RIneq <> Rmult_1_r thm
R69758:69766 Coq.Reals.Raxioms <> Rmult_1_l prfax
R69758:69766 Coq.Reals.Raxioms <> Rmult_1_l prfax
R69769:69777 Coq.Reals.RIneq <> Rmult_1_r thm
R69769:69777 Coq.Reals.RIneq <> Rmult_1_r thm
R69803:69818 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R69821:69831 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R69803:69818 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R69803:69818 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R69821:69831 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R69821:69831 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R69821:69831 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R69858:69861 compcert.flocq.Core.Raux <> bpow def
R69858:69861 compcert.flocq.Core.Raux <> bpow def
R69886:69896 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R69899:69901 Coq.Reals.Rdefinitions <> IZR def
R69916:69921 Coq.Reals.RIneq <> IZR_le thm
R69886:69896 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R69899:69901 Coq.Reals.Rdefinitions <> IZR def
R69886:69896 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R69899:69901 Coq.Reals.Rdefinitions <> IZR def
R69886:69896 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R69899:69901 Coq.Reals.Rdefinitions <> IZR def
R69916:69921 Coq.Reals.RIneq <> IZR_le thm
R69942:69952 compcert.flocq.Core.Raux <> bpow_mag_gt thm
R69961:69967 Coq.Reals.RIneq <> IZR_neq thm
R69942:69952 compcert.flocq.Core.Raux <> bpow_mag_gt thm
R69989:69991 compcert.flocq.Core.Defs <> F2R def
R70009:70019 Coq.Reals.Raxioms <> Rmult_assoc prfax
R70024:70032 compcert.flocq.Core.Raux <> bpow_plus thm
R70009:70019 Coq.Reals.Raxioms <> Rmult_assoc prfax
R70009:70019 Coq.Reals.Raxioms <> Rmult_assoc prfax
R70024:70032 compcert.flocq.Core.Raux <> bpow_plus thm
R70024:70032 compcert.flocq.Core.Raux <> bpow_plus thm
R70053:70055 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R70053:70055 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R70087:70093 compcert.flocq.IEEE754.Binary <> bounded def
R70096:70098 compcert.flocq.Core.Defs <> F2R def
R70148:70150 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R70126:70130 Coq.ZArith.BinInt Z pos syndef
R70133:70143 compcert.flocq.Core.Digits <> digits2_pos def
R70151:70154 compcert.flocq.IEEE754.Binary <> Binary.prec var
R70148:70150 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R70126:70130 Coq.ZArith.BinInt Z pos syndef
R70133:70143 compcert.flocq.Core.Digits <> digits2_pos def
R70151:70154 compcert.flocq.IEEE754.Binary <> Binary.prec var
R70180:70187 Coq.ZArith.BinInt Z2Pos id thm
R70189:70192 compcert.flocq.IEEE754.Binary <> Binary.prec var
R70208:70217 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R70180:70187 Coq.ZArith.BinInt Z2Pos id thm
R70189:70192 compcert.flocq.IEEE754.Binary <> Binary.prec var
R70180:70187 Coq.ZArith.BinInt Z2Pos id thm
R70189:70192 compcert.flocq.IEEE754.Binary <> Binary.prec var
R70180:70187 Coq.ZArith.BinInt Z2Pos id thm
R70189:70192 compcert.flocq.IEEE754.Binary <> Binary.prec var
R70208:70217 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R70253:70259 compcert.flocq.IEEE754.Binary <> bounded def
R70268:70282 Coq.Init.Datatypes <> andb_true_intro thm
R70268:70282 Coq.Init.Datatypes <> andb_true_intro thm
R70304:70316 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R70304:70316 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R70335:70347 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R70357:70360 compcert.flocq.IEEE754.Binary <> fexp vardef
R70363:70369 compcert.flocq.Core.FLT <> FLT_exp def
R70335:70347 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R70384:70399 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R70402:70418 Coq.ZArith.Zpower <> shift_pos_correct thm
R70421:70434 Coq.ZArith.BinInt Z pow_pos_fold thm
R70384:70399 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R70384:70399 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R70402:70418 Coq.ZArith.Zpower <> shift_pos_correct thm
R70402:70418 Coq.ZArith.Zpower <> shift_pos_correct thm
R70421:70434 Coq.ZArith.BinInt Z pow_pos_fold thm
R70421:70434 Coq.ZArith.BinInt Z pow_pos_fold thm
R70449:70456 Coq.ZArith.BinInt Z2Pos id thm
R70449:70456 Coq.ZArith.BinInt Z2Pos id thm
R70449:70456 Coq.ZArith.BinInt Z2Pos id thm
R70449:70456 Coq.ZArith.BinInt Z2Pos id thm
R70479:70488 Coq.ZArith.BinInt Z mul_comm thm
R70517:70517 Coq.Numbers.BinNums <> Z ind
R70508:70513 compcert.flocq.Core.Zaux <> radix2 def
R70479:70488 Coq.ZArith.BinInt Z mul_comm thm
R70479:70488 Coq.ZArith.BinInt Z mul_comm thm
R70517:70517 Coq.Numbers.BinNums <> Z ind
R70508:70513 compcert.flocq.Core.Zaux <> radix2 def
R70533:70551 compcert.flocq.Core.Digits <> Zdigits_mult_Zpower thm
R70533:70551 compcert.flocq.Core.Digits <> Zdigits_mult_Zpower thm
R70533:70551 compcert.flocq.Core.Digits <> Zdigits_mult_Zpower thm
R70533:70551 compcert.flocq.Core.Digits <> Zdigits_mult_Zpower thm
R70533:70551 compcert.flocq.Core.Digits <> Zdigits_mult_Zpower thm
R70578:70593 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R70606:70608 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R70620:70621 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R70622:70625 compcert.flocq.IEEE754.Binary <> Binary.prec var
R70578:70593 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R70578:70593 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R70606:70608 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R70620:70621 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R70622:70625 compcert.flocq.IEEE754.Binary <> Binary.prec var
R70655:70661 Coq.ZArith.BinInt Z max_l thm
R70673:70676 compcert.flocq.IEEE754.Binary <> emin vardef
R70655:70661 Coq.ZArith.BinInt Z max_l thm
R70655:70661 Coq.ZArith.BinInt Z max_l thm
R70655:70661 Coq.ZArith.BinInt Z max_l thm
R70697:70705 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R70709:70719 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R70722:70725 compcert.flocq.Core.Raux <> bpow def
R70746:70754 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R70697:70705 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R70697:70705 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R70709:70719 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R70722:70725 compcert.flocq.Core.Raux <> bpow def
R70709:70719 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R70722:70725 compcert.flocq.Core.Raux <> bpow def
R70709:70719 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R70722:70725 compcert.flocq.Core.Raux <> bpow def
R70746:70754 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R70772:70778 Coq.Reals.Rbasic_fun <> abs_IZR thm
R70781:70793 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R70772:70778 Coq.Reals.Rbasic_fun <> abs_IZR thm
R70772:70778 Coq.Reals.Rbasic_fun <> abs_IZR thm
R70781:70793 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R70781:70793 compcert.flocq.Core.Zaux <> abs_cond_Zopp thm
R70815:70831 Coq.ZArith.Zpower <> shift_pos_correct thm
R70834:70841 Coq.Reals.RIneq <> mult_IZR thm
R70815:70831 Coq.ZArith.Zpower <> shift_pos_correct thm
R70815:70831 Coq.ZArith.Zpower <> shift_pos_correct thm
R70834:70841 Coq.Reals.RIneq <> mult_IZR thm
R70834:70841 Coq.Reals.RIneq <> mult_IZR thm
R70856:70858 Coq.Reals.Rdefinitions <> IZR def
R70861:70869 Coq.ZArith.BinInt Z pow_pos def
R70889:70892 compcert.flocq.Core.Raux <> bpow def
R70902:70906 Coq.ZArith.BinInt Z pos syndef
R70909:70916 Coq.ZArith.BinInt Z to_pos def
R70924:70926 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R70920:70923 compcert.flocq.IEEE754.Binary <> Binary.prec var
R70927:70931 Coq.ZArith.BinInt Z pos syndef
R70934:70944 compcert.flocq.Core.Digits <> digits2_pos def
R70894:70899 compcert.flocq.Core.Zaux <> radix2 def
R70856:70858 Coq.Reals.Rdefinitions <> IZR def
R70861:70869 Coq.ZArith.BinInt Z pow_pos def
R70889:70892 compcert.flocq.Core.Raux <> bpow def
R70902:70906 Coq.ZArith.BinInt Z pos syndef
R70909:70916 Coq.ZArith.BinInt Z to_pos def
R70924:70926 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R70920:70923 compcert.flocq.IEEE754.Binary <> Binary.prec var
R70927:70931 Coq.ZArith.BinInt Z pos syndef
R70934:70944 compcert.flocq.Core.Digits <> digits2_pos def
R70894:70899 compcert.flocq.Core.Zaux <> radix2 def
R70889:70892 compcert.flocq.Core.Raux <> bpow def
R70902:70906 Coq.ZArith.BinInt Z pos syndef
R70909:70916 Coq.ZArith.BinInt Z to_pos def
R70924:70926 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R70920:70923 compcert.flocq.IEEE754.Binary <> Binary.prec var
R70927:70931 Coq.ZArith.BinInt Z pos syndef
R70934:70944 compcert.flocq.Core.Digits <> digits2_pos def
R70894:70899 compcert.flocq.Core.Zaux <> radix2 def
R70968:70975 Coq.ZArith.BinInt Z2Pos id thm
R70968:70975 Coq.ZArith.BinInt Z2Pos id thm
R70968:70975 Coq.ZArith.BinInt Z2Pos id thm
R70968:70975 Coq.ZArith.BinInt Z2Pos id thm
R70998:71007 Coq.Reals.Raxioms <> Rmult_comm prfax
R71012:71022 Coq.Reals.Raxioms <> Rmult_assoc prfax
R71027:71035 compcert.flocq.Core.Raux <> bpow_plus thm
R70998:71007 Coq.Reals.Raxioms <> Rmult_comm prfax
R70998:71007 Coq.Reals.Raxioms <> Rmult_comm prfax
R71012:71022 Coq.Reals.Raxioms <> Rmult_assoc prfax
R71012:71022 Coq.Reals.Raxioms <> Rmult_assoc prfax
R71027:71035 compcert.flocq.Core.Raux <> bpow_plus thm
R71027:71035 compcert.flocq.Core.Raux <> bpow_plus thm
R71052:71056 Coq.ZArith.BinInt Z pos syndef
R71059:71069 compcert.flocq.Core.Digits <> digits2_pos def
R71052:71056 Coq.ZArith.BinInt Z pos syndef
R71059:71069 compcert.flocq.Core.Digits <> digits2_pos def
R71091:71093 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R71105:71106 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R71091:71093 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R71105:71106 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R71141:71154 Coq.Reals.RIneq <> Rmult_le_reg_l thm
R71157:71160 compcert.flocq.Core.Raux <> bpow def
R71162:71167 compcert.flocq.Core.Zaux <> radix2 def
R71185:71193 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R71141:71154 Coq.Reals.RIneq <> Rmult_le_reg_l thm
R71157:71160 compcert.flocq.Core.Raux <> bpow def
R71162:71167 compcert.flocq.Core.Zaux <> radix2 def
R71185:71193 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R71214:71224 Coq.Reals.Raxioms <> Rmult_assoc prfax
R71229:71237 compcert.flocq.Core.Raux <> bpow_plus thm
R71240:71255 Coq.ZArith.BinInt Z add_opp_diag_r thm
R71214:71224 Coq.Reals.Raxioms <> Rmult_assoc prfax
R71214:71224 Coq.Reals.Raxioms <> Rmult_assoc prfax
R71229:71237 compcert.flocq.Core.Raux <> bpow_plus thm
R71229:71237 compcert.flocq.Core.Raux <> bpow_plus thm
R71240:71255 Coq.ZArith.BinInt Z add_opp_diag_r thm
R71240:71255 Coq.ZArith.BinInt Z add_opp_diag_r thm
R71272:71280 Coq.Reals.Raxioms <> Rmult_1_l prfax
R71272:71280 Coq.Reals.Raxioms <> Rmult_1_l prfax
R71272:71280 Coq.Reals.Raxioms <> Rmult_1_l prfax
R71297:71298 Coq.Reals.Rdefinitions <> ::R_scope:'/'_x not
R71310:71313 compcert.flocq.Core.Raux <> bpow def
R71315:71320 compcert.flocq.Core.Zaux <> radix2 def
R71340:71348 compcert.flocq.Core.Raux <> bpow_plus thm
R71297:71298 Coq.Reals.Rdefinitions <> ::R_scope:'/'_x not
R71310:71313 compcert.flocq.Core.Raux <> bpow def
R71315:71320 compcert.flocq.Core.Zaux <> radix2 def
R71340:71348 compcert.flocq.Core.Raux <> bpow_plus thm
R71340:71348 compcert.flocq.Core.Raux <> bpow_plus thm
R71368:71378 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R71381:71383 Coq.Reals.Rdefinitions <> IZR def
R71398:71403 Coq.Reals.RIneq <> IZR_le thm
R71368:71378 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R71381:71383 Coq.Reals.Rdefinitions <> IZR def
R71368:71378 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R71381:71383 Coq.Reals.Rdefinitions <> IZR def
R71368:71378 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R71381:71383 Coq.Reals.Rdefinitions <> IZR def
R71398:71403 Coq.Reals.RIneq <> IZR_le thm
R71436:71451 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R71454:71464 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R71436:71451 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R71436:71451 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R71454:71464 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R71454:71464 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R71454:71464 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R71487:71497 compcert.flocq.Core.Raux <> bpow_mag_le thm
R71506:71512 Coq.Reals.RIneq <> IZR_neq thm
R71487:71497 compcert.flocq.Core.Raux <> bpow_mag_le thm
R71506:71512 Coq.Reals.RIneq <> IZR_neq thm
R71533:71546 Coq.Reals.RIneq <> Rmult_lt_reg_l thm
R71549:71552 compcert.flocq.Core.Raux <> bpow def
R71554:71559 compcert.flocq.Core.Zaux <> radix2 def
R71577:71585 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R71533:71546 Coq.Reals.RIneq <> Rmult_lt_reg_l thm
R71549:71552 compcert.flocq.Core.Raux <> bpow def
R71554:71559 compcert.flocq.Core.Zaux <> radix2 def
R71577:71585 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R71606:71616 Coq.Reals.Raxioms <> Rmult_assoc prfax
R71621:71629 compcert.flocq.Core.Raux <> bpow_plus thm
R71632:71647 Coq.ZArith.BinInt Z add_opp_diag_r thm
R71606:71616 Coq.Reals.Raxioms <> Rmult_assoc prfax
R71606:71616 Coq.Reals.Raxioms <> Rmult_assoc prfax
R71621:71629 compcert.flocq.Core.Raux <> bpow_plus thm
R71621:71629 compcert.flocq.Core.Raux <> bpow_plus thm
R71632:71647 Coq.ZArith.BinInt Z add_opp_diag_r thm
R71632:71647 Coq.ZArith.BinInt Z add_opp_diag_r thm
R71664:71672 Coq.Reals.Raxioms <> Rmult_1_l prfax
R71675:71683 Coq.Reals.RIneq <> Rmult_1_r thm
R71664:71672 Coq.Reals.Raxioms <> Rmult_1_l prfax
R71664:71672 Coq.Reals.Raxioms <> Rmult_1_l prfax
R71675:71683 Coq.Reals.RIneq <> Rmult_1_r thm
R71675:71683 Coq.Reals.RIneq <> Rmult_1_r thm
R71703:71713 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R71716:71718 Coq.Reals.Rdefinitions <> IZR def
R71733:71738 Coq.Reals.RIneq <> IZR_le thm
R71703:71713 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R71716:71718 Coq.Reals.Rdefinitions <> IZR def
R71703:71713 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R71716:71718 Coq.Reals.Rdefinitions <> IZR def
R71703:71713 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R71716:71718 Coq.Reals.Rdefinitions <> IZR def
R71733:71738 Coq.Reals.RIneq <> IZR_le thm
R71771:71786 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R71789:71799 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R71771:71786 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R71771:71786 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R71789:71799 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R71789:71799 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R71789:71799 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R71822:71832 compcert.flocq.Core.Raux <> bpow_mag_gt thm
R71841:71847 Coq.Reals.RIneq <> IZR_neq thm
R71822:71832 compcert.flocq.Core.Raux <> bpow_mag_gt thm
R71867:71877 Coq.Reals.Raxioms <> Rmult_assoc prfax
R71882:71890 compcert.flocq.Core.Raux <> bpow_plus thm
R71893:71909 Coq.ZArith.Zpower <> shift_pos_correct thm
R71867:71877 Coq.Reals.Raxioms <> Rmult_assoc prfax
R71867:71877 Coq.Reals.Raxioms <> Rmult_assoc prfax
R71882:71890 compcert.flocq.Core.Raux <> bpow_plus thm
R71882:71890 compcert.flocq.Core.Raux <> bpow_plus thm
R71893:71909 Coq.ZArith.Zpower <> shift_pos_correct thm
R71893:71909 Coq.ZArith.Zpower <> shift_pos_correct thm
R71924:71936 compcert.flocq.Core.Raux <> IZR_cond_Zopp thm
R71939:71946 Coq.Reals.RIneq <> mult_IZR thm
R71949:71964 compcert.flocq.Core.Raux <> cond_Ropp_mult_r thm
R71969:71981 compcert.flocq.Core.Raux <> IZR_cond_Zopp thm
R71924:71936 compcert.flocq.Core.Raux <> IZR_cond_Zopp thm
R71924:71936 compcert.flocq.Core.Raux <> IZR_cond_Zopp thm
R71939:71946 Coq.Reals.RIneq <> mult_IZR thm
R71939:71946 Coq.Reals.RIneq <> mult_IZR thm
R71949:71964 compcert.flocq.Core.Raux <> cond_Ropp_mult_r thm
R71949:71964 compcert.flocq.Core.Raux <> cond_Ropp_mult_r thm
R71969:71981 compcert.flocq.Core.Raux <> IZR_cond_Zopp thm
R71969:71981 compcert.flocq.Core.Raux <> IZR_cond_Zopp thm
R71996:71998 Coq.Reals.Rdefinitions <> IZR def
R72001:72009 Coq.ZArith.BinInt Z pow_pos def
R72029:72032 compcert.flocq.Core.Raux <> bpow def
R72042:72046 Coq.ZArith.BinInt Z pos syndef
R72049:72056 Coq.ZArith.BinInt Z to_pos def
R72063:72065 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72059:72062 compcert.flocq.IEEE754.Binary <> Binary.prec var
R72066:72070 Coq.ZArith.BinInt Z pos syndef
R72073:72083 compcert.flocq.Core.Digits <> digits2_pos def
R72034:72039 compcert.flocq.Core.Zaux <> radix2 def
R71996:71998 Coq.Reals.Rdefinitions <> IZR def
R72001:72009 Coq.ZArith.BinInt Z pow_pos def
R72029:72032 compcert.flocq.Core.Raux <> bpow def
R72042:72046 Coq.ZArith.BinInt Z pos syndef
R72049:72056 Coq.ZArith.BinInt Z to_pos def
R72063:72065 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72059:72062 compcert.flocq.IEEE754.Binary <> Binary.prec var
R72066:72070 Coq.ZArith.BinInt Z pos syndef
R72073:72083 compcert.flocq.Core.Digits <> digits2_pos def
R72034:72039 compcert.flocq.Core.Zaux <> radix2 def
R72106:72113 Coq.ZArith.BinInt Z2Pos id thm
R72106:72113 Coq.ZArith.BinInt Z2Pos id thm
R72106:72113 Coq.ZArith.BinInt Z2Pos id thm
R72106:72113 Coq.ZArith.BinInt Z2Pos id thm
R72136:72145 Coq.Reals.Raxioms <> Rmult_comm prfax
R72150:72160 Coq.Reals.Raxioms <> Rmult_assoc prfax
R72165:72173 compcert.flocq.Core.Raux <> bpow_plus thm
R72136:72145 Coq.Reals.Raxioms <> Rmult_comm prfax
R72136:72145 Coq.Reals.Raxioms <> Rmult_comm prfax
R72150:72160 Coq.Reals.Raxioms <> Rmult_assoc prfax
R72150:72160 Coq.Reals.Raxioms <> Rmult_assoc prfax
R72165:72173 compcert.flocq.Core.Raux <> bpow_plus thm
R72165:72173 compcert.flocq.Core.Raux <> bpow_plus thm
R72194:72196 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R72227:72236 Coq.Reals.Raxioms <> Rmult_comm prfax
R72194:72196 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R72227:72236 Coq.Reals.Raxioms <> Rmult_comm prfax
R72227:72236 Coq.Reals.Raxioms <> Rmult_comm prfax
def 72256:72261 <> Bfrexp
R72276:72276 compcert.flocq.IEEE754.Binary <> f var
R72287:72297 compcert.flocq.IEEE754.Binary <> B754_finite constr
R72324:72326 Coq.Init.Datatypes <> snd def
R72329:72346 compcert.flocq.IEEE754.Binary <> Ffrexp_core_binary def
R72362:72362 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R72406:72407 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R72410:72410 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R72363:72366 compcert.flocq.IEEE754.Binary <> FF2B def
R72371:72375 Coq.Init.Logic <> proj1 thm
R72378:72395 compcert.flocq.IEEE754.Binary <> Bfrexp_correct_aux thm
R72408:72409 compcert.flocq.IEEE754.Binary <> e' var
R72421:72421 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R72423:72424 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R72441:72441 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R72422:72422 compcert.flocq.IEEE754.Binary <> f var
R72433:72433 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72428:72428 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R72429:72432 compcert.flocq.IEEE754.Binary <> Binary.emax var
R72434:72437 compcert.flocq.IEEE754.Binary <> Binary.prec var
prf 72459:72472 <> Bfrexp_correct
R72515:72520 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R72530:72532 compcert.flocq.IEEE754.Binary <> B2R def
R72534:72534 compcert.flocq.IEEE754.Binary <> f var
R72550:72552 Coq.Init.Datatypes <> fst def
R72555:72560 compcert.flocq.IEEE754.Binary <> Bfrexp def
R72562:72562 compcert.flocq.IEEE754.Binary <> f var
R72579:72581 Coq.Init.Datatypes <> snd def
R72584:72589 compcert.flocq.IEEE754.Binary <> Bfrexp def
R72591:72591 compcert.flocq.IEEE754.Binary <> f var
R72625:72630 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R72602:72605 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x_'<'_x not
R72618:72620 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x_'<'_x not
R72600:72600 Coq.Reals.Rdefinitions <> ::R_scope:'/'_x not
R72606:72609 Coq.Reals.Rbasic_fun <> Rabs def
R72612:72614 compcert.flocq.IEEE754.Binary <> B2R def
R72616:72616 compcert.flocq.IEEE754.Binary <> z var
R72606:72609 Coq.Reals.Rbasic_fun <> Rabs def
R72612:72614 compcert.flocq.IEEE754.Binary <> B2R def
R72616:72616 compcert.flocq.IEEE754.Binary <> z var
R72660:72665 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R72633:72635 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72632:72632 compcert.flocq.IEEE754.Binary <> x var
R72641:72643 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R72636:72638 compcert.flocq.IEEE754.Binary <> B2R def
R72640:72640 compcert.flocq.IEEE754.Binary <> z var
R72644:72647 compcert.flocq.Core.Raux <> bpow def
R72656:72656 compcert.flocq.IEEE754.Binary <> e var
R72649:72654 compcert.flocq.Core.Zaux <> radix2 def
R72667:72669 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72666:72666 compcert.flocq.IEEE754.Binary <> e var
R72670:72672 compcert.flocq.Core.Raux <> mag def
R72681:72681 compcert.flocq.IEEE754.Binary <> x var
R72674:72679 compcert.flocq.Core.Zaux <> radix2 def
R72508:72510 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72490:72505 compcert.flocq.IEEE754.Binary <> is_finite_strict def
R72507:72507 compcert.flocq.IEEE754.Binary <> f var
R72511:72514 Coq.Init.Datatypes <> true constr
R72705:72705 Coq.Reals.Rtopology <> f proj
R72764:72781 compcert.flocq.IEEE754.Binary <> Bfrexp_correct_aux thm
R72764:72781 compcert.flocq.IEEE754.Binary <> Bfrexp_correct_aux thm
R72832:72839 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R72832:72839 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R72832:72839 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R72897:72909 compcert.flocq.Core.Raux <> mag_mult_bpow thm
R72897:72909 compcert.flocq.Core.Raux <> mag_mult_bpow thm
R72897:72909 compcert.flocq.Core.Raux <> mag_mult_bpow thm
R72897:72909 compcert.flocq.Core.Raux <> mag_mult_bpow thm
R72921:72931 Coq.ZArith.BinInt Z add_reg_l thm
R72934:72936 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R72967:72967 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R72937:72939 Coq.Init.Datatypes <> snd def
R72942:72959 compcert.flocq.IEEE754.Binary <> Ffrexp_core_binary def
R72921:72931 Coq.ZArith.BinInt Z add_reg_l thm
R72934:72936 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R72967:72967 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R72937:72939 Coq.Init.Datatypes <> snd def
R72942:72959 compcert.flocq.IEEE754.Binary <> Ffrexp_core_binary def
R73009:73018 compcert.flocq.Core.Raux <> mag_unique thm
R73009:73018 compcert.flocq.Core.Raux <> mag_unique thm
R73078:73084 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R73078:73084 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R73078:73084 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
def 73121:73124 <> Bulp
R73131:73136 compcert.flocq.IEEE754.Binary <> Bldexp def
R73152:73155 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R73158:73160 Coq.Init.Datatypes <> snd def
R73163:73168 compcert.flocq.IEEE754.Binary <> Bfrexp def
R73170:73170 compcert.flocq.IEEE754.Binary <> x var
R73146:73149 compcert.flocq.IEEE754.Binary <> Bone def
R73138:73144 compcert.flocq.IEEE754.Binary <> mode_NE constr
prf 73185:73196 <> Bulp_correct
R73232:73237 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73276:73281 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R73250:73252 Coq.Init.Logic <> ::type_scope:x_'='_x not
R73238:73240 compcert.flocq.IEEE754.Binary <> B2R def
R73243:73246 compcert.flocq.IEEE754.Binary <> Bulp def
R73248:73248 compcert.flocq.IEEE754.Binary <> x var
R73253:73255 compcert.flocq.Core.Ulp <> ulp def
R73270:73272 compcert.flocq.IEEE754.Binary <> B2R def
R73274:73274 compcert.flocq.IEEE754.Binary <> x var
R73264:73267 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R73257:73262 compcert.flocq.Core.Zaux <> radix2 def
R73307:73312 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R73300:73302 Coq.Init.Logic <> ::type_scope:x_'='_x not
R73282:73290 compcert.flocq.IEEE754.Binary <> is_finite def
R73293:73296 compcert.flocq.IEEE754.Binary <> Bulp def
R73298:73298 compcert.flocq.IEEE754.Binary <> x var
R73303:73306 Coq.Init.Datatypes <> true constr
R73327:73329 Coq.Init.Logic <> ::type_scope:x_'='_x not
R73313:73317 compcert.flocq.IEEE754.Binary <> Bsign def
R73320:73323 compcert.flocq.IEEE754.Binary <> Bulp def
R73325:73325 compcert.flocq.IEEE754.Binary <> x var
R73330:73334 Coq.Init.Datatypes <> false constr
R73225:73227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R73214:73222 compcert.flocq.IEEE754.Binary <> is_finite def
R73224:73224 compcert.flocq.IEEE754.Binary <> x var
R73228:73231 Coq.Init.Datatypes <> true constr
R73382:73385 compcert.flocq.IEEE754.Binary <> Bulp def
R73399:73402 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R73412:73415 compcert.flocq.IEEE754.Binary <> Binary.emin var
R73399:73402 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R73412:73415 compcert.flocq.IEEE754.Binary <> Binary.emin var
R73434:73447 compcert.flocq.IEEE754.Binary <> Bldexp_correct thm
R73462:73465 compcert.flocq.IEEE754.Binary <> Binary.emin var
R73457:73460 compcert.flocq.IEEE754.Binary <> Bone def
R73449:73455 compcert.flocq.IEEE754.Binary <> mode_NE constr
R73434:73447 compcert.flocq.IEEE754.Binary <> Bldexp_correct thm
R73462:73465 compcert.flocq.IEEE754.Binary <> Binary.emin var
R73457:73460 compcert.flocq.IEEE754.Binary <> Bone def
R73449:73455 compcert.flocq.IEEE754.Binary <> mode_NE constr
R73481:73492 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R73495:73503 Coq.Reals.Raxioms <> Rmult_1_l prfax
R73506:73518 compcert.flocq.Core.Generic_fmt <> round_generic thm
R73539:73549 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R73557:73575 compcert.flocq.Core.Generic_fmt <> generic_format_bpow thm
R73585:73588 compcert.flocq.IEEE754.Binary <> fexp vardef
R73591:73597 compcert.flocq.Core.FLT <> FLT_exp def
R73616:73622 Coq.ZArith.BinInt Z max_r thm
R73632:73640 compcert.flocq.Core.FLX <> Prec_gt_0 class
R73481:73492 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R73481:73492 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R73495:73503 Coq.Reals.Raxioms <> Rmult_1_l prfax
R73495:73503 Coq.Reals.Raxioms <> Rmult_1_l prfax
R73506:73518 compcert.flocq.Core.Generic_fmt <> round_generic thm
R73506:73518 compcert.flocq.Core.Generic_fmt <> round_generic thm
R73506:73518 compcert.flocq.Core.Generic_fmt <> round_generic thm
R73506:73518 compcert.flocq.Core.Generic_fmt <> round_generic thm
R73539:73549 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R73557:73575 compcert.flocq.Core.Generic_fmt <> generic_format_bpow thm
R73616:73622 Coq.ZArith.BinInt Z max_r thm
R73616:73622 Coq.ZArith.BinInt Z max_r thm
R73616:73622 Coq.ZArith.BinInt Z max_r thm
R73675:73687 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R73675:73687 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R73675:73687 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R73675:73687 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R73772:73785 compcert.flocq.IEEE754.Binary <> is_finite_Bone thm
R73793:73802 compcert.flocq.IEEE754.Binary <> Bsign_Bone thm
R73772:73785 compcert.flocq.IEEE754.Binary <> is_finite_Bone thm
R73793:73802 compcert.flocq.IEEE754.Binary <> Bsign_Bone thm
R73827:73829 compcert.flocq.Core.Ulp <> ulp def
R73840:73852 compcert.flocq.Core.Raux <> Req_bool_true thm
R73840:73852 compcert.flocq.Core.Raux <> Req_bool_true thm
R73840:73852 compcert.flocq.Core.Raux <> Req_bool_true thm
R73840:73852 compcert.flocq.Core.Raux <> Req_bool_true thm
R73887:73904 compcert.flocq.Core.FLT <> negligible_exp_FLT thm
R73911:73914 compcert.flocq.IEEE754.Binary <> Binary.prec var
R73906:73909 compcert.flocq.IEEE754.Binary <> Binary.emin var
R73887:73904 compcert.flocq.Core.FLT <> negligible_exp_FLT thm
R73911:73914 compcert.flocq.IEEE754.Binary <> Binary.prec var
R73906:73909 compcert.flocq.IEEE754.Binary <> Binary.emin var
R73949:73952 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R73960:73966 compcert.flocq.Core.FLT <> FLT_exp def
R73973:73976 compcert.flocq.IEEE754.Binary <> Binary.prec var
R73968:73971 compcert.flocq.IEEE754.Binary <> Binary.emin var
R73949:73952 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R73960:73966 compcert.flocq.Core.FLT <> FLT_exp def
R73973:73976 compcert.flocq.IEEE754.Binary <> Binary.prec var
R73968:73971 compcert.flocq.IEEE754.Binary <> Binary.emin var
R73960:73966 compcert.flocq.Core.FLT <> FLT_exp def
R73973:73976 compcert.flocq.IEEE754.Binary <> Binary.prec var
R73968:73971 compcert.flocq.IEEE754.Binary <> Binary.emin var
R74009:74015 compcert.flocq.Core.FLT <> FLT_exp def
R74026:74032 Coq.ZArith.BinInt Z max_r thm
R74052:74060 compcert.flocq.Core.FLX <> Prec_gt_0 class
R74026:74032 Coq.ZArith.BinInt Z max_r thm
R74026:74032 Coq.ZArith.BinInt Z max_r thm
R74026:74032 Coq.ZArith.BinInt Z max_r thm
R74097:74107 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R74122:74130 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R74140:74146 compcert.flocq.Core.Raux <> bpow_lt thm
R74097:74107 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R74097:74107 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R74097:74107 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R74122:74130 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R74140:74146 compcert.flocq.Core.Raux <> bpow_lt thm
R74162:74165 compcert.flocq.IEEE754.Binary <> emin vardef
R74175:74183 compcert.flocq.Core.FLX <> Prec_gt_0 class
R74224:74227 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R74238:74241 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R74253:74255 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R74246:74248 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R74249:74252 compcert.flocq.IEEE754.Binary <> Binary.emax var
R74256:74259 compcert.flocq.IEEE754.Binary <> Binary.prec var
R74224:74227 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R74238:74241 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R74253:74255 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R74246:74248 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R74249:74252 compcert.flocq.IEEE754.Binary <> Binary.emax var
R74256:74259 compcert.flocq.IEEE754.Binary <> Binary.prec var
R74275:74278 compcert.flocq.IEEE754.Binary <> fexp vardef
R74281:74287 compcert.flocq.Core.FLT <> FLT_exp def
R74298:74304 Coq.ZArith.BinInt Z max_r thm
R74298:74304 Coq.ZArith.BinInt Z max_r thm
R74298:74304 Coq.ZArith.BinInt Z max_r thm
R74298:74304 Coq.ZArith.BinInt Z max_r thm
R74334:74337 compcert.flocq.IEEE754.Binary <> emin vardef
R74347:74355 compcert.flocq.Core.FLX <> Prec_gt_0 class
R74462:74465 compcert.flocq.IEEE754.Binary <> Bulp def
R74468:74470 compcert.flocq.Core.Ulp <> ulp def
R74473:74476 compcert.flocq.Core.Generic_fmt <> cexp def
R74491:74501 compcert.flocq.IEEE754.Binary <> B754_finite constr
R74491:74501 compcert.flocq.IEEE754.Binary <> B754_finite constr
R74523:74536 compcert.flocq.Core.Raux <> Req_bool_false thm
R74523:74536 compcert.flocq.Core.Raux <> Req_bool_false thm
R74523:74536 compcert.flocq.Core.Raux <> Req_bool_false thm
R74523:74536 compcert.flocq.Core.Raux <> Req_bool_false thm
R74553:74566 compcert.flocq.IEEE754.Binary <> Bfrexp_correct thm
R74571:74577 Coq.Init.Logic <> eq_refl constr
R74553:74566 compcert.flocq.IEEE754.Binary <> Bfrexp_correct thm
R74571:74577 Coq.Init.Logic <> eq_refl constr
R74641:74644 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R74641:74644 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R74666:74679 compcert.flocq.IEEE754.Binary <> Bldexp_correct thm
R74689:74692 compcert.flocq.IEEE754.Binary <> Bone def
R74681:74687 compcert.flocq.IEEE754.Binary <> mode_NE constr
R74666:74679 compcert.flocq.IEEE754.Binary <> Bldexp_correct thm
R74689:74692 compcert.flocq.IEEE754.Binary <> Bone def
R74681:74687 compcert.flocq.IEEE754.Binary <> mode_NE constr
R74711:74722 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R74725:74733 Coq.Reals.Raxioms <> Rmult_1_l prfax
R74736:74748 compcert.flocq.Core.Generic_fmt <> round_generic thm
R74763:74773 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R74711:74722 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R74711:74722 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R74725:74733 Coq.Reals.Raxioms <> Rmult_1_l prfax
R74725:74733 Coq.Reals.Raxioms <> Rmult_1_l prfax
R74736:74748 compcert.flocq.Core.Generic_fmt <> round_generic thm
R74736:74748 compcert.flocq.Core.Generic_fmt <> round_generic thm
R74736:74748 compcert.flocq.Core.Generic_fmt <> round_generic thm
R74736:74748 compcert.flocq.Core.Generic_fmt <> round_generic thm
R74763:74773 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R74792:74804 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R74792:74804 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R74792:74804 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R74792:74804 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R74893:74906 compcert.flocq.IEEE754.Binary <> is_finite_Bone thm
R74914:74923 compcert.flocq.IEEE754.Binary <> Bsign_Bone thm
R74893:74906 compcert.flocq.IEEE754.Binary <> is_finite_Bone thm
R74914:74923 compcert.flocq.IEEE754.Binary <> Bsign_Bone thm
R74944:74954 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R74969:74977 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R74944:74954 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R74944:74954 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R74944:74954 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R74969:74977 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R75000:75003 compcert.flocq.IEEE754.Binary <> fexp vardef
R75006:75012 compcert.flocq.Core.FLT <> FLT_exp def
R75029:75038 Coq.ZArith.BinInt Z max_spec thm
R75068:75071 compcert.flocq.IEEE754.Binary <> Binary.emin var
R75059:75061 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R75041:75043 compcert.flocq.Core.Raux <> mag def
R75053:75055 compcert.flocq.IEEE754.Binary <> B2R def
R75045:75050 compcert.flocq.Core.Zaux <> radix2 def
R75062:75065 compcert.flocq.IEEE754.Binary <> Binary.prec var
R75124:75130 compcert.flocq.Core.Raux <> bpow_lt thm
R75155:75158 compcert.flocq.IEEE754.Binary <> emin vardef
R75168:75176 compcert.flocq.Core.FLX <> Prec_gt_0 class
R75029:75038 Coq.ZArith.BinInt Z max_spec thm
R75068:75071 compcert.flocq.IEEE754.Binary <> Binary.emin var
R75059:75061 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R75041:75043 compcert.flocq.Core.Raux <> mag def
R75053:75055 compcert.flocq.IEEE754.Binary <> B2R def
R75045:75050 compcert.flocq.Core.Zaux <> radix2 def
R75062:75065 compcert.flocq.IEEE754.Binary <> Binary.prec var
R75124:75130 compcert.flocq.Core.Raux <> bpow_lt thm
R75124:75130 compcert.flocq.Core.Raux <> bpow_lt thm
R75215:75228 Coq.ZArith.Zorder <> Zplus_lt_reg_r thm
R75234:75237 compcert.flocq.IEEE754.Binary <> Binary.prec var
R75215:75228 Coq.ZArith.Zorder <> Zplus_lt_reg_r thm
R75234:75237 compcert.flocq.IEEE754.Binary <> Binary.prec var
R75290:75293 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R75272:75274 compcert.flocq.Core.Raux <> mag def
R75284:75286 compcert.flocq.IEEE754.Binary <> B2R def
R75276:75281 compcert.flocq.Core.Zaux <> radix2 def
R75294:75297 compcert.flocq.IEEE754.Binary <> Binary.emax var
R75326:75334 compcert.flocq.Core.FLX <> Prec_gt_0 class
R75290:75293 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R75272:75274 compcert.flocq.Core.Raux <> mag def
R75284:75286 compcert.flocq.IEEE754.Binary <> B2R def
R75276:75281 compcert.flocq.Core.Zaux <> radix2 def
R75294:75297 compcert.flocq.IEEE754.Binary <> Binary.emax var
R75371:75381 compcert.flocq.Core.Raux <> mag_le_bpow thm
R75396:75410 compcert.flocq.IEEE754.Binary <> abs_B2R_lt_emax thm
R75371:75381 compcert.flocq.Core.Raux <> mag_le_bpow thm
R75396:75410 compcert.flocq.IEEE754.Binary <> abs_B2R_lt_emax thm
R75433:75433 Coq.Reals.Rtopology <> f proj
R75436:75438 compcert.flocq.IEEE754.Binary <> B2R def
R75447:75455 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
R75447:75455 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
R75478:75496 compcert.flocq.Core.Generic_fmt <> generic_format_bpow thm
R75499:75507 Coq.ZArith.BinInt Z max_lub thm
R75478:75496 compcert.flocq.Core.Generic_fmt <> generic_format_bpow thm
R75499:75507 Coq.ZArith.BinInt Z max_lub thm
R75523:75531 compcert.flocq.Core.FLX <> Prec_gt_0 class
R75565:75574 Coq.ZArith.BinInt Z le_max_r thm
R75565:75574 Coq.ZArith.BinInt Z le_max_r thm
R75592:75592 Coq.Reals.Rtopology <> f proj
R75595:75597 compcert.flocq.IEEE754.Binary <> B2R def
R75606:75614 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
R75606:75614 compcert.flocq.Core.Float_prop <> F2R_neq_0 thm
def 75678:75686 <> Bpred_pos
R75714:75714 compcert.flocq.IEEE754.Binary <> x var
R75725:75735 compcert.flocq.IEEE754.Binary <> B754_finite constr
R75776:75779 Coq.PArith.BinPos <> ::positive_scope:x_'=?'_x not
R75774:75775 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R75780:75788 Coq.ZArith.Zpower <> shift_pos def
R75791:75798 Coq.ZArith.BinInt Z to_pos def
R75800:75803 compcert.flocq.IEEE754.Binary <> Binary.prec var
R75898:75901 compcert.flocq.IEEE754.Binary <> Bulp def
R75903:75903 compcert.flocq.IEEE754.Binary <> x var
R75831:75836 compcert.flocq.IEEE754.Binary <> Bldexp def
R75852:75855 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R75872:75874 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R75858:75860 Coq.Init.Datatypes <> snd def
R75863:75868 compcert.flocq.IEEE754.Binary <> Bfrexp def
R75870:75870 compcert.flocq.IEEE754.Binary <> x var
R75846:75849 compcert.flocq.IEEE754.Binary <> Bone def
R75838:75844 compcert.flocq.IEEE754.Binary <> mode_NE constr
R75912:75917 compcert.flocq.IEEE754.Binary <> Bminus def
R75953:75953 compcert.flocq.IEEE754.Binary <> d var
R75951:75951 compcert.flocq.IEEE754.Binary <> x var
R75943:75949 compcert.flocq.IEEE754.Binary <> mode_NE constr
R75929:75940 compcert.flocq.IEEE754.Binary <> pred_pos_nan var
R75964:75964 compcert.flocq.IEEE754.Binary <> x var
prf 75982:75998 <> Bpred_pos_correct
R76042:76047 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R76109:76114 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R76078:76080 Coq.Init.Logic <> ::type_scope:x_'='_x not
R76048:76050 compcert.flocq.IEEE754.Binary <> B2R def
R76053:76061 compcert.flocq.IEEE754.Binary <> Bpred_pos def
R76076:76076 compcert.flocq.IEEE754.Binary <> x var
R76063:76074 compcert.flocq.IEEE754.Binary <> pred_pos_nan var
R76081:76088 compcert.flocq.Core.Ulp <> pred_pos def
R76103:76105 compcert.flocq.IEEE754.Binary <> B2R def
R76107:76107 compcert.flocq.IEEE754.Binary <> x var
R76097:76100 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R76090:76095 compcert.flocq.Core.Zaux <> radix2 def
R76158:76163 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R76151:76153 Coq.Init.Logic <> ::type_scope:x_'='_x not
R76115:76123 compcert.flocq.IEEE754.Binary <> is_finite def
R76126:76134 compcert.flocq.IEEE754.Binary <> Bpred_pos def
R76149:76149 compcert.flocq.IEEE754.Binary <> x var
R76136:76147 compcert.flocq.IEEE754.Binary <> pred_pos_nan var
R76154:76157 Coq.Init.Datatypes <> true constr
R76196:76198 Coq.Init.Logic <> ::type_scope:x_'='_x not
R76164:76168 compcert.flocq.IEEE754.Binary <> Bsign def
R76171:76179 compcert.flocq.IEEE754.Binary <> Bpred_pos def
R76194:76194 compcert.flocq.IEEE754.Binary <> x var
R76181:76192 compcert.flocq.IEEE754.Binary <> pred_pos_nan var
R76199:76203 Coq.Init.Datatypes <> false constr
R76031:76033 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x not
R76034:76036 compcert.flocq.IEEE754.Binary <> B2R def
R76038:76038 compcert.flocq.IEEE754.Binary <> x var
R76248:76261 compcert.flocq.IEEE754.Binary <> Bfrexp_correct thm
R76248:76261 compcert.flocq.IEEE754.Binary <> Bfrexp_correct thm
R76315:76324 Coq.Reals.RIneq <> Rlt_irrefl thm
R76315:76324 Coq.Reals.RIneq <> Rlt_irrefl thm
R76373:76382 Coq.Reals.RIneq <> Rlt_irrefl thm
R76373:76382 Coq.Reals.RIneq <> Rlt_irrefl thm
R76438:76447 Coq.Reals.RIneq <> Rlt_irrefl thm
R76438:76447 Coq.Reals.RIneq <> Rlt_irrefl thm
R76509:76511 Coq.Init.Logic <> ::type_scope:x_'='_x not
R76512:76516 Coq.Init.Datatypes <> false constr
R76509:76511 Coq.Init.Logic <> ::type_scope:x_'='_x not
R76512:76516 Coq.Init.Datatypes <> false constr
R76551:76553 compcert.flocq.IEEE754.Binary <> B2R def
R76556:76558 compcert.flocq.Core.Defs <> F2R def
R76622:76631 Coq.Reals.RIneq <> Rle_not_lt thm
R76622:76631 Coq.Reals.RIneq <> Rle_not_lt thm
R76649:76657 Coq.Reals.RIneq <> Rmult_0_l thm
R76660:76663 compcert.flocq.Core.Raux <> bpow def
R76665:76670 compcert.flocq.Core.Zaux <> radix2 def
R76649:76657 Coq.Reals.RIneq <> Rmult_0_l thm
R76660:76663 compcert.flocq.Core.Raux <> bpow def
R76665:76670 compcert.flocq.Core.Zaux <> radix2 def
R76649:76657 Coq.Reals.RIneq <> Rmult_0_l thm
R76660:76663 compcert.flocq.Core.Raux <> bpow def
R76665:76670 compcert.flocq.Core.Zaux <> radix2 def
R76688:76704 Coq.Reals.RIneq <> Rmult_le_compat_r thm
R76714:76722 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R76730:76735 Coq.Reals.RIneq <> IZR_le thm
R76688:76704 Coq.Reals.RIneq <> Rmult_le_compat_r thm
R76714:76722 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R76730:76735 Coq.Reals.RIneq <> IZR_le thm
R76824:76830 Coq.Init.Logic <> eq_refl constr
R76824:76830 Coq.Init.Logic <> eq_refl constr
R76865:76872 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R76865:76872 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R76865:76872 compcert.flocq.IEEE754.Binary <> B2R_FF2B thm
R76962:76970 compcert.flocq.IEEE754.Binary <> Bpred_pos def
R76973:76978 compcert.flocq.IEEE754.Binary <> Bfrexp def
R76990:76992 Coq.Init.Datatypes <> snd def
R76994:76994 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R76996:76997 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R77003:77003 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R76998:77000 Coq.Init.Datatypes <> snd def
R76990:76992 Coq.Init.Datatypes <> snd def
R76994:76994 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R76996:76997 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R77003:77003 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R76998:77000 Coq.Init.Datatypes <> snd def
R77043:77053 compcert.flocq.IEEE754.Binary <> B754_finite constr
R77043:77053 compcert.flocq.IEEE754.Binary <> B754_finite constr
R77078:77080 compcert.flocq.Core.Defs <> F2R def
R77078:77080 compcert.flocq.Core.Defs <> F2R def
R77105:77108 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R77105:77108 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R77126:77127 Coq.Reals.Rgeom <> xr def
R77130:77132 compcert.flocq.Core.Defs <> F2R def
R77157:77165 Coq.Reals.RIneq <> Rmult_0_l thm
R77168:77171 compcert.flocq.Core.Raux <> bpow def
R77173:77178 compcert.flocq.Core.Zaux <> radix2 def
R77157:77165 Coq.Reals.RIneq <> Rmult_0_l thm
R77168:77171 compcert.flocq.Core.Raux <> bpow def
R77173:77178 compcert.flocq.Core.Zaux <> radix2 def
R77157:77165 Coq.Reals.RIneq <> Rmult_0_l thm
R77168:77171 compcert.flocq.Core.Raux <> bpow def
R77173:77178 compcert.flocq.Core.Zaux <> radix2 def
R77205:77218 Coq.Reals.RIneq <> Rmult_eq_reg_r thm
R77234:77243 Coq.Reals.RIneq <> Rgt_not_eq thm
R77246:77254 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R77205:77218 Coq.Reals.RIneq <> Rmult_eq_reg_r thm
R77234:77243 Coq.Reals.RIneq <> Rgt_not_eq thm
R77246:77254 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R77268:77273 Coq.Reals.RIneq <> eq_IZR thm
R77268:77273 Coq.Reals.RIneq <> eq_IZR thm
R77306:77317 compcert.flocq.IEEE754.Binary <> Bulp_correct thm
R77306:77317 compcert.flocq.IEEE754.Binary <> Bulp_correct thm
R77344:77350 Coq.Init.Logic <> eq_refl constr
R77344:77350 Coq.Init.Logic <> eq_refl constr
R77377:77390 compcert.flocq.IEEE754.Binary <> Bldexp_correct thm
R77406:77409 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R77425:77427 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R77412:77414 compcert.flocq.Core.Raux <> mag def
R77416:77421 compcert.flocq.Core.Zaux <> radix2 def
R77400:77403 compcert.flocq.IEEE754.Binary <> Bone def
R77392:77398 compcert.flocq.IEEE754.Binary <> mode_NE constr
R77377:77390 compcert.flocq.IEEE754.Binary <> Bldexp_correct thm
R77406:77409 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R77425:77427 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R77412:77414 compcert.flocq.Core.Raux <> mag def
R77416:77421 compcert.flocq.Core.Zaux <> radix2 def
R77400:77403 compcert.flocq.IEEE754.Binary <> Bone def
R77392:77398 compcert.flocq.IEEE754.Binary <> mode_NE constr
R77444:77455 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R77458:77466 Coq.Reals.Raxioms <> Rmult_1_l prfax
R77444:77455 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R77444:77455 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R77458:77466 Coq.Reals.Raxioms <> Rmult_1_l prfax
R77458:77466 Coq.Reals.Raxioms <> Rmult_1_l prfax
R77499:77512 compcert.flocq.Core.Generic_fmt <> generic_format def
R77549:77552 compcert.flocq.Core.Raux <> bpow def
R77562:77565 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R77581:77583 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R77568:77570 compcert.flocq.Core.Raux <> mag def
R77572:77577 compcert.flocq.Core.Zaux <> radix2 def
R77554:77559 compcert.flocq.Core.Zaux <> radix2 def
R77521:77524 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R77514:77519 compcert.flocq.Core.Zaux <> radix2 def
R77499:77512 compcert.flocq.Core.Generic_fmt <> generic_format def
R77549:77552 compcert.flocq.Core.Raux <> bpow def
R77562:77565 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R77581:77583 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R77568:77570 compcert.flocq.Core.Raux <> mag def
R77572:77577 compcert.flocq.Core.Zaux <> radix2 def
R77554:77559 compcert.flocq.Core.Zaux <> radix2 def
R77521:77524 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R77514:77519 compcert.flocq.Core.Zaux <> radix2 def
R77601:77619 compcert.flocq.Core.Generic_fmt <> generic_format_bpow thm
R77622:77630 Coq.ZArith.BinInt Z max_lub thm
R77601:77619 compcert.flocq.Core.Generic_fmt <> generic_format_bpow thm
R77622:77630 Coq.ZArith.BinInt Z max_lub thm
R77646:77654 compcert.flocq.Core.FLX <> Prec_gt_0 class
R77688:77697 Coq.ZArith.BinInt Z le_max_r thm
R77688:77697 Coq.ZArith.BinInt Z le_max_r thm
R77879:77881 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77716:77723 compcert.flocq.Core.Raux <> Rlt_bool def
R77862:77865 compcert.flocq.Core.Raux <> bpow def
R77874:77877 compcert.flocq.IEEE754.Binary <> Binary.emax var
R77867:77872 compcert.flocq.Core.Zaux <> radix2 def
R77726:77729 Coq.Reals.Rbasic_fun <> Rabs def
R77747:77751 compcert.flocq.Core.Generic_fmt <> round def
R77805:77808 compcert.flocq.Core.Raux <> bpow def
R77818:77821 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R77837:77839 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R77824:77826 compcert.flocq.Core.Raux <> mag def
R77828:77833 compcert.flocq.Core.Zaux <> radix2 def
R77810:77815 compcert.flocq.Core.Zaux <> radix2 def
R77766:77775 compcert.flocq.IEEE754.Binary <> round_mode def
R77777:77783 compcert.flocq.IEEE754.Binary <> mode_NE constr
R77760:77763 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R77753:77758 compcert.flocq.Core.Zaux <> radix2 def
R77882:77885 Coq.Init.Datatypes <> true constr
R77879:77881 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77716:77723 compcert.flocq.Core.Raux <> Rlt_bool def
R77862:77865 compcert.flocq.Core.Raux <> bpow def
R77874:77877 compcert.flocq.IEEE754.Binary <> Binary.emax var
R77867:77872 compcert.flocq.Core.Zaux <> radix2 def
R77726:77729 Coq.Reals.Rbasic_fun <> Rabs def
R77747:77751 compcert.flocq.Core.Generic_fmt <> round def
R77805:77808 compcert.flocq.Core.Raux <> bpow def
R77818:77821 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R77837:77839 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R77824:77826 compcert.flocq.Core.Raux <> mag def
R77828:77833 compcert.flocq.Core.Zaux <> radix2 def
R77810:77815 compcert.flocq.Core.Zaux <> radix2 def
R77766:77775 compcert.flocq.IEEE754.Binary <> round_mode def
R77777:77783 compcert.flocq.IEEE754.Binary <> mode_NE constr
R77760:77763 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R77753:77758 compcert.flocq.Core.Zaux <> radix2 def
R77882:77885 Coq.Init.Datatypes <> true constr
R77932:77944 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R77955:77967 compcert.flocq.Core.Generic_fmt <> round_generic thm
R77984:78003 compcert.flocq.IEEE754.Binary <> valid_rnd_round_mode inst
R77932:77944 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R77955:77967 compcert.flocq.Core.Generic_fmt <> round_generic thm
R77955:77967 compcert.flocq.Core.Generic_fmt <> round_generic thm
R77955:77967 compcert.flocq.Core.Generic_fmt <> round_generic thm
R77955:77967 compcert.flocq.Core.Generic_fmt <> round_generic thm
R77984:78003 compcert.flocq.IEEE754.Binary <> valid_rnd_round_mode inst
R78033:78043 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R78054:78062 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R78072:78078 compcert.flocq.Core.Raux <> bpow_lt thm
R78033:78043 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R78033:78043 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R78033:78043 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R78054:78062 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R78072:78078 compcert.flocq.Core.Raux <> bpow_lt thm
R78091:78102 Coq.ZArith.BinInt Z max_lub_lt thm
R78114:78117 compcert.flocq.IEEE754.Binary <> emin vardef
R78127:78135 compcert.flocq.Core.FLX <> Prec_gt_0 class
R78091:78102 Coq.ZArith.BinInt Z max_lub_lt thm
R78169:78182 Coq.ZArith.Zorder <> Zplus_lt_reg_r thm
R78193:78195 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R78189:78192 compcert.flocq.IEEE754.Binary <> Binary.prec var
R78169:78182 Coq.ZArith.Zorder <> Zplus_lt_reg_r thm
R78193:78195 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R78189:78192 compcert.flocq.IEEE754.Binary <> Binary.prec var
R78228:78236 Coq.ZArith.BinInt Z add_1_r thm
R78245:78255 Coq.ZArith.Zorder <> Zle_lt_succ thm
R78258:78268 compcert.flocq.Core.Raux <> mag_le_bpow thm
R78228:78236 Coq.ZArith.BinInt Z add_1_r thm
R78228:78236 Coq.ZArith.BinInt Z add_1_r thm
R78245:78255 Coq.ZArith.Zorder <> Zle_lt_succ thm
R78258:78268 compcert.flocq.Core.Raux <> mag_le_bpow thm
R78302:78313 Coq.Reals.RIneq <> Rlt_le_trans thm
R78318:78321 compcert.flocq.Core.Raux <> bpow def
R78330:78333 compcert.flocq.IEEE754.Binary <> Binary.emax var
R78323:78328 compcert.flocq.Core.Zaux <> radix2 def
R78302:78313 Coq.Reals.RIneq <> Rlt_le_trans thm
R78318:78321 compcert.flocq.Core.Raux <> bpow def
R78330:78333 compcert.flocq.IEEE754.Binary <> Binary.emax var
R78323:78328 compcert.flocq.Core.Zaux <> radix2 def
R78362:78364 compcert.flocq.IEEE754.Binary <> B2R def
R78377:78391 compcert.flocq.IEEE754.Binary <> abs_B2R_lt_emax thm
R78362:78364 compcert.flocq.IEEE754.Binary <> B2R def
R78377:78391 compcert.flocq.IEEE754.Binary <> abs_B2R_lt_emax thm
R78408:78414 compcert.flocq.Core.Raux <> bpow_le thm
R78424:78432 compcert.flocq.Core.FLX <> Prec_gt_0 class
R78408:78414 compcert.flocq.Core.Raux <> bpow_le thm
R78476:78479 Coq.PArith.BinPos <> ::positive_scope:x_'=?'_x not
R78474:78475 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R78476:78479 Coq.PArith.BinPos <> ::positive_scope:x_'=?'_x not
R78474:78475 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R78561:78574 compcert.flocq.IEEE754.Binary <> Bminus_correct thm
R78600:78606 Coq.Init.Logic <> eq_refl constr
R78586:78592 compcert.flocq.IEEE754.Binary <> mode_NE constr
R78561:78574 compcert.flocq.IEEE754.Binary <> Bminus_correct thm
R78600:78606 Coq.Init.Logic <> eq_refl constr
R78586:78592 compcert.flocq.IEEE754.Binary <> mode_NE constr
R78639:78641 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78628:78636 compcert.flocq.IEEE754.Binary <> is_finite def
R78642:78645 Coq.Init.Datatypes <> true constr
R78639:78641 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78628:78636 compcert.flocq.IEEE754.Binary <> is_finite def
R78642:78645 Coq.Init.Datatypes <> true constr
R78670:78673 Coq.PArith.BinPos <> ::positive_scope:x_'=?'_x not
R78670:78673 Coq.PArith.BinPos <> ::positive_scope:x_'=?'_x not
R78706:78710 Coq.Init.Logic <> proj1 thm
R78713:78717 Coq.Init.Logic <> proj2 thm
R78729:78742 compcert.flocq.IEEE754.Binary <> is_finite_Bone thm
R78706:78710 Coq.Init.Logic <> proj1 thm
R78713:78717 Coq.Init.Logic <> proj2 thm
R78706:78710 Coq.Init.Logic <> proj1 thm
R78713:78717 Coq.Init.Logic <> proj2 thm
R78729:78742 compcert.flocq.IEEE754.Binary <> is_finite_Bone thm
R78729:78742 compcert.flocq.IEEE754.Binary <> is_finite_Bone thm
R78764:78768 Coq.Init.Logic <> proj1 thm
R78771:78775 Coq.Init.Logic <> proj2 thm
R78764:78768 Coq.Init.Logic <> proj1 thm
R78771:78775 Coq.Init.Logic <> proj2 thm
R78764:78768 Coq.Init.Logic <> proj1 thm
R78771:78775 Coq.Init.Logic <> proj2 thm
R78830:78833 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R78834:78836 compcert.flocq.IEEE754.Binary <> B2R def
R78830:78833 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R78834:78836 compcert.flocq.IEEE754.Binary <> B2R def
R78857:78859 compcert.flocq.IEEE754.Binary <> B2R def
R78866:78868 compcert.flocq.Core.Defs <> F2R def
R78892:78903 Coq.Reals.RIneq <> Rmult_le_pos thm
R78913:78918 Coq.Reals.RIneq <> IZR_le thm
R78926:78934 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R78892:78903 Coq.Reals.RIneq <> Rmult_le_pos thm
R78913:78918 Coq.Reals.RIneq <> IZR_le thm
R78926:78934 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R78957:78960 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R78961:78963 compcert.flocq.IEEE754.Binary <> B2R def
R78957:78960 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R78961:78963 compcert.flocq.IEEE754.Binary <> B2R def
R78993:78996 Coq.PArith.BinPos <> ::positive_scope:x_'=?'_x not
R78993:78996 Coq.PArith.BinPos <> ::positive_scope:x_'=?'_x not
R79025:79029 Coq.Init.Logic <> proj1 thm
R79025:79029 Coq.Init.Logic <> proj1 thm
R79025:79029 Coq.Init.Logic <> proj1 thm
R79058:79070 compcert.flocq.Core.Generic_fmt <> round_generic thm
R79080:79088 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R79096:79106 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R79058:79070 compcert.flocq.Core.Generic_fmt <> round_generic thm
R79058:79070 compcert.flocq.Core.Generic_fmt <> round_generic thm
R79058:79070 compcert.flocq.Core.Generic_fmt <> round_generic thm
R79058:79070 compcert.flocq.Core.Generic_fmt <> round_generic thm
R79080:79088 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R79096:79106 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R79126:79130 Coq.Init.Logic <> proj1 thm
R79145:79152 compcert.flocq.Core.Ulp <> ulp_ge_0 thm
R79126:79130 Coq.Init.Logic <> proj1 thm
R79126:79130 Coq.Init.Logic <> proj1 thm
R79145:79152 compcert.flocq.Core.Ulp <> ulp_ge_0 thm
R79181:79184 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R79176:79178 compcert.flocq.IEEE754.Binary <> B2R def
R79185:79187 compcert.flocq.IEEE754.Binary <> B2R def
R79181:79184 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R79176:79178 compcert.flocq.IEEE754.Binary <> B2R def
R79185:79187 compcert.flocq.IEEE754.Binary <> B2R def
R79218:79221 Coq.PArith.BinPos <> ::positive_scope:x_'=?'_x not
R79218:79221 Coq.PArith.BinPos <> ::positive_scope:x_'=?'_x not
R79250:79254 Coq.Init.Logic <> proj1 thm
R79250:79254 Coq.Init.Logic <> proj1 thm
R79250:79254 Coq.Init.Logic <> proj1 thm
R79279:79291 compcert.flocq.Core.Generic_fmt <> round_generic thm
R79306:79316 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R79279:79291 compcert.flocq.Core.Generic_fmt <> round_generic thm
R79279:79291 compcert.flocq.Core.Generic_fmt <> round_generic thm
R79279:79291 compcert.flocq.Core.Generic_fmt <> round_generic thm
R79279:79291 compcert.flocq.Core.Generic_fmt <> round_generic thm
R79306:79316 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R79343:79351 Coq.Reals.RIneq <> Rle_trans thm
R79356:79359 compcert.flocq.Core.Raux <> bpow def
R79382:79384 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79369:79371 compcert.flocq.Core.Raux <> mag def
R79373:79378 compcert.flocq.Core.Zaux <> radix2 def
R79361:79366 compcert.flocq.Core.Zaux <> radix2 def
R79343:79351 Coq.Reals.RIneq <> Rle_trans thm
R79356:79359 compcert.flocq.Core.Raux <> bpow def
R79382:79384 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79369:79371 compcert.flocq.Core.Raux <> mag def
R79373:79378 compcert.flocq.Core.Zaux <> radix2 def
R79361:79366 compcert.flocq.Core.Zaux <> radix2 def
R79405:79411 compcert.flocq.Core.Raux <> bpow_le thm
R79414:79422 Coq.ZArith.BinInt Z max_lub thm
R79405:79411 compcert.flocq.Core.Raux <> bpow_le thm
R79414:79422 Coq.ZArith.BinInt Z max_lub thm
R79442:79450 compcert.flocq.Core.FLX <> Prec_gt_0 class
R79489:79502 Coq.ZArith.Zorder <> Zplus_le_reg_r thm
R79489:79502 Coq.ZArith.Zorder <> Zplus_le_reg_r thm
R79543:79553 compcert.flocq.Core.Raux <> mag_ge_bpow thm
R79543:79553 compcert.flocq.Core.Raux <> mag_ge_bpow thm
R79576:79578 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79589:79592 compcert.flocq.IEEE754.Binary <> Binary.emin var
R79576:79578 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79589:79592 compcert.flocq.IEEE754.Binary <> Binary.emin var
R79633:79635 compcert.flocq.IEEE754.Binary <> B2R def
R79648:79662 compcert.flocq.IEEE754.Binary <> abs_B2R_ge_emin thm
R79633:79635 compcert.flocq.IEEE754.Binary <> B2R def
R79648:79662 compcert.flocq.IEEE754.Binary <> abs_B2R_ge_emin thm
R79684:79694 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R79684:79694 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R79684:79694 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R79731:79733 compcert.flocq.IEEE754.Binary <> B2R def
R79746:79756 compcert.flocq.Core.Raux <> bpow_mag_le thm
R79731:79733 compcert.flocq.IEEE754.Binary <> B2R def
R79731:79733 compcert.flocq.IEEE754.Binary <> B2R def
R79746:79756 compcert.flocq.Core.Raux <> bpow_mag_le thm
R79774:79778 Coq.Init.Logic <> proj1 thm
R79793:79801 compcert.flocq.Core.Ulp <> ulp_le_id thm
R79774:79778 Coq.Init.Logic <> proj1 thm
R79774:79778 Coq.Init.Logic <> proj1 thm
R79793:79801 compcert.flocq.Core.Ulp <> ulp_le_id thm
R79826:79829 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R79820:79822 compcert.flocq.IEEE754.Binary <> B2R def
R79826:79829 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R79820:79822 compcert.flocq.IEEE754.Binary <> B2R def
R79868:79885 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R79868:79885 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R80053:80055 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79904:79911 compcert.flocq.Core.Raux <> Rlt_bool def
R80036:80039 compcert.flocq.Core.Raux <> bpow def
R80048:80051 compcert.flocq.IEEE754.Binary <> Binary.emax var
R80041:80046 compcert.flocq.Core.Zaux <> radix2 def
R79926:79929 Coq.Reals.Rbasic_fun <> Rabs def
R79947:79951 compcert.flocq.Core.Generic_fmt <> round def
R80011:80013 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R80005:80007 compcert.flocq.IEEE754.Binary <> B2R def
R80014:80016 compcert.flocq.IEEE754.Binary <> B2R def
R79984:79993 compcert.flocq.IEEE754.Binary <> round_mode def
R79995:80001 compcert.flocq.IEEE754.Binary <> mode_NE constr
R79960:79963 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R79953:79958 compcert.flocq.Core.Zaux <> radix2 def
R80056:80059 Coq.Init.Datatypes <> true constr
R80053:80055 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79904:79911 compcert.flocq.Core.Raux <> Rlt_bool def
R80036:80039 compcert.flocq.Core.Raux <> bpow def
R80048:80051 compcert.flocq.IEEE754.Binary <> Binary.emax var
R80041:80046 compcert.flocq.Core.Zaux <> radix2 def
R79926:79929 Coq.Reals.Rbasic_fun <> Rabs def
R79947:79951 compcert.flocq.Core.Generic_fmt <> round def
R80011:80013 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R80005:80007 compcert.flocq.IEEE754.Binary <> B2R def
R80014:80016 compcert.flocq.IEEE754.Binary <> B2R def
R79984:79993 compcert.flocq.IEEE754.Binary <> round_mode def
R79995:80001 compcert.flocq.IEEE754.Binary <> mode_NE constr
R79960:79963 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R79953:79958 compcert.flocq.Core.Zaux <> radix2 def
R80056:80059 Coq.Init.Datatypes <> true constr
R80106:80118 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R80106:80118 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R80135:80146 compcert.flocq.Core.Round_NE <> round_NE_abs thm
R80161:80173 compcert.flocq.Core.FLT <> FLT_exp_valid inst
R80135:80146 compcert.flocq.Core.Round_NE <> round_NE_abs thm
R80135:80146 compcert.flocq.Core.Round_NE <> round_NE_abs thm
R80135:80146 compcert.flocq.Core.Round_NE <> round_NE_abs thm
R80161:80173 compcert.flocq.Core.FLT <> FLT_exp_valid inst
R80189:80199 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R80189:80199 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R80189:80199 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R80189:80199 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R80221:80232 Coq.Reals.RIneq <> Rle_lt_trans thm
R80237:80239 compcert.flocq.IEEE754.Binary <> B2R def
R80221:80232 Coq.Reals.RIneq <> Rle_lt_trans thm
R80237:80239 compcert.flocq.IEEE754.Binary <> B2R def
R80259:80274 compcert.flocq.Core.Generic_fmt <> round_le_generic thm
R80296:80308 compcert.flocq.Core.FLT <> FLT_exp_valid inst
R80320:80330 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R80259:80274 compcert.flocq.Core.Generic_fmt <> round_le_generic thm
R80296:80308 compcert.flocq.Core.FLT <> FLT_exp_valid inst
R80320:80330 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R80352:80369 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R80352:80369 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R80385:80396 Coq.Reals.RIneq <> Rle_lt_trans thm
R80405:80411 Coq.Reals.Rbasic_fun <> Rle_abs thm
R80418:80432 compcert.flocq.IEEE754.Binary <> abs_B2R_lt_emax thm
R80385:80396 Coq.Reals.RIneq <> Rle_lt_trans thm
R80405:80411 Coq.Reals.Rbasic_fun <> Rle_abs thm
R80418:80432 compcert.flocq.IEEE754.Binary <> abs_B2R_lt_emax thm
R80448:80452 Coq.Init.Logic <> proj1 thm
R80448:80452 Coq.Init.Logic <> proj1 thm
R80448:80452 Coq.Init.Logic <> proj1 thm
R80474:80478 Coq.Init.Logic <> proj1 thm
R80481:80485 Coq.Init.Logic <> proj2 thm
R80474:80478 Coq.Init.Logic <> proj1 thm
R80481:80485 Coq.Init.Logic <> proj2 thm
R80474:80478 Coq.Init.Logic <> proj1 thm
R80481:80485 Coq.Init.Logic <> proj2 thm
R80508:80512 Coq.Init.Logic <> proj2 thm
R80515:80519 Coq.Init.Logic <> proj2 thm
R80508:80512 Coq.Init.Logic <> proj2 thm
R80515:80519 Coq.Init.Logic <> proj2 thm
R80508:80512 Coq.Init.Logic <> proj2 thm
R80515:80519 Coq.Init.Logic <> proj2 thm
R80572:80584 compcert.flocq.Core.Raux <> Rcompare_spec thm
R80572:80584 compcert.flocq.Core.Raux <> Rcompare_spec thm
R80613:80620 compcert.flocq.Core.Ulp <> pred_pos def
R80634:80645 Coq.PArith.BinPos Pos eqb_spec thm
R80669:80681 compcert.flocq.Core.Raux <> Req_bool_spec thm
R80634:80645 Coq.PArith.BinPos Pos eqb_spec thm
R80669:80681 compcert.flocq.Core.Raux <> Req_bool_spec thm
R80669:80681 compcert.flocq.Core.Raux <> Req_bool_spec thm
R80715:80719 Coq.Init.Logic <> proj1 thm
R80715:80719 Coq.Init.Logic <> proj1 thm
R80715:80719 Coq.Init.Logic <> proj1 thm
R80743:80755 compcert.flocq.Core.Generic_fmt <> round_generic thm
R80743:80755 compcert.flocq.Core.Generic_fmt <> round_generic thm
R80743:80755 compcert.flocq.Core.Generic_fmt <> round_generic thm
R80795:80797 compcert.flocq.IEEE754.Binary <> B2R def
R80795:80797 compcert.flocq.IEEE754.Binary <> B2R def
R80795:80797 compcert.flocq.IEEE754.Binary <> B2R def
R80818:80820 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R80832:80839 compcert.flocq.Core.Ulp <> pred_pos def
R80854:80856 compcert.flocq.IEEE754.Binary <> B2R def
R80848:80851 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R80841:80846 compcert.flocq.Core.Zaux <> radix2 def
R80818:80820 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R80832:80839 compcert.flocq.Core.Ulp <> pred_pos def
R80854:80856 compcert.flocq.IEEE754.Binary <> B2R def
R80848:80851 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R80841:80846 compcert.flocq.Core.Zaux <> radix2 def
R80878:80890 compcert.flocq.Core.Generic_fmt <> round_generic thm
R80916:80926 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R80878:80890 compcert.flocq.Core.Generic_fmt <> round_generic thm
R80878:80890 compcert.flocq.Core.Generic_fmt <> round_generic thm
R80878:80890 compcert.flocq.Core.Generic_fmt <> round_generic thm
R80878:80890 compcert.flocq.Core.Generic_fmt <> round_generic thm
R80916:80926 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R80943:80965 compcert.flocq.Core.Ulp <> generic_format_pred_pos thm
R80987:80999 compcert.flocq.Core.FLT <> FLT_exp_valid inst
R81007:81024 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R80943:80965 compcert.flocq.Core.Ulp <> generic_format_pred_pos thm
R80987:80999 compcert.flocq.Core.FLT <> FLT_exp_valid inst
R81007:81024 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R81051:81053 compcert.flocq.IEEE754.Binary <> B2R def
R81051:81053 compcert.flocq.IEEE754.Binary <> B2R def
R81090:81097 compcert.flocq.Core.Ulp <> pred_pos def
R81108:81120 compcert.flocq.Core.Raux <> Req_bool_true thm
R81108:81120 compcert.flocq.Core.Raux <> Req_bool_true thm
R81108:81120 compcert.flocq.Core.Raux <> Req_bool_true thm
R81108:81120 compcert.flocq.Core.Raux <> Req_bool_true thm
R81181:81183 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81167:81169 Coq.Reals.Rdefinitions <> IZR def
R81172:81176 Coq.ZArith.BinInt Z pos syndef
R81184:81187 compcert.flocq.Core.Raux <> bpow def
R81201:81203 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81197:81200 compcert.flocq.IEEE754.Binary <> Binary.prec var
R81189:81194 compcert.flocq.Core.Zaux <> radix2 def
R81181:81183 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81167:81169 Coq.Reals.Rdefinitions <> IZR def
R81172:81176 Coq.ZArith.BinInt Z pos syndef
R81184:81187 compcert.flocq.Core.Raux <> bpow def
R81201:81203 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81197:81200 compcert.flocq.IEEE754.Binary <> Binary.prec var
R81189:81194 compcert.flocq.Core.Zaux <> radix2 def
R81222:81235 Coq.Reals.RIneq <> Rmult_eq_reg_l thm
R81259:81266 Coq.Reals.RIneq <> mult_IZR thm
R81222:81235 Coq.Reals.RIneq <> Rmult_eq_reg_l thm
R81259:81266 Coq.Reals.RIneq <> mult_IZR thm
R81259:81266 Coq.Reals.RIneq <> mult_IZR thm
R81284:81286 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R81287:81291 Coq.ZArith.BinInt Z pos syndef
R81305:81309 Coq.ZArith.BinInt Z pos syndef
R81313:81314 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R81284:81286 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R81287:81291 Coq.ZArith.BinInt Z pos syndef
R81305:81309 Coq.ZArith.BinInt Z pos syndef
R81313:81314 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R81344:81360 Coq.ZArith.Zpower <> shift_pos_correct thm
R81363:81371 Coq.ZArith.BinInt Z mul_1_r thm
R81344:81360 Coq.ZArith.Zpower <> shift_pos_correct thm
R81344:81360 Coq.ZArith.Zpower <> shift_pos_correct thm
R81363:81371 Coq.ZArith.BinInt Z mul_1_r thm
R81363:81371 Coq.ZArith.BinInt Z mul_1_r thm
R81388:81390 Coq.Reals.Rdefinitions <> IZR def
R81393:81401 Coq.ZArith.BinInt Z pow_pos def
R81415:81418 compcert.flocq.Core.Raux <> bpow def
R81428:81432 Coq.ZArith.BinInt Z pos syndef
R81435:81442 Coq.ZArith.BinInt Z to_pos def
R81444:81447 compcert.flocq.IEEE754.Binary <> Binary.prec var
R81420:81425 compcert.flocq.Core.Zaux <> radix2 def
R81388:81390 Coq.Reals.Rdefinitions <> IZR def
R81393:81401 Coq.ZArith.BinInt Z pow_pos def
R81415:81418 compcert.flocq.Core.Raux <> bpow def
R81428:81432 Coq.ZArith.BinInt Z pos syndef
R81435:81442 Coq.ZArith.BinInt Z to_pos def
R81444:81447 compcert.flocq.IEEE754.Binary <> Binary.prec var
R81420:81425 compcert.flocq.Core.Zaux <> radix2 def
R81467:81474 Coq.ZArith.BinInt Z2Pos id thm
R81485:81494 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R81467:81474 Coq.ZArith.BinInt Z2Pos id thm
R81467:81474 Coq.ZArith.BinInt Z2Pos id thm
R81467:81474 Coq.ZArith.BinInt Z2Pos id thm
R81485:81494 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R81521:81524 compcert.flocq.Core.Raux <> bpow def
R81526:81531 compcert.flocq.Core.Zaux <> radix2 def
R81547:81555 compcert.flocq.Core.Raux <> bpow_plus thm
R81521:81524 compcert.flocq.Core.Raux <> bpow def
R81526:81531 compcert.flocq.Core.Zaux <> radix2 def
R81547:81555 compcert.flocq.Core.Raux <> bpow_plus thm
R81547:81555 compcert.flocq.Core.Raux <> bpow_plus thm
R81608:81610 compcert.flocq.IEEE754.Binary <> B2R def
R81625:81627 compcert.flocq.Core.Defs <> F2R def
R81656:81664 compcert.flocq.Core.Raux <> bpow_plus thm
R81656:81664 compcert.flocq.Core.Raux <> bpow_plus thm
R81656:81664 compcert.flocq.Core.Raux <> bpow_plus thm
R81687:81697 Coq.ZArith.BinInt Z add_reg_l thm
R81734:81747 compcert.flocq.Core.Raux <> mag_unique_pos thm
R81687:81697 Coq.ZArith.BinInt Z add_reg_l thm
R81734:81747 compcert.flocq.Core.Raux <> mag_unique_pos thm
R81761:81763 compcert.flocq.Core.Defs <> F2R def
R81788:81796 compcert.flocq.Core.Raux <> bpow_plus thm
R81788:81796 compcert.flocq.Core.Raux <> bpow_plus thm
R81788:81796 compcert.flocq.Core.Raux <> bpow_plus thm
R81846:81852 compcert.flocq.Core.Raux <> bpow_lt thm
R81846:81852 compcert.flocq.Core.Raux <> bpow_lt thm
R81873:81877 Coq.Init.Logic <> proj1 thm
R81873:81877 Coq.Init.Logic <> proj1 thm
R81873:81877 Coq.Init.Logic <> proj1 thm
R81926:81944 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81902:81904 compcert.flocq.Core.Ulp <> ulp def
R81919:81921 compcert.flocq.IEEE754.Binary <> B2R def
R81913:81916 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R81906:81911 compcert.flocq.Core.Zaux <> radix2 def
R81945:81948 compcert.flocq.Core.Raux <> bpow def
R81958:81961 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R81983:81985 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81964:81966 compcert.flocq.Core.Raux <> mag def
R81976:81978 compcert.flocq.IEEE754.Binary <> B2R def
R81968:81973 compcert.flocq.Core.Zaux <> radix2 def
R81950:81955 compcert.flocq.Core.Zaux <> radix2 def
R81926:81944 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81902:81904 compcert.flocq.Core.Ulp <> ulp def
R81919:81921 compcert.flocq.IEEE754.Binary <> B2R def
R81913:81916 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R81906:81911 compcert.flocq.Core.Zaux <> radix2 def
R81945:81948 compcert.flocq.Core.Raux <> bpow def
R81958:81961 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R81983:81985 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81964:81966 compcert.flocq.Core.Raux <> mag def
R81976:81978 compcert.flocq.IEEE754.Binary <> B2R def
R81968:81973 compcert.flocq.Core.Zaux <> radix2 def
R81950:81955 compcert.flocq.Core.Zaux <> radix2 def
R82034:82036 compcert.flocq.Core.Ulp <> ulp def
R82047:82060 compcert.flocq.Core.Raux <> Req_bool_false thm
R82047:82060 compcert.flocq.Core.Raux <> Req_bool_false thm
R82047:82060 compcert.flocq.Core.Raux <> Req_bool_false thm
R82047:82060 compcert.flocq.Core.Raux <> Req_bool_false thm
R82090:82093 compcert.flocq.Core.Generic_fmt <> cexp def
R82143:82146 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R82124:82126 compcert.flocq.Core.Raux <> mag def
R82136:82138 compcert.flocq.IEEE754.Binary <> B2R def
R82128:82133 compcert.flocq.Core.Zaux <> radix2 def
R82151:82153 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R82147:82150 compcert.flocq.IEEE754.Binary <> Binary.emin var
R82154:82157 compcert.flocq.IEEE754.Binary <> Binary.prec var
R82143:82146 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R82124:82126 compcert.flocq.Core.Raux <> mag def
R82136:82138 compcert.flocq.IEEE754.Binary <> B2R def
R82128:82133 compcert.flocq.Core.Zaux <> radix2 def
R82151:82153 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R82147:82150 compcert.flocq.IEEE754.Binary <> Binary.emin var
R82154:82157 compcert.flocq.IEEE754.Binary <> Binary.prec var
R82210:82212 Coq.Init.Logic <> ::type_scope:x_'='_x not
R82186:82203 compcert.flocq.IEEE754.Binary <> canonical_mantissa def
R82213:82216 Coq.Init.Datatypes <> true constr
R82210:82212 Coq.Init.Logic <> ::type_scope:x_'='_x not
R82186:82203 compcert.flocq.IEEE754.Binary <> canonical_mantissa def
R82213:82216 Coq.Init.Datatypes <> true constr
R82258:82264 compcert.flocq.IEEE754.Binary <> bounded def
R82275:82292 Coq.Bool.Bool <> andb_true_iff thm
R82275:82292 Coq.Bool.Bool <> andb_true_iff thm
R82275:82292 Coq.Bool.Bool <> andb_true_iff thm
R82312:82339 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R82341:82345 Coq.Init.Datatypes <> false constr
R82312:82339 compcert.flocq.IEEE754.Binary <> canonical_canonical_mantissa thm
R82341:82345 Coq.Init.Datatypes <> false constr
R82381:82384 compcert.flocq.IEEE754.Binary <> Binary.emin var
R82394:82402 compcert.flocq.Core.Generic_fmt <> canonical def
R82405:82408 compcert.flocq.Core.Generic_fmt <> cexp def
R82381:82384 compcert.flocq.IEEE754.Binary <> Binary.emin var
R82434:82436 compcert.flocq.Core.Defs <> F2R def
R82447:82449 compcert.flocq.IEEE754.Binary <> B2R def
R82434:82436 compcert.flocq.Core.Defs <> F2R def
R82447:82449 compcert.flocq.IEEE754.Binary <> B2R def
R82447:82449 compcert.flocq.IEEE754.Binary <> B2R def
R82447:82449 compcert.flocq.IEEE754.Binary <> B2R def
R82447:82449 compcert.flocq.IEEE754.Binary <> B2R def
R82481:82488 Coq.ZArith.BinInt Z nlt_ge thm
R82481:82488 Coq.ZArith.BinInt Z nlt_ge thm
R82525:82537 Coq.ZArith.BinInt Pos2Z inj_pos thm
R82548:82564 Coq.ZArith.Zpower <> shift_pos_correct thm
R82567:82575 Coq.ZArith.BinInt Z mul_1_r thm
R82525:82537 Coq.ZArith.BinInt Pos2Z inj_pos thm
R82548:82564 Coq.ZArith.Zpower <> shift_pos_correct thm
R82548:82564 Coq.ZArith.Zpower <> shift_pos_correct thm
R82567:82575 Coq.ZArith.BinInt Z mul_1_r thm
R82567:82575 Coq.ZArith.BinInt Z mul_1_r thm
R82592:82597 Coq.Reals.RIneq <> eq_IZR thm
R82608:82610 Coq.Reals.Rdefinitions <> IZR def
R82613:82621 Coq.ZArith.BinInt Z pow_pos def
R82645:82648 compcert.flocq.Core.Raux <> bpow def
R82658:82662 Coq.ZArith.BinInt Z pos syndef
R82665:82672 Coq.ZArith.BinInt Z to_pos def
R82674:82677 compcert.flocq.IEEE754.Binary <> Binary.prec var
R82650:82655 compcert.flocq.Core.Zaux <> radix2 def
R82592:82597 Coq.Reals.RIneq <> eq_IZR thm
R82608:82610 Coq.Reals.Rdefinitions <> IZR def
R82613:82621 Coq.ZArith.BinInt Z pow_pos def
R82645:82648 compcert.flocq.Core.Raux <> bpow def
R82658:82662 Coq.ZArith.BinInt Z pos syndef
R82665:82672 Coq.ZArith.BinInt Z to_pos def
R82674:82677 compcert.flocq.IEEE754.Binary <> Binary.prec var
R82650:82655 compcert.flocq.Core.Zaux <> radix2 def
R82699:82706 Coq.ZArith.BinInt Z2Pos id thm
R82717:82726 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R82699:82706 Coq.ZArith.BinInt Z2Pos id thm
R82699:82706 Coq.ZArith.BinInt Z2Pos id thm
R82699:82706 Coq.ZArith.BinInt Z2Pos id thm
R82717:82726 compcert.flocq.IEEE754.Binary <> Binary.prec_gt_0_ var
R82746:82750 Coq.ZArith.BinInt Z pos syndef
R82754:82755 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R82765:82767 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R82768:82772 Coq.ZArith.BinInt Z pos syndef
R82746:82750 Coq.ZArith.BinInt Z pos syndef
R82754:82755 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R82765:82767 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R82768:82772 Coq.ZArith.BinInt Z pos syndef
R82797:82806 Coq.ZArith.BinInt Z mul_comm thm
R82809:82816 Coq.Reals.RIneq <> mult_IZR thm
R82797:82806 Coq.ZArith.BinInt Z mul_comm thm
R82797:82806 Coq.ZArith.BinInt Z mul_comm thm
R82809:82816 Coq.Reals.RIneq <> mult_IZR thm
R82809:82816 Coq.Reals.RIneq <> mult_IZR thm
R82834:82847 Coq.Reals.RIneq <> Rmult_eq_reg_r thm
R82850:82853 compcert.flocq.Core.Raux <> bpow def
R82865:82867 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82855:82860 compcert.flocq.Core.Zaux <> radix2 def
R82892:82901 Coq.Reals.RIneq <> Rgt_not_eq thm
R82904:82912 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R82834:82847 Coq.Reals.RIneq <> Rmult_eq_reg_r thm
R82850:82853 compcert.flocq.Core.Raux <> bpow def
R82865:82867 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82855:82860 compcert.flocq.Core.Zaux <> radix2 def
R82892:82901 Coq.Reals.RIneq <> Rgt_not_eq thm
R82904:82912 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R82941:82944 compcert.flocq.Core.Raux <> bpow def
R82946:82951 compcert.flocq.Core.Zaux <> radix2 def
R82965:82975 Coq.Reals.Raxioms <> Rmult_assoc prfax
R82981:82989 compcert.flocq.Core.Raux <> bpow_plus thm
R82941:82944 compcert.flocq.Core.Raux <> bpow def
R82946:82951 compcert.flocq.Core.Zaux <> radix2 def
R82965:82975 Coq.Reals.Raxioms <> Rmult_assoc prfax
R82965:82975 Coq.Reals.Raxioms <> Rmult_assoc prfax
R82981:82989 compcert.flocq.Core.Raux <> bpow_plus thm
R82981:82989 compcert.flocq.Core.Raux <> bpow_plus thm
R82981:82989 compcert.flocq.Core.Raux <> bpow_plus thm
R82981:82989 compcert.flocq.Core.Raux <> bpow_plus thm
R83010:83012 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R83010:83012 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R83050:83052 compcert.flocq.IEEE754.Binary <> B2R def
R83060:83062 compcert.flocq.Core.Defs <> F2R def
R83121:83123 compcert.flocq.Core.Defs <> F2R def
R83134:83136 compcert.flocq.IEEE754.Binary <> B2R def
R83121:83123 compcert.flocq.Core.Defs <> F2R def
R83134:83136 compcert.flocq.IEEE754.Binary <> B2R def
R83134:83136 compcert.flocq.IEEE754.Binary <> B2R def
R83171:83174 compcert.flocq.IEEE754.Binary <> fexp vardef
R83177:83183 compcert.flocq.Core.FLT <> FLT_exp def
R83194:83200 Coq.ZArith.BinInt Z max_l thm
R83194:83200 Coq.ZArith.BinInt Z max_l thm
R83194:83200 Coq.ZArith.BinInt Z max_l thm
R83194:83200 Coq.ZArith.BinInt Z max_l thm
R83243:83246 compcert.flocq.IEEE754.Binary <> fexp vardef
R83249:83255 compcert.flocq.Core.FLT <> FLT_exp def
R83272:83278 Coq.ZArith.BinInt Z max_r thm
R83272:83278 Coq.ZArith.BinInt Z max_r thm
R83272:83278 Coq.ZArith.BinInt Z max_r thm
R83272:83278 Coq.ZArith.BinInt Z max_r thm
R83272:83278 Coq.ZArith.BinInt Z max_r thm
R83272:83278 Coq.ZArith.BinInt Z max_r thm
R83272:83278 Coq.ZArith.BinInt Z max_r thm
R83306:83308 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R83320:83327 compcert.flocq.Core.Ulp <> pred_pos def
R83342:83344 compcert.flocq.IEEE754.Binary <> B2R def
R83336:83339 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R83329:83334 compcert.flocq.Core.Zaux <> radix2 def
R83306:83308 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R83320:83327 compcert.flocq.Core.Ulp <> pred_pos def
R83342:83344 compcert.flocq.IEEE754.Binary <> B2R def
R83336:83339 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R83329:83334 compcert.flocq.Core.Zaux <> radix2 def
R83366:83378 compcert.flocq.Core.Generic_fmt <> round_generic thm
R83400:83410 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R83366:83378 compcert.flocq.Core.Generic_fmt <> round_generic thm
R83366:83378 compcert.flocq.Core.Generic_fmt <> round_generic thm
R83366:83378 compcert.flocq.Core.Generic_fmt <> round_generic thm
R83366:83378 compcert.flocq.Core.Generic_fmt <> round_generic thm
R83400:83410 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R83427:83449 compcert.flocq.Core.Ulp <> generic_format_pred_pos thm
R83471:83483 compcert.flocq.Core.FLT <> FLT_exp_valid inst
R83503:83505 compcert.flocq.IEEE754.Binary <> B2R def
R83427:83449 compcert.flocq.Core.Ulp <> generic_format_pred_pos thm
R83471:83483 compcert.flocq.Core.FLT <> FLT_exp_valid inst
R83503:83505 compcert.flocq.IEEE754.Binary <> B2R def
R83538:83555 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R83538:83555 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R83575:83582 compcert.flocq.Core.Ulp <> pred_pos def
R83593:83605 compcert.flocq.Core.Raux <> Req_bool_true thm
R83593:83605 compcert.flocq.Core.Raux <> Req_bool_true thm
R83593:83605 compcert.flocq.Core.Raux <> Req_bool_true thm
R83593:83605 compcert.flocq.Core.Raux <> Req_bool_true thm
R83621:83625 Coq.Init.Logic <> proj1 thm
R83621:83625 Coq.Init.Logic <> proj1 thm
R83621:83625 Coq.Init.Logic <> proj1 thm
R83648:83650 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R83662:83669 compcert.flocq.Core.Ulp <> pred_pos def
R83684:83686 compcert.flocq.IEEE754.Binary <> B2R def
R83678:83681 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R83671:83676 compcert.flocq.Core.Zaux <> radix2 def
R83648:83650 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R83662:83669 compcert.flocq.Core.Ulp <> pred_pos def
R83684:83686 compcert.flocq.IEEE754.Binary <> B2R def
R83678:83681 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R83671:83676 compcert.flocq.Core.Zaux <> radix2 def
R83708:83720 compcert.flocq.Core.Generic_fmt <> round_generic thm
R83746:83756 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R83708:83720 compcert.flocq.Core.Generic_fmt <> round_generic thm
R83708:83720 compcert.flocq.Core.Generic_fmt <> round_generic thm
R83708:83720 compcert.flocq.Core.Generic_fmt <> round_generic thm
R83708:83720 compcert.flocq.Core.Generic_fmt <> round_generic thm
R83746:83756 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R83773:83795 compcert.flocq.Core.Ulp <> generic_format_pred_pos thm
R83817:83829 compcert.flocq.Core.FLT <> FLT_exp_valid inst
R83837:83854 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R83773:83795 compcert.flocq.Core.Ulp <> generic_format_pred_pos thm
R83817:83829 compcert.flocq.Core.FLT <> FLT_exp_valid inst
R83837:83854 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R83881:83883 compcert.flocq.IEEE754.Binary <> B2R def
R83881:83883 compcert.flocq.IEEE754.Binary <> B2R def
R83920:83927 compcert.flocq.Core.Ulp <> pred_pos def
R83938:83951 compcert.flocq.Core.Raux <> Req_bool_false thm
R83938:83951 compcert.flocq.Core.Raux <> Req_bool_false thm
R83938:83951 compcert.flocq.Core.Raux <> Req_bool_false thm
R83938:83951 compcert.flocq.Core.Raux <> Req_bool_false thm
def 83971:83975 <> Bsucc
R83999:83999 compcert.flocq.IEEE754.Binary <> x var
R84010:84018 compcert.flocq.IEEE754.Binary <> B754_zero constr
R84025:84030 compcert.flocq.IEEE754.Binary <> Bldexp def
R84045:84048 compcert.flocq.IEEE754.Binary <> Binary.emin var
R84040:84043 compcert.flocq.IEEE754.Binary <> Bone def
R84032:84038 compcert.flocq.IEEE754.Binary <> mode_NE constr
R84054:84066 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R84068:84072 Coq.Init.Datatypes <> false constr
R84077:84077 compcert.flocq.IEEE754.Binary <> x var
R84083:84095 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R84097:84100 Coq.Init.Datatypes <> true constr
R84105:84108 compcert.flocq.IEEE754.Binary <> Bopp def
R84119:84128 compcert.flocq.IEEE754.Binary <> Bmax_float def
R84110:84117 compcert.flocq.IEEE754.Binary <> succ_nan var
R84134:84141 compcert.flocq.IEEE754.Binary <> B754_nan constr
R84152:84160 compcert.flocq.IEEE754.Binary <> build_nan def
R84163:84170 compcert.flocq.IEEE754.Binary <> succ_nan var
R84172:84172 compcert.flocq.IEEE754.Binary <> x var
R84179:84189 compcert.flocq.IEEE754.Binary <> B754_finite constr
R84191:84195 Coq.Init.Datatypes <> false constr
R84210:84214 compcert.flocq.IEEE754.Binary <> Bplus def
R84247:84250 compcert.flocq.IEEE754.Binary <> Bulp def
R84252:84252 compcert.flocq.IEEE754.Binary <> x var
R84244:84244 compcert.flocq.IEEE754.Binary <> x var
R84236:84242 compcert.flocq.IEEE754.Binary <> mode_NE constr
R84226:84233 compcert.flocq.IEEE754.Binary <> succ_nan var
R84259:84269 compcert.flocq.IEEE754.Binary <> B754_finite constr
R84271:84274 Coq.Init.Datatypes <> true constr
R84289:84292 compcert.flocq.IEEE754.Binary <> Bopp def
R84304:84312 compcert.flocq.IEEE754.Binary <> Bpred_pos def
R84324:84327 compcert.flocq.IEEE754.Binary <> Bopp def
R84338:84338 compcert.flocq.IEEE754.Binary <> x var
R84329:84336 compcert.flocq.IEEE754.Binary <> succ_nan var
R84314:84321 compcert.flocq.IEEE754.Binary <> succ_nan var
R84294:84301 compcert.flocq.IEEE754.Binary <> succ_nan var
prf 84356:84368 <> Bsucc_correct
R84413:84418 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R84422:84429 compcert.flocq.Core.Raux <> Rlt_bool def
R84459:84462 compcert.flocq.Core.Raux <> bpow def
R84471:84474 compcert.flocq.IEEE754.Binary <> Binary.emax var
R84464:84469 compcert.flocq.Core.Zaux <> radix2 def
R84432:84435 compcert.flocq.Core.Ulp <> succ def
R84450:84452 compcert.flocq.IEEE754.Binary <> B2R def
R84454:84454 compcert.flocq.IEEE754.Binary <> x var
R84444:84447 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R84437:84442 compcert.flocq.Core.Zaux <> radix2 def
R84684:84686 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84661:84664 compcert.flocq.IEEE754.Binary <> B2FF def
R84667:84671 compcert.flocq.IEEE754.Binary <> Bsucc def
R84682:84682 compcert.flocq.IEEE754.Binary <> x var
R84673:84680 compcert.flocq.IEEE754.Binary <> succ_nan var
R84687:84699 compcert.flocq.IEEE754.Binary <> F754_infinity constr
R84701:84705 Coq.Init.Datatypes <> false constr
R84535:84542 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R84508:84510 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84486:84488 compcert.flocq.IEEE754.Binary <> B2R def
R84491:84495 compcert.flocq.IEEE754.Binary <> Bsucc def
R84506:84506 compcert.flocq.IEEE754.Binary <> x var
R84497:84504 compcert.flocq.IEEE754.Binary <> succ_nan var
R84511:84514 compcert.flocq.Core.Ulp <> succ def
R84529:84531 compcert.flocq.IEEE754.Binary <> B2R def
R84533:84533 compcert.flocq.IEEE754.Binary <> x var
R84523:84526 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R84516:84521 compcert.flocq.Core.Zaux <> radix2 def
R84578:84585 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R84571:84573 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84543:84551 compcert.flocq.IEEE754.Binary <> is_finite def
R84554:84558 compcert.flocq.IEEE754.Binary <> Bsucc def
R84569:84569 compcert.flocq.IEEE754.Binary <> x var
R84560:84567 compcert.flocq.IEEE754.Binary <> succ_nan var
R84574:84577 Coq.Init.Datatypes <> true constr
R84611:84613 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84587:84591 compcert.flocq.IEEE754.Binary <> Bsign def
R84594:84598 compcert.flocq.IEEE754.Binary <> Bsucc def
R84609:84609 compcert.flocq.IEEE754.Binary <> x var
R84600:84607 compcert.flocq.IEEE754.Binary <> succ_nan var
R84621:84624 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R84614:84618 compcert.flocq.IEEE754.Binary <> Bsign def
R84620:84620 compcert.flocq.IEEE754.Binary <> x var
R84625:84640 compcert.flocq.IEEE754.Binary <> is_finite_strict def
R84642:84642 compcert.flocq.IEEE754.Binary <> x var
R84406:84408 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84395:84403 compcert.flocq.IEEE754.Binary <> is_finite def
R84405:84405 compcert.flocq.IEEE754.Binary <> x var
R84409:84412 Coq.Init.Datatypes <> true constr
R84749:84751 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84731:84734 compcert.flocq.Core.Ulp <> succ def
R84743:84746 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R84736:84741 compcert.flocq.Core.Zaux <> radix2 def
R84752:84755 compcert.flocq.Core.Raux <> bpow def
R84764:84767 compcert.flocq.IEEE754.Binary <> Binary.emin var
R84757:84762 compcert.flocq.Core.Zaux <> radix2 def
R84749:84751 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84731:84734 compcert.flocq.Core.Ulp <> succ def
R84743:84746 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R84736:84741 compcert.flocq.Core.Zaux <> radix2 def
R84752:84755 compcert.flocq.Core.Raux <> bpow def
R84764:84767 compcert.flocq.IEEE754.Binary <> Binary.emin var
R84757:84762 compcert.flocq.Core.Zaux <> radix2 def
R84780:84783 compcert.flocq.Core.Ulp <> succ def
R84794:84806 compcert.flocq.Core.Raux <> Rle_bool_true thm
R84831:84839 Coq.Reals.Raxioms <> Rplus_0_l prfax
R84794:84806 compcert.flocq.Core.Raux <> Rle_bool_true thm
R84794:84806 compcert.flocq.Core.Raux <> Rle_bool_true thm
R84794:84806 compcert.flocq.Core.Raux <> Rle_bool_true thm
R84831:84839 Coq.Reals.Raxioms <> Rplus_0_l prfax
R84831:84839 Coq.Reals.Raxioms <> Rplus_0_l prfax
R84851:84853 compcert.flocq.Core.Ulp <> ulp def
R84864:84876 compcert.flocq.Core.Raux <> Req_bool_true thm
R84864:84876 compcert.flocq.Core.Raux <> Req_bool_true thm
R84864:84876 compcert.flocq.Core.Raux <> Req_bool_true thm
R84864:84876 compcert.flocq.Core.Raux <> Req_bool_true thm
R84905:84922 compcert.flocq.Core.FLT <> negligible_exp_FLT thm
R84929:84932 compcert.flocq.IEEE754.Binary <> Binary.prec var
R84924:84927 compcert.flocq.IEEE754.Binary <> Binary.emin var
R84905:84922 compcert.flocq.Core.FLT <> negligible_exp_FLT thm
R84929:84932 compcert.flocq.IEEE754.Binary <> Binary.prec var
R84924:84927 compcert.flocq.IEEE754.Binary <> Binary.emin var
R84967:84970 compcert.flocq.IEEE754.Binary <> fexp vardef
R84993:84999 compcert.flocq.Core.FLT <> FLT_exp def
R85010:85016 Coq.ZArith.BinInt Z max_r thm
R85032:85040 compcert.flocq.Core.FLX <> Prec_gt_0 class
R85010:85016 Coq.ZArith.BinInt Z max_r thm
R85010:85016 Coq.ZArith.BinInt Z max_r thm
R85010:85016 Coq.ZArith.BinInt Z max_r thm
R85153:85166 compcert.flocq.IEEE754.Binary <> Bldexp_correct thm
R85181:85184 compcert.flocq.IEEE754.Binary <> Binary.emin var
R85176:85179 compcert.flocq.IEEE754.Binary <> Bone def
R85168:85174 compcert.flocq.IEEE754.Binary <> mode_NE constr
R85195:85199 compcert.flocq.IEEE754.Binary <> Bsucc def
R85153:85166 compcert.flocq.IEEE754.Binary <> Bldexp_correct thm
R85181:85184 compcert.flocq.IEEE754.Binary <> Binary.emin var
R85176:85179 compcert.flocq.IEEE754.Binary <> Bone def
R85168:85174 compcert.flocq.IEEE754.Binary <> mode_NE constr
R85274:85295 Coq.Init.Logic <> ::type_scope:x_'='_x not
R85228:85232 compcert.flocq.Core.Generic_fmt <> round def
R85257:85260 compcert.flocq.Core.Raux <> bpow def
R85269:85272 compcert.flocq.IEEE754.Binary <> Binary.emin var
R85262:85267 compcert.flocq.Core.Zaux <> radix2 def
R85246:85254 compcert.flocq.Core.Round_NE <> ZnearestE syndef
R85241:85244 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R85234:85239 compcert.flocq.Core.Zaux <> radix2 def
R85296:85299 compcert.flocq.Core.Raux <> bpow def
R85308:85311 compcert.flocq.IEEE754.Binary <> Binary.emin var
R85301:85306 compcert.flocq.Core.Zaux <> radix2 def
R85274:85295 Coq.Init.Logic <> ::type_scope:x_'='_x not
R85228:85232 compcert.flocq.Core.Generic_fmt <> round def
R85257:85260 compcert.flocq.Core.Raux <> bpow def
R85269:85272 compcert.flocq.IEEE754.Binary <> Binary.emin var
R85262:85267 compcert.flocq.Core.Zaux <> radix2 def
R85246:85254 compcert.flocq.Core.Round_NE <> ZnearestE syndef
R85241:85244 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R85234:85239 compcert.flocq.Core.Zaux <> radix2 def
R85296:85299 compcert.flocq.Core.Raux <> bpow def
R85308:85311 compcert.flocq.IEEE754.Binary <> Binary.emin var
R85301:85306 compcert.flocq.Core.Zaux <> radix2 def
R85327:85339 compcert.flocq.Core.Generic_fmt <> round_generic thm
R85361:85371 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R85327:85339 compcert.flocq.Core.Generic_fmt <> round_generic thm
R85327:85339 compcert.flocq.Core.Generic_fmt <> round_generic thm
R85327:85339 compcert.flocq.Core.Generic_fmt <> round_generic thm
R85327:85339 compcert.flocq.Core.Generic_fmt <> round_generic thm
R85361:85371 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R85386:85404 compcert.flocq.Core.Generic_fmt <> generic_format_bpow thm
R85386:85404 compcert.flocq.Core.Generic_fmt <> generic_format_bpow thm
R85418:85421 compcert.flocq.IEEE754.Binary <> fexp vardef
R85424:85430 compcert.flocq.Core.FLT <> FLT_exp def
R85441:85447 Coq.ZArith.BinInt Z max_r thm
R85441:85447 Coq.ZArith.BinInt Z max_r thm
R85441:85447 Coq.ZArith.BinInt Z max_r thm
R85441:85447 Coq.ZArith.BinInt Z max_r thm
R85475:85483 compcert.flocq.Core.FLX <> Prec_gt_0 class
R85524:85536 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R85524:85536 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R85524:85536 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R85524:85536 compcert.flocq.Core.Raux <> Rlt_bool_true thm
R85598:85609 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R85612:85620 Coq.Reals.Raxioms <> Rmult_1_l prfax
R85623:85636 compcert.flocq.IEEE754.Binary <> is_finite_Bone thm
R85639:85648 compcert.flocq.IEEE754.Binary <> Bsign_Bone thm
R85598:85609 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R85598:85609 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R85612:85620 Coq.Reals.Raxioms <> Rmult_1_l prfax
R85612:85620 Coq.Reals.Raxioms <> Rmult_1_l prfax
R85623:85636 compcert.flocq.IEEE754.Binary <> is_finite_Bone thm
R85623:85636 compcert.flocq.IEEE754.Binary <> is_finite_Bone thm
R85639:85648 compcert.flocq.IEEE754.Binary <> Bsign_Bone thm
R85639:85648 compcert.flocq.IEEE754.Binary <> Bsign_Bone thm
R85660:85672 compcert.flocq.Core.Raux <> Rlt_bool_spec thm
R85660:85672 compcert.flocq.Core.Raux <> Rlt_bool_spec thm
R85706:85722 Coq.Bool.Bool <> andb_false_r thm
R85706:85722 Coq.Bool.Bool <> andb_false_r thm
R85706:85722 Coq.Bool.Bool <> andb_false_r thm
R85760:85769 Coq.Reals.RIneq <> Rlt_not_le thm
R85772:85778 compcert.flocq.Core.Raux <> bpow_lt thm
R85760:85769 Coq.Reals.RIneq <> Rlt_not_le thm
R85772:85778 compcert.flocq.Core.Raux <> bpow_lt thm
R85794:85797 compcert.flocq.IEEE754.Binary <> emin vardef
R85807:85815 compcert.flocq.Core.FLX <> Prec_gt_0 class
R85849:85860 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R85863:85871 Coq.Reals.Raxioms <> Rmult_1_l prfax
R85882:85892 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R85903:85911 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R85849:85860 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R85849:85860 compcert.flocq.IEEE754.Binary <> Bone_correct thm
R85863:85871 Coq.Reals.Raxioms <> Rmult_1_l prfax
R85863:85871 Coq.Reals.Raxioms <> Rmult_1_l prfax
R85882:85892 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R85882:85892 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R85882:85892 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R85903:85911 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R85925:85931 compcert.flocq.Core.Raux <> bpow_lt thm
R85941:85944 compcert.flocq.IEEE754.Binary <> emin vardef
R85954:85962 compcert.flocq.Core.FLX <> Prec_gt_0 class
R85925:85931 compcert.flocq.Core.Raux <> bpow_lt thm
R85993:85997 compcert.flocq.IEEE754.Binary <> Bsucc def
R86018:86030 compcert.flocq.Core.Raux <> Rlt_bool_spec thm
R86018:86030 compcert.flocq.Core.Raux <> Rlt_bool_spec thm
R86060:86067 compcert.flocq.IEEE754.Binary <> B2R_Bopp thm
R86077:86080 compcert.flocq.IEEE754.Binary <> Bopp def
R86085:86095 compcert.flocq.IEEE754.Binary <> B754_finite constr
R86060:86067 compcert.flocq.IEEE754.Binary <> B2R_Bopp thm
R86060:86067 compcert.flocq.IEEE754.Binary <> B2R_Bopp thm
R86077:86080 compcert.flocq.IEEE754.Binary <> Bopp def
R86085:86095 compcert.flocq.IEEE754.Binary <> B754_finite constr
R86122:86135 compcert.flocq.IEEE754.Binary <> is_finite_Bopp thm
R86122:86135 compcert.flocq.IEEE754.Binary <> is_finite_Bopp thm
R86122:86135 compcert.flocq.IEEE754.Binary <> is_finite_Bopp thm
R86155:86165 compcert.flocq.IEEE754.Binary <> B754_finite constr
R86167:86171 Coq.Init.Datatypes <> false constr
R86155:86165 compcert.flocq.IEEE754.Binary <> B754_finite constr
R86167:86171 Coq.Init.Datatypes <> false constr
R86209:86225 compcert.flocq.IEEE754.Binary <> Bpred_pos_correct thm
R86209:86225 compcert.flocq.IEEE754.Binary <> Bpred_pos_correct thm
R86263:86265 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x not
R86266:86268 compcert.flocq.IEEE754.Binary <> B2R def
R86263:86265 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x not
R86266:86268 compcert.flocq.IEEE754.Binary <> B2R def
R86334:86350 Coq.Reals.RIneq <> Rmult_lt_0_compat thm
R86360:86365 Coq.Reals.RIneq <> IZR_lt thm
R86373:86381 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R86334:86350 Coq.Reals.RIneq <> Rmult_lt_0_compat thm
R86360:86365 Coq.Reals.RIneq <> IZR_lt thm
R86373:86381 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R86402:86406 Coq.Init.Logic <> proj1 thm
R86417:86421 Coq.Init.Logic <> proj1 thm
R86424:86428 Coq.Init.Logic <> proj2 thm
R86402:86406 Coq.Init.Logic <> proj1 thm
R86402:86406 Coq.Init.Logic <> proj1 thm
R86417:86421 Coq.Init.Logic <> proj1 thm
R86424:86428 Coq.Init.Logic <> proj2 thm
R86417:86421 Coq.Init.Logic <> proj1 thm
R86424:86428 Coq.Init.Logic <> proj2 thm
R86452:86455 compcert.flocq.Core.Ulp <> succ def
R86466:86479 compcert.flocq.Core.Raux <> Rle_bool_false thm
R86466:86479 compcert.flocq.Core.Raux <> Rle_bool_false thm
R86466:86479 compcert.flocq.Core.Raux <> Rle_bool_false thm
R86466:86479 compcert.flocq.Core.Raux <> Rle_bool_false thm
R86521:86523 compcert.flocq.IEEE754.Binary <> B2R def
R86526:86528 compcert.flocq.Core.Defs <> F2R def
R86550:86566 Coq.Reals.RIneq <> Ropp_mult_distr_l thm
R86571:86577 Coq.Reals.RIneq <> opp_IZR thm
R86550:86566 Coq.Reals.RIneq <> Ropp_mult_distr_l thm
R86550:86566 Coq.Reals.RIneq <> Ropp_mult_distr_l thm
R86571:86577 Coq.Reals.RIneq <> opp_IZR thm
R86571:86577 Coq.Reals.RIneq <> opp_IZR thm
R86618:86622 compcert.flocq.IEEE754.Binary <> Bsign def
R86625:86635 compcert.flocq.IEEE754.Binary <> B754_finite constr
R86659:86662 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R86655:86658 Coq.Init.Datatypes <> true constr
R86618:86622 compcert.flocq.IEEE754.Binary <> Bsign def
R86625:86635 compcert.flocq.IEEE754.Binary <> B754_finite constr
R86659:86662 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R86655:86658 Coq.Init.Datatypes <> true constr
R86688:86697 compcert.flocq.IEEE754.Binary <> Bsign_Bopp thm
R86701:86705 Coq.Init.Logic <> proj2 thm
R86708:86712 Coq.Init.Logic <> proj2 thm
R86688:86697 compcert.flocq.IEEE754.Binary <> Bsign_Bopp thm
R86688:86697 compcert.flocq.IEEE754.Binary <> Bsign_Bopp thm
R86688:86697 compcert.flocq.IEEE754.Binary <> Bsign_Bopp thm
R86701:86705 Coq.Init.Logic <> proj2 thm
R86708:86712 Coq.Init.Logic <> proj2 thm
R86701:86705 Coq.Init.Logic <> proj2 thm
R86708:86712 Coq.Init.Logic <> proj2 thm
R86796:86804 compcert.flocq.IEEE754.Binary <> Bpred_pos def
R86796:86804 compcert.flocq.IEEE754.Binary <> Bpred_pos def
R86827:86829 compcert.flocq.IEEE754.Binary <> B2R def
R86832:86834 compcert.flocq.Core.Defs <> F2R def
R86852:86856 Coq.ZArith.BinInt Z neg syndef
R86868:86869 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R86870:86874 Coq.ZArith.BinInt Z pos syndef
R86852:86856 Coq.ZArith.BinInt Z neg syndef
R86868:86869 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R86870:86874 Coq.ZArith.BinInt Z pos syndef
R86897:86903 Coq.Reals.RIneq <> opp_IZR thm
R86908:86924 Coq.Reals.RIneq <> Ropp_mult_distr_l thm
R86929:86934 Coq.Reals.RIneq <> Ropp_0 thm
R86943:86959 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R86897:86903 Coq.Reals.RIneq <> opp_IZR thm
R86897:86903 Coq.Reals.RIneq <> opp_IZR thm
R86908:86924 Coq.Reals.RIneq <> Ropp_mult_distr_l thm
R86908:86924 Coq.Reals.RIneq <> Ropp_mult_distr_l thm
R86929:86934 Coq.Reals.RIneq <> Ropp_0 thm
R86929:86934 Coq.Reals.RIneq <> Ropp_0 thm
R86943:86959 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R86978:86994 Coq.Reals.RIneq <> Rmult_lt_0_compat thm
R87004:87009 Coq.Reals.RIneq <> IZR_lt thm
R87017:87025 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R86978:86994 Coq.Reals.RIneq <> Rmult_lt_0_compat thm
R87004:87009 Coq.Reals.RIneq <> IZR_lt thm
R87017:87025 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R87064:87073 Coq.Reals.RIneq <> Rlt_not_le thm
R87064:87073 Coq.Reals.RIneq <> Rlt_not_le thm
R87089:87100 Coq.Reals.RIneq <> Rle_lt_trans thm
R87105:87108 compcert.flocq.Core.Ulp <> succ def
R87117:87120 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R87110:87115 compcert.flocq.Core.Zaux <> radix2 def
R87089:87100 Coq.Reals.RIneq <> Rle_lt_trans thm
R87105:87108 compcert.flocq.Core.Ulp <> succ def
R87117:87120 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R87110:87115 compcert.flocq.Core.Zaux <> radix2 def
R87141:87147 compcert.flocq.Core.Ulp <> succ_le thm
R87161:87173 compcert.flocq.Core.FLT <> FLT_exp_valid inst
R87181:87198 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R87231:87246 compcert.flocq.Core.Generic_fmt <> generic_format_0 thm
R87141:87147 compcert.flocq.Core.Ulp <> succ_le thm
R87161:87173 compcert.flocq.Core.FLT <> FLT_exp_valid inst
R87181:87198 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R87231:87246 compcert.flocq.Core.Generic_fmt <> generic_format_0 thm
R87266:87268 compcert.flocq.IEEE754.Binary <> B2R def
R87271:87273 compcert.flocq.Core.Defs <> F2R def
R87291:87295 Coq.ZArith.BinInt Z neg syndef
R87307:87308 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R87309:87313 Coq.ZArith.BinInt Z pos syndef
R87291:87295 Coq.ZArith.BinInt Z neg syndef
R87307:87308 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R87309:87313 Coq.ZArith.BinInt Z pos syndef
R87338:87344 Coq.Reals.RIneq <> opp_IZR thm
R87349:87365 Coq.Reals.RIneq <> Ropp_mult_distr_l thm
R87370:87375 Coq.Reals.RIneq <> Ropp_0 thm
R87384:87400 Coq.Reals.RIneq <> Ropp_le_contravar thm
R87338:87344 Coq.Reals.RIneq <> opp_IZR thm
R87338:87344 Coq.Reals.RIneq <> opp_IZR thm
R87349:87365 Coq.Reals.RIneq <> Ropp_mult_distr_l thm
R87349:87365 Coq.Reals.RIneq <> Ropp_mult_distr_l thm
R87370:87375 Coq.Reals.RIneq <> Ropp_0 thm
R87370:87375 Coq.Reals.RIneq <> Ropp_0 thm
R87384:87400 Coq.Reals.RIneq <> Ropp_le_contravar thm
R87421:87432 Coq.Reals.RIneq <> Rmult_le_pos thm
R87442:87447 Coq.Reals.RIneq <> IZR_le thm
R87455:87463 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R87421:87432 Coq.Reals.RIneq <> Rmult_le_pos thm
R87442:87447 Coq.Reals.RIneq <> IZR_le thm
R87455:87463 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R87496:87502 compcert.flocq.Core.Raux <> bpow_lt thm
R87496:87502 compcert.flocq.Core.Raux <> bpow_lt thm
R87518:87521 compcert.flocq.IEEE754.Binary <> emin vardef
R87531:87539 compcert.flocq.Core.FLX <> Prec_gt_0 class
R87575:87585 compcert.flocq.IEEE754.Binary <> B754_finite constr
R87575:87585 compcert.flocq.IEEE754.Binary <> B754_finite constr
R87658:87669 compcert.flocq.IEEE754.Binary <> Bulp_correct thm
R87674:87680 Coq.Init.Logic <> eq_refl constr
R87658:87669 compcert.flocq.IEEE754.Binary <> Bulp_correct thm
R87674:87680 Coq.Init.Logic <> eq_refl constr
R87708:87720 compcert.flocq.IEEE754.Binary <> Bplus_correct thm
R87751:87757 Coq.Init.Logic <> eq_refl constr
R87742:87745 compcert.flocq.IEEE754.Binary <> Bulp def
R87731:87737 compcert.flocq.IEEE754.Binary <> mode_NE constr
R87708:87720 compcert.flocq.IEEE754.Binary <> Bplus_correct thm
R87751:87757 Coq.Init.Logic <> eq_refl constr
R87742:87745 compcert.flocq.IEEE754.Binary <> Bulp def
R87731:87737 compcert.flocq.IEEE754.Binary <> mode_NE constr
R87777:87781 Coq.Init.Logic <> proj1 thm
R87784:87788 Coq.Init.Logic <> proj2 thm
R87826:87832 Coq.Init.Logic <> eq_refl constr
R87777:87781 Coq.Init.Logic <> proj1 thm
R87784:87788 Coq.Init.Logic <> proj2 thm
R87777:87781 Coq.Init.Logic <> proj1 thm
R87784:87788 Coq.Init.Logic <> proj2 thm
R87826:87832 Coq.Init.Logic <> eq_refl constr
R87858:87861 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R87862:87864 compcert.flocq.IEEE754.Binary <> B2R def
R87858:87861 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R87862:87864 compcert.flocq.IEEE754.Binary <> B2R def
R87889:87900 Coq.Reals.RIneq <> Rmult_le_pos thm
R87910:87915 Coq.Reals.RIneq <> IZR_le thm
R87923:87931 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R87889:87900 Coq.Reals.RIneq <> Rmult_le_pos thm
R87910:87915 Coq.Reals.RIneq <> IZR_le thm
R87923:87931 compcert.flocq.Core.Raux <> bpow_ge_0 thm
R87983:88007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R87959:87962 compcert.flocq.Core.Ulp <> succ def
R87977:87979 compcert.flocq.IEEE754.Binary <> B2R def
R87971:87974 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R87964:87969 compcert.flocq.Core.Zaux <> radix2 def
R88013:88015 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R88008:88010 compcert.flocq.IEEE754.Binary <> B2R def
R88016:88018 compcert.flocq.Core.Ulp <> ulp def
R88033:88035 compcert.flocq.IEEE754.Binary <> B2R def
R88027:88030 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R88020:88025 compcert.flocq.Core.Zaux <> radix2 def
R87983:88007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R87959:87962 compcert.flocq.Core.Ulp <> succ def
R87977:87979 compcert.flocq.IEEE754.Binary <> B2R def
R87971:87974 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R87964:87969 compcert.flocq.Core.Zaux <> radix2 def
R88013:88015 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R88008:88010 compcert.flocq.IEEE754.Binary <> B2R def
R88016:88018 compcert.flocq.Core.Ulp <> ulp def
R88033:88035 compcert.flocq.IEEE754.Binary <> B2R def
R88027:88030 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R88020:88025 compcert.flocq.Core.Zaux <> radix2 def
R88062:88065 compcert.flocq.Core.Ulp <> succ def
R88077:88089 compcert.flocq.Core.Raux <> Rle_bool_true thm
R88077:88089 compcert.flocq.Core.Raux <> Rle_bool_true thm
R88077:88089 compcert.flocq.Core.Raux <> Rle_bool_true thm
R88115:88119 Coq.Init.Logic <> proj1 thm
R88115:88119 Coq.Init.Logic <> proj1 thm
R88115:88119 Coq.Init.Logic <> proj1 thm
R88160:88172 compcert.flocq.Core.Generic_fmt <> round_generic thm
R88198:88208 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R88221:88239 compcert.flocq.Core.Ulp <> generic_format_succ thm
R88276:88288 compcert.flocq.Core.FLT <> FLT_exp_valid inst
R88296:88313 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R88160:88172 compcert.flocq.Core.Generic_fmt <> round_generic thm
R88160:88172 compcert.flocq.Core.Generic_fmt <> round_generic thm
R88160:88172 compcert.flocq.Core.Generic_fmt <> round_generic thm
R88160:88172 compcert.flocq.Core.Generic_fmt <> round_generic thm
R88198:88208 compcert.flocq.Core.Generic_fmt <> valid_rnd_N inst
R88221:88239 compcert.flocq.Core.Ulp <> generic_format_succ thm
R88276:88288 compcert.flocq.Core.FLT <> FLT_exp_valid inst
R88296:88313 compcert.flocq.IEEE754.Binary <> generic_format_B2R thm
R88330:88340 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R88361:88369 Coq.Reals.RIneq <> Rle_trans thm
R88382:88391 compcert.flocq.Core.Ulp <> succ_ge_id thm
R88330:88340 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R88330:88340 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R88330:88340 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R88361:88369 Coq.Reals.RIneq <> Rle_trans thm
R88382:88391 compcert.flocq.Core.Ulp <> succ_ge_id thm
R88418:88430 compcert.flocq.Core.Raux <> Rlt_bool_spec thm
R88418:88430 compcert.flocq.Core.Raux <> Rlt_bool_spec thm
R88514:88518 Coq.Init.Logic <> proj2 thm
R88521:88525 Coq.Init.Logic <> proj2 thm
R88541:88553 compcert.flocq.Core.Raux <> Rcompare_spec thm
R88514:88518 Coq.Init.Logic <> proj2 thm
R88521:88525 Coq.Init.Logic <> proj2 thm
R88514:88518 Coq.Init.Logic <> proj2 thm
R88521:88525 Coq.Init.Logic <> proj2 thm
R88541:88553 compcert.flocq.Core.Raux <> Rcompare_spec thm
R88606:88615 Coq.Reals.RIneq <> Rle_not_lt thm
R88619:88627 Coq.Reals.RIneq <> Rle_trans thm
R88640:88649 compcert.flocq.Core.Ulp <> succ_ge_id thm
R88606:88615 Coq.Reals.RIneq <> Rle_not_lt thm
R88619:88627 Coq.Reals.RIneq <> Rle_trans thm
R88640:88649 compcert.flocq.Core.Ulp <> succ_ge_id thm
R88696:88705 Coq.Reals.RIneq <> Rgt_not_eq thm
R88708:88713 Coq.Reals.RIneq <> Rlt_gt thm
R88696:88705 Coq.Reals.RIneq <> Rgt_not_eq thm
R88708:88713 Coq.Reals.RIneq <> Rlt_gt thm
R88731:88742 Coq.Reals.RIneq <> Rlt_le_trans thm
R88747:88749 compcert.flocq.IEEE754.Binary <> B2R def
R88764:88773 compcert.flocq.Core.Ulp <> succ_ge_id thm
R88731:88742 Coq.Reals.RIneq <> Rlt_le_trans thm
R88747:88749 compcert.flocq.IEEE754.Binary <> B2R def
R88764:88773 compcert.flocq.Core.Ulp <> succ_ge_id thm
R88795:88811 Coq.Reals.RIneq <> Rmult_lt_0_compat thm
R88821:88826 Coq.Reals.RIneq <> IZR_lt thm
R88834:88842 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R88795:88811 Coq.Reals.RIneq <> Rmult_lt_0_compat thm
R88821:88826 Coq.Reals.RIneq <> IZR_lt thm
R88834:88842 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R88884:88888 Coq.Init.Logic <> proj1 thm
R88884:88888 Coq.Init.Logic <> proj1 thm
R88884:88888 Coq.Init.Logic <> proj1 thm
def 88915:88919 <> Bpred
R88937:88940 compcert.flocq.IEEE754.Binary <> Bopp def
R88952:88956 compcert.flocq.IEEE754.Binary <> Bsucc def
R88968:88971 compcert.flocq.IEEE754.Binary <> Bopp def
R88982:88982 compcert.flocq.IEEE754.Binary <> x var
R88973:88980 compcert.flocq.IEEE754.Binary <> pred_nan var
R88958:88965 compcert.flocq.IEEE754.Binary <> pred_nan var
R88942:88949 compcert.flocq.IEEE754.Binary <> pred_nan var
prf 88994:89006 <> Bpred_correct
R89051:89056 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R89060:89067 compcert.flocq.Core.Raux <> Rlt_bool def
R89091:89094 compcert.flocq.Core.Ulp <> pred def
R89109:89111 compcert.flocq.IEEE754.Binary <> B2R def
R89113:89113 compcert.flocq.IEEE754.Binary <> x var
R89103:89106 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R89096:89101 compcert.flocq.Core.Zaux <> radix2 def
R89070:89071 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R89072:89075 compcert.flocq.Core.Raux <> bpow def
R89084:89087 compcert.flocq.IEEE754.Binary <> Binary.emax var
R89077:89082 compcert.flocq.Core.Zaux <> radix2 def
R89331:89333 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89308:89311 compcert.flocq.IEEE754.Binary <> B2FF def
R89314:89318 compcert.flocq.IEEE754.Binary <> Bpred def
R89329:89329 compcert.flocq.IEEE754.Binary <> x var
R89320:89327 compcert.flocq.IEEE754.Binary <> pred_nan var
R89334:89346 compcert.flocq.IEEE754.Binary <> F754_infinity constr
R89348:89351 Coq.Init.Datatypes <> true constr
R89175:89182 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R89148:89150 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89126:89128 compcert.flocq.IEEE754.Binary <> B2R def
R89131:89135 compcert.flocq.IEEE754.Binary <> Bpred def
R89146:89146 compcert.flocq.IEEE754.Binary <> x var
R89137:89144 compcert.flocq.IEEE754.Binary <> pred_nan var
R89151:89154 compcert.flocq.Core.Ulp <> pred def
R89169:89171 compcert.flocq.IEEE754.Binary <> B2R def
R89173:89173 compcert.flocq.IEEE754.Binary <> x var
R89163:89166 compcert.flocq.IEEE754.Binary <> Binary.fexp var
R89156:89161 compcert.flocq.Core.Zaux <> radix2 def
R89218:89225 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R89211:89213 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89183:89191 compcert.flocq.IEEE754.Binary <> is_finite def
R89194:89198 compcert.flocq.IEEE754.Binary <> Bpred def
R89209:89209 compcert.flocq.IEEE754.Binary <> x var
R89200:89207 compcert.flocq.IEEE754.Binary <> pred_nan var
R89214:89217 Coq.Init.Datatypes <> true constr
R89251:89253 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89227:89231 compcert.flocq.IEEE754.Binary <> Bsign def
R89234:89238 compcert.flocq.IEEE754.Binary <> Bpred def
R89249:89249 compcert.flocq.IEEE754.Binary <> x var
R89240:89247 compcert.flocq.IEEE754.Binary <> pred_nan var
R89261:89264 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R89254:89258 compcert.flocq.IEEE754.Binary <> Bsign def
R89260:89260 compcert.flocq.IEEE754.Binary <> x var
R89265:89268 Coq.Init.Datatypes <> negb def
R89271:89286 compcert.flocq.IEEE754.Binary <> is_finite_strict def
R89288:89288 compcert.flocq.IEEE754.Binary <> x var
R89044:89046 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89033:89041 compcert.flocq.IEEE754.Binary <> is_finite def
R89043:89043 compcert.flocq.IEEE754.Binary <> x var
R89047:89050 Coq.Init.Datatypes <> true constr
R89424:89426 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89397:89405 compcert.flocq.IEEE754.Binary <> is_finite def
R89408:89411 compcert.flocq.IEEE754.Binary <> Bopp def
R89427:89430 Coq.Init.Datatypes <> true constr
R89424:89426 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89397:89405 compcert.flocq.IEEE754.Binary <> is_finite def
R89408:89411 compcert.flocq.IEEE754.Binary <> Bopp def
R89427:89430 Coq.Init.Datatypes <> true constr
R89448:89461 compcert.flocq.IEEE754.Binary <> is_finite_Bopp thm
R89448:89461 compcert.flocq.IEEE754.Binary <> is_finite_Bopp thm
R89448:89461 compcert.flocq.IEEE754.Binary <> is_finite_Bopp thm
R89477:89491 Coq.Reals.RIneq <> Ropp_involutive thm
R89494:89496 compcert.flocq.IEEE754.Binary <> B2R def
R89506:89513 compcert.flocq.IEEE754.Binary <> B2R_Bopp thm
R89477:89491 Coq.Reals.RIneq <> Ropp_involutive thm
R89494:89496 compcert.flocq.IEEE754.Binary <> B2R def
R89477:89491 Coq.Reals.RIneq <> Ropp_involutive thm
R89494:89496 compcert.flocq.IEEE754.Binary <> B2R def
R89506:89513 compcert.flocq.IEEE754.Binary <> B2R_Bopp thm
R89506:89513 compcert.flocq.IEEE754.Binary <> B2R_Bopp thm
R89534:89541 compcert.flocq.Core.Ulp <> pred_opp thm
R89544:89555 compcert.flocq.Core.Raux <> Rlt_bool_opp thm
R89534:89541 compcert.flocq.Core.Ulp <> pred_opp thm
R89534:89541 compcert.flocq.Core.Ulp <> pred_opp thm
R89544:89555 compcert.flocq.Core.Raux <> Rlt_bool_opp thm
R89544:89555 compcert.flocq.Core.Raux <> Rlt_bool_opp thm
R89570:89582 compcert.flocq.IEEE754.Binary <> Bsucc_correct thm
R89570:89582 compcert.flocq.IEEE754.Binary <> Bsucc_correct thm
R89607:89614 compcert.flocq.Core.Raux <> Rlt_bool def
R89607:89614 compcert.flocq.Core.Raux <> Rlt_bool def
R89654:89658 compcert.flocq.IEEE754.Binary <> Bpred def
R89671:89678 compcert.flocq.IEEE754.Binary <> B2R_Bopp thm
R89685:89698 compcert.flocq.IEEE754.Binary <> is_finite_Bopp thm
R89671:89678 compcert.flocq.IEEE754.Binary <> B2R_Bopp thm
R89671:89678 compcert.flocq.IEEE754.Binary <> B2R_Bopp thm
R89685:89698 compcert.flocq.IEEE754.Binary <> is_finite_Bopp thm
R89685:89698 compcert.flocq.IEEE754.Binary <> is_finite_Bopp thm
R89714:89733 Coq.Bool.Bool <> negb_involutive thm
R89736:89740 compcert.flocq.IEEE754.Binary <> Bsign def
R89749:89762 Coq.Bool.Bool <> negb_andb thm
R89714:89733 Coq.Bool.Bool <> negb_involutive thm
R89736:89740 compcert.flocq.IEEE754.Binary <> Bsign def
R89714:89733 Coq.Bool.Bool <> negb_involutive thm
R89736:89740 compcert.flocq.IEEE754.Binary <> Bsign def
R89749:89762 Coq.Bool.Bool <> negb_andb thm
R89749:89762 Coq.Bool.Bool <> negb_andb thm
R89819:89834 compcert.flocq.IEEE754.Binary <> is_finite_strict def
R89845:89860 compcert.flocq.IEEE754.Binary <> is_finite_strict def
R89863:89866 compcert.flocq.IEEE754.Binary <> Bopp def
R89819:89834 compcert.flocq.IEEE754.Binary <> is_finite_strict def
R89845:89860 compcert.flocq.IEEE754.Binary <> is_finite_strict def
R89863:89866 compcert.flocq.IEEE754.Binary <> Bopp def
R89989:89998 compcert.flocq.IEEE754.Binary <> Bsign_Bopp thm
R90004:90013 compcert.flocq.IEEE754.Binary <> Bsign_Bopp thm
R89989:89998 compcert.flocq.IEEE754.Binary <> Bsign_Bopp thm
R89989:89998 compcert.flocq.IEEE754.Binary <> Bsign_Bopp thm
R89989:89998 compcert.flocq.IEEE754.Binary <> Bsign_Bopp thm
R90004:90013 compcert.flocq.IEEE754.Binary <> Bsign_Bopp thm
R90004:90013 compcert.flocq.IEEE754.Binary <> Bsign_Bopp thm
R90004:90013 compcert.flocq.IEEE754.Binary <> Bsign_Bopp thm
R90099:90103 compcert.flocq.IEEE754.Binary <> Bsucc def
R90099:90103 compcert.flocq.IEEE754.Binary <> Bsucc def
R90124:90128 compcert.flocq.IEEE754.Binary <> Bpred def
R90137:90141 compcert.flocq.IEEE754.Binary <> Bsucc def
R90137:90141 compcert.flocq.IEEE754.Binary <> Bsucc def
R90176:90181 compcert.flocq.IEEE754.Binary Binary <> sec
