DIGEST c5c73eec4105cb4b9114522b9c444c59
Fcompcert.flocq.Calc.Fcalc_round
R770:774 compcert.flocq.Core.Fcore <> <> lib
R792:803 compcert.flocq.Core.Fcore_digits <> <> lib
R821:833 compcert.flocq.Calc.Fcalc_bracket <> <> lib
R851:862 compcert.flocq.Calc.Fcalc_digits <> <> lib
sec 874:884 <> Fcalc_round
var 897:900 Fcalc_round beta
R904:908 compcert.flocq.Core.Fcore_Zaux <> radix rec
syndef 920:923 <> bpow
R931:934 compcert.flocq.Core.Fcore_Raux <> bpow def
R936:939 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
sec 954:969 Fcalc_round Fcalc_round_fexp
var 982:985 Fcalc_round.Fcalc_round_fexp fexp
R990:993 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R994:994 Coq.Numbers.BinNums <> Z ind
R989:989 Coq.Numbers.BinNums <> Z ind
R1019:1027 compcert.flocq.Core.Fcore_generic_fmt <> Valid_exp class
R1029:1032 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
syndef 1046:1051 <> format
R1057:1070 compcert.flocq.Core.Fcore_generic_fmt <> generic_format def
R1077:1080 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R1072:1075 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
prf 1132:1152 <> inbetween_float_round
R1179:1180 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1236:1243 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1269:1279 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R1291:1291 compcert.flocq.Calc.Fcalc_round <> x var
R1286:1289 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R1281:1284 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1326:1331 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1353:1355 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1332:1336 compcert.flocq.Core.Fcore_generic_fmt <> round def
R1352:1352 compcert.flocq.Calc.Fcalc_round <> x var
R1348:1350 compcert.flocq.Calc.Fcalc_round <> rnd var
R1343:1346 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R1338:1341 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1356:1358 compcert.flocq.Core.Fcore_defs <> F2R def
R1361:1365 compcert.flocq.Core.Fcore_defs <> Float constr
R1385:1385 compcert.flocq.Calc.Fcalc_round <> e var
R1373:1378 compcert.flocq.Calc.Fcalc_round <> choice var
R1382:1382 compcert.flocq.Calc.Fcalc_round <> l var
R1380:1380 compcert.flocq.Calc.Fcalc_round <> m var
R1367:1370 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1298:1312 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R1325:1325 compcert.flocq.Calc.Fcalc_round <> l var
R1323:1323 compcert.flocq.Calc.Fcalc_round <> x var
R1321:1321 compcert.flocq.Calc.Fcalc_round <> e var
R1319:1319 compcert.flocq.Calc.Fcalc_round <> m var
R1314:1317 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1214:1217 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1223:1225 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1218:1220 compcert.flocq.Calc.Fcalc_round <> rnd var
R1222:1222 compcert.flocq.Calc.Fcalc_round <> x var
R1226:1231 compcert.flocq.Calc.Fcalc_round <> choice var
R1235:1235 compcert.flocq.Calc.Fcalc_round <> l var
R1233:1233 compcert.flocq.Calc.Fcalc_round <> m var
R1195:1207 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R1213:1213 compcert.flocq.Calc.Fcalc_round <> l var
R1211:1211 compcert.flocq.Calc.Fcalc_round <> x var
R1209:1209 compcert.flocq.Calc.Fcalc_round <> m var
R1436:1440 compcert.flocq.Core.Fcore_generic_fmt <> round def
R1443:1445 compcert.flocq.Core.Fcore_defs <> F2R def
R1462:1468 Coq.Init.Logic <> f_equal thm
R1486:1488 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R1481:1483 compcert.flocq.Core.Fcore_Raux <> Z2R def
R1485:1485 compcert.flocq.Calc.Fcalc_round <> m var
R1489:1492 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R1462:1468 Coq.Init.Logic <> f_equal thm
R1486:1488 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R1481:1483 compcert.flocq.Core.Fcore_Raux <> Z2R def
R1485:1485 compcert.flocq.Calc.Fcalc_round <> m var
R1489:1492 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R1543:1546 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R1518:1535 compcert.flocq.Calc.Fcalc_bracket <> inbetween_mult_reg thm
R1543:1546 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R1518:1535 compcert.flocq.Calc.Fcalc_bracket <> inbetween_mult_reg thm
R1558:1566 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R1558:1566 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R1581:1605 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_mult_bpow thm
R1581:1605 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_mult_bpow thm
R1581:1605 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_mult_bpow thm
def 1625:1633 <> cond_incr
R1640:1643 Coq.Init.Datatypes <> bool ind
R1654:1654 compcert.flocq.Calc.Fcalc_round <> b var
R1676:1676 compcert.flocq.Calc.Fcalc_round <> m var
R1663:1665 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1662:1662 compcert.flocq.Calc.Fcalc_round <> m var
prf 1688:1713 <> inbetween_float_round_sign
R1740:1741 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1850:1857 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1883:1893 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R1905:1905 compcert.flocq.Calc.Fcalc_round <> x var
R1900:1903 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R1895:1898 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1947:1952 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1974:1976 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1953:1957 compcert.flocq.Core.Fcore_generic_fmt <> round def
R1973:1973 compcert.flocq.Calc.Fcalc_round <> x var
R1969:1971 compcert.flocq.Calc.Fcalc_round <> rnd var
R1964:1967 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R1959:1962 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1977:1979 compcert.flocq.Core.Fcore_defs <> F2R def
R1982:1986 compcert.flocq.Core.Fcore_defs <> Float constr
R2048:2048 compcert.flocq.Calc.Fcalc_round <> e var
R1994:2002 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R2020:2025 compcert.flocq.Calc.Fcalc_round <> choice var
R2044:2044 compcert.flocq.Calc.Fcalc_round <> l var
R2042:2042 compcert.flocq.Calc.Fcalc_round <> m var
R2028:2035 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R2037:2037 compcert.flocq.Calc.Fcalc_round <> x var
R2005:2012 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R2014:2014 compcert.flocq.Calc.Fcalc_round <> x var
R1988:1991 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1912:1926 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R1946:1946 compcert.flocq.Calc.Fcalc_round <> l var
R1938:1941 Coq.Reals.Rbasic_fun <> Rabs def
R1943:1943 compcert.flocq.Calc.Fcalc_round <> x var
R1935:1935 compcert.flocq.Calc.Fcalc_round <> e var
R1933:1933 compcert.flocq.Calc.Fcalc_round <> m var
R1928:1931 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R1782:1789 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1795:1797 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1790:1792 compcert.flocq.Calc.Fcalc_round <> rnd var
R1794:1794 compcert.flocq.Calc.Fcalc_round <> x var
R1798:1806 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R1824:1829 compcert.flocq.Calc.Fcalc_round <> choice var
R1848:1848 compcert.flocq.Calc.Fcalc_round <> l var
R1846:1846 compcert.flocq.Calc.Fcalc_round <> m var
R1832:1839 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R1841:1841 compcert.flocq.Calc.Fcalc_round <> x var
R1809:1816 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R1818:1818 compcert.flocq.Calc.Fcalc_round <> x var
R1756:1768 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R1781:1781 compcert.flocq.Calc.Fcalc_round <> l var
R1773:1776 Coq.Reals.Rbasic_fun <> Rabs def
R1778:1778 compcert.flocq.Calc.Fcalc_round <> x var
R1770:1770 compcert.flocq.Calc.Fcalc_round <> m var
R2099:2105 Coq.Init.Logic <> f_equal thm
R2123:2125 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R2118:2120 compcert.flocq.Core.Fcore_Raux <> Z2R def
R2122:2122 compcert.flocq.Calc.Fcalc_round <> m var
R2126:2129 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2099:2105 Coq.Init.Logic <> f_equal thm
R2123:2125 Coq.Reals.Rdefinitions <> ::R_scope:x_'*'_x not
R2118:2120 compcert.flocq.Core.Fcore_Raux <> Z2R def
R2122:2122 compcert.flocq.Calc.Fcalc_round <> m var
R2126:2129 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2155:2162 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R2175:2182 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R2185:2199 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R2206:2209 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R2201:2204 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R2155:2162 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R2175:2182 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R2185:2199 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R2206:2209 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R2201:2204 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R2265:2268 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2240:2257 compcert.flocq.Calc.Fcalc_bracket <> inbetween_mult_reg thm
R2265:2268 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2240:2257 compcert.flocq.Calc.Fcalc_bracket <> inbetween_mult_reg thm
R2280:2288 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R2280:2288 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R2303:2312 Coq.Reals.Rbasic_fun <> Rabs_right thm
R2315:2318 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2303:2312 Coq.Reals.Rbasic_fun <> Rabs_right thm
R2315:2318 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2303:2312 Coq.Reals.Rbasic_fun <> Rabs_right thm
R2315:2318 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2303:2312 Coq.Reals.Rbasic_fun <> Rabs_right thm
R2315:2318 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2341:2349 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R2341:2349 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R2341:2349 Coq.Reals.Rbasic_fun <> Rabs_mult thm
R2364:2388 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_mult_bpow thm
R2364:2388 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_mult_bpow thm
R2364:2388 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_mult_bpow thm
R2397:2402 Coq.Reals.RIneq <> Rle_ge thm
R2397:2402 Coq.Reals.RIneq <> Rle_ge thm
R2411:2419 compcert.flocq.Core.Fcore_Raux <> bpow_ge_0 thm
R2411:2419 compcert.flocq.Core.Fcore_Raux <> bpow_ge_0 thm
R2438:2450 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R2438:2450 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R2483:2495 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R2483:2495 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R2510:2518 Coq.Reals.RIneq <> Rmult_0_l thm
R2521:2524 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2527:2527 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R2510:2518 Coq.Reals.RIneq <> Rmult_0_l thm
R2521:2524 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2527:2527 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R2510:2518 Coq.Reals.RIneq <> Rmult_0_l thm
R2521:2524 compcert.flocq.Calc.Fcalc_round <> bpow syndef
R2527:2527 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R2540:2556 Coq.Reals.RIneq <> Rmult_lt_compat_r thm
R2540:2556 Coq.Reals.RIneq <> Rmult_lt_compat_r thm
R2580:2588 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R2580:2588 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R2597:2610 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R2597:2610 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R2619:2630 Coq.Reals.RIneq <> Rmult_le_pos thm
R2619:2630 Coq.Reals.RIneq <> Rmult_le_pos thm
R2654:2662 compcert.flocq.Core.Fcore_Raux <> bpow_ge_0 thm
R2654:2662 compcert.flocq.Core.Fcore_Raux <> bpow_ge_0 thm
prf 2723:2738 <> inbetween_int_DN
R2779:2784 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2793:2795 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2785:2790 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R2792:2792 compcert.flocq.Calc.Fcalc_round <> x var
R2796:2796 compcert.flocq.Calc.Fcalc_round <> m var
R2760:2772 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R2778:2778 compcert.flocq.Calc.Fcalc_round <> l var
R2776:2776 compcert.flocq.Calc.Fcalc_round <> x var
R2774:2774 compcert.flocq.Calc.Fcalc_round <> m var
R2831:2840 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R2831:2840 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R2856:2871 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R2856:2871 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R2895:2900 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R2895:2900 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R2909:2916 Coq.ZArith.Zorder <> Zlt_succ syndef
R2909:2916 Coq.ZArith.Zorder <> Zlt_succ syndef
prf 2933:2950 <> inbetween_float_DN
R2981:2991 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R3003:3003 compcert.flocq.Calc.Fcalc_round <> x var
R2998:3001 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R2993:2996 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R3038:3043 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3068:3070 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3044:3048 compcert.flocq.Core.Fcore_generic_fmt <> round def
R3067:3067 compcert.flocq.Calc.Fcalc_round <> x var
R3060:3065 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R3055:3058 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R3050:3053 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R3071:3073 compcert.flocq.Core.Fcore_defs <> F2R def
R3076:3080 compcert.flocq.Core.Fcore_defs <> Float constr
R3089:3089 compcert.flocq.Calc.Fcalc_round <> e var
R3087:3087 compcert.flocq.Calc.Fcalc_round <> m var
R3082:3085 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R3010:3024 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R3037:3037 compcert.flocq.Calc.Fcalc_round <> l var
R3035:3035 compcert.flocq.Calc.Fcalc_round <> x var
R3033:3033 compcert.flocq.Calc.Fcalc_round <> e var
R3031:3031 compcert.flocq.Calc.Fcalc_round <> m var
R3026:3029 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R3155:3155 compcert.flocq.Calc.Fcalc_round <> m var
R3106:3126 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R3155:3155 compcert.flocq.Calc.Fcalc_round <> m var
R3106:3126 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R3165:3180 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN thm
R3165:3180 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN thm
def 3200:3212 <> round_sign_DN
R3229:3229 compcert.flocq.Calc.Fcalc_round <> l var
R3240:3248 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R3253:3257 Coq.Init.Datatypes <> false constr
R3268:3268 compcert.flocq.Calc.Fcalc_round <> s var
prf 3286:3306 <> inbetween_int_DN_sign
R3354:3359 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3368:3370 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3360:3365 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R3367:3367 compcert.flocq.Calc.Fcalc_round <> x var
R3371:3379 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R3397:3405 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R3440:3440 compcert.flocq.Calc.Fcalc_round <> m var
R3408:3420 compcert.flocq.Calc.Fcalc_round <> round_sign_DN def
R3437:3437 compcert.flocq.Calc.Fcalc_round <> l var
R3423:3430 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R3432:3432 compcert.flocq.Calc.Fcalc_round <> x var
R3382:3389 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R3391:3391 compcert.flocq.Calc.Fcalc_round <> x var
R3328:3340 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R3353:3353 compcert.flocq.Calc.Fcalc_round <> l var
R3345:3348 Coq.Reals.Rbasic_fun <> Rabs def
R3350:3350 compcert.flocq.Calc.Fcalc_round <> x var
R3342:3342 compcert.flocq.Calc.Fcalc_round <> m var
R3475:3478 Coq.Reals.Rbasic_fun <> Rabs def
R3497:3505 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R3497:3505 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R3537:3549 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R3537:3549 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R3537:3549 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R3607:3621 Coq.Reals.RIneq <> Ropp_involutive thm
R3607:3621 Coq.Reals.RIneq <> Ropp_involutive thm
R3607:3621 Coq.Reals.RIneq <> Ropp_involutive thm
R3641:3647 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3641:3647 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3641:3647 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3656:3665 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R3656:3665 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R3674:3683 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R3674:3683 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R3699:3704 Coq.Reals.RIneq <> Rlt_le thm
R3699:3704 Coq.Reals.RIneq <> Rlt_le thm
R3715:3721 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3715:3721 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3715:3721 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3730:3743 Coq.Reals.RIneq <> Ropp_lt_cancel thm
R3730:3743 Coq.Reals.RIneq <> Ropp_lt_cancel thm
R3758:3772 Coq.Reals.RIneq <> Ropp_involutive thm
R3758:3772 Coq.Reals.RIneq <> Ropp_involutive thm
R3758:3772 Coq.Reals.RIneq <> Ropp_involutive thm
R3799:3801 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3790:3792 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R3798:3798 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R3794:3796 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3799:3801 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3790:3792 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R3798:3798 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R3794:3796 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3816:3822 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3816:3822 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3816:3822 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R3831:3844 Coq.Reals.RIneq <> Ropp_lt_cancel thm
R3831:3844 Coq.Reals.RIneq <> Ropp_lt_cancel thm
R3859:3873 Coq.Reals.RIneq <> Ropp_involutive thm
R3859:3873 Coq.Reals.RIneq <> Ropp_involutive thm
R3859:3873 Coq.Reals.RIneq <> Ropp_involutive thm
R3890:3903 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R3890:3903 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R3890:3903 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R3890:3903 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R3951:3960 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R3951:3960 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R3969:3978 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R3969:3978 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R3998:4003 Coq.Reals.RIneq <> Rlt_le thm
R3998:4003 Coq.Reals.RIneq <> Rlt_le thm
R4025:4030 Coq.Reals.RIneq <> Rge_le thm
R4025:4030 Coq.Reals.RIneq <> Rge_le thm
prf 4047:4069 <> inbetween_float_DN_sign
R4100:4110 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R4122:4122 compcert.flocq.Calc.Fcalc_round <> x var
R4117:4120 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R4112:4115 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R4164:4169 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4194:4196 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4170:4174 compcert.flocq.Core.Fcore_generic_fmt <> round def
R4193:4193 compcert.flocq.Calc.Fcalc_round <> x var
R4186:4191 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R4181:4184 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R4176:4179 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R4197:4199 compcert.flocq.Core.Fcore_defs <> F2R def
R4202:4206 compcert.flocq.Core.Fcore_defs <> Float constr
R4287:4287 compcert.flocq.Calc.Fcalc_round <> e var
R4214:4222 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R4240:4248 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R4283:4283 compcert.flocq.Calc.Fcalc_round <> m var
R4251:4263 compcert.flocq.Calc.Fcalc_round <> round_sign_DN def
R4280:4280 compcert.flocq.Calc.Fcalc_round <> l var
R4266:4273 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R4275:4275 compcert.flocq.Calc.Fcalc_round <> x var
R4225:4232 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R4234:4234 compcert.flocq.Calc.Fcalc_round <> x var
R4208:4211 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R4129:4143 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R4163:4163 compcert.flocq.Calc.Fcalc_round <> l var
R4155:4158 Coq.Reals.Rbasic_fun <> Rabs def
R4160:4160 compcert.flocq.Calc.Fcalc_round <> x var
R4152:4152 compcert.flocq.Calc.Fcalc_round <> e var
R4150:4150 compcert.flocq.Calc.Fcalc_round <> m var
R4145:4148 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R4360:4368 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R4390:4390 compcert.flocq.Calc.Fcalc_round <> m var
R4371:4383 compcert.flocq.Calc.Fcalc_round <> round_sign_DN def
R4387:4387 compcert.flocq.Calc.Fcalc_round <> l var
R4385:4385 compcert.flocq.Calc.Fcalc_round <> s var
R4304:4329 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R4360:4368 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R4390:4390 compcert.flocq.Calc.Fcalc_round <> m var
R4371:4383 compcert.flocq.Calc.Fcalc_round <> round_sign_DN def
R4387:4387 compcert.flocq.Calc.Fcalc_round <> l var
R4385:4385 compcert.flocq.Calc.Fcalc_round <> s var
R4304:4329 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R4400:4420 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN_sign thm
R4400:4420 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN_sign thm
def 4482:4489 <> round_UP
R4504:4504 compcert.flocq.Calc.Fcalc_round <> l var
R4515:4523 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R4528:4532 Coq.Init.Datatypes <> false constr
R4543:4546 Coq.Init.Datatypes <> true constr
prf 4564:4579 <> inbetween_int_UP
R4620:4625 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4633:4635 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4626:4630 compcert.flocq.Core.Fcore_Raux <> Zceil def
R4632:4632 compcert.flocq.Calc.Fcalc_round <> x var
R4636:4644 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R4659:4659 compcert.flocq.Calc.Fcalc_round <> m var
R4647:4654 compcert.flocq.Calc.Fcalc_round <> round_UP def
R4656:4656 compcert.flocq.Calc.Fcalc_round <> l var
R4601:4613 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R4619:4619 compcert.flocq.Calc.Fcalc_round <> l var
R4617:4617 compcert.flocq.Calc.Fcalc_round <> x var
R4615:4615 compcert.flocq.Calc.Fcalc_round <> m var
R4712:4716 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R4752:4752 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R4700:4702 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4703:4711 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R4731:4734 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4718:4721 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R4722:4730 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R4745:4747 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4735:4742 compcert.flocq.Calc.Fcalc_round <> round_UP def
R4748:4751 Coq.Init.Datatypes <> true constr
R4712:4716 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R4752:4752 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R4700:4702 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4703:4711 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R4731:4734 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4718:4721 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R4722:4730 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R4745:4747 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4735:4742 compcert.flocq.Calc.Fcalc_round <> round_UP def
R4748:4751 Coq.Init.Datatypes <> true constr
R4902:4910 compcert.flocq.Core.Fcore_Raux <> Zceil_Z2R thm
R4902:4910 compcert.flocq.Core.Fcore_Raux <> Zceil_Z2R thm
R4958:4966 compcert.flocq.Core.Fcore_Raux <> Zceil_imp thm
R4958:4966 compcert.flocq.Core.Fcore_Raux <> Zceil_imp thm
R4989:4991 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R4985:4987 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4989:4991 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R4985:4987 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R5020:5023 Coq.Init.Logic <> conj constr
R5036:5041 Coq.Reals.RIneq <> Rlt_le thm
R5048:5052 Coq.Init.Logic <> proj2 thm
R5054:5054 compcert.flocq.Calc.Fcalc_round <> H var
R5026:5030 Coq.Init.Logic <> proj1 thm
R5032:5032 compcert.flocq.Calc.Fcalc_round <> H var
R5020:5023 Coq.Init.Logic <> conj constr
R5036:5041 Coq.Reals.RIneq <> Rlt_le thm
R5048:5052 Coq.Init.Logic <> proj2 thm
R5054:5054 compcert.flocq.Calc.Fcalc_round <> H var
R5026:5030 Coq.Init.Logic <> proj1 thm
R5032:5032 compcert.flocq.Calc.Fcalc_round <> H var
R5066:5088 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds_not_Eq thm
R5066:5088 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds_not_Eq thm
prf 5131:5148 <> inbetween_float_UP
R5179:5189 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R5201:5201 compcert.flocq.Calc.Fcalc_round <> x var
R5196:5199 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R5191:5194 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R5236:5241 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5265:5267 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5242:5246 compcert.flocq.Core.Fcore_generic_fmt <> round def
R5264:5264 compcert.flocq.Calc.Fcalc_round <> x var
R5258:5262 compcert.flocq.Core.Fcore_Raux <> Zceil def
R5253:5256 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R5248:5251 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R5268:5270 compcert.flocq.Core.Fcore_defs <> F2R def
R5273:5277 compcert.flocq.Core.Fcore_defs <> Float constr
R5311:5311 compcert.flocq.Calc.Fcalc_round <> e var
R5285:5293 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R5308:5308 compcert.flocq.Calc.Fcalc_round <> m var
R5296:5303 compcert.flocq.Calc.Fcalc_round <> round_UP def
R5305:5305 compcert.flocq.Calc.Fcalc_round <> l var
R5279:5282 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R5208:5222 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R5235:5235 compcert.flocq.Calc.Fcalc_round <> l var
R5233:5233 compcert.flocq.Calc.Fcalc_round <> x var
R5231:5231 compcert.flocq.Calc.Fcalc_round <> e var
R5229:5229 compcert.flocq.Calc.Fcalc_round <> m var
R5224:5227 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R5377:5385 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R5400:5400 compcert.flocq.Calc.Fcalc_round <> m var
R5388:5395 compcert.flocq.Calc.Fcalc_round <> round_UP def
R5397:5397 compcert.flocq.Calc.Fcalc_round <> l var
R5328:5348 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R5377:5385 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R5400:5400 compcert.flocq.Calc.Fcalc_round <> m var
R5388:5395 compcert.flocq.Calc.Fcalc_round <> round_UP def
R5397:5397 compcert.flocq.Calc.Fcalc_round <> l var
R5328:5348 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R5410:5425 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP thm
R5410:5425 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP thm
def 5445:5457 <> round_sign_UP
R5474:5474 compcert.flocq.Calc.Fcalc_round <> l var
R5485:5493 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R5498:5502 Coq.Init.Datatypes <> false constr
R5513:5516 Coq.Init.Datatypes <> negb def
R5518:5518 compcert.flocq.Calc.Fcalc_round <> s var
prf 5536:5556 <> inbetween_int_UP_sign
R5604:5609 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5617:5619 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5610:5614 compcert.flocq.Core.Fcore_Raux <> Zceil def
R5616:5616 compcert.flocq.Calc.Fcalc_round <> x var
R5620:5628 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R5646:5654 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R5689:5689 compcert.flocq.Calc.Fcalc_round <> m var
R5657:5669 compcert.flocq.Calc.Fcalc_round <> round_sign_UP def
R5686:5686 compcert.flocq.Calc.Fcalc_round <> l var
R5672:5679 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R5681:5681 compcert.flocq.Calc.Fcalc_round <> x var
R5631:5638 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R5640:5640 compcert.flocq.Calc.Fcalc_round <> x var
R5578:5590 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R5603:5603 compcert.flocq.Calc.Fcalc_round <> l var
R5595:5598 Coq.Reals.Rbasic_fun <> Rabs def
R5600:5600 compcert.flocq.Calc.Fcalc_round <> x var
R5592:5592 compcert.flocq.Calc.Fcalc_round <> m var
R5724:5727 Coq.Reals.Rbasic_fun <> Rabs def
R5746:5754 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R5746:5754 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R5786:5798 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R5786:5798 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R5786:5798 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R5830:5834 compcert.flocq.Core.Fcore_Raux <> Zceil def
R5843:5849 Coq.Init.Logic <> f_equal thm
R5843:5849 Coq.Init.Logic <> f_equal thm
R5897:5906 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R5897:5906 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R5915:5924 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R5915:5924 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R5944:5949 Coq.Reals.RIneq <> Rlt_le thm
R5944:5949 Coq.Reals.RIneq <> Rlt_le thm
R5975:5988 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R5975:5988 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R5975:5988 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R5975:5988 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R6043:6051 compcert.flocq.Core.Fcore_Raux <> Zceil_Z2R thm
R6043:6051 compcert.flocq.Core.Fcore_Raux <> Zceil_Z2R thm
R6060:6068 compcert.flocq.Core.Fcore_Raux <> Zceil_imp thm
R6060:6068 compcert.flocq.Core.Fcore_Raux <> Zceil_imp thm
R6091:6093 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R6087:6089 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R6105:6109 Coq.ZArith.BinInt <> Zpred syndef
R6112:6116 Coq.ZArith.BinInt <> Zsucc syndef
R6091:6093 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R6087:6089 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R6105:6109 Coq.ZArith.BinInt <> Zpred syndef
R6112:6116 Coq.ZArith.BinInt <> Zsucc syndef
R6138:6147 Coq.ZArith.BinInt <> Zpred_succ thm
R6138:6147 Coq.ZArith.BinInt <> Zpred_succ thm
R6138:6147 Coq.ZArith.BinInt <> Zpred_succ thm
R6160:6165 Coq.Reals.RIneq <> Rlt_le thm
R6160:6165 Coq.Reals.RIneq <> Rlt_le thm
R6178:6183 Coq.Reals.RIneq <> Rge_le thm
R6178:6183 Coq.Reals.RIneq <> Rge_le thm
prf 6200:6222 <> inbetween_float_UP_sign
R6253:6263 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R6275:6275 compcert.flocq.Calc.Fcalc_round <> x var
R6270:6273 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R6265:6268 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R6317:6322 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6346:6348 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6323:6327 compcert.flocq.Core.Fcore_generic_fmt <> round def
R6345:6345 compcert.flocq.Calc.Fcalc_round <> x var
R6339:6343 compcert.flocq.Core.Fcore_Raux <> Zceil def
R6334:6337 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R6329:6332 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R6349:6351 compcert.flocq.Core.Fcore_defs <> F2R def
R6354:6358 compcert.flocq.Core.Fcore_defs <> Float constr
R6439:6439 compcert.flocq.Calc.Fcalc_round <> e var
R6366:6374 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R6392:6400 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R6435:6435 compcert.flocq.Calc.Fcalc_round <> m var
R6403:6415 compcert.flocq.Calc.Fcalc_round <> round_sign_UP def
R6432:6432 compcert.flocq.Calc.Fcalc_round <> l var
R6418:6425 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R6427:6427 compcert.flocq.Calc.Fcalc_round <> x var
R6377:6384 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R6386:6386 compcert.flocq.Calc.Fcalc_round <> x var
R6360:6363 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R6282:6296 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R6316:6316 compcert.flocq.Calc.Fcalc_round <> l var
R6308:6311 Coq.Reals.Rbasic_fun <> Rabs def
R6313:6313 compcert.flocq.Calc.Fcalc_round <> x var
R6305:6305 compcert.flocq.Calc.Fcalc_round <> e var
R6303:6303 compcert.flocq.Calc.Fcalc_round <> m var
R6298:6301 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R6512:6520 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R6542:6542 compcert.flocq.Calc.Fcalc_round <> m var
R6523:6535 compcert.flocq.Calc.Fcalc_round <> round_sign_UP def
R6539:6539 compcert.flocq.Calc.Fcalc_round <> l var
R6537:6537 compcert.flocq.Calc.Fcalc_round <> s var
R6456:6481 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R6512:6520 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R6542:6542 compcert.flocq.Calc.Fcalc_round <> m var
R6523:6535 compcert.flocq.Calc.Fcalc_round <> round_sign_UP def
R6539:6539 compcert.flocq.Calc.Fcalc_round <> l var
R6537:6537 compcert.flocq.Calc.Fcalc_round <> s var
R6456:6481 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R6552:6572 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP_sign thm
R6552:6572 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP_sign thm
def 6643:6650 <> round_ZR
R6657:6660 Coq.Init.Datatypes <> bool ind
R6676:6676 compcert.flocq.Calc.Fcalc_round <> l var
R6687:6695 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R6700:6704 Coq.Init.Datatypes <> false constr
R6715:6715 compcert.flocq.Calc.Fcalc_round <> s var
prf 6733:6748 <> inbetween_int_ZR
R6789:6794 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6803:6805 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6795:6800 compcert.flocq.Core.Fcore_Raux <> Ztrunc def
R6802:6802 compcert.flocq.Calc.Fcalc_round <> x var
R6806:6814 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R6844:6844 compcert.flocq.Calc.Fcalc_round <> m var
R6817:6824 compcert.flocq.Calc.Fcalc_round <> round_ZR def
R6841:6841 compcert.flocq.Calc.Fcalc_round <> l var
R6827:6834 Coq.ZArith.Zbool <> Zlt_bool syndef
R6836:6836 compcert.flocq.Calc.Fcalc_round <> m var
R6770:6782 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R6788:6788 compcert.flocq.Calc.Fcalc_round <> l var
R6786:6786 compcert.flocq.Calc.Fcalc_round <> x var
R6784:6784 compcert.flocq.Calc.Fcalc_round <> m var
R6976:6983 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R6976:6983 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R6976:6983 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R6976:6983 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R7011:7016 compcert.flocq.Core.Fcore_Raux <> Ztrunc def
R7039:7041 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7031:7036 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R7039:7041 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7031:7036 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R7052:7061 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R7052:7061 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R7071:7074 Coq.Init.Logic <> conj constr
R7101:7105 Coq.Init.Logic <> proj2 thm
R7077:7082 Coq.Reals.RIneq <> Rlt_le thm
R7089:7093 Coq.Init.Logic <> proj1 thm
R7071:7074 Coq.Init.Logic <> conj constr
R7101:7105 Coq.Init.Logic <> proj2 thm
R7077:7082 Coq.Reals.RIneq <> Rlt_le thm
R7089:7093 Coq.Init.Logic <> proj1 thm
R7121:7135 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R7121:7135 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R7121:7135 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R7121:7135 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R7157:7165 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R7180:7192 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R7216:7228 compcert.flocq.Core.Fcore_Zaux <> Zlt_bool_spec thm
R7255:7264 Coq.Init.Logic <> refl_equal syndef
R7180:7192 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R7216:7228 compcert.flocq.Core.Fcore_Zaux <> Zlt_bool_spec thm
R7216:7228 compcert.flocq.Core.Fcore_Zaux <> Zlt_bool_spec thm
R7255:7264 Coq.Init.Logic <> refl_equal syndef
R7255:7264 Coq.Init.Logic <> refl_equal syndef
R7255:7264 Coq.Init.Logic <> refl_equal syndef
R7255:7264 Coq.Init.Logic <> refl_equal syndef
R7272:7281 Coq.Reals.RIneq <> Rlt_not_le thm
R7272:7281 Coq.Reals.RIneq <> Rlt_not_le thm
R7306:7311 Coq.Reals.RIneq <> Rlt_le thm
R7306:7311 Coq.Reals.RIneq <> Rlt_le thm
R7344:7348 Coq.Init.Logic <> proj1 thm
R7320:7331 Coq.Reals.RIneq <> Rle_lt_trans thm
R7344:7348 Coq.Init.Logic <> proj1 thm
R7320:7331 Coq.Reals.RIneq <> Rle_lt_trans thm
R7366:7371 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R7366:7371 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R7382:7391 Coq.Reals.RIneq <> Rle_not_lt thm
R7382:7391 Coq.Reals.RIneq <> Rle_not_lt thm
R7440:7444 Coq.Init.Logic <> proj2 thm
R7416:7427 Coq.Reals.RIneq <> Rlt_le_trans thm
R7440:7444 Coq.Init.Logic <> proj2 thm
R7416:7427 Coq.Reals.RIneq <> Rlt_le_trans thm
R7458:7463 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R7458:7463 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R7481:7491 Coq.ZArith.Zorder <> Zlt_le_succ thm
R7481:7491 Coq.ZArith.Zorder <> Zlt_le_succ thm
R7516:7525 Coq.Reals.RIneq <> Rlt_not_eq thm
R7516:7525 Coq.Reals.RIneq <> Rlt_not_eq thm
prf 7542:7559 <> inbetween_float_ZR
R7590:7600 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R7612:7612 compcert.flocq.Calc.Fcalc_round <> x var
R7607:7610 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R7602:7605 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R7647:7652 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7677:7679 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7653:7657 compcert.flocq.Core.Fcore_generic_fmt <> round def
R7676:7676 compcert.flocq.Calc.Fcalc_round <> x var
R7669:7674 compcert.flocq.Core.Fcore_Raux <> Ztrunc def
R7664:7667 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R7659:7662 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R7680:7682 compcert.flocq.Core.Fcore_defs <> F2R def
R7685:7689 compcert.flocq.Core.Fcore_defs <> Float constr
R7738:7738 compcert.flocq.Calc.Fcalc_round <> e var
R7697:7705 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R7735:7735 compcert.flocq.Calc.Fcalc_round <> m var
R7708:7715 compcert.flocq.Calc.Fcalc_round <> round_ZR def
R7732:7732 compcert.flocq.Calc.Fcalc_round <> l var
R7718:7725 Coq.ZArith.Zbool <> Zlt_bool syndef
R7727:7727 compcert.flocq.Calc.Fcalc_round <> m var
R7691:7694 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R7619:7633 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R7646:7646 compcert.flocq.Calc.Fcalc_round <> l var
R7644:7644 compcert.flocq.Calc.Fcalc_round <> x var
R7642:7642 compcert.flocq.Calc.Fcalc_round <> e var
R7640:7640 compcert.flocq.Calc.Fcalc_round <> m var
R7635:7638 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R7804:7812 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R7842:7842 compcert.flocq.Calc.Fcalc_round <> m var
R7815:7822 compcert.flocq.Calc.Fcalc_round <> round_ZR def
R7839:7839 compcert.flocq.Calc.Fcalc_round <> l var
R7825:7832 Coq.ZArith.Zbool <> Zlt_bool syndef
R7834:7834 compcert.flocq.Calc.Fcalc_round <> m var
R7755:7775 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R7804:7812 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R7842:7842 compcert.flocq.Calc.Fcalc_round <> m var
R7815:7822 compcert.flocq.Calc.Fcalc_round <> round_ZR def
R7839:7839 compcert.flocq.Calc.Fcalc_round <> l var
R7825:7832 Coq.ZArith.Zbool <> Zlt_bool syndef
R7834:7834 compcert.flocq.Calc.Fcalc_round <> m var
R7755:7775 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R7852:7867 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR thm
R7852:7867 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR thm
prf 7884:7904 <> inbetween_int_ZR_sign
R7952:7957 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7966:7968 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7958:7963 compcert.flocq.Core.Fcore_Raux <> Ztrunc def
R7965:7965 compcert.flocq.Calc.Fcalc_round <> x var
R7969:7977 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R7994:7994 compcert.flocq.Calc.Fcalc_round <> m var
R7980:7987 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R7989:7989 compcert.flocq.Calc.Fcalc_round <> x var
R7926:7938 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R7951:7951 compcert.flocq.Calc.Fcalc_round <> l var
R7943:7946 Coq.Reals.Rbasic_fun <> Rabs def
R7948:7948 compcert.flocq.Calc.Fcalc_round <> x var
R7940:7940 compcert.flocq.Calc.Fcalc_round <> m var
R8035:8040 compcert.flocq.Core.Fcore_Raux <> Ztrunc def
R8053:8062 Coq.Reals.RIneq <> Rlt_le_dec thm
R8053:8062 Coq.Reals.RIneq <> Rlt_le_dec thm
R8095:8107 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R8095:8107 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R8095:8107 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R8139:8143 compcert.flocq.Core.Fcore_Raux <> Zceil def
R8152:8158 Coq.Init.Logic <> f_equal thm
R8152:8158 Coq.Init.Logic <> f_equal thm
R8167:8176 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R8167:8176 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R8190:8198 Coq.Reals.Rbasic_fun <> Rabs_left thm
R8190:8198 Coq.Reals.Rbasic_fun <> Rabs_left thm
R8190:8198 Coq.Reals.Rbasic_fun <> Rabs_left thm
R8222:8237 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R8222:8237 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R8261:8266 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R8261:8266 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R8275:8282 Coq.ZArith.Zorder <> Zlt_succ syndef
R8275:8282 Coq.ZArith.Zorder <> Zlt_succ syndef
R8299:8312 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R8299:8312 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R8299:8312 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R8343:8352 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R8343:8352 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R8366:8376 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R8366:8376 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R8366:8376 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R8400:8415 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R8400:8415 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R8439:8444 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R8439:8444 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R8453:8460 Coq.ZArith.Zorder <> Zlt_succ syndef
R8453:8460 Coq.ZArith.Zorder <> Zlt_succ syndef
prf 8477:8499 <> inbetween_float_ZR_sign
R8530:8540 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R8552:8552 compcert.flocq.Calc.Fcalc_round <> x var
R8547:8550 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R8542:8545 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R8594:8599 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8624:8626 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8600:8604 compcert.flocq.Core.Fcore_generic_fmt <> round def
R8623:8623 compcert.flocq.Calc.Fcalc_round <> x var
R8616:8621 compcert.flocq.Core.Fcore_Raux <> Ztrunc def
R8611:8614 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R8606:8609 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R8627:8629 compcert.flocq.Core.Fcore_defs <> F2R def
R8632:8636 compcert.flocq.Core.Fcore_defs <> Float constr
R8672:8672 compcert.flocq.Calc.Fcalc_round <> e var
R8644:8652 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R8669:8669 compcert.flocq.Calc.Fcalc_round <> m var
R8655:8662 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R8664:8664 compcert.flocq.Calc.Fcalc_round <> x var
R8638:8641 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R8559:8573 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R8593:8593 compcert.flocq.Calc.Fcalc_round <> l var
R8585:8588 Coq.Reals.Rbasic_fun <> Rabs def
R8590:8590 compcert.flocq.Calc.Fcalc_round <> x var
R8582:8582 compcert.flocq.Calc.Fcalc_round <> e var
R8580:8580 compcert.flocq.Calc.Fcalc_round <> m var
R8575:8578 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R8745:8745 compcert.flocq.Calc.Fcalc_round <> m var
R8689:8714 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R8745:8745 compcert.flocq.Calc.Fcalc_round <> m var
R8689:8714 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R8755:8775 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR_sign thm
R8755:8775 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR_sign thm
def 8845:8851 <> round_N
R8858:8861 Coq.Init.Datatypes <> bool ind
R8877:8877 compcert.flocq.Calc.Fcalc_round <> l var
R8888:8896 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R8901:8905 Coq.Init.Datatypes <> false constr
R8911:8921 compcert.flocq.Calc.Fcalc_bracket <> loc_Inexact constr
R8923:8924 Coq.Init.Datatypes <> Lt constr
R8929:8933 Coq.Init.Datatypes <> false constr
R8939:8949 compcert.flocq.Calc.Fcalc_bracket <> loc_Inexact constr
R8951:8952 Coq.Init.Datatypes <> Eq constr
R8957:8957 compcert.flocq.Calc.Fcalc_round <> p var
R8963:8973 compcert.flocq.Calc.Fcalc_bracket <> loc_Inexact constr
R8975:8976 Coq.Init.Datatypes <> Gt constr
R8981:8984 Coq.Init.Datatypes <> true constr
prf 9002:9016 <> inbetween_int_N
R9064:9069 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9087:9089 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9070:9077 compcert.flocq.Core.Fcore_generic_fmt <> Znearest def
R9086:9086 compcert.flocq.Calc.Fcalc_round <> x var
R9079:9084 compcert.flocq.Calc.Fcalc_round <> choice var
R9090:9098 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R9123:9123 compcert.flocq.Calc.Fcalc_round <> m var
R9101:9107 compcert.flocq.Calc.Fcalc_round <> round_N def
R9120:9120 compcert.flocq.Calc.Fcalc_round <> l var
R9110:9115 compcert.flocq.Calc.Fcalc_round <> choice var
R9117:9117 compcert.flocq.Calc.Fcalc_round <> m var
R9045:9057 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R9063:9063 compcert.flocq.Calc.Fcalc_round <> l var
R9061:9061 compcert.flocq.Calc.Fcalc_round <> x var
R9059:9059 compcert.flocq.Calc.Fcalc_round <> m var
R9262:9269 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R9262:9269 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R9262:9269 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R9262:9269 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R9297:9304 compcert.flocq.Core.Fcore_generic_fmt <> Znearest def
R9327:9329 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9319:9324 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R9327:9329 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9319:9324 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R9340:9349 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R9340:9349 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R9359:9362 Coq.Init.Logic <> conj constr
R9389:9393 Coq.Init.Logic <> proj2 thm
R9365:9370 Coq.Reals.RIneq <> Rlt_le thm
R9377:9381 Coq.Init.Logic <> proj1 thm
R9359:9362 Coq.Init.Logic <> conj constr
R9389:9393 Coq.Init.Logic <> proj2 thm
R9365:9370 Coq.Reals.RIneq <> Rlt_le thm
R9377:9381 Coq.Init.Logic <> proj1 thm
R9409:9423 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R9409:9423 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R9409:9423 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R9409:9423 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R9447:9454 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R9469:9469 Coq.Reals.Rdefinitions <> ::R_scope:'/'_x not
R9458:9460 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R9461:9463 compcert.flocq.Core.Fcore_Raux <> Z2R def
R9447:9454 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R9469:9469 Coq.Reals.Rdefinitions <> ::R_scope:'/'_x not
R9458:9460 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R9461:9463 compcert.flocq.Core.Fcore_Raux <> Z2R def
R9520:9527 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R9520:9527 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R9520:9527 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R9542:9556 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R9559:9560 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R9561:9563 compcert.flocq.Core.Fcore_Raux <> Z2R def
R9542:9556 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R9559:9560 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R9561:9563 compcert.flocq.Core.Fcore_Raux <> Z2R def
R9542:9556 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R9559:9560 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R9561:9563 compcert.flocq.Core.Fcore_Raux <> Z2R def
R9578:9584 Coq.Init.Logic <> f_equal thm
R9578:9584 Coq.Init.Logic <> f_equal thm
R9594:9596 compcert.flocq.Core.Fcore_Raux <> Z2R def
R9594:9596 compcert.flocq.Core.Fcore_Raux <> Z2R def
R9631:9640 Coq.Reals.RIneq <> Rlt_not_eq thm
R9631:9640 Coq.Reals.RIneq <> Rlt_not_eq thm
prf 9657:9676 <> inbetween_int_N_sign
R9731:9736 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9754:9756 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9737:9744 compcert.flocq.Core.Fcore_generic_fmt <> Znearest def
R9753:9753 compcert.flocq.Calc.Fcalc_round <> x var
R9746:9751 compcert.flocq.Calc.Fcalc_round <> choice var
R9757:9765 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R9783:9791 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R9869:9869 compcert.flocq.Calc.Fcalc_round <> m var
R9794:9800 compcert.flocq.Calc.Fcalc_round <> round_N def
R9866:9866 compcert.flocq.Calc.Fcalc_round <> l var
R9806:9813 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R9815:9815 compcert.flocq.Calc.Fcalc_round <> x var
R9856:9861 compcert.flocq.Calc.Fcalc_round <> choice var
R9863:9863 compcert.flocq.Calc.Fcalc_round <> m var
R9824:9827 Coq.Init.Datatypes <> negb def
R9830:9835 compcert.flocq.Calc.Fcalc_round <> choice var
R9838:9839 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R9845:9845 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R9841:9843 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R9840:9840 compcert.flocq.Calc.Fcalc_round <> m var
R9768:9775 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R9777:9777 compcert.flocq.Calc.Fcalc_round <> x var
R9705:9717 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R9730:9730 compcert.flocq.Calc.Fcalc_round <> l var
R9722:9725 Coq.Reals.Rbasic_fun <> Rabs def
R9727:9727 compcert.flocq.Calc.Fcalc_round <> x var
R9719:9719 compcert.flocq.Calc.Fcalc_round <> m var
R9953:9956 Coq.Reals.Rbasic_fun <> Rabs def
R9975:9983 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R9975:9983 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R10014:10026 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R10014:10026 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R10014:10026 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R10063:10077 Coq.Reals.RIneq <> Ropp_involutive thm
R10063:10077 Coq.Reals.RIneq <> Ropp_involutive thm
R10063:10077 Coq.Reals.RIneq <> Ropp_involutive thm
R10091:10102 compcert.flocq.Core.Fcore_generic_fmt <> Znearest_opp thm
R10091:10102 compcert.flocq.Core.Fcore_generic_fmt <> Znearest_opp thm
R10091:10102 compcert.flocq.Core.Fcore_generic_fmt <> Znearest_opp thm
R10111:10117 Coq.Init.Logic <> f_equal thm
R10111:10117 Coq.Init.Logic <> f_equal thm
R10176:10183 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R10176:10183 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R10211:10213 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10200:10205 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R10208:10208 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R10211:10213 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10200:10205 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R10208:10208 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R10224:10233 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R10224:10233 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R10243:10246 Coq.Init.Logic <> conj constr
R10273:10277 Coq.Init.Logic <> proj2 thm
R10249:10254 Coq.Reals.RIneq <> Rlt_le thm
R10261:10265 Coq.Init.Logic <> proj1 thm
R10243:10246 Coq.Init.Logic <> conj constr
R10273:10277 Coq.Init.Logic <> proj2 thm
R10249:10254 Coq.Reals.RIneq <> Rlt_le thm
R10261:10265 Coq.Init.Logic <> proj1 thm
R10292:10299 compcert.flocq.Core.Fcore_generic_fmt <> Znearest def
R10310:10324 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10310:10324 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10310:10324 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10310:10324 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10348:10355 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R10372:10372 Coq.Reals.Rdefinitions <> ::R_scope:'/'_x not
R10361:10363 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R10358:10359 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R10364:10366 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10348:10355 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R10372:10372 Coq.Reals.Rdefinitions <> ::R_scope:'/'_x not
R10361:10363 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R10358:10359 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R10364:10366 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10423:10430 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R10423:10430 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R10423:10430 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R10445:10459 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R10472:10472 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R10462:10463 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R10464:10466 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10445:10459 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R10472:10472 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R10462:10463 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R10464:10466 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10445:10459 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R10472:10472 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R10462:10463 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R10464:10466 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10484:10490 Coq.Init.Logic <> f_equal thm
R10484:10490 Coq.Init.Logic <> f_equal thm
R10500:10502 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10500:10502 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10537:10546 Coq.Reals.RIneq <> Rlt_not_eq thm
R10537:10546 Coq.Reals.RIneq <> Rlt_not_eq thm
R10567:10572 Coq.Reals.RIneq <> Rge_le thm
R10567:10572 Coq.Reals.RIneq <> Rge_le thm
R10612:10625 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R10612:10625 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R10612:10625 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R10706:10713 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R10706:10713 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R10738:10740 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10730:10735 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R10738:10740 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10730:10735 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R10751:10760 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R10751:10760 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R10770:10773 Coq.Init.Logic <> conj constr
R10800:10804 Coq.Init.Logic <> proj2 thm
R10776:10781 Coq.Reals.RIneq <> Rlt_le thm
R10788:10792 Coq.Init.Logic <> proj1 thm
R10770:10773 Coq.Init.Logic <> conj constr
R10800:10804 Coq.Init.Logic <> proj2 thm
R10776:10781 Coq.Reals.RIneq <> Rlt_le thm
R10788:10792 Coq.Init.Logic <> proj1 thm
R10819:10826 compcert.flocq.Core.Fcore_generic_fmt <> Znearest def
R10837:10851 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10837:10851 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10837:10851 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10837:10851 compcert.flocq.Core.Fcore_Raux <> Zceil_floor_neq thm
R10875:10882 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R10897:10897 Coq.Reals.Rdefinitions <> ::R_scope:'/'_x not
R10886:10888 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R10889:10891 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10875:10882 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R10897:10897 Coq.Reals.Rdefinitions <> ::R_scope:'/'_x not
R10886:10888 Coq.Reals.Rdefinitions <> ::R_scope:x_'-'_x not
R10889:10891 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10948:10955 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R10948:10955 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R10948:10955 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R10970:10984 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R10987:10988 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R10989:10991 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10970:10984 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R10987:10988 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R10989:10991 compcert.flocq.Core.Fcore_Raux <> Z2R def
R10970:10984 compcert.flocq.Core.Fcore_Raux <> Rcompare_plus_r thm
R10987:10988 Coq.Reals.Rdefinitions <> ::R_scope:'-'_x not
R10989:10991 compcert.flocq.Core.Fcore_Raux <> Z2R def
R11006:11012 Coq.Init.Logic <> f_equal thm
R11006:11012 Coq.Init.Logic <> f_equal thm
R11022:11024 compcert.flocq.Core.Fcore_Raux <> Z2R def
R11022:11024 compcert.flocq.Core.Fcore_Raux <> Z2R def
R11059:11068 Coq.Reals.RIneq <> Rlt_not_eq thm
R11059:11068 Coq.Reals.RIneq <> Rlt_not_eq thm
prf 11140:11155 <> inbetween_int_NE
R11196:11201 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11213:11215 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11202:11210 compcert.flocq.Core.Fcore_rnd_ne <> ZnearestE syndef
R11212:11212 compcert.flocq.Calc.Fcalc_round <> x var
R11216:11224 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R11255:11255 compcert.flocq.Calc.Fcalc_round <> m var
R11227:11233 compcert.flocq.Calc.Fcalc_round <> round_N def
R11252:11252 compcert.flocq.Calc.Fcalc_round <> l var
R11236:11239 Coq.Init.Datatypes <> negb def
R11242:11246 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11248:11248 compcert.flocq.Calc.Fcalc_round <> m var
R11177:11189 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R11195:11195 compcert.flocq.Calc.Fcalc_round <> l var
R11193:11193 compcert.flocq.Calc.Fcalc_round <> x var
R11191:11191 compcert.flocq.Calc.Fcalc_round <> m var
R11333:11336 Coq.Init.Datatypes <> negb def
R11339:11343 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11345:11345 compcert.flocq.Calc.Fcalc_round <> x var
R11292:11306 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N thm
R11333:11336 Coq.Init.Datatypes <> negb def
R11339:11343 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11345:11345 compcert.flocq.Calc.Fcalc_round <> x var
R11292:11306 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N thm
prf 11364:11381 <> inbetween_float_NE
R11412:11422 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R11434:11434 compcert.flocq.Calc.Fcalc_round <> x var
R11429:11432 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R11424:11427 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R11469:11474 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11502:11504 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11475:11479 compcert.flocq.Core.Fcore_generic_fmt <> round def
R11501:11501 compcert.flocq.Calc.Fcalc_round <> x var
R11491:11499 compcert.flocq.Core.Fcore_rnd_ne <> ZnearestE syndef
R11486:11489 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R11481:11484 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R11505:11507 compcert.flocq.Core.Fcore_defs <> F2R def
R11510:11514 compcert.flocq.Core.Fcore_defs <> Float constr
R11564:11564 compcert.flocq.Calc.Fcalc_round <> e var
R11522:11530 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R11561:11561 compcert.flocq.Calc.Fcalc_round <> m var
R11533:11539 compcert.flocq.Calc.Fcalc_round <> round_N def
R11558:11558 compcert.flocq.Calc.Fcalc_round <> l var
R11542:11545 Coq.Init.Datatypes <> negb def
R11548:11552 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11554:11554 compcert.flocq.Calc.Fcalc_round <> m var
R11516:11519 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R11441:11455 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R11468:11468 compcert.flocq.Calc.Fcalc_round <> l var
R11466:11466 compcert.flocq.Calc.Fcalc_round <> x var
R11464:11464 compcert.flocq.Calc.Fcalc_round <> e var
R11462:11462 compcert.flocq.Calc.Fcalc_round <> m var
R11457:11460 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R11630:11638 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R11669:11669 compcert.flocq.Calc.Fcalc_round <> m var
R11641:11647 compcert.flocq.Calc.Fcalc_round <> round_N def
R11666:11666 compcert.flocq.Calc.Fcalc_round <> l var
R11650:11653 Coq.Init.Datatypes <> negb def
R11656:11660 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11662:11662 compcert.flocq.Calc.Fcalc_round <> m var
R11581:11601 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R11630:11638 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R11669:11669 compcert.flocq.Calc.Fcalc_round <> m var
R11641:11647 compcert.flocq.Calc.Fcalc_round <> round_N def
R11666:11666 compcert.flocq.Calc.Fcalc_round <> l var
R11650:11653 Coq.Init.Datatypes <> negb def
R11656:11660 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11662:11662 compcert.flocq.Calc.Fcalc_round <> m var
R11581:11601 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R11679:11694 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE thm
R11679:11694 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE thm
prf 11711:11731 <> inbetween_int_NE_sign
R11779:11784 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11796:11798 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11785:11793 compcert.flocq.Core.Fcore_rnd_ne <> ZnearestE syndef
R11795:11795 compcert.flocq.Calc.Fcalc_round <> x var
R11799:11807 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R11825:11833 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R11864:11864 compcert.flocq.Calc.Fcalc_round <> m var
R11836:11842 compcert.flocq.Calc.Fcalc_round <> round_N def
R11861:11861 compcert.flocq.Calc.Fcalc_round <> l var
R11845:11848 Coq.Init.Datatypes <> negb def
R11851:11855 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11857:11857 compcert.flocq.Calc.Fcalc_round <> m var
R11810:11817 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R11819:11819 compcert.flocq.Calc.Fcalc_round <> x var
R11753:11765 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R11778:11778 compcert.flocq.Calc.Fcalc_round <> l var
R11770:11773 Coq.Reals.Rbasic_fun <> Rabs def
R11775:11775 compcert.flocq.Calc.Fcalc_round <> x var
R11767:11767 compcert.flocq.Calc.Fcalc_round <> m var
R11947:11950 Coq.Init.Datatypes <> negb def
R11953:11957 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11959:11959 compcert.flocq.Calc.Fcalc_round <> x var
R11901:11920 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R11947:11950 Coq.Init.Datatypes <> negb def
R11953:11957 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11959:11959 compcert.flocq.Calc.Fcalc_round <> x var
R11901:11920 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R11947:11950 Coq.Init.Datatypes <> negb def
R11953:11957 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11959:11959 compcert.flocq.Calc.Fcalc_round <> x var
R11901:11920 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R11947:11950 Coq.Init.Datatypes <> negb def
R11953:11957 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R11959:11959 compcert.flocq.Calc.Fcalc_round <> x var
R11901:11920 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R11984:11990 Coq.Init.Logic <> f_equal thm
R11984:11990 Coq.Init.Logic <> f_equal thm
R11998:12005 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R11998:12005 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R12016:12024 compcert.flocq.Core.Fcore_Zaux <> Zeven_opp thm
R12027:12036 compcert.flocq.Core.Fcore_Zaux <> Zeven_plus thm
R12016:12024 compcert.flocq.Core.Fcore_Zaux <> Zeven_opp thm
R12016:12024 compcert.flocq.Core.Fcore_Zaux <> Zeven_opp thm
R12027:12036 compcert.flocq.Core.Fcore_Zaux <> Zeven_plus thm
R12027:12036 compcert.flocq.Core.Fcore_Zaux <> Zeven_plus thm
R12049:12053 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R12049:12053 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R12065:12074 Coq.Init.Logic <> refl_equal syndef
R12065:12074 Coq.Init.Logic <> refl_equal syndef
prf 12091:12113 <> inbetween_float_NE_sign
R12144:12154 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R12166:12166 compcert.flocq.Calc.Fcalc_round <> x var
R12161:12164 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R12156:12159 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R12208:12213 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12241:12243 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12214:12218 compcert.flocq.Core.Fcore_generic_fmt <> round def
R12240:12240 compcert.flocq.Calc.Fcalc_round <> x var
R12230:12238 compcert.flocq.Core.Fcore_rnd_ne <> ZnearestE syndef
R12225:12228 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R12220:12223 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R12244:12246 compcert.flocq.Core.Fcore_defs <> F2R def
R12249:12253 compcert.flocq.Core.Fcore_defs <> Float constr
R12330:12330 compcert.flocq.Calc.Fcalc_round <> e var
R12261:12269 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R12287:12295 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R12326:12326 compcert.flocq.Calc.Fcalc_round <> m var
R12298:12304 compcert.flocq.Calc.Fcalc_round <> round_N def
R12323:12323 compcert.flocq.Calc.Fcalc_round <> l var
R12307:12310 Coq.Init.Datatypes <> negb def
R12313:12317 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R12319:12319 compcert.flocq.Calc.Fcalc_round <> m var
R12272:12279 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R12281:12281 compcert.flocq.Calc.Fcalc_round <> x var
R12255:12258 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R12173:12187 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R12207:12207 compcert.flocq.Calc.Fcalc_round <> l var
R12199:12202 Coq.Reals.Rbasic_fun <> Rabs def
R12204:12204 compcert.flocq.Calc.Fcalc_round <> x var
R12196:12196 compcert.flocq.Calc.Fcalc_round <> e var
R12194:12194 compcert.flocq.Calc.Fcalc_round <> m var
R12189:12192 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R12403:12411 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R12442:12442 compcert.flocq.Calc.Fcalc_round <> m var
R12414:12420 compcert.flocq.Calc.Fcalc_round <> round_N def
R12439:12439 compcert.flocq.Calc.Fcalc_round <> l var
R12423:12426 Coq.Init.Datatypes <> negb def
R12429:12433 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R12435:12435 compcert.flocq.Calc.Fcalc_round <> m var
R12347:12372 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R12403:12411 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R12442:12442 compcert.flocq.Calc.Fcalc_round <> m var
R12414:12420 compcert.flocq.Calc.Fcalc_round <> round_N def
R12439:12439 compcert.flocq.Calc.Fcalc_round <> l var
R12423:12426 Coq.Init.Datatypes <> negb def
R12429:12433 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R12435:12435 compcert.flocq.Calc.Fcalc_round <> m var
R12347:12372 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R12452:12472 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE_sign thm
R12452:12472 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE_sign thm
prf 12544:12559 <> inbetween_int_NA
R12600:12605 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12617:12619 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12606:12614 compcert.flocq.Core.Fcore_generic_fmt <> ZnearestA syndef
R12616:12616 compcert.flocq.Calc.Fcalc_round <> x var
R12620:12628 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R12657:12657 compcert.flocq.Calc.Fcalc_round <> m var
R12631:12637 compcert.flocq.Calc.Fcalc_round <> round_N def
R12654:12654 compcert.flocq.Calc.Fcalc_round <> l var
R12640:12647 Coq.ZArith.Zbool <> Zle_bool syndef
R12651:12651 compcert.flocq.Calc.Fcalc_round <> m var
R12581:12593 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R12599:12599 compcert.flocq.Calc.Fcalc_round <> l var
R12597:12597 compcert.flocq.Calc.Fcalc_round <> x var
R12595:12595 compcert.flocq.Calc.Fcalc_round <> m var
R12735:12742 Coq.ZArith.Zbool <> Zle_bool syndef
R12746:12746 compcert.flocq.Calc.Fcalc_round <> x var
R12694:12708 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N thm
R12735:12742 Coq.ZArith.Zbool <> Zle_bool syndef
R12746:12746 compcert.flocq.Calc.Fcalc_round <> x var
R12694:12708 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N thm
prf 12764:12781 <> inbetween_float_NA
R12812:12822 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R12834:12834 compcert.flocq.Calc.Fcalc_round <> x var
R12829:12832 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R12824:12827 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R12869:12874 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12902:12904 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12875:12879 compcert.flocq.Core.Fcore_generic_fmt <> round def
R12901:12901 compcert.flocq.Calc.Fcalc_round <> x var
R12891:12899 compcert.flocq.Core.Fcore_generic_fmt <> ZnearestA syndef
R12886:12889 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R12881:12884 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R12905:12907 compcert.flocq.Core.Fcore_defs <> F2R def
R12910:12914 compcert.flocq.Core.Fcore_defs <> Float constr
R12962:12962 compcert.flocq.Calc.Fcalc_round <> e var
R12922:12930 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R12959:12959 compcert.flocq.Calc.Fcalc_round <> m var
R12933:12939 compcert.flocq.Calc.Fcalc_round <> round_N def
R12956:12956 compcert.flocq.Calc.Fcalc_round <> l var
R12942:12949 Coq.ZArith.Zbool <> Zle_bool syndef
R12953:12953 compcert.flocq.Calc.Fcalc_round <> m var
R12916:12919 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R12841:12855 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R12868:12868 compcert.flocq.Calc.Fcalc_round <> l var
R12866:12866 compcert.flocq.Calc.Fcalc_round <> x var
R12864:12864 compcert.flocq.Calc.Fcalc_round <> e var
R12862:12862 compcert.flocq.Calc.Fcalc_round <> m var
R12857:12860 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R13028:13036 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R13065:13065 compcert.flocq.Calc.Fcalc_round <> m var
R13039:13045 compcert.flocq.Calc.Fcalc_round <> round_N def
R13062:13062 compcert.flocq.Calc.Fcalc_round <> l var
R13048:13055 Coq.ZArith.Zbool <> Zle_bool syndef
R13059:13059 compcert.flocq.Calc.Fcalc_round <> m var
R12979:12999 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R13028:13036 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R13065:13065 compcert.flocq.Calc.Fcalc_round <> m var
R13039:13045 compcert.flocq.Calc.Fcalc_round <> round_N def
R13062:13062 compcert.flocq.Calc.Fcalc_round <> l var
R13048:13055 Coq.ZArith.Zbool <> Zle_bool syndef
R13059:13059 compcert.flocq.Calc.Fcalc_round <> m var
R12979:12999 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R13075:13090 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NA thm
R13075:13090 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NA thm
prf 13107:13127 <> inbetween_int_NA_sign
R13175:13180 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13192:13194 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13181:13189 compcert.flocq.Core.Fcore_generic_fmt <> ZnearestA syndef
R13191:13191 compcert.flocq.Calc.Fcalc_round <> x var
R13195:13203 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R13221:13229 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R13248:13248 compcert.flocq.Calc.Fcalc_round <> m var
R13232:13238 compcert.flocq.Calc.Fcalc_round <> round_N def
R13245:13245 compcert.flocq.Calc.Fcalc_round <> l var
R13240:13243 Coq.Init.Datatypes <> true constr
R13206:13213 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R13215:13215 compcert.flocq.Calc.Fcalc_round <> x var
R13149:13161 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R13174:13174 compcert.flocq.Calc.Fcalc_round <> l var
R13166:13169 Coq.Reals.Rbasic_fun <> Rabs def
R13171:13171 compcert.flocq.Calc.Fcalc_round <> x var
R13163:13163 compcert.flocq.Calc.Fcalc_round <> m var
R13322:13329 Coq.ZArith.Zbool <> Zle_bool syndef
R13285:13304 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R13322:13329 Coq.ZArith.Zbool <> Zle_bool syndef
R13285:13304 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R13322:13329 Coq.ZArith.Zbool <> Zle_bool syndef
R13285:13304 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R13322:13329 Coq.ZArith.Zbool <> Zle_bool syndef
R13285:13304 compcert.flocq.Calc.Fcalc_round <> inbetween_int_N_sign thm
R13355:13361 Coq.Init.Logic <> f_equal thm
R13355:13361 Coq.Init.Logic <> f_equal thm
R13378:13381 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13378:13381 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R13395:13405 Coq.ZArith.Zorder <> Zlt_succ_le thm
R13395:13405 Coq.ZArith.Zorder <> Zlt_succ_le thm
R13414:13419 compcert.flocq.Core.Fcore_Raux <> lt_Z2R thm
R13414:13419 compcert.flocq.Core.Fcore_Raux <> lt_Z2R thm
R13447:13450 Coq.Reals.Rbasic_fun <> Rabs def
R13428:13439 Coq.Reals.RIneq <> Rle_lt_trans thm
R13447:13450 Coq.Reals.Rbasic_fun <> Rabs def
R13428:13439 Coq.Reals.RIneq <> Rle_lt_trans thm
R13462:13469 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R13462:13469 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R13480:13484 Coq.Init.Logic <> proj2 thm
R13487:13502 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R13480:13484 Coq.Init.Logic <> proj2 thm
R13487:13502 compcert.flocq.Calc.Fcalc_bracket <> inbetween_bounds thm
R13526:13531 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R13526:13531 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R13540:13547 Coq.ZArith.Zorder <> Zlt_succ syndef
R13540:13547 Coq.ZArith.Zorder <> Zlt_succ syndef
R13558:13570 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_true thm
R13558:13570 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_true thm
R13558:13570 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_true thm
R13596:13609 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_false thm
R13596:13609 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_false thm
R13596:13609 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_false thm
R13596:13609 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_false thm
R13621:13628 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R13621:13628 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
def 13655:13666 <> truncate_aux
R13695:13695 compcert.flocq.Calc.Fcalc_round <> t var
R13682:13682 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13684:13685 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13687:13688 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13690:13690 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13711:13716 Coq.ZArith.Zpow_def <> Zpower syndef
R13723:13723 compcert.flocq.Calc.Fcalc_round <> k var
R13718:13721 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R13730:13730 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13739:13740 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13750:13751 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13779:13779 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13731:13734 Coq.ZArith.Zdiv <> Zdiv syndef
R13738:13738 compcert.flocq.Calc.Fcalc_round <> p var
R13743:13745 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13746:13746 compcert.flocq.Calc.Fcalc_round <> k var
R13752:13763 compcert.flocq.Calc.Fcalc_bracket <> new_location def
R13768:13771 Coq.ZArith.Zdiv <> Zmod syndef
R13775:13775 compcert.flocq.Calc.Fcalc_round <> p var
R13765:13765 compcert.flocq.Calc.Fcalc_round <> p var
prf 13791:13807 <> truncate_aux_comp
R13841:13846 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13857:13862 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13887:13889 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13863:13874 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R13881:13883 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13879:13880 compcert.flocq.Calc.Fcalc_round <> k1 var
R13884:13885 compcert.flocq.Calc.Fcalc_round <> k2 var
R13876:13876 compcert.flocq.Calc.Fcalc_round <> t var
R13890:13901 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R13923:13924 compcert.flocq.Calc.Fcalc_round <> k2 var
R13904:13915 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R13919:13920 compcert.flocq.Calc.Fcalc_round <> k1 var
R13917:13917 compcert.flocq.Calc.Fcalc_round <> t var
R13849:13851 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13852:13853 compcert.flocq.Calc.Fcalc_round <> k2 var
R13833:13835 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13836:13837 compcert.flocq.Calc.Fcalc_round <> k1 var
R13973:13984 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R13997:14014 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_ex thm
R14016:14019 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R13997:14014 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_ex thm
R14016:14019 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R14053:14080 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R14053:14080 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R14118:14120 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R14123:14125 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14118:14120 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R14123:14125 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14141:14142 Coq.Numbers.BinNums <> Z0 constr
R14151:14153 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14141:14142 Coq.Numbers.BinNums <> Z0 constr
R14151:14153 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14170:14184 Coq.ZArith.Zorder <> Zplus_lt_compat syndef
R14170:14184 Coq.ZArith.Zorder <> Zplus_lt_compat syndef
R14201:14228 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R14201:14228 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R14265:14292 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R14265:14292 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R14323:14333 Coq.ZArith.BinInt <> Zplus_assoc syndef
R14323:14333 Coq.ZArith.BinInt <> Zplus_assoc syndef
R14323:14333 Coq.ZArith.BinInt <> Zplus_assoc syndef
R14352:14373 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_unique thm
R14352:14373 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_unique thm
R14416:14426 Coq.ZArith.BinInt <> Zplus_assoc syndef
R14416:14426 Coq.ZArith.BinInt <> Zplus_assoc syndef
R14416:14426 Coq.ZArith.BinInt <> Zplus_assoc syndef
def 14617:14624 <> truncate
R14651:14651 compcert.flocq.Calc.Fcalc_round <> t var
R14638:14638 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14640:14641 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14643:14644 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14646:14646 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14693:14695 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R14668:14671 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R14688:14690 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14674:14680 compcert.flocq.Core.Fcore_digits <> Zdigits def
R14682:14685 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R14709:14716 Coq.ZArith.Zbool <> Zlt_bool syndef
R14720:14720 compcert.flocq.Calc.Fcalc_round <> k var
R14751:14751 compcert.flocq.Calc.Fcalc_round <> t var
R14727:14738 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R14742:14742 compcert.flocq.Calc.Fcalc_round <> k var
R14740:14740 compcert.flocq.Calc.Fcalc_round <> t var
prf 14763:14772 <> truncate_0
R14813:14820 compcert.flocq.Calc.Fcalc_round <> truncate def
R14822:14822 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14824:14825 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14827:14828 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14830:14830 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14826:14826 compcert.flocq.Calc.Fcalc_round <> e var
R14829:14829 compcert.flocq.Calc.Fcalc_round <> l var
R14797:14797 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14800:14801 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14804:14805 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14808:14808 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14841:14843 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14844:14845 Coq.Numbers.BinNums <> Z0 constr
R14874:14881 compcert.flocq.Calc.Fcalc_round <> truncate def
R14889:14896 Coq.ZArith.Zbool <> Zlt_bool syndef
R14889:14896 Coq.ZArith.Zbool <> Zlt_bool syndef
R14912:14919 Coq.ZArith.Zdiv <> Zdiv_0_l thm
R14912:14919 Coq.ZArith.Zdiv <> Zdiv_0_l thm
R14928:14937 Coq.Init.Logic <> refl_equal syndef
R14928:14937 Coq.Init.Logic <> refl_equal syndef
prf 14954:14976 <> generic_format_truncate
R15008:15013 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15035:15042 compcert.flocq.Calc.Fcalc_round <> truncate def
R15044:15044 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15046:15047 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15049:15050 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15052:15052 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15045:15045 compcert.flocq.Calc.Fcalc_round <> m var
R15048:15048 compcert.flocq.Calc.Fcalc_round <> e var
R15051:15051 compcert.flocq.Calc.Fcalc_round <> l var
R15019:15019 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15022:15023 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15026:15027 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15030:15030 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15059:15064 compcert.flocq.Calc.Fcalc_round <> format syndef
R15067:15069 compcert.flocq.Core.Fcore_defs <> F2R def
R15072:15076 compcert.flocq.Core.Fcore_defs <> Float constr
R15078:15081 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15000:15003 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R15004:15004 compcert.flocq.Calc.Fcalc_round <> m var
R15123:15130 compcert.flocq.Calc.Fcalc_round <> truncate def
R15169:15171 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R15144:15147 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R15164:15166 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15150:15156 compcert.flocq.Core.Fcore_digits <> Zdigits def
R15158:15161 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15169:15171 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R15144:15147 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R15164:15166 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15150:15156 compcert.flocq.Core.Fcore_digits <> Zdigits def
R15158:15161 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15184:15196 compcert.flocq.Core.Fcore_Zaux <> Zlt_bool_spec thm
R15184:15196 compcert.flocq.Core.Fcore_Zaux <> Zlt_bool_spec thm
R15224:15235 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R15244:15261 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R15244:15261 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R15282:15292 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R15303:15321 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R15303:15321 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R15303:15321 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R15347:15364 compcert.flocq.Core.Fcore_digits <> Zdigits_div_Zpower thm
R15347:15364 compcert.flocq.Core.Fcore_digits <> Zdigits_div_Zpower thm
R15347:15364 compcert.flocq.Core.Fcore_digits <> Zdigits_div_Zpower thm
R15347:15364 compcert.flocq.Core.Fcore_digits <> Zdigits_div_Zpower thm
R15409:15412 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15418:15418 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15405:15407 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R15391:15397 compcert.flocq.Core.Fcore_digits <> Zdigits def
R15399:15402 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15414:15416 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15443:15445 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15429:15435 compcert.flocq.Core.Fcore_digits <> Zdigits def
R15437:15440 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15409:15412 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15418:15418 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15405:15407 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R15391:15397 compcert.flocq.Core.Fcore_digits <> Zdigits def
R15399:15402 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15414:15416 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15443:15445 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15429:15435 compcert.flocq.Core.Fcore_digits <> Zdigits def
R15437:15440 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15491:15498 Coq.ZArith.Zorder <> Zle_refl syndef
R15491:15498 Coq.ZArith.Zorder <> Zle_refl syndef
R15518:15528 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R15518:15528 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R15537:15546 Coq.ZArith.Zorder <> Znot_gt_le thm
R15537:15546 Coq.ZArith.Zorder <> Znot_gt_le thm
R15570:15579 Coq.ZArith.Zdiv <> Zdiv_small thm
R15570:15579 Coq.ZArith.Zdiv <> Zdiv_small thm
R15588:15591 Coq.Init.Logic <> conj constr
R15588:15591 Coq.Init.Logic <> conj constr
R15620:15626 Coq.ZArith.Zabs <> Zabs_eq syndef
R15620:15626 Coq.ZArith.Zabs <> Zabs_eq syndef
R15620:15626 Coq.ZArith.Zabs <> Zabs_eq syndef
R15650:15666 compcert.flocq.Core.Fcore_digits <> Zpower_gt_Zdigits thm
R15650:15666 compcert.flocq.Core.Fcore_digits <> Zpower_gt_Zdigits thm
R15675:15685 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R15675:15685 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R15698:15703 Coq.ZArith.Zorder <> Zgt_lt syndef
R15698:15703 Coq.ZArith.Zorder <> Zgt_lt syndef
R15722:15733 Coq.ZArith.Zorder <> Zle_lt_or_eq thm
R15722:15733 Coq.ZArith.Zorder <> Zle_lt_or_eq thm
R15763:15780 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R15763:15780 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R15790:15800 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R15811:15829 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R15811:15829 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R15811:15829 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R15811:15829 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R15845:15854 compcert.flocq.Core.Fcore_Zaux <> Zgt_not_eq thm
R15845:15854 compcert.flocq.Core.Fcore_Zaux <> Zgt_not_eq thm
R15907:15911 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R15907:15911 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R15907:15911 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R15920:15935 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_0 thm
R15920:15935 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_0 thm
prf 15952:15974 <> truncate_correct_format
R16001:16006 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16016:16018 compcert.flocq.Core.Fcore_defs <> F2R def
R16021:16025 compcert.flocq.Core.Fcore_defs <> Float constr
R16034:16034 compcert.flocq.Calc.Fcalc_round <> e var
R16032:16032 compcert.flocq.Calc.Fcalc_round <> m var
R16027:16030 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16068:16073 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16108:16113 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16135:16142 compcert.flocq.Calc.Fcalc_round <> truncate def
R16144:16144 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16146:16147 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16149:16150 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16160:16160 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16145:16145 compcert.flocq.Calc.Fcalc_round <> m var
R16148:16148 compcert.flocq.Calc.Fcalc_round <> e var
R16151:16159 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R16119:16119 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16122:16123 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16126:16127 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16130:16130 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16193:16196 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R16168:16170 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16167:16167 compcert.flocq.Calc.Fcalc_round <> x var
R16171:16173 compcert.flocq.Core.Fcore_defs <> F2R def
R16176:16180 compcert.flocq.Core.Fcore_defs <> Float constr
R16182:16185 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16199:16201 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16202:16212 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R16224:16224 compcert.flocq.Calc.Fcalc_round <> x var
R16219:16222 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16214:16217 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16076:16079 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R16075:16075 compcert.flocq.Calc.Fcalc_round <> e var
R16080:16083 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16100:16102 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16086:16092 compcert.flocq.Core.Fcore_digits <> Zdigits def
R16099:16099 compcert.flocq.Calc.Fcalc_round <> m var
R16094:16097 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16103:16103 compcert.flocq.Calc.Fcalc_round <> e var
R16042:16055 compcert.flocq.Core.Fcore_generic_fmt <> generic_format def
R16067:16067 compcert.flocq.Calc.Fcalc_round <> x var
R16062:16065 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16057:16060 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R15995:15998 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R15994:15994 compcert.flocq.Calc.Fcalc_round <> m var
R15999:16000 Coq.Numbers.BinNums <> Z0 constr
R16292:16294 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16269:16279 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R16286:16289 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16281:16284 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16295:16298 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16315:16317 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16301:16307 compcert.flocq.Core.Fcore_digits <> Zdigits def
R16309:16312 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16292:16294 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16269:16279 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R16286:16289 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16281:16284 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16295:16298 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16315:16317 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16301:16307 compcert.flocq.Core.Fcore_digits <> Zdigits def
R16309:16312 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16330:16340 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R16358:16376 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R16358:16376 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R16358:16376 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R16358:16376 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R16386:16393 compcert.flocq.Calc.Fcalc_round <> truncate def
R16445:16447 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16422:16432 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R16439:16442 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16434:16437 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16445:16447 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16422:16432 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R16439:16442 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16434:16437 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16460:16472 compcert.flocq.Core.Fcore_Zaux <> Zlt_bool_spec thm
R16460:16472 compcert.flocq.Core.Fcore_Zaux <> Zlt_bool_spec thm
R16500:16511 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R16551:16553 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16544:16546 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16554:16564 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R16571:16574 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16566:16569 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16551:16553 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16544:16546 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16554:16564 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R16571:16574 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16566:16569 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16604:16607 Coq.Init.Logic <> conj constr
R16604:16607 Coq.Init.Logic <> conj constr
R16635:16647 compcert.flocq.Core.Fcore_float_prop <> F2R_eq_compat thm
R16635:16647 compcert.flocq.Core.Fcore_float_prop <> F2R_eq_compat thm
R16659:16673 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R16680:16683 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16675:16678 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16694:16696 compcert.flocq.Core.Fcore_Raux <> Z2R def
R16699:16704 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R16707:16721 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R16728:16731 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16723:16726 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16659:16673 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R16680:16683 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16675:16678 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16694:16696 compcert.flocq.Core.Fcore_Raux <> Z2R def
R16699:16704 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R16707:16721 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R16728:16731 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R16723:16726 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16747:16756 compcert.flocq.Core.Fcore_Raux <> Ztrunc_Z2R thm
R16747:16756 compcert.flocq.Core.Fcore_Raux <> Ztrunc_Z2R thm
R16747:16756 compcert.flocq.Core.Fcore_Raux <> Ztrunc_Z2R thm
R16766:16780 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R16807:16809 compcert.flocq.Core.Fcore_defs <> F2R def
R16827:16837 Coq.Reals.Raxioms <> Rmult_assoc prfax
R16843:16851 compcert.flocq.Core.Fcore_Raux <> bpow_plus thm
R16827:16837 Coq.Reals.Raxioms <> Rmult_assoc prfax
R16827:16837 Coq.Reals.Raxioms <> Rmult_assoc prfax
R16843:16851 compcert.flocq.Core.Fcore_Raux <> bpow_plus thm
R16843:16851 compcert.flocq.Core.Fcore_Raux <> bpow_plus thm
R16870:16872 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16873:16875 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R16881:16881 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R16877:16879 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16870:16872 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16873:16875 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R16881:16881 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R16877:16879 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16947:16956 compcert.flocq.Core.Fcore_Raux <> Zfloor_div thm
R16947:16956 compcert.flocq.Core.Fcore_Raux <> Zfloor_div thm
R16981:16995 compcert.flocq.Core.Fcore_Zaux <> Zpower_pos_gt_0 thm
R16997:17000 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17006:17020 Coq.ZArith.Zbool <> Zle_bool_imp_le thm
R17027:17036 compcert.flocq.Core.Fcore_Zaux <> radix_prop proj
R17038:17041 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R16981:16995 compcert.flocq.Core.Fcore_Zaux <> Zpower_pos_gt_0 thm
R16997:17000 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17006:17020 Coq.ZArith.Zbool <> Zle_bool_imp_le thm
R17027:17036 compcert.flocq.Core.Fcore_Zaux <> radix_prop proj
R17038:17041 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17061:17083 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_generic thm
R17061:17083 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_generic thm
R17061:17083 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa_generic thm
R17113:17122 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R17113:17122 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R17113:17122 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R17144:17153 Coq.Init.Logic <> refl_equal syndef
R17144:17153 Coq.Init.Logic <> refl_equal syndef
prf 17193:17216 <> truncate_correct_partial
R17249:17254 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17283:17288 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17323:17328 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17350:17357 compcert.flocq.Calc.Fcalc_round <> truncate def
R17359:17359 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17361:17362 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17364:17365 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17367:17367 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17360:17360 compcert.flocq.Calc.Fcalc_round <> m var
R17363:17363 compcert.flocq.Calc.Fcalc_round <> e var
R17366:17366 compcert.flocq.Calc.Fcalc_round <> l var
R17334:17334 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17337:17338 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17341:17342 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17345:17345 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17405:17408 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17374:17388 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R17401:17401 compcert.flocq.Calc.Fcalc_round <> x var
R17390:17393 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17411:17413 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17414:17424 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R17436:17436 compcert.flocq.Calc.Fcalc_round <> x var
R17431:17434 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R17426:17429 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17291:17294 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R17290:17290 compcert.flocq.Calc.Fcalc_round <> e var
R17295:17298 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R17315:17317 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17301:17307 compcert.flocq.Core.Fcore_digits <> Zdigits def
R17314:17314 compcert.flocq.Calc.Fcalc_round <> m var
R17309:17312 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17318:17318 compcert.flocq.Calc.Fcalc_round <> e var
R17255:17269 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R17282:17282 compcert.flocq.Calc.Fcalc_round <> l var
R17280:17280 compcert.flocq.Calc.Fcalc_round <> x var
R17278:17278 compcert.flocq.Calc.Fcalc_round <> e var
R17276:17276 compcert.flocq.Calc.Fcalc_round <> m var
R17271:17274 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17242:17244 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x not
R17245:17245 compcert.flocq.Calc.Fcalc_round <> x var
R17478:17485 compcert.flocq.Calc.Fcalc_round <> truncate def
R17524:17526 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R17499:17502 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R17519:17521 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17505:17511 compcert.flocq.Core.Fcore_digits <> Zdigits def
R17513:17516 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17524:17526 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R17499:17502 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R17519:17521 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17505:17511 compcert.flocq.Core.Fcore_digits <> Zdigits def
R17513:17516 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17544:17549 Coq.ZArith.Zpow_def <> Zpower syndef
R17551:17554 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17544:17549 Coq.ZArith.Zpow_def <> Zpower syndef
R17551:17554 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17600:17603 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x_'<'_x not
R17605:17607 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x_'<'_x not
R17580:17582 compcert.flocq.Core.Fcore_defs <> F2R def
R17585:17589 compcert.flocq.Core.Fcore_defs <> Float constr
R17591:17594 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17608:17610 compcert.flocq.Core.Fcore_defs <> F2R def
R17613:17617 compcert.flocq.Core.Fcore_defs <> Float constr
R17626:17628 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17619:17622 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17600:17603 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x_'<'_x not
R17605:17607 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x_'<'_x not
R17580:17582 compcert.flocq.Core.Fcore_defs <> F2R def
R17585:17589 compcert.flocq.Core.Fcore_defs <> Float constr
R17591:17594 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17608:17610 compcert.flocq.Core.Fcore_defs <> F2R def
R17613:17617 compcert.flocq.Core.Fcore_defs <> Float constr
R17626:17628 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17619:17622 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17646:17667 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_bounds thm
R17646:17667 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_bounds thm
R17705:17708 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R17705:17708 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R17722:17724 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R17726:17728 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17722:17724 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R17726:17728 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17764:17767 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17748:17757 compcert.flocq.Core.Fcore_float_prop <> F2R_lt_reg thm
R17764:17767 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17748:17757 compcert.flocq.Core.Fcore_float_prop <> F2R_lt_reg thm
R17780:17784 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R17780:17784 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R17780:17784 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R17793:17801 Coq.Reals.Raxioms <> Rlt_trans prfax
R17793:17801 Coq.Reals.Raxioms <> Rlt_trans prfax
R17849:17851 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17845:17847 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17852:17862 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R17869:17872 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R17864:17867 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17849:17851 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17845:17847 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17852:17862 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R17869:17872 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R17864:17867 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R17896:17906 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R17919:17930 Coq.ZArith.Zorder <> Zle_lt_or_eq thm
R17919:17930 Coq.ZArith.Zorder <> Zle_lt_or_eq thm
R17977:17994 compcert.flocq.Core.Fcore_float_prop <> ln_beta_F2R_bounds thm
R17977:17994 compcert.flocq.Core.Fcore_float_prop <> ln_beta_F2R_bounds thm
R17977:17994 compcert.flocq.Core.Fcore_float_prop <> ln_beta_F2R_bounds thm
R18036:18039 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R18040:18041 Coq.Numbers.BinNums <> Z0 constr
R18036:18039 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R18040:18041 Coq.Numbers.BinNums <> Z0 constr
R18051:18060 Coq.Init.Logic <> sym_not_eq syndef
R18051:18060 Coq.Init.Logic <> sym_not_eq syndef
R18073:18082 Coq.ZArith.Zorder <> Zlt_not_eq syndef
R18073:18082 Coq.ZArith.Zorder <> Zlt_not_eq syndef
R18093:18103 compcert.flocq.Core.Fcore_float_prop <> ln_beta_F2R thm
R18093:18103 compcert.flocq.Core.Fcore_float_prop <> ln_beta_F2R thm
R18093:18103 compcert.flocq.Core.Fcore_float_prop <> ln_beta_F2R thm
R18131:18145 compcert.flocq.Calc.Fcalc_digits <> Zdigits_ln_beta thm
R18131:18145 compcert.flocq.Calc.Fcalc_digits <> Zdigits_ln_beta thm
R18131:18145 compcert.flocq.Calc.Fcalc_digits <> Zdigits_ln_beta thm
R18225:18231 compcert.flocq.Core.Fcore_Raux <> ln_beta def
R18233:18236 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R18225:18231 compcert.flocq.Core.Fcore_Raux <> ln_beta def
R18233:18236 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R18279:18288 Coq.Reals.RIneq <> Rgt_not_eq thm
R18279:18288 Coq.Reals.RIneq <> Rgt_not_eq thm
R18354:18359 Coq.Init.Logic <> sym_eq syndef
R18354:18359 Coq.Init.Logic <> sym_eq syndef
R18368:18376 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.valid_exp var
R18368:18376 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.valid_exp var
R18395:18403 Coq.ZArith.Zorder <> Zle_trans syndef
R18395:18403 Coq.ZArith.Zorder <> Zle_trans syndef
R18420:18431 compcert.flocq.Core.Fcore_Raux <> bpow_lt_bpow thm
R18420:18431 compcert.flocq.Core.Fcore_Raux <> bpow_lt_bpow thm
R18464:18468 Coq.Init.Logic <> proj1 thm
R18440:18451 Coq.Reals.RIneq <> Rle_lt_trans thm
R18464:18468 Coq.Init.Logic <> proj1 thm
R18440:18451 Coq.Reals.RIneq <> Rle_lt_trans thm
R18484:18494 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R18484:18494 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R18484:18494 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R18484:18494 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R18508:18515 compcert.flocq.Core.Fcore_float_prop <> F2R_bpow thm
R18508:18515 compcert.flocq.Core.Fcore_float_prop <> F2R_bpow thm
R18508:18515 compcert.flocq.Core.Fcore_float_prop <> F2R_bpow thm
R18562:18567 Coq.Reals.RIneq <> Rlt_le thm
R18562:18567 Coq.Reals.RIneq <> Rlt_le thm
R18600:18608 Coq.ZArith.Zbool <> Zlt_cases thm
R18600:18608 Coq.ZArith.Zbool <> Zlt_cases thm
R18622:18629 Coq.ZArith.Zbool <> Zlt_bool syndef
R18622:18629 Coq.ZArith.Zbool <> Zlt_bool syndef
R18683:18710 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R18683:18710 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
prf 18786:18801 <> truncate_correct
R18835:18840 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18869:18874 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18926:18931 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18953:18960 compcert.flocq.Calc.Fcalc_round <> truncate def
R18962:18962 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18964:18965 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18967:18968 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18970:18970 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18963:18963 compcert.flocq.Calc.Fcalc_round <> m var
R18966:18966 compcert.flocq.Calc.Fcalc_round <> e var
R18969:18969 compcert.flocq.Calc.Fcalc_round <> l var
R18937:18937 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18940:18941 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18944:18945 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18948:18948 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19008:19014 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R19075:19075 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R18977:18991 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R19004:19004 compcert.flocq.Calc.Fcalc_round <> x var
R18993:18996 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19043:19047 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19074:19074 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19017:19019 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19020:19030 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R19042:19042 compcert.flocq.Calc.Fcalc_round <> x var
R19037:19040 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R19032:19035 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19062:19065 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R19050:19052 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19053:19061 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R19066:19071 compcert.flocq.Calc.Fcalc_round <> format syndef
R19073:19073 compcert.flocq.Calc.Fcalc_round <> x var
R18909:18912 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R18877:18880 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R18876:18876 compcert.flocq.Calc.Fcalc_round <> e var
R18881:18884 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R18901:18903 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18887:18893 compcert.flocq.Core.Fcore_digits <> Zdigits def
R18900:18900 compcert.flocq.Calc.Fcalc_round <> m var
R18895:18898 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R18904:18904 compcert.flocq.Calc.Fcalc_round <> e var
R18914:18916 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18913:18913 compcert.flocq.Calc.Fcalc_round <> l var
R18917:18925 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R18841:18855 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R18868:18868 compcert.flocq.Calc.Fcalc_round <> l var
R18866:18866 compcert.flocq.Calc.Fcalc_round <> x var
R18864:18864 compcert.flocq.Calc.Fcalc_round <> e var
R18862:18862 compcert.flocq.Calc.Fcalc_round <> m var
R18857:18860 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R18827:18830 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R18831:18831 compcert.flocq.Calc.Fcalc_round <> x var
R19137:19145 Coq.ZArith.Zorder <> Zle_or_lt syndef
R19150:19153 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R19170:19172 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R19156:19162 compcert.flocq.Core.Fcore_digits <> Zdigits def
R19164:19167 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19137:19145 Coq.ZArith.Zorder <> Zle_or_lt syndef
R19150:19153 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R19170:19172 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R19156:19162 compcert.flocq.Core.Fcore_digits <> Zdigits def
R19164:19167 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19224:19247 compcert.flocq.Calc.Fcalc_round <> truncate_correct_partial thm
R19224:19247 compcert.flocq.Calc.Fcalc_round <> truncate_correct_partial thm
R19278:19285 compcert.flocq.Calc.Fcalc_round <> truncate def
R19287:19287 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19289:19290 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19292:19293 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19295:19295 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19278:19285 compcert.flocq.Calc.Fcalc_round <> truncate def
R19287:19287 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19289:19290 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19292:19293 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19295:19295 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19431:19440 Coq.ZArith.Zorder <> Zlt_irrefl syndef
R19431:19440 Coq.ZArith.Zorder <> Zlt_irrefl syndef
R19456:19467 Coq.ZArith.Zorder <> Zle_lt_trans syndef
R19456:19467 Coq.ZArith.Zorder <> Zle_lt_trans syndef
R19515:19522 compcert.flocq.Calc.Fcalc_round <> truncate def
R19537:19545 Coq.ZArith.Zbool <> Zlt_cases thm
R19575:19577 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R19550:19553 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R19570:19572 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R19556:19562 compcert.flocq.Core.Fcore_digits <> Zdigits def
R19564:19567 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19537:19545 Coq.ZArith.Zbool <> Zlt_cases thm
R19575:19577 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R19550:19553 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R19570:19572 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R19556:19562 compcert.flocq.Core.Fcore_digits <> Zdigits def
R19564:19567 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19588:19595 Coq.ZArith.Zbool <> Zlt_bool syndef
R19588:19595 Coq.ZArith.Zbool <> Zlt_bool syndef
R19614:19622 Coq.Init.Logic <> False_ind scheme
R19614:19622 Coq.Init.Logic <> False_ind scheme
R19679:19688 Coq.Init.Logic <> refl_equal syndef
R19679:19688 Coq.Init.Logic <> refl_equal syndef
R19728:19745 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R19728:19745 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R19766:19776 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R19787:19805 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R19787:19805 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R19787:19805 compcert.flocq.Calc.Fcalc_digits <> ln_beta_F2R_Zdigits thm
R19833:19843 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R19833:19843 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R19871:19873 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19874:19875 Coq.Numbers.BinNums <> Z0 constr
R19871:19873 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19874:19875 Coq.Numbers.BinNums <> Z0 constr
R19885:19888 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19890:19892 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19894:19896 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R19885:19888 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19890:19892 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19894:19896 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R19944:19947 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x_'<'_x not
R19949:19951 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x_'<'_x not
R19924:19926 compcert.flocq.Core.Fcore_defs <> F2R def
R19929:19933 compcert.flocq.Core.Fcore_defs <> Float constr
R19935:19938 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19952:19954 compcert.flocq.Core.Fcore_defs <> F2R def
R19957:19961 compcert.flocq.Core.Fcore_defs <> Float constr
R19970:19972 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R19963:19966 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19944:19947 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x_'<'_x not
R19949:19951 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x_'<'_x not
R19924:19926 compcert.flocq.Core.Fcore_defs <> F2R def
R19929:19933 compcert.flocq.Core.Fcore_defs <> Float constr
R19935:19938 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19952:19954 compcert.flocq.Core.Fcore_defs <> F2R def
R19957:19961 compcert.flocq.Core.Fcore_defs <> Float constr
R19970:19972 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R19963:19966 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R19990:20011 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_bounds thm
R19990:20011 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_bounds thm
R20088:20092 Coq.Init.Logic <> proj1 thm
R20064:20075 compcert.flocq.Core.Fcore_float_prop <> F2R_le_0_reg thm
R20088:20092 Coq.Init.Logic <> proj1 thm
R20064:20075 compcert.flocq.Core.Fcore_float_prop <> F2R_le_0_reg thm
R20130:20134 Coq.Init.Logic <> proj2 thm
R20106:20117 compcert.flocq.Core.Fcore_float_prop <> F2R_gt_0_reg thm
R20130:20134 Coq.Init.Logic <> proj2 thm
R20106:20117 compcert.flocq.Core.Fcore_float_prop <> F2R_gt_0_reg thm
R20218:20224 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R20227:20228 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R20256:20258 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20229:20236 compcert.flocq.Calc.Fcalc_round <> truncate def
R20238:20238 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20241:20242 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20244:20245 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20255:20255 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20239:20240 Coq.Numbers.BinNums <> Z0 constr
R20246:20254 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R20259:20259 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20262:20263 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20266:20267 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20277:20277 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20260:20261 Coq.Numbers.BinNums <> Z0 constr
R20264:20265 compcert.flocq.Calc.Fcalc_round <> e' var
R20268:20276 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R20218:20224 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R20227:20228 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R20256:20258 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20229:20236 compcert.flocq.Calc.Fcalc_round <> truncate def
R20238:20238 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20241:20242 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20244:20245 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20255:20255 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20239:20240 Coq.Numbers.BinNums <> Z0 constr
R20246:20254 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R20259:20259 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20262:20263 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20266:20267 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20277:20277 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20260:20261 Coq.Numbers.BinNums <> Z0 constr
R20264:20265 compcert.flocq.Calc.Fcalc_round <> e' var
R20268:20276 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R20288:20295 compcert.flocq.Calc.Fcalc_round <> truncate def
R20298:20309 compcert.flocq.Calc.Fcalc_round <> truncate_aux def
R20317:20324 Coq.ZArith.Zbool <> Zlt_bool syndef
R20317:20324 Coq.ZArith.Zbool <> Zlt_bool syndef
R20335:20342 Coq.ZArith.Zdiv <> Zdiv_0_l thm
R20345:20352 Coq.ZArith.Zdiv <> Zmod_0_l thm
R20335:20342 Coq.ZArith.Zdiv <> Zdiv_0_l thm
R20335:20342 Coq.ZArith.Zdiv <> Zdiv_0_l thm
R20345:20352 Coq.ZArith.Zdiv <> Zmod_0_l thm
R20345:20352 Coq.ZArith.Zdiv <> Zmod_0_l thm
R20370:20376 Coq.Init.Logic <> f_equal thm
R20370:20376 Coq.Init.Logic <> f_equal thm
R20386:20397 compcert.flocq.Calc.Fcalc_bracket <> new_location def
R20409:20413 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R20409:20413 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R20489:20494 Coq.Init.Logic <> sym_eq syndef
R20489:20494 Coq.Init.Logic <> sym_eq syndef
R20503:20507 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R20503:20507 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R20537:20552 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_0 thm
R20537:20552 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_0 thm
R20591:20595 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R20591:20595 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R20591:20595 compcert.flocq.Core.Fcore_float_prop <> F2R_0 thm
R20608:20617 Coq.Reals.RIneq <> Rlt_irrefl thm
R20608:20617 Coq.Reals.RIneq <> Rlt_irrefl thm
sec 20648:20656 Fcalc_round.Fcalc_round_fexp round_dir
var 20669:20671 Fcalc_round.Fcalc_round_fexp.round_dir rnd
R20676:20679 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20680:20680 Coq.Numbers.BinNums <> Z ind
R20675:20675 Coq.Reals.Rdefinitions <> R defax
R20705:20713 compcert.flocq.Core.Fcore_generic_fmt <> Valid_rnd class
R20715:20717 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.rnd var
var 20732:20737 Fcalc_round.Fcalc_round_fexp.round_dir choice
R20742:20745 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20754:20757 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20758:20758 Coq.Numbers.BinNums <> Z ind
R20746:20753 compcert.flocq.Calc.Fcalc_bracket <> location ind
R20741:20741 Coq.Numbers.BinNums <> Z ind
var 20772:20790 Fcalc_round.Fcalc_round_fexp.round_dir inbetween_int_valid
R20831:20836 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20842:20844 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20837:20839 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.rnd var
R20841:20841 compcert.flocq.Calc.Fcalc_round <> x var
R20845:20850 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.choice var
R20854:20854 compcert.flocq.Calc.Fcalc_round <> l var
R20852:20852 compcert.flocq.Calc.Fcalc_round <> m var
R20812:20824 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R20830:20830 compcert.flocq.Calc.Fcalc_round <> l var
R20828:20828 compcert.flocq.Calc.Fcalc_round <> x var
R20826:20826 compcert.flocq.Calc.Fcalc_round <> m var
prf 20866:20882 <> round_any_correct
R20934:20939 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20940:20940 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20999:21005 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21027:21029 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21006:21010 compcert.flocq.Core.Fcore_generic_fmt <> round def
R21026:21026 compcert.flocq.Calc.Fcalc_round <> x var
R21022:21024 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.rnd var
R21017:21020 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R21012:21015 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R21030:21032 compcert.flocq.Core.Fcore_defs <> F2R def
R21035:21039 compcert.flocq.Core.Fcore_defs <> Float constr
R21059:21059 compcert.flocq.Calc.Fcalc_round <> e var
R21047:21052 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.choice var
R21056:21056 compcert.flocq.Calc.Fcalc_round <> l var
R21054:21054 compcert.flocq.Calc.Fcalc_round <> m var
R21041:21044 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R20968:20972 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R20998:20998 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R20942:20944 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20941:20941 compcert.flocq.Calc.Fcalc_round <> e var
R20945:20955 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R20967:20967 compcert.flocq.Calc.Fcalc_round <> x var
R20962:20965 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R20957:20960 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R20986:20989 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R20974:20976 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20973:20973 compcert.flocq.Calc.Fcalc_round <> l var
R20977:20985 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R20990:20995 compcert.flocq.Calc.Fcalc_round <> format syndef
R20997:20997 compcert.flocq.Calc.Fcalc_round <> x var
R20906:20920 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R20933:20933 compcert.flocq.Calc.Fcalc_round <> l var
R20931:20931 compcert.flocq.Calc.Fcalc_round <> x var
R20929:20929 compcert.flocq.Calc.Fcalc_round <> e var
R20927:20927 compcert.flocq.Calc.Fcalc_round <> m var
R20922:20925 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R21168:21188 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R21168:21188 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round thm
R21213:21231 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.inbetween_int_valid var
R21213:21231 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.inbetween_int_valid var
R21295:21300 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.choice var
R21304:21312 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R21295:21300 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.choice var
R21304:21312 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R21343:21355 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R21343:21355 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R21372:21379 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R21381:21383 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.rnd var
R21372:21379 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R21381:21383 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.rnd var
R21372:21379 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R21381:21383 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.rnd var
R21400:21418 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.inbetween_int_valid var
R21400:21418 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.inbetween_int_valid var
prf 21518:21540 <> round_trunc_any_correct
R21574:21579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21608:21613 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21665:21670 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21692:21694 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21671:21675 compcert.flocq.Core.Fcore_generic_fmt <> round def
R21691:21691 compcert.flocq.Calc.Fcalc_round <> x var
R21687:21689 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.rnd var
R21682:21685 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R21677:21680 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R21716:21723 compcert.flocq.Calc.Fcalc_round <> truncate def
R21725:21725 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21727:21728 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21730:21731 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21733:21733 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21726:21726 compcert.flocq.Calc.Fcalc_round <> m var
R21729:21729 compcert.flocq.Calc.Fcalc_round <> e var
R21732:21732 compcert.flocq.Calc.Fcalc_round <> l var
R21700:21700 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21703:21704 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21707:21708 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21711:21711 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21738:21740 compcert.flocq.Core.Fcore_defs <> F2R def
R21743:21747 compcert.flocq.Core.Fcore_defs <> Float constr
R21755:21760 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir.choice var
R21749:21752 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R21648:21651 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21616:21619 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R21615:21615 compcert.flocq.Calc.Fcalc_round <> e var
R21620:21623 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R21640:21642 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21626:21632 compcert.flocq.Core.Fcore_digits <> Zdigits def
R21639:21639 compcert.flocq.Calc.Fcalc_round <> m var
R21634:21637 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R21643:21643 compcert.flocq.Calc.Fcalc_round <> e var
R21653:21655 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21652:21652 compcert.flocq.Calc.Fcalc_round <> l var
R21656:21664 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R21580:21594 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R21607:21607 compcert.flocq.Calc.Fcalc_round <> l var
R21605:21605 compcert.flocq.Calc.Fcalc_round <> x var
R21603:21603 compcert.flocq.Calc.Fcalc_round <> e var
R21601:21601 compcert.flocq.Calc.Fcalc_round <> m var
R21596:21599 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R21566:21569 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R21570:21570 compcert.flocq.Calc.Fcalc_round <> x var
R21818:21833 compcert.flocq.Calc.Fcalc_round <> truncate_correct thm
R21818:21833 compcert.flocq.Calc.Fcalc_round <> truncate_correct thm
R21864:21871 compcert.flocq.Calc.Fcalc_round <> truncate def
R21873:21873 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21875:21876 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21878:21879 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21881:21881 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21864:21871 compcert.flocq.Calc.Fcalc_round <> truncate def
R21873:21873 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21875:21876 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21878:21879 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21881:21881 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21930:21946 compcert.flocq.Calc.Fcalc_round <> round_any_correct thm
R21930:21946 compcert.flocq.Calc.Fcalc_round <> round_any_correct thm
R21959:21967 compcert.flocq.Calc.Fcalc_round Fcalc_round.Fcalc_round_fexp.round_dir <> sec
sec 21979:21992 Fcalc_round.Fcalc_round_fexp round_dir_sign
var 22005:22007 Fcalc_round.Fcalc_round_fexp.round_dir_sign rnd
R22012:22015 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22016:22016 Coq.Numbers.BinNums <> Z ind
R22011:22011 Coq.Reals.Rdefinitions <> R defax
R22041:22049 compcert.flocq.Core.Fcore_generic_fmt <> Valid_rnd class
R22051:22053 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
var 22068:22073 Fcalc_round.Fcalc_round_fexp.round_dir_sign choice
R22081:22084 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22086:22089 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22098:22101 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22102:22102 Coq.Numbers.BinNums <> Z ind
R22090:22097 compcert.flocq.Calc.Fcalc_bracket <> location ind
R22085:22085 Coq.Numbers.BinNums <> Z ind
R22077:22080 Coq.Init.Datatypes <> bool ind
var 22116:22134 Fcalc_round.Fcalc_round_fexp.round_dir_sign inbetween_int_valid
R22182:22187 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22193:22195 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22188:22190 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R22192:22192 compcert.flocq.Calc.Fcalc_round <> x var
R22196:22204 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R22222:22227 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R22246:22246 compcert.flocq.Calc.Fcalc_round <> l var
R22244:22244 compcert.flocq.Calc.Fcalc_round <> m var
R22230:22237 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R22239:22239 compcert.flocq.Calc.Fcalc_round <> x var
R22207:22214 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R22216:22216 compcert.flocq.Calc.Fcalc_round <> x var
R22156:22168 compcert.flocq.Calc.Fcalc_bracket <> inbetween_int def
R22181:22181 compcert.flocq.Calc.Fcalc_round <> l var
R22173:22176 Coq.Reals.Rbasic_fun <> Rabs def
R22178:22178 compcert.flocq.Calc.Fcalc_round <> x var
R22170:22170 compcert.flocq.Calc.Fcalc_round <> m var
prf 22259:22280 <> round_sign_any_correct
R22339:22344 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22345:22345 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22404:22410 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22432:22434 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22411:22415 compcert.flocq.Core.Fcore_generic_fmt <> round def
R22431:22431 compcert.flocq.Calc.Fcalc_round <> x var
R22427:22429 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R22422:22425 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R22417:22420 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R22435:22437 compcert.flocq.Core.Fcore_defs <> F2R def
R22440:22444 compcert.flocq.Core.Fcore_defs <> Float constr
R22506:22506 compcert.flocq.Calc.Fcalc_round <> e var
R22452:22460 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R22478:22483 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R22502:22502 compcert.flocq.Calc.Fcalc_round <> l var
R22500:22500 compcert.flocq.Calc.Fcalc_round <> m var
R22486:22493 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R22495:22495 compcert.flocq.Calc.Fcalc_round <> x var
R22463:22470 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R22472:22472 compcert.flocq.Calc.Fcalc_round <> x var
R22446:22449 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R22373:22377 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R22403:22403 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R22347:22349 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22346:22346 compcert.flocq.Calc.Fcalc_round <> e var
R22350:22360 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R22372:22372 compcert.flocq.Calc.Fcalc_round <> x var
R22367:22370 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R22362:22365 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R22391:22394 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R22379:22381 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22378:22378 compcert.flocq.Calc.Fcalc_round <> l var
R22382:22390 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R22395:22400 compcert.flocq.Calc.Fcalc_round <> format syndef
R22402:22402 compcert.flocq.Calc.Fcalc_round <> x var
R22304:22318 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R22338:22338 compcert.flocq.Calc.Fcalc_round <> l var
R22330:22333 Coq.Reals.Rbasic_fun <> Rabs def
R22335:22335 compcert.flocq.Calc.Fcalc_round <> x var
R22327:22327 compcert.flocq.Calc.Fcalc_round <> e var
R22325:22325 compcert.flocq.Calc.Fcalc_round <> m var
R22320:22323 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R22615:22640 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R22615:22640 compcert.flocq.Calc.Fcalc_round <> inbetween_float_round_sign thm
R22665:22683 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.inbetween_int_valid var
R22665:22683 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.inbetween_int_valid var
R22747:22752 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R22771:22779 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R22755:22762 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R22747:22752 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R22771:22779 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R22755:22762 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R22803:22806 Coq.Reals.Rbasic_fun <> Rabs def
R22824:22832 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R22824:22832 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R22857:22869 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R22857:22869 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R22857:22869 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R22902:22909 compcert.flocq.Core.Fcore_float_prop <> F2R_Zopp thm
R22902:22909 compcert.flocq.Core.Fcore_float_prop <> F2R_Zopp thm
R22902:22909 compcert.flocq.Core.Fcore_float_prop <> F2R_Zopp thm
R22926:22940 Coq.Reals.RIneq <> Ropp_involutive thm
R22926:22940 Coq.Reals.RIneq <> Ropp_involutive thm
R22926:22940 Coq.Reals.RIneq <> Ropp_involutive thm
R22949:22961 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R22949:22961 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R22974:22987 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R22974:22987 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R22974:22987 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R22974:22987 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R23021:23033 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R23021:23033 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R23046:23051 Coq.Reals.RIneq <> Rge_le thm
R23046:23051 Coq.Reals.RIneq <> Rge_le thm
R23070:23082 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R23070:23082 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R23115:23122 Coq.ZArith.BinInt <> Zopp_inj syndef
R23115:23122 Coq.ZArith.BinInt <> Zopp_inj syndef
R23136:23138 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23133:23134 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23139:23147 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R23155:23160 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R23169:23177 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R23162:23165 Coq.Init.Datatypes <> true constr
R23149:23152 Coq.Init.Datatypes <> true constr
R23136:23138 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23133:23134 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23139:23147 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R23155:23160 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R23169:23177 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R23162:23165 Coq.Init.Datatypes <> true constr
R23149:23152 Coq.Init.Datatypes <> true constr
R23196:23203 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R23210:23210 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23205:23207 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R23196:23203 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R23210:23210 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23205:23207 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R23196:23203 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R23210:23210 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23205:23207 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R23237:23239 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x not
R23229:23231 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23234:23234 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23237:23239 Coq.Reals.Rdefinitions <> ::R_scope:x_'<'_x not
R23229:23231 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23234:23234 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23254:23260 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R23254:23260 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R23254:23260 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R23269:23290 Coq.Reals.RIneq <> Ropp_lt_gt_0_contravar thm
R23269:23290 Coq.Reals.RIneq <> Ropp_lt_gt_0_contravar thm
R23300:23305 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R23300:23305 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R23335:23338 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R23317:23328 compcert.flocq.Core.Fcore_float_prop <> F2R_gt_0_reg thm
R23335:23338 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R23317:23328 compcert.flocq.Core.Fcore_float_prop <> F2R_gt_0_reg thm
R23363:23373 Coq.Reals.Rbasic_fun <> Rabs_pos_lt thm
R23363:23373 Coq.Reals.Rbasic_fun <> Rabs_pos_lt thm
R23386:23395 Coq.Reals.RIneq <> Rlt_not_eq thm
R23386:23395 Coq.Reals.RIneq <> Rlt_not_eq thm
R23409:23421 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R23409:23421 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R23409:23421 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R23445:23463 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.inbetween_int_valid var
R23445:23463 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.inbetween_int_valid var
R23487:23495 Coq.Reals.Rbasic_fun <> Rabs_left thm
R23487:23495 Coq.Reals.Rbasic_fun <> Rabs_left thm
R23487:23495 Coq.Reals.Rbasic_fun <> Rabs_left thm
R23521:23527 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R23521:23527 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R23521:23527 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R23536:23550 Coq.Reals.RIneq <> Ropp_involutive thm
R23536:23550 Coq.Reals.RIneq <> Ropp_involutive thm
R23570:23572 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23573:23581 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R23590:23595 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R23605:23613 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R23597:23601 Coq.Init.Datatypes <> false constr
R23583:23587 Coq.Init.Datatypes <> false constr
R23570:23572 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23573:23581 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R23590:23595 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R23605:23613 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R23597:23601 Coq.Init.Datatypes <> false constr
R23583:23587 Coq.Init.Datatypes <> false constr
R23632:23639 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R23641:23643 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R23632:23639 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R23641:23643 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R23632:23639 compcert.flocq.Core.Fcore_generic_fmt <> Zrnd_Z2R meth
R23641:23643 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R23663:23666 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R23667:23669 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23663:23666 Coq.Reals.Rdefinitions <> ::R_scope:x_'<='_x not
R23667:23669 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23684:23689 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R23684:23689 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R23719:23722 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R23701:23712 compcert.flocq.Core.Fcore_float_prop <> F2R_ge_0_reg thm
R23719:23722 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R23701:23712 compcert.flocq.Core.Fcore_float_prop <> F2R_ge_0_reg thm
R23747:23754 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R23747:23754 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R23768:23781 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R23768:23781 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R23768:23781 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_false thm
R23805:23823 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.inbetween_int_valid var
R23805:23823 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.inbetween_int_valid var
R23849:23859 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
R23849:23859 Coq.Reals.Rbasic_fun <> Rabs_pos_eq thm
prf 23942:23969 <> round_trunc_sign_any_correct
R24028:24033 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24085:24090 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24112:24114 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24091:24095 compcert.flocq.Core.Fcore_generic_fmt <> round def
R24111:24111 compcert.flocq.Calc.Fcalc_round <> x var
R24107:24109 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.rnd var
R24102:24105 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R24097:24100 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R24136:24143 compcert.flocq.Calc.Fcalc_round <> truncate def
R24145:24145 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24147:24148 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24150:24151 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24153:24153 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24146:24146 compcert.flocq.Calc.Fcalc_round <> m var
R24149:24149 compcert.flocq.Calc.Fcalc_round <> e var
R24152:24152 compcert.flocq.Calc.Fcalc_round <> l var
R24120:24120 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24123:24124 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24127:24128 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24131:24131 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24158:24160 compcert.flocq.Core.Fcore_defs <> F2R def
R24163:24167 compcert.flocq.Core.Fcore_defs <> Float constr
R24175:24183 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R24201:24206 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.round_dir_sign.choice var
R24209:24216 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R24218:24218 compcert.flocq.Calc.Fcalc_round <> x var
R24186:24193 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R24195:24195 compcert.flocq.Calc.Fcalc_round <> x var
R24169:24172 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R24068:24071 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R24036:24039 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R24035:24035 compcert.flocq.Calc.Fcalc_round <> e var
R24040:24043 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.Fcalc_round_fexp.fexp var
R24060:24062 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R24046:24052 compcert.flocq.Core.Fcore_digits <> Zdigits def
R24059:24059 compcert.flocq.Calc.Fcalc_round <> m var
R24054:24057 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R24063:24063 compcert.flocq.Calc.Fcalc_round <> e var
R24073:24075 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24072:24072 compcert.flocq.Calc.Fcalc_round <> l var
R24076:24084 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R23993:24007 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R24027:24027 compcert.flocq.Calc.Fcalc_round <> l var
R24019:24022 Coq.Reals.Rbasic_fun <> Rabs def
R24024:24024 compcert.flocq.Calc.Fcalc_round <> x var
R24016:24016 compcert.flocq.Calc.Fcalc_round <> e var
R24014:24014 compcert.flocq.Calc.Fcalc_round <> m var
R24009:24012 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R24277:24292 compcert.flocq.Calc.Fcalc_round <> truncate_correct thm
R24310:24317 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R24295:24298 Coq.Reals.Rbasic_fun <> Rabs def
R24277:24292 compcert.flocq.Calc.Fcalc_round <> truncate_correct thm
R24310:24317 Coq.Reals.Rbasic_fun <> Rabs_pos thm
R24295:24298 Coq.Reals.Rbasic_fun <> Rabs def
R24340:24347 compcert.flocq.Calc.Fcalc_round <> truncate def
R24349:24349 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24351:24352 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24354:24355 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24357:24357 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24340:24347 compcert.flocq.Calc.Fcalc_round <> truncate def
R24349:24349 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24351:24352 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24354:24355 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24357:24357 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24402:24423 compcert.flocq.Calc.Fcalc_round <> round_sign_any_correct thm
R24402:24423 compcert.flocq.Calc.Fcalc_round <> round_sign_any_correct thm
R24486:24500 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp_abs thm
R24486:24500 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp_abs thm
R24486:24500 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp_abs thm
R24534:24537 Coq.Reals.Rbasic_fun <> Rabs def
R24556:24564 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R24556:24564 Coq.Reals.Rbasic_fun <> Rcase_abs thm
R24587:24601 Coq.Reals.RIneq <> Ropp_involutive thm
R24587:24601 Coq.Reals.RIneq <> Ropp_involutive thm
R24587:24601 Coq.Reals.RIneq <> Ropp_involutive thm
R24614:24631 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_opp thm
R24614:24631 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_opp thm
R24654:24667 compcert.flocq.Calc.Fcalc_round Fcalc_round.Fcalc_round_fexp.round_dir_sign <> sec
def 24755:24770 <> round_DN_correct
R24777:24793 compcert.flocq.Calc.Fcalc_round <> round_any_correct thm
R24812:24827 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN thm
R24809:24809 compcert.flocq.Calc.Fcalc_round <> m var
def 24842:24863 <> round_trunc_DN_correct
R24870:24892 compcert.flocq.Calc.Fcalc_round <> round_trunc_any_correct thm
R24911:24926 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN thm
R24908:24908 compcert.flocq.Calc.Fcalc_round <> m var
def 24941:24961 <> round_sign_DN_correct
R24968:24989 compcert.flocq.Calc.Fcalc_round <> round_sign_any_correct thm
R25040:25060 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN_sign thm
R25007:25015 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25037:25037 compcert.flocq.Calc.Fcalc_round <> m var
R25018:25030 compcert.flocq.Calc.Fcalc_round <> round_sign_DN def
R25034:25034 compcert.flocq.Calc.Fcalc_round <> l var
R25032:25032 compcert.flocq.Calc.Fcalc_round <> s var
def 25075:25101 <> round_trunc_sign_DN_correct
R25108:25135 compcert.flocq.Calc.Fcalc_round <> round_trunc_sign_any_correct thm
R25186:25206 compcert.flocq.Calc.Fcalc_round <> inbetween_int_DN_sign thm
R25153:25161 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25183:25183 compcert.flocq.Calc.Fcalc_round <> m var
R25164:25176 compcert.flocq.Calc.Fcalc_round <> round_sign_DN def
R25180:25180 compcert.flocq.Calc.Fcalc_round <> l var
R25178:25178 compcert.flocq.Calc.Fcalc_round <> s var
def 25221:25236 <> round_UP_correct
R25243:25259 compcert.flocq.Calc.Fcalc_round <> round_any_correct thm
R25301:25316 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP thm
R25275:25283 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25298:25298 compcert.flocq.Calc.Fcalc_round <> m var
R25286:25293 compcert.flocq.Calc.Fcalc_round <> round_UP def
R25295:25295 compcert.flocq.Calc.Fcalc_round <> l var
def 25331:25352 <> round_trunc_UP_correct
R25359:25381 compcert.flocq.Calc.Fcalc_round <> round_trunc_any_correct thm
R25423:25438 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP thm
R25397:25405 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25420:25420 compcert.flocq.Calc.Fcalc_round <> m var
R25408:25415 compcert.flocq.Calc.Fcalc_round <> round_UP def
R25417:25417 compcert.flocq.Calc.Fcalc_round <> l var
def 25453:25473 <> round_sign_UP_correct
R25480:25501 compcert.flocq.Calc.Fcalc_round <> round_sign_any_correct thm
R25552:25572 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP_sign thm
R25519:25527 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25549:25549 compcert.flocq.Calc.Fcalc_round <> m var
R25530:25542 compcert.flocq.Calc.Fcalc_round <> round_sign_UP def
R25546:25546 compcert.flocq.Calc.Fcalc_round <> l var
R25544:25544 compcert.flocq.Calc.Fcalc_round <> s var
def 25587:25613 <> round_trunc_sign_UP_correct
R25620:25647 compcert.flocq.Calc.Fcalc_round <> round_trunc_sign_any_correct thm
R25698:25718 compcert.flocq.Calc.Fcalc_round <> inbetween_int_UP_sign thm
R25665:25673 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25695:25695 compcert.flocq.Calc.Fcalc_round <> m var
R25676:25688 compcert.flocq.Calc.Fcalc_round <> round_sign_UP def
R25692:25692 compcert.flocq.Calc.Fcalc_round <> l var
R25690:25690 compcert.flocq.Calc.Fcalc_round <> s var
def 25733:25748 <> round_ZR_correct
R25755:25771 compcert.flocq.Calc.Fcalc_round <> round_any_correct thm
R25828:25843 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR thm
R25787:25795 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25825:25825 compcert.flocq.Calc.Fcalc_round <> m var
R25798:25805 compcert.flocq.Calc.Fcalc_round <> round_ZR def
R25822:25822 compcert.flocq.Calc.Fcalc_round <> l var
R25808:25815 Coq.ZArith.Zbool <> Zlt_bool syndef
R25817:25817 compcert.flocq.Calc.Fcalc_round <> m var
def 25858:25879 <> round_trunc_ZR_correct
R25886:25908 compcert.flocq.Calc.Fcalc_round <> round_trunc_any_correct thm
R25965:25980 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR thm
R25924:25932 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R25962:25962 compcert.flocq.Calc.Fcalc_round <> m var
R25935:25942 compcert.flocq.Calc.Fcalc_round <> round_ZR def
R25959:25959 compcert.flocq.Calc.Fcalc_round <> l var
R25945:25952 Coq.ZArith.Zbool <> Zlt_bool syndef
R25954:25954 compcert.flocq.Calc.Fcalc_round <> m var
def 25995:26015 <> round_sign_ZR_correct
R26022:26043 compcert.flocq.Calc.Fcalc_round <> round_sign_any_correct thm
R26064:26084 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR_sign thm
R26061:26061 compcert.flocq.Calc.Fcalc_round <> m var
def 26099:26125 <> round_trunc_sign_ZR_correct
R26132:26159 compcert.flocq.Calc.Fcalc_round <> round_trunc_sign_any_correct thm
R26180:26200 compcert.flocq.Calc.Fcalc_round <> inbetween_int_ZR_sign thm
R26177:26177 compcert.flocq.Calc.Fcalc_round <> m var
def 26215:26230 <> round_NE_correct
R26237:26253 compcert.flocq.Calc.Fcalc_round <> round_any_correct thm
R26311:26326 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE thm
R26269:26277 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R26308:26308 compcert.flocq.Calc.Fcalc_round <> m var
R26280:26286 compcert.flocq.Calc.Fcalc_round <> round_N def
R26305:26305 compcert.flocq.Calc.Fcalc_round <> l var
R26289:26292 Coq.Init.Datatypes <> negb def
R26295:26299 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R26301:26301 compcert.flocq.Calc.Fcalc_round <> m var
def 26341:26362 <> round_trunc_NE_correct
R26369:26391 compcert.flocq.Calc.Fcalc_round <> round_trunc_any_correct thm
R26449:26464 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE thm
R26407:26415 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R26446:26446 compcert.flocq.Calc.Fcalc_round <> m var
R26418:26424 compcert.flocq.Calc.Fcalc_round <> round_N def
R26443:26443 compcert.flocq.Calc.Fcalc_round <> l var
R26427:26430 Coq.Init.Datatypes <> negb def
R26433:26437 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R26439:26439 compcert.flocq.Calc.Fcalc_round <> m var
def 26479:26499 <> round_sign_NE_correct
R26506:26527 compcert.flocq.Calc.Fcalc_round <> round_sign_any_correct thm
R26587:26607 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE_sign thm
R26545:26553 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R26584:26584 compcert.flocq.Calc.Fcalc_round <> m var
R26556:26562 compcert.flocq.Calc.Fcalc_round <> round_N def
R26581:26581 compcert.flocq.Calc.Fcalc_round <> l var
R26565:26568 Coq.Init.Datatypes <> negb def
R26571:26575 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R26577:26577 compcert.flocq.Calc.Fcalc_round <> m var
def 26622:26648 <> round_trunc_sign_NE_correct
R26655:26682 compcert.flocq.Calc.Fcalc_round <> round_trunc_sign_any_correct thm
R26742:26762 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NE_sign thm
R26700:26708 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R26739:26739 compcert.flocq.Calc.Fcalc_round <> m var
R26711:26717 compcert.flocq.Calc.Fcalc_round <> round_N def
R26736:26736 compcert.flocq.Calc.Fcalc_round <> l var
R26720:26723 Coq.Init.Datatypes <> negb def
R26726:26730 compcert.flocq.Core.Fcore_Zaux <> Zeven def
R26732:26732 compcert.flocq.Calc.Fcalc_round <> m var
def 26777:26792 <> round_NA_correct
R26799:26815 compcert.flocq.Calc.Fcalc_round <> round_any_correct thm
R26871:26886 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NA thm
R26831:26839 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R26868:26868 compcert.flocq.Calc.Fcalc_round <> m var
R26842:26848 compcert.flocq.Calc.Fcalc_round <> round_N def
R26865:26865 compcert.flocq.Calc.Fcalc_round <> l var
R26851:26858 Coq.ZArith.Zbool <> Zle_bool syndef
R26862:26862 compcert.flocq.Calc.Fcalc_round <> m var
def 26901:26922 <> round_trunc_NA_correct
R26929:26951 compcert.flocq.Calc.Fcalc_round <> round_trunc_any_correct thm
R27007:27022 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NA thm
R26967:26975 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R27004:27004 compcert.flocq.Calc.Fcalc_round <> m var
R26978:26984 compcert.flocq.Calc.Fcalc_round <> round_N def
R27001:27001 compcert.flocq.Calc.Fcalc_round <> l var
R26987:26994 Coq.ZArith.Zbool <> Zle_bool syndef
R26998:26998 compcert.flocq.Calc.Fcalc_round <> m var
def 27037:27057 <> round_sign_NA_correct
R27064:27085 compcert.flocq.Calc.Fcalc_round <> round_sign_any_correct thm
R27133:27153 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NA_sign thm
R27103:27111 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R27130:27130 compcert.flocq.Calc.Fcalc_round <> m var
R27114:27120 compcert.flocq.Calc.Fcalc_round <> round_N def
R27127:27127 compcert.flocq.Calc.Fcalc_round <> l var
R27122:27125 Coq.Init.Datatypes <> true constr
def 27168:27194 <> round_trunc_sign_NA_correct
R27201:27228 compcert.flocq.Calc.Fcalc_round <> round_trunc_sign_any_correct thm
R27276:27296 compcert.flocq.Calc.Fcalc_round <> inbetween_int_NA_sign thm
R27246:27254 compcert.flocq.Calc.Fcalc_round <> cond_incr def
R27273:27273 compcert.flocq.Calc.Fcalc_round <> m var
R27257:27263 compcert.flocq.Calc.Fcalc_round <> round_N def
R27270:27270 compcert.flocq.Calc.Fcalc_round <> l var
R27265:27268 Coq.Init.Datatypes <> true constr
R27304:27319 compcert.flocq.Calc.Fcalc_round Fcalc_round.Fcalc_round_fexp <> sec
var 27384:27387 Fcalc_round emin
R27391:27391 Coq.Numbers.BinNums <> Z ind
def 27406:27417 <> truncate_FIX
R27444:27444 compcert.flocq.Calc.Fcalc_round <> t var
R27431:27431 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27433:27434 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27436:27437 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27439:27439 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27465:27467 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R27461:27464 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.emin var
R27481:27488 Coq.ZArith.Zbool <> Zlt_bool syndef
R27492:27492 compcert.flocq.Calc.Fcalc_round <> k var
R27591:27591 compcert.flocq.Calc.Fcalc_round <> t var
R27512:27517 Coq.ZArith.Zpow_def <> Zpower syndef
R27524:27524 compcert.flocq.Calc.Fcalc_round <> k var
R27519:27522 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R27533:27533 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27542:27543 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27553:27554 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27582:27582 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27534:27537 Coq.ZArith.Zdiv <> Zdiv syndef
R27541:27541 compcert.flocq.Calc.Fcalc_round <> p var
R27546:27548 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27549:27549 compcert.flocq.Calc.Fcalc_round <> k var
R27555:27566 compcert.flocq.Calc.Fcalc_bracket <> new_location def
R27571:27574 Coq.ZArith.Zdiv <> Zmod syndef
R27578:27578 compcert.flocq.Calc.Fcalc_round <> p var
R27568:27568 compcert.flocq.Calc.Fcalc_round <> p var
prf 27603:27622 <> truncate_FIX_correct
R27674:27679 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27710:27715 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27737:27748 compcert.flocq.Calc.Fcalc_round <> truncate_FIX def
R27750:27750 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27752:27753 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27755:27756 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27758:27758 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27751:27751 compcert.flocq.Calc.Fcalc_round <> m var
R27754:27754 compcert.flocq.Calc.Fcalc_round <> e var
R27757:27757 compcert.flocq.Calc.Fcalc_round <> l var
R27721:27721 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27724:27725 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27728:27729 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27732:27732 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27796:27802 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R27901:27901 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R27765:27779 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R27792:27792 compcert.flocq.Calc.Fcalc_round <> x var
R27781:27784 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R27841:27845 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R27900:27900 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R27805:27807 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27808:27818 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R27840:27840 compcert.flocq.Calc.Fcalc_round <> x var
R27826:27832 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R27834:27837 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.emin var
R27820:27823 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R27860:27863 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R27848:27850 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27851:27859 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R27864:27877 compcert.flocq.Core.Fcore_generic_fmt <> generic_format def
R27899:27899 compcert.flocq.Calc.Fcalc_round <> x var
R27885:27891 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R27893:27896 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.emin var
R27879:27882 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R27693:27696 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R27682:27685 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R27681:27681 compcert.flocq.Calc.Fcalc_round <> e var
R27686:27689 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.emin var
R27698:27700 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27697:27697 compcert.flocq.Calc.Fcalc_round <> l var
R27701:27709 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R27646:27660 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float def
R27673:27673 compcert.flocq.Calc.Fcalc_round <> l var
R27671:27671 compcert.flocq.Calc.Fcalc_round <> x var
R27669:27669 compcert.flocq.Calc.Fcalc_round <> e var
R27667:27667 compcert.flocq.Calc.Fcalc_round <> m var
R27662:27665 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R27940:27951 compcert.flocq.Calc.Fcalc_round <> truncate_FIX def
R27969:27971 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R27965:27968 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.emin var
R27969:27971 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R27965:27968 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.emin var
R27989:27994 Coq.ZArith.Zpow_def <> Zpower syndef
R27996:27999 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R27989:27994 Coq.ZArith.Zpow_def <> Zpower syndef
R27996:27999 compcert.flocq.Calc.Fcalc_round <> Fcalc_round.beta var
R28012:28022 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R28025:28031 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R28046:28054 Coq.ZArith.Zbool <> Zlt_cases thm
R28046:28054 Coq.ZArith.Zbool <> Zlt_cases thm
R28068:28075 Coq.ZArith.Zbool <> Zlt_bool syndef
R28068:28075 Coq.ZArith.Zbool <> Zlt_bool syndef
R28124:28151 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R28124:28151 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R28350:28367 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R28350:28367 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R28377:28387 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R28407:28417 compcert.flocq.Calc.Fcalc_round Fcalc_round <> sec
