DIGEST bca7c26804a86494d403d6163d2affb2
FRBTree.verif_insert
R15:33 VST.floyd.proofauto <> <> lib
R51:67 VST.floyd.library <> <> lib
R85:98 Coq.Lists.List <> <> lib
R116:132 Coq.ZArith.ZArith <> <> lib
R150:165 RBTree.api_spec2 <> <> lib
R183:201 RBTree.AuxiliaryTac <> <> lib
R219:245 RBTree.verif_insert_balance <> <> lib
R263:281 Coq.Logic.Classical <> <> lib
mod 398:404 <> mallocN
def 432:443 mallocN mallocN_spec
R449:456 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R465:467 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R457:464 RBTree.rbt_insert2 <> _mallocN def
R468:472 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R474:475 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R477:484 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R489:494 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R585:594 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R605:611 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R485:488 compcert.exportclight.Clightdefs <> tint def
R595:598 compcert.exportclight.Clightdefs <> tptr def
R600:604 compcert.exportclight.Clightdefs <> tvoid def
R476:476 Coq.Numbers.BinNums <> Z ind
binder 473:473 <> n:1
R495:500 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R527:532 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R502:505 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R507:510 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R506:506 RBTree.verif_insert <> n:1 var
R506:506 RBTree.verif_insert <> n:1 var
R511:526 compcert.lib.Integers Int max_unsigned def
R533:540 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R558:563 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R541:544 compcert.common.Values <> Vint constr
R547:554 compcert.lib.Integers Int repr def
R556:556 RBTree.verif_insert <> n:1 var
R564:578 VST.floyd.canon <> ::assert4:'GLOBALS'_'()'_x not
R579:584 VST.floyd.canon <> ::assert5:'SEP'_'()' not
binder 473:473 <> n:2
R612:614 VST.floyd.canon <> ::assert:'EX'_x_'..'_x_','_x not
R621:628 VST.floyd.canon <> ::assert:'EX'_x_'..'_x_','_x not
R618:620 compcert.common.Values <> val ind
binder 615:615 <> v:3
R629:634 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R656:663 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R635:651 VST.floyd.field_at <> malloc_compatible def
R655:655 RBTree.verif_insert <> v:3 var
R653:653 RBTree.verif_insert <> n:2 var
R664:671 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R673:680 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R672:672 RBTree.verif_insert <> v:3 var
R681:685 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R706:706 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R686:697 VST.veric.SeparationLogic <> memory_block def
R705:705 RBTree.verif_insert <> v:3 var
R703:703 RBTree.verif_insert <> n:2 var
R699:701 VST.veric.shares <> Tsh def
R713:719 RBTree.verif_insert mallocN <> mod
mod 794:803 <> insertFunc
def 817:827 insertFunc insert_spec
R833:840 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R848:850 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R841:847 RBTree.rbt_insert2 <> _insert def
R851:855 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R857:859 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R864:865 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R870:872 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R876:877 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R879:881 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R885:886 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R888:890 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R896:905 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R931:932 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R937:938 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R944:950 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1089:1098 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1104:1110 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R906:909 compcert.exportclight.Clightdefs <> tptr def
R912:915 compcert.exportclight.Clightdefs <> tptr def
R917:929 RBTree.definitions2 <> t_struct_tree def
R933:936 compcert.exportclight.Clightdefs <> tint def
R939:943 compcert.exportclight.Clightdefs <> tuint def
R1099:1103 compcert.cfrontend.Ctypes <> Tvoid constr
R860:863 RBTree.definitions2 <> tree ind
R873:875 compcert.common.Values <> val ind
R882:884 RBTree.definitions2 <> Key def
R891:895 RBTree.definitions2 <> Value def
binder 856:856 <> t:4
binder 866:869 <> root:5
binder 878:878 <> x:6
binder 887:887 <> v:7
R951:956 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R994:1000 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R971:974 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R976:979 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R957:970 compcert.lib.Integers Int min_signed def
R975:975 RBTree.verif_insert <> x:6 var
R975:975 RBTree.verif_insert <> x:6 var
R980:993 compcert.lib.Integers Int max_signed def
R1001:1008 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R1013:1014 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R1032:1033 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R1051:1056 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R1009:1012 RBTree.verif_insert <> root:5 var
R1015:1018 compcert.common.Values <> Vint constr
R1021:1028 compcert.lib.Integers Int repr def
R1030:1030 RBTree.verif_insert <> x:6 var
R1034:1037 compcert.common.Values <> Vint constr
R1040:1047 compcert.lib.Integers Int repr def
R1049:1049 RBTree.verif_insert <> v:7 var
R1057:1061 VST.floyd.canon <> ::assert4:'SEP'_'('_x_';'_'..'_';'_x_')' not
R1088:1088 VST.floyd.canon <> ::assert4:'SEP'_'('_x_';'_'..'_';'_x_')' not
R1062:1072 RBTree.definitions2 <> treebox_rep def
R1081:1087 VST.veric.base <> nullval def
R1076:1079 RBTree.verif_insert <> root:5 var
R1074:1074 RBTree.verif_insert <> t:4 var
binder 856:856 <> t:8
binder 866:869 <> root:9
binder 878:878 <> x:10
binder 887:887 <> v:11
R1111:1113 VST.floyd.canon <> ::assert:'EX'_x_'..'_x_','_x not
R1131:1137 VST.floyd.canon <> ::assert:'EX'_x_'..'_x_','_x not
R1127:1130 RBTree.definitions2 <> tree ind
binder 1114:1123 <> t_complete:12
R1138:1143 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1167:1172 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1144:1149 RBTree.definitions2 <> insert ind
R1157:1166 RBTree.verif_insert <> t_complete:12 var
R1155:1155 RBTree.verif_insert <> t:8 var
R1153:1153 RBTree.verif_insert <> v:11 var
R1151:1151 RBTree.verif_insert <> x:10 var
R1173:1186 VST.floyd.canon <> ::assert3:'RETURN'_'()'_x not
R1187:1191 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R1227:1227 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R1192:1202 RBTree.definitions2 <> treebox_rep def
R1220:1226 VST.veric.base <> nullval def
R1215:1218 RBTree.verif_insert <> root:9 var
R1204:1213 RBTree.verif_insert <> t_complete:12 var
def 1242:1246 insertFunc Gprog
R1250:1257 VST.veric.mpred <> funspecs def
R1295:1309 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R1343:1344 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R1365:1366 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R1392:1392 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R1310:1342 RBTree.verif_insert_balance insertBalance insert_balance_spec def
R1345:1364 RBTree.verif_insert mallocN mallocN_spec def
R1367:1391 RBTree.api_spec2 makeBlack make_black_spec def
R1290:1293 RBTree.rbt_insert2 <> prog def
R1295:1309 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R1343:1344 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R1365:1366 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R1392:1392 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R1310:1342 RBTree.verif_insert_balance insertBalance insert_balance_spec def
R1345:1364 RBTree.verif_insert mallocN mallocN_spec def
R1367:1391 RBTree.api_spec2 makeBlack make_black_spec def
prf 1403:1413 insertFunc eqb_reflect
binder 1424:1424 <> x:13
binder 1426:1426 <> y:14
R1429:1435 Coq.Bool.Bool <> reflect ind
R1447:1450 Coq.ZArith.BinInt <> ::Z_scope:x_'=?'_x not
R1446:1446 RBTree.verif_insert <> x:13 var
R1451:1451 RBTree.verif_insert <> y:14 var
R1439:1441 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1438:1438 RBTree.verif_insert <> x:13 var
R1442:1442 RBTree.verif_insert <> y:14 var
R1484:1494 Coq.Bool.Bool <> iff_reflect thm
R1484:1494 Coq.Bool.Bool <> iff_reflect thm
R1513:1520 Coq.ZArith.BinInt Z eqb_eq thm
R1513:1520 Coq.ZArith.BinInt Z eqb_eq thm
prf 1534:1544 insertFunc ltb_reflect
binder 1555:1555 <> x:15
binder 1557:1557 <> y:16
R1560:1566 Coq.Bool.Bool <> reflect ind
R1578:1581 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R1577:1577 RBTree.verif_insert <> x:15 var
R1582:1582 RBTree.verif_insert <> y:16 var
R1570:1572 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R1569:1569 RBTree.verif_insert <> x:15 var
R1573:1573 RBTree.verif_insert <> y:16 var
R1615:1625 Coq.Bool.Bool <> iff_reflect thm
R1615:1625 Coq.Bool.Bool <> iff_reflect thm
R1644:1651 Coq.ZArith.BinInt Z ltb_lt thm
R1644:1651 Coq.ZArith.BinInt Z ltb_lt thm
prf 1665:1675 insertFunc leb_reflect
binder 1686:1686 <> x:17
binder 1688:1688 <> y:18
R1691:1697 Coq.Bool.Bool <> reflect ind
R1709:1712 Coq.ZArith.BinInt <> ::Z_scope:x_'>?'_x not
R1708:1708 RBTree.verif_insert <> x:17 var
R1713:1713 RBTree.verif_insert <> y:18 var
R1701:1703 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R1700:1700 RBTree.verif_insert <> y:18 var
R1704:1704 RBTree.verif_insert <> x:17 var
R1746:1756 Coq.Bool.Bool <> iff_reflect thm
R1746:1756 Coq.Bool.Bool <> iff_reflect thm
R1775:1782 Coq.ZArith.BinInt Z gtb_lt thm
R1775:1782 Coq.ZArith.BinInt Z gtb_lt thm
R1886:1892 Coq.Bool.Bool <> reflect ind
R1990:1995 Coq.Arith.Compare_dec <> not_lt thm
R2010:2015 Coq.Arith.Compare_dec <> not_le thm
prf 2641:2651 insertFunc body_insert
R2654:2663 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R2722:2732 RBTree.verif_insert insertFunc insert_spec def
R2713:2720 RBTree.rbt_insert2 <> f_insert def
R2671:2675 RBTree.verif_insert insertFunc Gprog def
R2665:2669 RBTree.definitions2 <> Vprog def
R2779:2780 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R2781:2787 VST.veric.base <> nullval def
R2779:2780 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R2781:2787 VST.veric.base <> nullval def
R2809:2819 RBTree.definitions2 <> treebox_rep def
R2948:2950 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R2962:2967 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R2959:2961 compcert.common.Values <> val ind
binder 2951:2956 <> p_last:19
R2968:2970 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R2981:2986 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R2978:2980 compcert.common.Values <> val ind
binder 2971:2975 <> b_now:20
R2987:2989 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3012:3017 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3000:3011 RBTree.definitions2 <> partial_tree def
binder 2990:2997 <> part_now:21
R3018:3020 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3032:3039 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3028:3031 RBTree.definitions2 <> tree ind
binder 3021:3025 <> t_now:22
R3040:3045 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3083:3096 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3148:3161 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3225:3232 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3060:3063 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3065:3068 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3046:3059 compcert.lib.Integers Int min_signed def
R3069:3082 compcert.lib.Integers Int max_signed def
R3116:3118 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3097:3108 RBTree.definitions2 <> insert_split def
R3114:3115 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R3119:3130 RBTree.definitions2 <> insert_split def
R3140:3147 RBTree.verif_insert <> part_now:21 var
R3134:3138 RBTree.verif_insert <> t_now:22 var
R3190:3192 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3162:3174 RBTree.definitions2 <> complete_tree def
R3185:3189 RBTree.verif_insert <> t_now:22 var
R3176:3183 RBTree.verif_insert <> part_now:21 var
R3193:3205 RBTree.definitions2 <> complete_tree def
R3209:3211 Coq.Init.Datatypes <> nil constr
R3213:3221 RBTree.definitions2 <> half_tree def
R3233:3239 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3262:3263 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3279:3280 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3294:3308 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3336:3337 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3369:3377 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3240:3243 VST.floyd.canon <> temp constr
R3256:3261 RBTree.verif_insert <> p_last:19 var
R3245:3254 RBTree.rbt_insert2 <> _last_node def
R3264:3267 VST.floyd.canon <> temp constr
R3269:3273 RBTree.rbt_insert2 <> _root def
R3281:3284 VST.floyd.canon <> temp constr
R3289:3293 RBTree.verif_insert <> b_now:20 var
R3286:3287 RBTree.rbt_insert2 <> _t def
R3309:3312 VST.floyd.canon <> temp constr
R3318:3321 compcert.common.Values <> Vint constr
R3324:3331 compcert.lib.Integers Int repr def
R3314:3315 RBTree.rbt_insert2 <> _x def
R3338:3341 VST.floyd.canon <> temp constr
R3351:3354 compcert.common.Values <> Vint constr
R3357:3364 compcert.lib.Integers Int repr def
R3343:3348 RBTree.rbt_insert2 <> _value def
R3378:3382 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R3413:3425 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R3480:3480 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R3383:3393 RBTree.definitions2 <> treebox_rep def
R3407:3412 RBTree.verif_insert <> p_last:19 var
R3401:3405 RBTree.verif_insert <> b_now:20 var
R3395:3399 RBTree.verif_insert <> t_now:22 var
R3426:3444 RBTree.definitions2 <> partial_treebox_rep def
R3473:3479 VST.veric.base <> nullval def
R3466:3471 RBTree.verif_insert <> p_last:19 var
R3460:3464 RBTree.verif_insert <> b_now:20 var
R3446:3453 RBTree.verif_insert <> part_now:21 var
R3504:3506 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3518:3525 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3515:3517 compcert.common.Values <> val ind
binder 3507:3512 <> p_last:23
R3526:3528 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3539:3546 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3536:3538 compcert.common.Values <> val ind
binder 3529:3533 <> p_now:24
R3547:3549 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3560:3567 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3557:3559 compcert.common.Values <> val ind
binder 3550:3554 <> b_now:25
R3568:3570 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3593:3600 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3581:3592 RBTree.definitions2 <> partial_tree def
binder 3571:3578 <> part_now:26
R3601:3603 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3622:3631 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3618:3621 RBTree.definitions2 <> tree ind
binder 3604:3615 <> t_before_ins:27
R3632:3637 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3675:3690 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3761:3775 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3822:3831 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3652:3655 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3657:3660 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3638:3651 compcert.lib.Integers Int min_signed def
R3661:3674 compcert.lib.Integers Int max_signed def
R3726:3728 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3691:3703 RBTree.definitions2 <> complete_tree def
R3714:3725 RBTree.verif_insert <> t_before_ins:27 var
R3705:3712 RBTree.verif_insert <> part_now:26 var
R3729:3741 RBTree.definitions2 <> complete_tree def
R3745:3747 Coq.Init.Datatypes <> nil constr
R3749:3757 RBTree.definitions2 <> half_tree def
R3800:3802 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3776:3776 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3785:3786 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3799:3799 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3777:3784 RBTree.verif_insert <> part_now:26 var
R3787:3798 RBTree.verif_insert <> t_before_ins:27 var
R3803:3814 RBTree.definitions2 <> insert_split def
R3820:3821 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R3832:3838 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3852:3853 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3869:3870 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3884:3900 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3928:3929 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3961:3971 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3839:3842 VST.floyd.canon <> temp constr
R3847:3851 RBTree.verif_insert <> p_now:24 var
R3844:3845 RBTree.rbt_insert2 <> _p def
R3854:3857 VST.floyd.canon <> temp constr
R3859:3863 RBTree.rbt_insert2 <> _root def
R3871:3874 VST.floyd.canon <> temp constr
R3879:3883 RBTree.verif_insert <> b_now:25 var
R3876:3877 RBTree.rbt_insert2 <> _t def
R3901:3904 VST.floyd.canon <> temp constr
R3910:3913 compcert.common.Values <> Vint constr
R3916:3923 compcert.lib.Integers Int repr def
R3906:3907 RBTree.rbt_insert2 <> _x def
R3930:3933 VST.floyd.canon <> temp constr
R3943:3946 compcert.common.Values <> Vint constr
R3949:3956 compcert.lib.Integers Int repr def
R3935:3940 RBTree.rbt_insert2 <> _value def
R3972:3976 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R4021:4035 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R4090:4104 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R4159:4159 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R3977:3983 VST.floyd.field_at <> data_at def
R4016:4020 RBTree.verif_insert <> b_now:25 var
R4010:4014 RBTree.verif_insert <> p_now:24 var
R3990:3993 compcert.exportclight.Clightdefs <> tptr def
R3995:4007 RBTree.definitions2 <> t_struct_tree def
R3985:3987 VST.veric.shares <> Tsh def
R4036:4045 RBTree.definitions2 <> rbtree_rep def
R4084:4089 RBTree.verif_insert <> p_last:23 var
R4078:4082 RBTree.verif_insert <> p_now:24 var
R4048:4058 RBTree.definitions2 <> insert_root def
R4064:4075 RBTree.verif_insert <> t_before_ins:27 var
R4105:4123 RBTree.definitions2 <> partial_treebox_rep def
R4152:4158 VST.veric.base <> nullval def
R4145:4150 RBTree.verif_insert <> p_last:23 var
R4139:4143 RBTree.verif_insert <> b_now:25 var
R4125:4132 RBTree.verif_insert <> part_now:26 var
R2948:2950 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R2962:2967 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R2959:2961 compcert.common.Values <> val ind
binder 2951:2956 <> p_last:28
R2968:2970 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R2981:2986 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R2978:2980 compcert.common.Values <> val ind
binder 2971:2975 <> b_now:29
R2987:2989 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3012:3017 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3000:3011 RBTree.definitions2 <> partial_tree def
binder 2990:2997 <> part_now:30
R3018:3020 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3032:3039 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3028:3031 RBTree.definitions2 <> tree ind
binder 3021:3025 <> t_now:31
R3040:3045 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3083:3096 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3148:3161 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3225:3232 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3060:3063 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3065:3068 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3046:3059 compcert.lib.Integers Int min_signed def
R3069:3082 compcert.lib.Integers Int max_signed def
R3116:3118 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3097:3108 RBTree.definitions2 <> insert_split def
R3114:3115 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R3119:3130 RBTree.definitions2 <> insert_split def
R3140:3147 RBTree.verif_insert <> part_now:30 var
R3134:3138 RBTree.verif_insert <> t_now:31 var
R3190:3192 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3162:3174 RBTree.definitions2 <> complete_tree def
R3185:3189 RBTree.verif_insert <> t_now:31 var
R3176:3183 RBTree.verif_insert <> part_now:30 var
R3193:3205 RBTree.definitions2 <> complete_tree def
R3209:3211 Coq.Init.Datatypes <> nil constr
R3213:3221 RBTree.definitions2 <> half_tree def
R3233:3239 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3262:3263 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3279:3280 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3294:3308 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3336:3337 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3369:3377 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3240:3243 VST.floyd.canon <> temp constr
R3256:3261 RBTree.verif_insert <> p_last:28 var
R3245:3254 RBTree.rbt_insert2 <> _last_node def
R3264:3267 VST.floyd.canon <> temp constr
R3269:3273 RBTree.rbt_insert2 <> _root def
R3281:3284 VST.floyd.canon <> temp constr
R3289:3293 RBTree.verif_insert <> b_now:29 var
R3286:3287 RBTree.rbt_insert2 <> _t def
R3309:3312 VST.floyd.canon <> temp constr
R3318:3321 compcert.common.Values <> Vint constr
R3324:3331 compcert.lib.Integers Int repr def
R3314:3315 RBTree.rbt_insert2 <> _x def
R3338:3341 VST.floyd.canon <> temp constr
R3351:3354 compcert.common.Values <> Vint constr
R3357:3364 compcert.lib.Integers Int repr def
R3343:3348 RBTree.rbt_insert2 <> _value def
R3378:3382 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R3413:3425 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R3480:3480 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R3383:3393 RBTree.definitions2 <> treebox_rep def
R3407:3412 RBTree.verif_insert <> p_last:28 var
R3401:3405 RBTree.verif_insert <> b_now:29 var
R3395:3399 RBTree.verif_insert <> t_now:31 var
R3426:3444 RBTree.definitions2 <> partial_treebox_rep def
R3473:3479 VST.veric.base <> nullval def
R3466:3471 RBTree.verif_insert <> p_last:28 var
R3460:3464 RBTree.verif_insert <> b_now:29 var
R3446:3453 RBTree.verif_insert <> part_now:30 var
R3504:3506 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3518:3525 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3515:3517 compcert.common.Values <> val ind
binder 3507:3512 <> p_last:32
R3526:3528 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3539:3546 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3536:3538 compcert.common.Values <> val ind
binder 3529:3533 <> p_now:33
R3547:3549 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3560:3567 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3557:3559 compcert.common.Values <> val ind
binder 3550:3554 <> b_now:34
R3568:3570 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3593:3600 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3581:3592 RBTree.definitions2 <> partial_tree def
binder 3571:3578 <> part_now:35
R3601:3603 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3622:3631 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R3618:3621 RBTree.definitions2 <> tree ind
binder 3604:3615 <> t_before_ins:36
R3632:3637 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3675:3690 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3761:3775 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3822:3831 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R3652:3655 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3657:3660 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3638:3651 compcert.lib.Integers Int min_signed def
R3661:3674 compcert.lib.Integers Int max_signed def
R3726:3728 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3691:3703 RBTree.definitions2 <> complete_tree def
R3714:3725 RBTree.verif_insert <> t_before_ins:36 var
R3705:3712 RBTree.verif_insert <> part_now:35 var
R3729:3741 RBTree.definitions2 <> complete_tree def
R3745:3747 Coq.Init.Datatypes <> nil constr
R3749:3757 RBTree.definitions2 <> half_tree def
R3800:3802 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3776:3776 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3785:3786 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3799:3799 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3777:3784 RBTree.verif_insert <> part_now:35 var
R3787:3798 RBTree.verif_insert <> t_before_ins:36 var
R3803:3814 RBTree.definitions2 <> insert_split def
R3820:3821 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R3832:3838 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3852:3853 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3869:3870 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3884:3900 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3928:3929 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3961:3971 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R3839:3842 VST.floyd.canon <> temp constr
R3847:3851 RBTree.verif_insert <> p_now:33 var
R3844:3845 RBTree.rbt_insert2 <> _p def
R3854:3857 VST.floyd.canon <> temp constr
R3859:3863 RBTree.rbt_insert2 <> _root def
R3871:3874 VST.floyd.canon <> temp constr
R3879:3883 RBTree.verif_insert <> b_now:34 var
R3876:3877 RBTree.rbt_insert2 <> _t def
R3901:3904 VST.floyd.canon <> temp constr
R3910:3913 compcert.common.Values <> Vint constr
R3916:3923 compcert.lib.Integers Int repr def
R3906:3907 RBTree.rbt_insert2 <> _x def
R3930:3933 VST.floyd.canon <> temp constr
R3943:3946 compcert.common.Values <> Vint constr
R3949:3956 compcert.lib.Integers Int repr def
R3935:3940 RBTree.rbt_insert2 <> _value def
R3972:3976 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R4021:4035 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R4090:4104 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R4159:4159 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R3977:3983 VST.floyd.field_at <> data_at def
R4016:4020 RBTree.verif_insert <> b_now:34 var
R4010:4014 RBTree.verif_insert <> p_now:33 var
R3990:3993 compcert.exportclight.Clightdefs <> tptr def
R3995:4007 RBTree.definitions2 <> t_struct_tree def
R3985:3987 VST.veric.shares <> Tsh def
R4036:4045 RBTree.definitions2 <> rbtree_rep def
R4084:4089 RBTree.verif_insert <> p_last:32 var
R4078:4082 RBTree.verif_insert <> p_now:33 var
R4048:4058 RBTree.definitions2 <> insert_root def
R4064:4075 RBTree.verif_insert <> t_before_ins:36 var
R4105:4123 RBTree.definitions2 <> partial_treebox_rep def
R4152:4158 VST.veric.base <> nullval def
R4145:4150 RBTree.verif_insert <> p_last:32 var
R4139:4143 RBTree.verif_insert <> b_now:34 var
R4125:4132 RBTree.verif_insert <> part_now:35 var
R4174:4180 VST.veric.base <> nullval def
R4189:4191 Coq.Init.Datatypes <> nil constr
R4193:4201 RBTree.definitions2 <> half_tree def
R4174:4180 VST.veric.base <> nullval def
R4189:4191 Coq.Init.Datatypes <> nil constr
R4193:4201 RBTree.definitions2 <> half_tree def
R4302:4312 RBTree.definitions2 <> treebox_rep def
R4386:4391 VST.veric.expr <> sizeof def
R4393:4405 RBTree.definitions2 <> t_struct_tree def
R4386:4391 VST.veric.expr <> sizeof def
R4393:4405 RBTree.definitions2 <> t_struct_tree def
R4470:4490 VST.floyd.field_at <> memory_block_data_at_ thm
R4470:4490 VST.floyd.field_at <> memory_block_data_at_ thm
R4470:4490 VST.floyd.field_at <> memory_block_data_at_ thm
R4714:4716 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4717:4717 RBTree.definitions2 <> E constr
R4714:4716 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4717:4717 RBTree.definitions2 <> E constr
R4752:4761 RBTree.definitions2 <> rbtree_rep def
R4752:4761 RBTree.definitions2 <> rbtree_rep def
R4825:4829 Coq.Init.Logic <> False ind
R4825:4829 Coq.Init.Logic <> False ind
R4900:4910 RBTree.definitions2 <> insert_root def
R4926:4935 RBTree.definitions2 <> rbtree_rep def
R4951:4957 VST.veric.base <> nullval def
R4959:4965 VST.veric.base <> nullval def
R4951:4957 VST.veric.base <> nullval def
R4959:4965 VST.veric.base <> nullval def
R5024:5033 RBTree.definitions2 <> rbtree_rep def
R5024:5033 RBTree.definitions2 <> rbtree_rep def
R5056:5060 Coq.Init.Logic <> False ind
R5056:5060 Coq.Init.Logic <> False ind
R5223:5223 RBTree.definitions2 <> T constr
R5223:5223 RBTree.definitions2 <> T constr
R5272:5283 RBTree.definitions2 <> insert_split def
R5340:5343 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R5327:5337 RBTree.definitions2 <> key_of_node proj
R5344:5354 RBTree.definitions2 <> key_of_node proj
R5340:5343 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R5327:5337 RBTree.definitions2 <> key_of_node proj
R5344:5354 RBTree.definitions2 <> key_of_node proj
R5402:5405 Coq.ZArith.BinInt <> ::Z_scope:x_'>?'_x not
R5389:5399 RBTree.definitions2 <> key_of_node proj
R5406:5416 RBTree.definitions2 <> key_of_node proj
R5402:5405 Coq.ZArith.BinInt <> ::Z_scope:x_'>?'_x not
R5389:5399 RBTree.definitions2 <> key_of_node proj
R5406:5416 RBTree.definitions2 <> key_of_node proj
R5451:5461 RBTree.definitions2 <> insert_root def
R5479:5488 RBTree.definitions2 <> rbtree_rep def
R5626:5638 VST.floyd.nested_field_lemmas <> field_address def
R5654:5654 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5672:5672 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5655:5665 VST.floyd.nested_field_lemmas <> StructField constr
R5667:5671 RBTree.rbt_insert2 <> _left def
R5640:5652 RBTree.definitions2 <> t_struct_tree def
R5708:5710 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5697:5697 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5699:5700 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5702:5703 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5707:5707 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5698:5698 RBTree.definitions2 <> R constr
R5626:5638 VST.floyd.nested_field_lemmas <> field_address def
R5654:5654 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5672:5672 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5655:5665 VST.floyd.nested_field_lemmas <> StructField constr
R5667:5671 RBTree.rbt_insert2 <> _left def
R5640:5652 RBTree.definitions2 <> t_struct_tree def
R5708:5710 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5697:5697 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5699:5700 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5702:5703 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5707:5707 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5698:5698 RBTree.definitions2 <> R constr
R5784:5795 RBTree.definitions2 <> insert_split def
R5825:5828 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R5829:5839 RBTree.definitions2 <> key_of_node proj
R5825:5828 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R5829:5839 RBTree.definitions2 <> key_of_node proj
R5879:5897 RBTree.definitions2 <> partial_treebox_rep def
R5907:5917 RBTree.definitions2 <> treebox_rep def
R5991:5997 VST.floyd.field_at <> data_at def
R6001:6013 RBTree.definitions2 <> t_struct_tree def
R5991:5997 VST.floyd.field_at <> data_at def
R6001:6013 RBTree.definitions2 <> t_struct_tree def
R6087:6099 VST.floyd.nested_field_lemmas <> field_address def
R6115:6115 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R6134:6134 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R6116:6126 VST.floyd.nested_field_lemmas <> StructField constr
R6128:6133 RBTree.rbt_insert2 <> _right def
R6101:6113 RBTree.definitions2 <> t_struct_tree def
R6170:6172 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6159:6159 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6161:6162 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6164:6165 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6169:6169 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6160:6160 RBTree.definitions2 <> L constr
R6087:6099 VST.floyd.nested_field_lemmas <> field_address def
R6115:6115 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R6134:6134 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R6116:6126 VST.floyd.nested_field_lemmas <> StructField constr
R6128:6133 RBTree.rbt_insert2 <> _right def
R6101:6113 RBTree.definitions2 <> t_struct_tree def
R6170:6172 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6159:6159 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6161:6162 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6164:6165 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6169:6169 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6160:6160 RBTree.definitions2 <> L constr
R6246:6257 RBTree.definitions2 <> insert_split def
R6287:6290 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R6291:6301 RBTree.definitions2 <> key_of_node proj
R6287:6290 Coq.ZArith.BinInt <> ::Z_scope:x_'<?'_x not
R6291:6301 RBTree.definitions2 <> key_of_node proj
R6342:6345 Coq.ZArith.BinInt <> ::Z_scope:x_'>?'_x not
R6346:6356 RBTree.definitions2 <> key_of_node proj
R6342:6345 Coq.ZArith.BinInt <> ::Z_scope:x_'>?'_x not
R6346:6356 RBTree.definitions2 <> key_of_node proj
R6396:6414 RBTree.definitions2 <> partial_treebox_rep def
R6424:6434 RBTree.definitions2 <> treebox_rep def
R6508:6514 VST.floyd.field_at <> data_at def
R6518:6530 RBTree.definitions2 <> t_struct_tree def
R6508:6514 VST.floyd.field_at <> data_at def
R6518:6530 RBTree.definitions2 <> t_struct_tree def
R6633:6643 RBTree.definitions2 <> insert_root def
R6633:6643 RBTree.definitions2 <> insert_root def
R6716:6719 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R6688:6698 RBTree.definitions2 <> insert_root def
R6720:6720 RBTree.definitions2 <> E constr
R6732:6748 RBTree.definitions2 <> insert_root_neq_E thm
R6716:6719 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R6688:6698 RBTree.definitions2 <> insert_root def
R6720:6720 RBTree.definitions2 <> E constr
R6732:6748 RBTree.definitions2 <> insert_root_neq_E thm
R6801:6810 RBTree.definitions2 <> rbtree_rep def
R6871:6873 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6889:6898 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6877:6888 RBTree.definitions2 <> partial_tree def
binder 6874:6874 <> l:37
R6899:6901 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6909:6918 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6905:6908 RBTree.definitions2 <> tree ind
binder 6902:6902 <> s:38
R6919:6921 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6933:6942 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6929:6932 Coq.Init.Datatypes <> bool ind
binder 6922:6926 <> isred:39
R6943:6945 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6961:6970 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6949:6960 RBTree.definitions2 <> partial_tree def
binder 6946:6946 <> h:40
R6971:6973 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6981:6991 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6977:6980 RBTree.definitions2 <> tree ind
binder 6974:6974 <> b:41
R6992:6997 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R7026:7042 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R7230:7240 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R7004:7006 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6998:6998 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7000:7001 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7003:7003 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6999:6999 RBTree.verif_insert <> l:37 var
R7002:7002 RBTree.verif_insert <> s:38 var
R7007:7018 RBTree.definitions2 <> insert_split def
R7024:7025 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R7046:7050 RBTree.verif_insert <> isred:39 var
R7200:7209 RBTree.definitions2 <> Black_tree def
R7212:7222 RBTree.definitions2 <> insert_root def
R7228:7228 RBTree.verif_insert <> s:38 var
R7102:7122 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7074:7081 RBTree.definitions2 <> Red_tree def
R7084:7094 RBTree.definitions2 <> insert_root def
R7100:7100 RBTree.verif_insert <> s:38 var
R7129:7131 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7123:7123 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7125:7126 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7128:7128 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7124:7124 RBTree.verif_insert <> h:40 var
R7127:7127 RBTree.verif_insert <> b:41 var
R7132:7139 RBTree.definitions2 <> balance' def
R7144:7154 RBTree.definitions2 <> insert_root def
R7160:7160 RBTree.verif_insert <> s:38 var
R7141:7141 RBTree.verif_insert <> l:37 var
R7241:7247 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R7263:7272 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R7248:7251 VST.floyd.canon <> temp constr
R7253:7257 RBTree.rbt_insert2 <> _root def
R7273:7277 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R7448:7448 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R7281:7285 RBTree.verif_insert <> isred:39 var
R7386:7396 RBTree.definitions2 <> treebox_rep def
R7441:7447 VST.veric.base <> nullval def
R7399:7411 RBTree.definitions2 <> complete_tree def
R7416:7426 RBTree.definitions2 <> insert_root def
R7432:7432 RBTree.verif_insert <> s:38 var
R7413:7413 RBTree.verif_insert <> l:37 var
R7308:7318 RBTree.definitions2 <> treebox_rep def
R7345:7351 VST.veric.base <> nullval def
R7321:7333 RBTree.definitions2 <> complete_tree def
R7337:7337 RBTree.verif_insert <> b:41 var
R7335:7335 RBTree.verif_insert <> h:40 var
R6871:6873 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6889:6898 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6877:6888 RBTree.definitions2 <> partial_tree def
binder 6874:6874 <> l:42
R6899:6901 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6909:6918 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6905:6908 RBTree.definitions2 <> tree ind
binder 6902:6902 <> s:43
R6919:6921 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6933:6942 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6929:6932 Coq.Init.Datatypes <> bool ind
binder 6922:6926 <> isred:44
R6943:6945 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6961:6970 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6949:6960 RBTree.definitions2 <> partial_tree def
binder 6946:6946 <> h:45
R6971:6973 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6981:6991 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R6977:6980 RBTree.definitions2 <> tree ind
binder 6974:6974 <> b:46
R6992:6997 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R7026:7042 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R7230:7240 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R7004:7006 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6998:6998 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7000:7001 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7003:7003 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6999:6999 RBTree.verif_insert <> l:42 var
R7002:7002 RBTree.verif_insert <> s:43 var
R7007:7018 RBTree.definitions2 <> insert_split def
R7024:7025 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R7046:7050 RBTree.verif_insert <> isred:44 var
R7200:7209 RBTree.definitions2 <> Black_tree def
R7212:7222 RBTree.definitions2 <> insert_root def
R7228:7228 RBTree.verif_insert <> s:43 var
R7102:7122 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7074:7081 RBTree.definitions2 <> Red_tree def
R7084:7094 RBTree.definitions2 <> insert_root def
R7100:7100 RBTree.verif_insert <> s:43 var
R7129:7131 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7123:7123 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7125:7126 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7128:7128 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7124:7124 RBTree.verif_insert <> h:45 var
R7127:7127 RBTree.verif_insert <> b:46 var
R7132:7139 RBTree.definitions2 <> balance' def
R7144:7154 RBTree.definitions2 <> insert_root def
R7160:7160 RBTree.verif_insert <> s:43 var
R7141:7141 RBTree.verif_insert <> l:42 var
R7241:7247 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R7263:7272 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R7248:7251 VST.floyd.canon <> temp constr
R7253:7257 RBTree.rbt_insert2 <> _root def
R7273:7277 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R7448:7448 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R7281:7285 RBTree.verif_insert <> isred:44 var
R7386:7396 RBTree.definitions2 <> treebox_rep def
R7441:7447 VST.veric.base <> nullval def
R7399:7411 RBTree.definitions2 <> complete_tree def
R7416:7426 RBTree.definitions2 <> insert_root def
R7432:7432 RBTree.verif_insert <> s:43 var
R7413:7413 RBTree.verif_insert <> l:42 var
R7308:7318 RBTree.definitions2 <> treebox_rep def
R7345:7351 VST.veric.base <> nullval def
R7321:7333 RBTree.definitions2 <> complete_tree def
R7337:7337 RBTree.verif_insert <> b:46 var
R7335:7335 RBTree.verif_insert <> h:45 var
R7475:7487 RBTree.definitions2 <> color_of_node proj
R7511:7515 RBTree.definitions2 <> Col2Z def
R7475:7487 RBTree.definitions2 <> color_of_node proj
R7535:7539 RBTree.definitions2 <> Col2Z def
R7582:7591 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7617:7626 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7631:7632 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7639:7640 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7646:7647 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7656:7657 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7592:7592 RBTree.definitions2 <> T constr
R7582:7591 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7617:7626 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7631:7632 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7639:7640 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7646:7647 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7656:7657 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7592:7592 RBTree.definitions2 <> T constr
R7675:7685 RBTree.definitions2 <> treebox_rep def
R7725:7734 RBTree.definitions2 <> rbtree_rep def
R7813:7819 RBTree.definitions2 <> T_neq_E thm
R7813:7819 RBTree.definitions2 <> T_neq_E thm
R8011:8014 Coq.Init.Datatypes <> true constr
R8011:8014 Coq.Init.Datatypes <> true constr
R8123:8130 RBTree.definitions2 <> Red_tree def
R8175:8177 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8178:8180 RBTree.definitions2 <> Red constr
R8175:8177 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8178:8180 RBTree.definitions2 <> Red constr
R8230:8238 RBTree.definitions2 <> complete' thm
R8230:8238 RBTree.definitions2 <> complete' thm
R8257:8269 RBTree.definitions2 <> color_of_node proj
R8293:8297 RBTree.definitions2 <> Col2Z def
R8257:8269 RBTree.definitions2 <> color_of_node proj
R8318:8322 RBTree.definitions2 <> Col2Z def
R8325:8333 RBTree.definitions2 <> RED_COLOR def
R8427:8431 Coq.Init.Datatypes <> false constr
R8427:8431 Coq.Init.Datatypes <> false constr
R8468:8481 RBTree.definitions2 <> treebox_rep_lr thm
R8468:8481 RBTree.definitions2 <> treebox_rep_lr thm
R8579:8583 RBTree.definitions2 <> Col2Z def
R8635:8644 RBTree.definitions2 <> Black_tree def
R8687:8689 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8690:8694 RBTree.definitions2 <> Black constr
R8687:8689 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8690:8694 RBTree.definitions2 <> Black constr
R8733:8745 RBTree.definitions2 <> color_of_node proj
R8733:8745 RBTree.definitions2 <> color_of_node proj
R8757:8767 RBTree.definitions2 <> key_of_node proj
R8776:8788 RBTree.definitions2 <> value_of_node proj
R8750:8754 RBTree.definitions2 <> Black constr
R8733:8745 RBTree.definitions2 <> color_of_node proj
R8733:8745 RBTree.definitions2 <> color_of_node proj
R8757:8767 RBTree.definitions2 <> key_of_node proj
R8776:8788 RBTree.definitions2 <> value_of_node proj
R8750:8754 RBTree.definitions2 <> Black constr
R8865:8873 RBTree.definitions2 <> complete' thm
R8865:8873 RBTree.definitions2 <> complete' thm
R9018:9031 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9085:9098 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9103:9104 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9112:9112 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9032:9044 RBTree.definitions2 <> complete_tree def
R9056:9066 RBTree.definitions2 <> insert_root def
R9105:9111 VST.veric.base <> nullval def
R9018:9031 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9085:9098 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9103:9104 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9112:9112 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9032:9044 RBTree.definitions2 <> complete_tree def
R9056:9066 RBTree.definitions2 <> insert_root def
R9105:9111 VST.veric.base <> nullval def
R9133:9141 RBTree.definitions2 <> makeBlack def
R9144:9156 RBTree.definitions2 <> complete_tree def
R9168:9178 RBTree.definitions2 <> insert_root def
R9133:9141 RBTree.definitions2 <> makeBlack def
R9144:9156 RBTree.definitions2 <> complete_tree def
R9168:9178 RBTree.definitions2 <> insert_root def
R9238:9255 RBTree.definitions2 <> insert_intro_Black constr
R9238:9255 RBTree.definitions2 <> insert_intro_Black constr
R9351:9364 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9382:9395 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9400:9401 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9409:9409 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9365:9377 RBTree.definitions2 <> complete_tree def
R9402:9408 VST.veric.base <> nullval def
R9351:9364 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9382:9395 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9400:9401 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9409:9409 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9365:9377 RBTree.definitions2 <> complete_tree def
R9402:9408 VST.veric.base <> nullval def
R9426:9434 RBTree.definitions2 <> makeBlack def
R9437:9449 RBTree.definitions2 <> complete_tree def
R9426:9434 RBTree.definitions2 <> makeBlack def
R9437:9449 RBTree.definitions2 <> complete_tree def
R9496:9511 RBTree.definitions2 <> insert_intro_Red constr
R9496:9511 RBTree.definitions2 <> insert_intro_Red constr
R9595:9604 RBTree.verif_insert insertFunc <> mod
