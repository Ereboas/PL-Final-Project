DIGEST 94ced27d040264d66ba221d02fccb8f2
FRBTree.AuxiliaryTac
R15:33 VST.floyd.proofauto <> <> lib
R92:93 Coq.Init.Logic <> eq ind
R103:115 VST.floyd.nested_field_lemmas <> field_address def
R95:97 compcert.common.Values <> val ind
R92:93 Coq.Init.Logic <> eq ind
R103:115 VST.floyd.nested_field_lemmas <> field_address def
R95:97 compcert.common.Values <> val ind
R142:143 Coq.Init.Logic <> eq ind
R168:180 VST.floyd.nested_field_lemmas <> field_address def
R150:159 VST.veric.val_lemmas <> offset_val def
R145:147 compcert.common.Values <> val ind
R142:143 Coq.Init.Logic <> eq ind
R168:180 VST.floyd.nested_field_lemmas <> field_address def
R150:159 VST.veric.val_lemmas <> offset_val def
R145:147 compcert.common.Values <> val ind
R207:208 Coq.Init.Logic <> eq ind
R215:227 VST.floyd.nested_field_lemmas <> field_address def
R210:212 compcert.common.Values <> val ind
R207:208 Coq.Init.Logic <> eq ind
R215:227 VST.floyd.nested_field_lemmas <> field_address def
R210:212 compcert.common.Values <> val ind
R257:258 Coq.Init.Logic <> eq ind
R288:297 VST.veric.val_lemmas <> offset_val def
R265:277 VST.floyd.nested_field_lemmas <> field_address def
R260:262 compcert.common.Values <> val ind
R257:258 Coq.Init.Logic <> eq ind
R288:297 VST.veric.val_lemmas <> offset_val def
R265:277 VST.floyd.nested_field_lemmas <> field_address def
R260:262 compcert.common.Values <> val ind
R451:463 VST.floyd.nested_field_lemmas <> field_address def
R484:490 VST.msl.Coqlib2 <> if_true thm
R612:632 VST.floyd.functional_base <> isptr_offset_val_zero thm
R779:799 VST.msl.log_normalize <> derives_extract_prop' thm
R726:745 VST.msl.log_normalize <> derives_extract_prop thm
R934:954 VST.msl.log_normalize <> derives_extract_prop' thm
R881:900 VST.msl.log_normalize <> derives_extract_prop thm
R1011:1029 VST.floyd.reptype_lemmas <> unfold_reptype_elim thm
R1141:1150 VST.msl.seplog <> prop_right meth
R1178:1180 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1178:1180 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1246:1247 Coq.Init.Logic <> eq ind
R1250:1253 Coq.Init.Datatypes <> list ind
R1255:1257 compcert.common.Values <> val ind
R1246:1247 Coq.Init.Logic <> eq ind
R1250:1253 Coq.Init.Datatypes <> list ind
R1255:1257 compcert.common.Values <> val ind
R1198:1213 Coq.Init.Datatypes <> length def
R1219:1234 Coq.Init.Datatypes <> length def
R1468:1470 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1463:1466 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1472:1475 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1468:1470 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1463:1466 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1472:1475 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1514:1526 VST.floyd.nested_field_lemmas <> field_address def
R1529:1542 VST.floyd.nested_field_lemmas <> field_address0 def
R1554:1560 VST.msl.Coqlib2 <> if_true thm
R1644:1660 VST.floyd.nested_field_lemmas <> field_compatible0 def
R1644:1660 VST.floyd.nested_field_lemmas <> field_compatible0 def
R1681:1696 VST.floyd.nested_field_lemmas <> field_compatible def
R1681:1696 VST.floyd.nested_field_lemmas <> field_compatible def
R1910:1918 VST.veric.val_lemmas <> force_val def
R1910:1918 VST.veric.val_lemmas <> force_val def
R1963:1968 Coq.Lists.List <> firstn def
R1963:1968 Coq.Lists.List <> firstn def
R1987:1992 Coq.Lists.List <> firstn def
R1987:1992 Coq.Lists.List <> firstn def
R1934:1942 VST.veric.val_lemmas <> force_val def
R1934:1942 VST.veric.val_lemmas <> force_val def
R2087:2096 VST.floyd.client_lemmas <> abbreviate def
R2098:2107 VST.veric.tycontext <> ret_assert rec
R2087:2096 VST.floyd.client_lemmas <> abbreviate def
R2098:2107 VST.veric.tycontext <> ret_assert rec
R2197:2206 VST.floyd.client_lemmas <> abbreviate def
R2208:2216 compcert.cfrontend.Clight <> statement ind
R2197:2206 VST.floyd.client_lemmas <> abbreviate def
R2208:2216 compcert.cfrontend.Clight <> statement ind
R2303:2307 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R2297:2300 VST.msl.seplog <> ::logic:x_'&&'_x not
R2290:2294 VST.veric.SeparationLogic <> local def
R2303:2307 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R2297:2300 VST.msl.seplog <> ::logic:x_'&&'_x not
R2290:2294 VST.veric.SeparationLogic <> local def
R2370:2374 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R2370:2374 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R2425:2429 VST.veric.mpred <> mpred def
R2354:2360 VST.floyd.entailer <> empTrue thm
R2581:2589 VST.veric.val_lemmas <> force_val def
R2592:2612 VST.veric.Clight_Cop2 <> sem_binary_operation' def
R2581:2589 VST.veric.val_lemmas <> force_val def
R2592:2612 VST.veric.Clight_Cop2 <> sem_binary_operation' def
R2876:2884 VST.veric.val_lemmas <> force_val def
R2887:2907 VST.veric.Clight_Cop2 <> sem_binary_operation' def
R2876:2884 VST.veric.val_lemmas <> force_val def
R2887:2907 VST.veric.Clight_Cop2 <> sem_binary_operation' def
R3188:3213 VST.floyd.mapsto_memory_block <> spacer def
R3188:3213 VST.floyd.mapsto_memory_block <> spacer def
R3229:3231 VST.msl.seplog <> emp meth
R3280:3289 VST.msl.seplog <> prop_right meth
R3349:3353 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R3358:3361 VST.msl.seplog <> ::logic:x_'&&'_x not
R3354:3356 VST.msl.seplog <> ::logic:'!!'_x not
R3349:3353 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R3358:3361 VST.msl.seplog <> ::logic:x_'&&'_x not
R3354:3356 VST.msl.seplog <> ::logic:'!!'_x not
R3421:3442 VST.floyd.entailer <> prop_and_same_derives' thm
R3508:3517 VST.msl.seplog <> andp_right meth
R3539:3548 VST.msl.seplog <> prop_right meth
R3612:3623 VST.msl.seplog <> sepcon_assoc meth
R3706:3717 VST.msl.seplog <> sepcon_assoc meth
R3835:3841 VST.msl.log_normalize <> FF_left thm
prf 3971:3982 <> true_Cne_neq
binder 3995:3995 <> x:1
binder 3997:3997 <> y:2
R4053:4056 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4058:4061 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R4057:4057 RBTree.AuxiliaryTac <> x:1 var
R4062:4062 RBTree.AuxiliaryTac <> y:2 var
R4005:4014 VST.veric.SeparationLogic <> typed_true def
R4022:4030 VST.veric.val_lemmas <> force_val def
R4033:4042 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R4050:4050 RBTree.AuxiliaryTac <> y:2 var
R4048:4048 RBTree.AuxiliaryTac <> x:1 var
R4044:4046 compcert.lib.Integers <> Cne constr
R4016:4019 compcert.exportclight.Clightdefs <> tint def
R4135:4144 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R4147:4161 VST.veric.mpred <> strict_bool_val def
R4164:4177 compcert.common.Values Val cmplu_bool def
R4180:4192 compcert.common.Values Val cmpu_bool def
R4213:4223 compcert.x86_32.Archi <> ptr64 def
R4264:4271 compcert.lib.Integers Int64 eq def
R4304:4309 compcert.lib.Integers Int eq def
R4213:4223 compcert.x86_32.Archi <> ptr64 def
R4264:4271 compcert.lib.Integers Int64 eq def
R4264:4271 compcert.lib.Integers Int64 eq def
R4304:4309 compcert.lib.Integers Int eq def
R4304:4309 compcert.lib.Integers Int eq def
R4417:4429 compcert.lib.Integers Int64 eq_spec thm
R4417:4429 compcert.lib.Integers Int64 eq_spec thm
R4460:4470 compcert.lib.Integers Int eq_spec thm
R4460:4470 compcert.lib.Integers Int eq_spec thm
R4585:4594 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R4628:4635 compcert.common.Values <> eq_block def
R4628:4635 compcert.common.Values <> eq_block def
R4660:4668 compcert.lib.Integers Ptrofs eq def
R4660:4668 compcert.lib.Integers Ptrofs eq def
R4716:4729 compcert.lib.Integers Ptrofs eq_spec thm
R4716:4729 compcert.lib.Integers Ptrofs eq_spec thm
R4859:4872 compcert.lib.Integers Ptrofs eq_spec thm
R4859:4872 compcert.lib.Integers Ptrofs eq_spec thm
prf 4991:5001 <> true_Ceq_eq
binder 5014:5014 <> x:3
binder 5016:5016 <> y:4
R5072:5075 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5077:5079 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5076:5076 RBTree.AuxiliaryTac <> x:3 var
R5080:5080 RBTree.AuxiliaryTac <> y:4 var
R5024:5033 VST.veric.SeparationLogic <> typed_true def
R5041:5049 VST.veric.val_lemmas <> force_val def
R5052:5061 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R5069:5069 RBTree.AuxiliaryTac <> y:4 var
R5067:5067 RBTree.AuxiliaryTac <> x:3 var
R5063:5065 compcert.lib.Integers <> Ceq constr
R5035:5038 compcert.exportclight.Clightdefs <> tint def
R5153:5162 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R5165:5179 VST.veric.mpred <> strict_bool_val def
R5182:5195 compcert.common.Values Val cmplu_bool def
R5198:5210 compcert.common.Values Val cmpu_bool def
R5231:5241 compcert.x86_32.Archi <> ptr64 def
R5282:5289 compcert.lib.Integers Int64 eq def
R5323:5328 compcert.lib.Integers Int eq def
R5231:5241 compcert.x86_32.Archi <> ptr64 def
R5282:5289 compcert.lib.Integers Int64 eq def
R5282:5289 compcert.lib.Integers Int64 eq def
R5323:5328 compcert.lib.Integers Int eq def
R5323:5328 compcert.lib.Integers Int eq def
R5410:5422 compcert.lib.Integers Int64 eq_spec thm
R5410:5422 compcert.lib.Integers Int64 eq_spec thm
R5451:5461 compcert.lib.Integers Int eq_spec thm
R5451:5461 compcert.lib.Integers Int eq_spec thm
R5510:5519 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R5522:5536 VST.veric.mpred <> strict_bool_val def
R5539:5552 compcert.common.Values Val cmplu_bool def
R5555:5567 compcert.common.Values Val cmpu_bool def
R5588:5598 compcert.x86_32.Archi <> ptr64 def
R5638:5645 compcert.lib.Integers Int64 eq def
R5649:5658 compcert.lib.Integers Int64 zero def
R5687:5692 compcert.lib.Integers Int eq def
R5696:5703 compcert.lib.Integers Int zero def
R5588:5598 compcert.x86_32.Archi <> ptr64 def
R5638:5645 compcert.lib.Integers Int64 eq def
R5649:5658 compcert.lib.Integers Int64 zero def
R5638:5645 compcert.lib.Integers Int64 eq def
R5649:5658 compcert.lib.Integers Int64 zero def
R5687:5692 compcert.lib.Integers Int eq def
R5696:5703 compcert.lib.Integers Int zero def
R5687:5692 compcert.lib.Integers Int eq def
R5696:5703 compcert.lib.Integers Int zero def
R5758:5767 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R5770:5784 VST.veric.mpred <> strict_bool_val def
R5787:5800 compcert.common.Values Val cmplu_bool def
R5803:5815 compcert.common.Values Val cmpu_bool def
R5836:5846 compcert.x86_32.Archi <> ptr64 def
R5886:5893 compcert.lib.Integers Int64 eq def
R5898:5907 compcert.lib.Integers Int64 zero def
R5936:5941 compcert.lib.Integers Int eq def
R5946:5953 compcert.lib.Integers Int zero def
R5836:5846 compcert.x86_32.Archi <> ptr64 def
R5886:5893 compcert.lib.Integers Int64 eq def
R5898:5907 compcert.lib.Integers Int64 zero def
R5886:5893 compcert.lib.Integers Int64 eq def
R5898:5907 compcert.lib.Integers Int64 zero def
R5936:5941 compcert.lib.Integers Int eq def
R5946:5953 compcert.lib.Integers Int zero def
R5936:5941 compcert.lib.Integers Int eq def
R5946:5953 compcert.lib.Integers Int zero def
R6008:6017 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R6051:6058 compcert.common.Values <> eq_block def
R6051:6058 compcert.common.Values <> eq_block def
R6105:6113 compcert.lib.Integers Ptrofs eq def
R6105:6113 compcert.lib.Integers Ptrofs eq def
R6149:6162 compcert.lib.Integers Ptrofs eq_spec thm
R6149:6162 compcert.lib.Integers Ptrofs eq_spec thm
prf 6295:6307 <> false_Cne_neq
binder 6320:6320 <> x:5
binder 6322:6322 <> y:6
R6379:6382 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6384:6386 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6383:6383 RBTree.AuxiliaryTac <> x:5 var
R6387:6387 RBTree.AuxiliaryTac <> y:6 var
R6330:6340 VST.veric.SeparationLogic <> typed_false def
R6348:6356 VST.veric.val_lemmas <> force_val def
R6359:6368 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R6376:6376 RBTree.AuxiliaryTac <> y:6 var
R6374:6374 RBTree.AuxiliaryTac <> x:5 var
R6370:6372 compcert.lib.Integers <> Cne constr
R6342:6345 compcert.exportclight.Clightdefs <> tint def
R6460:6469 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R6472:6486 VST.veric.mpred <> strict_bool_val def
R6489:6502 compcert.common.Values Val cmplu_bool def
R6505:6517 compcert.common.Values Val cmpu_bool def
R6538:6548 compcert.x86_32.Archi <> ptr64 def
R6589:6596 compcert.lib.Integers Int64 eq def
R6630:6635 compcert.lib.Integers Int eq def
R6538:6548 compcert.x86_32.Archi <> ptr64 def
R6589:6596 compcert.lib.Integers Int64 eq def
R6589:6596 compcert.lib.Integers Int64 eq def
R6630:6635 compcert.lib.Integers Int eq def
R6630:6635 compcert.lib.Integers Int eq def
R6717:6729 compcert.lib.Integers Int64 eq_spec thm
R6717:6729 compcert.lib.Integers Int64 eq_spec thm
R6758:6768 compcert.lib.Integers Int eq_spec thm
R6758:6768 compcert.lib.Integers Int eq_spec thm
R6817:6826 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R6829:6843 VST.veric.mpred <> strict_bool_val def
R6846:6859 compcert.common.Values Val cmplu_bool def
R6862:6874 compcert.common.Values Val cmpu_bool def
R6895:6905 compcert.x86_32.Archi <> ptr64 def
R6945:6952 compcert.lib.Integers Int64 eq def
R6956:6965 compcert.lib.Integers Int64 zero def
R6994:6999 compcert.lib.Integers Int eq def
R7003:7010 compcert.lib.Integers Int zero def
R6895:6905 compcert.x86_32.Archi <> ptr64 def
R6945:6952 compcert.lib.Integers Int64 eq def
R6956:6965 compcert.lib.Integers Int64 zero def
R6945:6952 compcert.lib.Integers Int64 eq def
R6956:6965 compcert.lib.Integers Int64 zero def
R6994:6999 compcert.lib.Integers Int eq def
R7003:7010 compcert.lib.Integers Int zero def
R6994:6999 compcert.lib.Integers Int eq def
R7003:7010 compcert.lib.Integers Int zero def
R7065:7074 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R7077:7091 VST.veric.mpred <> strict_bool_val def
R7094:7107 compcert.common.Values Val cmplu_bool def
R7110:7122 compcert.common.Values Val cmpu_bool def
R7143:7153 compcert.x86_32.Archi <> ptr64 def
R7193:7200 compcert.lib.Integers Int64 eq def
R7205:7214 compcert.lib.Integers Int64 zero def
R7243:7248 compcert.lib.Integers Int eq def
R7253:7260 compcert.lib.Integers Int zero def
R7143:7153 compcert.x86_32.Archi <> ptr64 def
R7193:7200 compcert.lib.Integers Int64 eq def
R7205:7214 compcert.lib.Integers Int64 zero def
R7193:7200 compcert.lib.Integers Int64 eq def
R7205:7214 compcert.lib.Integers Int64 zero def
R7243:7248 compcert.lib.Integers Int eq def
R7253:7260 compcert.lib.Integers Int zero def
R7243:7248 compcert.lib.Integers Int eq def
R7253:7260 compcert.lib.Integers Int zero def
R7315:7324 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R7358:7365 compcert.common.Values <> eq_block def
R7358:7365 compcert.common.Values <> eq_block def
R7390:7398 compcert.lib.Integers Ptrofs eq def
R7390:7398 compcert.lib.Integers Ptrofs eq def
R7446:7459 compcert.lib.Integers Ptrofs eq_spec thm
R7446:7459 compcert.lib.Integers Ptrofs eq_spec thm
prf 7599:7610 <> false_Ceq_eq
binder 7623:7623 <> x:7
binder 7625:7625 <> y:8
R7682:7685 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7687:7690 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R7686:7686 RBTree.AuxiliaryTac <> x:7 var
R7691:7691 RBTree.AuxiliaryTac <> y:8 var
R7633:7643 VST.veric.SeparationLogic <> typed_false def
R7651:7659 VST.veric.val_lemmas <> force_val def
R7662:7671 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R7679:7679 RBTree.AuxiliaryTac <> y:8 var
R7677:7677 RBTree.AuxiliaryTac <> x:7 var
R7673:7675 compcert.lib.Integers <> Ceq constr
R7645:7648 compcert.exportclight.Clightdefs <> tint def
R7765:7774 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R7777:7791 VST.veric.mpred <> strict_bool_val def
R7794:7807 compcert.common.Values Val cmplu_bool def
R7810:7822 compcert.common.Values Val cmpu_bool def
R7843:7853 compcert.x86_32.Archi <> ptr64 def
R7894:7901 compcert.lib.Integers Int64 eq def
R7934:7939 compcert.lib.Integers Int eq def
R7843:7853 compcert.x86_32.Archi <> ptr64 def
R7894:7901 compcert.lib.Integers Int64 eq def
R7894:7901 compcert.lib.Integers Int64 eq def
R7934:7939 compcert.lib.Integers Int eq def
R7934:7939 compcert.lib.Integers Int eq def
R8047:8059 compcert.lib.Integers Int64 eq_spec thm
R8047:8059 compcert.lib.Integers Int64 eq_spec thm
R8090:8100 compcert.lib.Integers Int eq_spec thm
R8090:8100 compcert.lib.Integers Int eq_spec thm
R8215:8224 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R8258:8265 compcert.common.Values <> eq_block def
R8258:8265 compcert.common.Values <> eq_block def
R8290:8298 compcert.lib.Integers Ptrofs eq def
R8290:8298 compcert.lib.Integers Ptrofs eq def
R8346:8359 compcert.lib.Integers Ptrofs eq_spec thm
R8346:8359 compcert.lib.Integers Ptrofs eq_spec thm
R8473:8486 compcert.lib.Integers Ptrofs eq_spec thm
R8473:8486 compcert.lib.Integers Ptrofs eq_spec thm
R8650:8660 VST.veric.SeparationLogic <> typed_false def
R8668:8676 VST.veric.val_lemmas <> force_val def
R8679:8688 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R8690:8692 compcert.lib.Integers <> Ceq constr
R8662:8665 compcert.exportclight.Clightdefs <> tint def
R8650:8660 VST.veric.SeparationLogic <> typed_false def
R8668:8676 VST.veric.val_lemmas <> force_val def
R8679:8688 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R8690:8692 compcert.lib.Integers <> Ceq constr
R8662:8665 compcert.exportclight.Clightdefs <> tint def
R8770:8779 VST.veric.SeparationLogic <> typed_true def
R8787:8795 VST.veric.val_lemmas <> force_val def
R8798:8807 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R8809:8811 compcert.lib.Integers <> Ceq constr
R8781:8784 compcert.exportclight.Clightdefs <> tint def
R8770:8779 VST.veric.SeparationLogic <> typed_true def
R8787:8795 VST.veric.val_lemmas <> force_val def
R8798:8807 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R8809:8811 compcert.lib.Integers <> Ceq constr
R8781:8784 compcert.exportclight.Clightdefs <> tint def
R8917:8926 VST.veric.SeparationLogic <> typed_true def
R8934:8942 VST.veric.val_lemmas <> force_val def
R8945:8954 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R8956:8958 compcert.lib.Integers <> Cne constr
R8928:8931 compcert.exportclight.Clightdefs <> tint def
R8917:8926 VST.veric.SeparationLogic <> typed_true def
R8934:8942 VST.veric.val_lemmas <> force_val def
R8945:8954 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R8956:8958 compcert.lib.Integers <> Cne constr
R8928:8931 compcert.exportclight.Clightdefs <> tint def
R9035:9045 VST.veric.SeparationLogic <> typed_false def
R9053:9061 VST.veric.val_lemmas <> force_val def
R9064:9073 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R9075:9077 compcert.lib.Integers <> Cne constr
R9047:9050 compcert.exportclight.Clightdefs <> tint def
R9035:9045 VST.veric.SeparationLogic <> typed_false def
R9053:9061 VST.veric.val_lemmas <> force_val def
R9064:9073 VST.veric.Clight_Cop2 <> sem_cmp_pp def
R9075:9077 compcert.lib.Integers <> Cne constr
R9047:9050 compcert.exportclight.Clightdefs <> tint def
R9109:9121 RBTree.AuxiliaryTac <> false_Cne_neq thm
R9159:9163 Coq.Init.Logic <> False ind
R8990:9001 RBTree.AuxiliaryTac <> true_Cne_neq thm
R8843:8853 RBTree.AuxiliaryTac <> true_Ceq_eq thm
R8891:8895 Coq.Init.Logic <> False ind
R8725:8736 RBTree.AuxiliaryTac <> false_Ceq_eq thm
