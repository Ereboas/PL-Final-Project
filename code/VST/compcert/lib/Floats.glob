DIGEST 4c1b5b7bd689e9a989f9181d8bc189b9
Fcompcert.lib.Floats
R1200:1205 compcert.lib.Coqlib <> <> lib
R1207:1211 compcert.lib.Zbits <> <> lib
R1213:1220 compcert.lib.Integers <> <> lib
R1249:1254 Flocq.IEEE754.Binary <> <> lib
R1256:1259 Flocq.IEEE754.Bits <> <> lib
R1261:1264 Flocq.Core.Core <> <> lib
R1282:1294 compcert.lib.IEEE754_extra <> <> lib
R1312:1318 Coq.Program.Program <> <> lib
R1329:1333 compcert.x86_32.Archi <> <> lib
def 1412:1416 <> float
R1421:1428 Flocq.IEEE754.Bits <> binary64 def
def 1497:1503 <> float32
R1508:1515 Flocq.IEEE754.Bits <> binary32 def
def 1620:1636 <> cmp_of_comparison
R1642:1651 compcert.lib.Integers <> comparison ind
binder 1639:1639 <> c:1
R1658:1663 Coq.Init.Datatypes <> option ind
R1665:1684 Coq.Init.Datatypes <> comparison ind
binder 1655:1655 <> x:2
R1689:1692 Coq.Init.Datatypes <> bool ind
R1705:1705 compcert.lib.Floats <> c:1 var
R1716:1718 compcert.lib.Integers <> Ceq constr
R1735:1735 compcert.lib.Floats <> x:2 var
R1742:1745 Coq.Init.Datatypes <> Some constr
R1747:1748 Coq.Init.Datatypes <> Eq constr
R1753:1756 Coq.Init.Datatypes <> true constr
R1765:1769 Coq.Init.Datatypes <> false constr
R1779:1781 compcert.lib.Integers <> Cne constr
R1798:1798 compcert.lib.Floats <> x:2 var
R1805:1808 Coq.Init.Datatypes <> Some constr
R1810:1811 Coq.Init.Datatypes <> Eq constr
R1816:1820 Coq.Init.Datatypes <> false constr
R1829:1832 Coq.Init.Datatypes <> true constr
R1842:1844 compcert.lib.Integers <> Clt constr
R1861:1861 compcert.lib.Floats <> x:2 var
R1868:1871 Coq.Init.Datatypes <> Some constr
R1873:1874 Coq.Init.Datatypes <> Lt constr
R1879:1882 Coq.Init.Datatypes <> true constr
R1891:1895 Coq.Init.Datatypes <> false constr
R1905:1907 compcert.lib.Integers <> Cle constr
R1924:1924 compcert.lib.Floats <> x:2 var
R1931:1934 Coq.Init.Datatypes <> Some constr
R1936:1937 Coq.Init.Datatypes <> Lt constr
R1939:1940 Coq.Init.Datatypes <> Eq constr
R1946:1949 Coq.Init.Datatypes <> true constr
R1946:1949 Coq.Init.Datatypes <> true constr
R1958:1962 Coq.Init.Datatypes <> false constr
R1972:1974 compcert.lib.Integers <> Cgt constr
R1991:1991 compcert.lib.Floats <> x:2 var
R1998:2001 Coq.Init.Datatypes <> Some constr
R2003:2004 Coq.Init.Datatypes <> Gt constr
R2009:2012 Coq.Init.Datatypes <> true constr
R2021:2025 Coq.Init.Datatypes <> false constr
R2035:2037 compcert.lib.Integers <> Cge constr
R2054:2054 compcert.lib.Floats <> x:2 var
R2061:2064 Coq.Init.Datatypes <> Some constr
R2066:2067 Coq.Init.Datatypes <> Gt constr
R2069:2070 Coq.Init.Datatypes <> Eq constr
R2076:2079 Coq.Init.Datatypes <> true constr
R2076:2079 Coq.Init.Datatypes <> true constr
R2088:2092 Coq.Init.Datatypes <> false constr
def 2117:2137 <> ordered_of_comparison
R2143:2148 Coq.Init.Datatypes <> option ind
R2150:2169 Coq.Init.Datatypes <> comparison ind
binder 2140:2140 <> x:10
R2174:2177 Coq.Init.Datatypes <> bool ind
R2190:2190 compcert.lib.Floats <> x:10 var
R2197:2200 Coq.Init.Datatypes <> None constr
R2205:2209 Coq.Init.Datatypes <> false constr
R2213:2216 Coq.Init.Datatypes <> Some constr
R2223:2226 Coq.Init.Datatypes <> true constr
prf 2240:2261 <> cmp_of_comparison_swap
binder 2273:2273 <> c:12
binder 2275:2275 <> x:13
R2319:2323 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2280:2296 compcert.lib.Floats <> cmp_of_comparison def
R2318:2318 compcert.lib.Floats <> x:13 var
R2299:2313 compcert.lib.Integers <> swap_comparison def
R2315:2315 compcert.lib.Floats <> c:12 var
R2324:2340 compcert.lib.Floats <> cmp_of_comparison def
R2351:2351 compcert.lib.Floats <> x:13 var
R2358:2361 Coq.Init.Datatypes <> None constr
R2366:2369 Coq.Init.Datatypes <> None constr
R2373:2376 Coq.Init.Datatypes <> Some constr
R2383:2386 Coq.Init.Datatypes <> Some constr
R2389:2395 Coq.Init.Datatypes <> CompOpp def
R2397:2397 compcert.lib.Floats <> x:13 var
R2342:2342 compcert.lib.Floats <> c:12 var
prf 2481:2503 <> cmp_of_comparison_ne_eq
binder 2515:2515 <> x:15
R2541:2543 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2518:2534 compcert.lib.Floats <> cmp_of_comparison def
R2540:2540 compcert.lib.Floats <> x:15 var
R2536:2538 compcert.lib.Integers <> Cne constr
R2544:2547 Coq.Init.Datatypes <> negb def
R2550:2566 compcert.lib.Floats <> cmp_of_comparison def
R2572:2572 compcert.lib.Floats <> x:15 var
R2568:2570 compcert.lib.Integers <> Ceq constr
prf 2639:2667 <> cmp_of_comparison_lt_eq_false
binder 2679:2679 <> x:16
R2712:2715 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2746:2749 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2750:2754 Coq.Init.Logic <> False ind
R2739:2741 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2716:2732 compcert.lib.Floats <> cmp_of_comparison def
R2738:2738 compcert.lib.Floats <> x:16 var
R2734:2736 compcert.lib.Integers <> Ceq constr
R2742:2745 Coq.Init.Datatypes <> true constr
R2705:2707 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2682:2698 compcert.lib.Floats <> cmp_of_comparison def
R2704:2704 compcert.lib.Floats <> x:16 var
R2700:2702 compcert.lib.Integers <> Clt constr
R2708:2711 Coq.Init.Datatypes <> true constr
prf 2828:2853 <> cmp_of_comparison_le_lt_eq
binder 2865:2865 <> x:17
R2891:2893 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2868:2884 compcert.lib.Floats <> cmp_of_comparison def
R2890:2890 compcert.lib.Floats <> x:17 var
R2886:2888 compcert.lib.Integers <> Cle constr
R2917:2920 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R2894:2910 compcert.lib.Floats <> cmp_of_comparison def
R2916:2916 compcert.lib.Floats <> x:17 var
R2912:2914 compcert.lib.Integers <> Clt constr
R2921:2937 compcert.lib.Floats <> cmp_of_comparison def
R2943:2943 compcert.lib.Floats <> x:17 var
R2939:2941 compcert.lib.Integers <> Ceq constr
prf 3001:3029 <> cmp_of_comparison_gt_eq_false
binder 3041:3041 <> x:18
R3074:3077 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3108:3111 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3112:3116 Coq.Init.Logic <> False ind
R3101:3103 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3078:3094 compcert.lib.Floats <> cmp_of_comparison def
R3100:3100 compcert.lib.Floats <> x:18 var
R3096:3098 compcert.lib.Integers <> Ceq constr
R3104:3107 Coq.Init.Datatypes <> true constr
R3067:3069 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3044:3060 compcert.lib.Floats <> cmp_of_comparison def
R3066:3066 compcert.lib.Floats <> x:18 var
R3062:3064 compcert.lib.Integers <> Cgt constr
R3070:3073 Coq.Init.Datatypes <> true constr
prf 3190:3215 <> cmp_of_comparison_ge_gt_eq
binder 3227:3227 <> x:19
R3253:3255 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3230:3246 compcert.lib.Floats <> cmp_of_comparison def
R3252:3252 compcert.lib.Floats <> x:19 var
R3248:3250 compcert.lib.Integers <> Cge constr
R3279:3282 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R3256:3272 compcert.lib.Floats <> cmp_of_comparison def
R3278:3278 compcert.lib.Floats <> x:19 var
R3274:3276 compcert.lib.Integers <> Cgt constr
R3283:3299 compcert.lib.Floats <> cmp_of_comparison def
R3305:3305 compcert.lib.Floats <> x:19 var
R3301:3303 compcert.lib.Integers <> Ceq constr
prf 3363:3391 <> cmp_of_comparison_lt_gt_false
binder 3403:3403 <> x:20
R3436:3439 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3470:3473 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3474:3478 Coq.Init.Logic <> False ind
R3463:3465 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3440:3456 compcert.lib.Floats <> cmp_of_comparison def
R3462:3462 compcert.lib.Floats <> x:20 var
R3458:3460 compcert.lib.Integers <> Cgt constr
R3466:3469 Coq.Init.Datatypes <> true constr
R3429:3431 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3406:3422 compcert.lib.Floats <> cmp_of_comparison def
R3428:3428 compcert.lib.Floats <> x:20 var
R3424:3426 compcert.lib.Integers <> Clt constr
R3432:3435 Coq.Init.Datatypes <> true constr
prf 3590:3603 <> normalized_nan
binder 3613:3616 <> prec:21
binder 3618:3618 <> n:22
binder 3620:3620 <> p:23
R3646:3649 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3658:3663 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3704:3706 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3664:3669 Flocq.IEEE754.Binary <> nan_pl def
R3677:3684 Coq.ZArith.BinInt Z to_pos def
R3687:3697 compcert.lib.Zbits <> P_mod_two_p def
R3701:3701 compcert.lib.Floats <> n:22 var
R3699:3699 compcert.lib.Floats <> p:23 var
R3671:3674 compcert.lib.Floats <> prec:21 var
R3707:3710 Coq.Init.Datatypes <> true constr
R3651:3653 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R3654:3657 compcert.lib.Floats <> prec:21 var
R3635:3637 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3625:3632 Coq.ZArith.BinInt Z of_nat def
R3634:3634 compcert.lib.Floats <> n:22 var
R3642:3644 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R3638:3641 compcert.lib.Floats <> prec:21 var
R3737:3742 Flocq.IEEE754.Binary <> nan_pl def
R3751:3758 Coq.ZArith.BinInt Z ltb_lt thm
R3751:3758 Coq.ZArith.BinInt Z ltb_lt thm
R3769:3791 Flocq.Core.Digits <> Zpos_digits2_pos thm
R3769:3791 Flocq.Core.Digits <> Zpos_digits2_pos thm
R3769:3791 Flocq.Core.Digits <> Zpos_digits2_pos thm
R3807:3817 compcert.lib.Zbits <> P_mod_two_p def
R3807:3817 compcert.lib.Zbits <> P_mod_two_p def
R3839:3842 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R3845:3847 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R3849:3851 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R3852:3859 Coq.ZArith.BinInt Z of_nat def
R3839:3842 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R3845:3847 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R3849:3851 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R3852:3859 Coq.ZArith.BinInt Z of_nat def
R3880:3898 Coq.ZArith.Zpower <> two_power_nat_equiv thm
R3907:3923 compcert.lib.Zbits <> P_mod_two_p_range thm
R3880:3898 Coq.ZArith.Zpower <> two_power_nat_equiv thm
R3880:3898 Coq.ZArith.Zpower <> two_power_nat_equiv thm
R3907:3923 compcert.lib.Zbits <> P_mod_two_p_range thm
R3965:3968 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R3941:3954 Flocq.Core.Digits <> Zdigits def
R3956:3961 Flocq.Core.Zaux <> radix2 def
R3973:3975 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R3965:3968 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R3941:3954 Flocq.Core.Digits <> Zdigits def
R3956:3961 Flocq.Core.Zaux <> radix2 def
R3973:3975 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R3990:4013 Flocq.Core.Digits <> Zdigits_le_Zpower thm
R3990:4013 Flocq.Core.Digits <> Zdigits_le_Zpower thm
R4038:4045 Coq.ZArith.BinInt Z abs_eq thm
R4038:4045 Coq.ZArith.BinInt Z abs_eq thm
R4038:4045 Coq.ZArith.BinInt Z abs_eq thm
R4038:4045 Coq.ZArith.BinInt Z abs_eq thm
R4069:4071 compcert.lib.Coqlib <> zeq def
R4069:4071 compcert.lib.Coqlib <> zeq def
R4116:4123 Coq.ZArith.BinInt Z2Pos id thm
R4116:4123 Coq.ZArith.BinInt Z2Pos id thm
R4116:4123 Coq.ZArith.BinInt Z2Pos id thm
def 4215:4234 <> quiet_nan_64_payload
R4240:4247 Coq.Numbers.BinNums <> positive ind
binder 4237:4237 <> p:24
R4255:4262 Coq.ZArith.BinInt Z to_pos def
R4265:4275 compcert.lib.Zbits <> P_mod_two_p def
R4278:4284 Coq.PArith.BinPos Pos lor def
R4290:4297 Flocq.Core.Zaux <> iter_nat def
R4299:4300 Coq.Numbers.BinNums <> xO constr
R4286:4286 compcert.lib.Floats <> p:24 var
prf 4335:4352 <> quiet_nan_64_proof
binder 4362:4362 <> p:25
R4399:4401 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4365:4370 Flocq.IEEE754.Binary <> nan_pl def
R4376:4395 compcert.lib.Floats <> quiet_nan_64_payload def
R4397:4397 compcert.lib.Floats <> p:25 var
R4402:4405 Coq.Init.Datatypes <> true constr
R4429:4442 compcert.lib.Floats <> normalized_nan thm
R4429:4442 compcert.lib.Floats <> normalized_nan thm
def 4475:4486 <> quiet_nan_64
R4497:4499 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4493:4496 Coq.Init.Datatypes <> bool ind
R4500:4507 Coq.Numbers.BinNums <> positive ind
binder 4489:4490 <> sp:26
R4512:4512 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R4514:4515 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R4521:4523 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R4543:4543 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R4516:4520 compcert.lib.Floats <> float def
binder 4513:4513 <> x:27
R4536:4538 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4524:4529 Flocq.IEEE754.Binary <> is_nan def
R4535:4535 compcert.lib.Floats <> x:27 var
R4539:4542 Coq.Init.Datatypes <> true constr
R4564:4565 compcert.lib.Floats <> sp:26 var
binder 4555:4555 <> s:28
binder 4558:4558 <> p:29
R4572:4576 Coq.Init.Specif <> exist constr
R4650:4656 Coq.Init.Logic <> eq_refl constr
R4658:4661 Coq.Init.Datatypes <> true constr
R4581:4588 Flocq.IEEE754.Binary <> B754_nan constr
R4626:4643 compcert.lib.Floats <> quiet_nan_64_proof thm
R4645:4645 compcert.lib.Floats <> p:29 var
R4601:4620 compcert.lib.Floats <> quiet_nan_64_payload def
R4622:4622 compcert.lib.Floats <> p:29 var
R4598:4598 compcert.lib.Floats <> s:28 var
def 4677:4690 <> default_nan_64
R4695:4706 compcert.lib.Floats <> quiet_nan_64 def
R4708:4727 compcert.x86_32.Archi <> default_nan_64 def
def 4742:4761 <> quiet_nan_32_payload
R4767:4774 Coq.Numbers.BinNums <> positive ind
binder 4764:4764 <> p:30
R4782:4789 Coq.ZArith.BinInt Z to_pos def
R4792:4802 compcert.lib.Zbits <> P_mod_two_p def
R4805:4811 Coq.PArith.BinPos Pos lor def
R4817:4824 Flocq.Core.Zaux <> iter_nat def
R4826:4827 Coq.Numbers.BinNums <> xO constr
R4813:4813 compcert.lib.Floats <> p:30 var
prf 4862:4879 <> quiet_nan_32_proof
binder 4889:4889 <> p:31
R4926:4928 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4892:4897 Flocq.IEEE754.Binary <> nan_pl def
R4903:4922 compcert.lib.Floats <> quiet_nan_32_payload def
R4924:4924 compcert.lib.Floats <> p:31 var
R4929:4932 Coq.Init.Datatypes <> true constr
R4956:4969 compcert.lib.Floats <> normalized_nan thm
R4956:4969 compcert.lib.Floats <> normalized_nan thm
def 5002:5013 <> quiet_nan_32
R5024:5026 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R5020:5023 Coq.Init.Datatypes <> bool ind
R5027:5034 Coq.Numbers.BinNums <> positive ind
binder 5016:5017 <> sp:32
R5039:5039 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R5041:5042 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R5050:5052 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R5072:5072 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R5043:5049 compcert.lib.Floats <> float32 def
binder 5040:5040 <> x:33
R5065:5067 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5053:5058 Flocq.IEEE754.Binary <> is_nan def
R5064:5064 compcert.lib.Floats <> x:33 var
R5068:5071 Coq.Init.Datatypes <> true constr
R5093:5094 compcert.lib.Floats <> sp:32 var
binder 5084:5084 <> s:34
binder 5087:5087 <> p:35
R5101:5105 Coq.Init.Specif <> exist constr
R5178:5184 Coq.Init.Logic <> eq_refl constr
R5186:5189 Coq.Init.Datatypes <> true constr
R5110:5117 Flocq.IEEE754.Binary <> B754_nan constr
R5154:5171 compcert.lib.Floats <> quiet_nan_32_proof thm
R5173:5173 compcert.lib.Floats <> p:35 var
R5129:5148 compcert.lib.Floats <> quiet_nan_32_payload def
R5150:5150 compcert.lib.Floats <> p:35 var
R5126:5126 compcert.lib.Floats <> s:34 var
def 5205:5218 <> default_nan_32
R5223:5234 compcert.lib.Floats <> quiet_nan_32 def
R5236:5255 compcert.x86_32.Archi <> default_nan_32 def
syndef 5274:5275 <> __
R5281:5287 Coq.Init.Logic <> eq_refl constr
R5289:5300 Coq.Init.Datatypes <> Lt constr
R5326:5334 Flocq.Core.FLX <> Prec_gt_0 class
R5349:5355 Coq.Init.Logic <> eq_refl constr
R5357:5368 Coq.Init.Datatypes <> Lt constr
R5401:5403 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R5417:5423 Coq.Init.Logic <> eq_refl constr
R5425:5436 Coq.Init.Datatypes <> Lt constr
mod 5493:5497 <> Float
def 5744:5761 Float expand_nan_payload
R5767:5774 Coq.Numbers.BinNums <> positive ind
binder 5764:5764 <> p:36
R5780:5793 Coq.PArith.BinPos Pos shiftl_nat def
R5795:5795 compcert.lib.Floats <> p:36 var
prf 5808:5823 Float expand_nan_proof
R5830:5837 Coq.Numbers.BinNums <> positive ind
binder 5826:5826 <> p:37
R5862:5867 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5900:5902 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5868:5873 Flocq.IEEE754.Binary <> nan_pl def
R5879:5896 compcert.lib.Floats Float expand_nan_payload def
R5898:5898 compcert.lib.Floats <> p:37 var
R5903:5906 Coq.Init.Datatypes <> true constr
R5855:5857 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5844:5849 Flocq.IEEE754.Binary <> nan_pl def
R5854:5854 compcert.lib.Floats <> p:37 var
R5858:5861 Coq.Init.Datatypes <> true constr
R5925:5930 Flocq.IEEE754.Binary <> nan_pl def
R5933:5950 compcert.lib.Floats Float expand_nan_payload def
R5973:5980 Coq.ZArith.BinInt Z ltb_lt thm
R5973:5980 Coq.ZArith.BinInt Z ltb_lt thm
R5973:5980 Coq.ZArith.BinInt Z ltb_lt thm
R5997:6010 Coq.PArith.BinPos Pos shiftl_nat def
R6013:6020 Coq.Init.Datatypes <> nat_rect scheme
R6023:6040 Coq.Floats.SpecFloat <> digits2_pos def
R6051:6068 Flocq.Core.Digits <> digits2_pos syndef
R6051:6068 Flocq.Core.Digits <> digits2_pos syndef
def 6106:6115 Float expand_nan
binder 6117:6117 <> s:38
binder 6119:6119 <> p:39
binder 6121:6121 <> H:40
R6125:6125 Coq.Init.Specif <> ::type_scope:'{'_x_'|'_x_'}' not
R6127:6129 Coq.Init.Specif <> ::type_scope:'{'_x_'|'_x_'}' not
R6149:6149 Coq.Init.Specif <> ::type_scope:'{'_x_'|'_x_'}' not
binder 6126:6126 <> x:41
R6142:6144 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6130:6135 Flocq.IEEE754.Binary <> is_nan def
R6141:6141 compcert.lib.Floats <> x:41 var
R6145:6148 Coq.Init.Datatypes <> true constr
R6156:6160 Coq.Init.Specif <> exist constr
R6232:6238 Coq.Init.Logic <> eq_refl constr
R6240:6243 Coq.Init.Datatypes <> true constr
R6165:6172 Flocq.IEEE754.Binary <> B754_nan constr
R6208:6223 compcert.lib.Floats Float expand_nan_proof thm
R6227:6227 compcert.lib.Floats <> H:40 var
R6225:6225 compcert.lib.Floats <> p:39 var
R6185:6202 compcert.lib.Floats Float expand_nan_payload def
R6204:6204 compcert.lib.Floats <> p:39 var
R6182:6182 compcert.lib.Floats <> s:38 var
def 6259:6271 Float of_single_nan
R6278:6284 compcert.lib.Floats <> float32 def
binder 6274:6274 <> f:42
R6289:6290 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R6292:6294 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R6300:6302 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R6322:6323 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R6295:6299 compcert.lib.Floats <> float def
binder 6291:6291 <> x:43
R6315:6317 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6303:6308 Flocq.IEEE754.Binary <> is_nan def
R6314:6314 compcert.lib.Floats <> x:43 var
R6318:6321 Coq.Init.Datatypes <> true constr
R6336:6336 compcert.lib.Floats <> f:42 var
R6347:6354 Flocq.IEEE754.Binary <> B754_nan constr
R6372:6407 compcert.x86_32.Archi <> float_of_single_preserves_sNaN def
R6444:6455 compcert.lib.Floats <> quiet_nan_64 def
R6457:6457 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6459:6460 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6481:6481 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6461:6478 compcert.lib.Floats Float expand_nan_payload def
R6418:6427 compcert.lib.Floats Float expand_nan def
R6492:6505 compcert.lib.Floats <> default_nan_64 def
def 6526:6543 Float reduce_nan_payload
R6549:6556 Coq.Numbers.BinNums <> positive ind
binder 6546:6546 <> p:45
R6837:6850 Coq.PArith.BinPos Pos shiftr_nat def
R6853:6872 compcert.lib.Floats <> quiet_nan_64_payload def
R6874:6874 compcert.lib.Floats <> p:45 var
def 6893:6905 Float to_single_nan
R6912:6916 compcert.lib.Floats <> float def
binder 6908:6908 <> f:46
R6921:6922 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R6924:6926 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R6934:6936 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R6956:6957 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R6927:6933 compcert.lib.Floats <> float32 def
binder 6923:6923 <> x:47
R6949:6951 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6937:6942 Flocq.IEEE754.Binary <> is_nan def
R6948:6948 compcert.lib.Floats <> x:47 var
R6952:6955 Coq.Init.Datatypes <> true constr
R6970:6970 compcert.lib.Floats <> f:46 var
R6981:6988 Flocq.IEEE754.Binary <> B754_nan constr
R6999:7010 compcert.lib.Floats <> quiet_nan_32 def
R7012:7012 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7014:7015 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7036:7036 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7016:7033 compcert.lib.Floats Float reduce_nan_payload def
R7047:7060 compcert.lib.Floats <> default_nan_32 def
def 7145:7151 Float neg_nan
R7158:7162 compcert.lib.Floats <> float def
binder 7154:7154 <> f:49
R7167:7168 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R7170:7172 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R7178:7180 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R7200:7201 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R7173:7177 compcert.lib.Floats <> float def
binder 7169:7169 <> x:50
R7193:7195 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7181:7186 Flocq.IEEE754.Binary <> is_nan def
R7192:7192 compcert.lib.Floats <> x:50 var
R7196:7199 Coq.Init.Datatypes <> true constr
R7214:7214 compcert.lib.Floats <> f:49 var
R7225:7232 Flocq.IEEE754.Binary <> B754_nan constr
R7243:7247 Coq.Init.Specif <> exist constr
R7284:7290 Coq.Init.Logic <> eq_refl constr
R7292:7295 Coq.Init.Datatypes <> true constr
R7252:7259 Flocq.IEEE754.Binary <> B754_nan constr
R7270:7273 Coq.Init.Datatypes <> negb def
R7307:7320 compcert.lib.Floats <> default_nan_64 def
def 7341:7347 Float abs_nan
R7354:7358 compcert.lib.Floats <> float def
binder 7350:7350 <> f:52
R7363:7364 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R7366:7368 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R7374:7376 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R7396:7397 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R7369:7373 compcert.lib.Floats <> float def
binder 7365:7365 <> x:53
R7389:7391 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7377:7382 Flocq.IEEE754.Binary <> is_nan def
R7388:7388 compcert.lib.Floats <> x:53 var
R7392:7395 Coq.Init.Datatypes <> true constr
R7410:7410 compcert.lib.Floats <> f:52 var
R7421:7428 Flocq.IEEE754.Binary <> B754_nan constr
R7439:7443 Coq.Init.Specif <> exist constr
R7477:7483 Coq.Init.Logic <> eq_refl constr
R7485:7488 Coq.Init.Datatypes <> true constr
R7448:7455 Flocq.IEEE754.Binary <> B754_nan constr
R7465:7469 Coq.Init.Datatypes <> false constr
R7500:7513 compcert.lib.Floats <> default_nan_64 def
def 8203:8209 Float cons_pl
R8215:8219 compcert.lib.Floats <> float def
binder 8212:8212 <> x:55
R8226:8229 Coq.Init.Datatypes <> list ind
R8236:8238 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R8232:8235 Coq.Init.Datatypes <> bool ind
R8239:8246 Coq.Numbers.BinNums <> positive ind
binder 8223:8223 <> l:56
R8261:8261 compcert.lib.Floats <> x:55 var
R8268:8275 Flocq.IEEE754.Binary <> B754_nan constr
R8292:8295 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8286:8286 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8288:8289 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8291:8291 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8296:8296 compcert.lib.Floats <> l:56 var
R8305:8305 compcert.lib.Floats <> l:56 var
def 8324:8331 Float unop_nan
R8337:8341 compcert.lib.Floats <> float def
binder 8334:8334 <> x:58
R8346:8346 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8348:8350 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8356:8358 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8378:8378 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8351:8355 compcert.lib.Floats <> float def
binder 8347:8347 <> x:59
R8371:8373 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8359:8364 Flocq.IEEE754.Binary <> is_nan def
R8370:8370 compcert.lib.Floats <> x:59 var
R8374:8377 Coq.Init.Datatypes <> true constr
R8385:8396 compcert.lib.Floats <> quiet_nan_64 def
R8399:8417 compcert.x86_32.Archi <> choose_nan_64 def
R8420:8426 compcert.lib.Floats Float cons_pl def
R8430:8431 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R8428:8428 compcert.lib.Floats <> x:58 var
def 8448:8456 Float binop_nan
R8464:8468 compcert.lib.Floats <> float def
binder 8459:8459 <> x:60
binder 8461:8461 <> y:61
R8473:8473 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8475:8477 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8483:8485 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8505:8505 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8478:8482 compcert.lib.Floats <> float def
binder 8474:8474 <> x:62
R8498:8500 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8486:8491 Flocq.IEEE754.Binary <> is_nan def
R8497:8497 compcert.lib.Floats <> x:62 var
R8501:8504 Coq.Init.Datatypes <> true constr
R8512:8523 compcert.lib.Floats <> quiet_nan_64 def
R8526:8544 compcert.x86_32.Archi <> choose_nan_64 def
R8547:8553 compcert.lib.Floats Float cons_pl def
R8558:8564 compcert.lib.Floats Float cons_pl def
R8568:8569 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R8566:8566 compcert.lib.Floats <> y:61 var
R8555:8555 compcert.lib.Floats <> x:60 var
def 8926:8934 Float fma_nan_1
R8944:8948 compcert.lib.Floats <> float def
binder 8937:8937 <> x:63
binder 8939:8939 <> y:64
binder 8941:8941 <> z:65
R8953:8953 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8955:8957 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8963:8965 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8985:8985 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R8958:8962 compcert.lib.Floats <> float def
binder 8954:8954 <> x:66
R8978:8980 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8966:8971 Flocq.IEEE754.Binary <> is_nan def
R8977:8977 compcert.lib.Floats <> x:66 var
R8981:8984 Coq.Init.Datatypes <> true constr
R9010:9024 compcert.x86_32.Archi <> fma_order def
R9030:9030 compcert.lib.Floats <> z:65 var
R9028:9028 compcert.lib.Floats <> y:64 var
R9026:9026 compcert.lib.Floats <> x:63 var
R8997:8997 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8999:9000 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9002:9003 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9005:9005 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9037:9048 compcert.lib.Floats <> quiet_nan_64 def
R9051:9069 compcert.x86_32.Archi <> choose_nan_64 def
R9072:9078 compcert.lib.Floats Float cons_pl def
R9083:9089 compcert.lib.Floats Float cons_pl def
R9094:9100 compcert.lib.Floats Float cons_pl def
R9104:9105 Coq.Lists.List ListNotations ::list_scope:'['_']' not
def 9485:9491 Float fma_nan
R9501:9505 compcert.lib.Floats <> float def
binder 9494:9494 <> x:67
binder 9496:9496 <> y:68
binder 9498:9498 <> z:69
R9510:9510 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R9512:9514 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R9520:9522 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R9542:9542 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R9515:9519 compcert.lib.Floats <> float def
binder 9511:9511 <> x:70
R9535:9537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9523:9528 Flocq.IEEE754.Binary <> is_nan def
R9534:9534 compcert.lib.Floats <> x:70 var
R9538:9541 Coq.Init.Datatypes <> true constr
R9558:9558 compcert.lib.Floats <> y:68 var
R9555:9555 compcert.lib.Floats <> x:67 var
R9569:9581 Flocq.IEEE754.Binary <> B754_infinity constr
R9586:9594 Flocq.IEEE754.Binary <> B754_zero constr
R9600:9608 Flocq.IEEE754.Binary <> B754_zero constr
R9613:9625 Flocq.IEEE754.Binary <> B754_infinity constr
R9641:9668 compcert.x86_32.Archi <> fma_invalid_mul_is_nan def
R9766:9774 compcert.lib.Floats Float fma_nan_1 def
R9780:9780 compcert.lib.Floats <> z:69 var
R9778:9778 compcert.lib.Floats <> y:68 var
R9776:9776 compcert.lib.Floats <> x:67 var
R9681:9692 compcert.lib.Floats <> quiet_nan_64 def
R9695:9713 compcert.x86_32.Archi <> choose_nan_64 def
R9736:9739 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9716:9735 compcert.x86_32.Archi <> default_nan_64 def
R9740:9746 compcert.lib.Floats Float cons_pl def
R9750:9751 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9748:9748 compcert.lib.Floats <> z:69 var
R9641:9668 compcert.x86_32.Archi <> fma_invalid_mul_is_nan def
R9766:9774 compcert.lib.Floats Float fma_nan_1 def
R9780:9780 compcert.lib.Floats <> z:69 var
R9778:9778 compcert.lib.Floats <> y:68 var
R9776:9776 compcert.lib.Floats <> x:67 var
R9681:9692 compcert.lib.Floats <> quiet_nan_64 def
R9695:9713 compcert.x86_32.Archi <> choose_nan_64 def
R9736:9739 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9716:9735 compcert.x86_32.Archi <> default_nan_64 def
R9740:9746 compcert.lib.Floats Float cons_pl def
R9750:9751 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R9748:9748 compcert.lib.Floats <> z:69 var
R9800:9808 compcert.lib.Floats Float fma_nan_1 def
R9814:9814 compcert.lib.Floats <> z:69 var
R9812:9812 compcert.lib.Floats <> y:68 var
R9810:9810 compcert.lib.Floats <> x:67 var
def 9886:9889 Float zero
R9892:9896 compcert.lib.Floats <> float def
R9901:9909 Flocq.IEEE754.Binary <> B754_zero constr
R9915:9919 Coq.Init.Datatypes <> false constr
def 9959:9964 Float eq_dec
R9982:9986 compcert.lib.Floats <> float def
binder 9975:9976 <> f1:73
binder 9978:9979 <> f2:74
R9990:9990 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R9998:10002 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R10011:10011 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R9993:9995 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9991:9992 compcert.lib.Floats <> f1:73 var
R9996:9997 compcert.lib.Floats <> f2:74 var
R10005:10008 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R10003:10004 compcert.lib.Floats <> f1:73 var
R10009:10010 compcert.lib.Floats <> f2:74 var
R10016:10022 compcert.lib.IEEE754_extra <> Beq_dec def
def 10071:10073 Float neg
R10081:10084 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10085:10089 compcert.lib.Floats <> float def
R10076:10080 compcert.lib.Floats <> float def
R10094:10097 Flocq.IEEE754.Binary <> Bopp def
R10103:10109 compcert.lib.Floats Float neg_nan def
def 10154:10156 Float abs
R10164:10167 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10168:10172 compcert.lib.Floats <> float def
R10159:10163 compcert.lib.Floats <> float def
R10177:10180 Flocq.IEEE754.Binary <> Babs def
R10186:10192 compcert.lib.Floats Float abs_nan def
def 10247:10250 Float sqrt
R10258:10261 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10262:10266 compcert.lib.Floats <> float def
R10253:10257 compcert.lib.Floats <> float def
R10273:10277 Flocq.IEEE754.Binary <> Bsqrt def
R10302:10308 Flocq.IEEE754.Binary <> mode_NE constr
R10293:10300 compcert.lib.Floats Float unop_nan def
R10290:10291 compcert.lib.Floats <> __ syndef
R10287:10288 compcert.lib.Floats <> __ syndef
def 10343:10345 Float add
R10353:10356 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10362:10365 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10366:10370 compcert.lib.Floats <> float def
R10357:10361 compcert.lib.Floats <> float def
R10348:10352 compcert.lib.Floats <> float def
R10377:10381 Flocq.IEEE754.Binary <> Bplus def
R10407:10413 Flocq.IEEE754.Binary <> mode_NE constr
R10397:10405 compcert.lib.Floats Float binop_nan def
R10394:10395 compcert.lib.Floats <> __ syndef
R10391:10392 compcert.lib.Floats <> __ syndef
def 10444:10446 Float sub
R10454:10457 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10463:10466 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10467:10471 compcert.lib.Floats <> float def
R10458:10462 compcert.lib.Floats <> float def
R10449:10453 compcert.lib.Floats <> float def
R10478:10483 Flocq.IEEE754.Binary <> Bminus def
R10509:10515 Flocq.IEEE754.Binary <> mode_NE constr
R10499:10507 compcert.lib.Floats Float binop_nan def
R10496:10497 compcert.lib.Floats <> __ syndef
R10493:10494 compcert.lib.Floats <> __ syndef
def 10549:10551 Float mul
R10559:10562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10568:10571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10572:10576 compcert.lib.Floats <> float def
R10563:10567 compcert.lib.Floats <> float def
R10554:10558 compcert.lib.Floats <> float def
R10583:10587 Flocq.IEEE754.Binary <> Bmult def
R10613:10619 Flocq.IEEE754.Binary <> mode_NE constr
R10603:10611 compcert.lib.Floats Float binop_nan def
R10600:10601 compcert.lib.Floats <> __ syndef
R10597:10598 compcert.lib.Floats <> __ syndef
def 10656:10658 Float div
R10666:10669 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10675:10678 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10679:10683 compcert.lib.Floats <> float def
R10670:10674 compcert.lib.Floats <> float def
R10661:10665 compcert.lib.Floats <> float def
R10690:10693 Flocq.IEEE754.Binary <> Bdiv def
R10719:10725 Flocq.IEEE754.Binary <> mode_NE constr
R10709:10717 compcert.lib.Floats Float binop_nan def
R10706:10707 compcert.lib.Floats <> __ syndef
R10703:10704 compcert.lib.Floats <> __ syndef
def 10756:10758 Float fma
R10766:10769 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10775:10778 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10784:10787 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10788:10792 compcert.lib.Floats <> float def
R10779:10783 compcert.lib.Floats <> float def
R10770:10774 compcert.lib.Floats <> float def
R10761:10765 compcert.lib.Floats <> float def
R10799:10802 Flocq.IEEE754.Binary <> Bfma def
R10826:10832 Flocq.IEEE754.Binary <> mode_NE constr
R10818:10824 compcert.lib.Floats Float fma_nan def
R10815:10816 compcert.lib.Floats <> __ syndef
R10812:10813 compcert.lib.Floats <> __ syndef
def 10885:10891 Float compare
R10901:10905 compcert.lib.Floats <> float def
binder 10894:10895 <> f1:75
binder 10897:10898 <> f2:76
R10910:10915 Coq.Init.Datatypes <> option ind
R10917:10936 Coq.Init.Datatypes <> comparison ind
R10970:10977 Flocq.IEEE754.Binary <> Bcompare def
R10990:10991 compcert.lib.Floats <> f2:76 var
R10987:10988 compcert.lib.Floats <> f1:75 var
def 11005:11007 Float cmp
R11012:11021 compcert.lib.Integers <> comparison ind
binder 11010:11010 <> c:77
R11032:11036 compcert.lib.Floats <> float def
binder 11025:11026 <> f1:78
binder 11028:11029 <> f2:79
R11041:11044 Coq.Init.Datatypes <> bool ind
R11078:11094 compcert.lib.Floats <> cmp_of_comparison def
R11099:11105 compcert.lib.Floats Float compare def
R11110:11111 compcert.lib.Floats <> f2:79 var
R11107:11108 compcert.lib.Floats <> f1:78 var
R11096:11096 compcert.lib.Floats <> c:77 var
def 11126:11132 Float ordered
R11142:11146 compcert.lib.Floats <> float def
binder 11135:11136 <> f1:80
binder 11138:11139 <> f2:81
R11151:11154 Coq.Init.Datatypes <> bool ind
R11161:11181 compcert.lib.Floats <> ordered_of_comparison def
R11184:11190 compcert.lib.Floats Float compare def
R11195:11196 compcert.lib.Floats <> f2:81 var
R11192:11193 compcert.lib.Floats <> f1:80 var
def 11232:11240 Float of_single
R11250:11253 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11254:11258 compcert.lib.Floats <> float def
R11243:11249 compcert.lib.Floats <> float32 def
R11263:11267 compcert.lib.IEEE754_extra <> Bconv def
R11301:11307 Flocq.IEEE754.Binary <> mode_NE constr
R11287:11299 compcert.lib.Floats Float of_single_nan def
R11284:11285 compcert.lib.Floats <> __ syndef
R11281:11282 compcert.lib.Floats <> __ syndef
def 11321:11329 Float to_single
R11337:11340 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11341:11347 compcert.lib.Floats <> float32 def
R11332:11336 compcert.lib.Floats <> float def
R11352:11356 compcert.lib.IEEE754_extra <> Bconv def
R11389:11395 Flocq.IEEE754.Binary <> mode_NE constr
R11375:11387 compcert.lib.Floats Float to_single_nan def
R11372:11373 compcert.lib.Floats <> __ syndef
R11369:11370 compcert.lib.Floats <> __ syndef
def 11410:11415 Float to_int
R11420:11424 compcert.lib.Floats <> float def
binder 11418:11418 <> f:82
R11428:11433 Coq.Init.Datatypes <> option ind
R11435:11437 compcert.lib.Integers <> int syndef
R11484:11493 compcert.lib.Coqlib <> option_map def
R11505:11514 compcert.lib.IEEE754_extra <> ZofB_range def
R11537:11550 compcert.lib.Integers Int max_signed def
R11522:11535 compcert.lib.Integers Int min_signed def
R11520:11520 compcert.lib.Floats <> f:82 var
R11495:11502 compcert.lib.Integers Int repr def
def 11565:11571 Float to_intu
R11576:11580 compcert.lib.Floats <> float def
binder 11574:11574 <> f:83
R11584:11589 Coq.Init.Datatypes <> option ind
R11591:11593 compcert.lib.Integers <> int syndef
R11642:11651 compcert.lib.Coqlib <> option_map def
R11663:11672 compcert.lib.IEEE754_extra <> ZofB_range def
R11682:11697 compcert.lib.Integers Int max_unsigned def
R11678:11678 compcert.lib.Floats <> f:83 var
R11653:11660 compcert.lib.Integers Int repr def
def 11712:11718 Float to_long
R11723:11727 compcert.lib.Floats <> float def
binder 11721:11721 <> f:84
R11731:11736 Coq.Init.Datatypes <> option ind
R11738:11742 compcert.lib.Integers <> int64 syndef
R11789:11798 compcert.lib.Coqlib <> option_map def
R11812:11821 compcert.lib.IEEE754_extra <> ZofB_range def
R11846:11861 compcert.lib.Integers Int64 max_signed def
R11829:11844 compcert.lib.Integers Int64 min_signed def
R11827:11827 compcert.lib.Floats <> f:84 var
R11800:11809 compcert.lib.Integers Int64 repr def
def 11876:11883 Float to_longu
R11888:11892 compcert.lib.Floats <> float def
binder 11886:11886 <> f:85
R11896:11901 Coq.Init.Datatypes <> option ind
R11903:11907 compcert.lib.Integers <> int64 syndef
R11956:11965 compcert.lib.Coqlib <> option_map def
R11979:11988 compcert.lib.IEEE754_extra <> ZofB_range def
R11998:12015 compcert.lib.Integers Int64 max_unsigned def
R11994:11994 compcert.lib.Floats <> f:85 var
R11967:11976 compcert.lib.Integers Int64 repr def
def 12031:12036 Float of_int
R12041:12043 compcert.lib.Integers <> int syndef
binder 12039:12039 <> n:86
R12047:12051 compcert.lib.Floats <> float def
R12100:12103 compcert.lib.IEEE754_extra <> BofZ def
R12120:12129 compcert.lib.Integers Int signed def
R12131:12131 compcert.lib.Floats <> n:86 var
R12116:12117 compcert.lib.Floats <> __ syndef
R12113:12114 compcert.lib.Floats <> __ syndef
def 12146:12152 Float of_intu
R12157:12159 compcert.lib.Integers <> int syndef
binder 12155:12155 <> n:87
R12163:12167 compcert.lib.Floats <> float def
R12217:12220 compcert.lib.IEEE754_extra <> BofZ def
R12237:12248 compcert.lib.Integers Int unsigned def
R12250:12250 compcert.lib.Floats <> n:87 var
R12233:12234 compcert.lib.Floats <> __ syndef
R12230:12231 compcert.lib.Floats <> __ syndef
def 12266:12272 Float of_long
R12277:12281 compcert.lib.Integers <> int64 syndef
binder 12275:12275 <> n:88
R12285:12289 compcert.lib.Floats <> float def
R12338:12341 compcert.lib.IEEE754_extra <> BofZ def
R12358:12369 compcert.lib.Integers Int64 signed def
R12371:12371 compcert.lib.Floats <> n:88 var
R12354:12355 compcert.lib.Floats <> __ syndef
R12351:12352 compcert.lib.Floats <> __ syndef
def 12386:12393 Float of_longu
R12398:12402 compcert.lib.Integers <> int64 syndef
binder 12396:12396 <> n:89
R12406:12410 compcert.lib.Floats <> float def
R12460:12463 compcert.lib.IEEE754_extra <> BofZ def
R12480:12493 compcert.lib.Integers Int64 unsigned def
R12495:12495 compcert.lib.Floats <> n:89 var
R12476:12477 compcert.lib.Floats <> __ syndef
R12473:12474 compcert.lib.Floats <> __ syndef
def 12511:12521 Float from_parsed
R12529:12536 Coq.Numbers.BinNums <> positive ind
binder 12524:12527 <> base:90
R12548:12555 Coq.Numbers.BinNums <> positive ind
binder 12540:12546 <> intPart:91
R12567:12567 Coq.Numbers.BinNums <> Z ind
binder 12559:12565 <> expPart:92
R12572:12576 compcert.lib.Floats <> float def
R12583:12588 compcert.lib.IEEE754_extra <> Bparse def
R12617:12623 compcert.lib.Floats <> expPart:92 var
R12609:12615 compcert.lib.Floats <> intPart:91 var
R12604:12607 compcert.lib.Floats <> base:90 var
R12601:12602 compcert.lib.Floats <> __ syndef
R12598:12599 compcert.lib.Floats <> __ syndef
def 12747:12753 Float to_bits
R12759:12763 compcert.lib.Floats <> float def
binder 12756:12756 <> f:93
R12767:12771 compcert.lib.Integers <> int64 syndef
R12776:12785 compcert.lib.Integers Int64 repr def
R12788:12798 Flocq.IEEE754.Bits <> bits_of_b64 def
R12800:12800 compcert.lib.Floats <> f:93 var
def 12815:12821 Float of_bits
R12827:12831 compcert.lib.Integers <> int64 syndef
binder 12824:12824 <> b:94
R12835:12839 compcert.lib.Floats <> float def
R12844:12854 Flocq.IEEE754.Bits <> b64_of_bits def
R12857:12870 compcert.lib.Integers Int64 unsigned def
R12872:12872 compcert.lib.Floats <> b:94 var
def 12888:12897 Float from_words
R12907:12909 compcert.lib.Integers <> int syndef
binder 12900:12901 <> hi:95
binder 12903:12904 <> lo:96
R12914:12918 compcert.lib.Floats <> float def
R12923:12929 compcert.lib.Floats Float of_bits def
R12932:12944 compcert.lib.Integers Int64 ofwords def
R12949:12950 compcert.lib.Floats <> lo:96 var
R12946:12947 compcert.lib.Floats <> hi:95 var
R13526:13534 Coq.ZArith.BinInt Z pow_pos def
R13559:13567 Coq.ZArith.BinInt Z pow_pos def
R13590:13598 Coq.ZArith.BinInt Z pow_pos def
R13621:13629 Coq.ZArith.BinInt Z pow_pos def
prf 13727:13736 Float add_commut
binder 13748:13748 <> x:97
binder 13750:13750 <> y:98
R13797:13800 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13808:13810 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13801:13803 compcert.lib.Floats Float add def
R13807:13807 compcert.lib.Floats <> y:98 var
R13805:13805 compcert.lib.Floats <> x:97 var
R13811:13813 compcert.lib.Floats Float add def
R13817:13817 compcert.lib.Floats <> x:97 var
R13815:13815 compcert.lib.Floats <> y:98 var
R13773:13776 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R13765:13767 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13753:13758 Flocq.IEEE754.Binary <> is_nan def
R13764:13764 compcert.lib.Floats <> x:97 var
R13768:13772 Coq.Init.Datatypes <> false constr
R13789:13791 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13777:13782 Flocq.IEEE754.Binary <> is_nan def
R13788:13788 compcert.lib.Floats <> y:98 var
R13792:13796 Coq.Init.Datatypes <> false constr
R13843:13854 compcert.lib.IEEE754_extra <> Bplus_commut thm
R13843:13854 compcert.lib.IEEE754_extra <> Bplus_commut thm
prf 13921:13930 Float mul_commut
binder 13942:13942 <> x:99
binder 13944:13944 <> y:100
R13991:13994 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14002:14004 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13995:13997 compcert.lib.Floats Float mul def
R14001:14001 compcert.lib.Floats <> y:100 var
R13999:13999 compcert.lib.Floats <> x:99 var
R14005:14007 compcert.lib.Floats Float mul def
R14011:14011 compcert.lib.Floats <> x:99 var
R14009:14009 compcert.lib.Floats <> y:100 var
R13967:13970 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R13959:13961 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13947:13952 Flocq.IEEE754.Binary <> is_nan def
R13958:13958 compcert.lib.Floats <> x:99 var
R13962:13966 Coq.Init.Datatypes <> false constr
R13983:13985 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13971:13976 Flocq.IEEE754.Binary <> is_nan def
R13982:13982 compcert.lib.Floats <> y:100 var
R13986:13990 Coq.Init.Datatypes <> false constr
R14037:14048 compcert.lib.IEEE754_extra <> Bmult_commut thm
R14037:14048 compcert.lib.IEEE754_extra <> Bmult_commut thm
prf 14165:14172 Float mul2_add
binder 14184:14184 <> f:101
R14194:14196 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14187:14189 compcert.lib.Floats Float add def
R14193:14193 compcert.lib.Floats <> f:101 var
R14191:14191 compcert.lib.Floats <> f:101 var
R14197:14199 compcert.lib.Floats Float mul def
R14204:14209 compcert.lib.Floats Float of_int def
R14212:14219 compcert.lib.Integers Int repr def
R14201:14201 compcert.lib.Floats <> f:101 var
R14251:14262 compcert.lib.IEEE754_extra <> Bmult2_Bplus thm
R14251:14262 compcert.lib.IEEE754_extra <> Bmult2_Bplus thm
R14292:14300 compcert.lib.Floats Float binop_nan def
R14350:14373 compcert.x86_32.Archi <> choose_nan_64_idem thm
R14350:14373 compcert.x86_32.Archi <> choose_nan_64_idem thm
R14350:14373 compcert.x86_32.Archi <> choose_nan_64_idem thm
def 14509:14521 Float exact_inverse
R14530:14533 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14534:14539 Coq.Init.Datatypes <> option ind
R14541:14545 compcert.lib.Floats <> float def
R14525:14529 compcert.lib.Floats <> float def
R14550:14563 compcert.lib.IEEE754_extra <> Bexact_inverse def
R14576:14577 compcert.lib.Floats <> __ syndef
R14573:14574 compcert.lib.Floats <> __ syndef
prf 14589:14603 Float div_mul_inverse
binder 14615:14615 <> x:102
binder 14617:14617 <> y:103
binder 14619:14619 <> z:104
R14646:14649 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14657:14659 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14650:14652 compcert.lib.Floats Float div def
R14656:14656 compcert.lib.Floats <> y:103 var
R14654:14654 compcert.lib.Floats <> x:102 var
R14660:14662 compcert.lib.Floats Float mul def
R14666:14666 compcert.lib.Floats <> z:104 var
R14664:14664 compcert.lib.Floats <> x:102 var
R14637:14639 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14622:14634 compcert.lib.Floats Float exact_inverse def
R14636:14636 compcert.lib.Floats <> y:103 var
R14640:14643 Coq.Init.Datatypes <> Some constr
R14645:14645 compcert.lib.Floats <> z:104 var
R14692:14708 compcert.lib.IEEE754_extra <> Bdiv_mult_inverse thm
R14692:14708 compcert.lib.IEEE754_extra <> Bdiv_mult_inverse thm
R14755:14763 compcert.lib.Floats Float binop_nan def
prf 14896:14903 Float cmp_swap
binder 14915:14915 <> c:105
binder 14917:14917 <> x:106
binder 14919:14919 <> y:107
R14949:14951 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14922:14924 compcert.lib.Floats Float cmp def
R14948:14948 compcert.lib.Floats <> y:107 var
R14946:14946 compcert.lib.Floats <> x:106 var
R14927:14941 compcert.lib.Integers <> swap_comparison def
R14943:14943 compcert.lib.Floats <> c:105 var
R14952:14954 compcert.lib.Floats Float cmp def
R14960:14960 compcert.lib.Floats <> x:106 var
R14958:14958 compcert.lib.Floats <> y:107 var
R14956:14956 compcert.lib.Floats <> c:105 var
R14979:14981 compcert.lib.Floats Float cmp def
R14984:14990 compcert.lib.Floats Float compare def
R15010:15022 Flocq.IEEE754.Binary <> Bcompare_swap thm
R15010:15022 Flocq.IEEE754.Binary <> Bcompare_swap thm
R15010:15022 Flocq.IEEE754.Binary <> Bcompare_swap thm
R15042:15063 compcert.lib.Floats <> cmp_of_comparison_swap thm
R15042:15063 compcert.lib.Floats <> cmp_of_comparison_swap thm
prf 15080:15088 Float cmp_ne_eq
binder 15100:15101 <> f1:108
binder 15103:15104 <> f2:109
R15120:15122 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15107:15109 compcert.lib.Floats Float cmp def
R15118:15119 compcert.lib.Floats <> f2:109 var
R15115:15116 compcert.lib.Floats <> f1:108 var
R15111:15113 compcert.lib.Integers <> Cne constr
R15123:15126 Coq.Init.Datatypes <> negb def
R15129:15131 compcert.lib.Floats Float cmp def
R15140:15141 compcert.lib.Floats <> f2:109 var
R15137:15138 compcert.lib.Floats <> f1:108 var
R15133:15135 compcert.lib.Integers <> Ceq constr
R15168:15190 compcert.lib.Floats <> cmp_of_comparison_ne_eq thm
R15168:15190 compcert.lib.Floats <> cmp_of_comparison_ne_eq thm
prf 15207:15221 Float cmp_lt_eq_false
binder 15233:15234 <> f1:110
binder 15236:15237 <> f2:111
R15260:15263 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15284:15287 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15288:15292 Coq.Init.Logic <> False ind
R15277:15279 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15264:15266 compcert.lib.Floats Float cmp def
R15275:15276 compcert.lib.Floats <> f2:111 var
R15272:15273 compcert.lib.Floats <> f1:110 var
R15268:15270 compcert.lib.Integers <> Ceq constr
R15280:15283 Coq.Init.Datatypes <> true constr
R15253:15255 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15240:15242 compcert.lib.Floats Float cmp def
R15251:15252 compcert.lib.Floats <> f2:111 var
R15248:15249 compcert.lib.Floats <> f1:110 var
R15244:15246 compcert.lib.Integers <> Clt constr
R15256:15259 Coq.Init.Datatypes <> true constr
R15324:15352 compcert.lib.Floats <> cmp_of_comparison_lt_eq_false thm
R15324:15352 compcert.lib.Floats <> cmp_of_comparison_lt_eq_false thm
prf 15369:15380 Float cmp_le_lt_eq
binder 15392:15393 <> f1:112
binder 15395:15396 <> f2:113
R15412:15414 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15399:15401 compcert.lib.Floats Float cmp def
R15410:15411 compcert.lib.Floats <> f2:113 var
R15407:15408 compcert.lib.Floats <> f1:112 var
R15403:15405 compcert.lib.Integers <> Cle constr
R15428:15431 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R15415:15417 compcert.lib.Floats Float cmp def
R15426:15427 compcert.lib.Floats <> f2:113 var
R15423:15424 compcert.lib.Floats <> f1:112 var
R15419:15421 compcert.lib.Integers <> Clt constr
R15432:15434 compcert.lib.Floats Float cmp def
R15443:15444 compcert.lib.Floats <> f2:113 var
R15440:15441 compcert.lib.Floats <> f1:112 var
R15436:15438 compcert.lib.Integers <> Ceq constr
R15476:15501 compcert.lib.Floats <> cmp_of_comparison_le_lt_eq thm
R15476:15501 compcert.lib.Floats <> cmp_of_comparison_le_lt_eq thm
prf 15518:15532 Float cmp_gt_eq_false
binder 15544:15544 <> x:114
binder 15546:15546 <> y:115
R15567:15570 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15589:15592 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15593:15597 Coq.Init.Logic <> False ind
R15582:15584 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15571:15573 compcert.lib.Floats Float cmp def
R15581:15581 compcert.lib.Floats <> y:115 var
R15579:15579 compcert.lib.Floats <> x:114 var
R15575:15577 compcert.lib.Integers <> Ceq constr
R15585:15588 Coq.Init.Datatypes <> true constr
R15560:15562 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15549:15551 compcert.lib.Floats Float cmp def
R15559:15559 compcert.lib.Floats <> y:115 var
R15557:15557 compcert.lib.Floats <> x:114 var
R15553:15555 compcert.lib.Integers <> Cgt constr
R15563:15566 Coq.Init.Datatypes <> true constr
R15629:15657 compcert.lib.Floats <> cmp_of_comparison_gt_eq_false thm
R15629:15657 compcert.lib.Floats <> cmp_of_comparison_gt_eq_false thm
prf 15674:15685 Float cmp_ge_gt_eq
binder 15697:15698 <> f1:116
binder 15700:15701 <> f2:117
R15717:15719 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15704:15706 compcert.lib.Floats Float cmp def
R15715:15716 compcert.lib.Floats <> f2:117 var
R15712:15713 compcert.lib.Floats <> f1:116 var
R15708:15710 compcert.lib.Integers <> Cge constr
R15733:15736 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R15720:15722 compcert.lib.Floats Float cmp def
R15731:15732 compcert.lib.Floats <> f2:117 var
R15728:15729 compcert.lib.Floats <> f1:116 var
R15724:15726 compcert.lib.Integers <> Cgt constr
R15737:15739 compcert.lib.Floats Float cmp def
R15748:15749 compcert.lib.Floats <> f2:117 var
R15745:15746 compcert.lib.Floats <> f1:116 var
R15741:15743 compcert.lib.Integers <> Ceq constr
R15781:15806 compcert.lib.Floats <> cmp_of_comparison_ge_gt_eq thm
R15781:15806 compcert.lib.Floats <> cmp_of_comparison_ge_gt_eq thm
prf 15823:15837 Float cmp_lt_gt_false
binder 15849:15850 <> f1:118
binder 15852:15853 <> f2:119
R15876:15879 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15900:15903 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15904:15908 Coq.Init.Logic <> False ind
R15893:15895 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15880:15882 compcert.lib.Floats Float cmp def
R15891:15892 compcert.lib.Floats <> f2:119 var
R15888:15889 compcert.lib.Floats <> f1:118 var
R15884:15886 compcert.lib.Integers <> Cgt constr
R15896:15899 Coq.Init.Datatypes <> true constr
R15869:15871 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15856:15858 compcert.lib.Floats Float cmp def
R15867:15868 compcert.lib.Floats <> f2:119 var
R15864:15865 compcert.lib.Floats <> f1:118 var
R15860:15862 compcert.lib.Integers <> Clt constr
R15872:15875 Coq.Init.Datatypes <> true constr
R15940:15968 compcert.lib.Floats <> cmp_of_comparison_lt_gt_false thm
R15940:15968 compcert.lib.Floats <> cmp_of_comparison_lt_gt_false thm
prf 16099:16108 Float of_to_bits
binder 16120:16120 <> f:120
R16142:16144 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16123:16129 compcert.lib.Floats Float of_bits def
R16132:16138 compcert.lib.Floats Float to_bits def
R16140:16140 compcert.lib.Floats <> f:120 var
R16145:16145 compcert.lib.Floats <> f:120 var
R16172:16178 compcert.lib.Floats Float of_bits def
R16181:16187 compcert.lib.Floats Float to_bits def
R16190:16200 Flocq.IEEE754.Bits <> bits_of_b64 def
R16203:16213 Flocq.IEEE754.Bits <> b64_of_bits def
R16226:16244 compcert.lib.Integers Int64 unsigned_repr thm
R16247:16282 Flocq.IEEE754.Bits <> binary_float_of_bits_of_binary_float thm
R16226:16244 compcert.lib.Integers Int64 unsigned_repr thm
R16226:16244 compcert.lib.Integers Int64 unsigned_repr thm
R16226:16244 compcert.lib.Integers Int64 unsigned_repr thm
R16247:16282 Flocq.IEEE754.Bits <> binary_float_of_bits_of_binary_float thm
R16247:16282 Flocq.IEEE754.Bits <> binary_float_of_bits_of_binary_float thm
R16315:16340 Flocq.IEEE754.Bits <> bits_of_binary_float_range thm
R16351:16352 compcert.lib.Floats <> __ syndef
R16348:16349 compcert.lib.Floats <> __ syndef
R16315:16340 Flocq.IEEE754.Bits <> bits_of_binary_float_range thm
R16351:16352 compcert.lib.Floats <> __ syndef
R16348:16349 compcert.lib.Floats <> __ syndef
R16369:16370 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R16378:16378 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R16376:16376 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16373:16373 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16405:16407 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16387:16404 compcert.lib.Integers Int64 max_unsigned def
R16369:16370 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R16378:16378 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R16376:16376 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16373:16373 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16405:16407 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16387:16404 compcert.lib.Integers Int64 max_unsigned def
prf 16433:16442 Float to_of_bits
binder 16454:16454 <> b:121
R16476:16478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16457:16463 compcert.lib.Floats Float to_bits def
R16466:16472 compcert.lib.Floats Float of_bits def
R16474:16474 compcert.lib.Floats <> b:121 var
R16479:16479 compcert.lib.Floats <> b:121 var
R16506:16512 compcert.lib.Floats Float of_bits def
R16515:16521 compcert.lib.Floats Float to_bits def
R16524:16534 Flocq.IEEE754.Bits <> bits_of_b64 def
R16537:16547 Flocq.IEEE754.Bits <> b64_of_bits def
R16560:16587 Flocq.IEEE754.Bits <> bits_of_binary_float_of_bits thm
R16560:16587 Flocq.IEEE754.Bits <> bits_of_binary_float_of_bits thm
R16560:16587 Flocq.IEEE754.Bits <> bits_of_binary_float_of_bits thm
R16560:16587 Flocq.IEEE754.Bits <> bits_of_binary_float_of_bits thm
R16596:16614 compcert.lib.Integers Int64 repr_unsigned thm
R16596:16614 compcert.lib.Integers Int64 repr_unsigned thm
R16625:16644 compcert.lib.Integers Int64 unsigned_range thm
R16625:16644 compcert.lib.Integers Int64 unsigned_range thm
def 16883:16893 Float ox8000_0000
R16898:16905 compcert.lib.Integers Int repr def
R16907:16922 compcert.lib.Integers Int half_modulus def
def 16959:16969 Float ox7FFF_FFFF
R16974:16981 compcert.lib.Integers Int repr def
R16983:16996 compcert.lib.Integers Int max_signed def
prf 17033:17048 Float of_intu_of_int_1
binder 17060:17060 <> x:122
R17093:17098 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17108:17110 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17099:17105 compcert.lib.Floats Float of_intu def
R17107:17107 compcert.lib.Floats <> x:122 var
R17111:17116 compcert.lib.Floats Float of_int def
R17118:17118 compcert.lib.Floats <> x:122 var
R17086:17088 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17065:17071 compcert.lib.Integers Int ltu def
R17075:17085 compcert.lib.Floats Float ox8000_0000 def
R17073:17073 compcert.lib.Floats <> x:122 var
R17089:17092 Coq.Init.Datatypes <> true constr
R17137:17143 compcert.lib.Floats Float of_intu def
R17146:17151 compcert.lib.Floats Float of_int def
R17154:17163 compcert.lib.Integers Int signed def
R17166:17172 compcert.lib.Integers Int ltu def
R17192:17203 compcert.lib.Integers Int unsigned def
R17205:17215 compcert.lib.Floats Float ox8000_0000 def
R17223:17238 compcert.lib.Integers Int half_modulus def
R17192:17203 compcert.lib.Integers Int unsigned def
R17205:17215 compcert.lib.Floats Float ox8000_0000 def
R17223:17238 compcert.lib.Integers Int half_modulus def
R17223:17238 compcert.lib.Integers Int half_modulus def
R17223:17238 compcert.lib.Integers Int half_modulus def
R17223:17238 compcert.lib.Integers Int half_modulus def
R17223:17238 compcert.lib.Integers Int half_modulus def
R17253:17255 compcert.lib.Coqlib <> zlt def
R17274:17289 compcert.lib.Integers Int half_modulus def
R17258:17269 compcert.lib.Integers Int unsigned def
R17253:17255 compcert.lib.Coqlib <> zlt def
R17274:17289 compcert.lib.Integers Int half_modulus def
R17258:17269 compcert.lib.Integers Int unsigned def
prf 17322:17337 Float of_intu_of_int_2
binder 17349:17349 <> x:123
R17383:17388 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17398:17400 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17389:17395 compcert.lib.Floats Float of_intu def
R17397:17397 compcert.lib.Floats <> x:123 var
R17401:17403 compcert.lib.Floats Float add def
R17439:17445 compcert.lib.Floats Float of_intu def
R17447:17457 compcert.lib.Floats Float ox8000_0000 def
R17406:17411 compcert.lib.Floats Float of_int def
R17414:17420 compcert.lib.Integers Int sub def
R17424:17434 compcert.lib.Floats Float ox8000_0000 def
R17422:17422 compcert.lib.Floats <> x:123 var
R17375:17377 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17354:17360 compcert.lib.Integers Int ltu def
R17364:17374 compcert.lib.Floats Float ox8000_0000 def
R17362:17362 compcert.lib.Floats <> x:123 var
R17378:17382 Coq.Init.Datatypes <> false constr
R17477:17479 compcert.lib.Floats Float add def
R17482:17488 compcert.lib.Floats Float of_intu def
R17491:17496 compcert.lib.Floats Float of_int def
R17519:17525 compcert.lib.Integers Int sub def
R17529:17539 compcert.lib.Floats Float ox8000_0000 def
R17519:17525 compcert.lib.Integers Int sub def
R17529:17539 compcert.lib.Floats Float ox8000_0000 def
R17557:17574 compcert.lib.Integers Int unsigned_range thm
R17592:17607 compcert.lib.Integers Int signed_range thm
R17557:17574 compcert.lib.Integers Int unsigned_range thm
R17592:17607 compcert.lib.Integers Int signed_range thm
R17627:17647 compcert.lib.IEEE754_extra <> integer_representable def
R17658:17667 compcert.lib.Integers Int signed def
R17627:17647 compcert.lib.IEEE754_extra <> integer_representable def
R17658:17667 compcert.lib.Integers Int signed def
R17684:17706 compcert.lib.IEEE754_extra <> integer_representable_n thm
R17684:17706 compcert.lib.IEEE754_extra <> integer_representable_n thm
R17744:17764 compcert.lib.IEEE754_extra <> integer_representable def
R17775:17786 compcert.lib.Integers Int unsigned def
R17788:17798 compcert.lib.Floats Float ox8000_0000 def
R17744:17764 compcert.lib.IEEE754_extra <> integer_representable def
R17775:17786 compcert.lib.Integers Int unsigned def
R17788:17798 compcert.lib.Floats Float ox8000_0000 def
R17813:17836 compcert.lib.IEEE754_extra <> integer_representable_2p thm
R17813:17836 compcert.lib.IEEE754_extra <> integer_representable_2p thm
R17884:17892 compcert.lib.IEEE754_extra <> BofZ_plus thm
R17884:17892 compcert.lib.IEEE754_extra <> BofZ_plus thm
R17884:17892 compcert.lib.IEEE754_extra <> BofZ_plus thm
R17923:17929 compcert.lib.Integers Int ltu def
R17946:17948 compcert.lib.Coqlib <> zlt def
R17986:17992 compcert.lib.Integers Int sub def
R18003:18017 compcert.lib.Integers Int signed_repr thm
R18003:18017 compcert.lib.Integers Int signed_repr thm
R18003:18017 compcert.lib.Integers Int signed_repr thm
R18003:18017 compcert.lib.Integers Int signed_repr thm
R18043:18054 compcert.lib.Integers Int unsigned def
R18056:18066 compcert.lib.Floats Float ox8000_0000 def
R18043:18054 compcert.lib.Integers Int unsigned def
R18056:18066 compcert.lib.Floats Float ox8000_0000 def
prf 18097:18112 Float of_intu_of_int_3
binder 18124:18124 <> x:124
R18138:18140 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18129:18135 compcert.lib.Floats Float of_intu def
R18137:18137 compcert.lib.Floats <> x:124 var
R18141:18143 compcert.lib.Floats Float sub def
R18179:18184 compcert.lib.Floats Float of_int def
R18187:18193 compcert.lib.Integers Int and def
R18197:18207 compcert.lib.Floats Float ox8000_0000 def
R18195:18195 compcert.lib.Floats <> x:124 var
R18146:18151 compcert.lib.Floats Float of_int def
R18154:18160 compcert.lib.Integers Int and def
R18164:18174 compcert.lib.Floats Float ox7FFF_FFFF def
R18162:18162 compcert.lib.Floats <> x:124 var
R18242:18248 compcert.lib.Integers Int and def
R18252:18262 compcert.lib.Floats Float ox8000_0000 def
R18242:18248 compcert.lib.Integers Int and def
R18252:18262 compcert.lib.Floats Float ox8000_0000 def
R18279:18285 compcert.lib.Integers Int and def
R18289:18299 compcert.lib.Floats Float ox7FFF_FFFF def
R18279:18285 compcert.lib.Integers Int and def
R18289:18299 compcert.lib.Floats Float ox7FFF_FFFF def
binder 18323:18323 <> n:125
R18326:18346 compcert.lib.IEEE754_extra <> integer_representable def
R18357:18366 compcert.lib.Integers Int signed def
R18368:18368 compcert.lib.Floats <> n:125 var
binder 18323:18323 <> n:126
R18326:18346 compcert.lib.IEEE754_extra <> integer_representable def
R18357:18366 compcert.lib.Integers Int signed def
R18368:18368 compcert.lib.Floats <> n:126 var
R18397:18412 compcert.lib.Integers Int signed_range thm
R18397:18412 compcert.lib.Integers Int signed_range thm
R18428:18450 compcert.lib.IEEE754_extra <> integer_representable_n thm
R18428:18450 compcert.lib.IEEE754_extra <> integer_representable_n thm
R18483:18485 compcert.lib.Floats Float sub def
R18488:18493 compcert.lib.Floats Float of_int def
R18504:18513 compcert.lib.IEEE754_extra <> BofZ_minus thm
R18504:18513 compcert.lib.IEEE754_extra <> BofZ_minus thm
R18504:18513 compcert.lib.IEEE754_extra <> BofZ_minus thm
R18531:18537 compcert.lib.Floats Float of_intu def
R18575:18577 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18562:18568 compcert.lib.Integers Int add def
R18575:18577 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18562:18568 compcert.lib.Integers Int add def
R18609:18621 compcert.lib.Integers Int add_is_or thm
R18609:18621 compcert.lib.Integers Int add_is_or thm
R18609:18621 compcert.lib.Integers Int add_is_or thm
R18609:18621 compcert.lib.Integers Int add_is_or thm
R18640:18657 compcert.lib.Integers Int and_or_distrib thm
R18640:18657 compcert.lib.Integers Int and_or_distrib thm
R18640:18657 compcert.lib.Integers Int and_or_distrib thm
R18666:18677 compcert.lib.Integers Int and_mone thm
R18666:18677 compcert.lib.Integers Int and_mone thm
R18692:18704 compcert.lib.Integers Int and_assoc thm
R18692:18704 compcert.lib.Integers Int and_assoc thm
R18692:18704 compcert.lib.Integers Int and_assoc thm
R18716:18729 compcert.lib.Integers Int and_commut thm
R18731:18741 compcert.lib.Floats Float ox8000_0000 def
R18716:18729 compcert.lib.Integers Int and_commut thm
R18731:18741 compcert.lib.Floats Float ox8000_0000 def
R18716:18729 compcert.lib.Integers Int and_commut thm
R18731:18741 compcert.lib.Floats Float ox8000_0000 def
R18753:18765 compcert.lib.Integers Int and_assoc thm
R18753:18765 compcert.lib.Integers Int and_assoc thm
R18753:18765 compcert.lib.Integers Int and_assoc thm
R18780:18786 compcert.lib.Integers Int and def
R18800:18810 compcert.lib.Floats Float ox8000_0000 def
R18788:18798 compcert.lib.Floats Float ox7FFF_FFFF def
R18818:18825 compcert.lib.Integers Int zero def
R18780:18786 compcert.lib.Integers Int and def
R18800:18810 compcert.lib.Floats Float ox8000_0000 def
R18788:18798 compcert.lib.Floats Float ox7FFF_FFFF def
R18818:18825 compcert.lib.Integers Int zero def
R18838:18849 compcert.lib.Integers Int and_zero thm
R18838:18849 compcert.lib.Integers Int and_zero thm
R18838:18849 compcert.lib.Integers Int and_zero thm
R18838:18849 compcert.lib.Integers Int and_zero thm
R18838:18849 compcert.lib.Integers Int and_zero thm
R18878:18881 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R18897:18899 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R18882:18893 compcert.lib.Integers Int unsigned def
R18882:18893 compcert.lib.Integers Int unsigned def
R18900:18904 Coq.ZArith.Zpower <> two_p def
R18878:18881 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R18897:18899 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R18882:18893 compcert.lib.Integers Int unsigned def
R18882:18893 compcert.lib.Integers Int unsigned def
R18900:18904 Coq.ZArith.Zpower <> two_p def
R18933:18943 compcert.lib.Floats Float ox7FFF_FFFF def
R18951:18958 compcert.lib.Integers Int repr def
R18969:18971 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18961:18965 Coq.ZArith.Zpower <> two_p def
R18933:18943 compcert.lib.Floats Float ox7FFF_FFFF def
R18951:18958 compcert.lib.Integers Int repr def
R18969:18971 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18961:18965 Coq.ZArith.Zpower <> two_p def
R18951:18958 compcert.lib.Integers Int repr def
R18969:18971 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18961:18965 Coq.ZArith.Zpower <> two_p def
R18988:19003 compcert.lib.Integers Int zero_ext_and thm
R18988:19003 compcert.lib.Integers Int zero_ext_and thm
R18988:19003 compcert.lib.Integers Int zero_ext_and thm
R19025:19042 compcert.lib.Integers Int zero_ext_range thm
R19025:19042 compcert.lib.Integers Int zero_ext_range thm
R19058:19070 compcert.lib.Integers Int zwordsize def
binder 19102:19102 <> i:127
R19127:19130 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19156:19158 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19131:19141 compcert.lib.Integers Int testbit def
R19155:19155 compcert.lib.Floats <> i:127 var
R19143:19153 compcert.lib.Floats Float ox8000_0000 def
R19162:19164 compcert.lib.Coqlib <> zeq def
R19166:19166 compcert.lib.Floats <> i:127 var
R19186:19190 Coq.Init.Datatypes <> false constr
R19176:19179 Coq.Init.Datatypes <> true constr
R19106:19109 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19111:19113 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19110:19110 compcert.lib.Floats <> i:127 var
R19110:19110 compcert.lib.Floats <> i:127 var
R19114:19126 compcert.lib.Integers Int zwordsize def
binder 19102:19102 <> i:128
R19127:19130 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19156:19158 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19131:19141 compcert.lib.Integers Int testbit def
R19155:19155 compcert.lib.Floats <> i:128 var
R19143:19153 compcert.lib.Floats Float ox8000_0000 def
R19162:19164 compcert.lib.Coqlib <> zeq def
R19166:19166 compcert.lib.Floats <> i:128 var
R19186:19190 Coq.Init.Datatypes <> false constr
R19176:19179 Coq.Init.Datatypes <> true constr
R19106:19109 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19111:19113 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19110:19110 compcert.lib.Floats <> i:128 var
R19110:19110 compcert.lib.Floats <> i:128 var
R19114:19126 compcert.lib.Integers Int zwordsize def
R19213:19223 compcert.lib.Integers Int testbit def
R19234:19245 compcert.lib.Integers Int unsigned def
R19247:19257 compcert.lib.Floats Float ox8000_0000 def
R19267:19267 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R19234:19245 compcert.lib.Integers Int unsigned def
R19247:19257 compcert.lib.Floats Float ox8000_0000 def
R19267:19267 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R19287:19289 compcert.lib.Coqlib <> zeq def
R19287:19289 compcert.lib.Coqlib <> zeq def
R19319:19335 Coq.ZArith.BinInt Z pow2_bits_false thm
R19319:19335 Coq.ZArith.BinInt Z pow2_bits_false thm
R19378:19381 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19367:19369 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19370:19377 compcert.lib.Integers Int zero def
R19384:19386 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19387:19397 compcert.lib.Floats Float ox8000_0000 def
R19378:19381 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19367:19369 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19370:19377 compcert.lib.Integers Int zero def
R19384:19386 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19387:19397 compcert.lib.Floats Float ox8000_0000 def
R19426:19436 compcert.lib.Integers Int testbit def
R19426:19436 compcert.lib.Integers Int testbit def
R19519:19521 compcert.lib.Coqlib <> zeq def
R19519:19521 compcert.lib.Coqlib <> zeq def
R19564:19575 Coq.Bool.Bool <> andb_false_r thm
R19564:19575 Coq.Bool.Bool <> andb_false_r thm
R19592:19594 compcert.lib.Coqlib <> zeq def
R19592:19594 compcert.lib.Coqlib <> zeq def
R19637:19648 Coq.Bool.Bool <> andb_false_r thm
R19637:19648 Coq.Bool.Bool <> andb_false_r thm
R19684:19686 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19669:19670 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R19671:19680 compcert.lib.Integers Int signed def
R19687:19698 compcert.lib.Integers Int unsigned def
R19684:19686 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19669:19670 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R19671:19680 compcert.lib.Integers Int signed def
R19687:19698 compcert.lib.Integers Int unsigned def
R19773:19777 Coq.ZArith.BinInt Z sub def
R19808:19814 compcert.lib.Integers Int add def
R19825:19841 compcert.lib.Integers Int unsigned_repr thm
R19844:19865 compcert.lib.Integers Int signed_eq_unsigned thm
R19825:19841 compcert.lib.Integers Int unsigned_repr thm
R19825:19841 compcert.lib.Integers Int unsigned_repr thm
R19825:19841 compcert.lib.Integers Int unsigned_repr thm
R19844:19865 compcert.lib.Integers Int signed_eq_unsigned thm
R19844:19865 compcert.lib.Integers Int signed_eq_unsigned thm
R19844:19865 compcert.lib.Integers Int signed_eq_unsigned thm
R19901:19903 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19887:19900 compcert.lib.Integers Int max_signed def
R19912:19914 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R19904:19908 Coq.ZArith.Zpower <> two_p def
R19901:19903 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19887:19900 compcert.lib.Integers Int max_signed def
R19912:19914 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R19904:19908 Coq.ZArith.Zpower <> two_p def
R19972:19975 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19968:19970 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19953:19964 compcert.lib.Integers Int unsigned def
R19991:19993 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19976:19987 compcert.lib.Integers Int unsigned def
R19994:19998 Coq.ZArith.Zpower <> two_p def
R19972:19975 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19968:19970 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19953:19964 compcert.lib.Integers Int unsigned def
R19991:19993 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19976:19987 compcert.lib.Integers Int unsigned def
R19994:19998 Coq.ZArith.Zpower <> two_p def
R20108:20110 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20092:20107 compcert.lib.Integers Int max_unsigned def
R20130:20132 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R20119:20121 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20111:20115 Coq.ZArith.Zpower <> two_p def
R20122:20126 Coq.ZArith.Zpower <> two_p def
R20108:20110 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20092:20107 compcert.lib.Integers Int max_unsigned def
R20130:20132 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R20119:20121 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20111:20115 Coq.ZArith.Zpower <> two_p def
R20122:20126 Coq.ZArith.Zpower <> two_p def
prf 20177:20192 Float to_intu_to_int_1
binder 20204:20204 <> x:129
binder 20206:20206 <> n:130
R20249:20254 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20273:20278 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20287:20289 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20279:20284 compcert.lib.Floats Float to_int def
R20286:20286 compcert.lib.Floats <> x:129 var
R20290:20293 Coq.Init.Datatypes <> Some constr
R20295:20295 compcert.lib.Floats <> n:130 var
R20264:20266 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20255:20261 compcert.lib.Floats Float to_intu def
R20263:20263 compcert.lib.Floats <> x:129 var
R20267:20270 Coq.Init.Datatypes <> Some constr
R20272:20272 compcert.lib.Floats <> n:130 var
R20242:20244 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20211:20213 compcert.lib.Floats Float cmp def
R20222:20228 compcert.lib.Floats Float of_intu def
R20230:20240 compcert.lib.Floats Float ox8000_0000 def
R20219:20219 compcert.lib.Floats <> x:129 var
R20215:20217 compcert.lib.Integers <> Clt constr
R20245:20248 Coq.Init.Datatypes <> true constr
R20322:20328 compcert.lib.Floats Float to_intu def
R20349:20358 compcert.lib.IEEE754_extra <> ZofB_range def
R20372:20387 compcert.lib.Integers Int max_unsigned def
R20349:20358 compcert.lib.IEEE754_extra <> ZofB_range def
R20372:20387 compcert.lib.Integers Int max_unsigned def
R20436:20455 compcert.lib.IEEE754_extra <> ZofB_range_inversion thm
R20494:20499 compcert.lib.Floats Float to_int def
R20502:20511 compcert.lib.IEEE754_extra <> ZofB_range def
R20535:20547 Flocq.Core.Zaux <> Zle_bool_true thm
R20535:20547 Flocq.Core.Zaux <> Zle_bool_true thm
R20535:20547 Flocq.Core.Zaux <> Zle_bool_true thm
R20573:20585 Flocq.Core.Zaux <> Zle_bool_true thm
R20573:20585 Flocq.Core.Zaux <> Zle_bool_true thm
R20573:20585 Flocq.Core.Zaux <> Zle_bool_true thm
R20573:20585 Flocq.Core.Zaux <> Zle_bool_true thm
R20605:20614 compcert.lib.IEEE754_extra <> BofZ_exact thm
R20631:20642 compcert.lib.Integers Int unsigned def
R20644:20654 compcert.lib.Floats Float ox8000_0000 def
R20627:20628 compcert.lib.Floats <> __ syndef
R20624:20625 compcert.lib.Floats <> __ syndef
R20605:20614 compcert.lib.IEEE754_extra <> BofZ_exact thm
R20631:20642 compcert.lib.Integers Int unsigned def
R20644:20654 compcert.lib.Floats Float ox8000_0000 def
R20627:20628 compcert.lib.Floats <> __ syndef
R20624:20625 compcert.lib.Floats <> __ syndef
R20707:20713 compcert.lib.Floats Float of_intu def
R20715:20725 compcert.lib.Floats Float ox8000_0000 def
R20707:20713 compcert.lib.Floats Float of_intu def
R20715:20725 compcert.lib.Floats Float ox8000_0000 def
R20744:20747 compcert.lib.IEEE754_extra <> BofZ def
R20774:20785 compcert.lib.Integers Int unsigned def
R20787:20797 compcert.lib.Floats Float ox8000_0000 def
R20765:20771 Coq.Init.Logic <> eq_refl constr
R20757:20763 Coq.Init.Logic <> eq_refl constr
R20744:20747 compcert.lib.IEEE754_extra <> BofZ def
R20774:20785 compcert.lib.Integers Int unsigned def
R20787:20797 compcert.lib.Floats Float ox8000_0000 def
R20765:20771 Coq.Init.Logic <> eq_refl constr
R20757:20763 Coq.Init.Logic <> eq_refl constr
R20871:20873 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20856:20864 Flocq.IEEE754.Binary <> is_finite def
R20874:20877 Coq.Init.Datatypes <> true constr
R20871:20873 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20856:20864 Flocq.IEEE754.Binary <> is_finite def
R20874:20877 Coq.Init.Datatypes <> true constr
R20893:20904 compcert.lib.IEEE754_extra <> ZofB_correct thm
R20893:20904 compcert.lib.IEEE754_extra <> ZofB_correct thm
R20893:20904 compcert.lib.IEEE754_extra <> ZofB_correct thm
R20922:20930 Flocq.IEEE754.Binary <> is_finite def
R20922:20930 Flocq.IEEE754.Binary <> is_finite def
R20975:20977 compcert.lib.Coqlib <> zeq def
R20975:20977 compcert.lib.Coqlib <> zeq def
R21021:21034 compcert.lib.IEEE754_extra <> ZofB_range_pos thm
R21047:21048 compcert.lib.Floats <> __ syndef
R21044:21045 compcert.lib.Floats <> __ syndef
R21021:21034 compcert.lib.IEEE754_extra <> ZofB_range_pos thm
R21047:21048 compcert.lib.Floats <> __ syndef
R21044:21045 compcert.lib.Floats <> __ syndef
R21105:21107 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21089:21096 Flocq.IEEE754.Binary <> Bcompare def
R21108:21111 Coq.Init.Datatypes <> Some constr
R21113:21114 Coq.Init.Datatypes <> Lt constr
R21105:21107 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21089:21096 Flocq.IEEE754.Binary <> Bcompare def
R21108:21111 Coq.Init.Datatypes <> Some constr
R21113:21114 Coq.Init.Datatypes <> Lt constr
R21129:21131 compcert.lib.Floats Float cmp def
R21134:21150 compcert.lib.Floats <> cmp_of_comparison def
R21153:21159 compcert.lib.Floats Float compare def
R21177:21184 Flocq.IEEE754.Binary <> Bcompare def
R21177:21184 Flocq.IEEE754.Binary <> Bcompare def
R21237:21252 Flocq.IEEE754.Binary <> Bcompare_correct thm
R21237:21252 Flocq.IEEE754.Binary <> Bcompare_correct thm
R21237:21252 Flocq.IEEE754.Binary <> Bcompare_correct thm
R21287:21301 Flocq.Core.Raux <> Rcompare_Lt_inv thm
R21287:21301 Flocq.Core.Raux <> Rcompare_Lt_inv thm
R21340:21342 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R21343:21354 compcert.lib.Integers Int unsigned def
R21356:21366 compcert.lib.Floats Float ox8000_0000 def
R21340:21342 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R21343:21354 compcert.lib.Integers Int unsigned def
R21356:21366 compcert.lib.Floats Float ox8000_0000 def
R21380:21385 Coq.Reals.RIneq <> lt_IZR thm
R21380:21385 Coq.Reals.RIneq <> lt_IZR thm
R21394:21405 Coq.Reals.RIneq <> Rle_lt_trans thm
R21394:21405 Coq.Reals.RIneq <> Rle_lt_trans thm
R21443:21456 compcert.lib.Integers Int max_signed def
R21488:21490 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R21464:21475 compcert.lib.Integers Int unsigned def
R21477:21487 compcert.lib.Floats Float ox8000_0000 def
R21443:21456 compcert.lib.Integers Int max_signed def
R21488:21490 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R21464:21475 compcert.lib.Integers Int unsigned def
R21477:21487 compcert.lib.Floats Float ox8000_0000 def
prf 21516:21531 Float to_intu_to_int_2
binder 21543:21543 <> x:131
binder 21545:21545 <> n:132
R21589:21594 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21613:21618 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21655:21657 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21619:21624 compcert.lib.Floats Float to_int def
R21627:21629 compcert.lib.Floats Float sub def
R21634:21640 compcert.lib.Floats Float of_intu def
R21642:21652 compcert.lib.Floats Float ox8000_0000 def
R21631:21631 compcert.lib.Floats <> x:131 var
R21658:21661 Coq.Init.Datatypes <> Some constr
R21664:21670 compcert.lib.Integers Int sub def
R21674:21684 compcert.lib.Floats Float ox8000_0000 def
R21672:21672 compcert.lib.Floats <> n:132 var
R21604:21606 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21595:21601 compcert.lib.Floats Float to_intu def
R21603:21603 compcert.lib.Floats <> x:131 var
R21607:21610 Coq.Init.Datatypes <> Some constr
R21612:21612 compcert.lib.Floats <> n:132 var
R21581:21583 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21550:21552 compcert.lib.Floats Float cmp def
R21561:21567 compcert.lib.Floats Float of_intu def
R21569:21579 compcert.lib.Floats Float ox8000_0000 def
R21558:21558 compcert.lib.Floats <> x:131 var
R21554:21556 compcert.lib.Integers <> Clt constr
R21584:21588 Coq.Init.Datatypes <> false constr
R21712:21718 compcert.lib.Floats Float to_intu def
R21739:21748 compcert.lib.IEEE754_extra <> ZofB_range def
R21758:21773 compcert.lib.Integers Int max_unsigned def
R21739:21748 compcert.lib.IEEE754_extra <> ZofB_range def
R21758:21773 compcert.lib.Integers Int max_unsigned def
R21822:21841 compcert.lib.IEEE754_extra <> ZofB_range_inversion thm
R21882:21891 compcert.lib.IEEE754_extra <> BofZ_exact thm
R21908:21919 compcert.lib.Integers Int unsigned def
R21921:21931 compcert.lib.Floats Float ox8000_0000 def
R21904:21905 compcert.lib.Floats <> __ syndef
R21901:21902 compcert.lib.Floats <> __ syndef
R21882:21891 compcert.lib.IEEE754_extra <> BofZ_exact thm
R21908:21919 compcert.lib.Integers Int unsigned def
R21921:21931 compcert.lib.Floats Float ox8000_0000 def
R21904:21905 compcert.lib.Floats <> __ syndef
R21901:21902 compcert.lib.Floats <> __ syndef
R21984:21990 compcert.lib.Floats Float of_intu def
R21992:22002 compcert.lib.Floats Float ox8000_0000 def
R21984:21990 compcert.lib.Floats Float of_intu def
R21992:22002 compcert.lib.Floats Float ox8000_0000 def
R22021:22024 compcert.lib.IEEE754_extra <> BofZ def
R22041:22052 compcert.lib.Integers Int unsigned def
R22054:22064 compcert.lib.Floats Float ox8000_0000 def
R22037:22038 compcert.lib.Floats <> __ syndef
R22034:22035 compcert.lib.Floats <> __ syndef
R22021:22024 compcert.lib.IEEE754_extra <> BofZ def
R22041:22052 compcert.lib.Integers Int unsigned def
R22054:22064 compcert.lib.Floats Float ox8000_0000 def
R22037:22038 compcert.lib.Floats <> __ syndef
R22034:22035 compcert.lib.Floats <> __ syndef
R22138:22140 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22123:22131 Flocq.IEEE754.Binary <> is_finite def
R22141:22144 Coq.Init.Datatypes <> true constr
R22138:22140 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22123:22131 Flocq.IEEE754.Binary <> is_finite def
R22141:22144 Coq.Init.Datatypes <> true constr
R22160:22171 compcert.lib.IEEE754_extra <> ZofB_correct thm
R22160:22171 compcert.lib.IEEE754_extra <> ZofB_correct thm
R22160:22171 compcert.lib.IEEE754_extra <> ZofB_correct thm
R22189:22197 Flocq.IEEE754.Binary <> is_finite def
R22189:22197 Flocq.IEEE754.Binary <> is_finite def
R22254:22257 Coq.Reals.Rdefinitions <> ::R_scope:x_'>='_x not
R22245:22247 Flocq.IEEE754.Binary <> B2R def
R22258:22260 Coq.Reals.Rdefinitions <> IZR def
R22263:22274 compcert.lib.Integers Int unsigned def
R22276:22286 compcert.lib.Floats Float ox8000_0000 def
R22254:22257 Coq.Reals.Rdefinitions <> ::R_scope:x_'>='_x not
R22245:22247 Flocq.IEEE754.Binary <> B2R def
R22258:22260 Coq.Reals.Rdefinitions <> IZR def
R22263:22274 compcert.lib.Integers Int unsigned def
R22276:22286 compcert.lib.Floats Float ox8000_0000 def
R22321:22323 compcert.lib.Floats Float cmp def
R22326:22342 compcert.lib.Floats <> cmp_of_comparison def
R22345:22351 compcert.lib.Floats Float compare def
R22371:22386 Flocq.IEEE754.Binary <> Bcompare_correct thm
R22371:22386 Flocq.IEEE754.Binary <> Bcompare_correct thm
R22371:22386 Flocq.IEEE754.Binary <> Bcompare_correct thm
R22416:22423 Flocq.Core.Raux <> Rcompare def
R22442:22444 Flocq.IEEE754.Binary <> B2R def
R22426:22428 Flocq.IEEE754.Binary <> B2R def
R22416:22423 Flocq.Core.Raux <> Rcompare def
R22442:22444 Flocq.IEEE754.Binary <> B2R def
R22426:22428 Flocq.IEEE754.Binary <> B2R def
R22477:22482 Coq.Reals.RIneq <> Req_ge thm
R22491:22505 Flocq.Core.Raux <> Rcompare_Eq_inv thm
R22477:22482 Coq.Reals.RIneq <> Req_ge thm
R22491:22505 Flocq.Core.Raux <> Rcompare_Eq_inv thm
R22542:22547 Coq.Reals.RIneq <> Rgt_ge thm
R22556:22570 Flocq.Core.Raux <> Rcompare_Gt_inv thm
R22542:22547 Coq.Reals.RIneq <> Rgt_ge thm
R22556:22570 Flocq.Core.Raux <> Rcompare_Gt_inv thm
R22651:22653 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22597:22606 compcert.lib.IEEE754_extra <> ZofB_range def
R22637:22650 compcert.lib.Integers Int max_signed def
R22622:22635 compcert.lib.Integers Int min_signed def
R22613:22615 compcert.lib.Floats Float sub def
R22654:22657 Coq.Init.Datatypes <> Some constr
R22661:22663 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R22664:22675 compcert.lib.Integers Int unsigned def
R22677:22687 compcert.lib.Floats Float ox8000_0000 def
R22651:22653 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22597:22606 compcert.lib.IEEE754_extra <> ZofB_range def
R22637:22650 compcert.lib.Integers Int max_signed def
R22622:22635 compcert.lib.Integers Int min_signed def
R22613:22615 compcert.lib.Floats Float sub def
R22654:22657 Coq.Init.Datatypes <> Some constr
R22661:22663 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R22664:22675 compcert.lib.Integers Int unsigned def
R22677:22687 compcert.lib.Floats Float ox8000_0000 def
R22702:22717 compcert.lib.IEEE754_extra <> ZofB_range_minus thm
R22702:22717 compcert.lib.IEEE754_extra <> ZofB_range_minus thm
R22747:22758 compcert.lib.Integers Int unsigned def
R22760:22770 compcert.lib.Floats Float ox8000_0000 def
R22747:22758 compcert.lib.Integers Int unsigned def
R22760:22770 compcert.lib.Floats Float ox8000_0000 def
R22797:22802 Coq.Reals.RIneq <> Rge_le thm
R22797:22802 Coq.Reals.RIneq <> Rge_le thm
R22824:22829 compcert.lib.Floats Float to_int def
R22858:22864 compcert.lib.Integers Int sub def
R22875:22891 compcert.lib.Integers Int unsigned_repr thm
R22875:22891 compcert.lib.Integers Int unsigned_repr thm
R22875:22891 compcert.lib.Integers Int unsigned_repr thm
def 23162:23172 Float ox4330_0000
R23177:23184 compcert.lib.Integers Int repr def
prf 23234:23246 Float split_bits_or
binder 23258:23258 <> x:133
R23326:23328 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23263:23272 Flocq.IEEE754.Bits <> split_bits def
R23281:23294 compcert.lib.Integers Int64 unsigned def
R23297:23309 compcert.lib.Integers Int64 ofwords def
R23323:23323 compcert.lib.Floats <> x:133 var
R23311:23321 compcert.lib.Floats Float ox4330_0000 def
R23329:23329 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23335:23336 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23351:23352 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23357:23357 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23330:23334 Coq.Init.Datatypes <> false constr
R23337:23348 compcert.lib.Integers Int unsigned def
R23350:23350 compcert.lib.Floats <> x:133 var
R23393:23402 Flocq.IEEE754.Bits <> split_bits def
R23411:23419 Flocq.IEEE754.Bits <> join_bits def
R23434:23445 compcert.lib.Integers Int unsigned def
R23427:23431 Coq.Init.Datatypes <> false constr
R23393:23402 Flocq.IEEE754.Bits <> split_bits def
R23411:23419 Flocq.IEEE754.Bits <> join_bits def
R23434:23445 compcert.lib.Integers Int unsigned def
R23427:23431 Coq.Init.Datatypes <> false constr
R23479:23496 compcert.lib.Integers Int64 ofwords_add' thm
R23479:23496 compcert.lib.Integers Int64 ofwords_add' thm
R23479:23496 compcert.lib.Integers Int64 ofwords_add' thm
R23522:23536 Flocq.IEEE754.Bits <> split_join_bits thm
R23522:23536 Flocq.IEEE754.Bits <> split_join_bits thm
R23555:23572 compcert.lib.Integers Int unsigned_range thm
R23555:23572 compcert.lib.Integers Int unsigned_range thm
R23623:23623 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R23595:23605 compcert.lib.Integers Int modulus def
R23623:23623 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R23655:23655 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R23655:23655 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
prf 23680:23695 Float from_words_value
binder 23707:23707 <> x:134
R23793:23798 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23749:23751 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23715:23717 Flocq.IEEE754.Binary <> B2R def
R23724:23733 compcert.lib.Floats Float from_words def
R23747:23747 compcert.lib.Floats <> x:134 var
R23735:23745 compcert.lib.Floats Float ox4330_0000 def
R23767:23769 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R23753:23756 Flocq.Core.Raux <> bpow def
R23758:23763 Flocq.Core.Zaux <> radix2 def
R23770:23772 Coq.Reals.Rdefinitions <> IZR def
R23775:23786 compcert.lib.Integers Int unsigned def
R23788:23788 compcert.lib.Floats <> x:134 var
R23846:23851 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23839:23841 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23799:23807 Flocq.IEEE754.Binary <> is_finite def
R23814:23823 compcert.lib.Floats Float from_words def
R23837:23837 compcert.lib.Floats <> x:134 var
R23825:23835 compcert.lib.Floats Float ox4330_0000 def
R23842:23845 Coq.Init.Datatypes <> true constr
R23888:23890 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23852:23856 Flocq.IEEE754.Binary <> Bsign def
R23863:23872 compcert.lib.Floats Float from_words def
R23886:23886 compcert.lib.Floats <> x:134 var
R23874:23884 compcert.lib.Floats Float ox4330_0000 def
R23891:23895 Coq.Init.Datatypes <> false constr
R23922:23931 compcert.lib.Floats Float from_words def
R23934:23940 compcert.lib.Floats Float of_bits def
R23943:23953 Flocq.IEEE754.Bits <> b64_of_bits def
R23956:23975 Flocq.IEEE754.Bits <> binary_float_of_bits def
R23988:23995 Flocq.IEEE754.Binary <> B2R_FF2B thm
R23998:24011 Flocq.IEEE754.Binary <> is_finite_FF2B thm
R24014:24023 Flocq.IEEE754.Binary <> Bsign_FF2B thm
R23988:23995 Flocq.IEEE754.Binary <> B2R_FF2B thm
R23988:23995 Flocq.IEEE754.Binary <> B2R_FF2B thm
R23998:24011 Flocq.IEEE754.Binary <> is_finite_FF2B thm
R23998:24011 Flocq.IEEE754.Binary <> is_finite_FF2B thm
R24014:24023 Flocq.IEEE754.Binary <> Bsign_FF2B thm
R24014:24023 Flocq.IEEE754.Binary <> Bsign_FF2B thm
R24035:24058 Flocq.IEEE754.Bits <> binary_float_of_bits_aux def
R24069:24081 compcert.lib.Floats Float split_bits_or thm
R24103:24120 compcert.lib.Integers Int unsigned_range thm
R24069:24081 compcert.lib.Floats Float split_bits_or thm
R24069:24081 compcert.lib.Floats Float split_bits_or thm
R24103:24120 compcert.lib.Integers Int unsigned_range thm
R24152:24154 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R24138:24149 compcert.lib.Integers Int unsigned def
R24155:24163 Coq.ZArith.BinInt Z pow_pos def
R24152:24154 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R24138:24149 compcert.lib.Integers Int unsigned def
R24155:24163 Coq.ZArith.BinInt Z pow_pos def
R24240:24242 Flocq.Core.Defs <> F2R def
R24275:24283 Coq.Reals.RIneq <> Rmult_1_r thm
R24286:24293 Coq.Reals.RIneq <> plus_IZR thm
R24275:24283 Coq.Reals.RIneq <> Rmult_1_r thm
R24275:24283 Coq.Reals.RIneq <> Rmult_1_r thm
R24286:24293 Coq.Reals.RIneq <> plus_IZR thm
R24286:24293 Coq.Reals.RIneq <> plus_IZR thm
R24302:24311 Coq.Reals.Raxioms <> Rplus_comm thm
R24302:24311 Coq.Reals.Raxioms <> Rplus_comm thm
prf 24354:24366 Float from_words_eq
binder 24378:24378 <> x:135
R24405:24407 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24381:24390 compcert.lib.Floats Float from_words def
R24404:24404 compcert.lib.Floats <> x:135 var
R24392:24402 compcert.lib.Floats Float ox4330_0000 def
R24408:24411 compcert.lib.IEEE754_extra <> BofZ def
R24432:24434 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R24429:24429 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R24435:24446 compcert.lib.Integers Int unsigned def
R24448:24448 compcert.lib.Floats <> x:135 var
R24424:24425 compcert.lib.Floats <> __ syndef
R24421:24422 compcert.lib.Floats <> __ syndef
R24483:24500 compcert.lib.Integers Int unsigned_range thm
R24483:24500 compcert.lib.Integers Int unsigned_range thm
R24518:24533 compcert.lib.Floats Float from_words_value thm
R24518:24533 compcert.lib.Floats Float from_words_value thm
R24566:24575 compcert.lib.IEEE754_extra <> BofZ_exact thm
R24596:24598 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R24593:24593 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R24599:24610 compcert.lib.Integers Int unsigned def
R24588:24589 compcert.lib.Floats <> __ syndef
R24585:24586 compcert.lib.Floats <> __ syndef
R24566:24575 compcert.lib.IEEE754_extra <> BofZ_exact thm
R24596:24598 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R24593:24593 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R24599:24610 compcert.lib.Integers Int unsigned def
R24588:24589 compcert.lib.Floats <> __ syndef
R24585:24586 compcert.lib.Floats <> __ syndef
R24655:24667 Flocq.IEEE754.Binary <> B2R_Bsign_inj thm
R24655:24667 Flocq.IEEE754.Binary <> B2R_Bsign_inj thm
R24700:24707 Coq.Reals.RIneq <> plus_IZR thm
R24700:24707 Coq.Reals.RIneq <> plus_IZR thm
R24700:24707 Coq.Reals.RIneq <> plus_IZR thm
R24748:24761 Flocq.Core.Zaux <> Zlt_bool_false thm
R24748:24761 Flocq.Core.Zaux <> Zlt_bool_false thm
prf 24791:24808 Float of_intu_from_words
binder 24820:24820 <> x:136
R24834:24836 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24825:24831 compcert.lib.Floats Float of_intu def
R24833:24833 compcert.lib.Floats <> x:136 var
R24837:24839 compcert.lib.Floats Float sub def
R24869:24878 compcert.lib.Floats Float from_words def
R24892:24899 compcert.lib.Integers Int zero def
R24880:24890 compcert.lib.Floats Float ox4330_0000 def
R24842:24851 compcert.lib.Floats Float from_words def
R24865:24865 compcert.lib.Floats <> x:136 var
R24853:24863 compcert.lib.Floats Float ox4330_0000 def
R24932:24949 compcert.lib.Integers Int unsigned_range thm
R24932:24949 compcert.lib.Integers Int unsigned_range thm
R24967:24979 compcert.lib.Floats Float from_words_eq thm
R24967:24979 compcert.lib.Floats Float from_words_eq thm
R24967:24979 compcert.lib.Floats Float from_words_eq thm
R24967:24979 compcert.lib.Floats Float from_words_eq thm
R24967:24979 compcert.lib.Floats Float from_words_eq thm
R24989:24991 compcert.lib.Floats Float sub def
R25002:25011 compcert.lib.IEEE754_extra <> BofZ_minus thm
R25002:25011 compcert.lib.IEEE754_extra <> BofZ_minus thm
R25002:25011 compcert.lib.IEEE754_extra <> BofZ_minus thm
R25002:25011 compcert.lib.IEEE754_extra <> BofZ_minus thm
R25002:25011 compcert.lib.IEEE754_extra <> BofZ_minus thm
R25023:25029 compcert.lib.Floats Float of_intu def
R25039:25045 Coq.Init.Logic <> f_equal thm
R25048:25051 compcert.lib.IEEE754_extra <> BofZ def
R25064:25065 compcert.lib.Floats <> __ syndef
R25061:25062 compcert.lib.Floats <> __ syndef
R25039:25045 Coq.Init.Logic <> f_equal thm
R25048:25051 compcert.lib.IEEE754_extra <> BofZ def
R25064:25065 compcert.lib.Floats <> __ syndef
R25061:25062 compcert.lib.Floats <> __ syndef
R25078:25094 compcert.lib.Integers Int unsigned_zero thm
R25078:25094 compcert.lib.Integers Int unsigned_zero thm
R25078:25094 compcert.lib.Integers Int unsigned_zero thm
R25112:25134 compcert.lib.IEEE754_extra <> integer_representable_n thm
R25112:25134 compcert.lib.IEEE754_extra <> integer_representable_n thm
R25164:25186 compcert.lib.IEEE754_extra <> integer_representable_n thm
R25203:25219 compcert.lib.Integers Int unsigned_zero thm
R25164:25186 compcert.lib.IEEE754_extra <> integer_representable_n thm
R25203:25219 compcert.lib.Integers Int unsigned_zero thm
R25203:25219 compcert.lib.Integers Int unsigned_zero thm
prf 25247:25273 Float ox8000_0000_signed_unsigned
binder 25285:25285 <> x:137
R25328:25330 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25292:25303 compcert.lib.Integers Int unsigned def
R25306:25312 compcert.lib.Integers Int add def
R25316:25326 compcert.lib.Floats Float ox8000_0000 def
R25314:25314 compcert.lib.Floats <> x:137 var
R25343:25345 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R25331:25340 compcert.lib.Integers Int signed def
R25342:25342 compcert.lib.Floats <> x:137 var
R25346:25361 compcert.lib.Integers Int half_modulus def
R25387:25396 compcert.lib.Integers Int signed def
R25399:25405 compcert.lib.Integers Int add def
R25420:25437 compcert.lib.Integers Int unsigned_range thm
R25420:25437 compcert.lib.Integers Int unsigned_range thm
R25455:25457 compcert.lib.Coqlib <> zlt def
R25476:25491 compcert.lib.Integers Int half_modulus def
R25460:25471 compcert.lib.Integers Int unsigned def
R25455:25457 compcert.lib.Coqlib <> zlt def
R25476:25491 compcert.lib.Integers Int half_modulus def
R25460:25471 compcert.lib.Integers Int unsigned def
R25505:25521 compcert.lib.Integers Int unsigned_repr thm
R25538:25549 compcert.lib.Integers Int unsigned def
R25551:25561 compcert.lib.Floats Float ox8000_0000 def
R25505:25521 compcert.lib.Integers Int unsigned_repr thm
R25505:25521 compcert.lib.Integers Int unsigned_repr thm
R25505:25521 compcert.lib.Integers Int unsigned_repr thm
R25538:25549 compcert.lib.Integers Int unsigned def
R25551:25561 compcert.lib.Floats Float ox8000_0000 def
R25538:25549 compcert.lib.Integers Int unsigned def
R25551:25561 compcert.lib.Floats Float ox8000_0000 def
R25593:25608 compcert.lib.Integers Int eqm_samerepr thm
R25627:25629 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R25613:25624 compcert.lib.Integers Int unsigned def
R25593:25608 compcert.lib.Integers Int eqm_samerepr thm
R25627:25629 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R25613:25624 compcert.lib.Integers Int unsigned def
R25593:25608 compcert.lib.Integers Int eqm_samerepr thm
R25627:25629 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R25613:25624 compcert.lib.Integers Int unsigned def
R25593:25608 compcert.lib.Integers Int eqm_samerepr thm
R25627:25629 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R25613:25624 compcert.lib.Integers Int unsigned def
R25655:25671 compcert.lib.Integers Int unsigned_repr thm
R25655:25671 compcert.lib.Integers Int unsigned_repr thm
R25655:25671 compcert.lib.Integers Int unsigned_repr thm
R25655:25671 compcert.lib.Integers Int unsigned_repr thm
R25699:25709 compcert.lib.Integers Int eqm_add thm
R25723:25734 compcert.lib.Integers Int eqm_refl thm
R25699:25709 compcert.lib.Integers Int eqm_add thm
R25723:25734 compcert.lib.Integers Int eqm_refl thm
prf 25773:25789 Float of_int_from_words
binder 25801:25801 <> x:138
R25814:25816 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25806:25811 compcert.lib.Floats Float of_int def
R25813:25813 compcert.lib.Floats <> x:138 var
R25817:25819 compcert.lib.Floats Float sub def
R25888:25897 compcert.lib.Floats Float from_words def
R25911:25921 compcert.lib.Floats Float ox8000_0000 def
R25899:25909 compcert.lib.Floats Float ox4330_0000 def
R25822:25831 compcert.lib.Floats Float from_words def
R25846:25852 compcert.lib.Integers Int add def
R25856:25866 compcert.lib.Floats Float ox8000_0000 def
R25854:25854 compcert.lib.Floats <> x:138 var
R25833:25843 compcert.lib.Floats Float ox4330_0000 def
R25956:25971 compcert.lib.Integers Int signed_range thm
R25956:25971 compcert.lib.Integers Int signed_range thm
R25989:26001 compcert.lib.Floats Float from_words_eq thm
R25989:26001 compcert.lib.Floats Float from_words_eq thm
R25989:26001 compcert.lib.Floats Float from_words_eq thm
R25989:26001 compcert.lib.Floats Float from_words_eq thm
R25989:26001 compcert.lib.Floats Float from_words_eq thm
R26012:26038 compcert.lib.Floats Float ox8000_0000_signed_unsigned thm
R26012:26038 compcert.lib.Floats Float ox8000_0000_signed_unsigned thm
R26012:26038 compcert.lib.Floats Float ox8000_0000_signed_unsigned thm
R26051:26062 compcert.lib.Integers Int unsigned def
R26064:26074 compcert.lib.Floats Float ox8000_0000 def
R26082:26097 compcert.lib.Integers Int half_modulus def
R26051:26062 compcert.lib.Integers Int unsigned def
R26064:26074 compcert.lib.Floats Float ox8000_0000 def
R26082:26097 compcert.lib.Integers Int half_modulus def
R26109:26111 compcert.lib.Floats Float sub def
R26122:26131 compcert.lib.IEEE754_extra <> BofZ_minus thm
R26122:26131 compcert.lib.IEEE754_extra <> BofZ_minus thm
R26122:26131 compcert.lib.IEEE754_extra <> BofZ_minus thm
R26122:26131 compcert.lib.IEEE754_extra <> BofZ_minus thm
R26122:26131 compcert.lib.IEEE754_extra <> BofZ_minus thm
R26143:26148 compcert.lib.Floats Float of_int def
R26157:26163 Coq.Init.Logic <> f_equal thm
R26157:26163 Coq.Init.Logic <> f_equal thm
R26181:26203 compcert.lib.IEEE754_extra <> integer_representable_n thm
R26181:26203 compcert.lib.IEEE754_extra <> integer_representable_n thm
R26233:26255 compcert.lib.IEEE754_extra <> integer_representable_n thm
R26233:26255 compcert.lib.IEEE754_extra <> integer_representable_n thm
def 26294:26304 Float ox4530_0000
R26309:26316 compcert.lib.Integers Int repr def
prf 26366:26379 Float split_bits_or'
binder 26391:26391 <> x:139
R26459:26461 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26396:26405 Flocq.IEEE754.Bits <> split_bits def
R26414:26427 compcert.lib.Integers Int64 unsigned def
R26430:26442 compcert.lib.Integers Int64 ofwords def
R26456:26456 compcert.lib.Floats <> x:139 var
R26444:26454 compcert.lib.Floats Float ox4530_0000 def
R26462:26462 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26468:26469 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26484:26485 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26490:26490 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26463:26467 Coq.Init.Datatypes <> false constr
R26470:26481 compcert.lib.Integers Int unsigned def
R26483:26483 compcert.lib.Floats <> x:139 var
R26526:26535 Flocq.IEEE754.Bits <> split_bits def
R26544:26552 Flocq.IEEE754.Bits <> join_bits def
R26567:26578 compcert.lib.Integers Int unsigned def
R26560:26564 Coq.Init.Datatypes <> false constr
R26526:26535 Flocq.IEEE754.Bits <> split_bits def
R26544:26552 Flocq.IEEE754.Bits <> join_bits def
R26567:26578 compcert.lib.Integers Int unsigned def
R26560:26564 Coq.Init.Datatypes <> false constr
R26612:26629 compcert.lib.Integers Int64 ofwords_add' thm
R26612:26629 compcert.lib.Integers Int64 ofwords_add' thm
R26612:26629 compcert.lib.Integers Int64 ofwords_add' thm
R26655:26669 Flocq.IEEE754.Bits <> split_join_bits thm
R26655:26669 Flocq.IEEE754.Bits <> split_join_bits thm
R26688:26705 compcert.lib.Integers Int unsigned_range thm
R26688:26705 compcert.lib.Integers Int unsigned_range thm
R26756:26756 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R26728:26738 compcert.lib.Integers Int modulus def
R26756:26756 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R26788:26788 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R26788:26788 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
prf 26813:26829 Float from_words_value'
binder 26841:26841 <> x:140
R26938:26943 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R26883:26885 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26849:26851 Flocq.IEEE754.Binary <> B2R def
R26858:26867 compcert.lib.Floats Float from_words def
R26881:26881 compcert.lib.Floats <> x:140 var
R26869:26879 compcert.lib.Floats Float ox4530_0000 def
R26901:26903 Coq.Reals.Rdefinitions <> ::R_scope:x_'+'_x not
R26887:26890 Flocq.Core.Raux <> bpow def
R26892:26897 Flocq.Core.Zaux <> radix2 def
R26904:26906 Coq.Reals.Rdefinitions <> IZR def
R26923:26925 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26909:26920 compcert.lib.Integers Int unsigned def
R26922:26922 compcert.lib.Floats <> x:140 var
R26926:26930 Coq.ZArith.Zpower <> two_p def
R26991:26996 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R26984:26986 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26944:26952 Flocq.IEEE754.Binary <> is_finite def
R26959:26968 compcert.lib.Floats Float from_words def
R26982:26982 compcert.lib.Floats <> x:140 var
R26970:26980 compcert.lib.Floats Float ox4530_0000 def
R26987:26990 Coq.Init.Datatypes <> true constr
R27033:27035 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26997:27001 Flocq.IEEE754.Binary <> Bsign def
R27008:27017 compcert.lib.Floats Float from_words def
R27031:27031 compcert.lib.Floats <> x:140 var
R27019:27029 compcert.lib.Floats Float ox4530_0000 def
R27036:27040 Coq.Init.Datatypes <> false constr
R27067:27076 compcert.lib.Floats Float from_words def
R27079:27085 compcert.lib.Floats Float of_bits def
R27088:27098 Flocq.IEEE754.Bits <> b64_of_bits def
R27101:27120 Flocq.IEEE754.Bits <> binary_float_of_bits def
R27133:27140 Flocq.IEEE754.Binary <> B2R_FF2B thm
R27143:27156 Flocq.IEEE754.Binary <> is_finite_FF2B thm
R27159:27168 Flocq.IEEE754.Binary <> Bsign_FF2B thm
R27133:27140 Flocq.IEEE754.Binary <> B2R_FF2B thm
R27133:27140 Flocq.IEEE754.Binary <> B2R_FF2B thm
R27143:27156 Flocq.IEEE754.Binary <> is_finite_FF2B thm
R27143:27156 Flocq.IEEE754.Binary <> is_finite_FF2B thm
R27159:27168 Flocq.IEEE754.Binary <> Bsign_FF2B thm
R27159:27168 Flocq.IEEE754.Binary <> Bsign_FF2B thm
R27180:27203 Flocq.IEEE754.Bits <> binary_float_of_bits_aux def
R27214:27227 compcert.lib.Floats Float split_bits_or' thm
R27249:27266 compcert.lib.Integers Int unsigned_range thm
R27214:27227 compcert.lib.Floats Float split_bits_or' thm
R27214:27227 compcert.lib.Floats Float split_bits_or' thm
R27249:27266 compcert.lib.Integers Int unsigned_range thm
R27298:27300 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27284:27295 compcert.lib.Integers Int unsigned def
R27301:27309 Coq.ZArith.BinInt Z pow_pos def
R27298:27300 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27284:27295 compcert.lib.Integers Int unsigned def
R27301:27309 Coq.ZArith.BinInt Z pow_pos def
R27386:27388 Flocq.Core.Defs <> F2R def
R27421:27428 Coq.Reals.RIneq <> plus_IZR thm
R27431:27448 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R27456:27463 Coq.Reals.RIneq <> mult_IZR thm
R27466:27475 Coq.Reals.Raxioms <> Rplus_comm thm
R27421:27428 Coq.Reals.RIneq <> plus_IZR thm
R27421:27428 Coq.Reals.RIneq <> plus_IZR thm
R27431:27448 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R27431:27448 Coq.Reals.RIneq <> Rmult_plus_distr_r thm
R27456:27463 Coq.Reals.RIneq <> mult_IZR thm
R27456:27463 Coq.Reals.RIneq <> mult_IZR thm
R27456:27463 Coq.Reals.RIneq <> mult_IZR thm
R27466:27475 Coq.Reals.Raxioms <> Rplus_comm thm
R27466:27475 Coq.Reals.Raxioms <> Rplus_comm thm
R27502:27504 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R27496:27499 Coq.Numbers.BinNums <> Zneg constr
R27502:27504 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R27496:27499 Coq.Numbers.BinNums <> Zneg constr
prf 27564:27577 Float from_words_eq'
binder 27589:27589 <> x:141
R27616:27618 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27592:27601 compcert.lib.Floats Float from_words def
R27615:27615 compcert.lib.Floats <> x:141 var
R27603:27613 compcert.lib.Floats Float ox4530_0000 def
R27619:27622 compcert.lib.IEEE754_extra <> BofZ def
R27643:27645 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27640:27640 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R27660:27662 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27646:27657 compcert.lib.Integers Int unsigned def
R27659:27659 compcert.lib.Floats <> x:141 var
R27664:27664 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R27635:27636 compcert.lib.Floats <> __ syndef
R27632:27633 compcert.lib.Floats <> __ syndef
R27701:27718 compcert.lib.Integers Int unsigned_range thm
R27701:27718 compcert.lib.Integers Int unsigned_range thm
R27736:27752 compcert.lib.Floats Float from_words_value' thm
R27736:27752 compcert.lib.Floats Float from_words_value' thm
R27785:27802 compcert.lib.IEEE754_extra <> BofZ_representable thm
R27823:27825 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27820:27820 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R27840:27842 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27826:27837 compcert.lib.Integers Int unsigned def
R27844:27844 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R27815:27816 compcert.lib.Floats <> __ syndef
R27812:27813 compcert.lib.Floats <> __ syndef
R27785:27802 compcert.lib.IEEE754_extra <> BofZ_representable thm
R27823:27825 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27820:27820 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R27840:27842 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27826:27837 compcert.lib.Integers Int unsigned def
R27844:27844 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R27815:27816 compcert.lib.Floats <> __ syndef
R27812:27813 compcert.lib.Floats <> __ syndef
R27881:27883 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27878:27878 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R27898:27900 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27884:27895 compcert.lib.Integers Int unsigned def
R27902:27902 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R27918:27918 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27940:27943 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27923:27925 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27920:27920 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R27926:27937 compcert.lib.Integers Int unsigned def
R27945:27945 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R27881:27883 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27878:27878 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R27898:27900 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27884:27895 compcert.lib.Integers Int unsigned def
R27902:27902 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R27918:27918 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27940:27943 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27923:27925 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27920:27920 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R27926:27937 compcert.lib.Integers Int unsigned def
R27945:27945 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R27967:27991 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R27967:27991 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R28035:28047 Flocq.IEEE754.Binary <> B2R_Bsign_inj thm
R28035:28047 Flocq.IEEE754.Binary <> B2R_Bsign_inj thm
R28083:28092 Flocq.Core.Raux <> IZR_Zpower thm
R28083:28092 Flocq.Core.Raux <> IZR_Zpower thm
R28083:28092 Flocq.Core.Raux <> IZR_Zpower thm
R28115:28122 Coq.Reals.RIneq <> plus_IZR thm
R28115:28122 Coq.Reals.RIneq <> plus_IZR thm
R28115:28122 Coq.Reals.RIneq <> plus_IZR thm
R28163:28176 Flocq.Core.Zaux <> Zlt_bool_false thm
R28163:28176 Flocq.Core.Zaux <> Zlt_bool_false thm
R28196:28196 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R28217:28217 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R28196:28196 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R28217:28217 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
prf 28244:28262 Float of_longu_from_words
binder 28274:28274 <> l:142
R28289:28295 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28279:28286 compcert.lib.Floats Float of_longu def
R28288:28288 compcert.lib.Floats <> l:142 var
R28296:28298 compcert.lib.Floats Float add def
R28417:28426 compcert.lib.Floats Float from_words def
R28441:28452 compcert.lib.Integers Int64 loword def
R28454:28454 compcert.lib.Floats <> l:142 var
R28428:28438 compcert.lib.Floats Float ox4330_0000 def
R28301:28303 compcert.lib.Floats Float sub def
R28361:28370 compcert.lib.Floats Float from_words def
R28385:28392 compcert.lib.Integers Int repr def
R28395:28399 Coq.ZArith.Zpower <> two_p def
R28372:28382 compcert.lib.Floats Float ox4530_0000 def
R28306:28315 compcert.lib.Floats Float from_words def
R28330:28341 compcert.lib.Integers Int64 hiword def
R28343:28343 compcert.lib.Floats <> l:142 var
R28317:28327 compcert.lib.Floats Float ox4530_0000 def
R28490:28509 compcert.lib.Integers Int64 unsigned_range thm
R28490:28509 compcert.lib.Integers Int64 unsigned_range thm
R28529:28546 compcert.lib.Integers Int unsigned_range thm
R28549:28560 compcert.lib.Integers Int64 hiword def
R28529:28546 compcert.lib.Integers Int unsigned_range thm
R28549:28560 compcert.lib.Integers Int64 hiword def
R28581:28598 compcert.lib.Integers Int unsigned_range thm
R28601:28612 compcert.lib.Integers Int64 loword def
R28581:28598 compcert.lib.Integers Int unsigned_range thm
R28601:28612 compcert.lib.Integers Int64 loword def
R28631:28643 compcert.lib.Floats Float from_words_eq thm
R28648:28661 compcert.lib.Floats Float from_words_eq' thm
R28631:28643 compcert.lib.Floats Float from_words_eq thm
R28631:28643 compcert.lib.Floats Float from_words_eq thm
R28631:28643 compcert.lib.Floats Float from_words_eq thm
R28648:28661 compcert.lib.Floats Float from_words_eq' thm
R28648:28661 compcert.lib.Floats Float from_words_eq' thm
R28648:28661 compcert.lib.Floats Float from_words_eq' thm
R28648:28661 compcert.lib.Floats Float from_words_eq' thm
R28678:28689 compcert.lib.Integers Int unsigned def
R28692:28699 compcert.lib.Integers Int repr def
R28702:28706 Coq.ZArith.Zpower <> two_p def
R28678:28689 compcert.lib.Integers Int unsigned def
R28692:28699 compcert.lib.Integers Int repr def
R28702:28706 Coq.ZArith.Zpower <> two_p def
R28727:28740 compcert.lib.Integers Int64 unsigned def
R28764:28775 compcert.lib.Integers Int unsigned def
R28778:28789 compcert.lib.Integers Int64 loword def
R28814:28825 compcert.lib.Integers Int unsigned def
R28828:28839 compcert.lib.Integers Int64 hiword def
R28727:28740 compcert.lib.Integers Int64 unsigned def
R28764:28775 compcert.lib.Integers Int unsigned def
R28778:28789 compcert.lib.Integers Int64 loword def
R28814:28825 compcert.lib.Integers Int unsigned def
R28828:28839 compcert.lib.Integers Int64 hiword def
R28860:28862 compcert.lib.Floats Float sub def
R28873:28882 compcert.lib.IEEE754_extra <> BofZ_minus thm
R28873:28882 compcert.lib.IEEE754_extra <> BofZ_minus thm
R28873:28882 compcert.lib.IEEE754_extra <> BofZ_minus thm
R28873:28882 compcert.lib.IEEE754_extra <> BofZ_minus thm
R28873:28882 compcert.lib.IEEE754_extra <> BofZ_minus thm
R28912:28915 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28933:28933 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28900:28902 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R28897:28897 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R28905:28907 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28909:28909 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R28920:28922 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R28917:28917 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R28926:28928 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28930:28930 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R28947:28947 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28956:28959 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28950:28952 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28961:28961 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R28912:28915 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28933:28933 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28900:28902 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R28897:28897 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R28905:28907 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28909:28909 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R28920:28922 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R28917:28917 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R28926:28928 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28930:28930 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R28947:28947 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28956:28959 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28950:28952 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28961:28961 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R28984:28986 compcert.lib.Floats Float add def
R28997:29005 compcert.lib.IEEE754_extra <> BofZ_plus thm
R28997:29005 compcert.lib.IEEE754_extra <> BofZ_plus thm
R28997:29005 compcert.lib.IEEE754_extra <> BofZ_plus thm
R28997:29005 compcert.lib.IEEE754_extra <> BofZ_plus thm
R28997:29005 compcert.lib.IEEE754_extra <> BofZ_plus thm
R29017:29024 compcert.lib.Floats Float of_longu def
R29050:29072 compcert.lib.Integers Int64 ofwords_recompose thm
R29050:29072 compcert.lib.Integers Int64 ofwords_recompose thm
R29050:29072 compcert.lib.Integers Int64 ofwords_recompose thm
R29091:29108 compcert.lib.Integers Int64 ofwords_add' thm
R29091:29108 compcert.lib.Integers Int64 ofwords_add' thm
R29091:29108 compcert.lib.Integers Int64 ofwords_add' thm
R29145:29149 Coq.ZArith.Zpower <> two_p def
R29145:29149 Coq.ZArith.Zpower <> two_p def
R29188:29212 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R29188:29212 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R29276:29298 compcert.lib.IEEE754_extra <> integer_representable_n thm
R29276:29298 compcert.lib.IEEE754_extra <> integer_representable_n thm
R29335:29337 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29332:29332 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29340:29342 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R29344:29344 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29355:29355 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R29365:29368 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R29360:29362 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29357:29357 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29370:29370 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29335:29337 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29332:29332 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29340:29342 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R29344:29344 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29355:29355 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R29365:29368 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R29360:29362 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29357:29357 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29370:29370 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29392:29416 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R29392:29416 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R29466:29468 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29463:29463 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29472:29474 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R29476:29476 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29487:29487 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R29502:29505 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R29492:29494 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29489:29489 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29507:29507 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29466:29468 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29463:29463 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29472:29474 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R29476:29476 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29487:29487 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R29502:29505 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R29492:29494 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29489:29489 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29507:29507 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R29521:29545 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R29521:29545 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
prf 29582:29599 Float of_long_from_words
binder 29611:29611 <> l:143
R29625:29631 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29616:29622 compcert.lib.Floats Float of_long def
R29624:29624 compcert.lib.Floats <> l:143 var
R29632:29634 compcert.lib.Floats Float add def
R29784:29793 compcert.lib.Floats Float from_words def
R29808:29819 compcert.lib.Integers Int64 loword def
R29821:29821 compcert.lib.Floats <> l:143 var
R29795:29805 compcert.lib.Floats Float ox4330_0000 def
R29637:29639 compcert.lib.Floats Float sub def
R29719:29728 compcert.lib.Floats Float from_words def
R29743:29750 compcert.lib.Integers Int repr def
R29761:29761 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29753:29757 Coq.ZArith.Zpower <> two_p def
R29762:29766 Coq.ZArith.Zpower <> two_p def
R29730:29740 compcert.lib.Floats Float ox4530_0000 def
R29642:29651 compcert.lib.Floats Float from_words def
R29666:29672 compcert.lib.Integers Int add def
R29691:29701 compcert.lib.Floats Float ox8000_0000 def
R29675:29686 compcert.lib.Integers Int64 hiword def
R29688:29688 compcert.lib.Floats <> l:143 var
R29653:29663 compcert.lib.Floats Float ox4530_0000 def
R29857:29874 compcert.lib.Integers Int64 signed_range thm
R29857:29874 compcert.lib.Integers Int64 signed_range thm
R29894:29909 compcert.lib.Integers Int signed_range thm
R29912:29923 compcert.lib.Integers Int64 hiword def
R29894:29909 compcert.lib.Integers Int signed_range thm
R29912:29923 compcert.lib.Integers Int64 hiword def
R29944:29961 compcert.lib.Integers Int unsigned_range thm
R29964:29975 compcert.lib.Integers Int64 loword def
R29944:29961 compcert.lib.Integers Int unsigned_range thm
R29964:29975 compcert.lib.Integers Int64 loword def
R29994:30006 compcert.lib.Floats Float from_words_eq thm
R30011:30024 compcert.lib.Floats Float from_words_eq' thm
R29994:30006 compcert.lib.Floats Float from_words_eq thm
R29994:30006 compcert.lib.Floats Float from_words_eq thm
R29994:30006 compcert.lib.Floats Float from_words_eq thm
R30011:30024 compcert.lib.Floats Float from_words_eq' thm
R30011:30024 compcert.lib.Floats Float from_words_eq' thm
R30011:30024 compcert.lib.Floats Float from_words_eq' thm
R30011:30024 compcert.lib.Floats Float from_words_eq' thm
R30039:30050 compcert.lib.Integers Int unsigned def
R30053:30060 compcert.lib.Integers Int repr def
R30071:30073 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30063:30067 Coq.ZArith.Zpower <> two_p def
R30074:30078 Coq.ZArith.Zpower <> two_p def
R30039:30050 compcert.lib.Integers Int unsigned def
R30053:30060 compcert.lib.Integers Int repr def
R30071:30073 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30063:30067 Coq.ZArith.Zpower <> two_p def
R30074:30078 Coq.ZArith.Zpower <> two_p def
R30099:30110 compcert.lib.Integers Int64 signed def
R30134:30145 compcert.lib.Integers Int unsigned def
R30148:30159 compcert.lib.Integers Int64 loword def
R30184:30193 compcert.lib.Integers Int signed def
R30196:30207 compcert.lib.Integers Int64 hiword def
R30099:30110 compcert.lib.Integers Int64 signed def
R30134:30145 compcert.lib.Integers Int unsigned def
R30148:30159 compcert.lib.Integers Int64 loword def
R30184:30193 compcert.lib.Integers Int signed def
R30196:30207 compcert.lib.Integers Int64 hiword def
R30229:30255 compcert.lib.Floats Float ox8000_0000_signed_unsigned thm
R30229:30255 compcert.lib.Floats Float ox8000_0000_signed_unsigned thm
R30229:30255 compcert.lib.Floats Float ox8000_0000_signed_unsigned thm
R30276:30278 compcert.lib.Floats Float sub def
R30289:30298 compcert.lib.IEEE754_extra <> BofZ_minus thm
R30289:30298 compcert.lib.IEEE754_extra <> BofZ_minus thm
R30289:30298 compcert.lib.IEEE754_extra <> BofZ_minus thm
R30289:30298 compcert.lib.IEEE754_extra <> BofZ_minus thm
R30289:30298 compcert.lib.IEEE754_extra <> BofZ_minus thm
R30349:30352 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R30368:30368 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R30316:30318 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30313:30313 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30319:30319 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30341:30344 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30322:30324 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30325:30340 compcert.lib.Integers Int half_modulus def
R30346:30346 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30357:30359 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30354:30354 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30361:30363 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30365:30365 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30382:30382 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30392:30395 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30385:30387 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R30389:30389 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30397:30397 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30349:30352 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R30368:30368 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R30316:30318 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30313:30313 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30319:30319 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30341:30344 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30322:30324 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30325:30340 compcert.lib.Integers Int half_modulus def
R30346:30346 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30357:30359 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30354:30354 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30361:30363 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30365:30365 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30382:30382 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30392:30395 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30385:30387 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R30389:30389 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30397:30397 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30442:30457 compcert.lib.Integers Int half_modulus def
R30476:30478 compcert.lib.Floats Float add def
R30489:30497 compcert.lib.IEEE754_extra <> BofZ_plus thm
R30489:30497 compcert.lib.IEEE754_extra <> BofZ_plus thm
R30489:30497 compcert.lib.IEEE754_extra <> BofZ_plus thm
R30489:30497 compcert.lib.IEEE754_extra <> BofZ_plus thm
R30489:30497 compcert.lib.IEEE754_extra <> BofZ_plus thm
R30509:30515 compcert.lib.Floats Float of_long def
R30524:30530 Coq.Init.Logic <> f_equal thm
R30524:30530 Coq.Init.Logic <> f_equal thm
R30547:30569 compcert.lib.Integers Int64 ofwords_recompose thm
R30547:30569 compcert.lib.Integers Int64 ofwords_recompose thm
R30547:30569 compcert.lib.Integers Int64 ofwords_recompose thm
R30588:30606 compcert.lib.Integers Int64 ofwords_add'' thm
R30588:30606 compcert.lib.Integers Int64 ofwords_add'' thm
R30588:30606 compcert.lib.Integers Int64 ofwords_add'' thm
R30643:30647 Coq.ZArith.Zpower <> two_p def
R30643:30647 Coq.ZArith.Zpower <> two_p def
R30668:30692 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R30668:30692 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R30718:30718 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30718:30718 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30759:30781 compcert.lib.IEEE754_extra <> integer_representable_n thm
R30759:30781 compcert.lib.IEEE754_extra <> integer_representable_n thm
R30818:30820 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30815:30815 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30821:30821 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30843:30846 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30824:30826 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30827:30842 compcert.lib.Integers Int half_modulus def
R30848:30848 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30864:30864 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30893:30896 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30874:30876 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30869:30871 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30866:30866 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30877:30892 compcert.lib.Integers Int half_modulus def
R30898:30898 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30818:30820 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30815:30815 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30821:30821 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30843:30846 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30824:30826 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30827:30842 compcert.lib.Integers Int half_modulus def
R30848:30848 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30864:30864 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30893:30896 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30874:30876 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30869:30871 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30866:30866 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30877:30892 compcert.lib.Integers Int half_modulus def
R30898:30898 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R30927:30942 compcert.lib.Integers Int half_modulus def
R30960:30984 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R30960:30984 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R31034:31036 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R31031:31031 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R31038:31040 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R31042:31042 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R31053:31053 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R31062:31065 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R31058:31060 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R31055:31055 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R31067:31067 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R31034:31036 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R31031:31031 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R31038:31040 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R31042:31042 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R31053:31053 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R31062:31065 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R31058:31060 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R31055:31055 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R31067:31067 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R31081:31105 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R31081:31105 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
prf 31276:31290 Float of_longu_decomp
binder 31302:31302 <> l:144
R31317:31319 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31307:31314 compcert.lib.Floats Float of_longu def
R31316:31316 compcert.lib.Floats <> l:144 var
R31320:31322 compcert.lib.Floats Float add def
R31405:31411 compcert.lib.Floats Float of_intu def
R31414:31425 compcert.lib.Integers Int64 loword def
R31427:31427 compcert.lib.Floats <> l:144 var
R31325:31327 compcert.lib.Floats Float mul def
R31357:31360 compcert.lib.IEEE754_extra <> BofZ def
R31378:31378 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R31373:31374 compcert.lib.Floats <> __ syndef
R31370:31371 compcert.lib.Floats <> __ syndef
R31330:31336 compcert.lib.Floats Float of_intu def
R31339:31350 compcert.lib.Integers Int64 hiword def
R31352:31352 compcert.lib.Floats <> l:144 var
R31458:31465 compcert.lib.Floats Float of_longu def
R31468:31474 compcert.lib.Floats Float of_intu def
R31477:31479 compcert.lib.Floats Float add def
R31482:31484 compcert.lib.Floats Float mul def
R31501:31518 compcert.lib.Integers Int unsigned_range thm
R31521:31532 compcert.lib.Integers Int64 loword def
R31501:31518 compcert.lib.Integers Int unsigned_range thm
R31521:31532 compcert.lib.Integers Int64 loword def
R31553:31570 compcert.lib.Integers Int unsigned_range thm
R31573:31584 compcert.lib.Integers Int64 hiword def
R31553:31570 compcert.lib.Integers Int unsigned_range thm
R31573:31584 compcert.lib.Integers Int64 hiword def
R31605:31624 compcert.lib.Integers Int64 unsigned_range thm
R31605:31624 compcert.lib.Integers Int64 unsigned_range thm
R31642:31655 compcert.lib.Integers Int64 unsigned def
R31642:31655 compcert.lib.Integers Int64 unsigned def
R31679:31690 compcert.lib.Integers Int unsigned def
R31693:31704 compcert.lib.Integers Int64 loword def
R31679:31690 compcert.lib.Integers Int unsigned def
R31693:31704 compcert.lib.Integers Int64 loword def
R31729:31740 compcert.lib.Integers Int unsigned def
R31743:31754 compcert.lib.Integers Int64 hiword def
R31729:31740 compcert.lib.Integers Int unsigned def
R31743:31754 compcert.lib.Integers Int64 hiword def
R31785:31787 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31797:31799 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R31790:31792 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R31794:31794 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R31785:31787 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31797:31799 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R31790:31792 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R31794:31794 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R31831:31853 compcert.lib.Integers Int64 ofwords_recompose thm
R31831:31853 compcert.lib.Integers Int64 ofwords_recompose thm
R31831:31853 compcert.lib.Integers Int64 ofwords_recompose thm
R31865:31882 compcert.lib.Integers Int64 ofwords_add' thm
R31865:31882 compcert.lib.Integers Int64 ofwords_add' thm
R31897:31905 compcert.lib.IEEE754_extra <> BofZ_mult thm
R31897:31905 compcert.lib.IEEE754_extra <> BofZ_mult thm
R31897:31905 compcert.lib.IEEE754_extra <> BofZ_mult thm
R31897:31905 compcert.lib.IEEE754_extra <> BofZ_mult thm
R31897:31905 compcert.lib.IEEE754_extra <> BofZ_mult thm
R31897:31905 compcert.lib.IEEE754_extra <> BofZ_mult thm
R31916:31924 compcert.lib.IEEE754_extra <> BofZ_plus thm
R31916:31924 compcert.lib.IEEE754_extra <> BofZ_plus thm
R31916:31924 compcert.lib.IEEE754_extra <> BofZ_plus thm
R31916:31924 compcert.lib.IEEE754_extra <> BofZ_plus thm
R31916:31924 compcert.lib.IEEE754_extra <> BofZ_plus thm
R31957:31981 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R31957:31981 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R32025:32047 compcert.lib.IEEE754_extra <> integer_representable_n thm
R32025:32047 compcert.lib.IEEE754_extra <> integer_representable_n thm
R32077:32099 compcert.lib.IEEE754_extra <> integer_representable_n thm
R32077:32099 compcert.lib.IEEE754_extra <> integer_representable_n thm
R32129:32151 compcert.lib.IEEE754_extra <> integer_representable_n thm
R32129:32151 compcert.lib.IEEE754_extra <> integer_representable_n thm
prf 32204:32217 Float of_long_decomp
binder 32229:32229 <> l:145
R32243:32245 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32234:32240 compcert.lib.Floats Float of_long def
R32242:32242 compcert.lib.Floats <> l:145 var
R32246:32248 compcert.lib.Floats Float add def
R32329:32335 compcert.lib.Floats Float of_intu def
R32338:32349 compcert.lib.Integers Int64 loword def
R32351:32351 compcert.lib.Floats <> l:145 var
R32251:32253 compcert.lib.Floats Float mul def
R32282:32285 compcert.lib.IEEE754_extra <> BofZ def
R32303:32303 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R32298:32299 compcert.lib.Floats <> __ syndef
R32295:32296 compcert.lib.Floats <> __ syndef
R32256:32261 compcert.lib.Floats Float of_int def
R32264:32275 compcert.lib.Integers Int64 hiword def
R32277:32277 compcert.lib.Floats <> l:145 var
R32382:32388 compcert.lib.Floats Float of_long def
R32391:32396 compcert.lib.Floats Float of_int def
R32399:32405 compcert.lib.Floats Float of_intu def
R32408:32410 compcert.lib.Floats Float add def
R32413:32415 compcert.lib.Floats Float mul def
R32432:32449 compcert.lib.Integers Int unsigned_range thm
R32452:32463 compcert.lib.Integers Int64 loword def
R32432:32449 compcert.lib.Integers Int unsigned_range thm
R32452:32463 compcert.lib.Integers Int64 loword def
R32484:32499 compcert.lib.Integers Int signed_range thm
R32502:32513 compcert.lib.Integers Int64 hiword def
R32484:32499 compcert.lib.Integers Int signed_range thm
R32502:32513 compcert.lib.Integers Int64 hiword def
R32534:32551 compcert.lib.Integers Int64 signed_range thm
R32534:32551 compcert.lib.Integers Int64 signed_range thm
R32569:32580 compcert.lib.Integers Int64 signed def
R32569:32580 compcert.lib.Integers Int64 signed def
R32604:32615 compcert.lib.Integers Int unsigned def
R32618:32629 compcert.lib.Integers Int64 loword def
R32604:32615 compcert.lib.Integers Int unsigned def
R32618:32629 compcert.lib.Integers Int64 loword def
R32654:32663 compcert.lib.Integers Int signed def
R32666:32677 compcert.lib.Integers Int64 hiword def
R32654:32663 compcert.lib.Integers Int signed def
R32666:32677 compcert.lib.Integers Int64 hiword def
R32708:32710 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32720:32722 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R32713:32715 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R32717:32717 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R32708:32710 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32720:32722 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R32713:32715 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R32717:32717 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R32754:32776 compcert.lib.Integers Int64 ofwords_recompose thm
R32782:32800 compcert.lib.Integers Int64 ofwords_add'' thm
R32754:32776 compcert.lib.Integers Int64 ofwords_recompose thm
R32754:32776 compcert.lib.Integers Int64 ofwords_recompose thm
R32782:32800 compcert.lib.Integers Int64 ofwords_add'' thm
R32782:32800 compcert.lib.Integers Int64 ofwords_add'' thm
R32821:32829 compcert.lib.IEEE754_extra <> BofZ_mult thm
R32821:32829 compcert.lib.IEEE754_extra <> BofZ_mult thm
R32821:32829 compcert.lib.IEEE754_extra <> BofZ_mult thm
R32821:32829 compcert.lib.IEEE754_extra <> BofZ_mult thm
R32821:32829 compcert.lib.IEEE754_extra <> BofZ_mult thm
R32821:32829 compcert.lib.IEEE754_extra <> BofZ_mult thm
R32840:32848 compcert.lib.IEEE754_extra <> BofZ_plus thm
R32840:32848 compcert.lib.IEEE754_extra <> BofZ_plus thm
R32840:32848 compcert.lib.IEEE754_extra <> BofZ_plus thm
R32840:32848 compcert.lib.IEEE754_extra <> BofZ_plus thm
R32840:32848 compcert.lib.IEEE754_extra <> BofZ_plus thm
R32881:32905 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R32881:32905 compcert.lib.IEEE754_extra <> integer_representable_n2p thm
R32949:32971 compcert.lib.IEEE754_extra <> integer_representable_n thm
R32949:32971 compcert.lib.IEEE754_extra <> integer_representable_n thm
R33001:33023 compcert.lib.IEEE754_extra <> integer_representable_n thm
R33001:33023 compcert.lib.IEEE754_extra <> integer_representable_n thm
R33053:33075 compcert.lib.IEEE754_extra <> integer_representable_n thm
R33053:33075 compcert.lib.IEEE754_extra <> integer_representable_n thm
prf 33352:33369 Float of_longu_of_long_1
binder 33381:33381 <> x:146
R33436:33441 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33452:33454 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33442:33449 compcert.lib.Floats Float of_longu def
R33451:33451 compcert.lib.Floats <> x:146 var
R33455:33461 compcert.lib.Floats Float of_long def
R33463:33463 compcert.lib.Floats <> x:146 var
R33429:33431 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33386:33394 compcert.lib.Integers Int64 ltu def
R33399:33408 compcert.lib.Integers Int64 repr def
R33410:33427 compcert.lib.Integers Int64 half_modulus def
R33396:33396 compcert.lib.Floats <> x:146 var
R33432:33435 Coq.Init.Datatypes <> true constr
R33482:33489 compcert.lib.Floats Float of_longu def
R33492:33498 compcert.lib.Floats Float of_long def
R33501:33512 compcert.lib.Integers Int64 signed def
R33515:33523 compcert.lib.Integers Int64 ltu def
R33543:33556 compcert.lib.Integers Int64 unsigned def
R33559:33568 compcert.lib.Integers Int64 repr def
R33570:33587 compcert.lib.Integers Int64 half_modulus def
R33596:33613 compcert.lib.Integers Int64 half_modulus def
R33543:33556 compcert.lib.Integers Int64 unsigned def
R33559:33568 compcert.lib.Integers Int64 repr def
R33570:33587 compcert.lib.Integers Int64 half_modulus def
R33596:33613 compcert.lib.Integers Int64 half_modulus def
R33596:33613 compcert.lib.Integers Int64 half_modulus def
R33596:33613 compcert.lib.Integers Int64 half_modulus def
R33596:33613 compcert.lib.Integers Int64 half_modulus def
R33596:33613 compcert.lib.Integers Int64 half_modulus def
R33628:33630 compcert.lib.Coqlib <> zlt def
R33651:33668 compcert.lib.Integers Int64 half_modulus def
R33633:33646 compcert.lib.Integers Int64 unsigned def
R33628:33630 compcert.lib.Coqlib <> zlt def
R33651:33668 compcert.lib.Integers Int64 half_modulus def
R33633:33646 compcert.lib.Integers Int64 unsigned def
prf 33701:33718 Float of_longu_of_long_2
binder 33730:33730 <> x:147
R33786:33791 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33802:33804 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33792:33799 compcert.lib.Floats Float of_longu def
R33801:33801 compcert.lib.Floats <> x:147 var
R33805:33807 compcert.lib.Floats Float mul def
R33937:33942 compcert.lib.Floats Float of_int def
R33945:33952 compcert.lib.Integers Int repr def
R33810:33816 compcert.lib.Floats Float of_long def
R33819:33826 compcert.lib.Integers Int64 or def
R33892:33900 compcert.lib.Integers Int64 and def
R33904:33912 compcert.lib.Integers Int64 one def
R33902:33902 compcert.lib.Floats <> x:147 var
R33829:33838 compcert.lib.Integers Int64 shru def
R33842:33850 compcert.lib.Integers Int64 one def
R33840:33840 compcert.lib.Floats <> x:147 var
R33778:33780 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33735:33743 compcert.lib.Integers Int64 ltu def
R33748:33757 compcert.lib.Integers Int64 repr def
R33759:33776 compcert.lib.Integers Int64 half_modulus def
R33745:33745 compcert.lib.Floats <> x:147 var
R33781:33785 Coq.Init.Datatypes <> false constr
R33984:33989 compcert.lib.Floats Float of_int def
R33992:33999 compcert.lib.Integers Int repr def
R34011:34014 compcert.lib.IEEE754_extra <> BofZ def
R34032:34032 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34027:34028 compcert.lib.Floats <> __ syndef
R34024:34025 compcert.lib.Floats <> __ syndef
R33984:33989 compcert.lib.Floats Float of_int def
R33992:33999 compcert.lib.Integers Int repr def
R34011:34014 compcert.lib.IEEE754_extra <> BofZ def
R34032:34032 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34027:34028 compcert.lib.Floats <> __ syndef
R34024:34025 compcert.lib.Floats <> __ syndef
R34052:34071 compcert.lib.Integers Int64 unsigned_range thm
R34052:34071 compcert.lib.Integers Int64 unsigned_range thm
R34086:34094 compcert.lib.Integers Int64 ltu def
R34112:34125 compcert.lib.Integers Int64 unsigned def
R34128:34137 compcert.lib.Integers Int64 repr def
R34139:34156 compcert.lib.Integers Int64 half_modulus def
R34167:34167 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34112:34125 compcert.lib.Integers Int64 unsigned def
R34128:34137 compcert.lib.Integers Int64 repr def
R34139:34156 compcert.lib.Integers Int64 half_modulus def
R34167:34167 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34167:34167 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34167:34167 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34167:34167 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34167:34167 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34190:34192 compcert.lib.Coqlib <> zlt def
R34215:34215 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34195:34208 compcert.lib.Integers Int64 unsigned def
R34190:34192 compcert.lib.Coqlib <> zlt def
R34215:34215 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34195:34208 compcert.lib.Integers Int64 unsigned def
R34252:34255 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R34239:34251 compcert.lib.Integers Int64 modulus def
R34262:34264 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R34257:34257 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34266:34267 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34275:34275 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34272:34272 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R34252:34255 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R34239:34251 compcert.lib.Integers Int64 modulus def
R34262:34264 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R34257:34257 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34266:34267 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34275:34275 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R34272:34272 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R34329:34336 compcert.lib.Integers Int64 or def
R34364:34372 compcert.lib.Integers Int64 and def
R34376:34384 compcert.lib.Integers Int64 one def
R34339:34348 compcert.lib.Integers Int64 shru def
R34352:34360 compcert.lib.Integers Int64 one def
R34329:34336 compcert.lib.Integers Int64 or def
R34364:34372 compcert.lib.Integers Int64 and def
R34376:34384 compcert.lib.Integers Int64 one def
R34339:34348 compcert.lib.Integers Int64 shru def
R34352:34360 compcert.lib.Integers Int64 one def
binder 34410:34410 <> i:148
R34424:34441 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34459:34477 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34442:34454 compcert.lib.Integers Int64 testbit def
R34458:34458 compcert.lib.Floats <> i:148 var
R34481:34483 compcert.lib.Coqlib <> zeq def
R34485:34485 compcert.lib.Floats <> i:148 var
R34557:34559 compcert.lib.Coqlib <> zeq def
R34561:34561 compcert.lib.Floats <> i:148 var
R34582:34594 compcert.lib.Integers Int64 testbit def
R34600:34602 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R34599:34599 compcert.lib.Floats <> i:148 var
R34571:34575 Coq.Init.Datatypes <> false constr
R34511:34514 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R34494:34506 compcert.lib.Integers Int64 testbit def
R34515:34527 compcert.lib.Integers Int64 testbit def
R34414:34417 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R34419:34421 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R34418:34418 compcert.lib.Floats <> i:148 var
R34418:34418 compcert.lib.Floats <> i:148 var
binder 34410:34410 <> i:149
R34424:34441 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34459:34477 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34442:34454 compcert.lib.Integers Int64 testbit def
R34458:34458 compcert.lib.Floats <> i:149 var
R34481:34483 compcert.lib.Coqlib <> zeq def
R34485:34485 compcert.lib.Floats <> i:149 var
R34557:34559 compcert.lib.Coqlib <> zeq def
R34561:34561 compcert.lib.Floats <> i:149 var
R34582:34594 compcert.lib.Integers Int64 testbit def
R34600:34602 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R34599:34599 compcert.lib.Floats <> i:149 var
R34571:34575 Coq.Init.Datatypes <> false constr
R34511:34514 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R34494:34506 compcert.lib.Integers Int64 testbit def
R34515:34527 compcert.lib.Integers Int64 testbit def
R34414:34417 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R34419:34421 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R34418:34418 compcert.lib.Floats <> i:149 var
R34418:34418 compcert.lib.Floats <> i:149 var
R34667:34684 compcert.lib.Integers Int64 unsigned_one thm
R34667:34684 compcert.lib.Integers Int64 unsigned_one thm
R34667:34684 compcert.lib.Integers Int64 unsigned_one thm
R34699:34712 compcert.lib.Integers Int64 bits_one thm
R34699:34712 compcert.lib.Integers Int64 bits_one thm
R34699:34712 compcert.lib.Integers Int64 bits_one thm
R34728:34742 compcert.lib.Integers Int64 zwordsize def
R34759:34761 compcert.lib.Coqlib <> zeq def
R34759:34761 compcert.lib.Coqlib <> zeq def
R34801:34808 compcert.lib.Coqlib <> zlt_true thm
R34801:34808 compcert.lib.Coqlib <> zlt_true thm
R34801:34808 compcert.lib.Coqlib <> zlt_true thm
R34828:34838 Coq.Bool.Bool <> andb_true_r thm
R34828:34838 Coq.Bool.Bool <> andb_true_r thm
R34828:34838 Coq.Bool.Bool <> andb_true_r thm
R34868:34879 Coq.Bool.Bool <> andb_false_r thm
R34882:34892 Coq.Bool.Bool <> orb_false_r thm
R34868:34879 Coq.Bool.Bool <> andb_false_r thm
R34868:34879 Coq.Bool.Bool <> andb_false_r thm
R34882:34892 Coq.Bool.Bool <> orb_false_r thm
R34882:34892 Coq.Bool.Bool <> orb_false_r thm
R34909:34911 compcert.lib.Coqlib <> zeq def
R34909:34911 compcert.lib.Coqlib <> zeq def
R34935:34943 compcert.lib.Coqlib <> zlt_false thm
R34935:34943 compcert.lib.Coqlib <> zlt_false thm
R34963:34970 compcert.lib.Coqlib <> zlt_true thm
R34963:34970 compcert.lib.Coqlib <> zlt_true thm
binder 35004:35004 <> i:150
R35013:35031 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35066:35083 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35032:35040 Coq.ZArith.BinInt Z testbit def
R35065:35065 compcert.lib.Floats <> i:150 var
R35057:35059 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R35043:35054 compcert.lib.Integers Int64 signed def
R35061:35061 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R35087:35089 compcert.lib.Coqlib <> zeq def
R35091:35091 compcert.lib.Floats <> i:150 var
R35129:35131 compcert.lib.Coqlib <> zeq def
R35133:35133 compcert.lib.Floats <> i:150 var
R35201:35213 compcert.lib.Integers Int64 testbit def
R35217:35217 compcert.lib.Floats <> i:150 var
R35159:35162 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R35142:35154 compcert.lib.Integers Int64 testbit def
R35163:35175 compcert.lib.Integers Int64 testbit def
R35100:35104 Coq.Init.Datatypes <> false constr
R35008:35011 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R35012:35012 compcert.lib.Floats <> i:150 var
binder 35004:35004 <> i:151
R35013:35031 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35066:35083 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35032:35040 Coq.ZArith.BinInt Z testbit def
R35065:35065 compcert.lib.Floats <> i:151 var
R35057:35059 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R35043:35054 compcert.lib.Integers Int64 signed def
R35061:35061 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R35087:35089 compcert.lib.Coqlib <> zeq def
R35091:35091 compcert.lib.Floats <> i:151 var
R35129:35131 compcert.lib.Coqlib <> zeq def
R35133:35133 compcert.lib.Floats <> i:151 var
R35201:35213 compcert.lib.Integers Int64 testbit def
R35217:35217 compcert.lib.Floats <> i:151 var
R35159:35162 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R35142:35154 compcert.lib.Integers Int64 testbit def
R35163:35175 compcert.lib.Integers Int64 testbit def
R35100:35104 Coq.Init.Datatypes <> false constr
R35008:35011 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R35012:35012 compcert.lib.Floats <> i:151 var
R35241:35255 Coq.ZArith.BinInt Z mul_pow2_bits thm
R35241:35255 Coq.ZArith.BinInt Z mul_pow2_bits thm
R35241:35255 Coq.ZArith.BinInt Z mul_pow2_bits thm
R35277:35279 compcert.lib.Coqlib <> zeq def
R35277:35279 compcert.lib.Coqlib <> zeq def
R35297:35311 Coq.ZArith.BinInt Z testbit_neg_r thm
R35297:35311 Coq.ZArith.BinInt Z testbit_neg_r thm
R35333:35349 compcert.lib.Integers Int64 bits_signed thm
R35333:35349 compcert.lib.Integers Int64 bits_signed thm
R35333:35349 compcert.lib.Integers Int64 bits_signed thm
R35374:35388 compcert.lib.Integers Int64 zwordsize def
R35405:35407 compcert.lib.Coqlib <> zlt def
R35411:35411 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R35405:35407 compcert.lib.Coqlib <> zlt def
R35411:35411 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R35455:35457 compcert.lib.Coqlib <> zeq def
R35455:35457 compcert.lib.Coqlib <> zeq def
R35484:35494 compcert.lib.Coqlib <> dec_eq_true thm
R35484:35494 compcert.lib.Coqlib <> dec_eq_true thm
R35484:35494 compcert.lib.Coqlib <> dec_eq_true thm
R35523:35534 compcert.lib.Coqlib <> dec_eq_false thm
R35523:35534 compcert.lib.Coqlib <> dec_eq_false thm
R35523:35534 compcert.lib.Coqlib <> dec_eq_false thm
R35556:35558 compcert.lib.Coqlib <> zeq def
R35562:35564 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R35556:35558 compcert.lib.Coqlib <> zeq def
R35562:35564 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R35593:35608 compcert.lib.Integers Int64 bits_above thm
R35593:35608 compcert.lib.Integers Int64 bits_above thm
R35624:35638 compcert.lib.Integers Int64 zwordsize def
R35701:35712 compcert.lib.Coqlib <> dec_eq_false thm
R35701:35712 compcert.lib.Coqlib <> dec_eq_false thm
R35701:35712 compcert.lib.Coqlib <> dec_eq_false thm
R35732:35742 compcert.lib.Coqlib <> dec_eq_true thm
R35732:35742 compcert.lib.Coqlib <> dec_eq_true thm
R35732:35742 compcert.lib.Coqlib <> dec_eq_true thm
R35765:35776 compcert.lib.Coqlib <> dec_eq_false thm
R35765:35776 compcert.lib.Coqlib <> dec_eq_false thm
R35765:35776 compcert.lib.Coqlib <> dec_eq_false thm
R35804:35819 compcert.lib.Integers Int64 bits_above thm
R35804:35819 compcert.lib.Integers Int64 bits_above thm
R35835:35849 compcert.lib.Integers Int64 zwordsize def
R35895:35897 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35891:35893 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R35877:35888 compcert.lib.Integers Int64 signed def
R35898:35910 compcert.lib.IEEE754_extra <> int_round_odd def
R35913:35926 compcert.lib.Integers Int64 unsigned def
R35895:35897 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35891:35893 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R35877:35888 compcert.lib.Integers Int64 signed def
R35898:35910 compcert.lib.IEEE754_extra <> int_round_odd def
R35913:35926 compcert.lib.Integers Int64 unsigned def
R35958:35975 compcert.lib.IEEE754_extra <> int_round_odd_bits thm
R35958:35975 compcert.lib.IEEE754_extra <> int_round_odd_bits thm
R36091:36102 compcert.lib.Coqlib <> dec_eq_false thm
R36091:36102 compcert.lib.Coqlib <> dec_eq_false thm
R36091:36102 compcert.lib.Coqlib <> dec_eq_false thm
R36122:36132 compcert.lib.Coqlib <> dec_eq_true thm
R36122:36132 compcert.lib.Coqlib <> dec_eq_true thm
R36122:36132 compcert.lib.Coqlib <> dec_eq_true thm
R36145:36152 Coq.Bool.Bool <> orb_comm thm
R36145:36152 Coq.Bool.Bool <> orb_comm thm
R36145:36152 Coq.Bool.Bool <> orb_comm thm
R36162:36174 compcert.lib.Integers Int64 testbit def
R36186:36186 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R36186:36186 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R36210:36218 Coq.ZArith.BinInt Z testbit def
R36221:36234 compcert.lib.Integers Int64 unsigned def
R36261:36274 Coq.ZArith.BinInt Z testbit_true thm
R36299:36313 Coq.ZArith.BinInt Z testbit_false thm
R36343:36343 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R36369:36376 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R36210:36218 Coq.ZArith.BinInt Z testbit def
R36221:36234 compcert.lib.Integers Int64 unsigned def
R36261:36274 Coq.ZArith.BinInt Z testbit_true thm
R36261:36274 Coq.ZArith.BinInt Z testbit_true thm
R36299:36313 Coq.ZArith.BinInt Z testbit_false thm
R36299:36313 Coq.ZArith.BinInt Z testbit_false thm
R36343:36343 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R36343:36343 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R36369:36376 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R36369:36376 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R36369:36376 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R36369:36376 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R36445:36456 compcert.lib.Coqlib <> dec_eq_false thm
R36445:36456 compcert.lib.Coqlib <> dec_eq_false thm
R36445:36456 compcert.lib.Coqlib <> dec_eq_false thm
R36445:36456 compcert.lib.Coqlib <> dec_eq_false thm
R36445:36456 compcert.lib.Coqlib <> dec_eq_false thm
R36487:36489 compcert.lib.Floats Float mul def
R36492:36498 compcert.lib.Floats Float of_long def
R36501:36508 compcert.lib.Floats Float of_longu def
R36521:36532 compcert.lib.IEEE754_extra <> BofZ_mult_2p thm
R36521:36532 compcert.lib.IEEE754_extra <> BofZ_mult_2p thm
R36521:36532 compcert.lib.IEEE754_extra <> BofZ_mult_2p thm
R36521:36532 compcert.lib.IEEE754_extra <> BofZ_mult_2p thm
R36521:36532 compcert.lib.IEEE754_extra <> BofZ_mult_2p thm
R36521:36532 compcert.lib.IEEE754_extra <> BofZ_mult_2p thm
R36546:36546 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R36546:36546 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R36576:36589 compcert.lib.IEEE754_extra <> BofZ_round_odd thm
R36576:36589 compcert.lib.IEEE754_extra <> BofZ_round_odd thm
R36639:36651 compcert.lib.Integers Int64 modulus def
R36623:36632 Coq.ZArith.BinInt Z le_trans thm
R36639:36651 compcert.lib.Integers Int64 modulus def
R36623:36632 Coq.ZArith.BinInt Z le_trans thm
R36711:36711 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R36693:36702 Coq.ZArith.BinInt Z le_trans thm
R36711:36711 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R36693:36702 Coq.ZArith.BinInt Z le_trans thm
R36780:36792 compcert.lib.Integers Int64 modulus def
R36764:36773 Coq.ZArith.BinInt Z le_trans thm
R36780:36792 compcert.lib.Integers Int64 modulus def
R36764:36773 Coq.ZArith.BinInt Z le_trans thm
R36818:36835 compcert.lib.Integers Int64 signed_range thm
R36818:36835 compcert.lib.Integers Int64 signed_range thm
R36856:36871 compcert.lib.Integers Int64 min_signed def
R36887:36902 compcert.lib.Integers Int64 max_signed def
R36920:36932 compcert.lib.Integers Int64 modulus def
R36957:36960 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R36954:36954 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R36961:36973 compcert.lib.IEEE754_extra <> int_round_odd def
R36976:36989 compcert.lib.Integers Int64 unsigned def
R36957:36960 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R36954:36954 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R36961:36973 compcert.lib.IEEE754_extra <> int_round_odd def
R36976:36989 compcert.lib.Integers Int64 unsigned def
R37011:37011 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R37022:37034 compcert.lib.IEEE754_extra <> int_round_odd def
R37038:37038 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R37011:37011 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R37022:37034 compcert.lib.IEEE754_extra <> int_round_odd def
R37038:37038 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R37054:37069 compcert.lib.IEEE754_extra <> int_round_odd_le thm
R37054:37069 compcert.lib.IEEE754_extra <> int_round_odd_le thm
R37124:37124 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R37124:37124 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R37145:37145 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R37145:37145 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
prf 37278:37293 Float ZofB_range_widen
R37309:37313 compcert.lib.Floats <> float def
binder 37306:37306 <> f:152
binder 37316:37316 <> n:153
binder 37318:37321 <> min1:154
binder 37323:37326 <> max1:155
binder 37328:37331 <> min2:156
binder 37333:37336 <> max2:157
R37376:37381 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37394:37397 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37410:37415 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37442:37444 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37416:37425 compcert.lib.IEEE754_extra <> ZofB_range def
R37438:37441 compcert.lib.Floats <> max2:157 var
R37433:37436 compcert.lib.Floats <> min2:156 var
R37431:37431 compcert.lib.Floats <> f:152 var
R37445:37448 Coq.Init.Datatypes <> Some constr
R37450:37450 compcert.lib.Floats <> n:153 var
R37402:37405 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R37398:37401 compcert.lib.Floats <> max1:155 var
R37406:37409 compcert.lib.Floats <> max2:157 var
R37386:37389 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R37382:37385 compcert.lib.Floats <> min2:156 var
R37390:37393 compcert.lib.Floats <> min1:154 var
R37367:37369 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37341:37350 compcert.lib.IEEE754_extra <> ZofB_range def
R37363:37366 compcert.lib.Floats <> max1:155 var
R37358:37361 compcert.lib.Floats <> min1:154 var
R37356:37356 compcert.lib.Floats <> f:152 var
R37370:37373 Coq.Init.Datatypes <> Some constr
R37375:37375 compcert.lib.Floats <> n:153 var
R37478:37497 compcert.lib.IEEE754_extra <> ZofB_range_inversion thm
R37536:37545 compcert.lib.IEEE754_extra <> ZofB_range def
R37574:37578 Coq.ZArith.BinInt <> ::Z_scope:x_'<=?'_x not
R37587:37590 Coq.Init.Datatypes <> true constr
R37574:37578 Coq.ZArith.BinInt <> ::Z_scope:x_'<=?'_x not
R37587:37590 Coq.Init.Datatypes <> true constr
R37603:37607 Coq.ZArith.BinInt <> ::Z_scope:x_'<=?'_x not
R37619:37622 Coq.Init.Datatypes <> true constr
R37603:37607 Coq.ZArith.BinInt <> ::Z_scope:x_'<=?'_x not
R37619:37622 Coq.Init.Datatypes <> true constr
R37649:37656 Coq.ZArith.BinInt Z leb_le thm
R37649:37656 Coq.ZArith.BinInt Z leb_le thm
R37684:37691 Coq.ZArith.BinInt Z leb_le thm
R37684:37691 Coq.ZArith.BinInt Z leb_le thm
prf 37715:37728 Float to_int_to_long
binder 37740:37740 <> f:158
binder 37742:37742 <> n:159
R37762:37765 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37775:37777 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37766:37772 compcert.lib.Floats Float to_long def
R37774:37774 compcert.lib.Floats <> f:158 var
R37778:37781 Coq.Init.Datatypes <> Some constr
R37784:37793 compcert.lib.Integers Int64 repr def
R37796:37805 compcert.lib.Integers Int signed def
R37807:37807 compcert.lib.Floats <> n:159 var
R37753:37755 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37745:37750 compcert.lib.Floats Float to_int def
R37752:37752 compcert.lib.Floats <> f:158 var
R37756:37759 Coq.Init.Datatypes <> Some constr
R37761:37761 compcert.lib.Floats <> n:159 var
R37828:37833 compcert.lib.Floats Float to_int def
R37836:37842 compcert.lib.Floats Float to_long def
R37865:37874 compcert.lib.IEEE754_extra <> ZofB_range def
R37901:37914 compcert.lib.Integers Int max_signed def
R37886:37899 compcert.lib.Integers Int min_signed def
R37865:37874 compcert.lib.IEEE754_extra <> ZofB_range def
R37901:37914 compcert.lib.Integers Int max_signed def
R37886:37899 compcert.lib.Integers Int min_signed def
R37949:37968 compcert.lib.IEEE754_extra <> ZofB_range_inversion thm
R38009:38018 compcert.lib.IEEE754_extra <> ZofB_range def
R38047:38062 compcert.lib.Integers Int64 max_signed def
R38030:38045 compcert.lib.Integers Int64 min_signed def
R38071:38074 Coq.Init.Datatypes <> Some constr
R38009:38018 compcert.lib.IEEE754_extra <> ZofB_range def
R38047:38062 compcert.lib.Integers Int64 max_signed def
R38030:38045 compcert.lib.Integers Int64 min_signed def
R38071:38074 Coq.Init.Datatypes <> Some constr
R38097:38111 compcert.lib.Integers Int signed_repr thm
R38097:38111 compcert.lib.Integers Int signed_repr thm
R38097:38111 compcert.lib.Integers Int signed_repr thm
R38097:38111 compcert.lib.Integers Int signed_repr thm
R38139:38154 compcert.lib.Floats Float ZofB_range_widen thm
R38139:38154 compcert.lib.Floats Float ZofB_range_widen thm
prf 38220:38235 Float to_intu_to_longu
binder 38247:38247 <> f:160
binder 38249:38249 <> n:161
R38270:38273 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38284:38286 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38274:38281 compcert.lib.Floats Float to_longu def
R38283:38283 compcert.lib.Floats <> f:160 var
R38287:38290 Coq.Init.Datatypes <> Some constr
R38293:38302 compcert.lib.Integers Int64 repr def
R38305:38316 compcert.lib.Integers Int unsigned def
R38318:38318 compcert.lib.Floats <> n:161 var
R38261:38263 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38252:38258 compcert.lib.Floats Float to_intu def
R38260:38260 compcert.lib.Floats <> f:160 var
R38264:38267 Coq.Init.Datatypes <> Some constr
R38269:38269 compcert.lib.Floats <> n:161 var
R38339:38345 compcert.lib.Floats Float to_intu def
R38348:38355 compcert.lib.Floats Float to_longu def
R38378:38387 compcert.lib.IEEE754_extra <> ZofB_range def
R38401:38416 compcert.lib.Integers Int max_unsigned def
R38378:38387 compcert.lib.IEEE754_extra <> ZofB_range def
R38401:38416 compcert.lib.Integers Int max_unsigned def
R38451:38470 compcert.lib.IEEE754_extra <> ZofB_range_inversion thm
R38511:38520 compcert.lib.IEEE754_extra <> ZofB_range def
R38534:38551 compcert.lib.Integers Int64 max_unsigned def
R38560:38563 Coq.Init.Datatypes <> Some constr
R38511:38520 compcert.lib.IEEE754_extra <> ZofB_range def
R38534:38551 compcert.lib.Integers Int64 max_unsigned def
R38560:38563 Coq.Init.Datatypes <> Some constr
R38586:38602 compcert.lib.Integers Int unsigned_repr thm
R38586:38602 compcert.lib.Integers Int unsigned_repr thm
R38586:38602 compcert.lib.Integers Int unsigned_repr thm
R38586:38602 compcert.lib.Integers Int unsigned_repr thm
R38630:38645 compcert.lib.Floats Float ZofB_range_widen thm
R38630:38645 compcert.lib.Floats Float ZofB_range_widen thm
prf 38697:38711 Float to_intu_to_long
binder 38723:38723 <> f:162
binder 38725:38725 <> n:163
R38746:38749 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38759:38761 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38750:38756 compcert.lib.Floats Float to_long def
R38758:38758 compcert.lib.Floats <> f:162 var
R38762:38765 Coq.Init.Datatypes <> Some constr
R38768:38777 compcert.lib.Integers Int64 repr def
R38780:38791 compcert.lib.Integers Int unsigned def
R38793:38793 compcert.lib.Floats <> n:163 var
R38737:38739 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38728:38734 compcert.lib.Floats Float to_intu def
R38736:38736 compcert.lib.Floats <> f:162 var
R38740:38743 Coq.Init.Datatypes <> Some constr
R38745:38745 compcert.lib.Floats <> n:163 var
R38814:38820 compcert.lib.Floats Float to_intu def
R38823:38829 compcert.lib.Floats Float to_long def
R38852:38861 compcert.lib.IEEE754_extra <> ZofB_range def
R38875:38890 compcert.lib.Integers Int max_unsigned def
R38852:38861 compcert.lib.IEEE754_extra <> ZofB_range def
R38875:38890 compcert.lib.Integers Int max_unsigned def
R38925:38944 compcert.lib.IEEE754_extra <> ZofB_range_inversion thm
R38985:38994 compcert.lib.IEEE754_extra <> ZofB_range def
R39023:39038 compcert.lib.Integers Int64 max_signed def
R39006:39021 compcert.lib.Integers Int64 min_signed def
R39047:39050 Coq.Init.Datatypes <> Some constr
R38985:38994 compcert.lib.IEEE754_extra <> ZofB_range def
R39023:39038 compcert.lib.Integers Int64 max_signed def
R39006:39021 compcert.lib.Integers Int64 min_signed def
R39047:39050 Coq.Init.Datatypes <> Some constr
R39073:39089 compcert.lib.Integers Int unsigned_repr thm
R39073:39089 compcert.lib.Integers Int unsigned_repr thm
R39073:39089 compcert.lib.Integers Int unsigned_repr thm
R39073:39089 compcert.lib.Integers Int unsigned_repr thm
R39117:39132 compcert.lib.Floats Float ZofB_range_widen thm
R39117:39132 compcert.lib.Floats Float ZofB_range_widen thm
prf 39198:39211 Float of_int_of_long
binder 39223:39223 <> n:164
R39234:39236 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39226:39231 compcert.lib.Floats Float of_int def
R39233:39233 compcert.lib.Floats <> n:164 var
R39237:39243 compcert.lib.Floats Float of_long def
R39246:39255 compcert.lib.Integers Int64 repr def
R39258:39267 compcert.lib.Integers Int signed def
R39269:39269 compcert.lib.Floats <> n:164 var
R39290:39295 compcert.lib.Floats Float of_int def
R39298:39304 compcert.lib.Floats Float of_long def
R39332:39348 compcert.lib.Integers Int64 signed_repr thm
R39332:39348 compcert.lib.Integers Int64 signed_repr thm
R39332:39348 compcert.lib.Integers Int64 signed_repr thm
R39332:39348 compcert.lib.Integers Int64 signed_repr thm
R39371:39386 compcert.lib.Integers Int signed_range thm
R39371:39386 compcert.lib.Integers Int signed_range thm
R39405:39420 compcert.lib.Integers Int64 min_signed def
R39436:39451 compcert.lib.Integers Int64 max_signed def
prf 39481:39496 Float of_intu_of_longu
binder 39508:39508 <> n:165
R39520:39522 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39511:39517 compcert.lib.Floats Float of_intu def
R39519:39519 compcert.lib.Floats <> n:165 var
R39523:39530 compcert.lib.Floats Float of_longu def
R39533:39542 compcert.lib.Integers Int64 repr def
R39545:39556 compcert.lib.Integers Int unsigned def
R39558:39558 compcert.lib.Floats <> n:165 var
R39579:39585 compcert.lib.Floats Float of_intu def
R39588:39595 compcert.lib.Floats Float of_longu def
R39623:39641 compcert.lib.Integers Int64 unsigned_repr thm
R39623:39641 compcert.lib.Integers Int64 unsigned_repr thm
R39623:39641 compcert.lib.Integers Int64 unsigned_repr thm
R39623:39641 compcert.lib.Integers Int64 unsigned_repr thm
R39664:39681 compcert.lib.Integers Int unsigned_range thm
R39664:39681 compcert.lib.Integers Int unsigned_range thm
prf 39714:39728 Float of_intu_of_long
binder 39740:39740 <> n:166
R39752:39754 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39743:39749 compcert.lib.Floats Float of_intu def
R39751:39751 compcert.lib.Floats <> n:166 var
R39755:39761 compcert.lib.Floats Float of_long def
R39764:39773 compcert.lib.Integers Int64 repr def
R39776:39787 compcert.lib.Integers Int unsigned def
R39789:39789 compcert.lib.Floats <> n:166 var
R39810:39816 compcert.lib.Floats Float of_intu def
R39819:39825 compcert.lib.Floats Float of_long def
R39853:39869 compcert.lib.Integers Int64 signed_repr thm
R39853:39869 compcert.lib.Integers Int64 signed_repr thm
R39853:39869 compcert.lib.Integers Int64 signed_repr thm
R39853:39869 compcert.lib.Integers Int64 signed_repr thm
R39892:39909 compcert.lib.Integers Int unsigned_range thm
R39892:39909 compcert.lib.Integers Int unsigned_range thm
R39928:39943 compcert.lib.Integers Int64 min_signed def
R39959:39974 compcert.lib.Integers Int64 max_signed def
R40000:40004 compcert.lib.Floats Float <> mod
mod 40053:40059 <> Float32
def 40074:40080 Float32 neg_nan
R40087:40093 compcert.lib.Floats <> float32 def
binder 40083:40083 <> f:167
R40098:40099 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40101:40103 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40111:40113 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40133:40134 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40104:40110 compcert.lib.Floats <> float32 def
binder 40100:40100 <> x:168
R40126:40128 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40114:40119 Flocq.IEEE754.Binary <> is_nan def
R40125:40125 compcert.lib.Floats <> x:168 var
R40129:40132 Coq.Init.Datatypes <> true constr
R40147:40147 compcert.lib.Floats <> f:167 var
R40158:40165 Flocq.IEEE754.Binary <> B754_nan constr
R40176:40180 Coq.Init.Specif <> exist constr
R40216:40222 Coq.Init.Logic <> eq_refl constr
R40224:40227 Coq.Init.Datatypes <> true constr
R40185:40192 Flocq.IEEE754.Binary <> B754_nan constr
R40202:40205 Coq.Init.Datatypes <> negb def
R40239:40252 compcert.lib.Floats <> default_nan_32 def
def 40273:40279 Float32 abs_nan
R40286:40292 compcert.lib.Floats <> float32 def
binder 40282:40282 <> f:170
R40297:40298 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40300:40302 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40310:40312 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40332:40333 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40303:40309 compcert.lib.Floats <> float32 def
binder 40299:40299 <> x:171
R40325:40327 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40313:40318 Flocq.IEEE754.Binary <> is_nan def
R40324:40324 compcert.lib.Floats <> x:171 var
R40328:40331 Coq.Init.Datatypes <> true constr
R40346:40346 compcert.lib.Floats <> f:170 var
R40357:40364 Flocq.IEEE754.Binary <> B754_nan constr
R40375:40379 Coq.Init.Specif <> exist constr
R40412:40418 Coq.Init.Logic <> eq_refl constr
R40420:40423 Coq.Init.Datatypes <> true constr
R40384:40391 Flocq.IEEE754.Binary <> B754_nan constr
R40400:40404 Coq.Init.Datatypes <> false constr
R40435:40448 compcert.lib.Floats <> default_nan_32 def
def 40469:40475 Float32 cons_pl
R40481:40487 compcert.lib.Floats <> float32 def
binder 40478:40478 <> x:173
R40494:40497 Coq.Init.Datatypes <> list ind
R40504:40506 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R40500:40503 Coq.Init.Datatypes <> bool ind
R40507:40514 Coq.Numbers.BinNums <> positive ind
binder 40491:40491 <> l:174
R40529:40529 compcert.lib.Floats <> x:173 var
R40536:40543 Flocq.IEEE754.Binary <> B754_nan constr
R40560:40563 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R40554:40554 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40556:40557 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40559:40559 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40564:40564 compcert.lib.Floats <> l:174 var
R40573:40573 compcert.lib.Floats <> l:174 var
def 40592:40599 Float32 unop_nan
R40605:40611 compcert.lib.Floats <> float32 def
binder 40602:40602 <> x:176
R40616:40616 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40618:40620 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40628:40630 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40650:40650 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40621:40627 compcert.lib.Floats <> float32 def
binder 40617:40617 <> x:177
R40643:40645 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40631:40636 Flocq.IEEE754.Binary <> is_nan def
R40642:40642 compcert.lib.Floats <> x:177 var
R40646:40649 Coq.Init.Datatypes <> true constr
R40657:40668 compcert.lib.Floats <> quiet_nan_32 def
R40671:40689 compcert.x86_32.Archi <> choose_nan_32 def
R40692:40698 compcert.lib.Floats Float32 cons_pl def
R40702:40703 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R40700:40700 compcert.lib.Floats <> x:176 var
def 40720:40728 Float32 binop_nan
R40736:40742 compcert.lib.Floats <> float32 def
binder 40731:40731 <> x:178
binder 40733:40733 <> y:179
R40747:40747 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40749:40751 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40759:40761 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40781:40781 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40752:40758 compcert.lib.Floats <> float32 def
binder 40748:40748 <> x:180
R40774:40776 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40762:40767 Flocq.IEEE754.Binary <> is_nan def
R40773:40773 compcert.lib.Floats <> x:180 var
R40777:40780 Coq.Init.Datatypes <> true constr
R40788:40799 compcert.lib.Floats <> quiet_nan_32 def
R40802:40820 compcert.x86_32.Archi <> choose_nan_32 def
R40823:40829 compcert.lib.Floats Float32 cons_pl def
R40834:40840 compcert.lib.Floats Float32 cons_pl def
R40844:40845 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R40842:40842 compcert.lib.Floats <> y:179 var
R40831:40831 compcert.lib.Floats <> x:178 var
def 40863:40871 Float32 fma_nan_1
R40881:40887 compcert.lib.Floats <> float32 def
binder 40874:40874 <> x:181
binder 40876:40876 <> y:182
binder 40878:40878 <> z:183
R40892:40892 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40894:40896 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40904:40906 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40926:40926 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R40897:40903 compcert.lib.Floats <> float32 def
binder 40893:40893 <> x:184
R40919:40921 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40907:40912 Flocq.IEEE754.Binary <> is_nan def
R40918:40918 compcert.lib.Floats <> x:184 var
R40922:40925 Coq.Init.Datatypes <> true constr
R40951:40965 compcert.x86_32.Archi <> fma_order def
R40971:40971 compcert.lib.Floats <> z:183 var
R40969:40969 compcert.lib.Floats <> y:182 var
R40967:40967 compcert.lib.Floats <> x:181 var
R40938:40938 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40940:40941 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40943:40944 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40946:40946 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40978:40989 compcert.lib.Floats <> quiet_nan_32 def
R40992:41010 compcert.x86_32.Archi <> choose_nan_32 def
R41013:41019 compcert.lib.Floats Float32 cons_pl def
R41024:41030 compcert.lib.Floats Float32 cons_pl def
R41035:41041 compcert.lib.Floats Float32 cons_pl def
R41045:41046 Coq.Lists.List ListNotations ::list_scope:'['_']' not
def 41065:41071 Float32 fma_nan
R41081:41087 compcert.lib.Floats <> float32 def
binder 41074:41074 <> x:185
binder 41076:41076 <> y:186
binder 41078:41078 <> z:187
R41092:41092 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R41094:41096 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R41104:41106 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R41126:41126 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R41097:41103 compcert.lib.Floats <> float32 def
binder 41093:41093 <> x:188
R41119:41121 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41107:41112 Flocq.IEEE754.Binary <> is_nan def
R41118:41118 compcert.lib.Floats <> x:188 var
R41122:41125 Coq.Init.Datatypes <> true constr
R41142:41142 compcert.lib.Floats <> y:186 var
R41139:41139 compcert.lib.Floats <> x:185 var
R41153:41165 Flocq.IEEE754.Binary <> B754_infinity constr
R41170:41178 Flocq.IEEE754.Binary <> B754_zero constr
R41184:41192 Flocq.IEEE754.Binary <> B754_zero constr
R41197:41209 Flocq.IEEE754.Binary <> B754_infinity constr
R41225:41252 compcert.x86_32.Archi <> fma_invalid_mul_is_nan def
R41350:41358 compcert.lib.Floats Float32 fma_nan_1 def
R41364:41364 compcert.lib.Floats <> z:187 var
R41362:41362 compcert.lib.Floats <> y:186 var
R41360:41360 compcert.lib.Floats <> x:185 var
R41265:41276 compcert.lib.Floats <> quiet_nan_32 def
R41279:41297 compcert.x86_32.Archi <> choose_nan_32 def
R41320:41323 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41300:41319 compcert.x86_32.Archi <> default_nan_32 def
R41324:41330 compcert.lib.Floats Float32 cons_pl def
R41334:41335 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R41332:41332 compcert.lib.Floats <> z:187 var
R41225:41252 compcert.x86_32.Archi <> fma_invalid_mul_is_nan def
R41350:41358 compcert.lib.Floats Float32 fma_nan_1 def
R41364:41364 compcert.lib.Floats <> z:187 var
R41362:41362 compcert.lib.Floats <> y:186 var
R41360:41360 compcert.lib.Floats <> x:185 var
R41265:41276 compcert.lib.Floats <> quiet_nan_32 def
R41279:41297 compcert.x86_32.Archi <> choose_nan_32 def
R41320:41323 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R41300:41319 compcert.x86_32.Archi <> default_nan_32 def
R41324:41330 compcert.lib.Floats Float32 cons_pl def
R41334:41335 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R41332:41332 compcert.lib.Floats <> z:187 var
R41384:41392 compcert.lib.Floats Float32 fma_nan_1 def
R41398:41398 compcert.lib.Floats <> z:187 var
R41396:41396 compcert.lib.Floats <> y:186 var
R41394:41394 compcert.lib.Floats <> x:185 var
def 41470:41473 Float32 zero
R41476:41482 compcert.lib.Floats <> float32 def
R41487:41495 Flocq.IEEE754.Binary <> B754_zero constr
R41501:41505 Coq.Init.Datatypes <> false constr
def 41545:41550 Float32 eq_dec
R41568:41574 compcert.lib.Floats <> float32 def
binder 41561:41562 <> f1:191
binder 41564:41565 <> f2:192
R41578:41578 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R41586:41590 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R41599:41599 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R41581:41583 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41579:41580 compcert.lib.Floats <> f1:191 var
R41584:41585 compcert.lib.Floats <> f2:192 var
R41593:41596 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R41591:41592 compcert.lib.Floats <> f1:191 var
R41597:41598 compcert.lib.Floats <> f2:192 var
R41604:41610 compcert.lib.IEEE754_extra <> Beq_dec def
def 41659:41661 Float32 neg
R41671:41674 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41675:41681 compcert.lib.Floats <> float32 def
R41664:41670 compcert.lib.Floats <> float32 def
R41686:41689 Flocq.IEEE754.Binary <> Bopp def
R41695:41701 compcert.lib.Floats Float32 neg_nan def
def 41746:41748 Float32 abs
R41758:41761 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41762:41768 compcert.lib.Floats <> float32 def
R41751:41757 compcert.lib.Floats <> float32 def
R41773:41776 Flocq.IEEE754.Binary <> Babs def
R41782:41788 compcert.lib.Floats Float32 abs_nan def
def 41843:41846 Float32 sqrt
R41856:41859 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41860:41866 compcert.lib.Floats <> float32 def
R41849:41855 compcert.lib.Floats <> float32 def
R41873:41877 Flocq.IEEE754.Binary <> Bsqrt def
R41901:41907 Flocq.IEEE754.Binary <> mode_NE constr
R41892:41899 compcert.lib.Floats Float32 unop_nan def
R41889:41890 compcert.lib.Floats <> __ syndef
R41886:41887 compcert.lib.Floats <> __ syndef
def 41942:41944 Float32 add
R41954:41957 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41965:41968 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41969:41975 compcert.lib.Floats <> float32 def
R41958:41964 compcert.lib.Floats <> float32 def
R41947:41953 compcert.lib.Floats <> float32 def
R41982:41986 Flocq.IEEE754.Binary <> Bplus def
R42011:42017 Flocq.IEEE754.Binary <> mode_NE constr
R42001:42009 compcert.lib.Floats Float32 binop_nan def
R41998:41999 compcert.lib.Floats <> __ syndef
R41995:41996 compcert.lib.Floats <> __ syndef
def 42048:42050 Float32 sub
R42060:42063 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42071:42074 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42075:42081 compcert.lib.Floats <> float32 def
R42064:42070 compcert.lib.Floats <> float32 def
R42053:42059 compcert.lib.Floats <> float32 def
R42088:42093 Flocq.IEEE754.Binary <> Bminus def
R42118:42124 Flocq.IEEE754.Binary <> mode_NE constr
R42108:42116 compcert.lib.Floats Float32 binop_nan def
R42105:42106 compcert.lib.Floats <> __ syndef
R42102:42103 compcert.lib.Floats <> __ syndef
def 42158:42160 Float32 mul
R42170:42173 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42181:42184 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42185:42191 compcert.lib.Floats <> float32 def
R42174:42180 compcert.lib.Floats <> float32 def
R42163:42169 compcert.lib.Floats <> float32 def
R42198:42202 Flocq.IEEE754.Binary <> Bmult def
R42227:42233 Flocq.IEEE754.Binary <> mode_NE constr
R42217:42225 compcert.lib.Floats Float32 binop_nan def
R42214:42215 compcert.lib.Floats <> __ syndef
R42211:42212 compcert.lib.Floats <> __ syndef
def 42270:42272 Float32 div
R42282:42285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42293:42296 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42297:42303 compcert.lib.Floats <> float32 def
R42286:42292 compcert.lib.Floats <> float32 def
R42275:42281 compcert.lib.Floats <> float32 def
R42310:42313 Flocq.IEEE754.Binary <> Bdiv def
R42338:42344 Flocq.IEEE754.Binary <> mode_NE constr
R42328:42336 compcert.lib.Floats Float32 binop_nan def
R42325:42326 compcert.lib.Floats <> __ syndef
R42322:42323 compcert.lib.Floats <> __ syndef
def 42375:42377 Float32 fma
R42387:42390 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42398:42401 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42409:42412 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42413:42419 compcert.lib.Floats <> float32 def
R42402:42408 compcert.lib.Floats <> float32 def
R42391:42397 compcert.lib.Floats <> float32 def
R42380:42386 compcert.lib.Floats <> float32 def
R42426:42429 Flocq.IEEE754.Binary <> Bfma def
R42452:42458 Flocq.IEEE754.Binary <> mode_NE constr
R42444:42450 compcert.lib.Floats Float32 fma_nan def
R42441:42442 compcert.lib.Floats <> __ syndef
R42438:42439 compcert.lib.Floats <> __ syndef
def 42511:42517 Float32 compare
R42527:42533 compcert.lib.Floats <> float32 def
binder 42520:42521 <> f1:193
binder 42523:42524 <> f2:194
R42538:42543 Coq.Init.Datatypes <> option ind
R42545:42564 Coq.Init.Datatypes <> comparison ind
R42598:42605 Flocq.IEEE754.Binary <> Bcompare def
R42617:42618 compcert.lib.Floats <> f2:194 var
R42614:42615 compcert.lib.Floats <> f1:193 var
def 42632:42634 Float32 cmp
R42639:42648 compcert.lib.Integers <> comparison ind
binder 42637:42637 <> c:195
R42659:42665 compcert.lib.Floats <> float32 def
binder 42652:42653 <> f1:196
binder 42655:42656 <> f2:197
R42670:42673 Coq.Init.Datatypes <> bool ind
R42699:42715 compcert.lib.Floats <> cmp_of_comparison def
R42720:42726 compcert.lib.Floats Float32 compare def
R42731:42732 compcert.lib.Floats <> f2:197 var
R42728:42729 compcert.lib.Floats <> f1:196 var
R42717:42717 compcert.lib.Floats <> c:195 var
def 42747:42753 Float32 ordered
R42763:42769 compcert.lib.Floats <> float32 def
binder 42756:42757 <> f1:198
binder 42759:42760 <> f2:199
R42774:42777 Coq.Init.Datatypes <> bool ind
R42784:42804 compcert.lib.Floats <> ordered_of_comparison def
R42807:42813 compcert.lib.Floats Float32 compare def
R42818:42819 compcert.lib.Floats <> f2:199 var
R42815:42816 compcert.lib.Floats <> f1:198 var
def 42855:42863 Float32 of_double
R42872:42875 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42876:42882 compcert.lib.Floats <> float32 def
R42867:42871 compcert.lib.Floats <> float def
R42887:42901 compcert.lib.Floats Float to_single def
def 42915:42923 Float32 to_double
R42934:42937 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42938:42942 compcert.lib.Floats <> float def
R42927:42933 compcert.lib.Floats <> float32 def
R42947:42961 compcert.lib.Floats Float of_single def
def 42976:42981 Float32 to_int
R42986:42992 compcert.lib.Floats <> float32 def
binder 42984:42984 <> f:200
R42996:43001 Coq.Init.Datatypes <> option ind
R43003:43005 compcert.lib.Integers <> int syndef
R43052:43061 compcert.lib.Coqlib <> option_map def
R43073:43082 compcert.lib.IEEE754_extra <> ZofB_range def
R43105:43118 compcert.lib.Integers Int max_signed def
R43090:43103 compcert.lib.Integers Int min_signed def
R43088:43088 compcert.lib.Floats <> f:200 var
R43063:43070 compcert.lib.Integers Int repr def
def 43133:43139 Float32 to_intu
R43144:43150 compcert.lib.Floats <> float32 def
binder 43142:43142 <> f:201
R43154:43159 Coq.Init.Datatypes <> option ind
R43161:43163 compcert.lib.Integers <> int syndef
R43212:43221 compcert.lib.Coqlib <> option_map def
R43233:43242 compcert.lib.IEEE754_extra <> ZofB_range def
R43252:43267 compcert.lib.Integers Int max_unsigned def
R43248:43248 compcert.lib.Floats <> f:201 var
R43223:43230 compcert.lib.Integers Int repr def
def 43282:43288 Float32 to_long
R43293:43299 compcert.lib.Floats <> float32 def
binder 43291:43291 <> f:202
R43303:43308 Coq.Init.Datatypes <> option ind
R43310:43314 compcert.lib.Integers <> int64 syndef
R43361:43370 compcert.lib.Coqlib <> option_map def
R43384:43393 compcert.lib.IEEE754_extra <> ZofB_range def
R43418:43433 compcert.lib.Integers Int64 max_signed def
R43401:43416 compcert.lib.Integers Int64 min_signed def
R43399:43399 compcert.lib.Floats <> f:202 var
R43372:43381 compcert.lib.Integers Int64 repr def
def 43448:43455 Float32 to_longu
R43460:43466 compcert.lib.Floats <> float32 def
binder 43458:43458 <> f:203
R43470:43475 Coq.Init.Datatypes <> option ind
R43477:43481 compcert.lib.Integers <> int64 syndef
R43530:43539 compcert.lib.Coqlib <> option_map def
R43553:43562 compcert.lib.IEEE754_extra <> ZofB_range def
R43572:43589 compcert.lib.Integers Int64 max_unsigned def
R43568:43568 compcert.lib.Floats <> f:203 var
R43541:43550 compcert.lib.Integers Int64 repr def
def 43605:43610 Float32 of_int
R43615:43617 compcert.lib.Integers <> int syndef
binder 43613:43613 <> n:204
R43621:43627 compcert.lib.Floats <> float32 def
R43702:43705 compcert.lib.IEEE754_extra <> BofZ def
R43721:43730 compcert.lib.Integers Int signed def
R43732:43732 compcert.lib.Floats <> n:204 var
R43717:43718 compcert.lib.Floats <> __ syndef
R43714:43715 compcert.lib.Floats <> __ syndef
def 43747:43753 Float32 of_intu
R43758:43760 compcert.lib.Integers <> int syndef
binder 43756:43756 <> n:205
R43764:43770 compcert.lib.Floats <> float32 def
R43847:43850 compcert.lib.IEEE754_extra <> BofZ def
R43866:43877 compcert.lib.Integers Int unsigned def
R43879:43879 compcert.lib.Floats <> n:205 var
R43862:43863 compcert.lib.Floats <> __ syndef
R43859:43860 compcert.lib.Floats <> __ syndef
def 43895:43901 Float32 of_long
R43906:43910 compcert.lib.Integers <> int64 syndef
binder 43904:43904 <> n:206
R43914:43920 compcert.lib.Floats <> float32 def
R43995:43998 compcert.lib.IEEE754_extra <> BofZ def
R44014:44025 compcert.lib.Integers Int64 signed def
R44027:44027 compcert.lib.Floats <> n:206 var
R44010:44011 compcert.lib.Floats <> __ syndef
R44007:44008 compcert.lib.Floats <> __ syndef
def 44042:44049 Float32 of_longu
R44054:44058 compcert.lib.Integers <> int64 syndef
binder 44052:44052 <> n:207
R44062:44068 compcert.lib.Floats <> float32 def
R44145:44148 compcert.lib.IEEE754_extra <> BofZ def
R44164:44177 compcert.lib.Integers Int64 unsigned def
R44179:44179 compcert.lib.Floats <> n:207 var
R44160:44161 compcert.lib.Floats <> __ syndef
R44157:44158 compcert.lib.Floats <> __ syndef
def 44195:44205 Float32 from_parsed
R44213:44220 Coq.Numbers.BinNums <> positive ind
binder 44208:44211 <> base:208
R44232:44239 Coq.Numbers.BinNums <> positive ind
binder 44224:44230 <> intPart:209
R44251:44251 Coq.Numbers.BinNums <> Z ind
binder 44243:44249 <> expPart:210
R44256:44262 compcert.lib.Floats <> float32 def
R44269:44274 compcert.lib.IEEE754_extra <> Bparse def
R44302:44308 compcert.lib.Floats <> expPart:210 var
R44294:44300 compcert.lib.Floats <> intPart:209 var
R44289:44292 compcert.lib.Floats <> base:208 var
R44286:44287 compcert.lib.Floats <> __ syndef
R44283:44284 compcert.lib.Floats <> __ syndef
def 44432:44438 Float32 to_bits
R44444:44450 compcert.lib.Floats <> float32 def
binder 44441:44441 <> f:211
R44455:44457 compcert.lib.Integers <> int syndef
R44462:44469 compcert.lib.Integers Int repr def
R44472:44482 Flocq.IEEE754.Bits <> bits_of_b32 def
R44484:44484 compcert.lib.Floats <> f:211 var
def 44499:44505 Float32 of_bits
R44511:44513 compcert.lib.Integers <> int syndef
binder 44508:44508 <> b:212
R44517:44523 compcert.lib.Floats <> float32 def
R44528:44538 Flocq.IEEE754.Bits <> b32_of_bits def
R44541:44552 compcert.lib.Integers Int unsigned def
R44554:44554 compcert.lib.Floats <> b:212 var
prf 44654:44663 Float32 add_commut
binder 44675:44675 <> x:213
binder 44677:44677 <> y:214
R44724:44727 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44735:44737 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44728:44730 compcert.lib.Floats Float32 add def
R44734:44734 compcert.lib.Floats <> y:214 var
R44732:44732 compcert.lib.Floats <> x:213 var
R44738:44740 compcert.lib.Floats Float32 add def
R44744:44744 compcert.lib.Floats <> x:213 var
R44742:44742 compcert.lib.Floats <> y:214 var
R44700:44703 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R44692:44694 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44680:44685 Flocq.IEEE754.Binary <> is_nan def
R44691:44691 compcert.lib.Floats <> x:213 var
R44695:44699 Coq.Init.Datatypes <> false constr
R44716:44718 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44704:44709 Flocq.IEEE754.Binary <> is_nan def
R44715:44715 compcert.lib.Floats <> y:214 var
R44719:44723 Coq.Init.Datatypes <> false constr
R44770:44781 compcert.lib.IEEE754_extra <> Bplus_commut thm
R44770:44781 compcert.lib.IEEE754_extra <> Bplus_commut thm
prf 44849:44858 Float32 mul_commut
binder 44870:44870 <> x:215
binder 44872:44872 <> y:216
R44919:44922 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44930:44932 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44923:44925 compcert.lib.Floats Float32 mul def
R44929:44929 compcert.lib.Floats <> y:216 var
R44927:44927 compcert.lib.Floats <> x:215 var
R44933:44935 compcert.lib.Floats Float32 mul def
R44939:44939 compcert.lib.Floats <> x:215 var
R44937:44937 compcert.lib.Floats <> y:216 var
R44895:44898 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R44887:44889 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44875:44880 Flocq.IEEE754.Binary <> is_nan def
R44886:44886 compcert.lib.Floats <> x:215 var
R44890:44894 Coq.Init.Datatypes <> false constr
R44911:44913 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44899:44904 Flocq.IEEE754.Binary <> is_nan def
R44910:44910 compcert.lib.Floats <> y:216 var
R44914:44918 Coq.Init.Datatypes <> false constr
R44965:44976 compcert.lib.IEEE754_extra <> Bmult_commut thm
R44965:44976 compcert.lib.IEEE754_extra <> Bmult_commut thm
prf 45093:45100 Float32 mul2_add
binder 45112:45112 <> f:217
R45122:45124 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45115:45117 compcert.lib.Floats Float32 add def
R45121:45121 compcert.lib.Floats <> f:217 var
R45119:45119 compcert.lib.Floats <> f:217 var
R45125:45127 compcert.lib.Floats Float32 mul def
R45132:45137 compcert.lib.Floats Float32 of_int def
R45140:45147 compcert.lib.Integers Int repr def
R45129:45129 compcert.lib.Floats <> f:217 var
R45179:45190 compcert.lib.IEEE754_extra <> Bmult2_Bplus thm
R45179:45190 compcert.lib.IEEE754_extra <> Bmult2_Bplus thm
R45220:45228 compcert.lib.Floats Float32 binop_nan def
R45278:45301 compcert.x86_32.Archi <> choose_nan_32_idem thm
R45278:45301 compcert.x86_32.Archi <> choose_nan_32_idem thm
R45278:45301 compcert.x86_32.Archi <> choose_nan_32_idem thm
def 45437:45449 Float32 exact_inverse
R45460:45463 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45464:45469 Coq.Init.Datatypes <> option ind
R45471:45477 compcert.lib.Floats <> float32 def
R45453:45459 compcert.lib.Floats <> float32 def
R45482:45495 compcert.lib.IEEE754_extra <> Bexact_inverse def
R45507:45508 compcert.lib.Floats <> __ syndef
R45504:45505 compcert.lib.Floats <> __ syndef
prf 45520:45534 Float32 div_mul_inverse
binder 45546:45546 <> x:218
binder 45548:45548 <> y:219
binder 45550:45550 <> z:220
R45577:45580 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45588:45590 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45581:45583 compcert.lib.Floats Float32 div def
R45587:45587 compcert.lib.Floats <> y:219 var
R45585:45585 compcert.lib.Floats <> x:218 var
R45591:45593 compcert.lib.Floats Float32 mul def
R45597:45597 compcert.lib.Floats <> z:220 var
R45595:45595 compcert.lib.Floats <> x:218 var
R45568:45570 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45553:45565 compcert.lib.Floats Float32 exact_inverse def
R45567:45567 compcert.lib.Floats <> y:219 var
R45571:45574 Coq.Init.Datatypes <> Some constr
R45576:45576 compcert.lib.Floats <> z:220 var
R45623:45639 compcert.lib.IEEE754_extra <> Bdiv_mult_inverse thm
R45623:45639 compcert.lib.IEEE754_extra <> Bdiv_mult_inverse thm
R45686:45694 compcert.lib.Floats Float32 binop_nan def
prf 45827:45834 Float32 cmp_swap
binder 45846:45846 <> c:221
binder 45848:45848 <> x:222
binder 45850:45850 <> y:223
R45880:45882 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45853:45855 compcert.lib.Floats Float32 cmp def
R45879:45879 compcert.lib.Floats <> y:223 var
R45877:45877 compcert.lib.Floats <> x:222 var
R45858:45872 compcert.lib.Integers <> swap_comparison def
R45874:45874 compcert.lib.Floats <> c:221 var
R45883:45885 compcert.lib.Floats Float32 cmp def
R45891:45891 compcert.lib.Floats <> x:222 var
R45889:45889 compcert.lib.Floats <> y:223 var
R45887:45887 compcert.lib.Floats <> c:221 var
R45910:45912 compcert.lib.Floats Float32 cmp def
R45915:45921 compcert.lib.Floats Float32 compare def
R45941:45953 Flocq.IEEE754.Binary <> Bcompare_swap thm
R45941:45953 Flocq.IEEE754.Binary <> Bcompare_swap thm
R45941:45953 Flocq.IEEE754.Binary <> Bcompare_swap thm
R45973:45994 compcert.lib.Floats <> cmp_of_comparison_swap thm
R45973:45994 compcert.lib.Floats <> cmp_of_comparison_swap thm
prf 46011:46019 Float32 cmp_ne_eq
binder 46031:46032 <> f1:224
binder 46034:46035 <> f2:225
R46051:46053 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46038:46040 compcert.lib.Floats Float32 cmp def
R46049:46050 compcert.lib.Floats <> f2:225 var
R46046:46047 compcert.lib.Floats <> f1:224 var
R46042:46044 compcert.lib.Integers <> Cne constr
R46054:46057 Coq.Init.Datatypes <> negb def
R46060:46062 compcert.lib.Floats Float32 cmp def
R46071:46072 compcert.lib.Floats <> f2:225 var
R46068:46069 compcert.lib.Floats <> f1:224 var
R46064:46066 compcert.lib.Integers <> Ceq constr
R46099:46121 compcert.lib.Floats <> cmp_of_comparison_ne_eq thm
R46099:46121 compcert.lib.Floats <> cmp_of_comparison_ne_eq thm
prf 46138:46152 Float32 cmp_lt_eq_false
binder 46164:46165 <> f1:226
binder 46167:46168 <> f2:227
R46191:46194 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46215:46218 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46219:46223 Coq.Init.Logic <> False ind
R46208:46210 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46195:46197 compcert.lib.Floats Float32 cmp def
R46206:46207 compcert.lib.Floats <> f2:227 var
R46203:46204 compcert.lib.Floats <> f1:226 var
R46199:46201 compcert.lib.Integers <> Ceq constr
R46211:46214 Coq.Init.Datatypes <> true constr
R46184:46186 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46171:46173 compcert.lib.Floats Float32 cmp def
R46182:46183 compcert.lib.Floats <> f2:227 var
R46179:46180 compcert.lib.Floats <> f1:226 var
R46175:46177 compcert.lib.Integers <> Clt constr
R46187:46190 Coq.Init.Datatypes <> true constr
R46255:46283 compcert.lib.Floats <> cmp_of_comparison_lt_eq_false thm
R46255:46283 compcert.lib.Floats <> cmp_of_comparison_lt_eq_false thm
prf 46300:46311 Float32 cmp_le_lt_eq
binder 46323:46324 <> f1:228
binder 46326:46327 <> f2:229
R46343:46345 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46330:46332 compcert.lib.Floats Float32 cmp def
R46341:46342 compcert.lib.Floats <> f2:229 var
R46338:46339 compcert.lib.Floats <> f1:228 var
R46334:46336 compcert.lib.Integers <> Cle constr
R46359:46362 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R46346:46348 compcert.lib.Floats Float32 cmp def
R46357:46358 compcert.lib.Floats <> f2:229 var
R46354:46355 compcert.lib.Floats <> f1:228 var
R46350:46352 compcert.lib.Integers <> Clt constr
R46363:46365 compcert.lib.Floats Float32 cmp def
R46374:46375 compcert.lib.Floats <> f2:229 var
R46371:46372 compcert.lib.Floats <> f1:228 var
R46367:46369 compcert.lib.Integers <> Ceq constr
R46407:46432 compcert.lib.Floats <> cmp_of_comparison_le_lt_eq thm
R46407:46432 compcert.lib.Floats <> cmp_of_comparison_le_lt_eq thm
prf 46449:46463 Float32 cmp_gt_eq_false
binder 46475:46475 <> x:230
binder 46477:46477 <> y:231
R46498:46501 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46520:46523 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46524:46528 Coq.Init.Logic <> False ind
R46513:46515 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46502:46504 compcert.lib.Floats Float32 cmp def
R46512:46512 compcert.lib.Floats <> y:231 var
R46510:46510 compcert.lib.Floats <> x:230 var
R46506:46508 compcert.lib.Integers <> Ceq constr
R46516:46519 Coq.Init.Datatypes <> true constr
R46491:46493 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46480:46482 compcert.lib.Floats Float32 cmp def
R46490:46490 compcert.lib.Floats <> y:231 var
R46488:46488 compcert.lib.Floats <> x:230 var
R46484:46486 compcert.lib.Integers <> Cgt constr
R46494:46497 Coq.Init.Datatypes <> true constr
R46560:46588 compcert.lib.Floats <> cmp_of_comparison_gt_eq_false thm
R46560:46588 compcert.lib.Floats <> cmp_of_comparison_gt_eq_false thm
prf 46605:46616 Float32 cmp_ge_gt_eq
binder 46628:46629 <> f1:232
binder 46631:46632 <> f2:233
R46648:46650 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46635:46637 compcert.lib.Floats Float32 cmp def
R46646:46647 compcert.lib.Floats <> f2:233 var
R46643:46644 compcert.lib.Floats <> f1:232 var
R46639:46641 compcert.lib.Integers <> Cge constr
R46664:46667 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R46651:46653 compcert.lib.Floats Float32 cmp def
R46662:46663 compcert.lib.Floats <> f2:233 var
R46659:46660 compcert.lib.Floats <> f1:232 var
R46655:46657 compcert.lib.Integers <> Cgt constr
R46668:46670 compcert.lib.Floats Float32 cmp def
R46679:46680 compcert.lib.Floats <> f2:233 var
R46676:46677 compcert.lib.Floats <> f1:232 var
R46672:46674 compcert.lib.Integers <> Ceq constr
R46712:46737 compcert.lib.Floats <> cmp_of_comparison_ge_gt_eq thm
R46712:46737 compcert.lib.Floats <> cmp_of_comparison_ge_gt_eq thm
prf 46754:46768 Float32 cmp_lt_gt_false
binder 46780:46781 <> f1:234
binder 46783:46784 <> f2:235
R46807:46810 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46831:46834 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46835:46839 Coq.Init.Logic <> False ind
R46824:46826 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46811:46813 compcert.lib.Floats Float32 cmp def
R46822:46823 compcert.lib.Floats <> f2:235 var
R46819:46820 compcert.lib.Floats <> f1:234 var
R46815:46817 compcert.lib.Integers <> Cgt constr
R46827:46830 Coq.Init.Datatypes <> true constr
R46800:46802 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46787:46789 compcert.lib.Floats Float32 cmp def
R46798:46799 compcert.lib.Floats <> f2:235 var
R46795:46796 compcert.lib.Floats <> f1:234 var
R46791:46793 compcert.lib.Integers <> Clt constr
R46803:46806 Coq.Init.Datatypes <> true constr
R46871:46899 compcert.lib.Floats <> cmp_of_comparison_lt_gt_false thm
R46871:46899 compcert.lib.Floats <> cmp_of_comparison_lt_gt_false thm
prf 46916:46925 Float32 cmp_double
binder 46937:46938 <> f1:236
binder 46940:46941 <> f2:237
binder 46943:46943 <> c:238
R46957:46959 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46946:46948 compcert.lib.Floats Float32 cmp def
R46955:46956 compcert.lib.Floats <> f2:237 var
R46952:46953 compcert.lib.Floats <> f1:236 var
R46950:46950 compcert.lib.Floats <> c:238 var
R46960:46968 compcert.lib.Floats Float cmp def
R46988:46996 compcert.lib.Floats Float32 to_double def
R46998:46999 compcert.lib.Floats <> f2:237 var
R46973:46981 compcert.lib.Floats Float32 to_double def
R46983:46984 compcert.lib.Floats <> f1:236 var
R46970:46970 compcert.lib.Floats <> c:238 var
R47019:47021 compcert.lib.Floats Float32 cmp def
R47024:47032 compcert.lib.Floats Float cmp def
R47068:47087 compcert.lib.IEEE754_extra <> Bcompare_Bconv_widen thm
R47068:47087 compcert.lib.IEEE754_extra <> Bcompare_Bconv_widen thm
prf 47246:47255 Float32 of_to_bits
binder 47267:47267 <> f:239
R47289:47291 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47270:47276 compcert.lib.Floats Float32 of_bits def
R47279:47285 compcert.lib.Floats Float32 to_bits def
R47287:47287 compcert.lib.Floats <> f:239 var
R47292:47292 compcert.lib.Floats <> f:239 var
R47319:47325 compcert.lib.Floats Float32 of_bits def
R47328:47334 compcert.lib.Floats Float32 to_bits def
R47337:47347 Flocq.IEEE754.Bits <> bits_of_b32 def
R47350:47360 Flocq.IEEE754.Bits <> b32_of_bits def
R47373:47389 compcert.lib.Integers Int unsigned_repr thm
R47392:47427 Flocq.IEEE754.Bits <> binary_float_of_bits_of_binary_float thm
R47373:47389 compcert.lib.Integers Int unsigned_repr thm
R47373:47389 compcert.lib.Integers Int unsigned_repr thm
R47373:47389 compcert.lib.Integers Int unsigned_repr thm
R47392:47427 Flocq.IEEE754.Bits <> binary_float_of_bits_of_binary_float thm
R47392:47427 Flocq.IEEE754.Bits <> binary_float_of_bits_of_binary_float thm
R47460:47485 Flocq.IEEE754.Bits <> bits_of_binary_float_range thm
R47495:47496 compcert.lib.Floats <> __ syndef
R47492:47493 compcert.lib.Floats <> __ syndef
R47460:47485 Flocq.IEEE754.Bits <> bits_of_binary_float_range thm
R47495:47496 compcert.lib.Floats <> __ syndef
R47492:47493 compcert.lib.Floats <> __ syndef
R47513:47514 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R47521:47521 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R47519:47519 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R47517:47517 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R47546:47548 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R47530:47545 compcert.lib.Integers Int max_unsigned def
R47513:47514 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R47521:47521 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R47519:47519 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R47517:47517 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R47546:47548 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R47530:47545 compcert.lib.Integers Int max_unsigned def
prf 47574:47583 Float32 to_of_bits
binder 47595:47595 <> b:240
R47617:47619 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47598:47604 compcert.lib.Floats Float32 to_bits def
R47607:47613 compcert.lib.Floats Float32 of_bits def
R47615:47615 compcert.lib.Floats <> b:240 var
R47620:47620 compcert.lib.Floats <> b:240 var
R47647:47653 compcert.lib.Floats Float32 of_bits def
R47656:47662 compcert.lib.Floats Float32 to_bits def
R47665:47675 Flocq.IEEE754.Bits <> bits_of_b32 def
R47678:47688 Flocq.IEEE754.Bits <> b32_of_bits def
R47701:47728 Flocq.IEEE754.Bits <> bits_of_binary_float_of_bits thm
R47701:47728 Flocq.IEEE754.Bits <> bits_of_binary_float_of_bits thm
R47701:47728 Flocq.IEEE754.Bits <> bits_of_binary_float_of_bits thm
R47701:47728 Flocq.IEEE754.Bits <> bits_of_binary_float_of_bits thm
R47737:47753 compcert.lib.Integers Int repr_unsigned thm
R47737:47753 compcert.lib.Integers Int repr_unsigned thm
R47764:47781 compcert.lib.Integers Int unsigned_range thm
R47764:47781 compcert.lib.Integers Int unsigned_range thm
prf 48009:48021 Float32 of_int_double
binder 48033:48033 <> n:241
R48044:48046 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48036:48041 compcert.lib.Floats Float32 of_int def
R48043:48043 compcert.lib.Floats <> n:241 var
R48047:48055 compcert.lib.Floats Float32 of_double def
R48058:48069 compcert.lib.Floats Float of_int def
R48071:48071 compcert.lib.Floats <> n:241 var
R48108:48117 compcert.lib.IEEE754_extra <> Bconv_BofZ thm
R48108:48117 compcert.lib.IEEE754_extra <> Bconv_BofZ thm
R48128:48150 compcert.lib.IEEE754_extra <> integer_representable_n thm
R48128:48150 compcert.lib.IEEE754_extra <> integer_representable_n thm
R48171:48186 compcert.lib.Integers Int signed_range thm
R48171:48186 compcert.lib.Integers Int signed_range thm
prf 48225:48238 Float32 of_intu_double
binder 48250:48250 <> n:242
R48262:48264 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48253:48259 compcert.lib.Floats Float32 of_intu def
R48261:48261 compcert.lib.Floats <> n:242 var
R48265:48273 compcert.lib.Floats Float32 of_double def
R48276:48288 compcert.lib.Floats Float of_intu def
R48290:48290 compcert.lib.Floats <> n:242 var
R48327:48336 compcert.lib.IEEE754_extra <> Bconv_BofZ thm
R48327:48336 compcert.lib.IEEE754_extra <> Bconv_BofZ thm
R48347:48369 compcert.lib.IEEE754_extra <> integer_representable_n thm
R48347:48369 compcert.lib.IEEE754_extra <> integer_representable_n thm
R48390:48407 compcert.lib.Integers Int unsigned_range thm
R48390:48407 compcert.lib.Integers Int unsigned_range thm
prf 48614:48626 Float32 to_int_double
binder 48638:48638 <> f:243
binder 48640:48640 <> n:244
R48660:48663 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48690:48692 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48664:48675 compcert.lib.Floats Float to_int def
R48678:48686 compcert.lib.Floats Float32 to_double def
R48688:48688 compcert.lib.Floats <> f:243 var
R48693:48696 Coq.Init.Datatypes <> Some constr
R48698:48698 compcert.lib.Floats <> n:244 var
R48651:48653 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48643:48648 compcert.lib.Floats Float32 to_int def
R48650:48650 compcert.lib.Floats <> f:243 var
R48654:48657 Coq.Init.Datatypes <> Some constr
R48659:48659 compcert.lib.Floats <> n:244 var
R48727:48732 compcert.lib.Floats Float32 to_int def
R48752:48761 compcert.lib.IEEE754_extra <> ZofB_range def
R48784:48797 compcert.lib.Integers Int max_signed def
R48769:48782 compcert.lib.Integers Int min_signed def
R48752:48761 compcert.lib.IEEE754_extra <> ZofB_range def
R48784:48797 compcert.lib.Integers Int max_signed def
R48769:48782 compcert.lib.Integers Int min_signed def
R48832:48843 compcert.lib.Floats Float to_int def
R48846:48854 compcert.lib.Floats Float32 to_double def
R48857:48871 compcert.lib.Floats Float of_single def
R48885:48900 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R48885:48900 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R48885:48900 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R48885:48900 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R48885:48900 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R48885:48900 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R48885:48900 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R48885:48900 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R48885:48900 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
prf 48958:48971 Float32 to_intu_double
binder 48983:48983 <> f:245
binder 48985:48985 <> n:246
R49006:49009 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49037:49039 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49010:49022 compcert.lib.Floats Float to_intu def
R49025:49033 compcert.lib.Floats Float32 to_double def
R49035:49035 compcert.lib.Floats <> f:245 var
R49040:49043 Coq.Init.Datatypes <> Some constr
R49045:49045 compcert.lib.Floats <> n:246 var
R48997:48999 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48988:48994 compcert.lib.Floats Float32 to_intu def
R48996:48996 compcert.lib.Floats <> f:245 var
R49000:49003 Coq.Init.Datatypes <> Some constr
R49005:49005 compcert.lib.Floats <> n:246 var
R49074:49080 compcert.lib.Floats Float32 to_intu def
R49100:49109 compcert.lib.IEEE754_extra <> ZofB_range def
R49119:49134 compcert.lib.Integers Int max_unsigned def
R49100:49109 compcert.lib.IEEE754_extra <> ZofB_range def
R49119:49134 compcert.lib.Integers Int max_unsigned def
R49169:49181 compcert.lib.Floats Float to_intu def
R49184:49192 compcert.lib.Floats Float32 to_double def
R49195:49209 compcert.lib.Floats Float of_single def
R49223:49238 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49223:49238 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49223:49238 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49223:49238 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49223:49238 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49223:49238 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49223:49238 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49223:49238 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49223:49238 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
prf 49296:49309 Float32 to_long_double
binder 49321:49321 <> f:247
binder 49323:49323 <> n:248
R49344:49347 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49375:49377 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49348:49360 compcert.lib.Floats Float to_long def
R49363:49371 compcert.lib.Floats Float32 to_double def
R49373:49373 compcert.lib.Floats <> f:247 var
R49378:49381 Coq.Init.Datatypes <> Some constr
R49383:49383 compcert.lib.Floats <> n:248 var
R49335:49337 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49326:49332 compcert.lib.Floats Float32 to_long def
R49334:49334 compcert.lib.Floats <> f:247 var
R49338:49341 Coq.Init.Datatypes <> Some constr
R49343:49343 compcert.lib.Floats <> n:248 var
R49412:49418 compcert.lib.Floats Float32 to_long def
R49438:49447 compcert.lib.IEEE754_extra <> ZofB_range def
R49472:49487 compcert.lib.Integers Int64 max_signed def
R49455:49470 compcert.lib.Integers Int64 min_signed def
R49438:49447 compcert.lib.IEEE754_extra <> ZofB_range def
R49472:49487 compcert.lib.Integers Int64 max_signed def
R49455:49470 compcert.lib.Integers Int64 min_signed def
R49522:49534 compcert.lib.Floats Float to_long def
R49537:49545 compcert.lib.Floats Float32 to_double def
R49548:49562 compcert.lib.Floats Float of_single def
R49576:49591 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49576:49591 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49576:49591 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49576:49591 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49576:49591 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49576:49591 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49576:49591 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49576:49591 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49576:49591 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
prf 49649:49663 Float32 to_longu_double
binder 49675:49675 <> f:249
binder 49677:49677 <> n:250
R49699:49702 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49731:49733 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49703:49716 compcert.lib.Floats Float to_longu def
R49719:49727 compcert.lib.Floats Float32 to_double def
R49729:49729 compcert.lib.Floats <> f:249 var
R49734:49737 Coq.Init.Datatypes <> Some constr
R49739:49739 compcert.lib.Floats <> n:250 var
R49690:49692 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49680:49687 compcert.lib.Floats Float32 to_longu def
R49689:49689 compcert.lib.Floats <> f:249 var
R49693:49696 Coq.Init.Datatypes <> Some constr
R49698:49698 compcert.lib.Floats <> n:250 var
R49768:49775 compcert.lib.Floats Float32 to_longu def
R49795:49804 compcert.lib.IEEE754_extra <> ZofB_range def
R49814:49831 compcert.lib.Integers Int64 max_unsigned def
R49795:49804 compcert.lib.IEEE754_extra <> ZofB_range def
R49814:49831 compcert.lib.Integers Int64 max_unsigned def
R49866:49879 compcert.lib.Floats Float to_longu def
R49882:49890 compcert.lib.Floats Float32 to_double def
R49893:49907 compcert.lib.Floats Float of_single def
R49921:49936 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49921:49936 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49921:49936 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49921:49936 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49921:49936 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49921:49936 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49921:49936 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49921:49936 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
R49921:49936 compcert.lib.IEEE754_extra <> ZofB_range_Bconv thm
prf 50331:50348 Float32 int_round_odd_plus
binder 50360:50360 <> p:251
binder 50362:50362 <> n:252
R50371:50376 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50394:50396 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50377:50389 compcert.lib.IEEE754_extra <> int_round_odd def
R50393:50393 compcert.lib.Floats <> p:251 var
R50391:50391 compcert.lib.Floats <> n:252 var
R50397:50402 Coq.ZArith.BinInt Z land def
R50444:50445 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R50449:50449 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R50447:50447 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50448:50448 compcert.lib.Floats <> p:251 var
R50405:50409 Coq.ZArith.BinInt Z lor def
R50430:50433 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R50439:50439 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R50414:50419 Coq.ZArith.BinInt Z land def
R50427:50427 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R50425:50425 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50426:50426 compcert.lib.Floats <> p:251 var
R50421:50421 compcert.lib.Floats <> n:252 var
R50437:50437 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R50435:50435 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50436:50436 compcert.lib.Floats <> p:251 var
R50411:50411 compcert.lib.Floats <> n:252 var
R50366:50369 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R50370:50370 compcert.lib.Floats <> p:251 var
R50486:50488 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R50490:50490 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50505:50515 Flocq.Core.Zaux <> Zpower_gt_0 thm
R50517:50522 Flocq.Core.Zaux <> radix2 def
R50486:50488 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R50490:50490 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50505:50515 Flocq.Core.Zaux <> Zpower_gt_0 thm
R50517:50522 Flocq.Core.Zaux <> radix2 def
R50562:50564 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50546:50551 Coq.ZArith.BinInt Z land def
R50559:50559 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R50557:50557 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50566:50570 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R50572:50572 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50562:50564 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50546:50551 Coq.ZArith.BinInt Z land def
R50559:50559 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R50557:50557 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50566:50570 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R50572:50572 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50592:50602 Coq.ZArith.BinInt Z land_ones thm
R50592:50602 Coq.ZArith.BinInt Z land_ones thm
R50592:50602 Coq.ZArith.BinInt Z land_ones thm
R50630:50641 Coq.ZArith.BinInt Z ones_equiv thm
R50630:50641 Coq.ZArith.BinInt Z ones_equiv thm
R50630:50641 Coq.ZArith.BinInt Z ones_equiv thm
R50680:50683 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R50693:50695 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R50685:50689 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R50691:50691 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50685:50689 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R50691:50691 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50697:50697 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50680:50683 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R50693:50695 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R50685:50689 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R50691:50691 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50685:50689 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R50691:50691 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50697:50697 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50712:50719 Coq.ZArith.Zdiv <> Z_mod_lt thm
R50712:50719 Coq.ZArith.Zdiv <> Z_mod_lt thm
R50752:50755 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R50761:50761 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R50744:50748 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R50750:50750 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50759:50759 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R50757:50757 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50752:50755 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R50761:50761 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R50744:50748 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R50750:50750 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50759:50759 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R50757:50757 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50790:50792 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50784:50786 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R50788:50788 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50796:50798 compcert.lib.Coqlib <> zeq def
R50802:50806 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R50808:50808 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50790:50792 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50784:50786 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R50788:50788 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50796:50798 compcert.lib.Coqlib <> zeq def
R50802:50806 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R50808:50808 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50854:50856 compcert.lib.Coqlib <> zeq def
R50860:50864 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R50866:50866 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50854:50856 compcert.lib.Coqlib <> zeq def
R50860:50864 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R50866:50866 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50895:50905 Coq.ZArith.BinInt Z div_small thm
R50895:50905 Coq.ZArith.BinInt Z div_small thm
R50960:50962 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R50952:50956 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R50958:50958 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50926:50943 compcert.lib.Coqlib <> Zdiv_unique thm
R50960:50962 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R50952:50956 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R50958:50958 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R50926:50943 compcert.lib.Coqlib <> Zdiv_unique thm
R51008:51010 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50995:51003 Coq.ZArith.BinInt Z testbit def
R51014:51016 compcert.lib.Coqlib <> zeq def
R51020:51024 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R51026:51026 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R51048:51051 Coq.Init.Datatypes <> true constr
R51037:51041 Coq.Init.Datatypes <> false constr
R51008:51010 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50995:51003 Coq.ZArith.BinInt Z testbit def
R51014:51016 compcert.lib.Coqlib <> zeq def
R51020:51024 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R51026:51026 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R51048:51051 Coq.Init.Datatypes <> true constr
R51037:51041 Coq.Init.Datatypes <> false constr
R51069:51071 compcert.lib.Coqlib <> zeq def
R51075:51079 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R51081:51081 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R51069:51071 compcert.lib.Coqlib <> zeq def
R51075:51079 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R51081:51081 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R51099:51113 Coq.ZArith.BinInt Z testbit_false thm
R51099:51113 Coq.ZArith.BinInt Z testbit_false thm
R51149:51162 Coq.ZArith.BinInt Z testbit_true thm
R51149:51162 Coq.ZArith.BinInt Z testbit_true thm
binder 51210:51210 <> i:253
R51218:51221 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51235:51237 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51222:51230 Coq.ZArith.BinInt Z testbit def
R51234:51234 compcert.lib.Floats <> i:253 var
R51238:51242 Coq.Init.Datatypes <> false constr
R51214:51216 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R51217:51217 compcert.lib.Floats <> i:253 var
binder 51210:51210 <> i:254
R51218:51221 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51235:51237 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51222:51230 Coq.ZArith.BinInt Z testbit def
R51234:51234 compcert.lib.Floats <> i:254 var
R51238:51242 Coq.Init.Datatypes <> false constr
R51214:51216 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R51217:51217 compcert.lib.Floats <> i:254 var
R51264:51278 Coq.ZArith.BinInt Z testbit_false thm
R51264:51278 Coq.ZArith.BinInt Z testbit_false thm
R51302:51304 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R51306:51306 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R51302:51304 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R51306:51306 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R51340:51350 Coq.ZArith.BinInt Z div_small thm
R51340:51350 Coq.ZArith.BinInt Z div_small thm
R51408:51410 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R51412:51412 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R51387:51399 Coq.ZArith.BinInt Z lt_le_trans thm
R51408:51410 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R51412:51412 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R51387:51399 Coq.ZArith.BinInt Z lt_le_trans thm
R51444:51444 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R51444:51444 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R51466:51476 Flocq.Core.Zaux <> Zpower_plus thm
R51478:51483 Flocq.Core.Zaux <> radix2 def
R51466:51476 Flocq.Core.Zaux <> Zpower_plus thm
R51478:51483 Flocq.Core.Zaux <> radix2 def
R51466:51476 Flocq.Core.Zaux <> Zpower_plus thm
R51478:51483 Flocq.Core.Zaux <> radix2 def
R51506:51514 Flocq.Core.Zaux <> Zpower_le thm
R51506:51514 Flocq.Core.Zaux <> Zpower_le thm
binder 51546:51546 <> i:255
R51555:51558 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51577:51579 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51559:51567 Coq.ZArith.BinInt Z testbit def
R51576:51576 compcert.lib.Floats <> i:255 var
R51570:51570 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R51572:51572 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R51583:51585 compcert.lib.Coqlib <> zlt def
R51587:51587 compcert.lib.Floats <> i:255 var
R51607:51610 Coq.Init.Datatypes <> true constr
R51596:51600 Coq.Init.Datatypes <> false constr
R51550:51553 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R51554:51554 compcert.lib.Floats <> i:255 var
binder 51546:51546 <> i:256
R51555:51558 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51577:51579 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51559:51567 Coq.ZArith.BinInt Z testbit def
R51576:51576 compcert.lib.Floats <> i:256 var
R51570:51570 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R51572:51572 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R51583:51585 compcert.lib.Coqlib <> zlt def
R51587:51587 compcert.lib.Floats <> i:256 var
R51607:51610 Coq.Init.Datatypes <> true constr
R51596:51600 Coq.Init.Datatypes <> false constr
R51550:51553 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R51554:51554 compcert.lib.Floats <> i:256 var
R51634:51643 Coq.ZArith.BinInt Z bits_opp thm
R51634:51643 Coq.ZArith.BinInt Z bits_opp thm
R51634:51643 Coq.ZArith.BinInt Z bits_opp thm
R51665:51676 Coq.ZArith.BinInt Z ones_equiv thm
R51665:51676 Coq.ZArith.BinInt Z ones_equiv thm
R51665:51676 Coq.ZArith.BinInt Z ones_equiv thm
R51693:51695 compcert.lib.Coqlib <> zlt def
R51693:51695 compcert.lib.Coqlib <> zlt def
R51715:51729 Coq.ZArith.BinInt Z ones_spec_low thm
R51715:51729 Coq.ZArith.BinInt Z ones_spec_low thm
R51715:51729 Coq.ZArith.BinInt Z ones_spec_low thm
R51759:51774 Coq.ZArith.BinInt Z ones_spec_high thm
R51759:51774 Coq.ZArith.BinInt Z ones_spec_high thm
R51759:51774 Coq.ZArith.BinInt Z ones_spec_high thm
R51802:51819 compcert.lib.IEEE754_extra <> int_round_odd_bits thm
R51802:51819 compcert.lib.IEEE754_extra <> int_round_odd_bits thm
R51848:51858 Coq.ZArith.BinInt Z land_spec thm
R51864:51871 compcert.lib.Coqlib <> zlt_true thm
R51848:51858 Coq.ZArith.BinInt Z land_spec thm
R51848:51858 Coq.ZArith.BinInt Z land_spec thm
R51864:51871 compcert.lib.Coqlib <> zlt_true thm
R51864:51871 compcert.lib.Coqlib <> zlt_true thm
R51889:51900 Coq.Bool.Bool <> andb_false_r thm
R51889:51900 Coq.Bool.Bool <> andb_false_r thm
R51915:51925 Coq.ZArith.BinInt Z land_spec thm
R51928:51937 Coq.ZArith.BinInt Z lor_spec thm
R51946:51954 compcert.lib.Coqlib <> zlt_false thm
R51957:51967 Coq.Bool.Bool <> andb_true_r thm
R51915:51925 Coq.ZArith.BinInt Z land_spec thm
R51915:51925 Coq.ZArith.BinInt Z land_spec thm
R51928:51937 Coq.ZArith.BinInt Z lor_spec thm
R51928:51937 Coq.ZArith.BinInt Z lor_spec thm
R51946:51954 compcert.lib.Coqlib <> zlt_false thm
R51946:51954 compcert.lib.Coqlib <> zlt_false thm
R51957:51967 Coq.Bool.Bool <> andb_true_r thm
R51957:51967 Coq.Bool.Bool <> andb_true_r thm
R51993:51997 Coq.ZArith.BinInt Z eqb def
R52001:52005 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R52007:52007 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R51993:51997 Coq.ZArith.BinInt Z eqb def
R52001:52005 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R52007:52007 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52033:52040 Coq.ZArith.BinInt Z eqb_eq thm
R52033:52040 Coq.ZArith.BinInt Z eqb_eq thm
R52033:52040 Coq.ZArith.BinInt Z eqb_eq thm
R52059:52066 compcert.lib.Coqlib <> zeq_true thm
R52059:52066 compcert.lib.Coqlib <> zeq_true thm
R52059:52066 compcert.lib.Coqlib <> zeq_true thm
R52075:52085 Coq.Bool.Bool <> orb_false_r thm
R52075:52085 Coq.Bool.Bool <> orb_false_r thm
R52100:52108 Coq.ZArith.BinInt Z eqb_neq thm
R52100:52108 Coq.ZArith.BinInt Z eqb_neq thm
R52100:52108 Coq.ZArith.BinInt Z eqb_neq thm
R52124:52132 compcert.lib.Coqlib <> zeq_false thm
R52124:52132 compcert.lib.Coqlib <> zeq_false thm
R52124:52132 compcert.lib.Coqlib <> zeq_false thm
R52149:52158 Coq.Bool.Bool <> orb_true_r thm
R52149:52158 Coq.Bool.Bool <> orb_true_r thm
R52181:52191 Coq.ZArith.BinInt Z land_spec thm
R52194:52203 Coq.ZArith.BinInt Z lor_spec thm
R52212:52220 compcert.lib.Coqlib <> zlt_false thm
R52223:52233 Coq.Bool.Bool <> andb_true_r thm
R52181:52191 Coq.ZArith.BinInt Z land_spec thm
R52181:52191 Coq.ZArith.BinInt Z land_spec thm
R52194:52203 Coq.ZArith.BinInt Z lor_spec thm
R52194:52203 Coq.ZArith.BinInt Z lor_spec thm
R52212:52220 compcert.lib.Coqlib <> zlt_false thm
R52212:52220 compcert.lib.Coqlib <> zlt_false thm
R52223:52233 Coq.Bool.Bool <> andb_true_r thm
R52223:52233 Coq.Bool.Bool <> andb_true_r thm
R52255:52265 Coq.Bool.Bool <> orb_false_r thm
R52255:52265 Coq.Bool.Bool <> orb_false_r thm
prf 52280:52296 Float32 of_long_round_odd
binder 52308:52308 <> n:257
binder 52310:52317 <> conv_nan:258
R52344:52349 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52369:52371 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52350:52353 compcert.lib.IEEE754_extra <> BofZ def
R52368:52368 compcert.lib.Floats <> n:257 var
R52365:52366 compcert.lib.Floats <> __ syndef
R52362:52363 compcert.lib.Floats <> __ syndef
R52372:52376 compcert.lib.IEEE754_extra <> Bconv def
R52413:52416 compcert.lib.IEEE754_extra <> BofZ def
R52433:52438 Coq.ZArith.BinInt Z land def
R52441:52445 Coq.ZArith.BinInt Z lor def
R52450:52450 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R52464:52467 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R52451:52456 Coq.ZArith.BinInt Z land def
R52458:52458 compcert.lib.Floats <> n:257 var
R52447:52447 compcert.lib.Floats <> n:257 var
R52429:52430 compcert.lib.Floats <> __ syndef
R52426:52427 compcert.lib.Floats <> __ syndef
R52404:52410 Flocq.IEEE754.Binary <> mode_NE constr
R52395:52402 compcert.lib.Floats <> conv_nan:258 var
R52392:52393 compcert.lib.Floats <> __ syndef
R52389:52390 compcert.lib.Floats <> __ syndef
R52326:52329 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R52337:52339 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R52323:52323 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52330:52334 Coq.ZArith.BinInt Z abs def
R52336:52336 compcert.lib.Floats <> n:257 var
R52330:52334 Coq.ZArith.BinInt Z abs def
R52336:52336 compcert.lib.Floats <> n:257 var
R52341:52341 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52515:52532 compcert.lib.Floats Float32 int_round_odd_plus thm
R52515:52532 compcert.lib.Floats Float32 int_round_odd_plus thm
R52515:52532 compcert.lib.Floats Float32 int_round_odd_plus thm
R52563:52566 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R52558:52558 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R52560:52560 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52567:52579 compcert.lib.IEEE754_extra <> int_round_odd def
R52563:52566 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R52558:52558 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R52560:52560 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52567:52579 compcert.lib.IEEE754_extra <> int_round_odd def
R52600:52600 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R52602:52602 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52613:52625 compcert.lib.IEEE754_extra <> int_round_odd def
R52628:52628 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R52630:52630 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52600:52600 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R52602:52602 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52613:52625 compcert.lib.IEEE754_extra <> int_round_odd def
R52628:52628 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R52630:52630 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52647:52662 compcert.lib.IEEE754_extra <> int_round_odd_le thm
R52647:52662 compcert.lib.IEEE754_extra <> int_round_odd_le thm
R52708:52711 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R52690:52702 compcert.lib.IEEE754_extra <> int_round_odd def
R52713:52713 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52708:52711 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R52690:52702 compcert.lib.IEEE754_extra <> int_round_odd def
R52713:52713 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52732:52732 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52743:52755 compcert.lib.IEEE754_extra <> int_round_odd def
R52759:52759 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52732:52732 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52743:52755 compcert.lib.IEEE754_extra <> int_round_odd def
R52759:52759 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52776:52791 compcert.lib.IEEE754_extra <> int_round_odd_le thm
R52776:52791 compcert.lib.IEEE754_extra <> int_round_odd_le thm
R52819:52828 compcert.lib.IEEE754_extra <> Bconv_BofZ thm
R52819:52828 compcert.lib.IEEE754_extra <> Bconv_BofZ thm
R52819:52828 compcert.lib.IEEE754_extra <> Bconv_BofZ thm
R52819:52828 compcert.lib.IEEE754_extra <> Bconv_BofZ thm
R52839:52852 compcert.lib.IEEE754_extra <> BofZ_round_odd thm
R52839:52852 compcert.lib.IEEE754_extra <> BofZ_round_odd thm
R52905:52905 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52887:52896 Coq.ZArith.BinInt Z le_trans thm
R52905:52905 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R52887:52896 Coq.ZArith.BinInt Z le_trans thm
R52967:52971 Coq.Init.Logic <> proj1 thm
R52967:52971 Coq.Init.Logic <> proj1 thm
R52986:52998 compcert.lib.IEEE754_extra <> int_round_odd def
R53007:53036 compcert.lib.IEEE754_extra <> integer_representable_n2p_wide thm
R53007:53036 compcert.lib.IEEE754_extra <> integer_representable_n2p_wide thm
R53061:53073 compcert.lib.IEEE754_extra <> int_round_odd def
R53124:53124 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R53102:53115 Coq.ZArith.Zorder <> Zmult_le_reg_r thm
R53124:53124 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R53102:53115 Coq.ZArith.Zorder <> Zmult_le_reg_r thm
R53124:53124 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R53102:53115 Coq.ZArith.Zorder <> Zmult_le_reg_r thm
prf 53193:53209 Float32 of_longu_double_1
binder 53221:53221 <> n:259
R53250:53255 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53266:53268 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53256:53263 compcert.lib.Floats Float32 of_longu def
R53265:53265 compcert.lib.Floats <> n:259 var
R53269:53277 compcert.lib.Floats Float32 of_double def
R53280:53293 compcert.lib.Floats Float of_longu def
R53295:53295 compcert.lib.Floats <> n:259 var
R53242:53245 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R53226:53239 compcert.lib.Integers Int64 unsigned def
R53241:53241 compcert.lib.Floats <> n:259 var
R53247:53247 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R53332:53341 compcert.lib.IEEE754_extra <> Bconv_BofZ thm
R53332:53341 compcert.lib.IEEE754_extra <> Bconv_BofZ thm
R53350:53372 compcert.lib.IEEE754_extra <> integer_representable_n thm
R53350:53372 compcert.lib.IEEE754_extra <> integer_representable_n thm
R53395:53414 compcert.lib.Integers Int64 unsigned_range thm
R53395:53414 compcert.lib.Integers Int64 unsigned_range thm
prf 53441:53457 Float32 of_longu_double_2
binder 53469:53469 <> n:260
R53498:53503 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53514:53516 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53504:53511 compcert.lib.Floats Float32 of_longu def
R53513:53513 compcert.lib.Floats <> n:260 var
R53517:53525 compcert.lib.Floats Float32 of_double def
R53528:53541 compcert.lib.Floats Float of_longu def
R53571:53579 compcert.lib.Integers Int64 and def
R53802:53811 compcert.lib.Integers Int64 repr def
R53582:53589 compcert.lib.Integers Int64 or def
R53642:53650 compcert.lib.Integers Int64 add def
R53744:53753 compcert.lib.Integers Int64 repr def
R53653:53661 compcert.lib.Integers Int64 and def
R53666:53675 compcert.lib.Integers Int64 repr def
R53663:53663 compcert.lib.Floats <> n:260 var
R53591:53591 compcert.lib.Floats <> n:260 var
R53478:53481 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R53475:53475 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R53482:53495 compcert.lib.Integers Int64 unsigned def
R53497:53497 compcert.lib.Floats <> n:260 var
R53856:53875 compcert.lib.Integers Int64 unsigned_range thm
R53856:53875 compcert.lib.Integers Int64 unsigned_range thm
R53890:53897 compcert.lib.Floats Float32 of_longu def
R53909:53925 compcert.lib.Floats Float32 of_long_round_odd thm
R53909:53925 compcert.lib.Floats Float32 of_long_round_odd thm
R53909:53925 compcert.lib.Floats Float32 of_long_round_odd thm
R53909:53925 compcert.lib.Floats Float32 of_long_round_odd thm
R53937:53945 compcert.lib.Floats Float32 of_double def
R53948:53962 compcert.lib.Floats Float to_single def
R53983:54001 compcert.lib.Floats Float to_single_nan def
R54023:54036 compcert.lib.Floats Float of_longu def
R54061:54066 Coq.ZArith.BinInt Z land def
R54069:54073 Coq.ZArith.BinInt Z lor def
R54125:54127 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R54095:54100 Coq.ZArith.BinInt Z land def
R54103:54116 compcert.lib.Integers Int64 unsigned def
R54076:54089 compcert.lib.Integers Int64 unsigned def
R54061:54066 Coq.ZArith.BinInt Z land def
R54069:54073 Coq.ZArith.BinInt Z lor def
R54125:54127 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R54095:54100 Coq.ZArith.BinInt Z land def
R54103:54116 compcert.lib.Integers Int64 unsigned def
R54076:54089 compcert.lib.Integers Int64 unsigned def
R54190:54192 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54155:54167 compcert.lib.IEEE754_extra <> int_round_odd def
R54170:54183 compcert.lib.Integers Int64 unsigned def
R54207:54224 compcert.lib.Floats Float32 int_round_odd_plus thm
R54190:54192 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54155:54167 compcert.lib.IEEE754_extra <> int_round_odd def
R54170:54183 compcert.lib.Integers Int64 unsigned def
R54207:54224 compcert.lib.Floats Float32 int_round_odd_plus thm
R54246:54249 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R54246:54249 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R54289:54301 compcert.lib.IEEE754_extra <> int_round_odd def
R54289:54301 compcert.lib.IEEE754_extra <> int_round_odd def
R54317:54332 compcert.lib.IEEE754_extra <> int_round_odd_le thm
R54317:54332 compcert.lib.IEEE754_extra <> int_round_odd_le thm
R54361:54363 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R54364:54376 compcert.lib.Integers Int64 modulus def
R54361:54363 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R54364:54376 compcert.lib.Integers Int64 modulus def
R54410:54422 compcert.lib.IEEE754_extra <> int_round_odd def
R54438:54440 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R54425:54437 compcert.lib.Integers Int64 modulus def
R54390:54402 Coq.ZArith.BinInt Z le_lt_trans thm
R54410:54422 compcert.lib.IEEE754_extra <> int_round_odd def
R54438:54440 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R54425:54437 compcert.lib.Integers Int64 modulus def
R54390:54402 Coq.ZArith.BinInt Z le_lt_trans thm
R54475:54490 compcert.lib.IEEE754_extra <> int_round_odd_le thm
R54475:54490 compcert.lib.IEEE754_extra <> int_round_odd_le thm
R54575:54592 compcert.lib.Integers Int64 max_unsigned def
R54540:54558 compcert.lib.Integers Int64 unsigned_repr thm
R54540:54558 compcert.lib.Integers Int64 unsigned_repr thm
R54540:54558 compcert.lib.Integers Int64 unsigned_repr thm
R54639:54656 compcert.lib.Integers Int64 testbit_repr thm
R54639:54656 compcert.lib.Integers Int64 testbit_repr thm
R54639:54656 compcert.lib.Integers Int64 testbit_repr thm
R54688:54698 Coq.ZArith.BinInt Z land_spec thm
R54701:54710 Coq.ZArith.BinInt Z lor_spec thm
R54688:54698 Coq.ZArith.BinInt Z land_spec thm
R54688:54698 Coq.ZArith.BinInt Z land_spec thm
R54701:54710 Coq.ZArith.BinInt Z lor_spec thm
R54701:54710 Coq.ZArith.BinInt Z lor_spec thm
R54740:54752 compcert.lib.Integers Int64 testbit def
R54763:54780 compcert.lib.Integers Int64 add_unsigned thm
R54763:54780 compcert.lib.Integers Int64 add_unsigned thm
R54763:54780 compcert.lib.Integers Int64 add_unsigned thm
R54791:54803 compcert.lib.Integers Int64 testbit def
R54806:54815 compcert.lib.Integers Int64 repr def
R54872:54883 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R54826:54839 compcert.lib.Integers Int64 unsigned def
R54842:54850 compcert.lib.Integers Int64 and def
R54855:54864 compcert.lib.Integers Int64 repr def
R54884:54897 compcert.lib.Integers Int64 unsigned def
R54900:54909 compcert.lib.Integers Int64 repr def
R54791:54803 compcert.lib.Integers Int64 testbit def
R54806:54815 compcert.lib.Integers Int64 repr def
R54872:54883 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R54826:54839 compcert.lib.Integers Int64 unsigned def
R54842:54850 compcert.lib.Integers Int64 and def
R54855:54864 compcert.lib.Integers Int64 repr def
R54884:54897 compcert.lib.Integers Int64 unsigned def
R54900:54909 compcert.lib.Integers Int64 repr def
R54933:54950 compcert.lib.Integers Int64 testbit_repr thm
R54933:54950 compcert.lib.Integers Int64 testbit_repr thm
R54933:54950 compcert.lib.Integers Int64 testbit_repr thm
R54986:54994 compcert.lib.Integers Int64 and def
R55015:55033 compcert.lib.Integers Int64 unsigned_repr thm
R55015:55033 compcert.lib.Integers Int64 unsigned_repr thm
R55054:55059 Coq.ZArith.BinInt Z ones def
R55054:55059 Coq.ZArith.BinInt Z ones def
R55054:55059 Coq.ZArith.BinInt Z ones def
R55076:55086 Coq.ZArith.BinInt Z land_ones thm
R55076:55086 Coq.ZArith.BinInt Z land_ones thm
R55076:55086 Coq.ZArith.BinInt Z land_ones thm
R55109:55116 Coq.ZArith.Zdiv <> Z_mod_lt thm
R55139:55139 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R55119:55132 compcert.lib.Integers Int64 unsigned def
R55109:55116 Coq.ZArith.Zdiv <> Z_mod_lt thm
R55139:55139 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R55119:55132 compcert.lib.Integers Int64 unsigned def
R55175:55177 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R55172:55172 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R55178:55195 compcert.lib.Integers Int64 max_unsigned def
R55175:55177 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R55172:55172 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R55178:55195 compcert.lib.Integers Int64 max_unsigned def
R55233:55251 compcert.lib.Integers Int64 same_bits_eqm thm
R55233:55251 compcert.lib.Integers Int64 same_bits_eqm thm
R55305:55305 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R55315:55327 compcert.lib.Integers Int64 modulus def
R55305:55305 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R55315:55327 compcert.lib.Integers Int64 modulus def
prf 55352:55367 Float32 of_long_double_1
binder 55379:55379 <> n:261
R55414:55419 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55429:55431 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55420:55426 compcert.lib.Floats Float32 of_long def
R55428:55428 compcert.lib.Floats <> n:261 var
R55432:55440 compcert.lib.Floats Float32 of_double def
R55443:55455 compcert.lib.Floats Float of_long def
R55457:55457 compcert.lib.Floats <> n:261 var
R55406:55409 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R55384:55388 Coq.ZArith.BinInt Z abs def
R55391:55402 compcert.lib.Integers Int64 signed def
R55404:55404 compcert.lib.Floats <> n:261 var
R55411:55411 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R55494:55503 compcert.lib.IEEE754_extra <> Bconv_BofZ thm
R55494:55503 compcert.lib.IEEE754_extra <> Bconv_BofZ thm
R55512:55534 compcert.lib.IEEE754_extra <> integer_representable_n thm
R55512:55534 compcert.lib.IEEE754_extra <> integer_representable_n thm
prf 55565:55580 Float32 of_long_double_2
binder 55592:55592 <> n:262
R55627:55632 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55642:55644 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55633:55639 compcert.lib.Floats Float32 of_long def
R55641:55641 compcert.lib.Floats <> n:262 var
R55645:55653 compcert.lib.Floats Float32 of_double def
R55656:55668 compcert.lib.Floats Float of_long def
R55698:55706 compcert.lib.Integers Int64 and def
R55929:55938 compcert.lib.Integers Int64 repr def
R55709:55716 compcert.lib.Integers Int64 or def
R55769:55777 compcert.lib.Integers Int64 add def
R55871:55880 compcert.lib.Integers Int64 repr def
R55780:55788 compcert.lib.Integers Int64 and def
R55793:55802 compcert.lib.Integers Int64 repr def
R55790:55790 compcert.lib.Floats <> n:262 var
R55718:55718 compcert.lib.Floats <> n:262 var
R55601:55604 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R55598:55598 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R55605:55609 Coq.ZArith.BinInt Z abs def
R55612:55623 compcert.lib.Integers Int64 signed def
R55625:55625 compcert.lib.Floats <> n:262 var
R55983:56000 compcert.lib.Integers Int64 signed_range thm
R55983:56000 compcert.lib.Integers Int64 signed_range thm
R56015:56021 compcert.lib.Floats Float32 of_long def
R56033:56049 compcert.lib.Floats Float32 of_long_round_odd thm
R56033:56049 compcert.lib.Floats Float32 of_long_round_odd thm
R56033:56049 compcert.lib.Floats Float32 of_long_round_odd thm
R56033:56049 compcert.lib.Floats Float32 of_long_round_odd thm
R56061:56069 compcert.lib.Floats Float32 of_double def
R56072:56086 compcert.lib.Floats Float to_single def
R56107:56125 compcert.lib.Floats Float to_single_nan def
R56147:56159 compcert.lib.Floats Float of_long def
R56184:56189 Coq.ZArith.BinInt Z land def
R56192:56196 Coq.ZArith.BinInt Z lor def
R56244:56246 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56216:56221 Coq.ZArith.BinInt Z land def
R56224:56235 compcert.lib.Integers Int64 signed def
R56199:56210 compcert.lib.Integers Int64 signed def
R56184:56189 Coq.ZArith.BinInt Z land def
R56192:56196 Coq.ZArith.BinInt Z lor def
R56244:56246 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56216:56221 Coq.ZArith.BinInt Z land def
R56224:56235 compcert.lib.Integers Int64 signed def
R56199:56210 compcert.lib.Integers Int64 signed def
R56307:56309 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56274:56286 compcert.lib.IEEE754_extra <> int_round_odd def
R56289:56300 compcert.lib.Integers Int64 signed def
R56324:56341 compcert.lib.Floats Float32 int_round_odd_plus thm
R56307:56309 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56274:56286 compcert.lib.IEEE754_extra <> int_round_odd def
R56289:56300 compcert.lib.Integers Int64 signed def
R56324:56341 compcert.lib.Floats Float32 int_round_odd_plus thm
R56378:56381 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R56362:56377 compcert.lib.Integers Int64 min_signed def
R56378:56381 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R56362:56377 compcert.lib.Integers Int64 min_signed def
R56413:56428 compcert.lib.Integers Int64 min_signed def
R56436:56448 compcert.lib.IEEE754_extra <> int_round_odd def
R56450:56465 compcert.lib.Integers Int64 min_signed def
R56413:56428 compcert.lib.Integers Int64 min_signed def
R56436:56448 compcert.lib.IEEE754_extra <> int_round_odd def
R56450:56465 compcert.lib.Integers Int64 min_signed def
R56479:56494 compcert.lib.IEEE754_extra <> int_round_odd_le thm
R56479:56494 compcert.lib.IEEE754_extra <> int_round_odd_le thm
R56523:56526 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R56527:56542 compcert.lib.Integers Int64 max_signed def
R56523:56526 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R56527:56542 compcert.lib.Integers Int64 max_signed def
R56573:56585 compcert.lib.IEEE754_extra <> int_round_odd def
R56587:56602 compcert.lib.Integers Int64 max_signed def
R56556:56565 Coq.ZArith.BinInt Z le_trans thm
R56573:56585 compcert.lib.IEEE754_extra <> int_round_odd def
R56587:56602 compcert.lib.Integers Int64 max_signed def
R56556:56565 Coq.ZArith.BinInt Z le_trans thm
R56635:56650 compcert.lib.IEEE754_extra <> int_round_odd_le thm
R56635:56650 compcert.lib.IEEE754_extra <> int_round_odd_le thm
R56716:56732 compcert.lib.Integers Int64 signed_repr thm
R56716:56732 compcert.lib.Integers Int64 signed_repr thm
R56716:56732 compcert.lib.Integers Int64 signed_repr thm
R56784:56801 compcert.lib.Integers Int64 testbit_repr thm
R56784:56801 compcert.lib.Integers Int64 testbit_repr thm
R56784:56801 compcert.lib.Integers Int64 testbit_repr thm
R56833:56843 Coq.ZArith.BinInt Z land_spec thm
R56846:56855 Coq.ZArith.BinInt Z lor_spec thm
R56833:56843 Coq.ZArith.BinInt Z land_spec thm
R56833:56843 Coq.ZArith.BinInt Z land_spec thm
R56846:56855 Coq.ZArith.BinInt Z lor_spec thm
R56846:56855 Coq.ZArith.BinInt Z lor_spec thm
R56886:56902 compcert.lib.Integers Int64 bits_signed thm
R56886:56902 compcert.lib.Integers Int64 bits_signed thm
R56886:56902 compcert.lib.Integers Int64 bits_signed thm
R56922:56929 compcert.lib.Coqlib <> zlt_true thm
R56922:56929 compcert.lib.Coqlib <> zlt_true thm
R56922:56929 compcert.lib.Coqlib <> zlt_true thm
R56956:56968 compcert.lib.Integers Int64 testbit def
R56979:56996 compcert.lib.Integers Int64 add_unsigned thm
R56979:56996 compcert.lib.Integers Int64 add_unsigned thm
R56979:56996 compcert.lib.Integers Int64 add_unsigned thm
R57007:57019 compcert.lib.Integers Int64 testbit def
R57022:57031 compcert.lib.Integers Int64 repr def
R57088:57099 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R57042:57055 compcert.lib.Integers Int64 unsigned def
R57058:57066 compcert.lib.Integers Int64 and def
R57071:57080 compcert.lib.Integers Int64 repr def
R57100:57113 compcert.lib.Integers Int64 unsigned def
R57116:57125 compcert.lib.Integers Int64 repr def
R57007:57019 compcert.lib.Integers Int64 testbit def
R57022:57031 compcert.lib.Integers Int64 repr def
R57088:57099 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R57042:57055 compcert.lib.Integers Int64 unsigned def
R57058:57066 compcert.lib.Integers Int64 and def
R57071:57080 compcert.lib.Integers Int64 repr def
R57100:57113 compcert.lib.Integers Int64 unsigned def
R57116:57125 compcert.lib.Integers Int64 repr def
R57149:57166 compcert.lib.Integers Int64 testbit_repr thm
R57149:57166 compcert.lib.Integers Int64 testbit_repr thm
R57149:57166 compcert.lib.Integers Int64 testbit_repr thm
R57202:57210 compcert.lib.Integers Int64 and def
R57223:57236 compcert.lib.Integers Int64 unsigned def
R57239:57248 compcert.lib.Integers Int64 repr def
R57223:57236 compcert.lib.Integers Int64 unsigned def
R57239:57248 compcert.lib.Integers Int64 repr def
R57288:57293 Coq.ZArith.BinInt Z ones def
R57288:57293 Coq.ZArith.BinInt Z ones def
R57288:57293 Coq.ZArith.BinInt Z ones def
R57310:57320 Coq.ZArith.BinInt Z land_ones thm
R57310:57320 Coq.ZArith.BinInt Z land_ones thm
R57310:57320 Coq.ZArith.BinInt Z land_ones thm
R57310:57320 Coq.ZArith.BinInt Z land_ones thm
R57310:57320 Coq.ZArith.BinInt Z land_ones thm
R57342:57360 compcert.lib.Integers Int64 unsigned_repr thm
R57342:57360 compcert.lib.Integers Int64 unsigned_repr thm
R57342:57360 compcert.lib.Integers Int64 unsigned_repr thm
R57342:57360 compcert.lib.Integers Int64 unsigned_repr thm
R57369:57380 compcert.lib.Zbits <> eqmod_mod_eq thm
R57369:57380 compcert.lib.Zbits <> eqmod_mod_eq thm
R57391:57397 Coq.ZArith.BinInt Z lt_gt thm
R57391:57397 Coq.ZArith.BinInt Z lt_gt thm
R57407:57417 Flocq.Core.Zaux <> Zpower_gt_0 thm
R57419:57424 Flocq.Core.Zaux <> radix2 def
R57407:57417 Flocq.Core.Zaux <> Zpower_gt_0 thm
R57419:57424 Flocq.Core.Zaux <> radix2 def
R57464:57464 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R57443:57455 compcert.lib.Zbits <> eqmod_divides thm
R57464:57464 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R57443:57455 compcert.lib.Zbits <> eqmod_divides thm
R57476:57500 compcert.lib.Integers Int64 eqm_signed_unsigned thm
R57476:57500 compcert.lib.Integers Int64 eqm_signed_unsigned thm
R57514:57515 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R57521:57521 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R57518:57518 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R57514:57515 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R57521:57521 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R57518:57518 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R57542:57549 Coq.ZArith.Zdiv <> Z_mod_lt thm
R57572:57572 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R57552:57565 compcert.lib.Integers Int64 unsigned def
R57542:57549 Coq.ZArith.Zdiv <> Z_mod_lt thm
R57572:57572 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R57552:57565 compcert.lib.Integers Int64 unsigned def
R57608:57610 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R57605:57605 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R57611:57628 compcert.lib.Integers Int64 max_unsigned def
R57608:57610 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R57605:57605 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R57611:57628 compcert.lib.Integers Int64 max_unsigned def
R57666:57684 compcert.lib.Integers Int64 same_bits_eqm thm
R57666:57684 compcert.lib.Integers Int64 same_bits_eqm thm
R57740:57742 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R57735:57735 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R57737:57737 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R57743:57758 compcert.lib.Integers Int64 min_signed def
R57740:57742 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R57735:57735 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R57737:57737 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R57743:57758 compcert.lib.Integers Int64 min_signed def
R57807:57809 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R57791:57806 compcert.lib.Integers Int64 max_signed def
R57811:57811 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R57807:57809 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R57791:57806 compcert.lib.Integers Int64 max_signed def
R57811:57811 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R57856:57862 compcert.lib.Floats Float32 <> mod
R57882:57891 compcert.lib.Floats <> zero def
R57893:57904 compcert.lib.Floats <> eq_dec def
R57906:57914 compcert.lib.Floats <> neg def
R57916:57924 compcert.lib.Floats <> abs def
R57926:57940 compcert.lib.Floats <> of_single def
R57942:57956 compcert.lib.Floats <> to_single def
R57960:57971 compcert.lib.Floats <> of_int def
R57973:57985 compcert.lib.Floats <> of_intu def
R57987:57999 compcert.lib.Floats <> of_long def
R58001:58014 compcert.lib.Floats <> of_longu def
R58018:58029 compcert.lib.Floats <> to_int def
R58031:58043 compcert.lib.Floats <> to_intu def
R58045:58057 compcert.lib.Floats <> to_long def
R58059:58072 compcert.lib.Floats <> to_longu def
R58076:58084 compcert.lib.Floats <> add def
R58086:58094 compcert.lib.Floats <> sub def
R58096:58104 compcert.lib.Floats <> mul def
R58106:58114 compcert.lib.Floats <> div def
R58116:58124 compcert.lib.Floats <> cmp def
R58126:58138 compcert.lib.Floats <> ordered def
R58142:58154 compcert.lib.Floats <> to_bits def
R58156:58168 compcert.lib.Floats <> of_bits def
R58170:58185 compcert.lib.Floats <> from_words def
R58205:58216 compcert.lib.Floats <> zero def
R58218:58231 compcert.lib.Floats <> eq_dec def
R58233:58243 compcert.lib.Floats <> neg def
R58245:58255 compcert.lib.Floats <> abs def
R58259:58272 compcert.lib.Floats <> of_int def
R58274:58288 compcert.lib.Floats <> of_intu def
R58290:58304 compcert.lib.Floats <> of_long def
R58306:58321 compcert.lib.Floats <> of_longu def
R58325:58338 compcert.lib.Floats <> to_int def
R58340:58354 compcert.lib.Floats <> to_intu def
R58356:58370 compcert.lib.Floats <> to_long def
R58372:58387 compcert.lib.Floats <> to_longu def
R58391:58401 compcert.lib.Floats <> add def
R58403:58413 compcert.lib.Floats <> sub def
R58415:58425 compcert.lib.Floats <> mul def
R58427:58437 compcert.lib.Floats <> div def
R58439:58449 compcert.lib.Floats <> cmp def
R58451:58465 compcert.lib.Floats <> ordered def
R58469:58483 compcert.lib.Floats <> to_bits def
R58485:58499 compcert.lib.Floats <> of_bits def
