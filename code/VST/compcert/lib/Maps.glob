DIGEST 97681e3818651183e7103702182d6d7c
Fcompcert.lib.Maps
R2123:2133 Coq.Classes.Equivalence <> <> lib
R2135:2142 Coq.Classes.EquivDec <> <> lib
R2160:2165 compcert.lib.Coqlib <> <> lib
modtype 2385:2388 <> TREE
ax 2403:2405 TREE elt
ax 2426:2431 TREE elt_eq
R2447:2449 compcert.lib.Maps TREE elt defax
binder 2442:2442 <> a:2
binder 2444:2444 <> b:3
R2453:2453 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2459:2463 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2470:2470 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2455:2457 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2454:2454 compcert.lib.Maps <> a:2 var
R2458:2458 compcert.lib.Maps <> b:3 var
R2465:2468 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R2464:2464 compcert.lib.Maps <> a:2 var
R2469:2469 compcert.lib.Maps <> b:3 var
ax 2485:2485 TREE t
R2492:2495 Coq.Init.Logic <> ::type_scope:x_'->'_x not
ax 2514:2518 TREE empty
binder 2529:2529 <> A:6
R2539:2539 compcert.lib.Maps TREE t defax
R2541:2541 compcert.lib.Maps <> A:6 var
ax 2556:2558 TREE get
binder 2569:2569 <> A:8
R2582:2585 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2589:2592 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2593:2598 Coq.Init.Datatypes <> option ind
R2600:2600 compcert.lib.Maps <> A:8 var
R2586:2586 compcert.lib.Maps TREE t defax
R2588:2588 compcert.lib.Maps <> A:8 var
R2579:2581 compcert.lib.Maps TREE elt defax
ax 2615:2617 TREE set
binder 2628:2628 <> A:10
R2641:2644 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2646:2649 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2653:2656 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2657:2657 compcert.lib.Maps TREE t defax
R2659:2659 compcert.lib.Maps <> A:10 var
R2650:2650 compcert.lib.Maps TREE t defax
R2652:2652 compcert.lib.Maps <> A:10 var
R2645:2645 compcert.lib.Maps <> A:10 var
R2638:2640 compcert.lib.Maps TREE elt defax
ax 2674:2679 TREE remove
binder 2690:2690 <> A:12
R2703:2706 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2710:2713 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2714:2714 compcert.lib.Maps TREE t defax
R2716:2716 compcert.lib.Maps <> A:12 var
R2707:2707 compcert.lib.Maps TREE t defax
R2709:2709 compcert.lib.Maps <> A:12 var
R2700:2702 compcert.lib.Maps TREE elt defax
ax 2845:2850 TREE gempty
binder 2865:2865 <> A:14
R2878:2880 compcert.lib.Maps TREE elt defax
binder 2875:2875 <> i:15
R2899:2901 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2884:2886 compcert.lib.Maps TREE get defax
R2891:2895 compcert.lib.Maps TREE empty defax
R2897:2897 compcert.lib.Maps <> A:14 var
R2888:2888 compcert.lib.Maps <> i:15 var
R2902:2905 Coq.Init.Datatypes <> None constr
ax 2916:2918 TREE gss
binder 2933:2933 <> A:17
R2946:2948 compcert.lib.Maps TREE elt defax
binder 2943:2943 <> i:18
R2955:2955 compcert.lib.Maps <> A:17 var
binder 2952:2952 <> x:19
R2962:2962 compcert.lib.Maps TREE t defax
R2964:2964 compcert.lib.Maps <> A:17 var
binder 2959:2959 <> m:20
R2985:2987 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2968:2970 compcert.lib.Maps TREE get defax
R2975:2977 compcert.lib.Maps TREE set defax
R2983:2983 compcert.lib.Maps <> m:20 var
R2981:2981 compcert.lib.Maps <> x:19 var
R2979:2979 compcert.lib.Maps <> i:18 var
R2972:2972 compcert.lib.Maps <> i:18 var
R2988:2991 Coq.Init.Datatypes <> Some constr
R2993:2993 compcert.lib.Maps <> x:19 var
ax 3004:3006 TREE gso
binder 3021:3021 <> A:22
R3036:3038 compcert.lib.Maps TREE elt defax
binder 3031:3031 <> i:23
binder 3033:3033 <> j:24
R3045:3045 compcert.lib.Maps <> A:22 var
binder 3042:3042 <> x:25
R3052:3052 compcert.lib.Maps TREE t defax
R3054:3054 compcert.lib.Maps <> A:22 var
binder 3049:3049 <> m:26
R3068:3071 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3089:3091 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3072:3074 compcert.lib.Maps TREE get defax
R3079:3081 compcert.lib.Maps TREE set defax
R3087:3087 compcert.lib.Maps <> m:26 var
R3085:3085 compcert.lib.Maps <> x:25 var
R3083:3083 compcert.lib.Maps <> j:24 var
R3076:3076 compcert.lib.Maps <> i:23 var
R3092:3094 compcert.lib.Maps TREE get defax
R3098:3098 compcert.lib.Maps <> m:26 var
R3096:3096 compcert.lib.Maps <> i:23 var
R3063:3066 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R3062:3062 compcert.lib.Maps <> i:23 var
R3067:3067 compcert.lib.Maps <> j:24 var
ax 3109:3114 TREE gsspec
binder 3129:3129 <> A:28
R3144:3146 compcert.lib.Maps TREE elt defax
binder 3139:3139 <> i:29
binder 3141:3141 <> j:30
R3153:3153 compcert.lib.Maps <> A:28 var
binder 3150:3150 <> x:31
R3160:3160 compcert.lib.Maps TREE t defax
R3162:3162 compcert.lib.Maps <> A:28 var
binder 3157:3157 <> m:32
R3187:3189 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3170:3172 compcert.lib.Maps TREE get defax
R3177:3179 compcert.lib.Maps TREE set defax
R3185:3185 compcert.lib.Maps <> m:32 var
R3183:3183 compcert.lib.Maps <> x:31 var
R3181:3181 compcert.lib.Maps <> j:30 var
R3174:3174 compcert.lib.Maps <> i:29 var
R3193:3198 compcert.lib.Maps TREE elt_eq defax
R3202:3202 compcert.lib.Maps <> j:30 var
R3200:3200 compcert.lib.Maps <> i:29 var
R3221:3223 compcert.lib.Maps TREE get defax
R3227:3227 compcert.lib.Maps <> m:32 var
R3225:3225 compcert.lib.Maps <> i:29 var
R3209:3212 Coq.Init.Datatypes <> Some constr
R3214:3214 compcert.lib.Maps <> x:31 var
ax 3533:3535 TREE grs
binder 3550:3550 <> A:34
R3563:3565 compcert.lib.Maps TREE elt defax
binder 3560:3560 <> i:35
R3572:3572 compcert.lib.Maps TREE t defax
R3574:3574 compcert.lib.Maps <> A:34 var
binder 3569:3569 <> m:36
R3596:3598 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3578:3580 compcert.lib.Maps TREE get defax
R3585:3590 compcert.lib.Maps TREE remove defax
R3594:3594 compcert.lib.Maps <> m:36 var
R3592:3592 compcert.lib.Maps <> i:35 var
R3582:3582 compcert.lib.Maps <> i:35 var
R3599:3602 Coq.Init.Datatypes <> None constr
ax 3613:3615 TREE gro
binder 3630:3630 <> A:38
R3645:3647 compcert.lib.Maps TREE elt defax
binder 3640:3640 <> i:39
binder 3642:3642 <> j:40
R3654:3654 compcert.lib.Maps TREE t defax
R3656:3656 compcert.lib.Maps <> A:38 var
binder 3651:3651 <> m:41
R3670:3673 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3692:3694 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3674:3676 compcert.lib.Maps TREE get defax
R3681:3686 compcert.lib.Maps TREE remove defax
R3690:3690 compcert.lib.Maps <> m:41 var
R3688:3688 compcert.lib.Maps <> j:40 var
R3678:3678 compcert.lib.Maps <> i:39 var
R3695:3697 compcert.lib.Maps TREE get defax
R3701:3701 compcert.lib.Maps <> m:41 var
R3699:3699 compcert.lib.Maps <> i:39 var
R3665:3668 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R3664:3664 compcert.lib.Maps <> i:39 var
R3669:3669 compcert.lib.Maps <> j:40 var
ax 3712:3717 TREE grspec
binder 3732:3732 <> A:43
R3747:3749 compcert.lib.Maps TREE elt defax
binder 3742:3742 <> i:44
binder 3744:3744 <> j:45
R3756:3756 compcert.lib.Maps TREE t defax
R3758:3758 compcert.lib.Maps <> A:43 var
binder 3753:3753 <> m:46
R3784:3786 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3766:3768 compcert.lib.Maps TREE get defax
R3773:3778 compcert.lib.Maps TREE remove defax
R3782:3782 compcert.lib.Maps <> m:46 var
R3780:3780 compcert.lib.Maps <> j:45 var
R3770:3770 compcert.lib.Maps <> i:44 var
R3790:3795 compcert.lib.Maps TREE elt_eq defax
R3799:3799 compcert.lib.Maps <> j:45 var
R3797:3797 compcert.lib.Maps <> i:44 var
R3816:3818 compcert.lib.Maps TREE get defax
R3822:3822 compcert.lib.Maps <> m:46 var
R3820:3820 compcert.lib.Maps <> i:44 var
R3806:3809 Coq.Init.Datatypes <> None constr
ax 3883:3885 TREE beq
binder 3896:3896 <> A:48
R3906:3906 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3921:3925 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3929:3932 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3936:3939 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3940:3943 Coq.Init.Datatypes <> bool ind
R3933:3933 compcert.lib.Maps TREE t defax
R3935:3935 compcert.lib.Maps <> A:48 var
R3926:3926 compcert.lib.Maps TREE t defax
R3928:3928 compcert.lib.Maps <> A:48 var
R3908:3911 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3913:3916 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3917:3920 Coq.Init.Datatypes <> bool ind
R3912:3912 compcert.lib.Maps <> A:48 var
R3907:3907 compcert.lib.Maps <> A:48 var
ax 3954:3964 TREE beq_correct
binder 3979:3979 <> A:50
R3995:3998 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4000:4003 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4004:4007 Coq.Init.Datatypes <> bool ind
R3999:3999 compcert.lib.Maps <> A:50 var
R3994:3994 compcert.lib.Maps <> A:50 var
binder 3989:3991 <> eqA:51
R4018:4018 compcert.lib.Maps TREE t defax
R4020:4020 compcert.lib.Maps <> A:50 var
binder 4011:4012 <> t1:52
binder 4014:4015 <> t2:53
R4048:4057 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R4208:4208 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R4041:4043 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4028:4030 compcert.lib.Maps TREE beq defax
R4039:4040 compcert.lib.Maps <> t2:53 var
R4036:4037 compcert.lib.Maps <> t1:52 var
R4032:4034 compcert.lib.Maps <> eqA:51 var
R4044:4047 Coq.Init.Datatypes <> true constr
R4069:4071 compcert.lib.Maps TREE elt defax
binder 4066:4066 <> x:54
R4096:4098 compcert.lib.Maps TREE get defax
R4102:4103 compcert.lib.Maps <> t2:53 var
R4100:4100 compcert.lib.Maps <> x:54 var
R4086:4088 compcert.lib.Maps TREE get defax
R4092:4093 compcert.lib.Maps <> t1:52 var
R4090:4090 compcert.lib.Maps <> x:54 var
R4117:4120 Coq.Init.Datatypes <> None constr
R4123:4126 Coq.Init.Datatypes <> None constr
R4131:4134 Coq.Init.Logic <> True ind
R4143:4146 Coq.Init.Datatypes <> Some constr
R4152:4155 Coq.Init.Datatypes <> Some constr
R4172:4174 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4163:4165 compcert.lib.Maps <> eqA:51 var
R4175:4178 Coq.Init.Datatypes <> true constr
R4195:4199 Coq.Init.Logic <> False ind
ax 4276:4278 TREE map
binder 4293:4293 <> A:56
binder 4295:4295 <> B:57
R4305:4305 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4319:4323 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4327:4330 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4331:4331 compcert.lib.Maps TREE t defax
R4333:4333 compcert.lib.Maps <> B:57 var
R4324:4324 compcert.lib.Maps TREE t defax
R4326:4326 compcert.lib.Maps <> A:56 var
R4309:4312 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4314:4317 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4318:4318 compcert.lib.Maps <> B:57 var
R4313:4313 compcert.lib.Maps <> A:56 var
R4306:4308 compcert.lib.Maps TREE elt defax
ax 4344:4347 TREE gmap
binder 4362:4362 <> A:59
binder 4364:4364 <> B:60
R4380:4383 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4385:4388 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4389:4389 compcert.lib.Maps <> B:60 var
R4384:4384 compcert.lib.Maps <> A:59 var
R4377:4379 compcert.lib.Maps TREE elt defax
binder 4374:4374 <> f:61
R4396:4398 compcert.lib.Maps TREE elt defax
binder 4393:4393 <> i:62
R4405:4405 compcert.lib.Maps TREE t defax
R4407:4407 compcert.lib.Maps <> A:59 var
binder 4402:4402 <> m:63
R4430:4432 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4415:4417 compcert.lib.Maps TREE get defax
R4422:4424 compcert.lib.Maps TREE map defax
R4428:4428 compcert.lib.Maps <> m:63 var
R4426:4426 compcert.lib.Maps <> f:61 var
R4419:4419 compcert.lib.Maps <> i:62 var
R4433:4442 compcert.lib.Coqlib <> option_map def
R4451:4453 compcert.lib.Maps TREE get defax
R4457:4457 compcert.lib.Maps <> m:63 var
R4455:4455 compcert.lib.Maps <> i:62 var
R4445:4445 compcert.lib.Maps <> f:61 var
R4447:4447 compcert.lib.Maps <> i:62 var
ax 4552:4555 TREE map1
binder 4570:4570 <> A:65
binder 4572:4572 <> B:66
R4582:4582 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4589:4593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4597:4600 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4601:4601 compcert.lib.Maps TREE t defax
R4603:4603 compcert.lib.Maps <> B:66 var
R4594:4594 compcert.lib.Maps TREE t defax
R4596:4596 compcert.lib.Maps <> A:65 var
R4584:4587 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4588:4588 compcert.lib.Maps <> B:66 var
R4583:4583 compcert.lib.Maps <> A:65 var
ax 4614:4618 TREE gmap1
binder 4633:4633 <> A:68
binder 4635:4635 <> B:69
R4649:4652 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4653:4653 compcert.lib.Maps <> B:69 var
R4648:4648 compcert.lib.Maps <> A:68 var
binder 4645:4645 <> f:70
R4660:4662 compcert.lib.Maps TREE elt defax
binder 4657:4657 <> i:71
R4669:4669 compcert.lib.Maps TREE t defax
R4671:4671 compcert.lib.Maps <> A:68 var
binder 4666:4666 <> m:72
R4695:4697 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4679:4681 compcert.lib.Maps TREE get defax
R4686:4689 compcert.lib.Maps TREE map1 defax
R4693:4693 compcert.lib.Maps <> m:72 var
R4691:4691 compcert.lib.Maps <> f:70 var
R4683:4683 compcert.lib.Maps <> i:71 var
R4698:4707 compcert.lib.Coqlib <> option_map def
R4712:4714 compcert.lib.Maps TREE get defax
R4718:4718 compcert.lib.Maps <> m:72 var
R4716:4716 compcert.lib.Maps <> i:71 var
R4709:4709 compcert.lib.Maps <> f:70 var
ax 4799:4805 TREE combine
binder 4820:4820 <> A:74
binder 4822:4822 <> B:75
binder 4824:4824 <> C:76
R4834:4834 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4867:4871 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4875:4878 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4882:4885 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4886:4886 compcert.lib.Maps TREE t defax
R4888:4888 compcert.lib.Maps <> C:76 var
R4879:4879 compcert.lib.Maps TREE t defax
R4881:4881 compcert.lib.Maps <> B:75 var
R4872:4872 compcert.lib.Maps TREE t defax
R4874:4874 compcert.lib.Maps <> A:74 var
R4843:4846 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4855:4858 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4859:4864 Coq.Init.Datatypes <> option ind
R4866:4866 compcert.lib.Maps <> C:76 var
R4847:4852 Coq.Init.Datatypes <> option ind
R4854:4854 compcert.lib.Maps <> B:75 var
R4835:4840 Coq.Init.Datatypes <> option ind
R4842:4842 compcert.lib.Maps <> A:74 var
ax 4899:4906 TREE gcombine
binder 4921:4921 <> A:78
binder 4923:4923 <> B:79
binder 4925:4925 <> C:80
R4946:4949 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4958:4961 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4962:4967 Coq.Init.Datatypes <> option ind
R4969:4969 compcert.lib.Maps <> C:80 var
R4950:4955 Coq.Init.Datatypes <> option ind
R4957:4957 compcert.lib.Maps <> B:79 var
R4938:4943 Coq.Init.Datatypes <> option ind
R4945:4945 compcert.lib.Maps <> A:78 var
binder 4935:4935 <> f:81
R4995:5002 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5015:5015 compcert.lib.Maps TREE t defax
R5017:5017 compcert.lib.Maps <> A:78 var
binder 5011:5012 <> m1:82
R5025:5025 compcert.lib.Maps TREE t defax
R5027:5027 compcert.lib.Maps <> B:79 var
binder 5021:5022 <> m2:83
R5034:5036 compcert.lib.Maps TREE elt defax
binder 5031:5031 <> i:84
R5067:5069 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5044:5046 compcert.lib.Maps TREE get defax
R5051:5057 compcert.lib.Maps TREE combine defax
R5064:5065 compcert.lib.Maps <> m2:83 var
R5061:5062 compcert.lib.Maps <> m1:82 var
R5059:5059 compcert.lib.Maps <> f:81 var
R5048:5048 compcert.lib.Maps <> i:84 var
R5070:5070 compcert.lib.Maps <> f:81 var
R5084:5086 compcert.lib.Maps TREE get defax
R5090:5091 compcert.lib.Maps <> m2:83 var
R5088:5088 compcert.lib.Maps <> i:84 var
R5073:5075 compcert.lib.Maps TREE get defax
R5079:5080 compcert.lib.Maps <> m1:82 var
R5077:5077 compcert.lib.Maps <> i:84 var
R4988:4990 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4977:4977 compcert.lib.Maps <> f:81 var
R4984:4987 Coq.Init.Datatypes <> None constr
R4979:4982 Coq.Init.Datatypes <> None constr
R4991:4994 Coq.Init.Datatypes <> None constr
ax 5153:5160 TREE elements
binder 5175:5175 <> A:86
R5188:5191 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5192:5195 Coq.Init.Datatypes <> list ind
R5201:5203 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R5198:5200 compcert.lib.Maps TREE elt defax
R5204:5204 compcert.lib.Maps <> A:86 var
R5185:5185 compcert.lib.Maps TREE t defax
R5187:5187 compcert.lib.Maps <> A:86 var
ax 5216:5231 TREE elements_correct
binder 5246:5246 <> A:88
R5259:5259 compcert.lib.Maps TREE t defax
R5261:5261 compcert.lib.Maps <> A:88 var
binder 5256:5256 <> m:89
R5268:5270 compcert.lib.Maps TREE elt defax
binder 5265:5265 <> i:90
R5277:5277 compcert.lib.Maps <> A:88 var
binder 5274:5274 <> v:91
R5301:5304 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5305:5306 Coq.Lists.List <> In def
R5316:5323 compcert.lib.Maps TREE elements defax
R5325:5325 compcert.lib.Maps <> m:89 var
R5308:5308 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5310:5311 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5313:5313 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5309:5309 compcert.lib.Maps <> i:90 var
R5312:5312 compcert.lib.Maps <> v:91 var
R5292:5294 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5285:5287 compcert.lib.Maps TREE get defax
R5291:5291 compcert.lib.Maps <> m:89 var
R5289:5289 compcert.lib.Maps <> i:90 var
R5295:5298 Coq.Init.Datatypes <> Some constr
R5300:5300 compcert.lib.Maps <> v:91 var
ax 5337:5353 TREE elements_complete
binder 5368:5368 <> A:93
R5381:5381 compcert.lib.Maps TREE t defax
R5383:5383 compcert.lib.Maps <> A:93 var
binder 5378:5378 <> m:94
R5390:5392 compcert.lib.Maps TREE elt defax
binder 5387:5387 <> i:95
R5399:5399 compcert.lib.Maps <> A:93 var
binder 5396:5396 <> v:96
R5429:5432 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5440:5442 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5433:5435 compcert.lib.Maps TREE get defax
R5439:5439 compcert.lib.Maps <> m:94 var
R5437:5437 compcert.lib.Maps <> i:95 var
R5443:5446 Coq.Init.Datatypes <> Some constr
R5448:5448 compcert.lib.Maps <> v:96 var
R5407:5408 Coq.Lists.List <> In def
R5418:5425 compcert.lib.Maps TREE elements defax
R5427:5427 compcert.lib.Maps <> m:94 var
R5410:5410 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5412:5413 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5415:5415 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5411:5411 compcert.lib.Maps <> i:95 var
R5414:5414 compcert.lib.Maps <> v:96 var
ax 5459:5479 TREE elements_keys_norepet
binder 5494:5494 <> A:98
R5507:5507 compcert.lib.Maps TREE t defax
R5509:5509 compcert.lib.Maps <> A:98 var
binder 5504:5504 <> m:99
R5517:5528 compcert.lib.Coqlib <> list_norepet ind
R5531:5538 Coq.Lists.List <> map def
R5554:5561 compcert.lib.Maps TREE elements defax
R5563:5563 compcert.lib.Maps <> m:99 var
R5542:5544 Coq.Init.Datatypes <> fst def
R5550:5550 compcert.lib.Maps <> A:98 var
R5546:5548 compcert.lib.Maps TREE elt defax
ax 5576:5595 TREE elements_extensional
binder 5610:5610 <> A:101
R5625:5625 compcert.lib.Maps TREE t defax
R5627:5627 compcert.lib.Maps <> A:101 var
binder 5620:5620 <> m:102
binder 5622:5622 <> n:103
R5635:5635 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5663:5671 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5682:5684 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5672:5679 compcert.lib.Maps TREE elements defax
R5681:5681 compcert.lib.Maps <> m:102 var
R5685:5692 compcert.lib.Maps TREE elements defax
R5694:5694 compcert.lib.Maps <> n:103 var
binder 5643:5643 <> i:104
R5653:5655 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5646:5648 compcert.lib.Maps TREE get defax
R5652:5652 compcert.lib.Maps <> m:102 var
R5650:5650 compcert.lib.Maps <> i:104 var
R5656:5658 compcert.lib.Maps TREE get defax
R5662:5662 compcert.lib.Maps <> n:103 var
R5660:5660 compcert.lib.Maps <> i:104 var
ax 5705:5719 TREE elements_remove
binder 5734:5734 <> A:106
binder 5743:5743 <> i:107
binder 5745:5745 <> v:108
R5751:5751 compcert.lib.Maps TREE t defax
R5753:5753 compcert.lib.Maps <> A:106 var
binder 5748:5748 <> m:109
R5777:5784 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5785:5791 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5797:5798 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 5792:5793 <> l1:110
binder 5795:5796 <> l2:111
R5829:5832 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5809:5811 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5799:5806 compcert.lib.Maps TREE elements defax
R5808:5808 compcert.lib.Maps <> m:109 var
R5814:5817 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5812:5813 compcert.lib.Maps <> l1:110 var
R5823:5826 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5818:5818 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5820:5820 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5822:5822 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5819:5819 compcert.lib.Maps <> i:107 var
R5821:5821 compcert.lib.Maps <> v:108 var
R5827:5828 compcert.lib.Maps <> l2:111 var
R5854:5856 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5833:5840 compcert.lib.Maps TREE elements defax
R5843:5848 compcert.lib.Maps TREE remove defax
R5852:5852 compcert.lib.Maps <> m:109 var
R5850:5850 compcert.lib.Maps <> i:107 var
R5859:5862 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5857:5858 compcert.lib.Maps <> l1:110 var
R5863:5864 compcert.lib.Maps <> l2:111 var
R5768:5770 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5761:5763 compcert.lib.Maps TREE get defax
R5767:5767 compcert.lib.Maps <> m:109 var
R5765:5765 compcert.lib.Maps <> i:107 var
R5771:5774 Coq.Init.Datatypes <> Some constr
R5776:5776 compcert.lib.Maps <> v:108 var
ax 5937:5940 TREE fold
binder 5955:5955 <> A:113
binder 5957:5957 <> B:114
R5967:5967 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5986:5990 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5994:5997 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5999:6002 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6003:6003 compcert.lib.Maps <> B:114 var
R5998:5998 compcert.lib.Maps <> B:114 var
R5991:5991 compcert.lib.Maps TREE t defax
R5993:5993 compcert.lib.Maps <> A:113 var
R5969:5972 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5976:5979 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5981:5984 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5985:5985 compcert.lib.Maps <> B:114 var
R5980:5980 compcert.lib.Maps <> A:113 var
R5973:5975 compcert.lib.Maps TREE elt defax
R5968:5968 compcert.lib.Maps <> B:114 var
ax 6014:6022 TREE fold_spec
binder 6037:6037 <> A:116
binder 6039:6039 <> B:117
R6053:6056 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6060:6063 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6065:6068 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6069:6069 compcert.lib.Maps <> B:117 var
R6064:6064 compcert.lib.Maps <> A:116 var
R6057:6059 compcert.lib.Maps TREE elt defax
R6052:6052 compcert.lib.Maps <> B:117 var
binder 6049:6049 <> f:118
R6076:6076 compcert.lib.Maps <> B:117 var
binder 6073:6073 <> v:119
R6083:6083 compcert.lib.Maps TREE t defax
R6085:6085 compcert.lib.Maps <> A:116 var
binder 6080:6080 <> m:120
R6103:6109 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6093:6096 compcert.lib.Maps TREE fold defax
R6102:6102 compcert.lib.Maps <> v:119 var
R6100:6100 compcert.lib.Maps <> m:120 var
R6098:6098 compcert.lib.Maps <> f:118 var
R6110:6123 Coq.Lists.List <> fold_left def
R6171:6171 compcert.lib.Maps <> v:119 var
R6159:6166 compcert.lib.Maps TREE elements defax
R6168:6168 compcert.lib.Maps <> m:120 var
binder 6130:6130 <> a:121
binder 6132:6132 <> p:122
R6137:6137 compcert.lib.Maps <> f:118 var
R6150:6152 Coq.Init.Datatypes <> snd def
R6154:6154 compcert.lib.Maps <> p:122 var
R6142:6144 Coq.Init.Datatypes <> fst def
R6146:6146 compcert.lib.Maps <> p:122 var
R6139:6139 compcert.lib.Maps <> a:121 var
ax 6265:6269 TREE fold1
binder 6284:6284 <> A:124
binder 6286:6286 <> B:125
R6296:6296 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6308:6312 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6316:6319 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6321:6324 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6325:6325 compcert.lib.Maps <> B:125 var
R6320:6320 compcert.lib.Maps <> B:125 var
R6313:6313 compcert.lib.Maps TREE t defax
R6315:6315 compcert.lib.Maps <> A:124 var
R6298:6301 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6303:6306 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6307:6307 compcert.lib.Maps <> B:125 var
R6302:6302 compcert.lib.Maps <> A:124 var
R6297:6297 compcert.lib.Maps <> B:125 var
ax 6336:6345 TREE fold1_spec
binder 6360:6360 <> A:127
binder 6362:6362 <> B:128
R6376:6379 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6381:6384 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6385:6385 compcert.lib.Maps <> B:128 var
R6380:6380 compcert.lib.Maps <> A:127 var
R6375:6375 compcert.lib.Maps <> B:128 var
binder 6372:6372 <> f:129
R6392:6392 compcert.lib.Maps <> B:128 var
binder 6389:6389 <> v:130
R6399:6399 compcert.lib.Maps TREE t defax
R6401:6401 compcert.lib.Maps <> A:127 var
binder 6396:6396 <> m:131
R6420:6426 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6409:6413 compcert.lib.Maps TREE fold1 defax
R6419:6419 compcert.lib.Maps <> v:130 var
R6417:6417 compcert.lib.Maps <> m:131 var
R6415:6415 compcert.lib.Maps <> f:129 var
R6427:6440 Coq.Lists.List <> fold_left def
R6480:6480 compcert.lib.Maps <> v:130 var
R6468:6475 compcert.lib.Maps TREE elements defax
R6477:6477 compcert.lib.Maps <> m:131 var
binder 6447:6447 <> a:132
binder 6449:6449 <> p:133
R6454:6454 compcert.lib.Maps <> f:129 var
R6459:6461 Coq.Init.Datatypes <> snd def
R6463:6463 compcert.lib.Maps <> p:133 var
R6456:6456 compcert.lib.Maps <> a:132 var
R6487:6490 compcert.lib.Maps TREE <> modtype
modtype 6548:6550 <> MAP
ax 6565:6567 MAP elt
ax 6588:6593 MAP elt_eq
R6609:6611 compcert.lib.Maps MAP elt defax
binder 6604:6604 <> a:136
binder 6606:6606 <> b:137
R6615:6615 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6621:6625 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6632:6632 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6617:6619 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6616:6616 compcert.lib.Maps <> a:136 var
R6620:6620 compcert.lib.Maps <> b:137 var
R6627:6630 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R6626:6626 compcert.lib.Maps <> a:136 var
R6631:6631 compcert.lib.Maps <> b:137 var
ax 6647:6647 MAP t
R6654:6657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
ax 6676:6679 MAP init
binder 6690:6690 <> A:140
R6701:6704 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6705:6705 compcert.lib.Maps MAP t defax
R6707:6707 compcert.lib.Maps <> A:140 var
R6700:6700 compcert.lib.Maps <> A:140 var
ax 6722:6724 MAP get
binder 6735:6735 <> A:142
R6748:6751 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6755:6758 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6759:6759 compcert.lib.Maps <> A:142 var
R6752:6752 compcert.lib.Maps MAP t defax
R6754:6754 compcert.lib.Maps <> A:142 var
R6745:6747 compcert.lib.Maps MAP elt defax
ax 6774:6776 MAP set
binder 6787:6787 <> A:144
R6800:6803 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6805:6808 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6812:6815 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6816:6816 compcert.lib.Maps MAP t defax
R6818:6818 compcert.lib.Maps <> A:144 var
R6809:6809 compcert.lib.Maps MAP t defax
R6811:6811 compcert.lib.Maps <> A:144 var
R6804:6804 compcert.lib.Maps <> A:144 var
R6797:6799 compcert.lib.Maps MAP elt defax
ax 6829:6830 MAP gi
binder 6845:6845 <> A:146
R6858:6860 compcert.lib.Maps MAP elt defax
binder 6855:6855 <> i:147
R6867:6867 compcert.lib.Maps <> A:146 var
binder 6864:6864 <> x:148
R6885:6887 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6871:6873 compcert.lib.Maps MAP get defax
R6878:6881 compcert.lib.Maps MAP init defax
R6883:6883 compcert.lib.Maps <> x:148 var
R6875:6875 compcert.lib.Maps <> i:147 var
R6888:6888 compcert.lib.Maps <> x:148 var
ax 6899:6901 MAP gss
binder 6916:6916 <> A:150
R6929:6931 compcert.lib.Maps MAP elt defax
binder 6926:6926 <> i:151
R6938:6938 compcert.lib.Maps <> A:150 var
binder 6935:6935 <> x:152
R6945:6945 compcert.lib.Maps MAP t defax
R6947:6947 compcert.lib.Maps <> A:150 var
binder 6942:6942 <> m:153
R6968:6970 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6951:6953 compcert.lib.Maps MAP get defax
R6958:6960 compcert.lib.Maps MAP set defax
R6966:6966 compcert.lib.Maps <> m:153 var
R6964:6964 compcert.lib.Maps <> x:152 var
R6962:6962 compcert.lib.Maps <> i:151 var
R6955:6955 compcert.lib.Maps <> i:151 var
R6971:6971 compcert.lib.Maps <> x:152 var
ax 6982:6984 MAP gso
binder 6999:6999 <> A:155
R7014:7016 compcert.lib.Maps MAP elt defax
binder 7009:7009 <> i:156
binder 7011:7011 <> j:157
R7023:7023 compcert.lib.Maps <> A:155 var
binder 7020:7020 <> x:158
R7030:7030 compcert.lib.Maps MAP t defax
R7032:7032 compcert.lib.Maps <> A:155 var
binder 7027:7027 <> m:159
R7046:7049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7067:7069 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7050:7052 compcert.lib.Maps MAP get defax
R7057:7059 compcert.lib.Maps MAP set defax
R7065:7065 compcert.lib.Maps <> m:159 var
R7063:7063 compcert.lib.Maps <> x:158 var
R7061:7061 compcert.lib.Maps <> j:157 var
R7054:7054 compcert.lib.Maps <> i:156 var
R7070:7072 compcert.lib.Maps MAP get defax
R7076:7076 compcert.lib.Maps <> m:159 var
R7074:7074 compcert.lib.Maps <> i:156 var
R7041:7044 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R7040:7040 compcert.lib.Maps <> i:156 var
R7045:7045 compcert.lib.Maps <> j:157 var
ax 7087:7092 MAP gsspec
binder 7107:7107 <> A:161
R7122:7124 compcert.lib.Maps MAP elt defax
binder 7117:7117 <> i:162
binder 7119:7119 <> j:163
R7131:7131 compcert.lib.Maps <> A:161 var
binder 7128:7128 <> x:164
R7138:7138 compcert.lib.Maps MAP t defax
R7140:7140 compcert.lib.Maps <> A:161 var
binder 7135:7135 <> m:165
R7165:7167 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7148:7150 compcert.lib.Maps MAP get defax
R7155:7157 compcert.lib.Maps MAP set defax
R7163:7163 compcert.lib.Maps <> m:165 var
R7161:7161 compcert.lib.Maps <> x:164 var
R7159:7159 compcert.lib.Maps <> j:163 var
R7152:7152 compcert.lib.Maps <> i:162 var
R7171:7176 compcert.lib.Maps MAP elt_eq defax
R7180:7180 compcert.lib.Maps <> j:163 var
R7178:7178 compcert.lib.Maps <> i:162 var
R7194:7196 compcert.lib.Maps MAP get defax
R7200:7200 compcert.lib.Maps <> m:165 var
R7198:7198 compcert.lib.Maps <> i:162 var
R7187:7187 compcert.lib.Maps <> x:164 var
ax 7211:7217 MAP gsident
binder 7232:7232 <> A:167
R7247:7249 compcert.lib.Maps MAP elt defax
binder 7242:7242 <> i:168
binder 7244:7244 <> j:169
R7256:7256 compcert.lib.Maps MAP t defax
R7258:7258 compcert.lib.Maps <> A:167 var
binder 7253:7253 <> m:170
R7287:7289 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7262:7264 compcert.lib.Maps MAP get defax
R7269:7271 compcert.lib.Maps MAP set defax
R7285:7285 compcert.lib.Maps <> m:170 var
R7276:7278 compcert.lib.Maps MAP get defax
R7282:7282 compcert.lib.Maps <> m:170 var
R7280:7280 compcert.lib.Maps <> i:168 var
R7273:7273 compcert.lib.Maps <> i:168 var
R7266:7266 compcert.lib.Maps <> j:169 var
R7290:7292 compcert.lib.Maps MAP get defax
R7296:7296 compcert.lib.Maps <> m:170 var
R7294:7294 compcert.lib.Maps <> j:169 var
ax 7311:7313 MAP map
binder 7324:7324 <> A:172
binder 7326:7326 <> B:173
R7336:7336 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7343:7347 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7351:7354 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7355:7355 compcert.lib.Maps MAP t defax
R7357:7357 compcert.lib.Maps <> B:173 var
R7348:7348 compcert.lib.Maps MAP t defax
R7350:7350 compcert.lib.Maps <> A:172 var
R7338:7341 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7342:7342 compcert.lib.Maps <> B:173 var
R7337:7337 compcert.lib.Maps <> A:172 var
ax 7368:7371 MAP gmap
binder 7386:7386 <> A:175
binder 7388:7388 <> B:176
R7402:7405 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7406:7406 compcert.lib.Maps <> B:176 var
R7401:7401 compcert.lib.Maps <> A:175 var
binder 7398:7398 <> f:177
R7413:7415 compcert.lib.Maps MAP elt defax
binder 7410:7410 <> i:178
R7422:7422 compcert.lib.Maps MAP t defax
R7424:7424 compcert.lib.Maps <> A:175 var
binder 7419:7419 <> m:179
R7447:7449 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7432:7434 compcert.lib.Maps MAP get defax
R7439:7441 compcert.lib.Maps MAP map defax
R7445:7445 compcert.lib.Maps <> m:179 var
R7443:7443 compcert.lib.Maps <> f:177 var
R7436:7436 compcert.lib.Maps <> i:178 var
R7450:7450 compcert.lib.Maps <> f:177 var
R7452:7454 compcert.lib.Maps MAP get defax
R7458:7458 compcert.lib.Maps <> m:179 var
R7456:7456 compcert.lib.Maps <> i:178 var
R7466:7468 compcert.lib.Maps MAP <> modtype
R7546:7549 compcert.lib.Maps TREE <> mod
mod 7537:7541 <> PTree
def 7565:7567 PTree elt
R7572:7579 Coq.Numbers.BinNums <> positive ind
def 7595:7600 PTree elt_eq
R7605:7607 compcert.lib.Coqlib <> peq def
ind 7623:7626 PTree tree
constr 7655:7658 PTree Leaf
constr 7675:7678 PTree Node
binder 7629:7629 <> A:181
R7662:7665 compcert.lib.Maps <> tree:182 ind
R7667:7667 compcert.lib.Maps <> A:181 var
R7688:7691 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7700:7703 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7710:7713 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7714:7717 compcert.lib.Maps <> tree:182 ind
R7719:7719 compcert.lib.Maps <> A:181 var
R7704:7707 compcert.lib.Maps <> tree:182 ind
R7709:7709 compcert.lib.Maps <> A:181 var
R7692:7697 Coq.Init.Datatypes <> option ind
R7699:7699 compcert.lib.Maps <> A:181 var
R7682:7685 compcert.lib.Maps <> tree:182 ind
R7687:7687 compcert.lib.Maps <> A:181 var
R7735:7738 compcert.lib.Maps PTree Leaf constr
R7735:7738 compcert.lib.Maps PTree Leaf constr
R7757:7760 compcert.lib.Maps PTree Node constr
R7757:7760 compcert.lib.Maps PTree Node constr
def 7776:7783 PTree tree_ind
R7802:7805 compcert.lib.Maps PTree tree ind
def 7832:7832 PTree t
R7837:7840 compcert.lib.Maps PTree tree ind
def 7857:7861 PTree empty
binder 7864:7864 <> A:184
R7885:7885 compcert.lib.Maps PTree t def
R7887:7887 compcert.lib.Maps <> A:184 var
R7878:7881 compcert.lib.Maps PTree Leaf constr
def 7903:7905 PTree get
binder 7908:7908 <> A:185
R7923:7930 Coq.Numbers.BinNums <> positive ind
binder 7919:7919 <> i:186
R7938:7938 compcert.lib.Maps PTree t def
R7940:7940 compcert.lib.Maps <> A:185 var
binder 7934:7934 <> m:187
R7956:7961 Coq.Init.Datatypes <> option ind
R7963:7963 compcert.lib.Maps <> A:185 var
R7978:7978 compcert.lib.Maps <> m:187 var
R7991:7994 compcert.lib.Maps PTree Leaf constr
R7999:8002 Coq.Init.Datatypes <> None constr
R8010:8013 compcert.lib.Maps PTree Node constr
R8038:8038 compcert.lib.Maps <> i:186 var
R8055:8056 Coq.Numbers.BinNums <> xH constr
R8073:8074 Coq.Numbers.BinNums <> xO constr
R8082:8084 compcert.lib.Maps <> get:188 def
R8101:8102 Coq.Numbers.BinNums <> xI constr
R8110:8112 compcert.lib.Maps <> get:188 def
def 8152:8154 PTree set
binder 8157:8157 <> A:191
R8172:8179 Coq.Numbers.BinNums <> positive ind
binder 8168:8168 <> i:192
R8187:8187 compcert.lib.Maps <> A:191 var
binder 8183:8183 <> v:193
R8195:8195 compcert.lib.Maps PTree t def
R8197:8197 compcert.lib.Maps <> A:191 var
binder 8191:8191 <> m:194
R8213:8213 compcert.lib.Maps PTree t def
R8215:8215 compcert.lib.Maps <> A:191 var
R8230:8230 compcert.lib.Maps <> m:194 var
R8243:8246 compcert.lib.Maps PTree Leaf constr
R8265:8265 compcert.lib.Maps <> i:192 var
R8282:8283 Coq.Numbers.BinNums <> xH constr
R8288:8291 compcert.lib.Maps PTree Node constr
R8307:8310 compcert.lib.Maps PTree Leaf constr
R8299:8302 Coq.Init.Datatypes <> Some constr
R8304:8304 compcert.lib.Maps <> v:193 var
R8293:8296 compcert.lib.Maps PTree Leaf constr
R8322:8323 Coq.Numbers.BinNums <> xO constr
R8331:8334 compcert.lib.Maps PTree Node constr
R8357:8360 compcert.lib.Maps PTree Leaf constr
R8352:8355 Coq.Init.Datatypes <> None constr
R8337:8339 compcert.lib.Maps <> set:195 def
R8346:8349 compcert.lib.Maps PTree Leaf constr
R8344:8344 compcert.lib.Maps <> v:193 var
R8372:8373 Coq.Numbers.BinNums <> xI constr
R8381:8384 compcert.lib.Maps PTree Node constr
R8397:8399 compcert.lib.Maps <> set:195 def
R8406:8409 compcert.lib.Maps PTree Leaf constr
R8404:8404 compcert.lib.Maps <> v:193 var
R8391:8394 Coq.Init.Datatypes <> None constr
R8386:8389 compcert.lib.Maps PTree Leaf constr
R8430:8433 compcert.lib.Maps PTree Node constr
R8458:8458 compcert.lib.Maps <> i:192 var
R8475:8476 Coq.Numbers.BinNums <> xH constr
R8481:8484 compcert.lib.Maps PTree Node constr
R8489:8492 Coq.Init.Datatypes <> Some constr
R8494:8494 compcert.lib.Maps <> v:193 var
R8509:8510 Coq.Numbers.BinNums <> xO constr
R8518:8521 compcert.lib.Maps PTree Node constr
R8524:8526 compcert.lib.Maps <> set:195 def
R8531:8531 compcert.lib.Maps <> v:193 var
R8550:8551 Coq.Numbers.BinNums <> xI constr
R8559:8562 compcert.lib.Maps PTree Node constr
R8569:8571 compcert.lib.Maps <> set:195 def
R8576:8576 compcert.lib.Maps <> v:193 var
def 8614:8619 PTree remove
binder 8622:8622 <> A:199
R8637:8644 Coq.Numbers.BinNums <> positive ind
binder 8633:8633 <> i:200
R8652:8652 compcert.lib.Maps PTree t def
R8654:8654 compcert.lib.Maps <> A:199 var
binder 8648:8648 <> m:201
R8670:8670 compcert.lib.Maps PTree t def
R8672:8672 compcert.lib.Maps <> A:199 var
R8687:8687 compcert.lib.Maps <> i:200 var
R8700:8701 Coq.Numbers.BinNums <> xH constr
R8720:8720 compcert.lib.Maps <> m:201 var
R8737:8740 compcert.lib.Maps PTree Leaf constr
R8745:8748 compcert.lib.Maps PTree Leaf constr
R8760:8763 compcert.lib.Maps PTree Node constr
R8765:8768 compcert.lib.Maps PTree Leaf constr
R8772:8775 compcert.lib.Maps PTree Leaf constr
R8780:8783 compcert.lib.Maps PTree Leaf constr
R8795:8798 compcert.lib.Maps PTree Node constr
R8809:8812 compcert.lib.Maps PTree Node constr
R8816:8819 Coq.Init.Datatypes <> None constr
R8841:8842 Coq.Numbers.BinNums <> xO constr
R8864:8864 compcert.lib.Maps <> m:201 var
R8881:8884 compcert.lib.Maps PTree Leaf constr
R8889:8892 compcert.lib.Maps PTree Leaf constr
R8904:8907 compcert.lib.Maps PTree Node constr
R8911:8914 Coq.Init.Datatypes <> None constr
R8916:8919 compcert.lib.Maps PTree Leaf constr
R8942:8947 compcert.lib.Maps <> remove:202 def
R8973:8976 compcert.lib.Maps PTree Leaf constr
R8981:8984 compcert.lib.Maps PTree Leaf constr
R9006:9009 compcert.lib.Maps PTree Node constr
R9019:9022 compcert.lib.Maps PTree Leaf constr
R9014:9017 Coq.Init.Datatypes <> None constr
R9050:9053 compcert.lib.Maps PTree Node constr
R9064:9067 compcert.lib.Maps PTree Node constr
R9070:9075 compcert.lib.Maps <> remove:202 def
R9105:9106 Coq.Numbers.BinNums <> xI constr
R9128:9128 compcert.lib.Maps <> m:201 var
R9145:9148 compcert.lib.Maps PTree Leaf constr
R9153:9156 compcert.lib.Maps PTree Leaf constr
R9168:9171 compcert.lib.Maps PTree Node constr
R9173:9176 compcert.lib.Maps PTree Leaf constr
R9178:9181 Coq.Init.Datatypes <> None constr
R9206:9211 compcert.lib.Maps <> remove:202 def
R9237:9240 compcert.lib.Maps PTree Leaf constr
R9245:9248 compcert.lib.Maps PTree Leaf constr
R9270:9273 compcert.lib.Maps PTree Node constr
R9280:9283 Coq.Init.Datatypes <> None constr
R9275:9278 compcert.lib.Maps PTree Leaf constr
R9314:9317 compcert.lib.Maps PTree Node constr
R9328:9331 compcert.lib.Maps PTree Node constr
R9338:9343 compcert.lib.Maps <> remove:202 def
prf 9383:9388 PTree gempty
binder 9403:9403 <> A:207
R9416:9423 Coq.Numbers.BinNums <> positive ind
binder 9413:9413 <> i:208
R9442:9444 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9427:9429 compcert.lib.Maps PTree get def
R9434:9438 compcert.lib.Maps PTree empty def
R9440:9440 compcert.lib.Maps <> A:207 var
R9431:9431 compcert.lib.Maps <> i:208 var
R9445:9448 Coq.Init.Datatypes <> None constr
prf 9508:9510 PTree gss
binder 9525:9525 <> A:209
R9538:9545 Coq.Numbers.BinNums <> positive ind
binder 9535:9535 <> i:210
R9552:9552 compcert.lib.Maps <> A:209 var
binder 9549:9549 <> x:211
R9559:9559 compcert.lib.Maps PTree t def
R9561:9561 compcert.lib.Maps <> A:209 var
binder 9556:9556 <> m:212
R9582:9584 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9565:9567 compcert.lib.Maps PTree get def
R9572:9574 compcert.lib.Maps PTree set def
R9580:9580 compcert.lib.Maps <> m:212 var
R9578:9578 compcert.lib.Maps <> x:211 var
R9576:9576 compcert.lib.Maps <> i:210 var
R9569:9569 compcert.lib.Maps <> i:210 var
R9585:9588 Coq.Init.Datatypes <> Some constr
R9590:9590 compcert.lib.Maps <> x:211 var
prf 9662:9666 PTree gleaf
binder 9678:9678 <> A:213
R9693:9700 Coq.Numbers.BinNums <> positive ind
binder 9689:9689 <> i:214
R9722:9724 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9704:9706 compcert.lib.Maps PTree get def
R9718:9718 compcert.lib.Maps PTree t def
R9720:9720 compcert.lib.Maps <> A:213 var
R9711:9714 compcert.lib.Maps PTree Leaf constr
R9708:9708 compcert.lib.Maps <> i:214 var
R9725:9728 Coq.Init.Datatypes <> None constr
R9748:9753 compcert.lib.Maps PTree gempty thm
R9748:9753 compcert.lib.Maps PTree gempty thm
prf 9772:9774 PTree gso
binder 9789:9789 <> A:215
R9804:9811 Coq.Numbers.BinNums <> positive ind
binder 9799:9799 <> i:216
binder 9801:9801 <> j:217
R9818:9818 compcert.lib.Maps <> A:215 var
binder 9815:9815 <> x:218
R9825:9825 compcert.lib.Maps PTree t def
R9827:9827 compcert.lib.Maps <> A:215 var
binder 9822:9822 <> m:219
R9841:9844 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9862:9864 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9845:9847 compcert.lib.Maps PTree get def
R9852:9854 compcert.lib.Maps PTree set def
R9860:9860 compcert.lib.Maps <> m:219 var
R9858:9858 compcert.lib.Maps <> x:218 var
R9856:9856 compcert.lib.Maps <> j:217 var
R9849:9849 compcert.lib.Maps <> i:216 var
R9865:9867 compcert.lib.Maps PTree get def
R9871:9871 compcert.lib.Maps <> m:219 var
R9869:9869 compcert.lib.Maps <> i:216 var
R9836:9839 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R9835:9835 compcert.lib.Maps <> i:216 var
R9840:9840 compcert.lib.Maps <> j:217 var
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
R9962:9966 compcert.lib.Maps PTree gleaf thm
prf 10025:10030 PTree gsspec
binder 10045:10045 <> A:220
R10060:10067 Coq.Numbers.BinNums <> positive ind
binder 10055:10055 <> i:221
binder 10057:10057 <> j:222
R10074:10074 compcert.lib.Maps <> A:220 var
binder 10071:10071 <> x:223
R10081:10081 compcert.lib.Maps PTree t def
R10083:10083 compcert.lib.Maps <> A:220 var
binder 10078:10078 <> m:224
R10108:10110 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10091:10093 compcert.lib.Maps PTree get def
R10098:10100 compcert.lib.Maps PTree set def
R10106:10106 compcert.lib.Maps <> m:224 var
R10104:10104 compcert.lib.Maps <> x:223 var
R10102:10102 compcert.lib.Maps <> j:222 var
R10095:10095 compcert.lib.Maps <> i:221 var
R10114:10116 compcert.lib.Coqlib <> peq def
R10120:10120 compcert.lib.Maps <> j:222 var
R10118:10118 compcert.lib.Maps <> i:221 var
R10139:10141 compcert.lib.Maps PTree get def
R10145:10145 compcert.lib.Maps <> m:224 var
R10143:10143 compcert.lib.Maps <> i:221 var
R10127:10130 Coq.Init.Datatypes <> Some constr
R10132:10132 compcert.lib.Maps <> x:223 var
R10183:10185 compcert.lib.Coqlib <> peq def
R10212:10214 compcert.lib.Maps PTree gss thm
R10224:10226 compcert.lib.Maps PTree gso thm
R10183:10185 compcert.lib.Coqlib <> peq def
R10212:10214 compcert.lib.Maps PTree gss thm
R10224:10226 compcert.lib.Maps PTree gso thm
prf 10255:10261 PTree gsident
binder 10276:10276 <> A:225
R10289:10296 Coq.Numbers.BinNums <> positive ind
binder 10286:10286 <> i:226
R10303:10303 compcert.lib.Maps PTree t def
R10305:10305 compcert.lib.Maps <> A:225 var
binder 10300:10300 <> m:227
R10312:10312 compcert.lib.Maps <> A:225 var
binder 10309:10309 <> v:228
R10336:10339 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10349:10351 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10340:10342 compcert.lib.Maps PTree set def
R10348:10348 compcert.lib.Maps <> m:227 var
R10346:10346 compcert.lib.Maps <> v:228 var
R10344:10344 compcert.lib.Maps <> i:226 var
R10352:10352 compcert.lib.Maps <> m:227 var
R10327:10329 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10320:10322 compcert.lib.Maps PTree get def
R10326:10326 compcert.lib.Maps <> m:227 var
R10324:10324 compcert.lib.Maps <> i:226 var
R10330:10333 Coq.Init.Datatypes <> Some constr
R10335:10335 compcert.lib.Maps <> v:228 var
prf 10532:10535 PTree set2
binder 10550:10550 <> A:229
R10563:10565 compcert.lib.Maps PTree elt def
binder 10560:10560 <> i:230
R10572:10572 compcert.lib.Maps PTree t def
R10574:10574 compcert.lib.Maps <> A:229 var
binder 10569:10569 <> m:231
R10585:10585 compcert.lib.Maps <> A:229 var
binder 10578:10579 <> v1:232
binder 10581:10582 <> v2:233
R10614:10616 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10593:10595 compcert.lib.Maps PTree set def
R10603:10605 compcert.lib.Maps PTree set def
R10612:10612 compcert.lib.Maps <> m:231 var
R10609:10610 compcert.lib.Maps <> v1:232 var
R10607:10607 compcert.lib.Maps <> i:230 var
R10599:10600 compcert.lib.Maps <> v2:233 var
R10597:10597 compcert.lib.Maps <> i:230 var
R10617:10619 compcert.lib.Maps PTree set def
R10626:10626 compcert.lib.Maps <> m:231 var
R10623:10624 compcert.lib.Maps <> v2:233 var
R10621:10621 compcert.lib.Maps <> i:230 var
prf 10723:10727 PTree rleaf
binder 10739:10739 <> A:234
R10754:10761 Coq.Numbers.BinNums <> positive ind
binder 10750:10750 <> i:235
R10786:10788 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10765:10770 compcert.lib.Maps PTree remove def
R10782:10782 compcert.lib.Maps PTree t def
R10784:10784 compcert.lib.Maps <> A:234 var
R10775:10778 compcert.lib.Maps PTree Leaf constr
R10772:10772 compcert.lib.Maps <> i:235 var
R10789:10792 compcert.lib.Maps PTree Leaf constr
prf 10845:10847 PTree grs
binder 10862:10862 <> A:236
R10875:10882 Coq.Numbers.BinNums <> positive ind
binder 10872:10872 <> i:237
R10889:10889 compcert.lib.Maps PTree t def
R10891:10891 compcert.lib.Maps <> A:236 var
binder 10886:10886 <> m:238
R10913:10915 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10895:10897 compcert.lib.Maps PTree get def
R10902:10907 compcert.lib.Maps PTree remove def
R10911:10911 compcert.lib.Maps <> m:238 var
R10909:10909 compcert.lib.Maps <> i:237 var
R10899:10899 compcert.lib.Maps <> i:237 var
R10916:10919 Coq.Init.Datatypes <> None constr
R11066:11070 compcert.lib.Maps PTree rleaf thm
R11066:11070 compcert.lib.Maps PTree rleaf thm
R11066:11070 compcert.lib.Maps PTree rleaf thm
R11127:11129 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11095:11097 compcert.lib.Maps PTree get def
R11102:11107 compcert.lib.Maps PTree remove def
R11112:11115 compcert.lib.Maps PTree Node constr
R11130:11133 Coq.Init.Datatypes <> None constr
R11127:11129 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11095:11097 compcert.lib.Maps PTree get def
R11102:11107 compcert.lib.Maps PTree remove def
R11112:11115 compcert.lib.Maps PTree Node constr
R11130:11133 Coq.Init.Datatypes <> None constr
R11155:11160 compcert.lib.Maps PTree remove def
R11165:11168 compcert.lib.Maps PTree Node constr
R11155:11160 compcert.lib.Maps PTree remove def
R11165:11168 compcert.lib.Maps PTree Node constr
R11324:11328 compcert.lib.Maps PTree rleaf thm
R11324:11328 compcert.lib.Maps PTree rleaf thm
R11324:11328 compcert.lib.Maps PTree rleaf thm
R11385:11387 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11353:11355 compcert.lib.Maps PTree get def
R11360:11365 compcert.lib.Maps PTree remove def
R11370:11373 compcert.lib.Maps PTree Node constr
R11388:11391 Coq.Init.Datatypes <> None constr
R11385:11387 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11353:11355 compcert.lib.Maps PTree get def
R11360:11365 compcert.lib.Maps PTree remove def
R11370:11373 compcert.lib.Maps PTree Node constr
R11388:11391 Coq.Init.Datatypes <> None constr
R11413:11418 compcert.lib.Maps PTree remove def
R11423:11426 compcert.lib.Maps PTree Node constr
R11413:11418 compcert.lib.Maps PTree remove def
R11423:11426 compcert.lib.Maps PTree Node constr
prf 11556:11558 PTree gro
binder 11573:11573 <> A:239
R11588:11595 Coq.Numbers.BinNums <> positive ind
binder 11583:11583 <> i:240
binder 11585:11585 <> j:241
R11602:11602 compcert.lib.Maps PTree t def
R11604:11604 compcert.lib.Maps <> A:239 var
binder 11599:11599 <> m:242
R11618:11621 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11640:11642 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11622:11624 compcert.lib.Maps PTree get def
R11629:11634 compcert.lib.Maps PTree remove def
R11638:11638 compcert.lib.Maps <> m:242 var
R11636:11636 compcert.lib.Maps <> j:241 var
R11626:11626 compcert.lib.Maps <> i:240 var
R11643:11645 compcert.lib.Maps PTree get def
R11649:11649 compcert.lib.Maps <> m:242 var
R11647:11647 compcert.lib.Maps <> i:240 var
R11613:11616 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R11612:11612 compcert.lib.Maps <> i:240 var
R11617:11617 compcert.lib.Maps <> j:241 var
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11731:11735 compcert.lib.Maps PTree rleaf thm
R11740:11741 Coq.Numbers.BinNums <> xI constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11769:11773 compcert.lib.Maps PTree rleaf thm
R11778:11779 Coq.Numbers.BinNums <> xO constr
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11807:11811 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11946:11950 compcert.lib.Maps PTree rleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R11985:11989 compcert.lib.Maps PTree gleaf thm
R12048:12050 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12013:12015 compcert.lib.Maps PTree get def
R12020:12025 compcert.lib.Maps PTree remove def
R12030:12033 compcert.lib.Maps PTree Node constr
R12051:12053 compcert.lib.Maps PTree get def
R12058:12061 compcert.lib.Maps PTree Node constr
R12098:12103 compcert.lib.Maps PTree remove def
R12108:12111 compcert.lib.Maps PTree Node constr
R12141:12145 compcert.lib.Maps PTree gleaf thm
R12048:12050 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12013:12015 compcert.lib.Maps PTree get def
R12020:12025 compcert.lib.Maps PTree remove def
R12030:12033 compcert.lib.Maps PTree Node constr
R12051:12053 compcert.lib.Maps PTree get def
R12058:12061 compcert.lib.Maps PTree Node constr
R12098:12103 compcert.lib.Maps PTree remove def
R12108:12111 compcert.lib.Maps PTree Node constr
R12141:12145 compcert.lib.Maps PTree gleaf thm
R12141:12145 compcert.lib.Maps PTree gleaf thm
R12141:12145 compcert.lib.Maps PTree gleaf thm
R12208:12213 compcert.lib.Maps PTree remove def
R12218:12221 compcert.lib.Maps PTree Node constr
R12259:12263 compcert.lib.Maps PTree gleaf thm
R12208:12213 compcert.lib.Maps PTree remove def
R12218:12221 compcert.lib.Maps PTree Node constr
R12259:12263 compcert.lib.Maps PTree gleaf thm
R12259:12263 compcert.lib.Maps PTree gleaf thm
R12259:12263 compcert.lib.Maps PTree gleaf thm
R12300:12305 compcert.lib.Maps PTree remove def
R12310:12313 compcert.lib.Maps PTree Node constr
R12350:12354 compcert.lib.Maps PTree gleaf thm
R12300:12305 compcert.lib.Maps PTree remove def
R12310:12313 compcert.lib.Maps PTree Node constr
R12350:12354 compcert.lib.Maps PTree gleaf thm
R12350:12354 compcert.lib.Maps PTree gleaf thm
R12350:12354 compcert.lib.Maps PTree gleaf thm
R12422:12424 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12386:12388 compcert.lib.Maps PTree get def
R12393:12398 compcert.lib.Maps PTree remove def
R12403:12406 compcert.lib.Maps PTree Node constr
R12425:12427 compcert.lib.Maps PTree get def
R12432:12435 compcert.lib.Maps PTree Node constr
R12473:12478 compcert.lib.Maps PTree remove def
R12483:12486 compcert.lib.Maps PTree Node constr
R12517:12521 compcert.lib.Maps PTree gleaf thm
R12422:12424 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12386:12388 compcert.lib.Maps PTree get def
R12393:12398 compcert.lib.Maps PTree remove def
R12403:12406 compcert.lib.Maps PTree Node constr
R12425:12427 compcert.lib.Maps PTree get def
R12432:12435 compcert.lib.Maps PTree Node constr
R12473:12478 compcert.lib.Maps PTree remove def
R12483:12486 compcert.lib.Maps PTree Node constr
R12517:12521 compcert.lib.Maps PTree gleaf thm
R12517:12521 compcert.lib.Maps PTree gleaf thm
R12517:12521 compcert.lib.Maps PTree gleaf thm
R12584:12589 compcert.lib.Maps PTree remove def
R12594:12597 compcert.lib.Maps PTree Node constr
R12634:12638 compcert.lib.Maps PTree gleaf thm
R12584:12589 compcert.lib.Maps PTree remove def
R12594:12597 compcert.lib.Maps PTree Node constr
R12634:12638 compcert.lib.Maps PTree gleaf thm
R12634:12638 compcert.lib.Maps PTree gleaf thm
R12675:12680 compcert.lib.Maps PTree remove def
R12685:12688 compcert.lib.Maps PTree Node constr
R12726:12730 compcert.lib.Maps PTree gleaf thm
R12675:12680 compcert.lib.Maps PTree remove def
R12685:12688 compcert.lib.Maps PTree Node constr
R12726:12730 compcert.lib.Maps PTree gleaf thm
R12726:12730 compcert.lib.Maps PTree gleaf thm
prf 12770:12775 PTree grspec
binder 12790:12790 <> A:243
R12805:12807 compcert.lib.Maps PTree elt def
binder 12800:12800 <> i:244
binder 12802:12802 <> j:245
R12814:12814 compcert.lib.Maps PTree t def
R12816:12816 compcert.lib.Maps <> A:243 var
binder 12811:12811 <> m:246
R12842:12844 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12824:12826 compcert.lib.Maps PTree get def
R12831:12836 compcert.lib.Maps PTree remove def
R12840:12840 compcert.lib.Maps <> m:246 var
R12838:12838 compcert.lib.Maps <> j:245 var
R12828:12828 compcert.lib.Maps <> i:244 var
R12848:12853 compcert.lib.Maps PTree elt_eq def
R12857:12857 compcert.lib.Maps <> j:245 var
R12855:12855 compcert.lib.Maps <> i:244 var
R12874:12876 compcert.lib.Maps PTree get def
R12880:12880 compcert.lib.Maps <> m:246 var
R12878:12878 compcert.lib.Maps <> i:244 var
R12864:12867 Coq.Init.Datatypes <> None constr
R12914:12919 compcert.lib.Maps PTree elt_eq def
R12914:12919 compcert.lib.Maps PTree elt_eq def
R12942:12944 compcert.lib.Maps PTree grs thm
R12942:12944 compcert.lib.Maps PTree grs thm
R12953:12955 compcert.lib.Maps PTree gro thm
R12953:12955 compcert.lib.Maps PTree gro thm
sec 12982:12997 PTree BOOLEAN_EQUALITY
var 13014:13014 PTree.BOOLEAN_EQUALITY A
var 13036:13039 PTree.BOOLEAN_EQUALITY beqA
R13043:13046 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13048:13051 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13052:13055 Coq.Init.Datatypes <> bool ind
R13047:13047 compcert.lib.Maps <> PTree.BOOLEAN_EQUALITY.A var
R13042:13042 compcert.lib.Maps <> PTree.BOOLEAN_EQUALITY.A var
def 13072:13077 PTree bempty
R13083:13083 compcert.lib.Maps PTree t def
R13085:13085 compcert.lib.Maps <> PTree.BOOLEAN_EQUALITY.A var
binder 13080:13080 <> m:249
R13090:13093 Coq.Init.Datatypes <> bool ind
R13110:13110 compcert.lib.Maps <> m:249 var
R13125:13128 compcert.lib.Maps PTree Leaf constr
R13133:13136 Coq.Init.Datatypes <> true constr
R13146:13149 compcert.lib.Maps PTree Node constr
R13153:13156 Coq.Init.Datatypes <> None constr
R13171:13174 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R13163:13168 compcert.lib.Maps <> bempty:250 def
R13175:13180 compcert.lib.Maps <> bempty:250 def
R13192:13195 compcert.lib.Maps PTree Node constr
R13200:13203 Coq.Init.Datatypes <> Some constr
R13213:13217 Coq.Init.Datatypes <> false constr
def 13244:13246 PTree beq
R13256:13256 compcert.lib.Maps PTree t def
R13258:13258 compcert.lib.Maps <> PTree.BOOLEAN_EQUALITY.A var
binder 13249:13250 <> m1:252
binder 13252:13253 <> m2:253
R13275:13278 Coq.Init.Datatypes <> bool ind
R13299:13300 compcert.lib.Maps <> m2:253 var
R13295:13296 compcert.lib.Maps <> m1:252 var
R13315:13318 compcert.lib.Maps PTree Leaf constr
R13326:13331 compcert.lib.Maps PTree bempty def
R13333:13334 compcert.lib.Maps <> m2:253 var
R13347:13350 compcert.lib.Maps PTree Leaf constr
R13355:13360 compcert.lib.Maps PTree bempty def
R13362:13363 compcert.lib.Maps <> m1:252 var
R13373:13376 compcert.lib.Maps PTree Node constr
R13388:13391 compcert.lib.Maps PTree Node constr
R13569:13572 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R13546:13559 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R13445:13448 Coq.Init.Datatypes <> None constr
R13451:13454 Coq.Init.Datatypes <> None constr
R13459:13462 Coq.Init.Datatypes <> true constr
R13476:13479 Coq.Init.Datatypes <> Some constr
R13485:13488 Coq.Init.Datatypes <> Some constr
R13496:13499 compcert.lib.Maps <> PTree.BOOLEAN_EQUALITY.beqA var
R13527:13531 Coq.Init.Datatypes <> false constr
R13560:13562 compcert.lib.Maps <> beq:254 def
R13573:13575 compcert.lib.Maps <> beq:254 def
prf 13605:13618 PTree bempty_correct
binder 13634:13634 <> m:259
R13652:13657 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R13682:13682 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R13645:13647 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13637:13642 compcert.lib.Maps PTree bempty def
R13644:13644 compcert.lib.Maps <> m:259 var
R13648:13651 Coq.Init.Datatypes <> true constr
binder 13665:13665 <> x:260
R13675:13677 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13668:13670 compcert.lib.Maps PTree get def
R13674:13674 compcert.lib.Maps <> m:259 var
R13672:13672 compcert.lib.Maps <> x:260 var
R13678:13681 Coq.Init.Datatypes <> None constr
R13749:13753 compcert.lib.Maps PTree gleaf thm
R13749:13753 compcert.lib.Maps PTree gleaf thm
R13833:13834 Coq.Numbers.BinNums <> xH constr
R13833:13834 Coq.Numbers.BinNums <> xH constr
R13873:13881 Coq.Init.Datatypes <> andb_prop thm
R13873:13881 Coq.Init.Datatypes <> andb_prop thm
R13974:13988 Coq.Init.Datatypes <> andb_true_intro thm
R13974:13988 Coq.Init.Datatypes <> andb_true_intro thm
R14034:14035 Coq.Numbers.BinNums <> xO constr
R14034:14035 Coq.Numbers.BinNums <> xO constr
R14078:14079 Coq.Numbers.BinNums <> xI constr
R14078:14079 Coq.Numbers.BinNums <> xI constr
prf 14106:14116 PTree beq_correct
binder 14132:14133 <> m1:261
binder 14135:14136 <> m2:262
R14161:14172 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14335:14335 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14154:14156 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14145:14147 compcert.lib.Maps PTree beq def
R14152:14153 compcert.lib.Maps <> m2:262 var
R14149:14150 compcert.lib.Maps <> m1:261 var
R14157:14160 Coq.Init.Datatypes <> true constr
R14184:14186 compcert.lib.Maps PTree elt def
binder 14181:14181 <> x:263
R14213:14215 compcert.lib.Maps PTree get def
R14219:14220 compcert.lib.Maps <> m2:262 var
R14217:14217 compcert.lib.Maps <> x:263 var
R14203:14205 compcert.lib.Maps PTree get def
R14209:14210 compcert.lib.Maps <> m1:261 var
R14207:14207 compcert.lib.Maps <> x:263 var
R14236:14239 Coq.Init.Datatypes <> None constr
R14242:14245 Coq.Init.Datatypes <> None constr
R14250:14253 Coq.Init.Logic <> True ind
R14264:14267 Coq.Init.Datatypes <> Some constr
R14273:14276 Coq.Init.Datatypes <> Some constr
R14294:14296 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14284:14287 compcert.lib.Maps <> PTree.BOOLEAN_EQUALITY.beqA var
R14297:14300 Coq.Init.Datatypes <> true constr
R14319:14323 Coq.Init.Logic <> False ind
R14398:14411 compcert.lib.Maps PTree bempty_correct thm
R14398:14411 compcert.lib.Maps PTree bempty_correct thm
R14398:14411 compcert.lib.Maps PTree bempty_correct thm
R14443:14447 compcert.lib.Maps PTree gleaf thm
R14443:14447 compcert.lib.Maps PTree gleaf thm
R14443:14447 compcert.lib.Maps PTree gleaf thm
R14499:14503 compcert.lib.Maps PTree gleaf thm
R14499:14503 compcert.lib.Maps PTree gleaf thm
R14499:14503 compcert.lib.Maps PTree gleaf thm
R14516:14518 compcert.lib.Maps PTree get def
R14516:14518 compcert.lib.Maps PTree get def
R14568:14570 compcert.lib.Maps PTree beq def
R14581:14594 compcert.lib.Maps PTree bempty_correct thm
R14581:14594 compcert.lib.Maps PTree bempty_correct thm
R14581:14594 compcert.lib.Maps PTree bempty_correct thm
R14639:14643 compcert.lib.Maps PTree gleaf thm
R14639:14643 compcert.lib.Maps PTree gleaf thm
R14639:14643 compcert.lib.Maps PTree gleaf thm
R14686:14690 compcert.lib.Maps PTree gleaf thm
R14686:14690 compcert.lib.Maps PTree gleaf thm
R14686:14690 compcert.lib.Maps PTree gleaf thm
R14703:14705 compcert.lib.Maps PTree get def
R14710:14713 compcert.lib.Maps PTree Node constr
R14703:14705 compcert.lib.Maps PTree get def
R14710:14713 compcert.lib.Maps PTree Node constr
R14787:14795 Coq.Init.Datatypes <> andb_prop thm
R14787:14795 Coq.Init.Datatypes <> andb_prop thm
R14815:14823 Coq.Init.Datatypes <> andb_prop thm
R14815:14823 Coq.Init.Datatypes <> andb_prop thm
R15008:15022 Coq.Init.Datatypes <> andb_true_intro thm
R15008:15022 Coq.Init.Datatypes <> andb_true_intro thm
R15038:15052 Coq.Init.Datatypes <> andb_true_intro thm
R15038:15052 Coq.Init.Datatypes <> andb_true_intro thm
R15086:15087 Coq.Numbers.BinNums <> xH constr
R15086:15087 Coq.Numbers.BinNums <> xH constr
R15172:15173 Coq.Numbers.BinNums <> xO constr
R15172:15173 Coq.Numbers.BinNums <> xO constr
R15222:15223 Coq.Numbers.BinNums <> xI constr
R15222:15223 Coq.Numbers.BinNums <> xI constr
R15246:15261 compcert.lib.Maps PTree.BOOLEAN_EQUALITY <> sec
def 15276:15286 PTree prev_append
R15294:15301 Coq.Numbers.BinNums <> positive ind
binder 15289:15289 <> i:264
binder 15291:15291 <> j:265
R15317:15324 Coq.Numbers.BinNums <> positive ind
R15339:15339 compcert.lib.Maps <> i:264 var
R15354:15355 Coq.Numbers.BinNums <> xH constr
R15360:15360 compcert.lib.Maps <> j:265 var
R15370:15371 Coq.Numbers.BinNums <> xI constr
R15379:15389 compcert.lib.Maps <> prev_append:266 def
R15395:15396 Coq.Numbers.BinNums <> xI constr
R15398:15398 compcert.lib.Maps <> j:265 var
R15409:15410 Coq.Numbers.BinNums <> xO constr
R15418:15428 compcert.lib.Maps <> prev_append:266 def
R15434:15435 Coq.Numbers.BinNums <> xO constr
R15437:15437 compcert.lib.Maps <> j:265 var
def 15463:15466 PTree prev
R15472:15479 Coq.Numbers.BinNums <> positive ind
binder 15469:15469 <> i:268
R15484:15491 Coq.Numbers.BinNums <> positive ind
R15500:15510 compcert.lib.Maps PTree prev_append def
R15514:15515 Coq.Numbers.BinNums <> xH constr
R15512:15512 compcert.lib.Maps <> i:268 var
prf 15527:15542 PTree prev_append_prev
binder 15544:15544 <> i:269
binder 15546:15546 <> j:270
R15575:15577 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15553:15556 compcert.lib.Maps PTree prev def
R15559:15569 compcert.lib.Maps PTree prev_append def
R15573:15573 compcert.lib.Maps <> j:270 var
R15571:15571 compcert.lib.Maps <> i:269 var
R15578:15588 compcert.lib.Maps PTree prev_append def
R15592:15592 compcert.lib.Maps <> i:269 var
R15590:15590 compcert.lib.Maps <> j:270 var
R15625:15628 compcert.lib.Maps PTree prev def
prf 15788:15802 PTree prev_involutive
binder 15804:15804 <> i:271
R15825:15827 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15812:15815 compcert.lib.Maps PTree prev def
R15818:15821 compcert.lib.Maps PTree prev def
R15823:15823 compcert.lib.Maps <> i:271 var
R15828:15828 compcert.lib.Maps <> i:271 var
R15840:15855 compcert.lib.Maps PTree prev_append_prev thm
R15859:15860 Coq.Numbers.BinNums <> xH constr
prf 15873:15887 PTree prev_append_inj
binder 15889:15889 <> i:272
binder 15891:15891 <> j:273
binder 15893:15894 <> j':274
R15936:15939 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15941:15943 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15940:15940 compcert.lib.Maps <> j:273 var
R15944:15945 compcert.lib.Maps <> j':274 var
R15917:15919 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15902:15912 compcert.lib.Maps PTree prev_append def
R15916:15916 compcert.lib.Maps <> j:273 var
R15914:15914 compcert.lib.Maps <> i:272 var
R15920:15930 compcert.lib.Maps PTree prev_append def
R15934:15935 compcert.lib.Maps <> j':274 var
R15932:15932 compcert.lib.Maps <> i:272 var
def 16088:16091 PTree xmap
binder 16094:16094 <> A:275
binder 16096:16096 <> B:276
R16119:16122 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16124:16127 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16128:16128 compcert.lib.Maps <> B:276 var
R16123:16123 compcert.lib.Maps <> A:275 var
R16111:16118 Coq.Numbers.BinNums <> positive ind
binder 16107:16107 <> f:277
R16136:16136 compcert.lib.Maps PTree t def
R16138:16138 compcert.lib.Maps <> A:275 var
binder 16132:16132 <> m:278
R16146:16153 Coq.Numbers.BinNums <> positive ind
binder 16142:16142 <> i:279
R16182:16182 compcert.lib.Maps PTree t def
R16184:16184 compcert.lib.Maps <> B:276 var
R16201:16201 compcert.lib.Maps <> m:278 var
R16216:16219 compcert.lib.Maps PTree Leaf constr
R16224:16227 compcert.lib.Maps PTree Leaf constr
R16237:16240 compcert.lib.Maps PTree Node constr
R16251:16254 compcert.lib.Maps PTree Node constr
R16393:16396 compcert.lib.Maps <> xmap:280 def
R16403:16404 Coq.Numbers.BinNums <> xI constr
R16406:16406 compcert.lib.Maps <> i:279 var
R16398:16398 compcert.lib.Maps <> f:277 var
R16315:16318 Coq.Init.Datatypes <> None constr
R16323:16326 Coq.Init.Datatypes <> None constr
R16330:16333 Coq.Init.Datatypes <> Some constr
R16340:16343 Coq.Init.Datatypes <> Some constr
R16346:16346 compcert.lib.Maps <> f:277 var
R16349:16352 compcert.lib.Maps PTree prev def
R16354:16354 compcert.lib.Maps <> i:279 var
R16257:16260 compcert.lib.Maps <> xmap:280 def
R16267:16268 Coq.Numbers.BinNums <> xO constr
R16270:16270 compcert.lib.Maps <> i:279 var
R16262:16262 compcert.lib.Maps <> f:277 var
def 16435:16437 PTree map
binder 16440:16440 <> A:283
binder 16442:16442 <> B:284
R16465:16468 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16470:16473 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16474:16474 compcert.lib.Maps <> B:284 var
R16469:16469 compcert.lib.Maps <> A:283 var
R16457:16464 Coq.Numbers.BinNums <> positive ind
binder 16453:16453 <> f:285
binder 16477:16477 <> m:286
R16482:16485 compcert.lib.Maps PTree xmap def
R16491:16492 Coq.Numbers.BinNums <> xH constr
R16489:16489 compcert.lib.Maps <> m:286 var
R16487:16487 compcert.lib.Maps <> f:285 var
prf 16506:16510 PTree xgmap
binder 16527:16527 <> A:287
binder 16529:16529 <> B:288
R16550:16553 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16555:16558 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16559:16559 compcert.lib.Maps <> B:288 var
R16554:16554 compcert.lib.Maps <> A:287 var
R16542:16549 Coq.Numbers.BinNums <> positive ind
binder 16539:16539 <> f:289
R16569:16576 Coq.Numbers.BinNums <> positive ind
binder 16563:16563 <> i:290
binder 16565:16565 <> j:291
R16583:16583 compcert.lib.Maps PTree t def
R16585:16585 compcert.lib.Maps <> A:287 var
binder 16580:16580 <> m:292
R16613:16615 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16595:16597 compcert.lib.Maps PTree get def
R16602:16605 compcert.lib.Maps PTree xmap def
R16611:16611 compcert.lib.Maps <> j:291 var
R16609:16609 compcert.lib.Maps <> m:292 var
R16607:16607 compcert.lib.Maps <> f:289 var
R16599:16599 compcert.lib.Maps <> i:290 var
R16616:16625 compcert.lib.Coqlib <> option_map def
R16657:16659 compcert.lib.Maps PTree get def
R16663:16663 compcert.lib.Maps <> m:292 var
R16661:16661 compcert.lib.Maps <> i:290 var
R16628:16628 compcert.lib.Maps <> f:289 var
R16631:16634 compcert.lib.Maps PTree prev def
R16637:16647 compcert.lib.Maps PTree prev_append def
R16651:16651 compcert.lib.Maps <> j:291 var
R16649:16649 compcert.lib.Maps <> i:290 var
prf 16750:16753 PTree gmap
binder 16768:16768 <> A:293
binder 16770:16770 <> B:294
R16791:16794 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16796:16799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16800:16800 compcert.lib.Maps <> B:294 var
R16795:16795 compcert.lib.Maps <> A:293 var
R16783:16790 Coq.Numbers.BinNums <> positive ind
binder 16780:16780 <> f:295
R16807:16814 Coq.Numbers.BinNums <> positive ind
binder 16804:16804 <> i:296
R16821:16821 compcert.lib.Maps PTree t def
R16823:16823 compcert.lib.Maps <> A:293 var
binder 16818:16818 <> m:297
R16846:16848 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16831:16833 compcert.lib.Maps PTree get def
R16838:16840 compcert.lib.Maps PTree map def
R16844:16844 compcert.lib.Maps <> m:297 var
R16842:16842 compcert.lib.Maps <> f:295 var
R16835:16835 compcert.lib.Maps <> i:296 var
R16849:16858 compcert.lib.Coqlib <> option_map def
R16867:16869 compcert.lib.Maps PTree get def
R16873:16873 compcert.lib.Maps <> m:297 var
R16871:16871 compcert.lib.Maps <> i:296 var
R16861:16861 compcert.lib.Maps <> f:295 var
R16863:16863 compcert.lib.Maps <> i:296 var
R16919:16921 compcert.lib.Maps PTree map def
R16936:16940 compcert.lib.Maps PTree xgmap thm
R16936:16940 compcert.lib.Maps PTree xgmap thm
R16936:16940 compcert.lib.Maps PTree xgmap thm
R16966:16980 compcert.lib.Maps PTree prev_involutive thm
R16966:16980 compcert.lib.Maps PTree prev_involutive thm
def 17005:17008 PTree map1
binder 17011:17011 <> A:298
binder 17013:17013 <> B:299
R17027:17030 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17031:17031 compcert.lib.Maps <> B:299 var
R17026:17026 compcert.lib.Maps <> A:298 var
binder 17023:17023 <> f:300
R17038:17038 compcert.lib.Maps PTree t def
R17040:17040 compcert.lib.Maps <> A:298 var
binder 17035:17035 <> m:301
R17056:17056 compcert.lib.Maps PTree t def
R17058:17058 compcert.lib.Maps <> B:299 var
R17073:17073 compcert.lib.Maps <> m:301 var
R17086:17089 compcert.lib.Maps PTree Leaf constr
R17094:17097 compcert.lib.Maps PTree Leaf constr
R17105:17108 compcert.lib.Maps PTree Node constr
R17119:17122 compcert.lib.Maps PTree Node constr
R17153:17156 compcert.lib.Maps <> map1:302 def
R17158:17158 compcert.lib.Maps <> f:300 var
R17136:17145 compcert.lib.Coqlib <> option_map def
R17147:17147 compcert.lib.Maps <> f:300 var
R17125:17128 compcert.lib.Maps <> map1:302 def
R17130:17130 compcert.lib.Maps <> f:300 var
prf 17183:17187 PTree gmap1
binder 17202:17202 <> A:304
binder 17204:17204 <> B:305
R17218:17221 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17222:17222 compcert.lib.Maps <> B:305 var
R17217:17217 compcert.lib.Maps <> A:304 var
binder 17214:17214 <> f:306
R17229:17231 compcert.lib.Maps PTree elt def
binder 17226:17226 <> i:307
R17238:17238 compcert.lib.Maps PTree t def
R17240:17240 compcert.lib.Maps <> A:304 var
binder 17235:17235 <> m:308
R17264:17266 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17248:17250 compcert.lib.Maps PTree get def
R17255:17258 compcert.lib.Maps PTree map1 def
R17262:17262 compcert.lib.Maps <> m:308 var
R17260:17260 compcert.lib.Maps <> f:306 var
R17252:17252 compcert.lib.Maps <> i:307 var
R17267:17276 compcert.lib.Coqlib <> option_map def
R17281:17283 compcert.lib.Maps PTree get def
R17287:17287 compcert.lib.Maps <> m:308 var
R17285:17285 compcert.lib.Maps <> i:307 var
R17278:17278 compcert.lib.Maps <> f:306 var
def 17371:17375 PTree Node'
binder 17378:17378 <> A:309
R17391:17391 compcert.lib.Maps PTree t def
R17393:17393 compcert.lib.Maps <> A:309 var
binder 17388:17388 <> l:310
R17400:17405 Coq.Init.Datatypes <> option ind
R17407:17407 compcert.lib.Maps <> A:309 var
binder 17397:17397 <> x:311
R17414:17414 compcert.lib.Maps PTree t def
R17416:17416 compcert.lib.Maps <> A:309 var
binder 17411:17411 <> r:312
R17420:17420 compcert.lib.Maps PTree t def
R17422:17422 compcert.lib.Maps <> A:309 var
R17443:17443 compcert.lib.Maps <> r:312 var
R17440:17440 compcert.lib.Maps <> x:311 var
R17437:17437 compcert.lib.Maps <> l:310 var
R17456:17459 compcert.lib.Maps PTree Leaf constr
R17462:17465 Coq.Init.Datatypes <> None constr
R17468:17471 compcert.lib.Maps PTree Leaf constr
R17476:17479 compcert.lib.Maps PTree Leaf constr
R17498:17501 compcert.lib.Maps PTree Node constr
R17507:17507 compcert.lib.Maps <> r:312 var
R17505:17505 compcert.lib.Maps <> x:311 var
R17503:17503 compcert.lib.Maps <> l:310 var
prf 17527:17532 PTree gnode'
binder 17547:17547 <> A:316
R17562:17562 compcert.lib.Maps PTree t def
R17564:17564 compcert.lib.Maps <> A:316 var
binder 17557:17557 <> l:317
binder 17559:17559 <> r:318
R17571:17576 Coq.Init.Datatypes <> option ind
R17578:17578 compcert.lib.Maps <> A:316 var
binder 17568:17568 <> x:319
R17585:17592 Coq.Numbers.BinNums <> positive ind
binder 17582:17582 <> i:320
R17619:17621 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17600:17602 compcert.lib.Maps PTree get def
R17607:17611 compcert.lib.Maps PTree Node' def
R17617:17617 compcert.lib.Maps <> r:318 var
R17615:17615 compcert.lib.Maps <> x:319 var
R17613:17613 compcert.lib.Maps <> l:317 var
R17604:17604 compcert.lib.Maps <> i:320 var
R17622:17624 compcert.lib.Maps PTree get def
R17629:17632 compcert.lib.Maps PTree Node constr
R17638:17638 compcert.lib.Maps <> r:318 var
R17636:17636 compcert.lib.Maps <> x:319 var
R17634:17634 compcert.lib.Maps <> l:317 var
R17626:17626 compcert.lib.Maps <> i:320 var
R17670:17674 compcert.lib.Maps PTree Node' def
R17760:17764 compcert.lib.Maps PTree gleaf thm
R17760:17764 compcert.lib.Maps PTree gleaf thm
R17760:17764 compcert.lib.Maps PTree gleaf thm
R17760:17764 compcert.lib.Maps PTree gleaf thm
R17760:17764 compcert.lib.Maps PTree gleaf thm
def 17792:17798 PTree filter1
binder 17801:17801 <> A:321
R17818:17821 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17822:17825 Coq.Init.Datatypes <> bool ind
R17817:17817 compcert.lib.Maps <> A:321 var
binder 17811:17814 <> pred:322
R17832:17832 compcert.lib.Maps PTree t def
R17834:17834 compcert.lib.Maps <> A:321 var
binder 17829:17829 <> m:323
R17850:17850 compcert.lib.Maps PTree t def
R17852:17852 compcert.lib.Maps <> A:321 var
R17867:17867 compcert.lib.Maps <> m:323 var
R17880:17883 compcert.lib.Maps PTree Leaf constr
R17888:17891 compcert.lib.Maps PTree Leaf constr
R17899:17902 compcert.lib.Maps PTree Node constr
R17944:17947 Coq.Init.Datatypes <> None constr
R17952:17955 Coq.Init.Datatypes <> None constr
R17959:17962 Coq.Init.Datatypes <> Some constr
R17972:17975 compcert.lib.Maps <> pred:322 var
R17991:17994 Coq.Init.Datatypes <> None constr
binder 17925:17926 <> o':327
R18011:18015 compcert.lib.Maps PTree Node' def
R18038:18044 compcert.lib.Maps <> filter1:324 def
R18046:18049 compcert.lib.Maps <> pred:322 var
R18034:18035 compcert.lib.Maps <> o':327 var
R18018:18024 compcert.lib.Maps <> filter1:324 def
R18026:18029 compcert.lib.Maps <> pred:322 var
prf 18074:18081 PTree gfilter1
binder 18096:18096 <> A:328
R18113:18116 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18117:18120 Coq.Init.Datatypes <> bool ind
R18112:18112 compcert.lib.Maps <> A:328 var
binder 18106:18109 <> pred:329
R18127:18129 compcert.lib.Maps PTree elt def
binder 18124:18124 <> i:330
R18136:18136 compcert.lib.Maps PTree t def
R18138:18138 compcert.lib.Maps <> A:328 var
binder 18133:18133 <> m:331
R18168:18174 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18146:18148 compcert.lib.Maps PTree get def
R18153:18159 compcert.lib.Maps PTree filter1 def
R18166:18166 compcert.lib.Maps <> m:331 var
R18161:18164 compcert.lib.Maps <> pred:329 var
R18150:18150 compcert.lib.Maps <> i:330 var
R18181:18183 compcert.lib.Maps PTree get def
R18187:18187 compcert.lib.Maps <> m:331 var
R18185:18185 compcert.lib.Maps <> i:330 var
R18194:18197 Coq.Init.Datatypes <> None constr
R18202:18205 Coq.Init.Datatypes <> None constr
R18209:18212 Coq.Init.Datatypes <> Some constr
R18222:18225 compcert.lib.Maps <> pred:329 var
R18246:18249 Coq.Init.Datatypes <> None constr
R18234:18237 Coq.Init.Datatypes <> Some constr
R18337:18341 compcert.lib.Maps PTree gleaf thm
R18337:18341 compcert.lib.Maps PTree gleaf thm
R18337:18341 compcert.lib.Maps PTree gleaf thm
R18362:18367 compcert.lib.Maps PTree gnode' thm
R18362:18367 compcert.lib.Maps PTree gnode' thm
R18362:18367 compcert.lib.Maps PTree gnode' thm
sec 18431:18437 PTree COMBINE
var 18453:18453 PTree.COMBINE A
var 18455:18455 PTree.COMBINE B
var 18457:18457 PTree.COMBINE C
var 18477:18477 PTree.COMBINE f
R18488:18491 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18500:18503 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18504:18509 Coq.Init.Datatypes <> option ind
R18511:18511 compcert.lib.Maps <> PTree.COMBINE.C var
R18492:18497 Coq.Init.Datatypes <> option ind
R18499:18499 compcert.lib.Maps <> PTree.COMBINE.B var
R18480:18485 Coq.Init.Datatypes <> option ind
R18487:18487 compcert.lib.Maps <> PTree.COMBINE.A var
var 18527:18537 PTree.COMBINE f_none_none
R18551:18553 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18540:18540 compcert.lib.Maps <> PTree.COMBINE.f var
R18547:18550 Coq.Init.Datatypes <> None constr
R18542:18545 Coq.Init.Datatypes <> None constr
R18554:18557 Coq.Init.Datatypes <> None constr
def 18572:18581 PTree xcombine_l
R18588:18588 compcert.lib.Maps PTree t def
R18590:18590 compcert.lib.Maps <> PTree.COMBINE.A var
binder 18584:18584 <> m:337
R18606:18606 compcert.lib.Maps PTree t def
R18608:18608 compcert.lib.Maps <> PTree.COMBINE.C var
R18625:18625 compcert.lib.Maps <> m:337 var
R18640:18643 compcert.lib.Maps PTree Leaf constr
R18648:18651 compcert.lib.Maps PTree Leaf constr
R18661:18664 compcert.lib.Maps PTree Node constr
R18675:18679 compcert.lib.Maps PTree Node' def
R18708:18717 compcert.lib.Maps <> xcombine_l:338 def
R18697:18697 compcert.lib.Maps <> PTree.COMBINE.f var
R18701:18704 Coq.Init.Datatypes <> None constr
R18682:18691 compcert.lib.Maps <> xcombine_l:338 def
prf 18742:18752 PTree xgcombine_l
R18777:18777 compcert.lib.Maps PTree t def
R18779:18779 compcert.lib.Maps <> PTree.COMBINE.A var
binder 18774:18774 <> m:340
R18787:18794 Coq.Numbers.BinNums <> positive ind
binder 18783:18783 <> i:341
R18828:18830 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18808:18810 compcert.lib.Maps PTree get def
R18815:18824 compcert.lib.Maps PTree xcombine_l def
R18826:18826 compcert.lib.Maps <> m:340 var
R18812:18812 compcert.lib.Maps <> i:341 var
R18831:18831 compcert.lib.Maps <> PTree.COMBINE.f var
R18843:18846 Coq.Init.Datatypes <> None constr
R18834:18836 compcert.lib.Maps PTree get def
R18840:18840 compcert.lib.Maps <> m:340 var
R18838:18838 compcert.lib.Maps <> i:341 var
R18915:18919 compcert.lib.Maps PTree gleaf thm
R18915:18919 compcert.lib.Maps PTree gleaf thm
R18915:18919 compcert.lib.Maps PTree gleaf thm
R18915:18919 compcert.lib.Maps PTree gleaf thm
R18915:18919 compcert.lib.Maps PTree gleaf thm
R18915:18919 compcert.lib.Maps PTree gleaf thm
R18942:18947 compcert.lib.Maps PTree gnode' thm
R18942:18947 compcert.lib.Maps PTree gnode' thm
R18942:18947 compcert.lib.Maps PTree gnode' thm
def 18996:19005 PTree xcombine_r
R19012:19012 compcert.lib.Maps PTree t def
R19014:19014 compcert.lib.Maps <> PTree.COMBINE.B var
binder 19008:19008 <> m:342
R19030:19030 compcert.lib.Maps PTree t def
R19032:19032 compcert.lib.Maps <> PTree.COMBINE.C var
R19049:19049 compcert.lib.Maps <> m:342 var
R19064:19067 compcert.lib.Maps PTree Leaf constr
R19072:19075 compcert.lib.Maps PTree Leaf constr
R19085:19088 compcert.lib.Maps PTree Node constr
R19099:19103 compcert.lib.Maps PTree Node' def
R19132:19141 compcert.lib.Maps <> xcombine_r:343 def
R19121:19121 compcert.lib.Maps <> PTree.COMBINE.f var
R19123:19126 Coq.Init.Datatypes <> None constr
R19106:19115 compcert.lib.Maps <> xcombine_r:343 def
prf 19166:19176 PTree xgcombine_r
R19201:19201 compcert.lib.Maps PTree t def
R19203:19203 compcert.lib.Maps <> PTree.COMBINE.B var
binder 19198:19198 <> m:345
R19211:19218 Coq.Numbers.BinNums <> positive ind
binder 19207:19207 <> i:346
R19252:19254 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19232:19234 compcert.lib.Maps PTree get def
R19239:19248 compcert.lib.Maps PTree xcombine_r def
R19250:19250 compcert.lib.Maps <> m:345 var
R19236:19236 compcert.lib.Maps <> i:346 var
R19255:19255 compcert.lib.Maps <> PTree.COMBINE.f var
R19263:19265 compcert.lib.Maps PTree get def
R19269:19269 compcert.lib.Maps <> m:345 var
R19267:19267 compcert.lib.Maps <> i:346 var
R19257:19260 Coq.Init.Datatypes <> None constr
R19339:19343 compcert.lib.Maps PTree gleaf thm
R19339:19343 compcert.lib.Maps PTree gleaf thm
R19339:19343 compcert.lib.Maps PTree gleaf thm
R19339:19343 compcert.lib.Maps PTree gleaf thm
R19339:19343 compcert.lib.Maps PTree gleaf thm
R19339:19343 compcert.lib.Maps PTree gleaf thm
R19366:19371 compcert.lib.Maps PTree gnode' thm
R19366:19371 compcert.lib.Maps PTree gnode' thm
R19366:19371 compcert.lib.Maps PTree gnode' thm
def 19420:19426 PTree combine
R19433:19433 compcert.lib.Maps PTree t def
R19435:19435 compcert.lib.Maps <> PTree.COMBINE.A var
binder 19429:19430 <> m1:347
R19443:19443 compcert.lib.Maps PTree t def
R19445:19445 compcert.lib.Maps <> PTree.COMBINE.B var
binder 19439:19440 <> m2:348
R19462:19462 compcert.lib.Maps PTree t def
R19464:19464 compcert.lib.Maps <> PTree.COMBINE.C var
R19479:19480 compcert.lib.Maps <> m1:347 var
R19493:19496 compcert.lib.Maps PTree Leaf constr
R19501:19510 compcert.lib.Maps PTree xcombine_r def
R19512:19513 compcert.lib.Maps <> m2:348 var
R19521:19524 compcert.lib.Maps PTree Node constr
R19552:19553 compcert.lib.Maps <> m2:348 var
R19570:19573 compcert.lib.Maps PTree Leaf constr
R19578:19587 compcert.lib.Maps PTree xcombine_l def
R19589:19590 compcert.lib.Maps <> m1:347 var
R19602:19605 compcert.lib.Maps PTree Node constr
R19619:19623 compcert.lib.Maps PTree Node' def
R19652:19658 compcert.lib.Maps <> combine:349 def
R19642:19642 compcert.lib.Maps <> PTree.COMBINE.f var
R19626:19632 compcert.lib.Maps <> combine:349 def
prf 19699:19706 PTree gcombine
R19727:19727 compcert.lib.Maps PTree t def
R19729:19729 compcert.lib.Maps <> PTree.COMBINE.A var
binder 19723:19724 <> m1:352
R19737:19737 compcert.lib.Maps PTree t def
R19739:19739 compcert.lib.Maps <> PTree.COMBINE.B var
binder 19733:19734 <> m2:353
R19746:19753 Coq.Numbers.BinNums <> positive ind
binder 19743:19743 <> i:354
R19784:19786 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19763:19765 compcert.lib.Maps PTree get def
R19770:19776 compcert.lib.Maps PTree combine def
R19781:19782 compcert.lib.Maps <> m2:353 var
R19778:19779 compcert.lib.Maps <> m1:352 var
R19767:19767 compcert.lib.Maps <> i:354 var
R19787:19787 compcert.lib.Maps <> PTree.COMBINE.f var
R19801:19803 compcert.lib.Maps PTree get def
R19807:19808 compcert.lib.Maps <> m2:353 var
R19805:19805 compcert.lib.Maps <> i:354 var
R19790:19792 compcert.lib.Maps PTree get def
R19796:19797 compcert.lib.Maps <> m1:352 var
R19794:19794 compcert.lib.Maps <> i:354 var
R19866:19870 compcert.lib.Maps PTree gleaf thm
R19866:19870 compcert.lib.Maps PTree gleaf thm
R19866:19870 compcert.lib.Maps PTree gleaf thm
R19879:19889 compcert.lib.Maps PTree xgcombine_r thm
R19879:19889 compcert.lib.Maps PTree xgcombine_r thm
R19928:19932 compcert.lib.Maps PTree gleaf thm
R19928:19932 compcert.lib.Maps PTree gleaf thm
R19928:19932 compcert.lib.Maps PTree gleaf thm
R19946:19956 compcert.lib.Maps PTree xgcombine_l thm
R19946:19956 compcert.lib.Maps PTree xgcombine_l thm
R19946:19956 compcert.lib.Maps PTree xgcombine_l thm
R19984:19989 compcert.lib.Maps PTree gnode' thm
R19984:19989 compcert.lib.Maps PTree gnode' thm
R19984:19989 compcert.lib.Maps PTree gnode' thm
R19984:19989 compcert.lib.Maps PTree gnode' thm
R20031:20037 compcert.lib.Maps PTree.COMBINE <> sec
prf 20049:20059 PTree xcombine_lr
binder 20075:20075 <> A:355
binder 20077:20077 <> B:356
R20101:20104 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20113:20116 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20117:20122 Coq.Init.Datatypes <> option ind
R20124:20124 compcert.lib.Maps <> B:356 var
R20105:20110 Coq.Init.Datatypes <> option ind
R20112:20112 compcert.lib.Maps <> A:355 var
R20093:20098 Coq.Init.Datatypes <> option ind
R20100:20100 compcert.lib.Maps <> A:355 var
binder 20087:20087 <> f:357
binder 20089:20089 <> g:358
R20132:20132 compcert.lib.Maps PTree t def
R20134:20134 compcert.lib.Maps <> A:355 var
binder 20128:20128 <> m:359
R20142:20142 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20181:20189 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20204:20206 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20190:20199 compcert.lib.Maps PTree xcombine_l def
R20203:20203 compcert.lib.Maps <> m:359 var
R20201:20201 compcert.lib.Maps <> f:357 var
R20207:20216 compcert.lib.Maps PTree xcombine_r def
R20220:20220 compcert.lib.Maps <> m:359 var
R20218:20218 compcert.lib.Maps <> g:358 var
R20157:20162 Coq.Init.Datatypes <> option ind
R20164:20164 compcert.lib.Maps <> A:355 var
binder 20151:20151 <> i:360
binder 20153:20153 <> j:361
R20173:20175 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20168:20168 compcert.lib.Maps <> f:357 var
R20172:20172 compcert.lib.Maps <> j:361 var
R20170:20170 compcert.lib.Maps <> i:360 var
R20176:20176 compcert.lib.Maps <> g:358 var
R20180:20180 compcert.lib.Maps <> i:360 var
R20178:20178 compcert.lib.Maps <> j:361 var
prf 20369:20382 PTree combine_commut
binder 20397:20397 <> A:362
binder 20399:20399 <> B:363
R20422:20425 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20434:20437 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20438:20443 Coq.Init.Datatypes <> option ind
R20445:20445 compcert.lib.Maps <> B:363 var
R20426:20431 Coq.Init.Datatypes <> option ind
R20433:20433 compcert.lib.Maps <> A:362 var
R20414:20419 Coq.Init.Datatypes <> option ind
R20421:20421 compcert.lib.Maps <> A:362 var
binder 20409:20409 <> f:364
binder 20411:20411 <> g:365
R20453:20453 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20491:20499 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20515:20515 compcert.lib.Maps PTree t def
R20517:20517 compcert.lib.Maps <> A:362 var
binder 20508:20509 <> m1:366
binder 20511:20512 <> m2:367
R20540:20542 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20525:20531 compcert.lib.Maps PTree combine def
R20538:20539 compcert.lib.Maps <> m2:367 var
R20535:20536 compcert.lib.Maps <> m1:366 var
R20533:20533 compcert.lib.Maps <> f:364 var
R20543:20549 compcert.lib.Maps PTree combine def
R20556:20557 compcert.lib.Maps <> m1:366 var
R20553:20554 compcert.lib.Maps <> m2:367 var
R20551:20551 compcert.lib.Maps <> g:365 var
R20467:20472 Coq.Init.Datatypes <> option ind
R20474:20474 compcert.lib.Maps <> A:362 var
binder 20462:20462 <> i:368
binder 20464:20464 <> j:369
R20483:20485 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20478:20478 compcert.lib.Maps <> f:364 var
R20482:20482 compcert.lib.Maps <> j:369 var
R20480:20480 compcert.lib.Maps <> i:368 var
R20486:20486 compcert.lib.Maps <> g:365 var
R20490:20490 compcert.lib.Maps <> i:368 var
R20488:20488 compcert.lib.Maps <> j:369 var
R20623:20628 Coq.Init.Datatypes <> option ind
binder 20618:20618 <> i:370
binder 20620:20620 <> j:371
R20639:20641 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20638:20638 compcert.lib.Maps <> j:371 var
R20636:20636 compcert.lib.Maps <> i:370 var
R20646:20646 compcert.lib.Maps <> i:370 var
R20644:20644 compcert.lib.Maps <> j:371 var
R20623:20628 Coq.Init.Datatypes <> option ind
binder 20618:20618 <> i:372
binder 20620:20620 <> j:373
R20639:20641 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20638:20638 compcert.lib.Maps <> j:373 var
R20636:20636 compcert.lib.Maps <> i:372 var
R20646:20646 compcert.lib.Maps <> i:372 var
R20644:20644 compcert.lib.Maps <> j:373 var
R20761:20771 compcert.lib.Maps PTree xcombine_lr thm
R20801:20811 compcert.lib.Maps PTree xcombine_lr thm
R20761:20771 compcert.lib.Maps PTree xcombine_lr thm
R20761:20771 compcert.lib.Maps PTree xcombine_lr thm
R20761:20771 compcert.lib.Maps PTree xcombine_lr thm
R20761:20771 compcert.lib.Maps PTree xcombine_lr thm
R20761:20771 compcert.lib.Maps PTree xcombine_lr thm
R20761:20771 compcert.lib.Maps PTree xcombine_lr thm
R20761:20771 compcert.lib.Maps PTree xcombine_lr thm
R20761:20771 compcert.lib.Maps PTree xcombine_lr thm
R20761:20771 compcert.lib.Maps PTree xcombine_lr thm
R20761:20771 compcert.lib.Maps PTree xcombine_lr thm
R20761:20771 compcert.lib.Maps PTree xcombine_lr thm
R20761:20771 compcert.lib.Maps PTree xcombine_lr thm
R20801:20811 compcert.lib.Maps PTree xcombine_lr thm
R20801:20811 compcert.lib.Maps PTree xcombine_lr thm
R20801:20811 compcert.lib.Maps PTree xcombine_lr thm
R20801:20811 compcert.lib.Maps PTree xcombine_lr thm
R20801:20811 compcert.lib.Maps PTree xcombine_lr thm
R20801:20811 compcert.lib.Maps PTree xcombine_lr thm
R20801:20811 compcert.lib.Maps PTree xcombine_lr thm
R20801:20811 compcert.lib.Maps PTree xcombine_lr thm
R20801:20811 compcert.lib.Maps PTree xcombine_lr thm
R20801:20811 compcert.lib.Maps PTree xcombine_lr thm
R20801:20811 compcert.lib.Maps PTree xcombine_lr thm
R20801:20811 compcert.lib.Maps PTree xcombine_lr thm
R20801:20811 compcert.lib.Maps PTree xcombine_lr thm
R20801:20811 compcert.lib.Maps PTree xcombine_lr thm
def 20905:20913 PTree xelements
binder 20916:20916 <> A:374
R20931:20931 compcert.lib.Maps PTree t def
R20933:20933 compcert.lib.Maps <> A:374 var
binder 20927:20927 <> m:375
R20941:20948 Coq.Numbers.BinNums <> positive ind
binder 20937:20937 <> i:376
R20978:20981 Coq.Init.Datatypes <> list ind
R20992:20994 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R20984:20991 Coq.Numbers.BinNums <> positive ind
R20995:20995 compcert.lib.Maps <> A:374 var
binder 20975:20975 <> k:377
R21035:21038 Coq.Init.Datatypes <> list ind
R21049:21051 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R21041:21048 Coq.Numbers.BinNums <> positive ind
R21052:21052 compcert.lib.Maps <> A:374 var
R21070:21070 compcert.lib.Maps <> m:375 var
R21085:21088 compcert.lib.Maps PTree Leaf constr
R21093:21093 compcert.lib.Maps <> k:377 var
R21103:21106 compcert.lib.Maps PTree Node constr
R21110:21113 Coq.Init.Datatypes <> None constr
R21130:21138 compcert.lib.Maps <> xelements:378 def
R21150:21158 compcert.lib.Maps <> xelements:378 def
R21169:21169 compcert.lib.Maps <> k:377 var
R21163:21164 Coq.Numbers.BinNums <> xI constr
R21166:21166 compcert.lib.Maps <> i:376 var
R21143:21144 Coq.Numbers.BinNums <> xO constr
R21146:21146 compcert.lib.Maps <> i:376 var
R21180:21183 compcert.lib.Maps PTree Node constr
R21188:21191 Coq.Init.Datatypes <> Some constr
R21211:21219 compcert.lib.Maps <> xelements:378 def
R21254:21257 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R21243:21243 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21250:21251 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21253:21253 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21244:21247 compcert.lib.Maps PTree prev def
R21249:21249 compcert.lib.Maps <> i:376 var
R21258:21266 compcert.lib.Maps <> xelements:378 def
R21277:21277 compcert.lib.Maps <> k:377 var
R21271:21272 Coq.Numbers.BinNums <> xI constr
R21274:21274 compcert.lib.Maps <> i:376 var
R21224:21225 Coq.Numbers.BinNums <> xO constr
R21227:21227 compcert.lib.Maps <> i:376 var
def 21305:21312 PTree elements
binder 21315:21315 <> A:380
R21329:21329 compcert.lib.Maps PTree t def
R21331:21331 compcert.lib.Maps <> A:380 var
binder 21325:21325 <> m:381
R21337:21345 compcert.lib.Maps PTree xelements def
R21352:21354 Coq.Init.Datatypes <> nil constr
R21349:21350 Coq.Numbers.BinNums <> xH constr
R21347:21347 compcert.lib.Maps <> m:381 var
prf 21367:21382 PTree xelements_append
binder 21396:21396 <> A:382
R21402:21402 compcert.lib.Maps PTree t def
R21404:21404 compcert.lib.Maps <> A:382 var
binder 21399:21399 <> m:383
binder 21407:21407 <> i:384
binder 21409:21410 <> k1:385
binder 21412:21413 <> k2:386
R21444:21446 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21420:21428 compcert.lib.Maps PTree xelements def
R21437:21440 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R21435:21436 compcert.lib.Maps <> k1:385 var
R21441:21442 compcert.lib.Maps <> k2:386 var
R21432:21432 compcert.lib.Maps <> i:384 var
R21430:21430 compcert.lib.Maps <> m:383 var
R21463:21466 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R21447:21455 compcert.lib.Maps PTree xelements def
R21461:21462 compcert.lib.Maps <> k1:385 var
R21459:21459 compcert.lib.Maps <> i:384 var
R21457:21457 compcert.lib.Maps <> m:383 var
R21467:21468 compcert.lib.Maps <> k2:386 var
prf 21592:21605 PTree xelements_leaf
binder 21619:21619 <> A:387
binder 21621:21621 <> i:388
R21649:21651 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21624:21632 compcert.lib.Maps PTree xelements def
R21646:21648 Coq.Init.Datatypes <> nil constr
R21644:21644 compcert.lib.Maps <> i:388 var
R21636:21639 compcert.lib.Maps PTree Leaf constr
R21641:21641 compcert.lib.Maps <> A:387 var
R21652:21654 Coq.Init.Datatypes <> nil constr
prf 21708:21721 PTree xelements_node
binder 21735:21735 <> A:389
R21742:21742 compcert.lib.Maps PTree t def
R21744:21744 compcert.lib.Maps <> A:389 var
binder 21738:21739 <> m1:390
binder 21747:21747 <> o:391
R21754:21754 compcert.lib.Maps PTree t def
R21756:21756 compcert.lib.Maps <> A:389 var
binder 21750:21751 <> m2:392
binder 21759:21759 <> i:393
R21796:21805 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21766:21774 compcert.lib.Maps PTree xelements def
R21793:21795 Coq.Init.Datatypes <> nil constr
R21791:21791 compcert.lib.Maps <> i:393 var
R21777:21780 compcert.lib.Maps PTree Node constr
R21787:21788 compcert.lib.Maps <> m2:392 var
R21785:21785 compcert.lib.Maps <> o:391 var
R21782:21783 compcert.lib.Maps <> m1:390 var
R21829:21836 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R21806:21814 compcert.lib.Maps PTree xelements def
R21826:21828 Coq.Init.Datatypes <> nil constr
R21820:21821 Coq.Numbers.BinNums <> xO constr
R21823:21823 compcert.lib.Maps <> i:393 var
R21816:21817 compcert.lib.Maps <> m1:390 var
R21896:21903 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R21843:21843 compcert.lib.Maps <> o:391 var
R21850:21853 Coq.Init.Datatypes <> None constr
R21858:21860 Coq.Init.Datatypes <> nil constr
R21864:21867 Coq.Init.Datatypes <> Some constr
R21885:21888 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R21874:21874 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21881:21882 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21884:21884 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21875:21878 compcert.lib.Maps PTree prev def
R21880:21880 compcert.lib.Maps <> i:393 var
R21889:21891 Coq.Init.Datatypes <> nil constr
R21904:21912 compcert.lib.Maps PTree xelements def
R21924:21926 Coq.Init.Datatypes <> nil constr
R21918:21919 Coq.Numbers.BinNums <> xI constr
R21921:21921 compcert.lib.Maps <> i:393 var
R21914:21915 compcert.lib.Maps <> m2:392 var
R21987:22002 compcert.lib.Maps PTree xelements_append thm
R21987:22002 compcert.lib.Maps PTree xelements_append thm
R21987:22002 compcert.lib.Maps PTree xelements_append thm
R21987:22002 compcert.lib.Maps PTree xelements_append thm
R21987:22002 compcert.lib.Maps PTree xelements_append thm
prf 22029:22042 PTree xelements_incl
binder 22059:22059 <> A:395
R22072:22072 compcert.lib.Maps PTree t def
R22074:22074 compcert.lib.Maps <> A:395 var
binder 22069:22069 <> m:396
R22082:22089 Coq.Numbers.BinNums <> positive ind
binder 22078:22078 <> i:397
binder 22092:22092 <> k:398
binder 22094:22094 <> x:399
R22109:22112 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22113:22114 Coq.Lists.List <> In def
R22119:22127 compcert.lib.Maps PTree xelements def
R22133:22133 compcert.lib.Maps <> k:398 var
R22131:22131 compcert.lib.Maps <> i:397 var
R22129:22129 compcert.lib.Maps <> m:396 var
R22116:22116 compcert.lib.Maps <> x:399 var
R22103:22104 Coq.Lists.List <> In def
R22108:22108 compcert.lib.Maps <> k:398 var
R22106:22106 compcert.lib.Maps <> x:399 var
prf 22282:22298 PTree xelements_correct
binder 22315:22315 <> A:400
R22328:22328 compcert.lib.Maps PTree t def
R22330:22330 compcert.lib.Maps <> A:400 var
binder 22325:22325 <> m:401
R22340:22347 Coq.Numbers.BinNums <> positive ind
binder 22334:22334 <> i:402
binder 22336:22336 <> j:403
R22354:22354 compcert.lib.Maps <> A:400 var
binder 22351:22351 <> v:404
binder 22357:22357 <> k:405
R22382:22385 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22386:22387 Coq.Lists.List <> In def
R22418:22426 compcert.lib.Maps PTree xelements def
R22432:22432 compcert.lib.Maps <> k:405 var
R22430:22430 compcert.lib.Maps <> j:403 var
R22428:22428 compcert.lib.Maps <> m:401 var
R22389:22389 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22412:22413 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22415:22415 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22390:22393 compcert.lib.Maps PTree prev def
R22396:22406 compcert.lib.Maps PTree prev_append def
R22410:22410 compcert.lib.Maps <> j:403 var
R22408:22408 compcert.lib.Maps <> i:402 var
R22414:22414 compcert.lib.Maps <> v:404 var
R22373:22375 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22366:22368 compcert.lib.Maps PTree get def
R22372:22372 compcert.lib.Maps <> m:401 var
R22370:22370 compcert.lib.Maps <> i:402 var
R22376:22379 Coq.Init.Datatypes <> Some constr
R22381:22381 compcert.lib.Maps <> v:404 var
R22490:22494 compcert.lib.Maps PTree gleaf thm
R22490:22494 compcert.lib.Maps PTree gleaf thm
R22490:22494 compcert.lib.Maps PTree gleaf thm
R22583:22596 compcert.lib.Maps PTree xelements_incl thm
R22583:22596 compcert.lib.Maps PTree xelements_incl thm
R22647:22660 compcert.lib.Maps PTree xelements_incl thm
R22647:22660 compcert.lib.Maps PTree xelements_incl thm
R22696:22709 compcert.lib.Maps PTree xelements_incl thm
R22696:22709 compcert.lib.Maps PTree xelements_incl thm
prf 22767:22782 PTree elements_correct
binder 22797:22797 <> A:406
R22810:22810 compcert.lib.Maps PTree t def
R22812:22812 compcert.lib.Maps <> A:406 var
binder 22807:22807 <> m:407
R22819:22826 Coq.Numbers.BinNums <> positive ind
binder 22816:22816 <> i:408
R22833:22833 compcert.lib.Maps <> A:406 var
binder 22830:22830 <> v:409
R22857:22860 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22861:22862 Coq.Lists.List <> In def
R22872:22879 compcert.lib.Maps PTree elements def
R22881:22881 compcert.lib.Maps <> m:407 var
R22864:22864 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22866:22867 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22869:22869 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22865:22865 compcert.lib.Maps <> i:408 var
R22868:22868 compcert.lib.Maps <> v:409 var
R22848:22850 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22841:22843 compcert.lib.Maps PTree get def
R22847:22847 compcert.lib.Maps <> m:407 var
R22845:22845 compcert.lib.Maps <> i:408 var
R22851:22854 Coq.Init.Datatypes <> Some constr
R22856:22856 compcert.lib.Maps <> v:409 var
R22932:22948 compcert.lib.Maps PTree xelements_correct thm
R22957:22959 Coq.Init.Datatypes <> nil constr
R22954:22955 Coq.Numbers.BinNums <> xH constr
R22932:22948 compcert.lib.Maps PTree xelements_correct thm
R22957:22959 Coq.Init.Datatypes <> nil constr
R22954:22955 Coq.Numbers.BinNums <> xH constr
R22973:22988 compcert.lib.Maps PTree prev_append_prev thm
R22973:22988 compcert.lib.Maps PTree prev_append_prev thm
R22973:22988 compcert.lib.Maps PTree prev_append_prev thm
R22997:22998 Coq.Init.Datatypes <> id def
R22997:22998 Coq.Init.Datatypes <> id def
prf 23017:23028 PTree in_xelements
binder 23043:23043 <> A:410
R23056:23056 compcert.lib.Maps PTree t def
R23058:23058 compcert.lib.Maps <> A:410 var
binder 23053:23053 <> m:411
R23067:23074 Coq.Numbers.BinNums <> positive ind
binder 23062:23062 <> i:412
binder 23064:23064 <> k:413
R23081:23081 compcert.lib.Maps <> A:410 var
binder 23078:23078 <> v:414
R23119:23126 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23127:23133 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23135:23136 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 23134:23134 <> j:415
R23163:23166 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23138:23140 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23137:23137 compcert.lib.Maps <> k:413 var
R23141:23144 compcert.lib.Maps PTree prev def
R23147:23157 compcert.lib.Maps PTree prev_append def
R23161:23161 compcert.lib.Maps <> i:412 var
R23159:23159 compcert.lib.Maps <> j:415 var
R23174:23176 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23167:23169 compcert.lib.Maps PTree get def
R23173:23173 compcert.lib.Maps <> m:411 var
R23171:23171 compcert.lib.Maps <> j:415 var
R23177:23180 Coq.Init.Datatypes <> Some constr
R23182:23182 compcert.lib.Maps <> v:414 var
R23090:23091 Coq.Lists.List <> In def
R23101:23109 compcert.lib.Maps PTree xelements def
R23115:23117 Coq.Init.Datatypes <> nil constr
R23113:23113 compcert.lib.Maps <> i:412 var
R23111:23111 compcert.lib.Maps <> m:411 var
R23093:23093 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23095:23096 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23098:23098 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23094:23094 compcert.lib.Maps <> k:413 var
R23097:23097 compcert.lib.Maps <> v:414 var
R23231:23244 compcert.lib.Maps PTree xelements_leaf thm
R23231:23244 compcert.lib.Maps PTree xelements_leaf thm
R23231:23244 compcert.lib.Maps PTree xelements_leaf thm
R23279:23292 compcert.lib.Maps PTree xelements_node thm
R23279:23292 compcert.lib.Maps PTree xelements_node thm
R23279:23292 compcert.lib.Maps PTree xelements_node thm
R23310:23319 Coq.Lists.List <> in_app_iff thm
R23310:23319 Coq.Lists.List <> in_app_iff thm
R23310:23319 Coq.Lists.List <> in_app_iff thm
R23310:23319 Coq.Lists.List <> in_app_iff thm
R23310:23319 Coq.Lists.List <> in_app_iff thm
R23411:23412 Coq.Numbers.BinNums <> xO constr
R23411:23412 Coq.Numbers.BinNums <> xO constr
R23484:23485 Coq.Numbers.BinNums <> xH constr
R23484:23485 Coq.Numbers.BinNums <> xH constr
R23549:23550 Coq.Numbers.BinNums <> xI constr
R23549:23550 Coq.Numbers.BinNums <> xI constr
prf 23580:23596 PTree elements_complete
binder 23611:23611 <> A:416
R23624:23624 compcert.lib.Maps PTree t def
R23626:23626 compcert.lib.Maps <> A:416 var
binder 23621:23621 <> m:417
R23633:23640 Coq.Numbers.BinNums <> positive ind
binder 23630:23630 <> i:418
R23647:23647 compcert.lib.Maps <> A:416 var
binder 23644:23644 <> v:419
R23677:23680 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23688:23690 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23681:23683 compcert.lib.Maps PTree get def
R23687:23687 compcert.lib.Maps <> m:417 var
R23685:23685 compcert.lib.Maps <> i:418 var
R23691:23694 Coq.Init.Datatypes <> Some constr
R23696:23696 compcert.lib.Maps <> v:419 var
R23655:23656 Coq.Lists.List <> In def
R23666:23673 compcert.lib.Maps PTree elements def
R23675:23675 compcert.lib.Maps <> m:417 var
R23658:23658 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23660:23661 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23663:23663 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23659:23659 compcert.lib.Maps <> i:418 var
R23662:23662 compcert.lib.Maps <> v:419 var
R23719:23726 compcert.lib.Maps PTree elements def
R23755:23766 compcert.lib.Maps PTree in_xelements thm
R23808:23823 compcert.lib.Maps PTree prev_append_prev thm
R23808:23823 compcert.lib.Maps PTree prev_append_prev thm
R23808:23823 compcert.lib.Maps PTree prev_append_prev thm
R23846:23856 compcert.lib.Maps PTree prev_append def
R23846:23856 compcert.lib.Maps PTree prev_append def
R23881:23895 compcert.lib.Maps PTree prev_append_inj thm
def 23946:23950 PTree xkeys
binder 23953:23953 <> A:420
R23966:23966 compcert.lib.Maps PTree t def
R23968:23968 compcert.lib.Maps <> A:420 var
binder 23963:23963 <> m:421
R23975:23982 Coq.Numbers.BinNums <> positive ind
binder 23972:23972 <> i:422
R23992:23999 Coq.Lists.List <> map def
R24020:24028 compcert.lib.Maps PTree xelements def
R24034:24036 Coq.Init.Datatypes <> nil constr
R24032:24032 compcert.lib.Maps <> i:422 var
R24030:24030 compcert.lib.Maps <> m:421 var
R24003:24005 Coq.Init.Datatypes <> fst def
R24016:24016 compcert.lib.Maps <> A:420 var
R24007:24014 Coq.Numbers.BinNums <> positive ind
prf 24050:24059 PTree xkeys_leaf
binder 24073:24073 <> A:423
binder 24075:24075 <> i:424
R24095:24097 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24078:24082 compcert.lib.Maps PTree xkeys def
R24094:24094 compcert.lib.Maps <> i:424 var
R24086:24089 compcert.lib.Maps PTree Leaf constr
R24091:24091 compcert.lib.Maps <> A:423 var
R24098:24100 Coq.Init.Datatypes <> nil constr
prf 24154:24163 PTree xkeys_node
binder 24177:24177 <> A:425
R24184:24184 compcert.lib.Maps PTree t def
R24186:24186 compcert.lib.Maps <> A:425 var
binder 24180:24181 <> m1:426
binder 24189:24189 <> o:427
R24196:24196 compcert.lib.Maps PTree t def
R24198:24198 compcert.lib.Maps <> A:425 var
binder 24192:24193 <> m2:428
binder 24201:24201 <> i:429
R24230:24239 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24208:24212 compcert.lib.Maps PTree xkeys def
R24229:24229 compcert.lib.Maps <> i:429 var
R24215:24218 compcert.lib.Maps PTree Node constr
R24225:24226 compcert.lib.Maps <> m2:428 var
R24223:24223 compcert.lib.Maps <> o:427 var
R24220:24221 compcert.lib.Maps <> m1:426 var
R24255:24262 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R24240:24244 compcert.lib.Maps PTree xkeys def
R24250:24251 Coq.Numbers.BinNums <> xO constr
R24253:24253 compcert.lib.Maps <> i:429 var
R24246:24247 compcert.lib.Maps <> m1:426 var
R24317:24324 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R24269:24269 compcert.lib.Maps <> o:427 var
R24276:24279 Coq.Init.Datatypes <> None constr
R24284:24286 Coq.Init.Datatypes <> nil constr
R24290:24293 Coq.Init.Datatypes <> Some constr
R24306:24309 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R24300:24303 compcert.lib.Maps PTree prev def
R24305:24305 compcert.lib.Maps <> i:429 var
R24310:24312 Coq.Init.Datatypes <> nil constr
R24325:24329 compcert.lib.Maps PTree xkeys def
R24335:24336 Coq.Numbers.BinNums <> xI constr
R24338:24338 compcert.lib.Maps <> i:429 var
R24331:24332 compcert.lib.Maps <> m2:428 var
R24370:24374 compcert.lib.Maps PTree xkeys def
R24385:24398 compcert.lib.Maps PTree xelements_node thm
R24385:24398 compcert.lib.Maps PTree xelements_node thm
R24385:24398 compcert.lib.Maps PTree xelements_node thm
R24411:24417 Coq.Lists.List <> map_app thm
R24411:24417 Coq.Lists.List <> map_app thm
R24411:24417 Coq.Lists.List <> map_app thm
R24411:24417 Coq.Lists.List <> map_app thm
R24411:24417 Coq.Lists.List <> map_app thm
prf 24454:24461 PTree in_xkeys
binder 24476:24476 <> A:431
R24489:24489 compcert.lib.Maps PTree t def
R24491:24491 compcert.lib.Maps <> A:431 var
binder 24486:24486 <> m:432
R24500:24507 Coq.Numbers.BinNums <> positive ind
binder 24495:24495 <> i:433
binder 24497:24497 <> k:434
R24531:24539 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24576:24576 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24540:24546 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R24548:24549 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 24547:24547 <> j:435
R24551:24553 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24550:24550 compcert.lib.Maps <> k:434 var
R24554:24557 compcert.lib.Maps PTree prev def
R24560:24570 compcert.lib.Maps PTree prev_append def
R24574:24574 compcert.lib.Maps <> i:433 var
R24572:24572 compcert.lib.Maps <> j:435 var
R24515:24516 Coq.Lists.List <> In def
R24521:24525 compcert.lib.Maps PTree xkeys def
R24529:24529 compcert.lib.Maps <> i:433 var
R24527:24527 compcert.lib.Maps <> m:432 var
R24518:24518 compcert.lib.Maps <> k:434 var
R24599:24603 compcert.lib.Maps PTree xkeys def
R24625:24639 compcert.lib.Coqlib <> list_in_map_inv thm
R24625:24639 compcert.lib.Coqlib <> list_in_map_inv thm
R24693:24704 compcert.lib.Maps PTree in_xelements thm
prf 24766:24787 PTree xelements_keys_norepet
binder 24802:24802 <> A:436
R24815:24815 compcert.lib.Maps PTree t def
R24817:24817 compcert.lib.Maps <> A:436 var
binder 24812:24812 <> m:437
R24824:24831 Coq.Numbers.BinNums <> positive ind
binder 24821:24821 <> i:438
R24839:24850 compcert.lib.Coqlib <> list_norepet ind
R24853:24857 compcert.lib.Maps PTree xkeys def
R24861:24861 compcert.lib.Maps <> i:438 var
R24859:24859 compcert.lib.Maps <> m:437 var
R24911:24920 compcert.lib.Maps PTree xkeys_leaf thm
R24911:24920 compcert.lib.Maps PTree xkeys_leaf thm
R24911:24920 compcert.lib.Maps PTree xkeys_leaf thm
R24956:24957 Coq.Init.Logic <> ::type_scope:'~'_x not
R24958:24959 Coq.Lists.List <> In def
R24971:24975 compcert.lib.Maps PTree xkeys def
R24981:24982 Coq.Numbers.BinNums <> xO constr
R24962:24965 compcert.lib.Maps PTree prev def
R24956:24957 Coq.Init.Logic <> ::type_scope:'~'_x not
R24958:24959 Coq.Lists.List <> In def
R24971:24975 compcert.lib.Maps PTree xkeys def
R24981:24982 Coq.Numbers.BinNums <> xO constr
R24962:24965 compcert.lib.Maps PTree prev def
R25017:25024 compcert.lib.Maps PTree in_xkeys thm
R25065:25080 compcert.lib.Maps PTree prev_append_prev thm
R25065:25080 compcert.lib.Maps PTree prev_append_prev thm
R25065:25080 compcert.lib.Maps PTree prev_append_prev thm
R25108:25122 compcert.lib.Maps PTree prev_append_inj thm
R25108:25122 compcert.lib.Maps PTree prev_append_inj thm
R25167:25168 Coq.Init.Logic <> ::type_scope:'~'_x not
R25169:25170 Coq.Lists.List <> In def
R25182:25186 compcert.lib.Maps PTree xkeys def
R25192:25193 Coq.Numbers.BinNums <> xI constr
R25173:25176 compcert.lib.Maps PTree prev def
R25167:25168 Coq.Init.Logic <> ::type_scope:'~'_x not
R25169:25170 Coq.Lists.List <> In def
R25182:25186 compcert.lib.Maps PTree xkeys def
R25192:25193 Coq.Numbers.BinNums <> xI constr
R25173:25176 compcert.lib.Maps PTree prev def
R25228:25235 compcert.lib.Maps PTree in_xkeys thm
R25276:25291 compcert.lib.Maps PTree prev_append_prev thm
R25276:25291 compcert.lib.Maps PTree prev_append_prev thm
R25276:25291 compcert.lib.Maps PTree prev_append_prev thm
R25319:25333 compcert.lib.Maps PTree prev_append_inj thm
R25319:25333 compcert.lib.Maps PTree prev_append_inj thm
binder 25383:25383 <> x:439
R25408:25411 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25434:25437 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25438:25442 Coq.Init.Logic <> False ind
R25412:25413 Coq.Lists.List <> In def
R25418:25422 compcert.lib.Maps PTree xkeys def
R25428:25429 Coq.Numbers.BinNums <> xI constr
R25415:25415 compcert.lib.Maps <> x:439 var
R25386:25387 Coq.Lists.List <> In def
R25392:25396 compcert.lib.Maps PTree xkeys def
R25402:25403 Coq.Numbers.BinNums <> xO constr
R25389:25389 compcert.lib.Maps <> x:439 var
binder 25383:25383 <> x:440
R25408:25411 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25434:25437 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25438:25442 Coq.Init.Logic <> False ind
R25412:25413 Coq.Lists.List <> In def
R25418:25422 compcert.lib.Maps PTree xkeys def
R25428:25429 Coq.Numbers.BinNums <> xI constr
R25415:25415 compcert.lib.Maps <> x:440 var
R25386:25387 Coq.Lists.List <> In def
R25392:25396 compcert.lib.Maps PTree xkeys def
R25402:25403 Coq.Numbers.BinNums <> xO constr
R25389:25389 compcert.lib.Maps <> x:440 var
R25468:25475 compcert.lib.Maps PTree in_xkeys thm
R25521:25528 compcert.lib.Maps PTree in_xkeys thm
R25575:25590 compcert.lib.Maps PTree prev_append_prev thm
R25575:25590 compcert.lib.Maps PTree prev_append_prev thm
R25575:25590 compcert.lib.Maps PTree prev_append_prev thm
R25636:25650 compcert.lib.Maps PTree prev_append_inj thm
R25636:25650 compcert.lib.Maps PTree prev_append_inj thm
R25688:25697 compcert.lib.Maps PTree xkeys_node thm
R25688:25697 compcert.lib.Maps PTree xkeys_node thm
R25688:25697 compcert.lib.Maps PTree xkeys_node thm
R25706:25724 compcert.lib.Coqlib <> list_norepet_append thm
R25706:25724 compcert.lib.Coqlib <> list_norepet_append thm
prf 25910:25930 PTree elements_keys_norepet
binder 25945:25945 <> A:441
R25958:25958 compcert.lib.Maps PTree t def
R25960:25960 compcert.lib.Maps <> A:441 var
binder 25955:25955 <> m:442
R25968:25979 compcert.lib.Coqlib <> list_norepet ind
R25982:25989 Coq.Lists.List <> map def
R26005:26012 compcert.lib.Maps PTree elements def
R26014:26014 compcert.lib.Maps <> m:442 var
R25993:25995 Coq.Init.Datatypes <> fst def
R26001:26001 compcert.lib.Maps <> A:441 var
R25997:25999 compcert.lib.Maps PTree elt def
R26047:26068 compcert.lib.Maps PTree xelements_keys_norepet thm
R26072:26073 Coq.Numbers.BinNums <> xH constr
R26047:26068 compcert.lib.Maps PTree xelements_keys_norepet thm
R26072:26073 Coq.Numbers.BinNums <> xH constr
prf 26094:26108 PTree xelements_empty
binder 26123:26123 <> A:443
R26136:26136 compcert.lib.Maps PTree t def
R26138:26138 compcert.lib.Maps <> A:443 var
binder 26133:26133 <> m:444
binder 26141:26141 <> i:445
R26144:26144 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26169:26173 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26191:26193 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26174:26182 compcert.lib.Maps PTree xelements def
R26188:26190 Coq.Init.Datatypes <> nil constr
R26186:26186 compcert.lib.Maps <> i:445 var
R26184:26184 compcert.lib.Maps <> m:444 var
R26194:26196 Coq.Init.Datatypes <> nil constr
binder 26152:26152 <> i:446
R26162:26164 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26155:26157 compcert.lib.Maps PTree get def
R26161:26161 compcert.lib.Maps <> m:444 var
R26159:26159 compcert.lib.Maps <> i:446 var
R26165:26168 Coq.Init.Datatypes <> None constr
R26255:26268 compcert.lib.Maps PTree xelements_node thm
R26255:26268 compcert.lib.Maps PTree xelements_node thm
R26255:26268 compcert.lib.Maps PTree xelements_node thm
R26327:26328 Coq.Numbers.BinNums <> xH constr
R26327:26328 Coq.Numbers.BinNums <> xH constr
R26373:26374 Coq.Numbers.BinNums <> xI constr
R26373:26374 Coq.Numbers.BinNums <> xI constr
R26404:26405 Coq.Numbers.BinNums <> xO constr
R26404:26405 Coq.Numbers.BinNums <> xO constr
prf 26431:26455 PTree elements_canonical_order'
binder 26470:26470 <> A:447
binder 26472:26472 <> B:448
R26486:26489 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26491:26494 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26490:26490 compcert.lib.Maps <> B:448 var
R26485:26485 compcert.lib.Maps <> A:447 var
binder 26482:26482 <> R:449
R26505:26505 compcert.lib.Maps PTree t def
R26507:26507 compcert.lib.Maps <> A:447 var
binder 26502:26502 <> m:450
R26514:26514 compcert.lib.Maps PTree t def
R26516:26516 compcert.lib.Maps <> B:448 var
binder 26511:26511 <> n:451
R26524:26524 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26567:26575 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26576:26587 compcert.lib.Coqlib <> list_forall2 ind
R26675:26682 compcert.lib.Maps PTree elements def
R26684:26684 compcert.lib.Maps <> n:451 var
R26662:26669 compcert.lib.Maps PTree elements def
R26671:26671 compcert.lib.Maps <> m:450 var
binder 26600:26602 <> i_x:452
binder 26604:26606 <> i_y:453
R26628:26631 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R26618:26620 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26611:26613 Coq.Init.Datatypes <> fst def
R26615:26617 compcert.lib.Maps <> i_x:452 var
R26621:26623 Coq.Init.Datatypes <> fst def
R26625:26627 compcert.lib.Maps <> i_y:453 var
R26632:26632 compcert.lib.Maps <> R:449 var
R26645:26647 Coq.Init.Datatypes <> snd def
R26649:26651 compcert.lib.Maps <> i_y:453 var
R26635:26637 Coq.Init.Datatypes <> snd def
R26639:26641 compcert.lib.Maps <> i_x:452 var
binder 26532:26532 <> i:454
R26535:26544 compcert.lib.Coqlib <> option_rel ind
R26559:26561 compcert.lib.Maps PTree get def
R26565:26565 compcert.lib.Maps <> n:451 var
R26563:26563 compcert.lib.Maps <> i:454 var
R26549:26551 compcert.lib.Maps PTree get def
R26555:26555 compcert.lib.Maps <> m:450 var
R26553:26553 compcert.lib.Maps <> i:454 var
R26546:26546 compcert.lib.Maps <> R:449 var
R26724:26731 compcert.lib.Maps PTree elements def
R26813:26827 compcert.lib.Maps PTree xelements_empty thm
R26813:26827 compcert.lib.Maps PTree xelements_empty thm
R26813:26827 compcert.lib.Maps PTree xelements_empty thm
R26813:26827 compcert.lib.Maps PTree xelements_empty thm
R26881:26886 compcert.lib.Maps PTree gempty thm
R26881:26886 compcert.lib.Maps PTree gempty thm
R26881:26886 compcert.lib.Maps PTree gempty thm
R26954:26968 compcert.lib.Maps PTree xelements_empty thm
R26971:26974 compcert.lib.Maps PTree Node constr
R26954:26968 compcert.lib.Maps PTree xelements_empty thm
R26971:26974 compcert.lib.Maps PTree Node constr
R26954:26968 compcert.lib.Maps PTree xelements_empty thm
R26971:26974 compcert.lib.Maps PTree Node constr
R26954:26968 compcert.lib.Maps PTree xelements_empty thm
R26971:26974 compcert.lib.Maps PTree Node constr
R27045:27050 compcert.lib.Maps PTree gempty thm
R27045:27050 compcert.lib.Maps PTree gempty thm
R27045:27050 compcert.lib.Maps PTree gempty thm
R27085:27098 compcert.lib.Maps PTree xelements_node thm
R27085:27098 compcert.lib.Maps PTree xelements_node thm
R27085:27098 compcert.lib.Maps PTree xelements_node thm
R27085:27098 compcert.lib.Maps PTree xelements_node thm
R27085:27098 compcert.lib.Maps PTree xelements_node thm
R27114:27129 compcert.lib.Coqlib <> list_forall2_app thm
R27114:27129 compcert.lib.Coqlib <> list_forall2_app thm
R27114:27129 compcert.lib.Coqlib <> list_forall2_app thm
R27114:27129 compcert.lib.Coqlib <> list_forall2_app thm
R27114:27129 compcert.lib.Coqlib <> list_forall2_app thm
R27114:27129 compcert.lib.Coqlib <> list_forall2_app thm
R27166:27167 Coq.Numbers.BinNums <> xO constr
R27166:27167 Coq.Numbers.BinNums <> xO constr
R27192:27193 Coq.Numbers.BinNums <> xH constr
R27192:27193 Coq.Numbers.BinNums <> xH constr
R27310:27311 Coq.Numbers.BinNums <> xI constr
R27310:27311 Coq.Numbers.BinNums <> xI constr
prf 27336:27359 PTree elements_canonical_order
binder 27374:27374 <> A:455
binder 27376:27376 <> B:456
R27390:27393 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27395:27398 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27394:27394 compcert.lib.Maps <> B:456 var
R27389:27389 compcert.lib.Maps <> A:455 var
binder 27386:27386 <> R:457
R27409:27409 compcert.lib.Maps PTree t def
R27411:27411 compcert.lib.Maps <> A:455 var
binder 27406:27406 <> m:458
R27418:27418 compcert.lib.Maps PTree t def
R27420:27420 compcert.lib.Maps <> B:456 var
binder 27415:27415 <> n:459
R27428:27428 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27496:27504 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27505:27505 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27573:27581 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27582:27593 compcert.lib.Coqlib <> list_forall2 ind
R27681:27688 compcert.lib.Maps PTree elements def
R27690:27690 compcert.lib.Maps <> n:459 var
R27668:27675 compcert.lib.Maps PTree elements def
R27677:27677 compcert.lib.Maps <> m:458 var
binder 27606:27608 <> i_x:460
binder 27610:27612 <> i_y:461
R27634:27637 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R27624:27626 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27617:27619 Coq.Init.Datatypes <> fst def
R27621:27623 compcert.lib.Maps <> i_x:460 var
R27627:27629 Coq.Init.Datatypes <> fst def
R27631:27633 compcert.lib.Maps <> i_y:461 var
R27638:27638 compcert.lib.Maps <> R:457 var
R27651:27653 Coq.Init.Datatypes <> snd def
R27655:27657 compcert.lib.Maps <> i_y:461 var
R27641:27643 Coq.Init.Datatypes <> snd def
R27645:27647 compcert.lib.Maps <> i_x:460 var
binder 27513:27513 <> i:462
binder 27515:27515 <> y:463
R27534:27537 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27538:27544 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R27546:27547 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 27545:27545 <> x:464
R27564:27567 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R27555:27557 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27548:27550 compcert.lib.Maps PTree get def
R27554:27554 compcert.lib.Maps <> m:458 var
R27552:27552 compcert.lib.Maps <> i:462 var
R27558:27561 Coq.Init.Datatypes <> Some constr
R27563:27563 compcert.lib.Maps <> x:464 var
R27568:27568 compcert.lib.Maps <> R:457 var
R27572:27572 compcert.lib.Maps <> y:463 var
R27570:27570 compcert.lib.Maps <> x:464 var
R27525:27527 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27518:27520 compcert.lib.Maps PTree get def
R27524:27524 compcert.lib.Maps <> n:459 var
R27522:27522 compcert.lib.Maps <> i:462 var
R27528:27531 Coq.Init.Datatypes <> Some constr
R27533:27533 compcert.lib.Maps <> y:463 var
binder 27436:27436 <> i:465
binder 27438:27438 <> x:466
R27457:27460 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27461:27467 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R27469:27470 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 27468:27468 <> y:467
R27487:27490 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R27478:27480 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27471:27473 compcert.lib.Maps PTree get def
R27477:27477 compcert.lib.Maps <> n:459 var
R27475:27475 compcert.lib.Maps <> i:465 var
R27481:27484 Coq.Init.Datatypes <> Some constr
R27486:27486 compcert.lib.Maps <> y:467 var
R27491:27491 compcert.lib.Maps <> R:457 var
R27495:27495 compcert.lib.Maps <> y:467 var
R27493:27493 compcert.lib.Maps <> x:466 var
R27448:27450 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27441:27443 compcert.lib.Maps PTree get def
R27447:27447 compcert.lib.Maps <> m:458 var
R27445:27445 compcert.lib.Maps <> i:465 var
R27451:27454 Coq.Init.Datatypes <> Some constr
R27456:27456 compcert.lib.Maps <> x:466 var
R27721:27745 compcert.lib.Maps PTree elements_canonical_order' thm
R27721:27745 compcert.lib.Maps PTree elements_canonical_order' thm
R27770:27772 compcert.lib.Maps PTree get def
R27770:27772 compcert.lib.Maps PTree get def
R27881:27883 compcert.lib.Maps PTree get def
R27881:27883 compcert.lib.Maps PTree get def
prf 27996:28015 PTree elements_extensional
binder 28030:28030 <> A:468
R28045:28045 compcert.lib.Maps PTree t def
R28047:28047 compcert.lib.Maps <> A:468 var
binder 28040:28040 <> m:469
binder 28042:28042 <> n:470
R28055:28055 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28083:28091 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28102:28104 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28092:28099 compcert.lib.Maps PTree elements def
R28101:28101 compcert.lib.Maps <> m:469 var
R28105:28112 compcert.lib.Maps PTree elements def
R28114:28114 compcert.lib.Maps <> n:470 var
binder 28063:28063 <> i:471
R28073:28075 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28066:28068 compcert.lib.Maps PTree get def
R28072:28072 compcert.lib.Maps <> m:469 var
R28070:28070 compcert.lib.Maps <> i:471 var
R28076:28078 compcert.lib.Maps PTree get def
R28082:28082 compcert.lib.Maps <> n:470 var
R28080:28080 compcert.lib.Maps <> i:471 var
R28152:28176 compcert.lib.Maps PTree elements_canonical_order' thm
binder 28188:28188 <> x:472
binder 28190:28190 <> y:473
R28200:28202 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28199:28199 compcert.lib.Maps <> x:472 var
R28203:28203 compcert.lib.Maps <> y:473 var
R28152:28176 compcert.lib.Maps PTree elements_canonical_order' thm
binder 28188:28188 <> x:474
binder 28190:28190 <> y:475
R28200:28202 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28199:28199 compcert.lib.Maps <> x:474 var
R28203:28203 compcert.lib.Maps <> y:475 var
R28245:28247 compcert.lib.Maps PTree get def
R28245:28247 compcert.lib.Maps PTree get def
prf 28402:28417 PTree xelements_remove
binder 28432:28432 <> A:476
binder 28441:28441 <> v:477
R28447:28447 compcert.lib.Maps PTree t def
R28449:28449 compcert.lib.Maps <> A:476 var
binder 28444:28444 <> m:478
binder 28452:28452 <> i:479
binder 28454:28454 <> j:480
R28477:28484 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28485:28491 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R28497:28502 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 28492:28493 <> l1:481
binder 28495:28496 <> l2:482
R28562:28569 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R28520:28522 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28503:28511 compcert.lib.Maps PTree xelements def
R28517:28519 Coq.Init.Datatypes <> nil constr
R28515:28515 compcert.lib.Maps <> j:480 var
R28513:28513 compcert.lib.Maps <> m:478 var
R28525:28528 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28523:28524 compcert.lib.Maps <> l1:481 var
R28556:28559 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28529:28529 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28552:28553 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28555:28555 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28530:28533 compcert.lib.Maps PTree prev def
R28536:28546 compcert.lib.Maps PTree prev_append def
R28550:28550 compcert.lib.Maps <> j:480 var
R28548:28548 compcert.lib.Maps <> i:479 var
R28554:28554 compcert.lib.Maps <> v:477 var
R28560:28561 compcert.lib.Maps <> l2:482 var
R28598:28600 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28570:28578 compcert.lib.Maps PTree xelements def
R28595:28597 Coq.Init.Datatypes <> nil constr
R28593:28593 compcert.lib.Maps <> j:480 var
R28581:28586 compcert.lib.Maps PTree remove def
R28590:28590 compcert.lib.Maps <> m:478 var
R28588:28588 compcert.lib.Maps <> i:479 var
R28603:28606 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28601:28602 compcert.lib.Maps <> l1:481 var
R28607:28608 compcert.lib.Maps <> l2:482 var
R28468:28470 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28461:28463 compcert.lib.Maps PTree get def
R28467:28467 compcert.lib.Maps <> m:478 var
R28465:28465 compcert.lib.Maps <> i:479 var
R28471:28474 Coq.Init.Datatypes <> Some constr
R28476:28476 compcert.lib.Maps <> v:477 var
R28657:28661 compcert.lib.Maps PTree gleaf thm
R28657:28661 compcert.lib.Maps PTree gleaf thm
R28657:28661 compcert.lib.Maps PTree gleaf thm
R28744:28766 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28703:28711 compcert.lib.Maps PTree xelements def
R28741:28743 Coq.Init.Datatypes <> nil constr
R28714:28719 compcert.lib.Maps PTree remove def
R28724:28727 compcert.lib.Maps PTree Node constr
R28767:28775 compcert.lib.Maps PTree xelements def
R29017:29019 Coq.Init.Datatypes <> nil constr
R28824:28825 Coq.Numbers.BinNums <> xH constr
R28830:28833 compcert.lib.Maps PTree Node constr
R28838:28841 Coq.Init.Datatypes <> None constr
R28879:28880 Coq.Numbers.BinNums <> xO constr
R28888:28891 compcert.lib.Maps PTree Node constr
R28894:28899 compcert.lib.Maps PTree remove def
R28946:28947 Coq.Numbers.BinNums <> xI constr
R28955:28958 compcert.lib.Maps PTree Node constr
R28966:28971 compcert.lib.Maps PTree remove def
R28744:28766 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28703:28711 compcert.lib.Maps PTree xelements def
R28741:28743 Coq.Init.Datatypes <> nil constr
R28714:28719 compcert.lib.Maps PTree remove def
R28724:28727 compcert.lib.Maps PTree Node constr
R28767:28775 compcert.lib.Maps PTree xelements def
R29017:29019 Coq.Init.Datatypes <> nil constr
R28824:28825 Coq.Numbers.BinNums <> xH constr
R28830:28833 compcert.lib.Maps PTree Node constr
R28838:28841 Coq.Init.Datatypes <> None constr
R28879:28880 Coq.Numbers.BinNums <> xO constr
R28888:28891 compcert.lib.Maps PTree Node constr
R28894:28899 compcert.lib.Maps PTree remove def
R28946:28947 Coq.Numbers.BinNums <> xI constr
R28955:28958 compcert.lib.Maps PTree Node constr
R28966:28971 compcert.lib.Maps PTree remove def
R29114:29119 compcert.lib.Maps PTree remove def
R29114:29119 compcert.lib.Maps PTree remove def
R29187:29192 compcert.lib.Maps PTree remove def
R29187:29192 compcert.lib.Maps PTree remove def
R29325:29326 Coq.Numbers.BinNums <> xI constr
R29325:29326 Coq.Numbers.BinNums <> xI constr
R29396:29413 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29373:29381 compcert.lib.Maps PTree xelements def
R29393:29395 Coq.Init.Datatypes <> nil constr
R29387:29388 Coq.Numbers.BinNums <> xO constr
R29473:29490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29427:29430 Coq.Init.Datatypes <> None constr
R29435:29437 Coq.Init.Datatypes <> nil constr
R29441:29444 Coq.Init.Datatypes <> Some constr
R29462:29465 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R29451:29451 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29458:29459 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29461:29461 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29452:29455 compcert.lib.Maps PTree prev def
R29466:29468 Coq.Init.Datatypes <> nil constr
R29396:29413 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29373:29381 compcert.lib.Maps PTree xelements def
R29393:29395 Coq.Init.Datatypes <> nil constr
R29387:29388 Coq.Numbers.BinNums <> xO constr
R29473:29490 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29427:29430 Coq.Init.Datatypes <> None constr
R29435:29437 Coq.Init.Datatypes <> nil constr
R29441:29444 Coq.Init.Datatypes <> Some constr
R29462:29465 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R29451:29451 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29458:29459 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29461:29461 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29452:29455 compcert.lib.Maps PTree prev def
R29466:29468 Coq.Init.Datatypes <> nil constr
R29534:29547 compcert.lib.Maps PTree xelements_node thm
R29556:29562 Coq.Lists.List <> app_ass syndef
R29534:29547 compcert.lib.Maps PTree xelements_node thm
R29534:29547 compcert.lib.Maps PTree xelements_node thm
R29556:29562 Coq.Lists.List <> app_ass syndef
R29556:29562 Coq.Lists.List <> app_ass syndef
R29556:29562 Coq.Lists.List <> app_ass syndef
R29556:29562 Coq.Lists.List <> app_ass syndef
R29585:29598 compcert.lib.Maps PTree xelements_node thm
R29608:29614 Coq.Lists.List <> app_ass syndef
R29585:29598 compcert.lib.Maps PTree xelements_node thm
R29585:29598 compcert.lib.Maps PTree xelements_node thm
R29608:29614 Coq.Lists.List <> app_ass syndef
R29608:29614 Coq.Lists.List <> app_ass syndef
R29608:29614 Coq.Lists.List <> app_ass syndef
R29608:29614 Coq.Lists.List <> app_ass syndef
R29647:29648 Coq.Numbers.BinNums <> xO constr
R29647:29648 Coq.Numbers.BinNums <> xO constr
R29714:29731 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29791:29808 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29745:29748 Coq.Init.Datatypes <> None constr
R29753:29755 Coq.Init.Datatypes <> nil constr
R29759:29762 Coq.Init.Datatypes <> Some constr
R29780:29783 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R29769:29769 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29776:29777 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29779:29779 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29770:29773 compcert.lib.Maps PTree prev def
R29784:29786 Coq.Init.Datatypes <> nil constr
R29809:29817 compcert.lib.Maps PTree xelements def
R29829:29831 Coq.Init.Datatypes <> nil constr
R29823:29824 Coq.Numbers.BinNums <> xI constr
R29714:29731 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29791:29808 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29745:29748 Coq.Init.Datatypes <> None constr
R29753:29755 Coq.Init.Datatypes <> nil constr
R29759:29762 Coq.Init.Datatypes <> Some constr
R29780:29783 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R29769:29769 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29776:29777 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29779:29779 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29770:29773 compcert.lib.Maps PTree prev def
R29784:29786 Coq.Init.Datatypes <> nil constr
R29809:29817 compcert.lib.Maps PTree xelements def
R29829:29831 Coq.Init.Datatypes <> nil constr
R29823:29824 Coq.Numbers.BinNums <> xI constr
R29862:29875 compcert.lib.Maps PTree xelements_node thm
R29884:29890 Coq.Lists.List <> app_ass syndef
R29862:29875 compcert.lib.Maps PTree xelements_node thm
R29862:29875 compcert.lib.Maps PTree xelements_node thm
R29884:29890 Coq.Lists.List <> app_ass syndef
R29884:29890 Coq.Lists.List <> app_ass syndef
R29884:29890 Coq.Lists.List <> app_ass syndef
R29913:29926 compcert.lib.Maps PTree xelements_node thm
R29936:29942 Coq.Lists.List <> app_ass syndef
R29913:29926 compcert.lib.Maps PTree xelements_node thm
R29913:29926 compcert.lib.Maps PTree xelements_node thm
R29936:29942 Coq.Lists.List <> app_ass syndef
R29936:29942 Coq.Lists.List <> app_ass syndef
R29936:29942 Coq.Lists.List <> app_ass syndef
R29974:29982 compcert.lib.Maps PTree xelements def
R29994:29996 Coq.Init.Datatypes <> nil constr
R29988:29989 Coq.Numbers.BinNums <> xO constr
R30008:30016 compcert.lib.Maps PTree xelements def
R30028:30030 Coq.Init.Datatypes <> nil constr
R30022:30023 Coq.Numbers.BinNums <> xI constr
R29974:29982 compcert.lib.Maps PTree xelements def
R29994:29996 Coq.Init.Datatypes <> nil constr
R29988:29989 Coq.Numbers.BinNums <> xO constr
R30008:30016 compcert.lib.Maps PTree xelements def
R30028:30030 Coq.Init.Datatypes <> nil constr
R30022:30023 Coq.Numbers.BinNums <> xI constr
R30055:30068 compcert.lib.Maps PTree xelements_node thm
R30055:30068 compcert.lib.Maps PTree xelements_node thm
R30055:30068 compcert.lib.Maps PTree xelements_node thm
R30079:30094 compcert.lib.Maps PTree prev_append_prev thm
R30079:30094 compcert.lib.Maps PTree prev_append_prev thm
R30079:30094 compcert.lib.Maps PTree prev_append_prev thm
R30117:30130 compcert.lib.Maps PTree xelements_node thm
R30117:30130 compcert.lib.Maps PTree xelements_node thm
R30117:30130 compcert.lib.Maps PTree xelements_node thm
prf 30157:30171 PTree elements_remove
binder 30186:30186 <> A:489
binder 30195:30195 <> i:490
binder 30197:30197 <> v:491
R30203:30203 compcert.lib.Maps PTree t def
R30205:30205 compcert.lib.Maps <> A:489 var
binder 30200:30200 <> m:492
R30229:30236 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30237:30243 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R30249:30250 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 30244:30245 <> l1:493
binder 30247:30248 <> l2:494
R30281:30284 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R30261:30263 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30251:30258 compcert.lib.Maps PTree elements def
R30260:30260 compcert.lib.Maps <> m:492 var
R30266:30269 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R30264:30265 compcert.lib.Maps <> l1:493 var
R30275:30278 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30270:30270 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30272:30272 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30274:30274 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30271:30271 compcert.lib.Maps <> i:490 var
R30273:30273 compcert.lib.Maps <> v:491 var
R30279:30280 compcert.lib.Maps <> l2:494 var
R30306:30308 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30285:30292 compcert.lib.Maps PTree elements def
R30295:30300 compcert.lib.Maps PTree remove def
R30304:30304 compcert.lib.Maps <> m:492 var
R30302:30302 compcert.lib.Maps <> i:490 var
R30311:30314 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R30309:30310 compcert.lib.Maps <> l1:493 var
R30315:30316 compcert.lib.Maps <> l2:494 var
R30220:30222 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30213:30215 compcert.lib.Maps PTree get def
R30219:30219 compcert.lib.Maps <> m:492 var
R30217:30217 compcert.lib.Maps <> i:490 var
R30223:30226 Coq.Init.Datatypes <> Some constr
R30228:30228 compcert.lib.Maps <> v:491 var
R30348:30363 compcert.lib.Maps PTree xelements_remove thm
R30391:30392 Coq.Numbers.BinNums <> xH constr
R30408:30423 compcert.lib.Maps PTree prev_append_prev thm
R30408:30423 compcert.lib.Maps PTree prev_append_prev thm
R30408:30423 compcert.lib.Maps PTree prev_append_prev thm
def 30451:30455 PTree xfold
binder 30458:30458 <> A:495
binder 30460:30460 <> B:496
R30474:30477 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30486:30489 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30491:30494 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30495:30495 compcert.lib.Maps <> B:496 var
R30490:30490 compcert.lib.Maps <> A:495 var
R30478:30485 Coq.Numbers.BinNums <> positive ind
R30473:30473 compcert.lib.Maps <> B:496 var
binder 30470:30470 <> f:497
R30519:30526 Coq.Numbers.BinNums <> positive ind
binder 30516:30516 <> i:498
R30533:30533 compcert.lib.Maps PTree t def
R30535:30535 compcert.lib.Maps <> A:495 var
binder 30530:30530 <> m:499
R30542:30542 compcert.lib.Maps <> B:496 var
binder 30539:30539 <> v:500
R30558:30558 compcert.lib.Maps <> B:496 var
R30573:30573 compcert.lib.Maps <> m:499 var
R30586:30589 compcert.lib.Maps PTree Leaf constr
R30594:30594 compcert.lib.Maps <> v:500 var
R30602:30605 compcert.lib.Maps PTree Node constr
R30609:30612 Coq.Init.Datatypes <> None constr
R30637:30641 compcert.lib.Maps <> xfold:501 def
R30654:30654 compcert.lib.Maps <> v:500 var
R30646:30647 Coq.Numbers.BinNums <> xO constr
R30649:30649 compcert.lib.Maps <> i:498 var
R30643:30643 compcert.lib.Maps <> f:497 var
binder 30631:30632 <> v1:503
R30667:30671 compcert.lib.Maps <> xfold:501 def
R30684:30685 compcert.lib.Maps <> v1:503 var
R30676:30677 Coq.Numbers.BinNums <> xI constr
R30679:30679 compcert.lib.Maps <> i:498 var
R30673:30673 compcert.lib.Maps <> f:497 var
R30693:30696 compcert.lib.Maps PTree Node constr
R30701:30704 Coq.Init.Datatypes <> Some constr
R30732:30736 compcert.lib.Maps <> xfold:501 def
R30749:30749 compcert.lib.Maps <> v:500 var
R30741:30742 Coq.Numbers.BinNums <> xO constr
R30744:30744 compcert.lib.Maps <> i:498 var
R30738:30738 compcert.lib.Maps <> f:497 var
binder 30726:30727 <> v1:504
R30772:30772 compcert.lib.Maps <> f:497 var
R30778:30781 compcert.lib.Maps PTree prev def
R30783:30783 compcert.lib.Maps <> i:498 var
R30774:30775 compcert.lib.Maps <> v1:504 var
binder 30766:30767 <> v2:505
R30799:30803 compcert.lib.Maps <> xfold:501 def
R30816:30817 compcert.lib.Maps <> v2:505 var
R30808:30809 Coq.Numbers.BinNums <> xI constr
R30811:30811 compcert.lib.Maps <> i:498 var
R30805:30805 compcert.lib.Maps <> f:497 var
def 30842:30845 PTree fold
binder 30848:30848 <> A:506
binder 30850:30850 <> B:507
R30865:30868 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30877:30880 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30882:30885 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30886:30886 compcert.lib.Maps <> B:507 var
R30881:30881 compcert.lib.Maps <> A:506 var
R30869:30876 Coq.Numbers.BinNums <> positive ind
R30864:30864 compcert.lib.Maps <> B:507 var
binder 30861:30861 <> f:508
R30893:30893 compcert.lib.Maps PTree t def
R30895:30895 compcert.lib.Maps <> A:506 var
binder 30890:30890 <> m:509
R30902:30902 compcert.lib.Maps <> B:507 var
binder 30899:30899 <> v:510
R30912:30916 compcert.lib.Maps PTree xfold def
R30925:30925 compcert.lib.Maps <> v:510 var
R30923:30923 compcert.lib.Maps <> m:509 var
R30920:30921 Coq.Numbers.BinNums <> xH constr
R30918:30918 compcert.lib.Maps <> f:508 var
prf 30937:30951 PTree xfold_xelements
binder 30966:30966 <> A:511
binder 30968:30968 <> B:512
R30982:30985 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30994:30997 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30999:31002 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31003:31003 compcert.lib.Maps <> B:512 var
R30998:30998 compcert.lib.Maps <> A:511 var
R30986:30993 Coq.Numbers.BinNums <> positive ind
R30981:30981 compcert.lib.Maps <> B:512 var
binder 30978:30978 <> f:513
binder 31006:31006 <> m:514
binder 31008:31008 <> i:515
binder 31010:31010 <> v:516
binder 31012:31012 <> l:517
R31084:31090 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31019:31032 Coq.Lists.List <> fold_left def
R31070:31074 compcert.lib.Maps PTree xfold def
R31082:31082 compcert.lib.Maps <> v:516 var
R31080:31080 compcert.lib.Maps <> m:514 var
R31078:31078 compcert.lib.Maps <> i:515 var
R31076:31076 compcert.lib.Maps <> f:513 var
R31067:31067 compcert.lib.Maps <> l:517 var
binder 31039:31039 <> a:518
binder 31041:31041 <> p:519
R31046:31046 compcert.lib.Maps <> f:513 var
R31059:31061 Coq.Init.Datatypes <> snd def
R31063:31063 compcert.lib.Maps <> p:519 var
R31051:31053 Coq.Init.Datatypes <> fst def
R31055:31055 compcert.lib.Maps <> p:519 var
R31048:31048 compcert.lib.Maps <> a:518 var
R31091:31104 Coq.Lists.List <> fold_left def
R31157:31157 compcert.lib.Maps <> v:516 var
R31140:31148 compcert.lib.Maps PTree xelements def
R31154:31154 compcert.lib.Maps <> l:517 var
R31152:31152 compcert.lib.Maps <> i:515 var
R31150:31150 compcert.lib.Maps <> m:514 var
binder 31111:31111 <> a:520
binder 31113:31113 <> p:521
R31118:31118 compcert.lib.Maps <> f:513 var
R31131:31133 Coq.Init.Datatypes <> snd def
R31135:31135 compcert.lib.Maps <> p:521 var
R31123:31125 Coq.Init.Datatypes <> fst def
R31127:31127 compcert.lib.Maps <> p:521 var
R31120:31120 compcert.lib.Maps <> a:520 var
prf 31347:31355 PTree fold_spec
binder 31370:31370 <> A:522
binder 31372:31372 <> B:523
R31386:31389 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31398:31401 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31403:31406 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31407:31407 compcert.lib.Maps <> B:523 var
R31402:31402 compcert.lib.Maps <> A:522 var
R31390:31397 Coq.Numbers.BinNums <> positive ind
R31385:31385 compcert.lib.Maps <> B:523 var
binder 31382:31382 <> f:524
R31414:31414 compcert.lib.Maps <> B:523 var
binder 31411:31411 <> v:525
R31421:31421 compcert.lib.Maps PTree t def
R31423:31423 compcert.lib.Maps <> A:522 var
binder 31418:31418 <> m:526
R31441:31447 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31431:31434 compcert.lib.Maps PTree fold def
R31440:31440 compcert.lib.Maps <> v:525 var
R31438:31438 compcert.lib.Maps <> m:526 var
R31436:31436 compcert.lib.Maps <> f:524 var
R31448:31461 Coq.Lists.List <> fold_left def
R31509:31509 compcert.lib.Maps <> v:525 var
R31497:31504 compcert.lib.Maps PTree elements def
R31506:31506 compcert.lib.Maps <> m:526 var
binder 31468:31468 <> a:527
binder 31470:31470 <> p:528
R31475:31475 compcert.lib.Maps <> f:524 var
R31488:31490 Coq.Init.Datatypes <> snd def
R31492:31492 compcert.lib.Maps <> p:528 var
R31480:31482 Coq.Init.Datatypes <> fst def
R31484:31484 compcert.lib.Maps <> p:528 var
R31477:31477 compcert.lib.Maps <> a:527 var
R31540:31543 compcert.lib.Maps PTree fold def
R31546:31553 compcert.lib.Maps PTree elements def
R31567:31581 compcert.lib.Maps PTree xfold_xelements thm
R31567:31581 compcert.lib.Maps PTree xfold_xelements thm
R31567:31581 compcert.lib.Maps PTree xfold_xelements thm
def 31609:31613 PTree fold1
binder 31616:31616 <> A:529
binder 31618:31618 <> B:530
R31632:31635 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31637:31640 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31641:31641 compcert.lib.Maps <> B:530 var
R31636:31636 compcert.lib.Maps <> A:529 var
R31631:31631 compcert.lib.Maps <> B:530 var
binder 31628:31628 <> f:531
R31648:31648 compcert.lib.Maps PTree t def
R31650:31650 compcert.lib.Maps <> A:529 var
binder 31645:31645 <> m:532
R31657:31657 compcert.lib.Maps <> B:530 var
binder 31654:31654 <> v:533
R31673:31673 compcert.lib.Maps <> B:530 var
R31688:31688 compcert.lib.Maps <> m:532 var
R31701:31704 compcert.lib.Maps PTree Leaf constr
R31709:31709 compcert.lib.Maps <> v:533 var
R31717:31720 compcert.lib.Maps PTree Node constr
R31724:31727 Coq.Init.Datatypes <> None constr
R31752:31756 compcert.lib.Maps <> fold1:534 def
R31762:31762 compcert.lib.Maps <> v:533 var
R31758:31758 compcert.lib.Maps <> f:531 var
binder 31746:31747 <> v1:536
R31775:31779 compcert.lib.Maps <> fold1:534 def
R31785:31786 compcert.lib.Maps <> v1:536 var
R31781:31781 compcert.lib.Maps <> f:531 var
R31794:31797 compcert.lib.Maps PTree Node constr
R31802:31805 Coq.Init.Datatypes <> Some constr
R31833:31837 compcert.lib.Maps <> fold1:534 def
R31843:31843 compcert.lib.Maps <> v:533 var
R31839:31839 compcert.lib.Maps <> f:531 var
binder 31827:31828 <> v1:537
R31866:31866 compcert.lib.Maps <> f:531 var
R31868:31869 compcert.lib.Maps <> v1:537 var
binder 31860:31861 <> v2:538
R31884:31888 compcert.lib.Maps <> fold1:534 def
R31894:31895 compcert.lib.Maps <> v2:538 var
R31890:31890 compcert.lib.Maps <> f:531 var
prf 31915:31929 PTree fold1_xelements
binder 31944:31944 <> A:539
binder 31946:31946 <> B:540
R31960:31963 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31965:31968 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31969:31969 compcert.lib.Maps <> B:540 var
R31964:31964 compcert.lib.Maps <> A:539 var
R31959:31959 compcert.lib.Maps <> B:540 var
binder 31956:31956 <> f:541
binder 31972:31972 <> m:542
binder 31974:31974 <> i:543
binder 31976:31976 <> v:544
binder 31978:31978 <> l:545
R32040:32046 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31985:31998 Coq.Lists.List <> fold_left def
R32028:32032 compcert.lib.Maps PTree fold1 def
R32038:32038 compcert.lib.Maps <> v:544 var
R32036:32036 compcert.lib.Maps <> m:542 var
R32034:32034 compcert.lib.Maps <> f:541 var
R32025:32025 compcert.lib.Maps <> l:545 var
binder 32005:32005 <> a:546
binder 32007:32007 <> p:547
R32012:32012 compcert.lib.Maps <> f:541 var
R32017:32019 Coq.Init.Datatypes <> snd def
R32021:32021 compcert.lib.Maps <> p:547 var
R32014:32014 compcert.lib.Maps <> a:546 var
R32047:32060 Coq.Lists.List <> fold_left def
R32105:32105 compcert.lib.Maps <> v:544 var
R32088:32096 compcert.lib.Maps PTree xelements def
R32102:32102 compcert.lib.Maps <> l:545 var
R32100:32100 compcert.lib.Maps <> i:543 var
R32098:32098 compcert.lib.Maps <> m:542 var
binder 32067:32067 <> a:548
binder 32069:32069 <> p:549
R32074:32074 compcert.lib.Maps <> f:541 var
R32079:32081 Coq.Init.Datatypes <> snd def
R32083:32083 compcert.lib.Maps <> p:549 var
R32076:32076 compcert.lib.Maps <> a:548 var
prf 32295:32304 PTree fold1_spec
binder 32319:32319 <> A:550
binder 32321:32321 <> B:551
R32335:32338 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32340:32343 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32344:32344 compcert.lib.Maps <> B:551 var
R32339:32339 compcert.lib.Maps <> A:550 var
R32334:32334 compcert.lib.Maps <> B:551 var
binder 32331:32331 <> f:552
R32351:32351 compcert.lib.Maps <> B:551 var
binder 32348:32348 <> v:553
R32358:32358 compcert.lib.Maps PTree t def
R32360:32360 compcert.lib.Maps <> A:550 var
binder 32355:32355 <> m:554
R32379:32385 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32368:32372 compcert.lib.Maps PTree fold1 def
R32378:32378 compcert.lib.Maps <> v:553 var
R32376:32376 compcert.lib.Maps <> m:554 var
R32374:32374 compcert.lib.Maps <> f:552 var
R32386:32399 Coq.Lists.List <> fold_left def
R32439:32439 compcert.lib.Maps <> v:553 var
R32427:32434 compcert.lib.Maps PTree elements def
R32436:32436 compcert.lib.Maps <> m:554 var
binder 32406:32406 <> a:555
binder 32408:32408 <> p:556
R32413:32413 compcert.lib.Maps <> f:552 var
R32418:32420 Coq.Init.Datatypes <> snd def
R32422:32422 compcert.lib.Maps <> p:556 var
R32415:32415 compcert.lib.Maps <> a:555 var
R32497:32499 Coq.Init.Datatypes <> nil constr
R32510:32512 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R32502:32509 Coq.Numbers.BinNums <> positive ind
R32469:32483 compcert.lib.Maps PTree fold1_xelements thm
R32497:32499 Coq.Init.Datatypes <> nil constr
R32510:32512 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R32502:32509 Coq.Numbers.BinNums <> positive ind
R32469:32483 compcert.lib.Maps PTree fold1_xelements thm
R32530:32534 compcert.lib.Maps PTree <> mod
R32610:32612 compcert.lib.Maps MAP <> mod
mod 32602:32605 <> PMap
def 32628:32630 PMap elt
R32635:32642 Coq.Numbers.BinNums <> positive ind
def 32658:32663 PMap elt_eq
R32668:32670 compcert.lib.Coqlib <> peq def
def 32687:32687 PMap t
binder 32690:32690 <> A:557
R32712:32714 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R32711:32711 compcert.lib.Maps <> A:557 var
R32715:32721 compcert.lib.Maps PTree t def
R32723:32723 compcert.lib.Maps <> A:557 var
def 32746:32749 PMap init
binder 32752:32752 <> A:558
R32767:32767 compcert.lib.Maps <> A:558 var
binder 32763:32763 <> x:559
R32777:32777 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32779:32780 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32794:32794 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32778:32778 compcert.lib.Maps <> x:559 var
R32781:32791 compcert.lib.Maps PTree empty def
R32793:32793 compcert.lib.Maps <> A:558 var
def 32811:32813 PMap get
binder 32816:32816 <> A:560
R32831:32838 Coq.Numbers.BinNums <> positive ind
binder 32827:32827 <> i:561
R32846:32846 compcert.lib.Maps PMap t def
R32848:32848 compcert.lib.Maps <> A:560 var
binder 32842:32842 <> m:562
R32864:32872 compcert.lib.Maps PTree get def
R32877:32879 Coq.Init.Datatypes <> snd def
R32881:32881 compcert.lib.Maps <> m:562 var
R32874:32874 compcert.lib.Maps <> i:561 var
R32895:32898 Coq.Init.Datatypes <> Some constr
R32913:32916 Coq.Init.Datatypes <> None constr
R32921:32923 Coq.Init.Datatypes <> fst def
R32925:32925 compcert.lib.Maps <> m:562 var
def 32950:32952 PMap set
binder 32955:32955 <> A:563
R32970:32977 Coq.Numbers.BinNums <> positive ind
binder 32966:32966 <> i:564
R32985:32985 compcert.lib.Maps <> A:563 var
binder 32981:32981 <> x:565
R32993:32993 compcert.lib.Maps PMap t def
R32995:32995 compcert.lib.Maps <> A:563 var
binder 32989:32989 <> m:566
R33005:33005 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33011:33012 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33034:33034 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33006:33008 Coq.Init.Datatypes <> fst def
R33010:33010 compcert.lib.Maps <> m:566 var
R33013:33021 compcert.lib.Maps PTree set def
R33028:33030 Coq.Init.Datatypes <> snd def
R33032:33032 compcert.lib.Maps <> m:566 var
R33025:33025 compcert.lib.Maps <> x:565 var
R33023:33023 compcert.lib.Maps <> i:564 var
prf 33048:33049 PMap gi
binder 33064:33064 <> A:567
R33077:33084 Coq.Numbers.BinNums <> positive ind
binder 33074:33074 <> i:568
R33091:33091 compcert.lib.Maps <> A:567 var
binder 33088:33088 <> x:569
R33109:33111 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33095:33097 compcert.lib.Maps PMap get def
R33102:33105 compcert.lib.Maps PMap init def
R33107:33107 compcert.lib.Maps <> x:569 var
R33099:33099 compcert.lib.Maps <> i:568 var
R33112:33112 compcert.lib.Maps <> x:569 var
R33143:33146 compcert.lib.Maps PMap init def
R33156:33158 compcert.lib.Maps PMap get def
R33176:33187 compcert.lib.Maps PTree gempty thm
R33176:33187 compcert.lib.Maps PTree gempty thm
R33176:33187 compcert.lib.Maps PTree gempty thm
prf 33214:33216 PMap gss
binder 33231:33231 <> A:570
R33244:33251 Coq.Numbers.BinNums <> positive ind
binder 33241:33241 <> i:571
R33258:33258 compcert.lib.Maps <> A:570 var
binder 33255:33255 <> x:572
R33265:33265 compcert.lib.Maps PMap t def
R33267:33267 compcert.lib.Maps <> A:570 var
binder 33262:33262 <> m:573
R33288:33290 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33271:33273 compcert.lib.Maps PMap get def
R33278:33280 compcert.lib.Maps PMap set def
R33286:33286 compcert.lib.Maps <> m:573 var
R33284:33284 compcert.lib.Maps <> x:572 var
R33282:33282 compcert.lib.Maps <> i:571 var
R33275:33275 compcert.lib.Maps <> i:571 var
R33291:33291 compcert.lib.Maps <> x:572 var
R33322:33324 compcert.lib.Maps PMap get def
R33334:33336 compcert.lib.Maps PMap set def
R33354:33362 compcert.lib.Maps PTree gss thm
R33354:33362 compcert.lib.Maps PTree gss thm
R33354:33362 compcert.lib.Maps PTree gss thm
prf 33389:33391 PMap gso
binder 33406:33406 <> A:574
R33421:33428 Coq.Numbers.BinNums <> positive ind
binder 33416:33416 <> i:575
binder 33418:33418 <> j:576
R33435:33435 compcert.lib.Maps <> A:574 var
binder 33432:33432 <> x:577
R33442:33442 compcert.lib.Maps PMap t def
R33444:33444 compcert.lib.Maps <> A:574 var
binder 33439:33439 <> m:578
R33458:33461 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33479:33481 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33462:33464 compcert.lib.Maps PMap get def
R33469:33471 compcert.lib.Maps PMap set def
R33477:33477 compcert.lib.Maps <> m:578 var
R33475:33475 compcert.lib.Maps <> x:577 var
R33473:33473 compcert.lib.Maps <> j:576 var
R33466:33466 compcert.lib.Maps <> i:575 var
R33482:33484 compcert.lib.Maps PMap get def
R33488:33488 compcert.lib.Maps <> m:578 var
R33486:33486 compcert.lib.Maps <> i:575 var
R33453:33456 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R33452:33452 compcert.lib.Maps <> i:575 var
R33457:33457 compcert.lib.Maps <> j:576 var
R33519:33521 compcert.lib.Maps PMap get def
R33531:33533 compcert.lib.Maps PMap set def
R33551:33559 compcert.lib.Maps PTree gso thm
R33551:33559 compcert.lib.Maps PTree gso thm
R33551:33559 compcert.lib.Maps PTree gso thm
R33551:33559 compcert.lib.Maps PTree gso thm
prf 33586:33591 PMap gsspec
binder 33606:33606 <> A:579
R33621:33628 Coq.Numbers.BinNums <> positive ind
binder 33616:33616 <> i:580
binder 33618:33618 <> j:581
R33635:33635 compcert.lib.Maps <> A:579 var
binder 33632:33632 <> x:582
R33642:33642 compcert.lib.Maps PMap t def
R33644:33644 compcert.lib.Maps <> A:579 var
binder 33639:33639 <> m:583
R33669:33671 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33652:33654 compcert.lib.Maps PMap get def
R33659:33661 compcert.lib.Maps PMap set def
R33667:33667 compcert.lib.Maps <> m:583 var
R33665:33665 compcert.lib.Maps <> x:582 var
R33663:33663 compcert.lib.Maps <> j:581 var
R33656:33656 compcert.lib.Maps <> i:580 var
R33675:33677 compcert.lib.Coqlib <> peq def
R33681:33681 compcert.lib.Maps <> j:581 var
R33679:33679 compcert.lib.Maps <> i:580 var
R33695:33697 compcert.lib.Maps PMap get def
R33701:33701 compcert.lib.Maps <> m:583 var
R33699:33699 compcert.lib.Maps <> i:580 var
R33688:33688 compcert.lib.Maps <> x:582 var
R33735:33737 compcert.lib.Coqlib <> peq def
R33735:33737 compcert.lib.Coqlib <> peq def
R33767:33769 compcert.lib.Maps PMap gss thm
R33767:33769 compcert.lib.Maps PMap gss thm
R33789:33791 compcert.lib.Maps PMap gso thm
R33789:33791 compcert.lib.Maps PMap gso thm
prf 33818:33824 PMap gsident
binder 33839:33839 <> A:584
R33854:33861 Coq.Numbers.BinNums <> positive ind
binder 33849:33849 <> i:585
binder 33851:33851 <> j:586
R33868:33868 compcert.lib.Maps PMap t def
R33870:33870 compcert.lib.Maps <> A:584 var
binder 33865:33865 <> m:587
R33903:33905 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33878:33880 compcert.lib.Maps PMap get def
R33885:33887 compcert.lib.Maps PMap set def
R33901:33901 compcert.lib.Maps <> m:587 var
R33892:33894 compcert.lib.Maps PMap get def
R33898:33898 compcert.lib.Maps <> m:587 var
R33896:33896 compcert.lib.Maps <> i:585 var
R33889:33889 compcert.lib.Maps <> i:585 var
R33882:33882 compcert.lib.Maps <> j:586 var
R33906:33908 compcert.lib.Maps PMap get def
R33912:33912 compcert.lib.Maps <> m:587 var
R33910:33910 compcert.lib.Maps <> j:586 var
R33946:33948 compcert.lib.Coqlib <> peq def
R33946:33948 compcert.lib.Coqlib <> peq def
R33980:33982 compcert.lib.Maps PMap gss thm
R33980:33982 compcert.lib.Maps PMap gss thm
R33980:33982 compcert.lib.Maps PMap gss thm
R34004:34006 compcert.lib.Maps PMap gso thm
R34004:34006 compcert.lib.Maps PMap gso thm
R34004:34006 compcert.lib.Maps PMap gso thm
R34004:34006 compcert.lib.Maps PMap gso thm
def 34036:34038 PMap map
binder 34041:34041 <> A:588
binder 34043:34043 <> B:589
R34059:34062 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34063:34063 compcert.lib.Maps <> B:589 var
R34058:34058 compcert.lib.Maps <> A:588 var
binder 34054:34054 <> f:590
R34071:34071 compcert.lib.Maps PMap t def
R34073:34073 compcert.lib.Maps <> A:588 var
binder 34067:34067 <> m:591
R34078:34078 compcert.lib.Maps PMap t def
R34080:34080 compcert.lib.Maps <> B:589 var
R34089:34089 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34099:34100 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34121:34121 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34090:34090 compcert.lib.Maps <> f:590 var
R34093:34095 Coq.Init.Datatypes <> fst def
R34097:34097 compcert.lib.Maps <> m:591 var
R34101:34110 compcert.lib.Maps PTree map1 def
R34115:34117 Coq.Init.Datatypes <> snd def
R34119:34119 compcert.lib.Maps <> m:591 var
R34112:34112 compcert.lib.Maps <> f:590 var
prf 34135:34138 PMap gmap
binder 34153:34153 <> A:592
binder 34155:34155 <> B:593
R34169:34172 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34173:34173 compcert.lib.Maps <> B:593 var
R34168:34168 compcert.lib.Maps <> A:592 var
binder 34165:34165 <> f:594
R34180:34187 Coq.Numbers.BinNums <> positive ind
binder 34177:34177 <> i:595
R34194:34194 compcert.lib.Maps PMap t def
R34196:34196 compcert.lib.Maps <> A:592 var
binder 34191:34191 <> m:596
R34219:34221 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34204:34206 compcert.lib.Maps PMap get def
R34211:34213 compcert.lib.Maps PMap map def
R34217:34217 compcert.lib.Maps <> m:596 var
R34215:34215 compcert.lib.Maps <> f:594 var
R34208:34208 compcert.lib.Maps <> i:595 var
R34222:34222 compcert.lib.Maps <> f:594 var
R34224:34226 compcert.lib.Maps PMap get def
R34230:34230 compcert.lib.Maps <> m:596 var
R34228:34228 compcert.lib.Maps <> i:595 var
R34262:34264 compcert.lib.Maps PMap map def
R34274:34276 compcert.lib.Maps PMap get def
R34294:34304 compcert.lib.Maps PTree gmap1 thm
R34294:34304 compcert.lib.Maps PTree gmap1 thm
R34294:34304 compcert.lib.Maps PTree gmap1 thm
R34318:34327 compcert.lib.Coqlib <> option_map def
R34340:34348 compcert.lib.Maps PTree get def
R34353:34355 Coq.Init.Datatypes <> snd def
R34340:34348 compcert.lib.Maps PTree get def
R34353:34355 Coq.Init.Datatypes <> snd def
prf 34386:34389 PMap set2
binder 34404:34404 <> A:597
R34417:34419 compcert.lib.Maps PMap elt def
binder 34414:34414 <> i:598
R34428:34428 compcert.lib.Maps <> A:597 var
binder 34423:34423 <> x:599
binder 34425:34425 <> y:600
R34435:34435 compcert.lib.Maps PMap t def
R34437:34437 compcert.lib.Maps <> A:597 var
binder 34432:34432 <> m:601
R34464:34466 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34445:34447 compcert.lib.Maps PMap set def
R34454:34456 compcert.lib.Maps PMap set def
R34462:34462 compcert.lib.Maps <> m:601 var
R34460:34460 compcert.lib.Maps <> x:599 var
R34458:34458 compcert.lib.Maps <> i:598 var
R34451:34451 compcert.lib.Maps <> y:600 var
R34449:34449 compcert.lib.Maps <> i:598 var
R34467:34469 compcert.lib.Maps PMap set def
R34475:34475 compcert.lib.Maps <> m:601 var
R34473:34473 compcert.lib.Maps <> y:600 var
R34471:34471 compcert.lib.Maps <> i:598 var
R34506:34508 compcert.lib.Maps PMap set def
R34531:34540 compcert.lib.Maps PTree set2 thm
R34531:34540 compcert.lib.Maps PTree set2 thm
R34555:34558 compcert.lib.Maps PMap <> mod
modtype 34658:34669 <> INDEXED_TYPE
ax 34684:34684 INDEXED_TYPE t
ax 34705:34709 INDEXED_TYPE index
R34713:34716 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34717:34724 Coq.Numbers.BinNums <> positive ind
R34712:34712 compcert.lib.Maps INDEXED_TYPE t defax
ax 34735:34743 INDEXED_TYPE index_inj
R34759:34759 compcert.lib.Maps INDEXED_TYPE t defax
binder 34754:34754 <> x:604
binder 34756:34756 <> y:605
R34780:34783 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34785:34787 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34784:34784 compcert.lib.Maps <> x:604 var
R34788:34788 compcert.lib.Maps <> y:605 var
R34770:34772 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34763:34767 compcert.lib.Maps INDEXED_TYPE index defax
R34769:34769 compcert.lib.Maps <> x:604 var
R34773:34777 compcert.lib.Maps INDEXED_TYPE index defax
R34779:34779 compcert.lib.Maps <> y:605 var
ax 34803:34804 INDEXED_TYPE eq
R34820:34820 compcert.lib.Maps INDEXED_TYPE t defax
binder 34815:34815 <> x:607
binder 34817:34817 <> y:608
R34824:34824 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34830:34834 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34841:34841 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34826:34828 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34825:34825 compcert.lib.Maps <> x:607 var
R34829:34829 compcert.lib.Maps <> y:608 var
R34836:34839 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R34835:34835 compcert.lib.Maps <> x:607 var
R34840:34840 compcert.lib.Maps <> y:608 var
R34848:34859 compcert.lib.Maps INDEXED_TYPE <> modtype
R34878:34889 compcert.lib.Maps INDEXED_TYPE <> mod
mod 34870:34873 <> IMap
def 34907:34909 IMap elt
R34914:34916 compcert.lib.Maps X t defax
def 34932:34937 IMap elt_eq
R34942:34945 compcert.lib.Maps X eq defax
def 34961:34961 IMap t
R34969:34972 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34981:34986 compcert.lib.Maps PMap t def
def 35002:35005 IMap init
binder 35008:35008 <> A:610
R35021:35021 compcert.lib.Maps <> A:610 var
binder 35018:35018 <> x:611
R35027:35035 compcert.lib.Maps PMap init def
R35037:35037 compcert.lib.Maps <> x:611 var
def 35053:35055 IMap get
binder 35058:35058 <> A:612
R35071:35073 compcert.lib.Maps X t defax
binder 35068:35068 <> i:613
R35080:35080 compcert.lib.Maps IMap t def
R35082:35082 compcert.lib.Maps <> A:612 var
binder 35077:35077 <> m:614
R35088:35095 compcert.lib.Maps PMap get def
R35109:35109 compcert.lib.Maps <> m:614 var
R35098:35104 compcert.lib.Maps X index defax
R35106:35106 compcert.lib.Maps <> i:613 var
def 35125:35127 IMap set
binder 35130:35130 <> A:615
R35143:35145 compcert.lib.Maps X t defax
binder 35140:35140 <> i:616
R35152:35152 compcert.lib.Maps <> A:615 var
binder 35149:35149 <> v:617
R35159:35159 compcert.lib.Maps IMap t def
R35161:35161 compcert.lib.Maps <> A:615 var
binder 35156:35156 <> m:618
R35167:35174 compcert.lib.Maps PMap set def
R35190:35190 compcert.lib.Maps <> m:618 var
R35188:35188 compcert.lib.Maps <> v:617 var
R35177:35183 compcert.lib.Maps X index defax
R35185:35185 compcert.lib.Maps <> i:616 var
def 35206:35208 IMap map
binder 35211:35211 <> A:619
binder 35213:35213 <> B:620
R35227:35230 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35231:35231 compcert.lib.Maps <> B:620 var
R35226:35226 compcert.lib.Maps <> A:619 var
binder 35223:35223 <> f:621
R35238:35238 compcert.lib.Maps IMap t def
R35240:35240 compcert.lib.Maps <> A:619 var
binder 35235:35235 <> m:622
R35245:35245 compcert.lib.Maps IMap t def
R35247:35247 compcert.lib.Maps <> B:620 var
R35252:35259 compcert.lib.Maps PMap map def
R35263:35263 compcert.lib.Maps <> m:622 var
R35261:35261 compcert.lib.Maps <> f:621 var
prf 35275:35276 IMap gi
binder 35291:35291 <> A:623
R35304:35304 compcert.lib.Maps <> A:623 var
binder 35301:35301 <> x:624
R35311:35313 compcert.lib.Maps X t defax
binder 35308:35308 <> i:625
R35331:35333 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35317:35319 compcert.lib.Maps IMap get def
R35324:35327 compcert.lib.Maps IMap init def
R35329:35329 compcert.lib.Maps <> x:624 var
R35321:35321 compcert.lib.Maps <> i:625 var
R35334:35334 compcert.lib.Maps <> x:624 var
R35365:35367 compcert.lib.Maps IMap get def
R35370:35373 compcert.lib.Maps IMap init def
R35382:35388 compcert.lib.Maps PMap gi thm
R35382:35388 compcert.lib.Maps PMap gi thm
prf 35407:35409 IMap gss
binder 35424:35424 <> A:626
R35437:35439 compcert.lib.Maps X t defax
binder 35434:35434 <> i:627
R35446:35446 compcert.lib.Maps <> A:626 var
binder 35443:35443 <> x:628
R35453:35453 compcert.lib.Maps IMap t def
R35455:35455 compcert.lib.Maps <> A:626 var
binder 35450:35450 <> m:629
R35476:35478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35459:35461 compcert.lib.Maps IMap get def
R35466:35468 compcert.lib.Maps IMap set def
R35474:35474 compcert.lib.Maps <> m:629 var
R35472:35472 compcert.lib.Maps <> x:628 var
R35470:35470 compcert.lib.Maps <> i:627 var
R35463:35463 compcert.lib.Maps <> i:627 var
R35479:35479 compcert.lib.Maps <> x:628 var
R35510:35512 compcert.lib.Maps IMap get def
R35515:35517 compcert.lib.Maps IMap set def
R35526:35533 compcert.lib.Maps PMap gss thm
R35526:35533 compcert.lib.Maps PMap gss thm
prf 35552:35554 IMap gso
binder 35569:35569 <> A:630
R35584:35586 compcert.lib.Maps X t defax
binder 35579:35579 <> i:631
binder 35581:35581 <> j:632
R35593:35593 compcert.lib.Maps <> A:630 var
binder 35590:35590 <> x:633
R35600:35600 compcert.lib.Maps IMap t def
R35602:35602 compcert.lib.Maps <> A:630 var
binder 35597:35597 <> m:634
R35616:35619 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35637:35639 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35620:35622 compcert.lib.Maps IMap get def
R35627:35629 compcert.lib.Maps IMap set def
R35635:35635 compcert.lib.Maps <> m:634 var
R35633:35633 compcert.lib.Maps <> x:633 var
R35631:35631 compcert.lib.Maps <> j:632 var
R35624:35624 compcert.lib.Maps <> i:631 var
R35640:35642 compcert.lib.Maps IMap get def
R35646:35646 compcert.lib.Maps <> m:634 var
R35644:35644 compcert.lib.Maps <> i:631 var
R35611:35614 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R35610:35610 compcert.lib.Maps <> i:631 var
R35615:35615 compcert.lib.Maps <> j:632 var
R35677:35679 compcert.lib.Maps IMap get def
R35682:35684 compcert.lib.Maps IMap set def
R35693:35700 compcert.lib.Maps PMap gso thm
R35693:35700 compcert.lib.Maps PMap gso thm
R35734:35744 compcert.lib.Maps X index_inj prfax
R35734:35744 compcert.lib.Maps X index_inj prfax
prf 35769:35774 IMap gsspec
binder 35789:35789 <> A:635
R35804:35806 compcert.lib.Maps X t defax
binder 35799:35799 <> i:636
binder 35801:35801 <> j:637
R35813:35813 compcert.lib.Maps <> A:635 var
binder 35810:35810 <> x:638
R35820:35820 compcert.lib.Maps IMap t def
R35822:35822 compcert.lib.Maps <> A:635 var
binder 35817:35817 <> m:639
R35847:35849 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35830:35832 compcert.lib.Maps IMap get def
R35837:35839 compcert.lib.Maps IMap set def
R35845:35845 compcert.lib.Maps <> m:639 var
R35843:35843 compcert.lib.Maps <> x:638 var
R35841:35841 compcert.lib.Maps <> j:637 var
R35834:35834 compcert.lib.Maps <> i:636 var
R35853:35856 compcert.lib.Maps X eq defax
R35860:35860 compcert.lib.Maps <> j:637 var
R35858:35858 compcert.lib.Maps <> i:636 var
R35874:35876 compcert.lib.Maps IMap get def
R35880:35880 compcert.lib.Maps <> m:639 var
R35878:35878 compcert.lib.Maps <> i:636 var
R35867:35867 compcert.lib.Maps <> x:638 var
R35911:35913 compcert.lib.Maps IMap get def
R35916:35918 compcert.lib.Maps IMap set def
R35933:35943 compcert.lib.Maps PMap gsspec thm
R35933:35943 compcert.lib.Maps PMap gsspec thm
R35933:35943 compcert.lib.Maps PMap gsspec thm
R35956:35959 compcert.lib.Maps X eq defax
R35956:35959 compcert.lib.Maps X eq defax
R35995:36002 compcert.lib.Coqlib <> peq_true thm
R35995:36002 compcert.lib.Coqlib <> peq_true thm
R35995:36002 compcert.lib.Coqlib <> peq_true thm
R36030:36038 compcert.lib.Coqlib <> peq_false thm
R36030:36038 compcert.lib.Coqlib <> peq_false thm
R36030:36038 compcert.lib.Coqlib <> peq_false thm
R36030:36038 compcert.lib.Coqlib <> peq_false thm
R36084:36094 compcert.lib.Maps X index_inj prfax
R36084:36094 compcert.lib.Maps X index_inj prfax
prf 36119:36122 IMap gmap
binder 36137:36137 <> A:640
binder 36139:36139 <> B:641
R36153:36156 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36157:36157 compcert.lib.Maps <> B:641 var
R36152:36152 compcert.lib.Maps <> A:640 var
binder 36149:36149 <> f:642
R36164:36166 compcert.lib.Maps X t defax
binder 36161:36161 <> i:643
R36173:36173 compcert.lib.Maps IMap t def
R36175:36175 compcert.lib.Maps <> A:640 var
binder 36170:36170 <> m:644
R36198:36200 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36183:36185 compcert.lib.Maps IMap get def
R36190:36192 compcert.lib.Maps IMap map def
R36196:36196 compcert.lib.Maps <> m:644 var
R36194:36194 compcert.lib.Maps <> f:642 var
R36187:36187 compcert.lib.Maps <> i:643 var
R36201:36201 compcert.lib.Maps <> f:642 var
R36203:36205 compcert.lib.Maps IMap get def
R36209:36209 compcert.lib.Maps <> m:644 var
R36207:36207 compcert.lib.Maps <> i:643 var
R36241:36243 compcert.lib.Maps IMap map def
R36246:36248 compcert.lib.Maps IMap get def
R36257:36265 compcert.lib.Maps PMap gmap thm
R36257:36265 compcert.lib.Maps PMap gmap thm
prf 36284:36287 IMap set2
binder 36302:36302 <> A:645
R36315:36317 compcert.lib.Maps IMap elt def
binder 36312:36312 <> i:646
R36326:36326 compcert.lib.Maps <> A:645 var
binder 36321:36321 <> x:647
binder 36323:36323 <> y:648
R36333:36333 compcert.lib.Maps IMap t def
R36335:36335 compcert.lib.Maps <> A:645 var
binder 36330:36330 <> m:649
R36362:36364 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36343:36345 compcert.lib.Maps IMap set def
R36352:36354 compcert.lib.Maps IMap set def
R36360:36360 compcert.lib.Maps <> m:649 var
R36358:36358 compcert.lib.Maps <> x:647 var
R36356:36356 compcert.lib.Maps <> i:646 var
R36349:36349 compcert.lib.Maps <> y:648 var
R36347:36347 compcert.lib.Maps <> i:646 var
R36365:36367 compcert.lib.Maps IMap set def
R36373:36373 compcert.lib.Maps <> m:649 var
R36371:36371 compcert.lib.Maps <> y:648 var
R36369:36369 compcert.lib.Maps <> i:646 var
R36404:36406 compcert.lib.Maps IMap set def
R36415:36423 compcert.lib.Maps PMap set2 thm
R36415:36423 compcert.lib.Maps PMap set2 thm
R36438:36441 compcert.lib.Maps IMap <> mod
mod 36452:36459 <> ZIndexed
def 36475:36475 ZIndexed t
R36480:36480 Coq.Numbers.BinNums <> Z ind
def 36496:36500 ZIndexed index
R36506:36506 Coq.Numbers.BinNums <> Z ind
binder 36503:36503 <> z:650
R36510:36517 Coq.Numbers.BinNums <> positive ind
R36532:36532 compcert.lib.Maps <> z:650 var
R36545:36546 Coq.Numbers.BinNums <> Z0 constr
R36551:36552 Coq.Numbers.BinNums <> xH constr
R36560:36563 Coq.Numbers.BinNums <> Zpos constr
R36570:36571 Coq.Numbers.BinNums <> xO constr
R36581:36584 Coq.Numbers.BinNums <> Zneg constr
R36591:36592 Coq.Numbers.BinNums <> xI constr
prf 36613:36621 ZIndexed index_inj
R36637:36637 Coq.Numbers.BinNums <> Z ind
binder 36632:36632 <> x:652
binder 36634:36634 <> y:653
R36658:36661 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36663:36665 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36662:36662 compcert.lib.Maps <> x:652 var
R36666:36666 compcert.lib.Maps <> y:653 var
R36648:36650 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36641:36645 compcert.lib.Maps ZIndexed index def
R36647:36647 compcert.lib.Maps <> x:652 var
R36651:36655 compcert.lib.Maps ZIndexed index def
R36657:36657 compcert.lib.Maps <> y:653 var
R36689:36693 compcert.lib.Maps ZIndexed index def
def 36819:36820 ZIndexed eq
R36825:36827 compcert.lib.Coqlib <> zeq def
R36834:36841 compcert.lib.Maps ZIndexed <> mod
R36860:36863 compcert.lib.Maps IMap <> modtype
R36865:36872 compcert.lib.Maps ZIndexed <> modtype
mod 36852:36855 <> ZMap
mod 36884:36891 <> NIndexed
def 36907:36907 NIndexed t
R36912:36912 Coq.Numbers.BinNums <> N ind
def 36928:36932 NIndexed index
R36938:36938 Coq.Numbers.BinNums <> N ind
binder 36935:36935 <> n:654
R36942:36949 Coq.Numbers.BinNums <> positive ind
R36964:36964 compcert.lib.Maps <> n:654 var
R36977:36978 Coq.Numbers.BinNums <> N0 constr
R36983:36984 Coq.Numbers.BinNums <> xH constr
R36992:36995 Coq.Numbers.BinNums <> Npos constr
R37002:37003 Coq.Numbers.BinNums <> xO constr
prf 37024:37032 NIndexed index_inj
R37048:37048 Coq.Numbers.BinNums <> N ind
binder 37043:37043 <> x:656
binder 37045:37045 <> y:657
R37069:37072 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37074:37076 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37073:37073 compcert.lib.Maps <> x:656 var
R37077:37077 compcert.lib.Maps <> y:657 var
R37059:37061 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37052:37056 compcert.lib.Maps NIndexed index def
R37058:37058 compcert.lib.Maps <> x:656 var
R37062:37066 compcert.lib.Maps NIndexed index def
R37068:37068 compcert.lib.Maps <> y:657 var
R37100:37104 compcert.lib.Maps NIndexed index def
prf 37209:37210 NIndexed eq
R37226:37226 Coq.Numbers.BinNums <> N ind
binder 37221:37221 <> x:658
binder 37223:37223 <> y:659
R37230:37230 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37236:37240 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37247:37247 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37232:37234 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37231:37231 compcert.lib.Maps <> x:658 var
R37235:37235 compcert.lib.Maps <> y:659 var
R37242:37245 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R37241:37241 compcert.lib.Maps <> x:658 var
R37246:37246 compcert.lib.Maps <> y:659 var
R37286:37288 compcert.lib.Coqlib <> peq def
R37286:37288 compcert.lib.Coqlib <> peq def
R37302:37309 compcert.lib.Maps NIndexed <> mod
R37328:37331 compcert.lib.Maps IMap <> modtype
R37333:37340 compcert.lib.Maps NIndexed <> modtype
mod 37320:37323 <> NMap
modtype 37431:37443 <> EQUALITY_TYPE
ax 37458:37458 EQUALITY_TYPE t
ax 37479:37480 EQUALITY_TYPE eq
R37496:37496 compcert.lib.Maps EQUALITY_TYPE t defax
binder 37491:37491 <> x:661
binder 37493:37493 <> y:662
R37500:37500 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37506:37510 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37517:37517 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37502:37504 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37501:37501 compcert.lib.Maps <> x:661 var
R37505:37505 compcert.lib.Maps <> y:662 var
R37512:37515 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R37511:37511 compcert.lib.Maps <> x:661 var
R37516:37516 compcert.lib.Maps <> y:662 var
R37524:37536 compcert.lib.Maps EQUALITY_TYPE <> modtype
R37555:37567 compcert.lib.Maps EQUALITY_TYPE <> mod
R37573:37575 compcert.lib.Maps MAP <> mod
mod 37547:37550 <> EMap
def 37592:37594 EMap elt
R37599:37601 compcert.lib.Maps X t defax
def 37617:37622 EMap elt_eq
R37627:37630 compcert.lib.Maps X eq defax
def 37646:37646 EMap t
binder 37649:37649 <> A:664
R37664:37667 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37668:37668 compcert.lib.Maps <> A:664 var
R37661:37663 compcert.lib.Maps X t defax
def 37684:37687 EMap init
binder 37690:37690 <> A:665
R37703:37703 compcert.lib.Maps <> A:665 var
binder 37700:37700 <> v:666
R37717:37719 compcert.lib.Maps X t defax
R37725:37725 compcert.lib.Maps <> v:666 var
def 37741:37743 EMap get
binder 37746:37746 <> A:667
R37759:37761 compcert.lib.Maps X t defax
binder 37756:37756 <> x:668
R37768:37768 compcert.lib.Maps EMap t def
R37770:37770 compcert.lib.Maps <> A:667 var
binder 37765:37765 <> m:669
R37776:37776 compcert.lib.Maps <> m:669 var
R37778:37778 compcert.lib.Maps <> x:668 var
def 37794:37796 EMap set
binder 37799:37799 <> A:670
R37812:37814 compcert.lib.Maps X t defax
binder 37809:37809 <> x:671
R37821:37821 compcert.lib.Maps <> A:670 var
binder 37818:37818 <> v:672
R37828:37828 compcert.lib.Maps EMap t def
R37830:37830 compcert.lib.Maps <> A:670 var
binder 37825:37825 <> m:673
R37848:37850 compcert.lib.Maps X t defax
binder 37845:37845 <> y:674
R37859:37862 compcert.lib.Maps X eq defax
R37866:37866 compcert.lib.Maps <> x:671 var
R37864:37864 compcert.lib.Maps <> y:674 var
R37880:37880 compcert.lib.Maps <> m:673 var
R37882:37882 compcert.lib.Maps <> y:674 var
R37873:37873 compcert.lib.Maps <> v:672 var
prf 37893:37894 EMap gi
binder 37909:37909 <> A:675
R37922:37924 compcert.lib.Maps EMap elt def
binder 37919:37919 <> i:676
R37931:37931 compcert.lib.Maps <> A:675 var
binder 37928:37928 <> x:677
R37943:37945 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37935:37938 compcert.lib.Maps EMap init def
R37942:37942 compcert.lib.Maps <> i:676 var
R37940:37940 compcert.lib.Maps <> x:677 var
R37946:37946 compcert.lib.Maps <> x:677 var
prf 37998:38000 EMap gss
binder 38015:38015 <> A:678
R38028:38030 compcert.lib.Maps EMap elt def
binder 38025:38025 <> i:679
R38037:38037 compcert.lib.Maps <> A:678 var
binder 38034:38034 <> x:680
R38044:38044 compcert.lib.Maps EMap t def
R38046:38046 compcert.lib.Maps <> A:678 var
binder 38041:38041 <> m:681
R38063:38065 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38051:38053 compcert.lib.Maps EMap set def
R38059:38059 compcert.lib.Maps <> m:681 var
R38057:38057 compcert.lib.Maps <> x:680 var
R38055:38055 compcert.lib.Maps <> i:679 var
R38062:38062 compcert.lib.Maps <> i:679 var
R38066:38066 compcert.lib.Maps <> x:680 var
R38097:38099 compcert.lib.Maps EMap set def
R38108:38111 compcert.lib.Maps X eq defax
R38108:38111 compcert.lib.Maps X eq defax
prf 38165:38167 EMap gso
binder 38182:38182 <> A:682
R38197:38199 compcert.lib.Maps EMap elt def
binder 38192:38192 <> i:683
binder 38194:38194 <> j:684
R38206:38206 compcert.lib.Maps <> A:682 var
binder 38203:38203 <> x:685
R38213:38213 compcert.lib.Maps EMap t def
R38215:38215 compcert.lib.Maps <> A:682 var
binder 38210:38210 <> m:686
R38229:38232 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38246:38248 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38234:38236 compcert.lib.Maps EMap set def
R38242:38242 compcert.lib.Maps <> m:686 var
R38240:38240 compcert.lib.Maps <> x:685 var
R38238:38238 compcert.lib.Maps <> j:684 var
R38245:38245 compcert.lib.Maps <> i:683 var
R38249:38249 compcert.lib.Maps <> m:686 var
R38251:38251 compcert.lib.Maps <> i:683 var
R38224:38227 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R38223:38223 compcert.lib.Maps <> i:683 var
R38228:38228 compcert.lib.Maps <> j:684 var
R38282:38284 compcert.lib.Maps EMap set def
R38293:38296 compcert.lib.Maps X eq defax
R38293:38296 compcert.lib.Maps X eq defax
prf 38355:38360 EMap gsspec
binder 38375:38375 <> A:687
R38390:38392 compcert.lib.Maps EMap elt def
binder 38385:38385 <> i:688
binder 38387:38387 <> j:689
R38399:38399 compcert.lib.Maps <> A:687 var
binder 38396:38396 <> x:690
R38406:38406 compcert.lib.Maps EMap t def
R38408:38408 compcert.lib.Maps <> A:687 var
binder 38403:38403 <> m:691
R38433:38435 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38416:38418 compcert.lib.Maps EMap get def
R38423:38425 compcert.lib.Maps EMap set def
R38431:38431 compcert.lib.Maps <> m:691 var
R38429:38429 compcert.lib.Maps <> x:690 var
R38427:38427 compcert.lib.Maps <> j:689 var
R38420:38420 compcert.lib.Maps <> i:688 var
R38439:38444 compcert.lib.Maps EMap elt_eq def
R38448:38448 compcert.lib.Maps <> j:689 var
R38446:38446 compcert.lib.Maps <> i:688 var
R38462:38464 compcert.lib.Maps EMap get def
R38468:38468 compcert.lib.Maps <> m:691 var
R38466:38466 compcert.lib.Maps <> i:688 var
R38455:38455 compcert.lib.Maps <> x:690 var
R38499:38501 compcert.lib.Maps EMap get def
R38504:38506 compcert.lib.Maps EMap set def
R38509:38514 compcert.lib.Maps EMap elt_eq def
prf 38545:38551 EMap gsident
binder 38566:38566 <> A:692
R38581:38583 compcert.lib.Maps EMap elt def
binder 38576:38576 <> i:693
binder 38578:38578 <> j:694
R38590:38590 compcert.lib.Maps EMap t def
R38592:38592 compcert.lib.Maps <> A:692 var
binder 38587:38587 <> m:695
R38621:38623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38596:38598 compcert.lib.Maps EMap get def
R38603:38605 compcert.lib.Maps EMap set def
R38619:38619 compcert.lib.Maps <> m:695 var
R38610:38612 compcert.lib.Maps EMap get def
R38616:38616 compcert.lib.Maps <> m:695 var
R38614:38614 compcert.lib.Maps <> i:693 var
R38607:38607 compcert.lib.Maps <> i:693 var
R38600:38600 compcert.lib.Maps <> j:694 var
R38624:38626 compcert.lib.Maps EMap get def
R38630:38630 compcert.lib.Maps <> m:695 var
R38628:38628 compcert.lib.Maps <> j:694 var
R38661:38663 compcert.lib.Maps EMap get def
R38666:38668 compcert.lib.Maps EMap set def
R38677:38680 compcert.lib.Maps X eq defax
R38677:38680 compcert.lib.Maps X eq defax
def 38744:38746 EMap map
binder 38749:38749 <> A:696
binder 38751:38751 <> B:697
R38765:38768 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38769:38769 compcert.lib.Maps <> B:697 var
R38764:38764 compcert.lib.Maps <> A:696 var
binder 38761:38761 <> f:698
R38776:38776 compcert.lib.Maps EMap t def
R38778:38778 compcert.lib.Maps <> A:696 var
binder 38773:38773 <> m:699
R38796:38798 compcert.lib.Maps X t defax
binder 38793:38793 <> x:700
R38804:38804 compcert.lib.Maps <> f:698 var
R38806:38806 compcert.lib.Maps <> m:699 var
R38808:38808 compcert.lib.Maps <> x:700 var
prf 38820:38823 EMap gmap
binder 38838:38838 <> A:701
binder 38840:38840 <> B:702
R38854:38857 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38858:38858 compcert.lib.Maps <> B:702 var
R38853:38853 compcert.lib.Maps <> A:701 var
binder 38850:38850 <> f:703
R38865:38867 compcert.lib.Maps EMap elt def
binder 38862:38862 <> i:704
R38874:38874 compcert.lib.Maps EMap t def
R38876:38876 compcert.lib.Maps <> A:701 var
binder 38871:38871 <> m:705
R38899:38901 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38884:38886 compcert.lib.Maps EMap get def
R38891:38893 compcert.lib.Maps EMap map def
R38897:38897 compcert.lib.Maps <> m:705 var
R38895:38895 compcert.lib.Maps <> f:703 var
R38888:38888 compcert.lib.Maps <> i:704 var
R38902:38902 compcert.lib.Maps <> f:703 var
R38904:38906 compcert.lib.Maps EMap get def
R38910:38910 compcert.lib.Maps <> m:705 var
R38908:38908 compcert.lib.Maps <> i:704 var
R38942:38944 compcert.lib.Maps EMap get def
R38947:38949 compcert.lib.Maps EMap map def
R38976:38979 compcert.lib.Maps EMap <> mod
R39091:39102 compcert.lib.Maps INDEXED_TYPE <> mod
mod 39082:39086 <> ITree
def 39120:39122 ITree elt
R39127:39129 compcert.lib.Maps X t defax
def 39145:39150 ITree elt_eq
R39155:39158 compcert.lib.Maps X eq defax
def 39174:39174 ITree t
R39182:39185 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39194:39200 compcert.lib.Maps PTree t def
def 39217:39221 ITree empty
binder 39224:39224 <> A:706
R39234:39234 compcert.lib.Maps ITree t def
R39236:39236 compcert.lib.Maps <> A:706 var
R39241:39251 compcert.lib.Maps PTree empty def
R39253:39253 compcert.lib.Maps <> A:706 var
def 39269:39271 ITree get
binder 39274:39274 <> A:707
R39287:39289 compcert.lib.Maps ITree elt def
binder 39284:39284 <> k:708
R39296:39296 compcert.lib.Maps ITree t def
R39298:39298 compcert.lib.Maps <> A:707 var
binder 39293:39293 <> m:709
R39302:39307 Coq.Init.Datatypes <> option ind
R39309:39309 compcert.lib.Maps <> A:707 var
R39314:39322 compcert.lib.Maps PTree get def
R39336:39336 compcert.lib.Maps <> m:709 var
R39325:39331 compcert.lib.Maps X index defax
R39333:39333 compcert.lib.Maps <> k:708 var
def 39352:39354 ITree set
binder 39357:39357 <> A:710
R39370:39372 compcert.lib.Maps ITree elt def
binder 39367:39367 <> k:711
R39379:39379 compcert.lib.Maps <> A:710 var
binder 39376:39376 <> v:712
R39386:39386 compcert.lib.Maps ITree t def
R39388:39388 compcert.lib.Maps <> A:710 var
binder 39383:39383 <> m:713
R39392:39392 compcert.lib.Maps ITree t def
R39394:39394 compcert.lib.Maps <> A:710 var
R39399:39407 compcert.lib.Maps PTree set def
R39423:39423 compcert.lib.Maps <> m:713 var
R39421:39421 compcert.lib.Maps <> v:712 var
R39410:39416 compcert.lib.Maps X index defax
R39418:39418 compcert.lib.Maps <> k:711 var
def 39439:39444 ITree remove
binder 39447:39447 <> A:714
R39460:39462 compcert.lib.Maps ITree elt def
binder 39457:39457 <> k:715
R39469:39469 compcert.lib.Maps ITree t def
R39471:39471 compcert.lib.Maps <> A:714 var
binder 39466:39466 <> m:716
R39475:39475 compcert.lib.Maps ITree t def
R39477:39477 compcert.lib.Maps <> A:714 var
R39482:39493 compcert.lib.Maps PTree remove def
R39507:39507 compcert.lib.Maps <> m:716 var
R39496:39502 compcert.lib.Maps X index defax
R39504:39504 compcert.lib.Maps <> k:715 var
prf 39521:39526 ITree gempty
binder 39541:39541 <> A:717
R39554:39556 compcert.lib.Maps ITree elt def
binder 39551:39551 <> i:718
R39575:39577 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39560:39562 compcert.lib.Maps ITree get def
R39567:39571 compcert.lib.Maps ITree empty def
R39573:39573 compcert.lib.Maps <> A:717 var
R39564:39564 compcert.lib.Maps <> i:718 var
R39578:39581 Coq.Init.Datatypes <> None constr
R39611:39622 compcert.lib.Maps PTree gempty thm
R39611:39622 compcert.lib.Maps PTree gempty thm
prf 39642:39644 ITree gss
binder 39659:39659 <> A:719
R39672:39674 compcert.lib.Maps ITree elt def
binder 39669:39669 <> i:720
R39681:39681 compcert.lib.Maps <> A:719 var
binder 39678:39678 <> x:721
R39688:39688 compcert.lib.Maps ITree t def
R39690:39690 compcert.lib.Maps <> A:719 var
binder 39685:39685 <> m:722
R39711:39713 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39694:39696 compcert.lib.Maps ITree get def
R39701:39703 compcert.lib.Maps ITree set def
R39709:39709 compcert.lib.Maps <> m:722 var
R39707:39707 compcert.lib.Maps <> x:721 var
R39705:39705 compcert.lib.Maps <> i:720 var
R39698:39698 compcert.lib.Maps <> i:720 var
R39714:39717 Coq.Init.Datatypes <> Some constr
R39719:39719 compcert.lib.Maps <> x:721 var
R39749:39757 compcert.lib.Maps PTree gss thm
R39749:39757 compcert.lib.Maps PTree gss thm
prf 39777:39779 ITree gso
binder 39794:39794 <> A:723
R39809:39811 compcert.lib.Maps ITree elt def
binder 39804:39804 <> i:724
binder 39806:39806 <> j:725
R39818:39818 compcert.lib.Maps <> A:723 var
binder 39815:39815 <> x:726
R39825:39825 compcert.lib.Maps ITree t def
R39827:39827 compcert.lib.Maps <> A:723 var
binder 39822:39822 <> m:727
R39841:39844 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39862:39864 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39845:39847 compcert.lib.Maps ITree get def
R39852:39854 compcert.lib.Maps ITree set def
R39860:39860 compcert.lib.Maps <> m:727 var
R39858:39858 compcert.lib.Maps <> x:726 var
R39856:39856 compcert.lib.Maps <> j:725 var
R39849:39849 compcert.lib.Maps <> i:724 var
R39865:39867 compcert.lib.Maps ITree get def
R39871:39871 compcert.lib.Maps <> m:727 var
R39869:39869 compcert.lib.Maps <> i:724 var
R39836:39839 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R39835:39835 compcert.lib.Maps <> i:724 var
R39840:39840 compcert.lib.Maps <> j:725 var
R39901:39909 compcert.lib.Maps PTree gso thm
R39901:39909 compcert.lib.Maps PTree gso thm
R39939:39949 compcert.lib.Maps X index_inj prfax
R39939:39949 compcert.lib.Maps X index_inj prfax
prf 39975:39980 ITree gsspec
binder 39995:39995 <> A:728
R40010:40012 compcert.lib.Maps ITree elt def
binder 40005:40005 <> i:729
binder 40007:40007 <> j:730
R40019:40019 compcert.lib.Maps <> A:728 var
binder 40016:40016 <> x:731
R40026:40026 compcert.lib.Maps ITree t def
R40028:40028 compcert.lib.Maps <> A:728 var
binder 40023:40023 <> m:732
R40053:40055 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40036:40038 compcert.lib.Maps ITree get def
R40043:40045 compcert.lib.Maps ITree set def
R40051:40051 compcert.lib.Maps <> m:732 var
R40049:40049 compcert.lib.Maps <> x:731 var
R40047:40047 compcert.lib.Maps <> j:730 var
R40040:40040 compcert.lib.Maps <> i:729 var
R40059:40064 compcert.lib.Maps ITree elt_eq def
R40068:40068 compcert.lib.Maps <> j:730 var
R40066:40066 compcert.lib.Maps <> i:729 var
R40087:40089 compcert.lib.Maps ITree get def
R40093:40093 compcert.lib.Maps <> m:732 var
R40091:40091 compcert.lib.Maps <> i:729 var
R40075:40078 Coq.Init.Datatypes <> Some constr
R40080:40080 compcert.lib.Maps <> x:731 var
R40127:40132 compcert.lib.Maps ITree elt_eq def
R40127:40132 compcert.lib.Maps ITree elt_eq def
R40155:40157 compcert.lib.Maps ITree gss thm
R40155:40157 compcert.lib.Maps ITree gss thm
R40166:40168 compcert.lib.Maps ITree gso thm
R40166:40168 compcert.lib.Maps ITree gso thm
prf 40194:40196 ITree grs
binder 40211:40211 <> A:733
R40224:40226 compcert.lib.Maps ITree elt def
binder 40221:40221 <> i:734
R40233:40233 compcert.lib.Maps ITree t def
R40235:40235 compcert.lib.Maps <> A:733 var
binder 40230:40230 <> m:735
R40257:40259 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40239:40241 compcert.lib.Maps ITree get def
R40246:40251 compcert.lib.Maps ITree remove def
R40255:40255 compcert.lib.Maps <> m:735 var
R40253:40253 compcert.lib.Maps <> i:734 var
R40243:40243 compcert.lib.Maps <> i:734 var
R40260:40263 Coq.Init.Datatypes <> None constr
R40293:40301 compcert.lib.Maps PTree grs thm
R40293:40301 compcert.lib.Maps PTree grs thm
prf 40321:40323 ITree gro
binder 40338:40338 <> A:736
R40353:40355 compcert.lib.Maps ITree elt def
binder 40348:40348 <> i:737
binder 40350:40350 <> j:738
R40362:40362 compcert.lib.Maps ITree t def
R40364:40364 compcert.lib.Maps <> A:736 var
binder 40359:40359 <> m:739
R40378:40381 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40400:40402 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40382:40384 compcert.lib.Maps ITree get def
R40389:40394 compcert.lib.Maps ITree remove def
R40398:40398 compcert.lib.Maps <> m:739 var
R40396:40396 compcert.lib.Maps <> j:738 var
R40386:40386 compcert.lib.Maps <> i:737 var
R40403:40405 compcert.lib.Maps ITree get def
R40409:40409 compcert.lib.Maps <> m:739 var
R40407:40407 compcert.lib.Maps <> i:737 var
R40373:40376 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R40372:40372 compcert.lib.Maps <> i:737 var
R40377:40377 compcert.lib.Maps <> j:738 var
R40439:40447 compcert.lib.Maps PTree gro thm
R40439:40447 compcert.lib.Maps PTree gro thm
R40477:40487 compcert.lib.Maps X index_inj prfax
R40477:40487 compcert.lib.Maps X index_inj prfax
prf 40513:40518 ITree grspec
binder 40533:40533 <> A:740
R40548:40550 compcert.lib.Maps ITree elt def
binder 40543:40543 <> i:741
binder 40545:40545 <> j:742
R40557:40557 compcert.lib.Maps ITree t def
R40559:40559 compcert.lib.Maps <> A:740 var
binder 40554:40554 <> m:743
R40585:40587 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40567:40569 compcert.lib.Maps ITree get def
R40574:40579 compcert.lib.Maps ITree remove def
R40583:40583 compcert.lib.Maps <> m:743 var
R40581:40581 compcert.lib.Maps <> j:742 var
R40571:40571 compcert.lib.Maps <> i:741 var
R40591:40596 compcert.lib.Maps ITree elt_eq def
R40600:40600 compcert.lib.Maps <> j:742 var
R40598:40598 compcert.lib.Maps <> i:741 var
R40617:40619 compcert.lib.Maps ITree get def
R40623:40623 compcert.lib.Maps <> m:743 var
R40621:40621 compcert.lib.Maps <> i:741 var
R40607:40610 Coq.Init.Datatypes <> None constr
R40657:40662 compcert.lib.Maps ITree elt_eq def
R40657:40662 compcert.lib.Maps ITree elt_eq def
R40685:40687 compcert.lib.Maps ITree grs thm
R40685:40687 compcert.lib.Maps ITree grs thm
R40696:40698 compcert.lib.Maps ITree gro thm
R40696:40698 compcert.lib.Maps ITree gro thm
def 40728:40730 ITree beq
binder 40741:40741 <> A:744
R40751:40751 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40766:40770 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40774:40777 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40781:40784 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40785:40788 Coq.Init.Datatypes <> bool ind
R40778:40778 compcert.lib.Maps ITree t def
R40780:40780 compcert.lib.Maps <> A:744 var
R40771:40771 compcert.lib.Maps ITree t def
R40773:40773 compcert.lib.Maps <> A:744 var
R40753:40756 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40758:40761 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40762:40765 Coq.Init.Datatypes <> bool ind
R40757:40757 compcert.lib.Maps <> A:744 var
R40752:40752 compcert.lib.Maps <> A:744 var
R40793:40801 compcert.lib.Maps PTree beq def
prf 40814:40822 ITree beq_sound
binder 40837:40837 <> A:745
R40853:40856 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40858:40861 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40862:40865 Coq.Init.Datatypes <> bool ind
R40857:40857 compcert.lib.Maps <> A:745 var
R40852:40852 compcert.lib.Maps <> A:745 var
binder 40847:40849 <> eqA:746
R40876:40876 compcert.lib.Maps ITree t def
R40878:40878 compcert.lib.Maps <> A:745 var
binder 40869:40870 <> t1:747
binder 40872:40873 <> t2:748
R40906:40913 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40925:40927 compcert.lib.Maps ITree elt def
binder 40922:40922 <> x:749
R40952:40954 compcert.lib.Maps ITree get def
R40958:40959 compcert.lib.Maps <> t2:748 var
R40956:40956 compcert.lib.Maps <> x:749 var
R40942:40944 compcert.lib.Maps ITree get def
R40948:40949 compcert.lib.Maps <> t1:747 var
R40946:40946 compcert.lib.Maps <> x:749 var
R40973:40976 Coq.Init.Datatypes <> None constr
R40979:40982 Coq.Init.Datatypes <> None constr
R40987:40990 Coq.Init.Logic <> True ind
R40999:41002 Coq.Init.Datatypes <> Some constr
R41008:41011 Coq.Init.Datatypes <> Some constr
R41028:41030 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41019:41021 compcert.lib.Maps <> eqA:746 var
R41031:41034 Coq.Init.Datatypes <> true constr
R41051:41055 Coq.Init.Logic <> False ind
R40899:40901 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40886:40888 compcert.lib.Maps ITree beq def
R40897:40898 compcert.lib.Maps <> t2:748 var
R40894:40895 compcert.lib.Maps <> t1:747 var
R40890:40892 compcert.lib.Maps <> eqA:746 var
R40902:40905 Coq.Init.Datatypes <> true constr
R41086:41088 compcert.lib.Maps ITree beq def
R41091:41093 compcert.lib.Maps ITree get def
R41112:41128 compcert.lib.Maps PTree beq_correct thm
R41112:41128 compcert.lib.Maps PTree beq_correct thm
R41112:41128 compcert.lib.Maps PTree beq_correct thm
def 41166:41172 ITree combine
binder 41183:41183 <> A:750
binder 41185:41185 <> B:751
binder 41187:41187 <> C:752
R41197:41197 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41230:41234 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41238:41241 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41245:41248 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41249:41249 compcert.lib.Maps ITree t def
R41251:41251 compcert.lib.Maps <> C:752 var
R41242:41242 compcert.lib.Maps ITree t def
R41244:41244 compcert.lib.Maps <> B:751 var
R41235:41235 compcert.lib.Maps ITree t def
R41237:41237 compcert.lib.Maps <> A:750 var
R41206:41209 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41218:41221 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41222:41227 Coq.Init.Datatypes <> option ind
R41229:41229 compcert.lib.Maps <> C:752 var
R41210:41215 Coq.Init.Datatypes <> option ind
R41217:41217 compcert.lib.Maps <> B:751 var
R41198:41203 Coq.Init.Datatypes <> option ind
R41205:41205 compcert.lib.Maps <> A:750 var
R41256:41268 compcert.lib.Maps PTree combine def
prf 41281:41288 ITree gcombine
binder 41303:41303 <> A:753
binder 41305:41305 <> B:754
binder 41307:41307 <> C:755
R41328:41331 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41340:41343 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41344:41349 Coq.Init.Datatypes <> option ind
R41351:41351 compcert.lib.Maps <> C:755 var
R41332:41337 Coq.Init.Datatypes <> option ind
R41339:41339 compcert.lib.Maps <> B:754 var
R41320:41325 Coq.Init.Datatypes <> option ind
R41327:41327 compcert.lib.Maps <> A:753 var
binder 41317:41317 <> f:756
R41377:41384 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41397:41397 compcert.lib.Maps ITree t def
R41399:41399 compcert.lib.Maps <> A:753 var
binder 41393:41394 <> m1:757
R41407:41407 compcert.lib.Maps ITree t def
R41409:41409 compcert.lib.Maps <> B:754 var
binder 41403:41404 <> m2:758
R41416:41418 compcert.lib.Maps ITree elt def
binder 41413:41413 <> i:759
R41449:41451 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41426:41428 compcert.lib.Maps ITree get def
R41433:41439 compcert.lib.Maps ITree combine def
R41446:41447 compcert.lib.Maps <> m2:758 var
R41443:41444 compcert.lib.Maps <> m1:757 var
R41441:41441 compcert.lib.Maps <> f:756 var
R41430:41430 compcert.lib.Maps <> i:759 var
R41452:41452 compcert.lib.Maps <> f:756 var
R41466:41468 compcert.lib.Maps ITree get def
R41472:41473 compcert.lib.Maps <> m2:758 var
R41470:41470 compcert.lib.Maps <> i:759 var
R41455:41457 compcert.lib.Maps ITree get def
R41461:41462 compcert.lib.Maps <> m1:757 var
R41459:41459 compcert.lib.Maps <> i:759 var
R41370:41372 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41359:41359 compcert.lib.Maps <> f:756 var
R41366:41369 Coq.Init.Datatypes <> None constr
R41361:41364 Coq.Init.Datatypes <> None constr
R41373:41376 Coq.Init.Datatypes <> None constr
R41504:41517 compcert.lib.Maps PTree gcombine thm
R41504:41517 compcert.lib.Maps PTree gcombine thm
R41537:41541 compcert.lib.Maps ITree <> mod
R41561:41565 compcert.lib.Maps ITree <> modtype
R41567:41574 compcert.lib.Maps ZIndexed <> modtype
mod 41552:41556 <> ZTree
R41648:41651 compcert.lib.Maps TREE <> mod
mod 41629:41643 <> Tree_Properties
sec 41708:41720 Tree_Properties TREE_FOLD_IND
var 41734:41734 Tree_Properties.TREE_FOLD_IND V
var 41736:41736 Tree_Properties.TREE_FOLD_IND A
var 41754:41754 Tree_Properties.TREE_FOLD_IND f
R41758:41761 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41767:41770 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41772:41775 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41776:41776 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.A var
R41771:41771 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R41762:41766 compcert.lib.Maps T elt defax
R41757:41757 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.A var
var 41788:41788 Tree_Properties.TREE_FOLD_IND P
R41796:41799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41801:41804 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41800:41800 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.A var
R41791:41793 compcert.lib.Maps T t defax
R41795:41795 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
var 41820:41823 Tree_Properties.TREE_FOLD_IND init
R41826:41826 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.A var
var 41838:41844 Tree_Properties.TREE_FOLD_IND m_final
R41847:41849 compcert.lib.Maps T t defax
R41851:41851 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
var 41866:41873 Tree_Properties.TREE_FOLD_IND P_compat
binder 41885:41885 <> m:766
binder 41887:41888 <> m':767
binder 41890:41890 <> a:768
R41895:41895 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41928:41934 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41940:41943 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41944:41944 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R41949:41949 compcert.lib.Maps <> a:768 var
R41946:41947 compcert.lib.Maps <> m':767 var
R41935:41935 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R41939:41939 compcert.lib.Maps <> a:768 var
R41937:41937 compcert.lib.Maps <> m:766 var
binder 41903:41903 <> x:769
R41915:41917 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41906:41910 compcert.lib.Maps T get defax
R41914:41914 compcert.lib.Maps <> m:766 var
R41912:41912 compcert.lib.Maps <> x:769 var
R41918:41922 compcert.lib.Maps T get defax
R41926:41927 compcert.lib.Maps <> m':767 var
R41924:41924 compcert.lib.Maps <> x:769 var
var 41964:41969 Tree_Properties.TREE_FOLD_IND H_base
R41974:41974 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R41988:41991 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.init var
R41977:41983 compcert.lib.Maps T empty defax
var 42006:42010 Tree_Properties.TREE_FOLD_IND H_rec
binder 42022:42022 <> m:772
binder 42024:42024 <> a:773
binder 42026:42026 <> k:774
binder 42028:42028 <> v:775
R42049:42052 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42077:42080 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42086:42089 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42090:42090 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R42107:42107 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f var
R42113:42113 compcert.lib.Maps <> v:775 var
R42111:42111 compcert.lib.Maps <> k:774 var
R42109:42109 compcert.lib.Maps <> a:773 var
R42093:42097 compcert.lib.Maps T set defax
R42103:42103 compcert.lib.Maps <> m:772 var
R42101:42101 compcert.lib.Maps <> v:775 var
R42099:42099 compcert.lib.Maps <> k:774 var
R42081:42081 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R42085:42085 compcert.lib.Maps <> a:773 var
R42083:42083 compcert.lib.Maps <> m:772 var
R42068:42070 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42053:42057 compcert.lib.Maps T get defax
R42061:42067 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R42059:42059 compcert.lib.Maps <> k:774 var
R42071:42074 Coq.Init.Datatypes <> Some constr
R42076:42076 compcert.lib.Maps <> v:775 var
R42042:42044 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42033:42037 compcert.lib.Maps T get defax
R42041:42041 compcert.lib.Maps <> m:772 var
R42039:42039 compcert.lib.Maps <> k:774 var
R42045:42048 Coq.Init.Datatypes <> None constr
var 42122:42123 Tree_Properties.TREE_FOLD_IND f'
R42129:42129 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.A var
binder 42126:42126 <> a:777
R42142:42144 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R42137:42141 compcert.lib.Maps T elt defax
R42145:42145 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
binder 42133:42133 <> p:778
R42151:42151 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f var
R42164:42166 Coq.Init.Datatypes <> snd def
R42168:42168 compcert.lib.Maps <> p:778 var
R42156:42158 Coq.Init.Datatypes <> fst def
R42160:42160 compcert.lib.Maps <> p:778 var
R42153:42153 compcert.lib.Maps <> a:777 var
var 42177:42178 Tree_Properties.TREE_FOLD_IND P'
R42184:42187 Coq.Init.Datatypes <> list ind
R42195:42197 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R42190:42194 compcert.lib.Maps T elt defax
R42198:42198 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
binder 42181:42181 <> l:779
R42206:42206 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.A var
binder 42203:42203 <> a:780
binder 42228:42228 <> m:781
R42258:42261 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42262:42262 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R42266:42266 compcert.lib.Maps <> a:780 var
R42264:42264 compcert.lib.Maps <> m:781 var
R42231:42240 compcert.lib.Coqlib <> list_equiv def
R42245:42254 compcert.lib.Maps T elements defax
R42256:42256 compcert.lib.Maps <> m:781 var
R42242:42242 compcert.lib.Maps <> l:779 var
prf 42277:42283 Tree_Properties H_base'
R42288:42289 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R42295:42298 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.init var
R42291:42293 Coq.Init.Datatypes <> nil constr
R42344:42350 compcert.lib.Maps T empty defax
R42329:42336 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R42344:42350 compcert.lib.Maps T empty defax
R42329:42336 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R42380:42387 compcert.lib.Maps T gempty prfax
R42380:42387 compcert.lib.Maps T gempty prfax
R42380:42387 compcert.lib.Maps T gempty prfax
R42409:42413 compcert.lib.Maps T get defax
R42409:42413 compcert.lib.Maps T get defax
R42445:42446 Coq.Lists.List <> In def
R42455:42457 Coq.Init.Datatypes <> nil constr
R42448:42448 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42450:42451 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42453:42453 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42445:42446 Coq.Lists.List <> In def
R42455:42457 Coq.Init.Datatypes <> nil constr
R42448:42448 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42450:42451 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42453:42453 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42472:42472 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42474:42475 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42477:42477 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42472:42472 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42474:42475 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42477:42477 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42472:42472 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42474:42475 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42477:42477 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42487:42504 compcert.lib.Maps T elements_correct prfax
R42487:42504 compcert.lib.Maps T elements_correct prfax
prf 42543:42548 Tree_Properties H_rec'
binder 42560:42560 <> k:782
binder 42562:42562 <> v:783
binder 42564:42564 <> l:784
binder 42566:42566 <> a:785
R42604:42609 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42640:42645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42652:42657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42658:42659 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R42683:42683 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f var
R42689:42689 compcert.lib.Maps <> v:783 var
R42687:42687 compcert.lib.Maps <> k:782 var
R42685:42685 compcert.lib.Maps <> a:785 var
R42663:42666 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R42662:42662 compcert.lib.Maps <> l:784 var
R42673:42676 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R42667:42667 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42669:42670 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42672:42672 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42668:42668 compcert.lib.Maps <> k:782 var
R42671:42671 compcert.lib.Maps <> v:783 var
R42677:42679 Coq.Init.Datatypes <> nil constr
R42646:42647 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R42651:42651 compcert.lib.Maps <> a:785 var
R42649:42649 compcert.lib.Maps <> l:784 var
R42610:42611 Coq.Lists.List <> In def
R42621:42630 compcert.lib.Maps T elements defax
R42632:42638 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R42613:42613 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42615:42616 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42618:42618 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42614:42614 compcert.lib.Maps <> k:782 var
R42617:42617 compcert.lib.Maps <> v:783 var
R42571:42571 Coq.Init.Logic <> ::type_scope:'~'_x not
R42572:42573 Coq.Lists.List <> In def
R42578:42585 Coq.Lists.List <> map def
R42602:42602 compcert.lib.Maps <> l:784 var
R42589:42591 Coq.Init.Datatypes <> fst def
R42599:42599 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R42593:42597 compcert.lib.Maps T elt defax
R42575:42575 compcert.lib.Maps <> k:782 var
R42709:42710 compcert.lib.Maps <> P' vardef
R42734:42741 compcert.lib.Maps T remove defax
R42734:42741 compcert.lib.Maps T remove defax
R42772:42776 compcert.lib.Maps T set defax
R42757:42764 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R42772:42776 compcert.lib.Maps T set defax
R42757:42764 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R42818:42825 compcert.lib.Maps T gsspec prfax
R42818:42825 compcert.lib.Maps T gsspec prfax
R42818:42825 compcert.lib.Maps T gsspec prfax
R42838:42845 compcert.lib.Maps T elt_eq defax
R42838:42845 compcert.lib.Maps T elt_eq defax
R42873:42891 compcert.lib.Maps T elements_complete prfax
R42873:42891 compcert.lib.Maps T elements_complete prfax
R42909:42909 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42911:42912 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42914:42914 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42909:42909 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42911:42912 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42914:42914 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42909:42909 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42911:42912 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42914:42914 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42928:42936 Coq.Lists.List <> in_or_app thm
R42928:42936 Coq.Lists.List <> in_or_app thm
R42978:42982 compcert.lib.Maps T gro prfax
R42978:42982 compcert.lib.Maps T gro prfax
R42999:43003 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.H_rec var
R42999:43003 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.H_rec var
R43023:43027 compcert.lib.Maps T grs prfax
R43023:43027 compcert.lib.Maps T grs prfax
R43036:43054 compcert.lib.Maps T elements_complete prfax
R43036:43054 compcert.lib.Maps T elements_complete prfax
R43121:43138 compcert.lib.Maps T elements_correct prfax
R43121:43138 compcert.lib.Maps T elements_correct prfax
R43160:43164 compcert.lib.Maps T gro prfax
R43160:43164 compcert.lib.Maps T gro prfax
R43160:43164 compcert.lib.Maps T gro prfax
R43160:43164 compcert.lib.Maps T gro prfax
R43173:43191 compcert.lib.Maps T elements_complete prfax
R43173:43191 compcert.lib.Maps T elements_complete prfax
R43211:43211 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43214:43215 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43218:43218 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43211:43211 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43214:43215 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43218:43218 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43211:43211 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43214:43215 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43218:43218 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43228:43236 Coq.Lists.List <> in_or_app thm
R43228:43236 Coq.Lists.List <> in_or_app thm
R43292:43294 Coq.Init.Datatypes <> fst def
R43296:43296 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43298:43299 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43302:43302 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43292:43294 Coq.Init.Datatypes <> fst def
R43296:43296 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43298:43299 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43302:43302 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43312:43317 Coq.Lists.List <> in_map thm
R43312:43317 Coq.Lists.List <> in_map thm
R43347:43349 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43336:43340 compcert.lib.Maps T get defax
R43350:43353 Coq.Init.Datatypes <> Some constr
R43347:43349 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43336:43340 compcert.lib.Maps T get defax
R43350:43353 Coq.Init.Datatypes <> Some constr
R43366:43384 compcert.lib.Maps T elements_complete prfax
R43366:43384 compcert.lib.Maps T elements_complete prfax
R43420:43427 compcert.lib.Maps T grspec prfax
R43420:43427 compcert.lib.Maps T grspec prfax
R43420:43427 compcert.lib.Maps T grspec prfax
R43446:43453 compcert.lib.Maps T elt_eq defax
R43446:43453 compcert.lib.Maps T elt_eq defax
R43484:43485 Coq.Lists.List <> In def
R43497:43506 compcert.lib.Maps T elements defax
R43487:43487 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43490:43491 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43494:43494 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43484:43485 Coq.Lists.List <> In def
R43497:43506 compcert.lib.Maps T elements defax
R43487:43487 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43490:43491 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43494:43494 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43519:43536 compcert.lib.Maps T elements_correct prfax
R43519:43536 compcert.lib.Maps T elements_correct prfax
R43562:43562 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43565:43566 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43569:43569 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43562:43562 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43565:43566 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43569:43569 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43562:43562 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43565:43566 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43569:43569 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43589:43597 Coq.Lists.List <> in_app_or thm
R43589:43597 Coq.Lists.List <> in_app_or thm
prf 43665:43676 Tree_Properties fold_rec_aux
binder 43688:43689 <> l1:786
binder 43691:43692 <> l2:787
binder 43694:43694 <> a:788
R43741:43746 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43818:43823 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43865:43870 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43878:43881 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43882:43883 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R43897:43910 Coq.Lists.List <> fold_left def
R43918:43918 compcert.lib.Maps <> a:788 var
R43915:43916 compcert.lib.Maps <> l1:786 var
R43912:43913 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R43888:43891 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R43886:43887 compcert.lib.Maps <> l2:787 var
R43892:43893 compcert.lib.Maps <> l1:786 var
R43871:43872 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R43877:43877 compcert.lib.Maps <> a:788 var
R43874:43875 compcert.lib.Maps <> l2:787 var
R43824:43835 compcert.lib.Coqlib <> list_norepet ind
R43838:43845 Coq.Lists.List <> map def
R43862:43863 compcert.lib.Maps <> l1:786 var
R43849:43851 Coq.Init.Datatypes <> fst def
R43859:43859 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R43853:43857 compcert.lib.Maps T elt defax
R43747:43759 compcert.lib.Coqlib <> list_disjoint def
R43791:43798 Coq.Lists.List <> map def
R43815:43816 compcert.lib.Maps <> l2:787 var
R43802:43804 Coq.Init.Datatypes <> fst def
R43812:43812 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R43806:43810 compcert.lib.Maps T elt defax
R43762:43769 Coq.Lists.List <> map def
R43786:43787 compcert.lib.Maps <> l1:786 var
R43773:43775 Coq.Init.Datatypes <> fst def
R43783:43783 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.V var
R43777:43781 compcert.lib.Maps T elt defax
R43699:43708 compcert.lib.Coqlib <> list_equiv def
R43722:43731 compcert.lib.Maps T elements defax
R43733:43739 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R43713:43716 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R43711:43712 compcert.lib.Maps <> l2:787 var
R43717:43718 compcert.lib.Maps <> l1:786 var
R43973:43988 Coq.Lists.List <> app_nil_end thm
R43973:43988 Coq.Lists.List <> app_nil_end thm
R43973:43988 Coq.Lists.List <> app_nil_end thm
R44056:44059 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44050:44050 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44052:44053 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44055:44055 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44070:44070 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44084:44088 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44077:44080 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44071:44071 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44073:44074 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44076:44076 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44081:44083 Coq.Init.Datatypes <> nil constr
R44056:44059 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44050:44050 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44052:44053 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44055:44055 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44070:44070 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44084:44088 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44077:44080 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R44071:44071 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44073:44074 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44076:44076 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44081:44083 Coq.Init.Datatypes <> nil constr
R44105:44116 Coq.Lists.List <> app_ass syndef
R44105:44116 Coq.Lists.List <> app_ass syndef
R44105:44116 Coq.Lists.List <> app_ass syndef
R44141:44147 Coq.Lists.List <> app_ass syndef
R44141:44147 Coq.Lists.List <> app_ass syndef
R44141:44147 Coq.Lists.List <> app_ass syndef
R44179:44185 Coq.Lists.List <> map_app thm
R44179:44185 Coq.Lists.List <> map_app thm
R44179:44185 Coq.Lists.List <> map_app thm
R44204:44212 Coq.Lists.List <> in_app_or thm
R44204:44212 Coq.Lists.List <> in_app_or thm
R44307:44308 compcert.lib.Maps <> f' vardef
R44324:44329 compcert.lib.Maps Tree_Properties H_rec' thm
R44324:44329 compcert.lib.Maps Tree_Properties H_rec' thm
R44345:44363 compcert.lib.Coqlib <> list_disjoint_notin thm
R44345:44363 compcert.lib.Coqlib <> list_disjoint_notin thm
R44401:44401 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44403:44404 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44406:44406 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44401:44401 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44403:44404 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44406:44406 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44401:44401 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44403:44404 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44406:44406 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44416:44424 Coq.Lists.List <> in_or_app thm
R44416:44424 Coq.Lists.List <> in_or_app thm
prf 44454:44461 Tree_Properties fold_rec
R44466:44466 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P var
R44477:44482 compcert.lib.Maps T fold defax
R44494:44497 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.init var
R44486:44492 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44484:44484 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f var
R44468:44474 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44526:44536 compcert.lib.Maps T fold_spec prfax
R44526:44536 compcert.lib.Maps T fold_spec prfax
R44526:44536 compcert.lib.Maps T fold_spec prfax
R44544:44545 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R44544:44545 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R44558:44559 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R44590:44603 Coq.Lists.List <> fold_left def
R44629:44632 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.init var
R44609:44618 compcert.lib.Maps T elements defax
R44620:44626 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44605:44606 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R44565:44568 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44562:44564 Coq.Init.Datatypes <> nil constr
R44569:44578 compcert.lib.Maps T elements defax
R44580:44586 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44558:44559 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R44590:44603 Coq.Lists.List <> fold_left def
R44629:44632 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.init var
R44609:44618 compcert.lib.Maps T elements defax
R44620:44626 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44605:44606 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R44565:44568 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R44562:44564 Coq.Init.Datatypes <> nil constr
R44569:44578 compcert.lib.Maps T elements defax
R44580:44586 compcert.lib.Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R44647:44658 compcert.lib.Maps Tree_Properties fold_rec_aux thm
R44647:44658 compcert.lib.Maps Tree_Properties fold_rec_aux thm
R44735:44757 compcert.lib.Maps T elements_keys_norepet prfax
R44735:44757 compcert.lib.Maps T elements_keys_norepet prfax
R44770:44776 compcert.lib.Maps Tree_Properties H_base' thm
R44770:44776 compcert.lib.Maps Tree_Properties H_base' thm
R44842:44854 compcert.lib.Maps Tree_Properties.TREE_FOLD_IND <> sec
sec 44907:44913 Tree_Properties MEASURE
var 44926:44926 Tree_Properties.MEASURE V
def 44947:44954 Tree_Properties cardinal
R44960:44962 compcert.lib.Maps T t defax
R44964:44964 compcert.lib.Maps <> Tree_Properties.MEASURE.V var
binder 44957:44957 <> x:790
R44969:44971 Coq.Init.Datatypes <> nat ind
R44976:44986 Coq.Lists.List <> length syndef
R44989:44998 compcert.lib.Maps T elements defax
R45000:45000 compcert.lib.Maps <> x:790 var
prf 45013:45027 Tree_Properties cardinal_remove
binder 45039:45039 <> x:791
binder 45041:45041 <> m:792
binder 45043:45043 <> y:793
R45064:45067 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45092:45094 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R45069:45076 compcert.lib.Maps Tree_Properties cardinal def
R45079:45086 compcert.lib.Maps T remove defax
R45090:45090 compcert.lib.Maps <> m:792 var
R45088:45088 compcert.lib.Maps <> x:791 var
R45095:45102 compcert.lib.Maps Tree_Properties cardinal def
R45104:45104 compcert.lib.Maps <> m:792 var
R45055:45057 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45046:45050 compcert.lib.Maps T get defax
R45054:45054 compcert.lib.Maps <> m:792 var
R45052:45052 compcert.lib.Maps <> x:791 var
R45058:45061 Coq.Init.Datatypes <> Some constr
R45063:45063 compcert.lib.Maps <> y:793 var
R45128:45135 compcert.lib.Maps Tree_Properties cardinal def
R45156:45172 compcert.lib.Maps T elements_remove prfax
R45234:45243 Coq.Lists.List <> app_length thm
R45234:45243 Coq.Lists.List <> app_length thm
R45234:45243 Coq.Lists.List <> app_length thm
R45234:45243 Coq.Lists.List <> app_length thm
R45234:45243 Coq.Lists.List <> app_length thm
prf 45274:45285 Tree_Properties cardinal_set
binder 45297:45297 <> x:794
binder 45299:45299 <> m:795
binder 45301:45301 <> y:796
R45320:45323 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45335:45337 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R45325:45332 compcert.lib.Maps Tree_Properties cardinal def
R45334:45334 compcert.lib.Maps <> m:795 var
R45338:45345 compcert.lib.Maps Tree_Properties cardinal def
R45348:45352 compcert.lib.Maps T set defax
R45358:45358 compcert.lib.Maps <> m:795 var
R45356:45356 compcert.lib.Maps <> y:796 var
R45354:45354 compcert.lib.Maps <> x:794 var
R45313:45315 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45304:45308 compcert.lib.Maps T get defax
R45312:45312 compcert.lib.Maps <> m:795 var
R45310:45310 compcert.lib.Maps <> x:794 var
R45316:45319 Coq.Init.Datatypes <> None constr
R45395:45399 compcert.lib.Maps T set defax
R45395:45399 compcert.lib.Maps T set defax
R45420:45427 compcert.lib.Maps Tree_Properties cardinal def
R45438:45445 compcert.lib.Maps Tree_Properties cardinal def
R45448:45455 compcert.lib.Maps T remove defax
R45420:45427 compcert.lib.Maps Tree_Properties cardinal def
R45438:45445 compcert.lib.Maps Tree_Properties cardinal def
R45448:45455 compcert.lib.Maps T remove defax
R45473:45487 compcert.lib.Maps Tree_Properties cardinal_remove thm
R45473:45487 compcert.lib.Maps Tree_Properties cardinal_remove thm
R45514:45518 compcert.lib.Maps T gss prfax
R45514:45518 compcert.lib.Maps T gss prfax
R45530:45537 compcert.lib.Maps Tree_Properties cardinal def
R45555:45576 compcert.lib.Maps T elements_extensional prfax
R45555:45576 compcert.lib.Maps T elements_extensional prfax
R45608:45615 compcert.lib.Maps T grspec prfax
R45618:45625 compcert.lib.Maps T gsspec prfax
R45608:45615 compcert.lib.Maps T grspec prfax
R45608:45615 compcert.lib.Maps T grspec prfax
R45618:45625 compcert.lib.Maps T gsspec prfax
R45618:45625 compcert.lib.Maps T gsspec prfax
R45640:45647 compcert.lib.Maps T elt_eq defax
R45640:45647 compcert.lib.Maps T elt_eq defax
R45683:45689 compcert.lib.Maps Tree_Properties.MEASURE <> sec
sec 45727:45739 Tree_Properties FORALL_EXISTS
var 45752:45752 Tree_Properties.FORALL_EXISTS A
def 45773:45779 Tree_Properties for_all
R45785:45787 compcert.lib.Maps T t defax
R45789:45789 compcert.lib.Maps <> Tree_Properties.FORALL_EXISTS.A var
binder 45782:45782 <> m:798
R45801:45804 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45806:45809 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45810:45813 Coq.Init.Datatypes <> bool ind
R45805:45805 compcert.lib.Maps <> Tree_Properties.FORALL_EXISTS.A var
R45796:45800 compcert.lib.Maps T elt defax
binder 45793:45793 <> f:799
R45818:45821 Coq.Init.Datatypes <> bool ind
R45828:45833 compcert.lib.Maps T fold defax
R45863:45866 Coq.Init.Datatypes <> true constr
R45861:45861 compcert.lib.Maps <> m:798 var
binder 45840:45840 <> b:800
binder 45842:45842 <> x:801
binder 45844:45844 <> a:802
R45850:45853 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R45849:45849 compcert.lib.Maps <> b:800 var
R45854:45854 compcert.lib.Maps <> f:799 var
R45858:45858 compcert.lib.Maps <> a:802 var
R45856:45856 compcert.lib.Maps <> x:801 var
prf 45876:45890 Tree_Properties for_all_correct
binder 45902:45902 <> m:803
binder 45904:45904 <> f:804
R45927:45932 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R45979:45979 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R45920:45922 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45909:45915 compcert.lib.Maps Tree_Properties for_all def
R45919:45919 compcert.lib.Maps <> f:804 var
R45917:45917 compcert.lib.Maps <> m:803 var
R45923:45926 Coq.Init.Datatypes <> true constr
binder 45940:45940 <> x:805
binder 45942:45942 <> a:806
R45963:45966 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45972:45974 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45967:45967 compcert.lib.Maps <> f:804 var
R45971:45971 compcert.lib.Maps <> a:806 var
R45969:45969 compcert.lib.Maps <> x:805 var
R45975:45978 Coq.Init.Datatypes <> true constr
R45954:45956 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45945:45949 compcert.lib.Maps T get defax
R45953:45953 compcert.lib.Maps <> m:803 var
R45951:45951 compcert.lib.Maps <> x:805 var
R45957:45960 Coq.Init.Datatypes <> Some constr
R45962:45962 compcert.lib.Maps <> a:806 var
R46013:46019 compcert.lib.Maps Tree_Properties for_all def
R46028:46035 compcert.lib.Maps Tree_Properties fold_rec thm
R46028:46035 compcert.lib.Maps Tree_Properties fold_rec thm
R46190:46197 compcert.lib.Maps T gempty prfax
R46190:46197 compcert.lib.Maps T gempty prfax
R46190:46197 compcert.lib.Maps T gempty prfax
R46276:46284 Coq.Init.Datatypes <> andb_prop thm
R46276:46284 Coq.Init.Datatypes <> andb_prop thm
R46303:46310 compcert.lib.Maps T gsspec prfax
R46303:46310 compcert.lib.Maps T gsspec prfax
R46303:46310 compcert.lib.Maps T gsspec prfax
R46329:46336 compcert.lib.Maps T elt_eq defax
R46329:46336 compcert.lib.Maps T elt_eq defax
R46386:46400 Coq.Init.Datatypes <> andb_true_intro thm
R46386:46400 Coq.Init.Datatypes <> andb_true_intro thm
R46450:46454 compcert.lib.Maps T gso prfax
R46450:46454 compcert.lib.Maps T gso prfax
R46450:46454 compcert.lib.Maps T gso prfax
R46450:46454 compcert.lib.Maps T gso prfax
R46493:46497 compcert.lib.Maps T gss prfax
R46493:46497 compcert.lib.Maps T gss prfax
def 46517:46523 Tree_Properties exists_
R46529:46531 compcert.lib.Maps T t defax
R46533:46533 compcert.lib.Maps <> Tree_Properties.FORALL_EXISTS.A var
binder 46526:46526 <> m:807
R46545:46548 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46550:46553 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46554:46557 Coq.Init.Datatypes <> bool ind
R46549:46549 compcert.lib.Maps <> Tree_Properties.FORALL_EXISTS.A var
R46540:46544 compcert.lib.Maps T elt defax
binder 46537:46537 <> f:808
R46562:46565 Coq.Init.Datatypes <> bool ind
R46572:46577 compcert.lib.Maps T fold defax
R46607:46611 Coq.Init.Datatypes <> false constr
R46605:46605 compcert.lib.Maps <> m:807 var
binder 46584:46584 <> b:809
binder 46586:46586 <> x:810
binder 46588:46588 <> a:811
R46594:46597 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R46593:46593 compcert.lib.Maps <> b:809 var
R46598:46598 compcert.lib.Maps <> f:808 var
R46602:46602 compcert.lib.Maps <> a:811 var
R46600:46600 compcert.lib.Maps <> x:810 var
prf 46621:46634 Tree_Properties exists_correct
binder 46646:46646 <> m:812
binder 46648:46648 <> f:813
R46671:46676 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R46723:46723 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R46664:46666 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46653:46659 compcert.lib.Maps Tree_Properties exists_ def
R46663:46663 compcert.lib.Maps <> f:813 var
R46661:46661 compcert.lib.Maps <> m:812 var
R46667:46670 Coq.Init.Datatypes <> true constr
R46677:46683 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R46687:46688 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 46684:46684 <> x:814
binder 46686:46686 <> a:815
R46707:46710 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R46698:46700 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46689:46693 compcert.lib.Maps T get defax
R46697:46697 compcert.lib.Maps <> m:812 var
R46695:46695 compcert.lib.Maps <> x:814 var
R46701:46704 Coq.Init.Datatypes <> Some constr
R46706:46706 compcert.lib.Maps <> a:815 var
R46716:46718 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46711:46711 compcert.lib.Maps <> f:813 var
R46715:46715 compcert.lib.Maps <> a:815 var
R46713:46713 compcert.lib.Maps <> x:814 var
R46719:46722 Coq.Init.Datatypes <> true constr
R46757:46763 compcert.lib.Maps Tree_Properties exists_ def
R46772:46779 compcert.lib.Maps Tree_Properties fold_rec thm
R46772:46779 compcert.lib.Maps Tree_Properties fold_rec thm
R46993:47000 compcert.lib.Maps T gempty prfax
R46993:47000 compcert.lib.Maps T gempty prfax
R46993:47000 compcert.lib.Maps T gempty prfax
R47072:47084 Coq.Bool.Bool <> orb_true_elim thm
R47072:47084 Coq.Bool.Bool <> orb_true_elim thm
R47192:47196 compcert.lib.Maps T gso prfax
R47192:47196 compcert.lib.Maps T gso prfax
R47192:47196 compcert.lib.Maps T gso prfax
R47192:47196 compcert.lib.Maps T gso prfax
R47258:47262 compcert.lib.Maps T gss prfax
R47258:47262 compcert.lib.Maps T gss prfax
R47307:47320 Coq.Bool.Bool <> orb_true_intro thm
R47307:47320 Coq.Bool.Bool <> orb_true_intro thm
R47333:47340 compcert.lib.Maps T gsspec prfax
R47333:47340 compcert.lib.Maps T gsspec prfax
R47333:47340 compcert.lib.Maps T gsspec prfax
R47358:47365 compcert.lib.Maps T elt_eq defax
R47358:47365 compcert.lib.Maps T elt_eq defax
prf 47455:47468 Tree_Properties exists_for_all
binder 47480:47480 <> m:816
binder 47482:47482 <> f:817
R47498:47500 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47487:47493 compcert.lib.Maps Tree_Properties exists_ def
R47497:47497 compcert.lib.Maps <> f:817 var
R47495:47495 compcert.lib.Maps <> m:816 var
R47501:47504 Coq.Init.Datatypes <> negb def
R47507:47513 compcert.lib.Maps Tree_Properties for_all def
binder 47522:47522 <> x:818
binder 47524:47524 <> a:819
R47529:47532 Coq.Init.Datatypes <> negb def
R47535:47535 compcert.lib.Maps <> f:817 var
R47539:47539 compcert.lib.Maps <> a:819 var
R47537:47537 compcert.lib.Maps <> x:818 var
R47515:47515 compcert.lib.Maps <> m:816 var
R47569:47575 compcert.lib.Maps Tree_Properties exists_ def
R47578:47584 compcert.lib.Maps Tree_Properties for_all def
R47597:47607 compcert.lib.Maps T fold_spec prfax
R47597:47607 compcert.lib.Maps T fold_spec prfax
R47597:47607 compcert.lib.Maps T fold_spec prfax
R47597:47607 compcert.lib.Maps T fold_spec prfax
R47597:47607 compcert.lib.Maps T fold_spec prfax
R47619:47623 Coq.Init.Datatypes <> false constr
R47631:47634 Coq.Init.Datatypes <> negb def
R47636:47639 Coq.Init.Datatypes <> true constr
R47619:47623 Coq.Init.Datatypes <> false constr
R47631:47634 Coq.Init.Datatypes <> negb def
R47636:47639 Coq.Init.Datatypes <> true constr
R47655:47664 compcert.lib.Maps T elements defax
R47669:47672 Coq.Init.Datatypes <> true constr
R47655:47664 compcert.lib.Maps T elements defax
R47669:47672 Coq.Init.Datatypes <> true constr
R47775:47777 Coq.Init.Datatypes <> snd def
R47767:47769 Coq.Init.Datatypes <> fst def
R47775:47777 Coq.Init.Datatypes <> snd def
R47767:47769 Coq.Init.Datatypes <> fst def
R47775:47777 Coq.Init.Datatypes <> snd def
R47767:47769 Coq.Init.Datatypes <> fst def
prf 47810:47823 Tree_Properties for_all_exists
binder 47835:47835 <> m:820
binder 47837:47837 <> f:821
R47853:47855 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47842:47848 compcert.lib.Maps Tree_Properties for_all def
R47852:47852 compcert.lib.Maps <> f:821 var
R47850:47850 compcert.lib.Maps <> m:820 var
R47856:47859 Coq.Init.Datatypes <> negb def
R47862:47868 compcert.lib.Maps Tree_Properties exists_ def
binder 47877:47877 <> x:822
binder 47879:47879 <> a:823
R47884:47887 Coq.Init.Datatypes <> negb def
R47890:47890 compcert.lib.Maps <> f:821 var
R47894:47894 compcert.lib.Maps <> a:823 var
R47892:47892 compcert.lib.Maps <> x:822 var
R47870:47870 compcert.lib.Maps <> m:820 var
R47924:47930 compcert.lib.Maps Tree_Properties exists_ def
R47933:47939 compcert.lib.Maps Tree_Properties for_all def
R47952:47962 compcert.lib.Maps T fold_spec prfax
R47952:47962 compcert.lib.Maps T fold_spec prfax
R47952:47962 compcert.lib.Maps T fold_spec prfax
R47952:47962 compcert.lib.Maps T fold_spec prfax
R47952:47962 compcert.lib.Maps T fold_spec prfax
R47974:47977 Coq.Init.Datatypes <> true constr
R47985:47988 Coq.Init.Datatypes <> negb def
R47990:47994 Coq.Init.Datatypes <> false constr
R47974:47977 Coq.Init.Datatypes <> true constr
R47985:47988 Coq.Init.Datatypes <> negb def
R47990:47994 Coq.Init.Datatypes <> false constr
R48010:48019 compcert.lib.Maps T elements defax
R48024:48028 Coq.Init.Datatypes <> false constr
R48010:48019 compcert.lib.Maps T elements defax
R48024:48028 Coq.Init.Datatypes <> false constr
R48131:48133 Coq.Init.Datatypes <> snd def
R48123:48125 Coq.Init.Datatypes <> fst def
R48131:48133 Coq.Init.Datatypes <> snd def
R48123:48125 Coq.Init.Datatypes <> fst def
R48131:48133 Coq.Init.Datatypes <> snd def
R48123:48125 Coq.Init.Datatypes <> fst def
prf 48165:48177 Tree_Properties for_all_false
binder 48189:48189 <> m:824
binder 48191:48191 <> f:825
R48215:48220 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R48268:48268 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R48207:48209 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48196:48202 compcert.lib.Maps Tree_Properties for_all def
R48206:48206 compcert.lib.Maps <> f:825 var
R48204:48204 compcert.lib.Maps <> m:824 var
R48210:48214 Coq.Init.Datatypes <> false constr
R48221:48227 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R48231:48232 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 48228:48228 <> x:826
binder 48230:48230 <> a:827
R48251:48254 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R48242:48244 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48233:48237 compcert.lib.Maps T get defax
R48241:48241 compcert.lib.Maps <> m:824 var
R48239:48239 compcert.lib.Maps <> x:826 var
R48245:48248 Coq.Init.Datatypes <> Some constr
R48250:48250 compcert.lib.Maps <> a:827 var
R48260:48262 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48255:48255 compcert.lib.Maps <> f:825 var
R48259:48259 compcert.lib.Maps <> a:827 var
R48257:48257 compcert.lib.Maps <> x:826 var
R48263:48267 Coq.Init.Datatypes <> false constr
R48296:48309 compcert.lib.Maps Tree_Properties for_all_exists thm
R48296:48309 compcert.lib.Maps Tree_Properties for_all_exists thm
R48296:48309 compcert.lib.Maps Tree_Properties for_all_exists thm
R48322:48335 Coq.Bool.Bool <> negb_false_iff thm
R48322:48335 Coq.Bool.Bool <> negb_false_iff thm
R48322:48335 Coq.Bool.Bool <> negb_false_iff thm
R48346:48359 compcert.lib.Maps Tree_Properties exists_correct thm
R48346:48359 compcert.lib.Maps Tree_Properties exists_correct thm
R48346:48359 compcert.lib.Maps Tree_Properties exists_correct thm
R48438:48450 Coq.Bool.Bool <> negb_true_iff thm
R48438:48450 Coq.Bool.Bool <> negb_true_iff thm
R48438:48450 Coq.Bool.Bool <> negb_true_iff thm
prf 48495:48506 Tree_Properties exists_false
binder 48518:48518 <> m:828
binder 48520:48520 <> f:829
R48544:48549 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R48597:48597 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R48536:48538 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48525:48531 compcert.lib.Maps Tree_Properties exists_ def
R48535:48535 compcert.lib.Maps <> f:829 var
R48533:48533 compcert.lib.Maps <> m:828 var
R48539:48543 Coq.Init.Datatypes <> false constr
binder 48557:48557 <> x:830
binder 48559:48559 <> a:831
R48580:48583 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48589:48591 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48584:48584 compcert.lib.Maps <> f:829 var
R48588:48588 compcert.lib.Maps <> a:831 var
R48586:48586 compcert.lib.Maps <> x:830 var
R48592:48596 Coq.Init.Datatypes <> false constr
R48571:48573 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48562:48566 compcert.lib.Maps T get defax
R48570:48570 compcert.lib.Maps <> m:828 var
R48568:48568 compcert.lib.Maps <> x:830 var
R48574:48577 Coq.Init.Datatypes <> Some constr
R48579:48579 compcert.lib.Maps <> a:831 var
R48625:48638 compcert.lib.Maps Tree_Properties exists_for_all thm
R48625:48638 compcert.lib.Maps Tree_Properties exists_for_all thm
R48625:48638 compcert.lib.Maps Tree_Properties exists_for_all thm
R48651:48664 Coq.Bool.Bool <> negb_false_iff thm
R48651:48664 Coq.Bool.Bool <> negb_false_iff thm
R48651:48664 Coq.Bool.Bool <> negb_false_iff thm
R48675:48689 compcert.lib.Maps Tree_Properties for_all_correct thm
R48675:48689 compcert.lib.Maps Tree_Properties for_all_correct thm
R48675:48689 compcert.lib.Maps Tree_Properties for_all_correct thm
R48732:48744 Coq.Bool.Bool <> negb_true_iff thm
R48732:48744 Coq.Bool.Bool <> negb_true_iff thm
R48732:48744 Coq.Bool.Bool <> negb_true_iff thm
R48786:48798 compcert.lib.Maps Tree_Properties.FORALL_EXISTS <> sec
sec 48835:48850 Tree_Properties BOOLEAN_EQUALITY
var 48863:48863 Tree_Properties.BOOLEAN_EQUALITY A
var 48881:48884 Tree_Properties.BOOLEAN_EQUALITY beqA
R48888:48891 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48893:48896 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48897:48900 Coq.Init.Datatypes <> bool ind
R48892:48892 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.A var
R48887:48887 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.A var
prf 48912:48920 Tree_Properties beq_false
binder 48932:48933 <> m1:834
binder 48935:48936 <> m2:835
R48965:48971 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R48957:48959 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48941:48945 compcert.lib.Maps T beq defax
R48955:48956 compcert.lib.Maps <> m2:835 var
R48952:48953 compcert.lib.Maps <> m1:834 var
R48947:48950 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R48960:48964 Coq.Init.Datatypes <> false constr
R48972:48978 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R48980:48981 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 48979:48979 <> x:836
R49000:49004 compcert.lib.Maps T get defax
R49008:49009 compcert.lib.Maps <> m2:835 var
R49006:49006 compcert.lib.Maps <> x:836 var
R48988:48992 compcert.lib.Maps T get defax
R48996:48997 compcert.lib.Maps <> m1:834 var
R48994:48994 compcert.lib.Maps <> x:836 var
R49030:49033 Coq.Init.Datatypes <> None constr
R49036:49039 Coq.Init.Datatypes <> None constr
R49044:49048 Coq.Init.Logic <> False ind
R49064:49067 Coq.Init.Datatypes <> Some constr
R49073:49076 Coq.Init.Datatypes <> Some constr
R49094:49096 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49084:49087 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49097:49101 Coq.Init.Datatypes <> false constr
R49125:49128 Coq.Init.Logic <> True ind
binder 49229:49229 <> x:837
binder 49231:49232 <> a1:838
R49243:49247 compcert.lib.Maps T get defax
R49249:49249 compcert.lib.Maps <> x:837 var
R49259:49262 Coq.Init.Datatypes <> None constr
R49267:49271 Coq.Init.Datatypes <> false constr
R49275:49278 Coq.Init.Datatypes <> Some constr
R49286:49289 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49291:49292 compcert.lib.Maps <> a1:838 var
binder 49229:49229 <> x:839
binder 49231:49232 <> a1:840
R49243:49247 compcert.lib.Maps T get defax
R49249:49249 compcert.lib.Maps <> x:839 var
R49259:49262 Coq.Init.Datatypes <> None constr
R49267:49271 Coq.Init.Datatypes <> false constr
R49275:49278 Coq.Init.Datatypes <> Some constr
R49286:49289 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49291:49292 compcert.lib.Maps <> a1:840 var
binder 49320:49320 <> x:841
binder 49322:49323 <> a2:842
R49334:49338 compcert.lib.Maps T get defax
R49340:49340 compcert.lib.Maps <> x:841 var
R49350:49353 Coq.Init.Datatypes <> None constr
R49358:49362 Coq.Init.Datatypes <> false constr
R49366:49369 Coq.Init.Datatypes <> Some constr
R49377:49380 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49385:49386 compcert.lib.Maps <> a2:842 var
binder 49320:49320 <> x:843
binder 49322:49323 <> a2:844
R49334:49338 compcert.lib.Maps T get defax
R49340:49340 compcert.lib.Maps <> x:843 var
R49350:49353 Coq.Init.Datatypes <> None constr
R49358:49362 Coq.Init.Datatypes <> false constr
R49366:49369 Coq.Init.Datatypes <> Some constr
R49377:49380 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49385:49386 compcert.lib.Maps <> a2:844 var
R49406:49412 compcert.lib.Maps Tree_Properties for_all def
R49440:49446 compcert.lib.Maps Tree_Properties for_all def
R49406:49412 compcert.lib.Maps Tree_Properties for_all def
R49440:49446 compcert.lib.Maps Tree_Properties for_all def
R49497:49499 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49481:49485 compcert.lib.Maps T beq defax
R49487:49490 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49500:49503 Coq.Init.Datatypes <> true constr
R49497:49499 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49481:49485 compcert.lib.Maps T beq defax
R49487:49490 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R49500:49503 Coq.Init.Datatypes <> true constr
R49531:49545 compcert.lib.Maps Tree_Properties for_all_correct thm
R49531:49545 compcert.lib.Maps Tree_Properties for_all_correct thm
R49531:49545 compcert.lib.Maps Tree_Properties for_all_correct thm
R49561:49573 compcert.lib.Maps T beq_correct prfax
R49561:49573 compcert.lib.Maps T beq_correct prfax
R49561:49573 compcert.lib.Maps T beq_correct prfax
R49598:49602 compcert.lib.Maps T get defax
R49598:49602 compcert.lib.Maps T get defax
R49676:49680 compcert.lib.Maps T get defax
R49676:49680 compcert.lib.Maps T get defax
R49715:49719 compcert.lib.Maps T get defax
R49715:49719 compcert.lib.Maps T get defax
R49825:49837 compcert.lib.Maps Tree_Properties for_all_false thm
R49825:49837 compcert.lib.Maps Tree_Properties for_all_false thm
R49825:49837 compcert.lib.Maps Tree_Properties for_all_false thm
R49929:49933 compcert.lib.Maps T get defax
R49929:49933 compcert.lib.Maps T get defax
R49960:49972 compcert.lib.Maps Tree_Properties for_all_false thm
R49960:49972 compcert.lib.Maps Tree_Properties for_all_false thm
R49960:49972 compcert.lib.Maps Tree_Properties for_all_false thm
R50064:50068 compcert.lib.Maps T get defax
R50064:50068 compcert.lib.Maps T get defax
R50151:50155 compcert.lib.Maps T beq defax
R50157:50160 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R50151:50155 compcert.lib.Maps T beq defax
R50157:50160 compcert.lib.Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R50192:50204 compcert.lib.Maps T beq_correct prfax
R50192:50204 compcert.lib.Maps T beq_correct prfax
R50192:50204 compcert.lib.Maps T beq_correct prfax
R50242:50246 compcert.lib.Maps T get defax
R50265:50269 compcert.lib.Maps T get defax
R50242:50246 compcert.lib.Maps T get defax
R50265:50269 compcert.lib.Maps T get defax
R50265:50269 compcert.lib.Maps T get defax
R50309:50324 compcert.lib.Maps Tree_Properties.BOOLEAN_EQUALITY <> sec
sec 50379:50398 Tree_Properties EXTENSIONAL_EQUALITY
var 50411:50411 Tree_Properties.EXTENSIONAL_EQUALITY A
var 50429:50431 Tree_Properties.EXTENSIONAL_EQUALITY eqA
R50435:50438 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50440:50443 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50439:50439 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R50434:50434 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
var 50461:50465 Tree_Properties.EXTENSIONAL_EQUALITY eqAeq
R50468:50478 Coq.Classes.RelationClasses <> Equivalence class
R50480:50482 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.eqA var
def 50497:50501 Tree_Properties Equal
R50511:50513 compcert.lib.Maps T t defax
R50515:50515 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
binder 50504:50505 <> m1:848
binder 50507:50508 <> m2:849
binder 50537:50537 <> x:850
R50558:50562 compcert.lib.Maps T get defax
R50566:50567 compcert.lib.Maps <> m2:849 var
R50564:50564 compcert.lib.Maps <> x:850 var
R50546:50550 compcert.lib.Maps T get defax
R50554:50555 compcert.lib.Maps <> m1:848 var
R50552:50552 compcert.lib.Maps <> x:850 var
R50592:50595 Coq.Init.Datatypes <> None constr
R50598:50601 Coq.Init.Datatypes <> None constr
R50606:50609 Coq.Init.Logic <> True ind
R50629:50632 Coq.Init.Datatypes <> Some constr
R50638:50641 Coq.Init.Datatypes <> Some constr
R50651:50655 Coq.Classes.Equivalence <> ::equiv_scope:x_'==='_x not
R50685:50689 Coq.Init.Logic <> False ind
prf 50715:50724 Tree_Properties Equal_refl
binder 50734:50734 <> m:851
R50737:50741 compcert.lib.Maps Tree_Properties Equal def
R50745:50745 compcert.lib.Maps <> m:851 var
R50743:50743 compcert.lib.Maps <> m:851 var
R50788:50792 compcert.lib.Maps T get defax
R50788:50792 compcert.lib.Maps T get defax
prf 50831:50839 Tree_Properties Equal_sym
binder 50849:50850 <> m1:852
binder 50852:50853 <> m2:853
R50867:50870 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50871:50875 compcert.lib.Maps Tree_Properties Equal def
R50880:50881 compcert.lib.Maps <> m1:852 var
R50877:50878 compcert.lib.Maps <> m2:853 var
R50856:50860 compcert.lib.Maps Tree_Properties Equal def
R50865:50866 compcert.lib.Maps <> m2:853 var
R50862:50863 compcert.lib.Maps <> m1:852 var
R50942:50946 compcert.lib.Maps T get defax
R50965:50969 compcert.lib.Maps T get defax
R50942:50946 compcert.lib.Maps T get defax
R50965:50969 compcert.lib.Maps T get defax
R50965:50969 compcert.lib.Maps T get defax
prf 51020:51030 Tree_Properties Equal_trans
binder 51040:51041 <> m1:854
binder 51043:51044 <> m2:855
binder 51046:51047 <> m3:856
R51061:51064 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51076:51079 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51080:51084 compcert.lib.Maps Tree_Properties Equal def
R51089:51090 compcert.lib.Maps <> m3:856 var
R51086:51087 compcert.lib.Maps <> m1:854 var
R51065:51069 compcert.lib.Maps Tree_Properties Equal def
R51074:51075 compcert.lib.Maps <> m3:856 var
R51071:51072 compcert.lib.Maps <> m2:855 var
R51050:51054 compcert.lib.Maps Tree_Properties Equal def
R51059:51060 compcert.lib.Maps <> m2:855 var
R51056:51057 compcert.lib.Maps <> m1:854 var
R51160:51164 compcert.lib.Maps T get defax
R51183:51187 compcert.lib.Maps T get defax
R51219:51223 compcert.lib.Maps T get defax
R51160:51164 compcert.lib.Maps T get defax
R51183:51187 compcert.lib.Maps T get defax
R51183:51187 compcert.lib.Maps T get defax
R51219:51223 compcert.lib.Maps T get defax
inst 51291:51307 Tree_Properties Equal_Equivalence
R51311:51321 Coq.Classes.RelationClasses <> Equivalence class
R51323:51327 compcert.lib.Maps Tree_Properties Equal def
R51413:51434 Coq.Classes.RelationClasses <> Equivalence_Transitive meth
R51375:51395 Coq.Classes.RelationClasses <> Equivalence_Symmetric meth
R51336:51356 Coq.Classes.RelationClasses <> Equivalence_Reflexive meth
R51361:51370 compcert.lib.Maps Tree_Properties Equal_refl thm
R51400:51408 compcert.lib.Maps Tree_Properties Equal_sym thm
R51439:51449 compcert.lib.Maps Tree_Properties Equal_trans thm
var 51466:51471 Tree_Properties.EXTENSIONAL_EQUALITY eqAdec
R51474:51478 Coq.Classes.EquivDec <> EqDec class
R51482:51484 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.eqA var
R51480:51480 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
def 51507:51515 Tree_Properties Equal_dec
R51525:51527 compcert.lib.Maps T t defax
R51529:51529 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
binder 51518:51519 <> m1:858
binder 51521:51522 <> m2:859
R51534:51535 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R51545:51551 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R51561:51562 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R51538:51542 Coq.Classes.Equivalence <> ::equiv_scope:x_'==='_x not
R51536:51537 compcert.lib.Maps <> m1:858 var
R51543:51544 compcert.lib.Maps <> m2:859 var
R51554:51558 Coq.Classes.Equivalence <> ::equiv_scope:x_'=/='_x not
R51552:51553 compcert.lib.Maps <> m1:858 var
R51559:51560 compcert.lib.Maps <> m2:859 var
R51575:51579 compcert.lib.Maps T beq defax
R51623:51624 compcert.lib.Maps <> m2:859 var
R51620:51621 compcert.lib.Maps <> m1:858 var
binder 51586:51587 <> a1:860
binder 51589:51590 <> a2:861
R51595:51606 compcert.lib.Coqlib <> proj_sumbool def
R51611:51614 Coq.Classes.EquivDec <> ::equiv_scope:x_'=='_x not
R51609:51610 compcert.lib.Maps <> a1:860 var
R51615:51616 compcert.lib.Maps <> a2:861 var
R51635:51638 Coq.Init.Datatypes <> true constr
R51643:51646 Coq.Init.Specif <> left constr
R51654:51658 Coq.Init.Datatypes <> false constr
R51663:51667 Coq.Init.Specif <> right constr
R51751:51763 compcert.lib.Maps T beq_correct prfax
R51751:51763 compcert.lib.Maps T beq_correct prfax
R51751:51763 compcert.lib.Maps T beq_correct prfax
R51816:51820 compcert.lib.Maps T get defax
R51839:51843 compcert.lib.Maps T get defax
R51816:51820 compcert.lib.Maps T get defax
R51839:51843 compcert.lib.Maps T get defax
R51839:51843 compcert.lib.Maps T get defax
R51875:51891 compcert.lib.Coqlib <> proj_sumbool_true thm
R51875:51891 compcert.lib.Coqlib <> proj_sumbool_true thm
R51983:51985 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51933:51937 compcert.lib.Maps T beq defax
binder 51944:51945 <> a1:862
binder 51947:51948 <> a2:863
R51953:51964 compcert.lib.Coqlib <> proj_sumbool def
R51969:51972 Coq.Classes.EquivDec <> ::equiv_scope:x_'=='_x not
R51967:51968 compcert.lib.Maps <> a1:862 var
R51973:51974 compcert.lib.Maps <> a2:863 var
R51986:51989 Coq.Init.Datatypes <> true constr
R51983:51985 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51933:51937 compcert.lib.Maps T beq defax
binder 51944:51945 <> a1:864
binder 51947:51948 <> a2:865
R51953:51964 compcert.lib.Coqlib <> proj_sumbool def
R51969:51972 Coq.Classes.EquivDec <> ::equiv_scope:x_'=='_x not
R51967:51968 compcert.lib.Maps <> a1:864 var
R51973:51974 compcert.lib.Maps <> a2:865 var
R51986:51989 Coq.Init.Datatypes <> true constr
R52001:52013 compcert.lib.Maps T beq_correct prfax
R52001:52013 compcert.lib.Maps T beq_correct prfax
R52056:52060 compcert.lib.Maps T get defax
R52079:52083 compcert.lib.Maps T get defax
R52056:52060 compcert.lib.Maps T get defax
R52079:52083 compcert.lib.Maps T get defax
R52079:52083 compcert.lib.Maps T get defax
R52119:52138 compcert.lib.Coqlib <> proj_sumbool_is_true thm
R52119:52138 compcert.lib.Coqlib <> proj_sumbool_is_true thm
R52156:52160 Coq.Classes.Equivalence <> equiv def
R52163:52172 Coq.Classes.RelationClasses <> complement def
inst 52208:52218 Tree_Properties Equal_EqDec
R52222:52226 Coq.Classes.EquivDec <> EqDec class
R52236:52240 compcert.lib.Maps Tree_Properties Equal def
R52229:52231 compcert.lib.Maps T t defax
R52233:52233 compcert.lib.Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R52245:52253 compcert.lib.Maps Tree_Properties Equal_dec def
R52261:52280 compcert.lib.Maps Tree_Properties.EXTENSIONAL_EQUALITY <> sec
sec 52351:52357 Tree_Properties OF_LIST
var 52370:52370 Tree_Properties.OF_LIST A
var 52384:52384 Tree_Properties.OF_LIST f
R52397:52399 compcert.lib.Maps T t defax
R52401:52401 compcert.lib.Maps <> Tree_Properties.OF_LIST.A var
binder 52394:52394 <> m:867
R52415:52417 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52410:52414 compcert.lib.Maps T elt defax
R52418:52418 compcert.lib.Maps <> Tree_Properties.OF_LIST.A var
binder 52405:52407 <> k_v:868
R52424:52428 compcert.lib.Maps T set defax
R52450:52450 compcert.lib.Maps <> m:867 var
R52441:52443 Coq.Init.Datatypes <> snd def
R52445:52447 compcert.lib.Maps <> k_v:868 var
R52431:52433 Coq.Init.Datatypes <> fst def
R52435:52437 compcert.lib.Maps <> k_v:868 var
def 52465:52471 Tree_Properties of_list
R52477:52480 Coq.Init.Datatypes <> list ind
R52488:52490 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52483:52487 compcert.lib.Maps T elt defax
R52491:52491 compcert.lib.Maps <> Tree_Properties.OF_LIST.A var
binder 52474:52474 <> l:869
R52497:52499 compcert.lib.Maps T t defax
R52501:52501 compcert.lib.Maps <> Tree_Properties.OF_LIST.A var
R52508:52521 Coq.Lists.List <> fold_left def
R52528:52534 compcert.lib.Maps T empty defax
R52525:52525 compcert.lib.Maps <> l:869 var
R52523:52523 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
prf 52547:52556 Tree_Properties in_of_list
binder 52568:52568 <> l:870
binder 52570:52570 <> k:871
binder 52572:52572 <> v:872
R52603:52606 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52607:52608 Coq.Lists.List <> In def
R52617:52617 compcert.lib.Maps <> l:870 var
R52610:52610 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52612:52613 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52615:52615 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52611:52611 compcert.lib.Maps <> k:871 var
R52614:52614 compcert.lib.Maps <> v:872 var
R52594:52596 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52575:52579 compcert.lib.Maps T get defax
R52584:52590 compcert.lib.Maps Tree_Properties of_list def
R52592:52592 compcert.lib.Maps <> l:870 var
R52581:52581 compcert.lib.Maps <> k:871 var
R52597:52600 Coq.Init.Datatypes <> Some constr
R52602:52602 compcert.lib.Maps <> v:872 var
binder 52649:52649 <> k:873
binder 52651:52651 <> v:874
binder 52653:52653 <> l:875
binder 52655:52655 <> m:876
R52703:52706 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52718:52721 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R52707:52708 Coq.Lists.List <> In def
R52717:52717 compcert.lib.Maps <> l:875 var
R52710:52710 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52712:52713 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52715:52715 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52711:52711 compcert.lib.Maps <> k:873 var
R52714:52714 compcert.lib.Maps <> v:874 var
R52731:52733 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52722:52726 compcert.lib.Maps T get defax
R52730:52730 compcert.lib.Maps <> m:876 var
R52728:52728 compcert.lib.Maps <> k:873 var
R52734:52737 Coq.Init.Datatypes <> Some constr
R52739:52739 compcert.lib.Maps <> v:874 var
R52694:52696 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52669:52673 compcert.lib.Maps T get defax
R52678:52686 Coq.Lists.List <> fold_left def
R52692:52692 compcert.lib.Maps <> m:876 var
R52690:52690 compcert.lib.Maps <> l:875 var
R52688:52688 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
R52675:52675 compcert.lib.Maps <> k:873 var
R52697:52700 Coq.Init.Datatypes <> Some constr
R52702:52702 compcert.lib.Maps <> v:874 var
binder 52649:52649 <> k:877
binder 52651:52651 <> v:878
binder 52653:52653 <> l:879
binder 52655:52655 <> m:880
R52703:52706 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52718:52721 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R52707:52708 Coq.Lists.List <> In def
R52717:52717 compcert.lib.Maps <> l:879 var
R52710:52710 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52712:52713 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52715:52715 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R52711:52711 compcert.lib.Maps <> k:877 var
R52714:52714 compcert.lib.Maps <> v:878 var
R52731:52733 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52722:52726 compcert.lib.Maps T get defax
R52730:52730 compcert.lib.Maps <> m:880 var
R52728:52728 compcert.lib.Maps <> k:877 var
R52734:52737 Coq.Init.Datatypes <> Some constr
R52739:52739 compcert.lib.Maps <> v:878 var
R52694:52696 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52669:52673 compcert.lib.Maps T get defax
R52678:52686 Coq.Lists.List <> fold_left def
R52692:52692 compcert.lib.Maps <> m:880 var
R52690:52690 compcert.lib.Maps <> l:879 var
R52688:52688 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
R52675:52675 compcert.lib.Maps <> k:877 var
R52697:52700 Coq.Init.Datatypes <> Some constr
R52702:52702 compcert.lib.Maps <> v:878 var
R52831:52831 compcert.lib.Maps <> f vardef
R52859:52866 compcert.lib.Maps T gsspec prfax
R52859:52866 compcert.lib.Maps T gsspec prfax
R52859:52866 compcert.lib.Maps T gsspec prfax
R52910:52917 compcert.lib.Maps T elt_eq defax
R52910:52917 compcert.lib.Maps T elt_eq defax
R52983:52990 compcert.lib.Maps T gempty prfax
R52983:52990 compcert.lib.Maps T gempty prfax
R52983:52990 compcert.lib.Maps T gempty prfax
prf 53032:53042 Tree_Properties of_list_dom
binder 53054:53054 <> l:881
binder 53056:53056 <> k:882
R53075:53078 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53079:53085 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R53087:53088 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 53086:53086 <> v:883
R53108:53110 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53089:53093 compcert.lib.Maps T get defax
R53098:53104 compcert.lib.Maps Tree_Properties of_list def
R53106:53106 compcert.lib.Maps <> l:881 var
R53095:53095 compcert.lib.Maps <> k:882 var
R53111:53114 Coq.Init.Datatypes <> Some constr
R53116:53116 compcert.lib.Maps <> v:883 var
R53059:53060 Coq.Lists.List <> In def
R53065:53067 Coq.Lists.List <> map def
R53073:53073 compcert.lib.Maps <> l:881 var
R53069:53071 Coq.Init.Datatypes <> fst def
R53062:53062 compcert.lib.Maps <> k:882 var
binder 53148:53148 <> k:884
binder 53150:53150 <> l:885
binder 53152:53152 <> m:886
R53217:53232 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53233:53239 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R53241:53242 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 53240:53240 <> v:887
R53268:53270 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53243:53247 compcert.lib.Maps T get defax
R53252:53260 Coq.Lists.List <> fold_left def
R53266:53266 compcert.lib.Maps <> m:886 var
R53264:53264 compcert.lib.Maps <> l:885 var
R53262:53262 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
R53249:53249 compcert.lib.Maps <> k:884 var
R53271:53274 Coq.Init.Datatypes <> Some constr
R53276:53276 compcert.lib.Maps <> v:887 var
R53183:53187 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R53216:53216 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R53167:53168 Coq.Lists.List <> In def
R53173:53175 Coq.Lists.List <> map def
R53181:53181 compcert.lib.Maps <> l:885 var
R53177:53179 Coq.Init.Datatypes <> fst def
R53170:53170 compcert.lib.Maps <> k:884 var
R53188:53194 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R53196:53197 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 53195:53195 <> v:888
R53207:53209 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53198:53202 compcert.lib.Maps T get defax
R53206:53206 compcert.lib.Maps <> m:886 var
R53204:53204 compcert.lib.Maps <> k:884 var
R53210:53213 Coq.Init.Datatypes <> Some constr
R53215:53215 compcert.lib.Maps <> v:888 var
binder 53148:53148 <> k:889
binder 53150:53150 <> l:890
binder 53152:53152 <> m:891
R53217:53232 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53233:53239 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R53241:53242 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 53240:53240 <> v:892
R53268:53270 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53243:53247 compcert.lib.Maps T get defax
R53252:53260 Coq.Lists.List <> fold_left def
R53266:53266 compcert.lib.Maps <> m:891 var
R53264:53264 compcert.lib.Maps <> l:890 var
R53262:53262 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
R53249:53249 compcert.lib.Maps <> k:889 var
R53271:53274 Coq.Init.Datatypes <> Some constr
R53276:53276 compcert.lib.Maps <> v:892 var
R53183:53187 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R53216:53216 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R53167:53168 Coq.Lists.List <> In def
R53173:53175 Coq.Lists.List <> map def
R53181:53181 compcert.lib.Maps <> l:890 var
R53177:53179 Coq.Init.Datatypes <> fst def
R53170:53170 compcert.lib.Maps <> k:889 var
R53188:53194 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R53196:53197 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 53195:53195 <> v:893
R53207:53209 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53198:53202 compcert.lib.Maps T get defax
R53206:53206 compcert.lib.Maps <> m:891 var
R53204:53204 compcert.lib.Maps <> k:889 var
R53210:53213 Coq.Init.Datatypes <> Some constr
R53215:53215 compcert.lib.Maps <> v:893 var
R53363:53363 compcert.lib.Maps <> f vardef
R53374:53381 compcert.lib.Maps T gsspec prfax
R53374:53381 compcert.lib.Maps T gsspec prfax
R53374:53381 compcert.lib.Maps T gsspec prfax
R53401:53408 compcert.lib.Maps T elt_eq defax
R53401:53408 compcert.lib.Maps T elt_eq defax
prf 53519:53535 Tree_Properties of_list_unchanged
binder 53547:53547 <> k:894
binder 53549:53549 <> l:895
binder 53551:53551 <> m:896
R53571:53574 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53605:53607 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53575:53579 compcert.lib.Maps T get defax
R53584:53597 Coq.Lists.List <> fold_left def
R53603:53603 compcert.lib.Maps <> m:896 var
R53601:53601 compcert.lib.Maps <> l:895 var
R53599:53599 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
R53581:53581 compcert.lib.Maps <> k:894 var
R53608:53612 compcert.lib.Maps T get defax
R53616:53616 compcert.lib.Maps <> m:896 var
R53614:53614 compcert.lib.Maps <> k:894 var
R53554:53554 Coq.Init.Logic <> ::type_scope:'~'_x not
R53555:53556 Coq.Lists.List <> In def
R53561:53563 Coq.Lists.List <> map def
R53569:53569 compcert.lib.Maps <> l:895 var
R53565:53567 Coq.Init.Datatypes <> fst def
R53558:53558 compcert.lib.Maps <> k:894 var
R53713:53713 compcert.lib.Maps <> f vardef
R53722:53726 compcert.lib.Maps T gso prfax
R53722:53726 compcert.lib.Maps T gso prfax
prf 53757:53770 Tree_Properties of_list_unique
binder 53782:53782 <> k:897
binder 53784:53784 <> v:898
binder 53786:53787 <> l1:899
binder 53789:53790 <> l2:900
R53813:53816 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53855:53857 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53817:53821 compcert.lib.Maps T get defax
R53826:53832 compcert.lib.Maps Tree_Properties of_list def
R53837:53840 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R53835:53836 compcert.lib.Maps <> l1:899 var
R53847:53850 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R53841:53841 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53843:53844 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53846:53846 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53842:53842 compcert.lib.Maps <> k:897 var
R53845:53845 compcert.lib.Maps <> v:898 var
R53851:53852 compcert.lib.Maps <> l2:900 var
R53823:53823 compcert.lib.Maps <> k:897 var
R53858:53861 Coq.Init.Datatypes <> Some constr
R53863:53863 compcert.lib.Maps <> v:898 var
R53795:53795 Coq.Init.Logic <> ::type_scope:'~'_x not
R53796:53797 Coq.Lists.List <> In def
R53802:53804 Coq.Lists.List <> map def
R53810:53811 compcert.lib.Maps <> l2:900 var
R53806:53808 Coq.Init.Datatypes <> fst def
R53799:53799 compcert.lib.Maps <> k:897 var
R53890:53896 compcert.lib.Maps Tree_Properties of_list def
R53907:53919 Coq.Lists.List <> fold_left_app thm
R53907:53919 Coq.Lists.List <> fold_left_app thm
R53907:53919 Coq.Lists.List <> fold_left_app thm
R53939:53955 compcert.lib.Maps Tree_Properties of_list_unchanged thm
R53939:53955 compcert.lib.Maps Tree_Properties of_list_unchanged thm
R53939:53955 compcert.lib.Maps Tree_Properties of_list_unchanged thm
R53973:53973 compcert.lib.Maps <> f vardef
R53982:53986 compcert.lib.Maps T gss prfax
R53982:53986 compcert.lib.Maps T gss prfax
prf 54001:54015 Tree_Properties of_list_norepet
binder 54027:54027 <> l:901
binder 54029:54029 <> k:902
binder 54031:54031 <> v:903
R54058:54061 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54073:54076 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54096:54098 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54077:54081 compcert.lib.Maps T get defax
R54086:54092 compcert.lib.Maps Tree_Properties of_list def
R54094:54094 compcert.lib.Maps <> l:901 var
R54083:54083 compcert.lib.Maps <> k:902 var
R54099:54102 Coq.Init.Datatypes <> Some constr
R54104:54104 compcert.lib.Maps <> v:903 var
R54062:54063 Coq.Lists.List <> In def
R54072:54072 compcert.lib.Maps <> l:901 var
R54065:54065 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54067:54068 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54070:54070 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54066:54066 compcert.lib.Maps <> k:902 var
R54069:54069 compcert.lib.Maps <> v:903 var
R54034:54045 compcert.lib.Coqlib <> list_norepet ind
R54048:54050 Coq.Lists.List <> map def
R54056:54056 compcert.lib.Maps <> l:901 var
R54052:54054 Coq.Init.Datatypes <> fst def
binder 54136:54136 <> k:904
binder 54138:54138 <> v:905
binder 54140:54140 <> l:906
binder 54142:54142 <> m:907
R54181:54196 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54208:54223 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54249:54251 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54224:54228 compcert.lib.Maps T get defax
R54233:54241 Coq.Lists.List <> fold_left def
R54247:54247 compcert.lib.Maps <> m:907 var
R54245:54245 compcert.lib.Maps <> l:906 var
R54243:54243 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
R54230:54230 compcert.lib.Maps <> k:904 var
R54252:54255 Coq.Init.Datatypes <> Some constr
R54257:54257 compcert.lib.Maps <> v:905 var
R54197:54198 Coq.Lists.List <> In def
R54207:54207 compcert.lib.Maps <> l:906 var
R54200:54200 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54202:54203 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54205:54205 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54201:54201 compcert.lib.Maps <> k:904 var
R54204:54204 compcert.lib.Maps <> v:905 var
R54157:54168 compcert.lib.Coqlib <> list_norepet ind
R54171:54173 Coq.Lists.List <> map def
R54179:54179 compcert.lib.Maps <> l:906 var
R54175:54177 Coq.Init.Datatypes <> fst def
binder 54136:54136 <> k:908
binder 54138:54138 <> v:909
binder 54140:54140 <> l:910
binder 54142:54142 <> m:911
R54181:54196 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54208:54223 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54249:54251 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54224:54228 compcert.lib.Maps T get defax
R54233:54241 Coq.Lists.List <> fold_left def
R54247:54247 compcert.lib.Maps <> m:911 var
R54245:54245 compcert.lib.Maps <> l:910 var
R54243:54243 compcert.lib.Maps <> Tree_Properties.OF_LIST.f var
R54230:54230 compcert.lib.Maps <> k:908 var
R54252:54255 Coq.Init.Datatypes <> Some constr
R54257:54257 compcert.lib.Maps <> v:909 var
R54197:54198 Coq.Lists.List <> In def
R54207:54207 compcert.lib.Maps <> l:910 var
R54200:54200 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54202:54203 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54205:54205 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54201:54201 compcert.lib.Maps <> k:908 var
R54204:54204 compcert.lib.Maps <> v:909 var
R54157:54168 compcert.lib.Coqlib <> list_norepet ind
R54171:54173 Coq.Lists.List <> map def
R54179:54179 compcert.lib.Maps <> l:910 var
R54175:54177 Coq.Init.Datatypes <> fst def
R54373:54389 compcert.lib.Maps Tree_Properties of_list_unchanged thm
R54373:54389 compcert.lib.Maps Tree_Properties of_list_unchanged thm
R54373:54389 compcert.lib.Maps Tree_Properties of_list_unchanged thm
R54406:54410 compcert.lib.Maps T gss prfax
R54406:54410 compcert.lib.Maps T gss prfax
prf 54477:54492 Tree_Properties of_list_elements
binder 54504:54504 <> m:912
binder 54506:54506 <> k:913
R54541:54543 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54509:54513 compcert.lib.Maps T get defax
R54518:54524 compcert.lib.Maps Tree_Properties of_list def
R54527:54536 compcert.lib.Maps T elements defax
R54538:54538 compcert.lib.Maps <> m:912 var
R54515:54515 compcert.lib.Maps <> k:913 var
R54544:54548 compcert.lib.Maps T get defax
R54552:54552 compcert.lib.Maps <> m:912 var
R54550:54550 compcert.lib.Maps <> k:913 var
R54582:54586 compcert.lib.Maps T get defax
R54582:54586 compcert.lib.Maps T get defax
R54616:54630 compcert.lib.Maps Tree_Properties of_list_norepet thm
R54616:54630 compcert.lib.Maps Tree_Properties of_list_norepet thm
R54639:54661 compcert.lib.Maps T elements_keys_norepet prfax
R54639:54661 compcert.lib.Maps T elements_keys_norepet prfax
R54670:54687 compcert.lib.Maps T elements_correct prfax
R54670:54687 compcert.lib.Maps T elements_correct prfax
R54708:54712 compcert.lib.Maps T get defax
R54717:54723 compcert.lib.Maps Tree_Properties of_list def
R54726:54735 compcert.lib.Maps T elements defax
R54708:54712 compcert.lib.Maps T get defax
R54717:54723 compcert.lib.Maps Tree_Properties of_list def
R54726:54735 compcert.lib.Maps T elements defax
R54772:54781 compcert.lib.Maps Tree_Properties in_of_list thm
R54772:54781 compcert.lib.Maps Tree_Properties in_of_list thm
R54796:54814 compcert.lib.Maps T elements_complete prfax
R54796:54814 compcert.lib.Maps T elements_complete prfax
R54845:54851 compcert.lib.Maps Tree_Properties.OF_LIST <> sec
prf 54861:54875 Tree_Properties of_list_related
binder 54888:54888 <> A:914
binder 54890:54890 <> B:915
R54904:54907 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54909:54912 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54908:54908 compcert.lib.Maps <> B:915 var
R54903:54903 compcert.lib.Maps <> A:914 var
binder 54900:54900 <> R:916
binder 54919:54919 <> k:917
binder 54921:54922 <> l1:918
binder 54924:54925 <> l2:919
R55002:55007 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55008:55017 compcert.lib.Coqlib <> option_rel ind
R55045:55049 compcert.lib.Maps T get defax
R55054:55060 compcert.lib.Maps Tree_Properties of_list def
R55062:55063 compcert.lib.Maps <> l2:919 var
R55051:55051 compcert.lib.Maps <> k:917 var
R55022:55026 compcert.lib.Maps T get defax
R55031:55037 compcert.lib.Maps Tree_Properties of_list def
R55039:55040 compcert.lib.Maps <> l1:918 var
R55028:55028 compcert.lib.Maps <> k:917 var
R55019:55019 compcert.lib.Maps <> R:916 var
R54930:54941 compcert.lib.Coqlib <> list_forall2 ind
R55000:55001 compcert.lib.Maps <> l2:919 var
R54997:54998 compcert.lib.Maps <> l1:918 var
binder 54948:54949 <> ka:920
binder 54951:54952 <> kb:921
R54972:54975 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R54963:54965 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54957:54959 Coq.Init.Datatypes <> fst def
R54961:54962 compcert.lib.Maps <> ka:920 var
R54966:54968 Coq.Init.Datatypes <> fst def
R54970:54971 compcert.lib.Maps <> kb:921 var
R54976:54976 compcert.lib.Maps <> R:916 var
R54988:54990 Coq.Init.Datatypes <> snd def
R54992:54993 compcert.lib.Maps <> kb:921 var
R54979:54981 Coq.Init.Datatypes <> snd def
R54983:54984 compcert.lib.Maps <> ka:920 var
R55100:55106 compcert.lib.Maps Tree_Properties of_list def
binder 55126:55127 <> ka:922
binder 55129:55130 <> kb:923
R55150:55153 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R55141:55143 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55135:55137 Coq.Init.Datatypes <> fst def
R55139:55140 compcert.lib.Maps <> ka:922 var
R55144:55146 Coq.Init.Datatypes <> fst def
R55148:55149 compcert.lib.Maps <> kb:923 var
R55166:55168 Coq.Init.Datatypes <> snd def
R55170:55171 compcert.lib.Maps <> kb:923 var
R55157:55159 Coq.Init.Datatypes <> snd def
R55161:55162 compcert.lib.Maps <> ka:922 var
binder 55126:55127 <> ka:924
binder 55129:55130 <> kb:925
R55150:55153 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R55141:55143 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55135:55137 Coq.Init.Datatypes <> fst def
R55139:55140 compcert.lib.Maps <> ka:924 var
R55144:55146 Coq.Init.Datatypes <> fst def
R55148:55149 compcert.lib.Maps <> kb:925 var
R55166:55168 Coq.Init.Datatypes <> snd def
R55170:55171 compcert.lib.Maps <> kb:925 var
R55157:55159 Coq.Init.Datatypes <> snd def
R55161:55162 compcert.lib.Maps <> ka:924 var
R55198:55200 compcert.lib.Maps T t defax
binder 55194:55194 <> m:926
R55217:55219 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55212:55216 compcert.lib.Maps T elt defax
binder 55206:55208 <> k_v:927
R55226:55230 compcert.lib.Maps T set defax
R55252:55252 compcert.lib.Maps <> m:926 var
R55243:55245 Coq.Init.Datatypes <> snd def
R55247:55249 compcert.lib.Maps <> k_v:927 var
R55233:55235 Coq.Init.Datatypes <> fst def
R55237:55239 compcert.lib.Maps <> k_v:927 var
R55198:55200 compcert.lib.Maps T t defax
binder 55194:55194 <> m:928
R55217:55219 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55212:55216 compcert.lib.Maps T elt defax
binder 55206:55208 <> k_v:929
R55226:55230 compcert.lib.Maps T set defax
R55252:55252 compcert.lib.Maps <> m:928 var
R55243:55245 Coq.Init.Datatypes <> snd def
R55247:55249 compcert.lib.Maps <> k_v:929 var
R55233:55235 Coq.Init.Datatypes <> fst def
R55237:55239 compcert.lib.Maps <> k_v:929 var
R55278:55280 compcert.lib.Maps T t defax
binder 55274:55274 <> m:930
R55297:55299 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55292:55296 compcert.lib.Maps T elt defax
binder 55286:55288 <> k_v:931
R55306:55310 compcert.lib.Maps T set defax
R55332:55332 compcert.lib.Maps <> m:930 var
R55323:55325 Coq.Init.Datatypes <> snd def
R55327:55329 compcert.lib.Maps <> k_v:931 var
R55313:55315 Coq.Init.Datatypes <> fst def
R55317:55319 compcert.lib.Maps <> k_v:931 var
R55278:55280 compcert.lib.Maps T t defax
binder 55274:55274 <> m:932
R55297:55299 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R55292:55296 compcert.lib.Maps T elt defax
binder 55286:55288 <> k_v:933
R55306:55310 compcert.lib.Maps T set defax
R55332:55332 compcert.lib.Maps <> m:932 var
R55323:55325 Coq.Init.Datatypes <> snd def
R55327:55329 compcert.lib.Maps <> k_v:933 var
R55313:55315 Coq.Init.Datatypes <> fst def
R55317:55319 compcert.lib.Maps <> k_v:933 var
binder 55358:55359 <> l1:934
binder 55361:55362 <> l2:935
R55386:55404 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 55412:55413 <> m1:936
binder 55415:55416 <> m2:937
R55457:55475 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55476:55485 compcert.lib.Coqlib <> option_rel ind
R55521:55525 compcert.lib.Maps T get defax
R55530:55538 Coq.Lists.List <> fold_left def
R55546:55547 compcert.lib.Maps <> m2:937 var
R55543:55544 compcert.lib.Maps <> l2:935 var
R55490:55494 compcert.lib.Maps T get defax
R55499:55507 Coq.Lists.List <> fold_left def
R55515:55516 compcert.lib.Maps <> m1:936 var
R55512:55513 compcert.lib.Maps <> l1:934 var
R55419:55428 compcert.lib.Coqlib <> option_rel ind
R55446:55450 compcert.lib.Maps T get defax
R55454:55455 compcert.lib.Maps <> m2:937 var
R55433:55437 compcert.lib.Maps T get defax
R55441:55442 compcert.lib.Maps <> m1:936 var
R55365:55376 compcert.lib.Coqlib <> list_forall2 ind
R55384:55385 compcert.lib.Maps <> l2:935 var
R55381:55382 compcert.lib.Maps <> l1:934 var
binder 55358:55359 <> l1:938
binder 55361:55362 <> l2:939
R55386:55404 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 55412:55413 <> m1:940
binder 55415:55416 <> m2:941
R55457:55475 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55476:55485 compcert.lib.Coqlib <> option_rel ind
R55521:55525 compcert.lib.Maps T get defax
R55530:55538 Coq.Lists.List <> fold_left def
R55546:55547 compcert.lib.Maps <> m2:941 var
R55543:55544 compcert.lib.Maps <> l2:939 var
R55490:55494 compcert.lib.Maps T get defax
R55499:55507 Coq.Lists.List <> fold_left def
R55515:55516 compcert.lib.Maps <> m1:940 var
R55512:55513 compcert.lib.Maps <> l1:938 var
R55419:55428 compcert.lib.Coqlib <> option_rel ind
R55446:55450 compcert.lib.Maps T get defax
R55454:55455 compcert.lib.Maps <> m2:941 var
R55433:55437 compcert.lib.Maps T get defax
R55441:55442 compcert.lib.Maps <> m1:940 var
R55365:55376 compcert.lib.Coqlib <> list_forall2 ind
R55384:55385 compcert.lib.Maps <> l2:939 var
R55381:55382 compcert.lib.Maps <> l1:938 var
R55646:55653 compcert.lib.Maps T gsspec prfax
R55646:55653 compcert.lib.Maps T gsspec prfax
R55646:55653 compcert.lib.Maps T gsspec prfax
R55646:55653 compcert.lib.Maps T gsspec prfax
R55646:55653 compcert.lib.Maps T gsspec prfax
R55702:55709 compcert.lib.Maps T elt_eq defax
R55714:55716 Coq.Init.Datatypes <> fst def
R55702:55709 compcert.lib.Maps T elt_eq defax
R55714:55716 Coq.Init.Datatypes <> fst def
R55796:55803 compcert.lib.Maps T gempty prfax
R55796:55803 compcert.lib.Maps T gempty prfax
R55796:55803 compcert.lib.Maps T gempty prfax
R55796:55803 compcert.lib.Maps T gempty prfax
R55796:55803 compcert.lib.Maps T gempty prfax
R55829:55843 compcert.lib.Maps Tree_Properties <> mod
R55874:55888 compcert.lib.Maps Tree_Properties <> modtype
R55890:55894 compcert.lib.Maps PTree <> modtype
mod 55854:55869 <> PTree_Properties
R55947:55955 compcert.lib.Maps <> get def
not 55935:55935 <> :::x_'!'_x
R55998:56005 compcert.lib.Maps <> get def
not 55985:55985 <> :::x_'!!'_x
