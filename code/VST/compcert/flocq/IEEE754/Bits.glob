DIGEST 227dc277e6522aa1ebd819a6dba19a0c
Fcompcert.flocq.IEEE754.Bits
R751:754 compcert.flocq.Core.Core <> <> lib
R756:761 compcert.flocq.Core.Digits <> <> lib
R763:768 compcert.flocq.IEEE754.Binary <> <> lib
sec 780:790 <> Binary_Bits
R804:808 Coq.Init.Specif <> exist constr
R804:808 Coq.Init.Specif <> exist constr
R829:837 compcert.flocq.IEEE754.Binary <> B754_zero constr
R829:837 compcert.flocq.IEEE754.Binary <> B754_zero constr
R864:876 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R864:876 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R903:910 compcert.flocq.IEEE754.Binary <> B754_nan constr
R903:910 compcert.flocq.IEEE754.Binary <> B754_nan constr
R937:947 compcert.flocq.IEEE754.Binary <> B754_finite constr
R937:947 compcert.flocq.IEEE754.Binary <> B754_finite constr
var 1026:1027 Binary_Bits mw
var 1029:1030 Binary_Bits ew
R1034:1034 Coq.Numbers.BinNums <> Z ind
def 1049:1057 <> join_bits
R1064:1067 Coq.Init.Datatypes <> bool ind
R1128:1130 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1080:1087 Coq.ZArith.BinInt Z shiftl def
R1126:1127 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1090:1090 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1119:1122 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1094:1094 compcert.flocq.IEEE754.Bits <> s var
R1101:1106 Coq.ZArith.Zpow_def <> Zpower syndef
R1110:1111 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R1123:1123 compcert.flocq.IEEE754.Bits <> e var
R1131:1131 compcert.flocq.IEEE754.Bits <> m var
prf 1144:1158 <> join_bits_range
R1197:1202 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1220:1225 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1228:1231 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1247:1249 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1232:1240 compcert.flocq.IEEE754.Bits <> join_bits def
R1246:1246 compcert.flocq.IEEE754.Bits <> e var
R1244:1244 compcert.flocq.IEEE754.Bits <> m var
R1242:1242 compcert.flocq.IEEE754.Bits <> s var
R1232:1240 compcert.flocq.IEEE754.Bits <> join_bits def
R1246:1246 compcert.flocq.IEEE754.Bits <> e var
R1244:1244 compcert.flocq.IEEE754.Bits <> m var
R1242:1242 compcert.flocq.IEEE754.Bits <> s var
R1251:1254 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R1266:1266 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R1262:1264 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1257:1259 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1255:1256 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1260:1261 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R1205:1208 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1210:1212 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1209:1209 compcert.flocq.IEEE754.Bits <> e var
R1209:1209 compcert.flocq.IEEE754.Bits <> e var
R1214:1214 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R1215:1216 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R1182:1185 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1187:1189 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1186:1186 compcert.flocq.IEEE754.Bits <> m var
R1186:1186 compcert.flocq.IEEE754.Bits <> m var
R1191:1191 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R1192:1193 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1308:1311 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R1312:1313 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1308:1311 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R1312:1313 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1337:1338 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1410:1413 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R1414:1415 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R1410:1413 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R1414:1415 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R1439:1440 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R1510:1518 compcert.flocq.IEEE754.Bits <> join_bits def
R1529:1545 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R1529:1545 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R1529:1545 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R1606:1610 Coq.Init.Logic <> proj1 thm
R1572:1586 Coq.ZArith.Zorder <> Zplus_le_compat syndef
R1606:1610 Coq.Init.Logic <> proj1 thm
R1572:1586 Coq.ZArith.Zorder <> Zplus_le_compat syndef
R1631:1639 Coq.ZArith.BinInt <> Zmult_0_l syndef
R1643:1643 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R1644:1645 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1631:1639 Coq.ZArith.BinInt <> Zmult_0_l syndef
R1643:1643 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R1644:1645 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1631:1639 Coq.ZArith.BinInt <> Zmult_0_l syndef
R1643:1643 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R1644:1645 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1658:1674 Coq.ZArith.Zorder <> Zmult_le_compat_r thm
R1658:1674 Coq.ZArith.Zorder <> Zmult_le_compat_r thm
R1722:1730 Coq.ZArith.BinInt <> Zmult_0_l syndef
R1722:1730 Coq.ZArith.BinInt <> Zmult_0_l syndef
R1722:1730 Coq.ZArith.BinInt <> Zmult_0_l syndef
R1782:1782 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R1816:1819 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R1812:1814 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1783:1783 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1807:1810 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1795:1797 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R1798:1799 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R1821:1823 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R1824:1825 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1762:1774 Coq.ZArith.BinInt Z lt_le_trans thm
R1782:1782 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R1816:1819 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R1812:1814 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1783:1783 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1807:1810 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1795:1797 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R1798:1799 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R1821:1823 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R1824:1825 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1762:1774 Coq.ZArith.BinInt Z lt_le_trans thm
R1842:1859 Coq.ZArith.BinInt <> Zmult_plus_distr_l syndef
R1842:1859 Coq.ZArith.BinInt <> Zmult_plus_distr_l syndef
R1842:1859 Coq.ZArith.BinInt <> Zmult_plus_distr_l syndef
R1875:1891 Coq.ZArith.Zorder <> Zplus_lt_compat_l thm
R1875:1891 Coq.ZArith.Zorder <> Zplus_lt_compat_l thm
R1908:1916 Coq.ZArith.BinInt <> Zmult_1_l syndef
R1908:1916 Coq.ZArith.BinInt <> Zmult_1_l syndef
R1908:1916 Coq.ZArith.BinInt <> Zmult_1_l syndef
R1933:1943 Coq.ZArith.BinInt <> Zplus_assoc syndef
R1945:1946 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1951:1960 Coq.ZArith.BinInt <> Zplus_comm syndef
R1962:1963 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1967:1977 compcert.flocq.Core.Zaux <> Zpower_plus thm
R1933:1943 Coq.ZArith.BinInt <> Zplus_assoc syndef
R1945:1946 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1933:1943 Coq.ZArith.BinInt <> Zplus_assoc syndef
R1945:1946 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1951:1960 Coq.ZArith.BinInt <> Zplus_comm syndef
R1962:1963 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1951:1960 Coq.ZArith.BinInt <> Zplus_comm syndef
R1962:1963 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R1967:1977 compcert.flocq.Core.Zaux <> Zpower_plus thm
R1967:1977 compcert.flocq.Core.Zaux <> Zpower_plus thm
R1967:1977 compcert.flocq.Core.Zaux <> Zpower_plus thm
R1967:1977 compcert.flocq.Core.Zaux <> Zpower_plus thm
R1988:2004 Coq.ZArith.Zorder <> Zmult_le_compat_r thm
R1988:2004 Coq.ZArith.Zorder <> Zmult_le_compat_r thm
R2017:2027 compcert.flocq.Core.Zaux <> Zpower_plus thm
R2017:2027 compcert.flocq.Core.Zaux <> Zpower_plus thm
R2017:2027 compcert.flocq.Core.Zaux <> Zpower_plus thm
R2049:2049 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R2049:2049 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
def 2163:2172 <> split_bits
R2191:2196 Coq.ZArith.Zpow_def <> Zpower syndef
R2200:2201 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R2218:2223 Coq.ZArith.Zpow_def <> Zpower syndef
R2227:2228 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R2235:2235 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2256:2257 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2267:2268 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2289:2289 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2236:2243 Coq.ZArith.Zbool <> Zle_bool syndef
R2255:2255 compcert.flocq.IEEE754.Bits <> x var
R2248:2250 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2246:2247 compcert.flocq.IEEE754.Bits <> mm var
R2251:2252 compcert.flocq.IEEE754.Bits <> em var
R2258:2261 Coq.ZArith.Zdiv <> Zmod syndef
R2265:2266 compcert.flocq.IEEE754.Bits <> mm var
R2263:2263 compcert.flocq.IEEE754.Bits <> x var
R2269:2272 Coq.ZArith.Zdiv <> Zmod syndef
R2287:2288 compcert.flocq.IEEE754.Bits <> em var
R2275:2279 Coq.ZArith.BinInt Z div def
R2283:2284 compcert.flocq.IEEE754.Bits <> mm var
R2281:2281 compcert.flocq.IEEE754.Bits <> x var
prf 2303:2317 <> split_join_bits
R2363:2368 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2393:2398 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2427:2429 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2399:2408 compcert.flocq.IEEE754.Bits <> split_bits def
R2411:2419 compcert.flocq.IEEE754.Bits <> join_bits def
R2425:2425 compcert.flocq.IEEE754.Bits <> e var
R2423:2423 compcert.flocq.IEEE754.Bits <> m var
R2421:2421 compcert.flocq.IEEE754.Bits <> s var
R2430:2430 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2432:2433 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2435:2436 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2438:2438 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2431:2431 compcert.flocq.IEEE754.Bits <> s var
R2434:2434 compcert.flocq.IEEE754.Bits <> m var
R2437:2437 compcert.flocq.IEEE754.Bits <> e var
R2371:2374 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R2376:2378 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R2375:2375 compcert.flocq.IEEE754.Bits <> e var
R2375:2375 compcert.flocq.IEEE754.Bits <> e var
R2379:2384 Coq.ZArith.Zpow_def <> Zpower syndef
R2388:2389 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R2341:2344 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R2346:2348 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R2345:2345 compcert.flocq.IEEE754.Bits <> m var
R2345:2345 compcert.flocq.IEEE754.Bits <> m var
R2349:2354 Coq.ZArith.Zpow_def <> Zpower syndef
R2358:2359 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R2477:2480 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2481:2482 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R2477:2480 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2481:2482 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R2506:2507 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R2579:2582 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2583:2584 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R2579:2582 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2583:2584 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R2608:2609 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R2679:2688 compcert.flocq.IEEE754.Bits <> split_bits def
R2691:2699 compcert.flocq.IEEE754.Bits <> join_bits def
R2710:2726 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R2710:2726 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R2710:2726 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R2743:2750 Coq.Init.Logic <> f_equal2 thm
R2761:2768 Coq.Init.Logic <> f_equal2 thm
R2743:2750 Coq.Init.Logic <> f_equal2 thm
R2761:2768 Coq.Init.Logic <> f_equal2 thm
R2793:2805 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R2793:2805 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R2818:2831 Coq.ZArith.Zorder <> Zle_0_minus_le thm
R2818:2831 Coq.ZArith.Zorder <> Zle_0_minus_le thm
R2863:2879 Coq.ZArith.Zorder <> Zplus_le_0_compat syndef
R2863:2879 Coq.ZArith.Zorder <> Zplus_le_0_compat syndef
R2892:2908 Coq.ZArith.Zorder <> Zmult_le_0_compat syndef
R2892:2908 Coq.ZArith.Zorder <> Zmult_le_0_compat syndef
R2972:2985 compcert.flocq.Core.Zaux <> Zle_bool_false thm
R2972:2985 compcert.flocq.Core.Zaux <> Zle_bool_false thm
R3023:3026 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3029:3029 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3020:3020 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R3021:3022 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R3027:3027 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R2998:3011 Coq.ZArith.Zorder <> Zplus_lt_reg_l thm
R3023:3026 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3029:3029 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3020:3020 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R3021:3022 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R3027:3027 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R2998:3011 Coq.ZArith.Zorder <> Zplus_lt_reg_l thm
R3060:3063 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3084:3084 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3054:3056 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3049:3051 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R3052:3053 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R3057:3058 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R3080:3082 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3064:3064 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3070:3073 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3066:3068 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3075:3077 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R3078:3079 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R3096:3098 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3060:3063 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3084:3084 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3054:3056 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3049:3051 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R3052:3053 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R3057:3058 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R3080:3082 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3064:3064 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3070:3073 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3066:3068 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3075:3077 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R3078:3079 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R3096:3098 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3128:3145 Coq.ZArith.BinInt <> Zmult_plus_distr_r syndef
R3128:3145 Coq.ZArith.BinInt <> Zmult_plus_distr_r syndef
R3128:3145 Coq.ZArith.BinInt <> Zmult_plus_distr_r syndef
R3182:3184 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3179:3179 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R3180:3181 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R3158:3170 Coq.ZArith.BinInt Z lt_le_trans thm
R3182:3184 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3179:3179 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R3180:3181 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R3158:3170 Coq.ZArith.BinInt Z lt_le_trans thm
R3205:3221 Coq.ZArith.Zorder <> Zmult_lt_compat_r thm
R3205:3221 Coq.ZArith.Zorder <> Zmult_lt_compat_r thm
R3234:3250 Coq.ZArith.Zorder <> Zmult_le_compat_l thm
R3234:3250 Coq.ZArith.Zorder <> Zmult_le_compat_l thm
R3309:3318 Coq.ZArith.BinInt <> Zplus_comm syndef
R3309:3318 Coq.ZArith.BinInt <> Zplus_comm syndef
R3309:3318 Coq.ZArith.BinInt <> Zplus_comm syndef
R3331:3345 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R3331:3345 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R3331:3345 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R3360:3369 Coq.ZArith.Zdiv <> Zmod_small thm
R3360:3369 Coq.ZArith.Zdiv <> Zmod_small thm
R3382:3398 Coq.ZArith.Zdiv <> Z_div_plus_full_l thm
R3382:3398 Coq.ZArith.Zdiv <> Z_div_plus_full_l thm
R3382:3398 Coq.ZArith.Zdiv <> Z_div_plus_full_l thm
R3434:3443 Coq.ZArith.Zdiv <> Zdiv_small thm
R3434:3443 Coq.ZArith.Zdiv <> Zdiv_small thm
R3434:3443 Coq.ZArith.Zdiv <> Zdiv_small thm
R3471:3479 Coq.ZArith.BinInt <> Zplus_0_r syndef
R3471:3479 Coq.ZArith.BinInt <> Zplus_0_r syndef
R3471:3479 Coq.ZArith.BinInt <> Zplus_0_r syndef
R3509:3511 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3506:3506 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R3507:3508 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R3524:3526 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3528:3530 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3532:3532 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R3533:3534 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R3509:3511 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3506:3506 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R3507:3508 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R3524:3526 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3528:3530 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R3532:3532 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R3533:3534 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R3560:3574 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R3560:3574 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R3560:3574 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R3591:3600 Coq.ZArith.Zdiv <> Zmod_small thm
R3591:3600 Coq.ZArith.Zdiv <> Zmod_small thm
R3617:3626 Coq.ZArith.Zdiv <> Zmod_small thm
R3617:3626 Coq.ZArith.Zdiv <> Zmod_small thm
var 3646:3648 Binary_Bits Hmw
R3654:3656 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R3657:3658 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
var 3675:3677 Binary_Bits Hew
R3683:3685 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R3686:3687 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
var 3698:3701 Binary_Bits emax
R3706:3711 Coq.ZArith.Zpow_def <> Zpower syndef
R3718:3720 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R3716:3717 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
var 3729:3732 Binary_Bits prec
R3740:3742 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3738:3739 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
var 3753:3756 Binary_Bits emin
R3770:3772 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R3763:3765 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R3766:3769 compcert.flocq.IEEE754.Bits <> Binary_Bits.emax var
R3773:3776 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
var 3786:3797 Binary_Bits binary_float
R3802:3813 compcert.flocq.IEEE754.Binary <> binary_float ind
R3820:3823 compcert.flocq.IEEE754.Bits <> Binary_Bits.emax var
R3815:3818 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
var 3831:3835 Binary_Bits Hprec
R3841:3843 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R3844:3847 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R3867:3870 compcert.flocq.IEEE754.Bits <> prec vardef
R3879:3889 Coq.ZArith.Zorder <> Zle_lt_succ thm
R3879:3889 Coq.ZArith.Zorder <> Zle_lt_succ thm
R3902:3912 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R3902:3912 Coq.ZArith.Zorder <> Zlt_le_weak syndef
var 3925:3931 Binary_Bits Hm_gt_0
R3937:3939 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R3941:3941 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R3942:3943 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R3963:3973 compcert.flocq.Core.Zaux <> Zpower_gt_0 thm
R3975:3980 compcert.flocq.Core.Zaux <> radix2 def
R3963:3973 compcert.flocq.Core.Zaux <> Zpower_gt_0 thm
R3975:3980 compcert.flocq.Core.Zaux <> radix2 def
R3994:4004 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R3994:4004 Coq.ZArith.Zorder <> Zlt_le_weak syndef
var 4017:4023 Binary_Bits He_gt_0
R4029:4031 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R4033:4033 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4034:4035 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R4055:4065 compcert.flocq.Core.Zaux <> Zpower_gt_0 thm
R4067:4072 compcert.flocq.Core.Zaux <> radix2 def
R4055:4065 compcert.flocq.Core.Zaux <> Zpower_gt_0 thm
R4067:4072 compcert.flocq.Core.Zaux <> radix2 def
R4086:4096 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R4086:4096 Coq.ZArith.Zorder <> Zlt_le_weak syndef
var 4116:4119 Binary_Bits Hmax
R4128:4130 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R4124:4127 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R4131:4134 compcert.flocq.IEEE754.Bits <> Binary_Bits.emax var
prf 4149:4163 <> join_split_bits
R4216:4221 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4240:4249 compcert.flocq.IEEE754.Bits <> split_bits def
R4251:4251 compcert.flocq.IEEE754.Bits <> x var
R4227:4227 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4229:4230 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4232:4233 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4235:4235 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4273:4275 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4258:4266 compcert.flocq.IEEE754.Bits <> join_bits def
R4276:4276 compcert.flocq.IEEE754.Bits <> x var
R4183:4186 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R4188:4190 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R4187:4187 compcert.flocq.IEEE754.Bits <> x var
R4187:4187 compcert.flocq.IEEE754.Bits <> x var
R4191:4196 Coq.ZArith.Zpow_def <> Zpower syndef
R4208:4210 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4203:4205 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4201:4202 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4206:4207 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R4306:4315 compcert.flocq.IEEE754.Bits <> split_bits def
R4318:4326 compcert.flocq.IEEE754.Bits <> join_bits def
R4368:4378 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R4337:4353 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R4337:4353 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R4368:4378 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R4337:4353 Coq.ZArith.BinInt Z shiftl_mul_pow2 thm
R4433:4433 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4434:4435 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4406:4422 Coq.ZArith.Zdiv <> Z_div_mod_eq_full syndef
R4433:4433 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4434:4435 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4406:4422 Coq.ZArith.Zdiv <> Z_div_mod_eq_full syndef
R4433:4433 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4434:4435 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4406:4422 Coq.ZArith.Zdiv <> Z_div_mod_eq_full syndef
R4433:4433 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4434:4435 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4406:4422 Coq.ZArith.Zdiv <> Z_div_mod_eq_full syndef
R4448:4454 Coq.Init.Logic <> f_equal thm
R4468:4470 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4467:4467 compcert.flocq.IEEE754.Bits <> v var
R4448:4454 Coq.Init.Logic <> f_equal thm
R4468:4470 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4467:4467 compcert.flocq.IEEE754.Bits <> v var
R4487:4496 Coq.ZArith.BinInt <> Zmult_comm syndef
R4487:4496 Coq.ZArith.BinInt <> Zmult_comm syndef
R4487:4496 Coq.ZArith.BinInt <> Zmult_comm syndef
R4505:4511 Coq.Init.Logic <> f_equal thm
R4505:4511 Coq.Init.Logic <> f_equal thm
R4524:4527 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4532:4532 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4529:4529 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4530:4531 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4577:4580 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4585:4585 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4582:4582 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4583:4584 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4592:4592 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4593:4594 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R4552:4568 Coq.ZArith.Zdiv <> Z_div_mod_eq_full syndef
R4524:4527 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4532:4532 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4529:4529 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4530:4531 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4577:4580 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4585:4585 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4582:4582 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4583:4584 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4592:4592 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4593:4594 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R4552:4568 Coq.ZArith.Zdiv <> Z_div_mod_eq_full syndef
R4577:4580 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4585:4585 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4582:4582 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4583:4584 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4592:4592 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4593:4594 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R4552:4568 Coq.ZArith.Zdiv <> Z_div_mod_eq_full syndef
R4577:4580 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4585:4585 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4582:4582 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4583:4584 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4592:4592 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4593:4594 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R4552:4568 Coq.ZArith.Zdiv <> Z_div_mod_eq_full syndef
R4607:4613 Coq.Init.Logic <> f_equal thm
R4627:4629 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4626:4626 compcert.flocq.IEEE754.Bits <> v var
R4607:4613 Coq.Init.Logic <> f_equal thm
R4627:4629 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4626:4626 compcert.flocq.IEEE754.Bits <> v var
R4657:4659 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4648:4650 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4652:4654 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4655:4656 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4661:4663 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4664:4665 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R4679:4686 Coq.ZArith.Zbool <> Zle_bool syndef
R4695:4697 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R4690:4692 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4693:4694 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4699:4701 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4702:4703 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R4657:4659 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4648:4650 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4652:4654 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4655:4656 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4661:4663 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4664:4665 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R4679:4686 Coq.ZArith.Zbool <> Zle_bool syndef
R4695:4697 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R4690:4692 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4693:4694 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4699:4701 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4702:4703 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R4731:4738 Coq.ZArith.Zbool <> Zle_bool syndef
R4731:4738 Coq.ZArith.Zbool <> Zle_bool syndef
R4753:4761 Coq.ZArith.BinInt <> Zmult_1_r syndef
R4753:4761 Coq.ZArith.BinInt <> Zmult_1_r syndef
R4753:4761 Coq.ZArith.BinInt <> Zmult_1_r syndef
R4776:4784 Coq.ZArith.BinInt <> Zmult_0_r syndef
R4776:4784 Coq.ZArith.BinInt <> Zmult_0_r syndef
R4776:4784 Coq.ZArith.BinInt <> Zmult_0_r syndef
R4795:4803 Coq.ZArith.Zdiv <> Zdiv_Zdiv thm
R4795:4803 Coq.ZArith.Zdiv <> Zdiv_Zdiv thm
R4795:4803 Coq.ZArith.Zdiv <> Zdiv_Zdiv thm
R4795:4803 Coq.ZArith.Zdiv <> Zdiv_Zdiv thm
R4795:4803 Coq.ZArith.Zdiv <> Zdiv_Zdiv thm
R4812:4817 Coq.Init.Logic <> sym_eq syndef
R4812:4817 Coq.Init.Logic <> sym_eq syndef
R4825:4837 compcert.flocq.Core.Zaux <> Zle_bool_spec thm
R4825:4837 compcert.flocq.Core.Zaux <> Zle_bool_spec thm
R4858:4868 Coq.ZArith.Zorder <> Zle_antisym syndef
R4858:4868 Coq.ZArith.Zorder <> Zle_antisym syndef
R4893:4895 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R4877:4880 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4892:4892 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4885:4887 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R4882:4882 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4883:4884 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4889:4889 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4890:4891 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R4893:4895 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R4877:4880 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4892:4892 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R4885:4887 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R4882:4882 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4883:4884 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R4889:4889 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R4890:4891 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R4923:4941 Coq.ZArith.Zdiv <> Zdiv_lt_upper_bound thm
R4923:4941 Coq.ZArith.Zdiv <> Zdiv_lt_upper_bound thm
R4954:4970 Coq.ZArith.Zorder <> Zmult_lt_0_compat syndef
R4954:4970 Coq.ZArith.Zorder <> Zmult_lt_0_compat syndef
R4984:4993 Coq.ZArith.Zpower <> Zpower_exp thm
R5009:5015 Coq.ZArith.BinInt Z le_ge thm
R5025:5035 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R4984:4993 Coq.ZArith.Zpower <> Zpower_exp thm
R4984:4993 Coq.ZArith.Zpower <> Zpower_exp thm
R4984:4993 Coq.ZArith.Zpower <> Zpower_exp thm
R4984:4993 Coq.ZArith.Zpower <> Zpower_exp thm
R5009:5015 Coq.ZArith.BinInt Z le_ge thm
R5009:5015 Coq.ZArith.BinInt Z le_ge thm
R5025:5035 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R5009:5015 Coq.ZArith.BinInt Z le_ge thm
R5025:5035 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R5075:5080 Coq.ZArith.Zpow_def <> Zpower syndef
R5075:5080 Coq.ZArith.Zpow_def <> Zpower syndef
R5099:5108 Coq.ZArith.Zpower <> Zpower_exp thm
R5099:5108 Coq.ZArith.Zpower <> Zpower_exp thm
R5099:5108 Coq.ZArith.Zpower <> Zpower_exp thm
R5099:5108 Coq.ZArith.Zpower <> Zpower_exp thm
R5099:5108 Coq.ZArith.Zpower <> Zpower_exp thm
R5123:5132 Coq.ZArith.BinInt <> Zplus_comm syndef
R5123:5132 Coq.ZArith.BinInt <> Zplus_comm syndef
R5123:5132 Coq.ZArith.BinInt <> Zplus_comm syndef
R5155:5161 Coq.ZArith.BinInt Z le_ge thm
R5155:5161 Coq.ZArith.BinInt Z le_ge thm
R5174:5190 Coq.ZArith.Zorder <> Zplus_le_0_compat syndef
R5200:5210 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R5174:5190 Coq.ZArith.Zorder <> Zplus_le_0_compat syndef
R5200:5210 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R5200:5210 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R5219:5237 Coq.ZArith.Zdiv <> Zdiv_le_lower_bound thm
R5219:5237 Coq.ZArith.Zdiv <> Zdiv_le_lower_bound thm
R5250:5266 Coq.ZArith.Zorder <> Zmult_lt_0_compat syndef
R5250:5266 Coq.ZArith.Zorder <> Zmult_lt_0_compat syndef
R5281:5289 Coq.ZArith.BinInt <> Zmult_1_l syndef
R5281:5289 Coq.ZArith.BinInt <> Zmult_1_l syndef
R5281:5289 Coq.ZArith.BinInt <> Zmult_1_l syndef
R5298:5307 Coq.ZArith.Zdiv <> Zdiv_small thm
R5298:5307 Coq.ZArith.Zdiv <> Zdiv_small thm
R5331:5341 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R5331:5341 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R5354:5364 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R5354:5364 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R5377:5386 compcert.flocq.Core.Zaux <> Zgt_not_eq thm
R5377:5386 compcert.flocq.Core.Zaux <> Zgt_not_eq thm
R5399:5408 compcert.flocq.Core.Zaux <> Zgt_not_eq thm
R5399:5408 compcert.flocq.Core.Zaux <> Zgt_not_eq thm
prf 5425:5438 <> split_bits_inj
R5493:5498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5534:5539 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5567:5572 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5574:5576 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5573:5573 compcert.flocq.IEEE754.Bits <> x var
R5577:5577 compcert.flocq.IEEE754.Bits <> y var
R5552:5554 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5540:5549 compcert.flocq.IEEE754.Bits <> split_bits def
R5551:5551 compcert.flocq.IEEE754.Bits <> x var
R5555:5564 compcert.flocq.IEEE754.Bits <> split_bits def
R5566:5566 compcert.flocq.IEEE754.Bits <> y var
R5501:5504 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R5506:5508 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R5505:5505 compcert.flocq.IEEE754.Bits <> y var
R5505:5505 compcert.flocq.IEEE754.Bits <> y var
R5509:5514 Coq.ZArith.Zpow_def <> Zpower syndef
R5526:5528 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R5521:5523 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R5519:5520 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R5524:5525 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R5460:5463 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R5465:5467 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R5464:5464 compcert.flocq.IEEE754.Bits <> x var
R5464:5464 compcert.flocq.IEEE754.Bits <> x var
R5468:5473 Coq.ZArith.Zpow_def <> Zpower syndef
R5485:5487 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R5480:5482 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R5478:5479 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R5483:5484 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R5617:5631 compcert.flocq.IEEE754.Bits <> join_split_bits thm
R5640:5654 compcert.flocq.IEEE754.Bits <> join_split_bits thm
R5617:5631 compcert.flocq.IEEE754.Bits <> join_split_bits thm
R5640:5654 compcert.flocq.IEEE754.Bits <> join_split_bits thm
R5673:5682 compcert.flocq.IEEE754.Bits <> split_bits def
R5673:5682 compcert.flocq.IEEE754.Bits <> split_bits def
R5716:5725 compcert.flocq.IEEE754.Bits <> split_bits def
R5716:5725 compcert.flocq.IEEE754.Bits <> split_bits def
def 5848:5867 <> bits_of_binary_float
R5874:5885 compcert.flocq.IEEE754.Bits <> Binary_Bits.binary_float var
R5899:5899 compcert.flocq.IEEE754.Bits <> x var
R5910:5918 compcert.flocq.IEEE754.Binary <> B754_zero constr
R5926:5934 compcert.flocq.IEEE754.Bits <> join_bits def
R5947:5959 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R5967:5975 compcert.flocq.IEEE754.Bits <> join_bits def
R5994:5996 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R5983:5988 Coq.ZArith.Zpow_def <> Zpower syndef
R5992:5993 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R6004:6011 compcert.flocq.IEEE754.Binary <> B754_nan constr
R6025:6033 compcert.flocq.IEEE754.Bits <> join_bits def
R6061:6063 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R6050:6055 Coq.ZArith.Zpow_def <> Zpower syndef
R6059:6060 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R6039:6042 Coq.Numbers.BinNums <> Zpos constr
R6071:6081 compcert.flocq.IEEE754.Binary <> B754_finite constr
R6118:6120 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R6111:6114 Coq.Numbers.BinNums <> Zpos constr
R6121:6126 Coq.ZArith.Zpow_def <> Zpower syndef
R6130:6131 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R6146:6153 Coq.ZArith.Zbool <> Zle_bool syndef
R6157:6157 compcert.flocq.IEEE754.Bits <> m var
R6216:6224 compcert.flocq.IEEE754.Bits <> join_bits def
R6230:6233 Coq.Numbers.BinNums <> Zpos constr
R6170:6178 compcert.flocq.IEEE754.Bits <> join_bits def
R6195:6197 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R6188:6190 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R6191:6194 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R6183:6183 compcert.flocq.IEEE754.Bits <> m var
def 6260:6285 <> split_bits_of_binary_float
R6292:6303 compcert.flocq.IEEE754.Bits <> Binary_Bits.binary_float var
R6317:6317 compcert.flocq.IEEE754.Bits <> x var
R6328:6336 compcert.flocq.IEEE754.Binary <> B754_zero constr
R6344:6344 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6347:6348 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6350:6351 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6353:6353 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6361:6373 compcert.flocq.IEEE754.Binary <> B754_infinity constr
R6381:6381 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6384:6385 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6387:6388 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6404:6404 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6400:6402 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R6389:6394 Coq.ZArith.Zpow_def <> Zpower syndef
R6398:6399 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R6412:6419 compcert.flocq.IEEE754.Binary <> B754_nan constr
R6433:6433 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6436:6437 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6446:6447 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6463:6463 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6438:6441 Coq.Numbers.BinNums <> Zpos constr
R6459:6461 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R6448:6453 Coq.ZArith.Zpow_def <> Zpower syndef
R6457:6458 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R6471:6481 compcert.flocq.IEEE754.Binary <> B754_finite constr
R6518:6520 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R6511:6514 Coq.Numbers.BinNums <> Zpos constr
R6521:6526 Coq.ZArith.Zpow_def <> Zpower syndef
R6530:6531 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R6546:6553 Coq.ZArith.Zbool <> Zle_bool syndef
R6557:6557 compcert.flocq.IEEE754.Bits <> m var
R6610:6610 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6613:6614 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6622:6623 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6625:6625 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6615:6618 Coq.Numbers.BinNums <> Zpos constr
R6570:6570 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6573:6574 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6576:6577 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6591:6591 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6575:6575 compcert.flocq.IEEE754.Bits <> m var
R6587:6589 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R6580:6582 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R6583:6586 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
prf 6645:6678 <> split_bits_of_binary_float_correct
R6731:6733 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6696:6705 compcert.flocq.IEEE754.Bits <> split_bits def
R6708:6727 compcert.flocq.IEEE754.Bits <> bits_of_binary_float def
R6729:6729 compcert.flocq.IEEE754.Bits <> x var
R6734:6759 compcert.flocq.IEEE754.Bits <> split_bits_of_binary_float def
R6761:6761 compcert.flocq.IEEE754.Bits <> x var
R6834:6848 compcert.flocq.IEEE754.Bits <> split_join_bits thm
R6870:6878 Coq.ZArith.BinInt Z le_refl thm
R6892:6899 Coq.ZArith.Zorder <> Zlt_pred syndef
R6834:6848 compcert.flocq.IEEE754.Bits <> split_join_bits thm
R6870:6878 Coq.ZArith.BinInt Z le_refl thm
R6870:6878 Coq.ZArith.BinInt Z le_refl thm
R6870:6878 Coq.ZArith.BinInt Z le_refl thm
R6870:6878 Coq.ZArith.BinInt Z le_refl thm
R6892:6899 Coq.ZArith.Zorder <> Zlt_pred syndef
R6892:6899 Coq.ZArith.Zorder <> Zlt_pred syndef
R6834:6848 compcert.flocq.IEEE754.Bits <> split_join_bits thm
R6870:6878 Coq.ZArith.BinInt Z le_refl thm
R6870:6878 Coq.ZArith.BinInt Z le_refl thm
R6870:6878 Coq.ZArith.BinInt Z le_refl thm
R6870:6878 Coq.ZArith.BinInt Z le_refl thm
R6892:6899 Coq.ZArith.Zorder <> Zlt_pred syndef
R6892:6899 Coq.ZArith.Zorder <> Zlt_pred syndef
R6892:6899 Coq.ZArith.Zorder <> Zlt_pred syndef
R6834:6848 compcert.flocq.IEEE754.Bits <> split_join_bits thm
R6870:6878 Coq.ZArith.BinInt Z le_refl thm
R6870:6878 Coq.ZArith.BinInt Z le_refl thm
R6870:6878 Coq.ZArith.BinInt Z le_refl thm
R6870:6878 Coq.ZArith.BinInt Z le_refl thm
R6892:6899 Coq.ZArith.Zorder <> Zlt_pred syndef
R6892:6899 Coq.ZArith.Zorder <> Zlt_pred syndef
R6892:6899 Coq.ZArith.Zorder <> Zlt_pred syndef
R6892:6899 Coq.ZArith.Zorder <> Zlt_pred syndef
R6834:6848 compcert.flocq.IEEE754.Bits <> split_join_bits thm
R6935:6949 compcert.flocq.IEEE754.Bits <> split_join_bits thm
R6935:6949 compcert.flocq.IEEE754.Bits <> split_join_bits thm
R6988:7007 compcert.flocq.Core.Digits <> digits2_Pnat_correct thm
R6988:7007 compcert.flocq.Core.Digits <> digits2_Pnat_correct thm
R7022:7027 compcert.flocq.IEEE754.Binary <> nan_pl def
R7046:7061 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R7067:7089 compcert.flocq.Core.Digits <> Z_of_nat_S_digits2_Pnat thm
R7046:7061 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R7046:7061 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R7067:7089 compcert.flocq.Core.Digits <> Z_of_nat_S_digits2_Pnat thm
R7067:7089 compcert.flocq.Core.Digits <> Z_of_nat_S_digits2_Pnat thm
R7108:7119 Coq.ZArith.Zpower <> Zpower_nat_Z thm
R7108:7119 Coq.ZArith.Zpower <> Zpower_nat_Z thm
R7108:7119 Coq.ZArith.Zpower <> Zpower_nat_Z thm
R7135:7147 Coq.ZArith.BinInt Z lt_le_trans thm
R7135:7147 Coq.ZArith.BinInt Z lt_le_trans thm
R7177:7185 compcert.flocq.Core.Zaux <> radix_val proj
R7187:7192 compcert.flocq.Core.Zaux <> radix2 def
R7177:7185 compcert.flocq.Core.Zaux <> radix_val proj
R7187:7192 compcert.flocq.Core.Zaux <> radix2 def
R7177:7185 compcert.flocq.Core.Zaux <> radix_val proj
R7187:7192 compcert.flocq.Core.Zaux <> radix2 def
R7202:7210 compcert.flocq.Core.Zaux <> Zpower_le thm
R7202:7210 compcert.flocq.Core.Zaux <> Zpower_le thm
R7221:7228 Coq.ZArith.BinInt Z ltb_lt thm
R7221:7228 Coq.ZArith.BinInt Z ltb_lt thm
R7221:7228 Coq.ZArith.BinInt Z ltb_lt thm
R7246:7249 compcert.flocq.IEEE754.Bits <> prec vardef
R7283:7302 compcert.flocq.IEEE754.Bits <> bits_of_binary_float def
R7305:7330 compcert.flocq.IEEE754.Bits <> split_bits_of_binary_float def
R7356:7359 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7350:7353 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R7346:7349 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R7384:7387 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R7360:7366 compcert.flocq.Core.Digits <> Zdigits def
R7376:7379 Coq.Numbers.BinNums <> Zpos constr
R7368:7373 compcert.flocq.Core.Zaux <> radix2 def
R7388:7391 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R7356:7359 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7350:7353 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R7346:7349 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R7384:7387 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R7360:7366 compcert.flocq.Core.Digits <> Zdigits def
R7376:7379 Coq.Numbers.BinNums <> Zpos constr
R7368:7373 compcert.flocq.Core.Zaux <> radix2 def
R7388:7391 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R7408:7416 Coq.Init.Datatypes <> andb_prop thm
R7408:7416 Coq.Init.Datatypes <> andb_prop thm
R7446:7463 compcert.flocq.IEEE754.Binary <> canonical_mantissa def
R7481:7496 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R7481:7496 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R7481:7496 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R7518:7528 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R7518:7528 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R7547:7553 compcert.flocq.Core.FLT <> FLT_exp def
R7563:7566 compcert.flocq.IEEE754.Bits <> emin vardef
R7596:7608 compcert.flocq.Core.Zaux <> Zle_bool_spec thm
R7636:7645 Coq.ZArith.BinInt Z le_0_sub thm
R7663:7672 Coq.ZArith.BinInt Z lt_sub_0 thm
R7691:7705 compcert.flocq.IEEE754.Bits <> split_join_bits thm
R7596:7608 compcert.flocq.Core.Zaux <> Zle_bool_spec thm
R7636:7645 Coq.ZArith.BinInt Z le_0_sub thm
R7663:7672 Coq.ZArith.BinInt Z lt_sub_0 thm
R7691:7705 compcert.flocq.IEEE754.Bits <> split_join_bits thm
R7691:7705 compcert.flocq.IEEE754.Bits <> split_join_bits thm
R7775:7777 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R7768:7771 Coq.Numbers.BinNums <> Zpos constr
R7779:7781 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R7783:7783 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R7784:7785 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R7775:7777 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R7768:7771 Coq.Numbers.BinNums <> Zpos constr
R7779:7781 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R7783:7783 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R7784:7785 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R7816:7818 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R7820:7820 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R7821:7822 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R7834:7834 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R7835:7838 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R7816:7818 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R7820:7820 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R7821:7822 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R7834:7834 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R7835:7838 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R7851:7867 compcert.flocq.Core.Digits <> Zpower_gt_Zdigits thm
R7879:7882 Coq.Numbers.BinNums <> Zpos constr
R7869:7874 compcert.flocq.Core.Zaux <> radix2 def
R7851:7867 compcert.flocq.Core.Digits <> Zpower_gt_Zdigits thm
R7879:7882 Coq.Numbers.BinNums <> Zpos constr
R7869:7874 compcert.flocq.Core.Zaux <> radix2 def
R7907:7910 compcert.flocq.IEEE754.Bits <> prec vardef
R7921:7930 Coq.ZArith.BinInt <> Zplus_comm syndef
R7921:7930 Coq.ZArith.BinInt <> Zplus_comm syndef
R7921:7930 Coq.ZArith.BinInt <> Zplus_comm syndef
R7939:7948 Coq.ZArith.Zpower <> Zpower_exp thm
R7958:7964 Coq.ZArith.BinInt Z le_ge thm
R7939:7948 Coq.ZArith.Zpower <> Zpower_exp thm
R7958:7964 Coq.ZArith.BinInt Z le_ge thm
R7958:7964 Coq.ZArith.BinInt Z le_ge thm
R7991:8001 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R7991:8001 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R8029:8033 Coq.Init.Logic <> proj1 thm
R8029:8033 Coq.Init.Logic <> proj1 thm
R8065:8073 Coq.Init.Datatypes <> andb_prop thm
R8065:8073 Coq.Init.Datatypes <> andb_prop thm
R8103:8106 compcert.flocq.IEEE754.Bits <> emin vardef
R8119:8119 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R8120:8121 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R8133:8135 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R8136:8139 compcert.flocq.IEEE754.Bits <> Binary_Bits.emax var
R8119:8119 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R8120:8121 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R8133:8135 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R8136:8139 compcert.flocq.IEEE754.Bits <> Binary_Bits.emax var
R8157:8171 Coq.ZArith.Zbool <> Zle_bool_imp_le thm
R8157:8171 Coq.ZArith.Zbool <> Zle_bool_imp_le thm
R8204:8209 Coq.Init.Logic <> sym_eq syndef
R8204:8209 Coq.Init.Logic <> sym_eq syndef
R8221:8230 Coq.ZArith.BinInt <> Zsucc_pred thm
R8232:8233 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R8221:8230 Coq.ZArith.BinInt <> Zsucc_pred thm
R8232:8233 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R8221:8230 Coq.ZArith.BinInt <> Zsucc_pred thm
R8232:8233 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R8244:8249 Coq.ZArith.BinInt Z succ def
R8260:8269 Coq.ZArith.BinInt <> Zplus_comm syndef
R8260:8269 Coq.ZArith.BinInt <> Zplus_comm syndef
R8260:8269 Coq.ZArith.BinInt <> Zplus_comm syndef
R8278:8287 Coq.ZArith.Zpower <> Zpower_exp thm
R8297:8303 Coq.ZArith.BinInt Z le_ge thm
R8278:8287 Coq.ZArith.Zpower <> Zpower_exp thm
R8297:8303 Coq.ZArith.BinInt Z le_ge thm
R8297:8303 Coq.ZArith.BinInt Z le_ge thm
R8330:8344 Coq.ZArith.Zorder <> Zlt_0_le_0_pred thm
R8330:8344 Coq.ZArith.Zorder <> Zlt_0_le_0_pred thm
prf 8361:8386 <> bits_of_binary_float_range
R8403:8406 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R8429:8431 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R8407:8426 compcert.flocq.IEEE754.Bits <> bits_of_binary_float def
R8428:8428 compcert.flocq.IEEE754.Bits <> x var
R8407:8426 compcert.flocq.IEEE754.Bits <> bits_of_binary_float def
R8428:8428 compcert.flocq.IEEE754.Bits <> x var
R8433:8434 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R8442:8442 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R8440:8440 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R8437:8437 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R8435:8436 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R8438:8439 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R8462:8481 compcert.flocq.IEEE754.Bits <> bits_of_binary_float def
R8534:8548 compcert.flocq.IEEE754.Bits <> join_bits_range thm
R8534:8548 compcert.flocq.IEEE754.Bits <> join_bits_range thm
R8571:8585 compcert.flocq.IEEE754.Bits <> join_bits_range thm
R8571:8585 compcert.flocq.IEEE754.Bits <> join_bits_range thm
R8635:8642 Coq.ZArith.BinInt Z ltb_lt thm
R8635:8642 Coq.ZArith.BinInt Z ltb_lt thm
R8665:8679 compcert.flocq.IEEE754.Bits <> join_bits_range thm
R8665:8679 compcert.flocq.IEEE754.Bits <> join_bits_range thm
R8708:8724 compcert.flocq.Core.Digits <> Zpower_gt_Zdigits thm
R8736:8739 Coq.Numbers.BinNums <> Zpos constr
R8726:8731 compcert.flocq.Core.Zaux <> radix2 def
R8708:8724 compcert.flocq.Core.Digits <> Zpower_gt_Zdigits thm
R8736:8739 Coq.Numbers.BinNums <> Zpos constr
R8726:8731 compcert.flocq.Core.Zaux <> radix2 def
R8755:8765 Coq.ZArith.BinInt Z lt_succ_r thm
R8755:8765 Coq.ZArith.BinInt Z lt_succ_r thm
R8785:8800 compcert.flocq.Core.Digits <> Zdigits2_Zdigits thm
R8785:8800 compcert.flocq.Core.Digits <> Zdigits2_Zdigits thm
R8785:8800 compcert.flocq.Core.Digits <> Zdigits2_Zdigits thm
R8838:8844 compcert.flocq.IEEE754.Binary <> bounded def
R8860:8877 Coq.Bool.Bool <> andb_true_iff thm
R8860:8877 Coq.Bool.Bool <> andb_true_iff thm
R8915:8922 Coq.ZArith.BinInt Z leb_le thm
R8915:8922 Coq.ZArith.BinInt Z leb_le thm
R8939:8956 compcert.flocq.IEEE754.Binary <> canonical_mantissa def
R8959:8965 compcert.flocq.Core.FLT <> FLT_exp def
R8979:8989 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R8979:8989 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R9004:9016 compcert.flocq.Core.Zaux <> Zle_bool_spec thm
R9004:9016 compcert.flocq.Core.Zaux <> Zle_bool_spec thm
R9040:9054 compcert.flocq.IEEE754.Bits <> join_bits_range thm
R9040:9054 compcert.flocq.IEEE754.Bits <> join_bits_range thm
R9108:9123 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R9108:9123 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R9108:9123 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R9149:9151 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R9142:9145 Coq.Numbers.BinNums <> Zpos constr
R9153:9155 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R9156:9159 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R9149:9151 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R9142:9145 Coq.Numbers.BinNums <> Zpos constr
R9153:9155 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R9156:9159 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R9178:9181 compcert.flocq.IEEE754.Bits <> prec vardef
R9198:9208 compcert.flocq.Core.Zaux <> Zpower_plus thm
R9198:9208 compcert.flocq.Core.Zaux <> Zpower_plus thm
R9198:9208 compcert.flocq.Core.Zaux <> Zpower_plus thm
R9250:9250 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R9250:9250 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R9300:9316 compcert.flocq.Core.Digits <> Zpower_gt_Zdigits thm
R9328:9331 Coq.Numbers.BinNums <> Zpos constr
R9318:9323 compcert.flocq.Core.Zaux <> radix2 def
R9300:9316 compcert.flocq.Core.Digits <> Zpower_gt_Zdigits thm
R9328:9331 Coq.Numbers.BinNums <> Zpos constr
R9318:9323 compcert.flocq.Core.Zaux <> radix2 def
R9396:9399 compcert.flocq.IEEE754.Bits <> emin vardef
R9442:9443 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R9451:9451 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R9458:9461 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R9454:9456 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R9452:9453 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R9442:9443 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R9451:9451 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R9458:9461 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R9454:9456 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R9452:9453 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R9490:9500 compcert.flocq.Core.Zaux <> Zpower_plus thm
R9490:9500 compcert.flocq.Core.Zaux <> Zpower_plus thm
R9490:9500 compcert.flocq.Core.Zaux <> Zpower_plus thm
R9541:9544 compcert.flocq.IEEE754.Bits <> emin vardef
R9547:9550 compcert.flocq.IEEE754.Bits <> emax vardef
R9573:9573 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R9573:9573 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R9626:9635 Coq.ZArith.BinInt Z lt_sub_0 thm
R9626:9635 Coq.ZArith.BinInt Z lt_sub_0 thm
R9653:9667 compcert.flocq.IEEE754.Bits <> join_bits_range thm
R9653:9667 compcert.flocq.IEEE754.Bits <> join_bits_range thm
def 9699:9722 <> binary_float_of_bits_aux
R9752:9761 compcert.flocq.IEEE754.Bits <> split_bits def
R9763:9763 compcert.flocq.IEEE754.Bits <> x var
R9736:9736 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9739:9740 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9743:9744 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9747:9747 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9773:9780 Coq.ZArith.Zbool <> Zeq_bool def
R9939:9946 Coq.ZArith.Zbool <> Zeq_bool def
R9963:9965 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R9952:9957 Coq.ZArith.Zpow_def <> Zpower syndef
R9961:9962 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R10135:10137 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R10138:10143 Coq.ZArith.Zpow_def <> Zpower syndef
R10147:10148 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R10164:10167 Coq.Numbers.BinNums <> Zpos constr
R10175:10185 compcert.flocq.IEEE754.Binary <> F754_finite constr
R10203:10205 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R10196:10198 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R10199:10202 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R10220:10227 compcert.flocq.IEEE754.Binary <> F754_nan constr
R10235:10236 Coq.Numbers.BinNums <> xH constr
R10229:10233 Coq.Init.Datatypes <> false constr
R10000:10001 Coq.Numbers.BinNums <> Z0 constr
R10006:10018 compcert.flocq.IEEE754.Binary <> F754_infinity constr
R10031:10034 Coq.Numbers.BinNums <> Zpos constr
R10043:10050 compcert.flocq.IEEE754.Binary <> F754_nan constr
R10067:10070 Coq.Numbers.BinNums <> Zneg constr
R10077:10084 compcert.flocq.IEEE754.Binary <> F754_nan constr
R10092:10093 Coq.Numbers.BinNums <> xH constr
R10086:10090 Coq.Init.Datatypes <> false constr
R9816:9817 Coq.Numbers.BinNums <> Z0 constr
R9822:9830 compcert.flocq.IEEE754.Binary <> F754_zero constr
R9841:9844 Coq.Numbers.BinNums <> Zpos constr
R9852:9862 compcert.flocq.IEEE754.Binary <> F754_finite constr
R9870:9873 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R9881:9884 Coq.Numbers.BinNums <> Zneg constr
R9891:9898 compcert.flocq.IEEE754.Binary <> F754_nan constr
R9906:9907 Coq.Numbers.BinNums <> xH constr
R9900:9904 Coq.Init.Datatypes <> false constr
prf 10266:10297 <> binary_float_of_bits_aux_correct
R10366:10368 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10315:10326 compcert.flocq.IEEE754.Binary <> valid_binary def
R10339:10362 compcert.flocq.IEEE754.Bits <> binary_float_of_bits_aux def
R10364:10364 compcert.flocq.IEEE754.Bits <> x var
R10333:10336 compcert.flocq.IEEE754.Bits <> Binary_Bits.emax var
R10328:10331 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R10369:10372 Coq.Init.Datatypes <> true constr
R10399:10422 compcert.flocq.IEEE754.Bits <> binary_float_of_bits_aux def
R10425:10434 compcert.flocq.IEEE754.Bits <> split_bits def
R10464:10466 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10451:10456 compcert.flocq.IEEE754.Binary <> nan_pl def
R10458:10461 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R10467:10470 Coq.Init.Datatypes <> true constr
R10464:10466 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10451:10456 compcert.flocq.IEEE754.Binary <> nan_pl def
R10458:10461 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R10467:10470 Coq.Init.Datatypes <> true constr
R10482:10489 Coq.ZArith.BinInt Z ltb_lt thm
R10482:10489 Coq.ZArith.BinInt Z ltb_lt thm
R10508:10511 compcert.flocq.IEEE754.Bits <> prec vardef
R10541:10553 compcert.flocq.Core.Zaux <> Zeq_bool_spec thm
R10541:10553 compcert.flocq.Core.Zaux <> Zeq_bool_spec thm
R10579:10583 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R10585:10585 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R10586:10587 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R10579:10583 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R10585:10585 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R10586:10587 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R10666:10669 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R10642:10648 compcert.flocq.Core.Digits <> Zdigits def
R10658:10661 Coq.Numbers.BinNums <> Zpos constr
R10650:10655 compcert.flocq.Core.Zaux <> radix2 def
R10670:10671 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R10666:10669 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R10642:10648 compcert.flocq.Core.Digits <> Zdigits def
R10658:10661 Coq.Numbers.BinNums <> Zpos constr
R10650:10655 compcert.flocq.Core.Zaux <> radix2 def
R10670:10671 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R10683:10699 compcert.flocq.Core.Digits <> Zdigits_le_Zpower thm
R10683:10699 compcert.flocq.Core.Digits <> Zdigits_le_Zpower thm
R10731:10738 Coq.ZArith.Zdiv <> Z_mod_lt thm
R10731:10738 Coq.ZArith.Zdiv <> Z_mod_lt thm
R10751:10757 Coq.ZArith.BinInt Z lt_gt thm
R10751:10757 Coq.ZArith.BinInt Z lt_gt thm
R10766:10790 compcert.flocq.IEEE754.Binary <> bounded_canonical_lt_emax thm
R10766:10790 compcert.flocq.IEEE754.Binary <> bounded_canonical_lt_emax thm
R10817:10825 compcert.flocq.Core.Generic_fmt <> canonical def
R10828:10831 compcert.flocq.Core.Generic_fmt <> cexp def
R10839:10842 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R10839:10842 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R10853:10867 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R10853:10867 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R10853:10867 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R10853:10867 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R10894:10897 compcert.flocq.Core.Defs <> Fexp proj
R10900:10906 compcert.flocq.Core.FLT <> FLT_exp def
R10915:10920 Coq.Init.Logic <> sym_eq syndef
R10915:10920 Coq.Init.Logic <> sym_eq syndef
R10929:10938 Coq.ZArith.Zmax <> Zmax_right syndef
R10929:10938 Coq.ZArith.Zmax <> Zmax_right syndef
R10964:10967 compcert.flocq.IEEE754.Bits <> prec vardef
R10984:10993 Coq.Reals.RIneq <> Rnot_le_lt thm
R10984:10993 Coq.Reals.RIneq <> Rnot_le_lt thm
R11018:11023 compcert.flocq.Core.Raux <> mag_le thm
R11025:11030 compcert.flocq.Core.Zaux <> radix2 def
R11018:11023 compcert.flocq.Core.Raux <> mag_le thm
R11025:11030 compcert.flocq.Core.Zaux <> radix2 def
R11052:11059 compcert.flocq.Core.Raux <> mag_bpow thm
R11052:11059 compcert.flocq.Core.Raux <> mag_bpow thm
R11052:11059 compcert.flocq.Core.Raux <> mag_bpow thm
R11070:11084 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R11070:11084 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R11070:11084 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R11070:11084 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R11111:11114 compcert.flocq.IEEE754.Bits <> emin vardef
R11117:11120 compcert.flocq.IEEE754.Bits <> prec vardef
R11129:11138 Coq.ZArith.Zorder <> Zlt_not_le thm
R11129:11138 Coq.ZArith.Zorder <> Zlt_not_le thm
R11147:11149 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11150:11153 compcert.flocq.IEEE754.Bits <> Binary_Bits.emax var
R11147:11149 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11150:11153 compcert.flocq.IEEE754.Bits <> Binary_Bits.emax var
R11188:11198 compcert.flocq.Core.Zaux <> Zpower_gt_0 thm
R11200:11205 compcert.flocq.Core.Zaux <> radix2 def
R11188:11198 compcert.flocq.Core.Zaux <> Zpower_gt_0 thm
R11200:11205 compcert.flocq.Core.Zaux <> radix2 def
R11235:11243 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R11235:11243 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R11251:11263 compcert.flocq.Core.Zaux <> Zeq_bool_spec thm
R11251:11263 compcert.flocq.Core.Zaux <> Zeq_bool_spec thm
R11289:11293 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R11295:11297 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R11298:11299 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R11289:11293 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R11295:11297 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R11298:11299 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R11349:11356 Coq.ZArith.BinInt Z ltb_lt thm
R11349:11356 Coq.ZArith.BinInt Z ltb_lt thm
R11367:11382 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R11367:11382 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R11367:11382 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R11411:11414 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11416:11418 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11415:11415 compcert.flocq.IEEE754.Bits <> a var
R11420:11420 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R11419:11419 compcert.flocq.IEEE754.Bits <> b var
R11406:11409 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R11405:11405 compcert.flocq.IEEE754.Bits <> a var
R11410:11410 compcert.flocq.IEEE754.Bits <> b var
R11411:11414 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11416:11418 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11415:11415 compcert.flocq.IEEE754.Bits <> a var
R11420:11420 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R11419:11419 compcert.flocq.IEEE754.Bits <> b var
R11406:11409 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R11405:11405 compcert.flocq.IEEE754.Bits <> a var
R11410:11410 compcert.flocq.IEEE754.Bits <> b var
R11470:11486 compcert.flocq.Core.Digits <> Zdigits_le_Zpower thm
R11470:11486 compcert.flocq.Core.Digits <> Zdigits_le_Zpower thm
R11524:11531 Coq.ZArith.Zdiv <> Z_mod_lt thm
R11558:11566 compcert.flocq.Core.Zaux <> radix_val proj
R11568:11573 compcert.flocq.Core.Zaux <> radix2 def
R11558:11566 compcert.flocq.Core.Zaux <> radix_val proj
R11568:11573 compcert.flocq.Core.Zaux <> radix2 def
R11583:11589 Coq.ZArith.BinInt Z lt_gt thm
R11592:11602 compcert.flocq.Core.Zaux <> Zpower_gt_0 thm
R11583:11589 Coq.ZArith.BinInt Z lt_gt thm
R11592:11602 compcert.flocq.Core.Zaux <> Zpower_gt_0 thm
R11631:11633 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R11622:11626 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R11628:11628 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R11629:11630 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R11635:11635 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R11636:11637 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R11631:11633 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R11622:11626 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R11628:11628 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R11629:11630 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R11635:11635 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R11636:11637 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R11693:11695 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11689:11692 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R11696:11702 compcert.flocq.Core.Digits <> Zdigits def
R11712:11715 Coq.Numbers.BinNums <> Zpos constr
R11704:11709 compcert.flocq.Core.Zaux <> radix2 def
R11693:11695 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11689:11692 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R11696:11702 compcert.flocq.Core.Digits <> Zdigits def
R11712:11715 Coq.Numbers.BinNums <> Zpos constr
R11704:11709 compcert.flocq.Core.Zaux <> radix2 def
R11739:11749 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R11739:11749 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R11739:11749 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R11739:11749 compcert.flocq.Core.Float_prop <> Zdigits_mag thm
R11775:11780 Coq.Init.Logic <> sym_eq syndef
R11775:11780 Coq.Init.Logic <> sym_eq syndef
R11789:11798 compcert.flocq.Core.Raux <> mag_unique thm
R11789:11798 compcert.flocq.Core.Raux <> mag_unique thm
R11812:11818 Coq.Reals.Rbasic_fun <> abs_IZR thm
R11812:11818 Coq.Reals.Rbasic_fun <> abs_IZR thm
R11812:11818 Coq.Reals.Rbasic_fun <> abs_IZR thm
R11828:11832 Coq.ZArith.BinInt Z abs def
R11848:11850 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R11844:11847 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R11861:11862 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R11876:11879 compcert.flocq.IEEE754.Bits <> prec vardef
R11848:11850 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R11844:11847 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R11861:11862 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R11924:11934 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R11940:11942 compcert.flocq.IEEE754.Bits <> Binary_Bits.Hmw var
R11902:11911 compcert.flocq.Core.Raux <> IZR_Zpower thm
R11924:11934 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R11940:11942 compcert.flocq.IEEE754.Bits <> Binary_Bits.Hmw var
R11902:11911 compcert.flocq.Core.Raux <> IZR_Zpower thm
R11924:11934 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R11940:11942 compcert.flocq.IEEE754.Bits <> Binary_Bits.Hmw var
R11902:11911 compcert.flocq.Core.Raux <> IZR_Zpower thm
R11957:11966 compcert.flocq.Core.Raux <> IZR_Zpower thm
R11957:11966 compcert.flocq.Core.Raux <> IZR_Zpower thm
R11957:11966 compcert.flocq.Core.Raux <> IZR_Zpower thm
R11957:11966 compcert.flocq.Core.Raux <> IZR_Zpower thm
R11982:11992 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R11982:11992 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R12023:12028 Coq.Reals.RIneq <> IZR_le thm
R12023:12028 Coq.Reals.RIneq <> IZR_le thm
R12045:12045 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12039:12044 compcert.flocq.Core.Zaux <> radix2 def
R12046:12047 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R12059:12061 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12063:12063 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12064:12065 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R12045:12045 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12039:12044 compcert.flocq.Core.Zaux <> radix2 def
R12046:12047 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R12059:12061 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12063:12063 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12064:12065 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R12077:12093 Coq.ZArith.Zorder <> Zplus_le_compat_r thm
R12077:12093 Coq.ZArith.Zorder <> Zplus_le_compat_r thm
R12103:12110 Coq.ZArith.Zdiv <> Z_mod_lt thm
R12103:12110 Coq.ZArith.Zdiv <> Z_mod_lt thm
R12123:12129 Coq.ZArith.BinInt Z lt_gt thm
R12123:12129 Coq.ZArith.BinInt Z lt_gt thm
R12138:12143 Coq.Reals.RIneq <> IZR_lt thm
R12138:12143 Coq.Reals.RIneq <> IZR_lt thm
R12153:12156 compcert.flocq.IEEE754.Bits <> prec vardef
R12167:12176 Coq.ZArith.Zpower <> Zpower_exp thm
R12167:12176 Coq.ZArith.Zpower <> Zpower_exp thm
R12167:12176 Coq.ZArith.Zpower <> Zpower_exp thm
R12167:12176 Coq.ZArith.Zpower <> Zpower_exp thm
R12167:12176 Coq.ZArith.Zpower <> Zpower_exp thm
R12192:12198 Coq.ZArith.BinInt Z le_ge thm
R12208:12218 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R12192:12198 Coq.ZArith.BinInt Z le_ge thm
R12208:12218 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R12249:12268 Coq.ZArith.BinInt <> Zplus_diag_eq_mult_2 thm
R12249:12268 Coq.ZArith.BinInt <> Zplus_diag_eq_mult_2 thm
R12249:12268 Coq.ZArith.BinInt <> Zplus_diag_eq_mult_2 thm
R12277:12293 Coq.ZArith.Zorder <> Zplus_lt_compat_r thm
R12277:12293 Coq.ZArith.Zorder <> Zplus_lt_compat_r thm
R12303:12310 Coq.ZArith.Zdiv <> Z_mod_lt thm
R12303:12310 Coq.ZArith.Zdiv <> Z_mod_lt thm
R12323:12329 Coq.ZArith.BinInt Z lt_gt thm
R12323:12329 Coq.ZArith.BinInt Z lt_gt thm
R12346:12370 compcert.flocq.IEEE754.Binary <> bounded_canonical_lt_emax thm
R12346:12370 compcert.flocq.IEEE754.Binary <> bounded_canonical_lt_emax thm
R12397:12405 compcert.flocq.Core.Generic_fmt <> canonical def
R12408:12411 compcert.flocq.Core.Generic_fmt <> cexp def
R12422:12436 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R12422:12436 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R12422:12436 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R12422:12436 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R12463:12466 compcert.flocq.Core.Defs <> Fexp proj
R12469:12475 compcert.flocq.Core.FLT <> FLT_exp def
R12504:12504 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R12513:12518 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R12506:12508 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R12510:12510 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12511:12512 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R12520:12520 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12521:12522 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R12504:12504 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R12513:12518 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R12506:12508 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R12510:12510 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12511:12512 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R12520:12520 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12521:12522 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R12560:12562 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R12542:12545 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12559:12559 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12538:12541 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R12555:12557 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R12548:12550 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12551:12554 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R12563:12566 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R12586:12588 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R12579:12581 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12582:12585 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R12560:12562 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R12542:12545 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12559:12559 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12538:12541 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R12555:12557 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R12548:12550 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12551:12554 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R12563:12566 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
R12586:12588 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R12579:12581 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R12582:12585 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R12609:12614 Coq.Init.Logic <> sym_eq syndef
R12609:12614 Coq.Init.Logic <> sym_eq syndef
R12623:12631 Coq.ZArith.Zmax <> Zmax_left thm
R12623:12631 Coq.ZArith.Zmax <> Zmax_left thm
R12661:12664 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R12661:12664 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R12679:12682 compcert.flocq.IEEE754.Bits <> emin vardef
R12722:12729 Coq.ZArith.Zdiv <> Z_mod_lt thm
R12722:12729 Coq.ZArith.Zdiv <> Z_mod_lt thm
R12738:12744 Coq.ZArith.BinInt Z lt_gt thm
R12738:12744 Coq.ZArith.BinInt Z lt_gt thm
R12754:12764 compcert.flocq.Core.Zaux <> Zpower_gt_0 thm
R12766:12771 compcert.flocq.Core.Zaux <> radix2 def
R12754:12764 compcert.flocq.Core.Zaux <> Zpower_gt_0 thm
R12766:12771 compcert.flocq.Core.Zaux <> radix2 def
R12785:12795 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R12785:12795 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R12804:12813 Coq.Reals.RIneq <> Rnot_le_lt thm
R12804:12813 Coq.Reals.RIneq <> Rnot_le_lt thm
R12838:12843 compcert.flocq.Core.Raux <> mag_le thm
R12845:12850 compcert.flocq.Core.Zaux <> radix2 def
R12838:12843 compcert.flocq.Core.Raux <> mag_le thm
R12845:12850 compcert.flocq.Core.Zaux <> radix2 def
R12872:12879 compcert.flocq.Core.Raux <> mag_bpow thm
R12872:12879 compcert.flocq.Core.Raux <> mag_bpow thm
R12872:12879 compcert.flocq.Core.Raux <> mag_bpow thm
R12890:12904 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R12890:12904 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R12890:12904 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R12890:12904 compcert.flocq.Core.Float_prop <> mag_F2R_Zdigits thm
R12944:12953 Coq.ZArith.Zorder <> Zlt_not_le thm
R12944:12953 Coq.ZArith.Zorder <> Zlt_not_le thm
R12963:12966 compcert.flocq.IEEE754.Bits <> emin vardef
R13000:13002 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R12996:12999 compcert.flocq.IEEE754.Bits <> Binary_Bits.emax var
R12975:12988 Coq.ZArith.Zorder <> Zplus_lt_reg_r thm
R13000:13002 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R12996:12999 compcert.flocq.IEEE754.Bits <> Binary_Bits.emax var
R12975:12988 Coq.ZArith.Zorder <> Zplus_lt_reg_r thm
R13048:13048 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R13057:13062 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R13050:13052 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R13054:13054 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R13055:13056 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R13064:13064 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R13065:13066 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R13048:13048 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R13057:13062 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R13050:13052 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R13054:13054 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R13055:13056 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R13064:13064 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R13065:13066 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R13080:13082 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13084:13084 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R13085:13086 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R13080:13082 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13084:13084 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R13085:13086 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R13102:13102 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R13103:13104 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R13116:13118 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13119:13122 compcert.flocq.IEEE754.Bits <> Binary_Bits.emax var
R13102:13102 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R13103:13104 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R13116:13118 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13119:13122 compcert.flocq.IEEE754.Bits <> Binary_Bits.emax var
R13166:13167 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R13176:13179 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13186:13186 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13182:13184 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13180:13181 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R13166:13167 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R13176:13179 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13186:13186 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13182:13184 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13180:13181 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R13208:13217 Coq.ZArith.Zpower <> Zpower_exp thm
R13208:13217 Coq.ZArith.Zpower <> Zpower_exp thm
R13208:13217 Coq.ZArith.Zpower <> Zpower_exp thm
R13208:13217 Coq.ZArith.Zpower <> Zpower_exp thm
R13208:13217 Coq.ZArith.Zpower <> Zpower_exp thm
R13226:13235 Coq.Init.Logic <> refl_equal syndef
R13226:13235 Coq.Init.Logic <> refl_equal syndef
R13279:13286 Coq.ZArith.Zdiv <> Z_mod_lt thm
R13279:13286 Coq.ZArith.Zdiv <> Z_mod_lt thm
R13295:13301 Coq.ZArith.BinInt Z lt_gt thm
R13295:13301 Coq.ZArith.BinInt Z lt_gt thm
R13311:13321 compcert.flocq.Core.Zaux <> Zpower_gt_0 thm
R13323:13328 compcert.flocq.Core.Zaux <> radix2 def
R13311:13321 compcert.flocq.Core.Zaux <> Zpower_gt_0 thm
R13323:13328 compcert.flocq.Core.Zaux <> radix2 def
R13342:13352 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R13342:13352 Coq.ZArith.Zorder <> Zlt_le_weak syndef
R13361:13369 compcert.flocq.Core.Raux <> bpow_gt_0 thm
R13361:13369 compcert.flocq.Core.Raux <> bpow_gt_0 thm
def 13389:13408 <> binary_float_of_bits
R13417:13420 compcert.flocq.IEEE754.Binary <> FF2B def
R13435:13466 compcert.flocq.IEEE754.Bits <> binary_float_of_bits_aux_correct thm
R13468:13468 compcert.flocq.IEEE754.Bits <> x var
R13427:13430 compcert.flocq.IEEE754.Bits <> Binary_Bits.emax var
R13422:13425 compcert.flocq.IEEE754.Bits <> Binary_Bits.prec var
prf 13481:13516 <> binary_float_of_bits_of_binary_float
R13579:13581 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13534:13553 compcert.flocq.IEEE754.Bits <> binary_float_of_bits def
R13556:13575 compcert.flocq.IEEE754.Bits <> bits_of_binary_float def
R13577:13577 compcert.flocq.IEEE754.Bits <> x var
R13582:13582 compcert.flocq.IEEE754.Bits <> x var
R13608:13615 compcert.flocq.IEEE754.Binary <> B2FF_inj thm
R13608:13615 compcert.flocq.IEEE754.Binary <> B2FF_inj thm
R13625:13644 compcert.flocq.IEEE754.Bits <> binary_float_of_bits def
R13655:13663 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R13655:13663 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R13655:13663 compcert.flocq.IEEE754.Binary <> B2FF_FF2B thm
R13673:13696 compcert.flocq.IEEE754.Bits <> binary_float_of_bits_aux def
R13707:13740 compcert.flocq.IEEE754.Bits <> split_bits_of_binary_float_correct thm
R13707:13740 compcert.flocq.IEEE754.Bits <> split_bits_of_binary_float_correct thm
R13707:13740 compcert.flocq.IEEE754.Bits <> split_bits_of_binary_float_correct thm
R13796:13805 Coq.Init.Logic <> refl_equal syndef
R13796:13805 Coq.Init.Logic <> refl_equal syndef
R13829:13842 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R13829:13842 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R13829:13842 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R13829:13842 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R13857:13869 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R13857:13869 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R13857:13869 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R13857:13869 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R13878:13880 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13882:13882 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R13883:13884 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R13878:13880 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13882:13882 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R13883:13884 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R13916:13926 compcert.flocq.Core.Zaux <> Zpower_gt_1 thm
R13928:13933 compcert.flocq.Core.Zaux <> radix2 def
R13916:13926 compcert.flocq.Core.Zaux <> Zpower_gt_1 thm
R13928:13933 compcert.flocq.Core.Zaux <> radix2 def
R13958:13971 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R13958:13971 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R13958:13971 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R13958:13971 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R13982:13994 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R13982:13994 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R13982:13994 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R13982:13994 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R14009:14011 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R14013:14013 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R14014:14015 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R14009:14011 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R14013:14013 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R14014:14015 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R14047:14057 compcert.flocq.Core.Zaux <> Zpower_gt_1 thm
R14059:14064 compcert.flocq.Core.Zaux <> radix2 def
R14047:14057 compcert.flocq.Core.Zaux <> Zpower_gt_1 thm
R14059:14064 compcert.flocq.Core.Zaux <> radix2 def
R14081:14106 compcert.flocq.IEEE754.Bits <> split_bits_of_binary_float def
R14114:14126 compcert.flocq.Core.Zaux <> Zle_bool_spec thm
R14114:14126 compcert.flocq.Core.Zaux <> Zle_bool_spec thm
R14157:14170 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R14157:14170 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R14157:14170 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R14157:14170 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R14181:14194 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R14181:14194 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R14181:14194 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R14181:14194 compcert.flocq.Core.Zaux <> Zeq_bool_false thm
R14232:14234 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14223:14225 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R14216:14219 Coq.Numbers.BinNums <> Zpos constr
R14227:14229 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R14230:14231 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R14236:14238 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R14239:14240 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R14266:14268 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R14259:14261 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14255:14257 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14248:14250 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R14251:14254 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R14262:14265 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R14232:14234 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14223:14225 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R14216:14219 Coq.Numbers.BinNums <> Zpos constr
R14227:14229 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R14230:14231 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R14236:14238 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R14239:14240 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R14266:14268 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R14259:14261 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14255:14257 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14248:14250 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R14251:14254 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R14262:14265 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R14285:14293 Coq.Init.Datatypes <> andb_prop thm
R14285:14293 Coq.Init.Datatypes <> andb_prop thm
R14327:14341 Coq.ZArith.Zbool <> Zle_bool_imp_le thm
R14327:14341 Coq.ZArith.Zbool <> Zle_bool_imp_le thm
R14359:14362 compcert.flocq.IEEE754.Bits <> emin vardef
R14375:14375 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R14376:14377 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R14389:14391 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R14392:14395 compcert.flocq.IEEE754.Bits <> Binary_Bits.emax var
R14375:14375 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R14376:14377 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R14389:14391 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R14392:14395 compcert.flocq.IEEE754.Bits <> Binary_Bits.emax var
R14424:14425 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R14434:14437 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14444:14444 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14440:14442 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R14438:14439 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R14424:14425 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R14434:14437 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14444:14444 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14440:14442 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R14438:14439 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R14466:14475 Coq.ZArith.Zpower <> Zpower_exp thm
R14466:14475 Coq.ZArith.Zpower <> Zpower_exp thm
R14466:14475 Coq.ZArith.Zpower <> Zpower_exp thm
R14466:14475 Coq.ZArith.Zpower <> Zpower_exp thm
R14466:14475 Coq.ZArith.Zpower <> Zpower_exp thm
R14484:14493 Coq.Init.Logic <> refl_equal syndef
R14484:14493 Coq.Init.Logic <> refl_equal syndef
R14540:14548 Coq.Init.Datatypes <> andb_prop thm
R14540:14548 Coq.Init.Datatypes <> andb_prop thm
R14582:14592 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R14582:14592 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R14611:14626 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R14611:14626 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R14611:14626 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R14636:14642 compcert.flocq.Core.FLT <> FLT_exp def
R14645:14648 compcert.flocq.IEEE754.Bits <> emin vardef
R14663:14669 compcert.flocq.Core.Digits <> Zdigits def
R14679:14682 Coq.Numbers.BinNums <> Zpos constr
R14671:14676 compcert.flocq.Core.Zaux <> radix2 def
R14663:14669 compcert.flocq.Core.Digits <> Zdigits def
R14679:14682 Coq.Numbers.BinNums <> Zpos constr
R14671:14676 compcert.flocq.Core.Zaux <> radix2 def
R14736:14748 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R14736:14748 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R14736:14748 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R14736:14748 compcert.flocq.Core.Zaux <> Zeq_bool_true thm
R14760:14769 Coq.Init.Logic <> refl_equal syndef
R14760:14769 Coq.Init.Logic <> refl_equal syndef
R14785:14791 Coq.Init.Logic <> f_equal thm
R14785:14791 Coq.Init.Logic <> f_equal thm
R14804:14812 Coq.Init.Datatypes <> andb_prop thm
R14804:14812 Coq.Init.Datatypes <> andb_prop thm
R14846:14856 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R14846:14856 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R14875:14890 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R14875:14890 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R14875:14890 compcert.flocq.Core.Digits <> Zpos_digits2_pos thm
R14900:14906 compcert.flocq.Core.FLT <> FLT_exp def
R14909:14912 compcert.flocq.IEEE754.Bits <> emin vardef
R14915:14918 compcert.flocq.IEEE754.Bits <> prec vardef
R14930:14939 Coq.ZArith.BinInt Z lt_sub_0 thm
R14930:14939 Coq.ZArith.BinInt Z lt_sub_0 thm
R14960:14976 compcert.flocq.Core.Digits <> Zdigits_le_Zpower thm
R14988:14991 Coq.Numbers.BinNums <> Zpos constr
R14978:14983 compcert.flocq.Core.Zaux <> radix2 def
R14960:14976 compcert.flocq.Core.Digits <> Zdigits_le_Zpower thm
R14988:14991 Coq.Numbers.BinNums <> Zpos constr
R14978:14983 compcert.flocq.Core.Zaux <> radix2 def
R15014:15020 compcert.flocq.Core.Digits <> Zdigits def
R15030:15033 Coq.Numbers.BinNums <> Zpos constr
R15022:15027 compcert.flocq.Core.Zaux <> radix2 def
R15014:15020 compcert.flocq.Core.Digits <> Zdigits def
R15030:15033 Coq.Numbers.BinNums <> Zpos constr
R15022:15027 compcert.flocq.Core.Zaux <> radix2 def
prf 15085:15112 <> bits_of_binary_float_of_bits
R15154:15159 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15205:15207 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15160:15179 compcert.flocq.IEEE754.Bits <> bits_of_binary_float def
R15182:15201 compcert.flocq.IEEE754.Bits <> binary_float_of_bits def
R15203:15203 compcert.flocq.IEEE754.Bits <> x var
R15208:15208 compcert.flocq.IEEE754.Bits <> x var
R15132:15135 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R15137:15139 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R15136:15136 compcert.flocq.IEEE754.Bits <> x var
R15136:15136 compcert.flocq.IEEE754.Bits <> x var
R15141:15142 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R15150:15150 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R15148:15148 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15145:15145 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15143:15144 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R15146:15147 compcert.flocq.IEEE754.Bits <> Binary_Bits.ew var
R15238:15257 compcert.flocq.IEEE754.Bits <> binary_float_of_bits def
R15260:15279 compcert.flocq.IEEE754.Bits <> bits_of_binary_float def
R15293:15324 compcert.flocq.IEEE754.Bits <> binary_float_of_bits_aux_correct thm
R15293:15324 compcert.flocq.IEEE754.Bits <> binary_float_of_bits_aux_correct thm
R15352:15361 compcert.flocq.IEEE754.Binary <> match_FF2B thm
R15352:15361 compcert.flocq.IEEE754.Binary <> match_FF2B thm
R15352:15361 compcert.flocq.IEEE754.Binary <> match_FF2B thm
R15387:15401 compcert.flocq.IEEE754.Bits <> join_split_bits thm
R15387:15401 compcert.flocq.IEEE754.Bits <> join_split_bits thm
R15417:15440 compcert.flocq.IEEE754.Bits <> binary_float_of_bits_aux def
R15452:15461 compcert.flocq.IEEE754.Bits <> split_bits def
R15452:15461 compcert.flocq.IEEE754.Bits <> split_bits def
R15504:15507 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R15510:15512 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R15514:15514 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R15515:15516 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R15504:15507 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R15510:15512 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R15514:15514 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R15515:15516 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R15549:15556 Coq.ZArith.Zdiv <> Z_mod_lt thm
R15549:15556 Coq.ZArith.Zdiv <> Z_mod_lt thm
R15569:15575 Coq.ZArith.BinInt Z lt_gt thm
R15569:15575 Coq.ZArith.BinInt Z lt_gt thm
R15583:15595 compcert.flocq.Core.Zaux <> Zeq_bool_spec thm
R15583:15595 compcert.flocq.Core.Zaux <> Zeq_bool_spec thm
R15705:15718 compcert.flocq.Core.Zaux <> Zle_bool_false thm
R15705:15718 compcert.flocq.Core.Zaux <> Zle_bool_false thm
R15705:15718 compcert.flocq.Core.Zaux <> Zle_bool_false thm
R15705:15718 compcert.flocq.Core.Zaux <> Zle_bool_false thm
R15750:15759 Coq.ZArith.BinInt Z lt_sub_0 thm
R15750:15759 Coq.ZArith.BinInt Z lt_sub_0 thm
R15805:15813 Coq.Init.Logic <> False_ind scheme
R15805:15813 Coq.Init.Logic <> False_ind scheme
R15844:15848 Coq.Init.Logic <> proj1 thm
R15822:15831 Coq.ZArith.Zorder <> Zle_not_lt thm
R15844:15848 Coq.Init.Logic <> proj1 thm
R15822:15831 Coq.ZArith.Zorder <> Zle_not_lt thm
R15876:15888 compcert.flocq.Core.Zaux <> Zeq_bool_spec thm
R15876:15888 compcert.flocq.Core.Zaux <> Zeq_bool_spec thm
R16025:16027 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16029:16031 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R16032:16033 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R16025:16027 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16029:16031 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R16032:16033 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R16056:16064 Coq.Init.Logic <> False_ind scheme
R16056:16064 Coq.Init.Logic <> False_ind scheme
R16131:16143 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R16131:16143 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R16131:16143 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R16131:16143 compcert.flocq.Core.Zaux <> Zle_bool_true thm
R16174:16176 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16167:16169 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16171:16171 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R16172:16173 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R16178:16178 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R16179:16180 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R16206:16208 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16199:16201 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16195:16197 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16188:16190 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16191:16194 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R16202:16205 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R16174:16176 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16167:16169 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16171:16171 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R16172:16173 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R16178:16178 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R16179:16180 compcert.flocq.IEEE754.Bits <> Binary_Bits.mw var
R16206:16208 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16199:16201 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16195:16197 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16188:16190 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16191:16194 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R16202:16205 compcert.flocq.IEEE754.Bits <> Binary_Bits.emin var
R16253:16261 Coq.Init.Logic <> False_ind scheme
R16253:16261 Coq.Init.Logic <> False_ind scheme
R16303:16313 compcert.flocq.IEEE754.Bits Binary_Bits <> sec
sec 16384:16391 <> B32_Bits
R16405:16412 compcert.flocq.IEEE754.Binary <> B754_nan constr
R16405:16412 compcert.flocq.IEEE754.Binary <> B754_nan constr
def 16441:16448 <> binary32
R16453:16464 compcert.flocq.IEEE754.Binary <> binary_float ind
var 16479:16483 B32_Bits Hprec
R16489:16491 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R16512:16521 Coq.Init.Logic <> refl_equal syndef
R16512:16521 Coq.Init.Logic <> refl_equal syndef
var 16534:16543 B32_Bits Hprec_emax
R16550:16552 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R16574:16583 Coq.Init.Logic <> refl_equal syndef
R16574:16583 Coq.Init.Logic <> refl_equal syndef
def 16603:16618 <> default_nan_pl32
R16622:16623 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R16627:16629 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R16638:16640 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R16665:16666 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R16630:16637 compcert.flocq.IEEE754.Bits <> binary32 def
R16658:16660 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16641:16646 compcert.flocq.IEEE754.Binary <> is_nan def
R16655:16657 compcert.flocq.IEEE754.Bits <> nan var
R16661:16664 Coq.Init.Datatypes <> true constr
R16673:16677 Coq.Init.Specif <> exist constr
R16745:16754 Coq.Init.Logic <> refl_equal syndef
R16756:16759 Coq.Init.Datatypes <> true constr
R16683:16690 compcert.flocq.IEEE754.Binary <> B754_nan constr
R16726:16735 Coq.Init.Logic <> refl_equal syndef
R16737:16740 Coq.Init.Datatypes <> true constr
R16706:16713 compcert.flocq.Core.Zaux <> iter_nat def
R16721:16722 Coq.Numbers.BinNums <> xH constr
R16715:16716 Coq.Numbers.BinNums <> xO constr
R16699:16703 Coq.Init.Datatypes <> false constr
def 16775:16787 <> unop_nan_pl32
R16794:16801 compcert.flocq.IEEE754.Bits <> binary32 def
R16806:16807 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R16811:16813 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R16822:16824 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R16849:16850 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R16814:16821 compcert.flocq.IEEE754.Bits <> binary32 def
R16842:16844 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16825:16830 compcert.flocq.IEEE754.Binary <> is_nan def
R16839:16841 compcert.flocq.IEEE754.Bits <> nan var
R16845:16848 Coq.Init.Datatypes <> true constr
R16863:16863 compcert.flocq.IEEE754.Bits <> f var
R16879:16886 compcert.flocq.IEEE754.Binary <> B754_nan constr
R16900:16904 Coq.Init.Specif <> exist constr
R16929:16938 Coq.Init.Logic <> refl_equal syndef
R16940:16943 Coq.Init.Datatypes <> true constr
R16909:16916 compcert.flocq.IEEE754.Binary <> B754_nan constr
R16955:16970 compcert.flocq.IEEE754.Bits <> default_nan_pl32 def
def 16991:17004 <> binop_nan_pl32
R17015:17022 compcert.flocq.IEEE754.Bits <> binary32 def
R17027:17028 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R17032:17034 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R17043:17045 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R17070:17071 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R17035:17042 compcert.flocq.IEEE754.Bits <> binary32 def
R17063:17065 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17046:17051 compcert.flocq.IEEE754.Binary <> is_nan def
R17060:17062 compcert.flocq.IEEE754.Bits <> nan var
R17066:17069 Coq.Init.Datatypes <> true constr
R17088:17089 compcert.flocq.IEEE754.Bits <> f2 var
R17084:17085 compcert.flocq.IEEE754.Bits <> f1 var
R17100:17107 compcert.flocq.IEEE754.Binary <> B754_nan constr
R17127:17131 Coq.Init.Specif <> exist constr
R17159:17168 Coq.Init.Logic <> refl_equal syndef
R17170:17173 Coq.Init.Datatypes <> true constr
R17136:17143 compcert.flocq.IEEE754.Binary <> B754_nan constr
R17183:17190 compcert.flocq.IEEE754.Binary <> B754_nan constr
R17207:17211 Coq.Init.Specif <> exist constr
R17239:17248 Coq.Init.Logic <> refl_equal syndef
R17250:17253 Coq.Init.Datatypes <> true constr
R17216:17223 compcert.flocq.IEEE754.Binary <> B754_nan constr
R17268:17283 compcert.flocq.IEEE754.Bits <> default_nan_pl32 def
def 17304:17312 <> b32_erase
R17324:17327 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17328:17335 compcert.flocq.IEEE754.Bits <> binary32 def
R17316:17323 compcert.flocq.IEEE754.Bits <> binary32 def
R17340:17344 compcert.flocq.IEEE754.Binary <> erase def
def 17365:17371 <> b32_opp
R17383:17386 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17387:17394 compcert.flocq.IEEE754.Bits <> binary32 def
R17375:17382 compcert.flocq.IEEE754.Bits <> binary32 def
R17399:17402 compcert.flocq.IEEE754.Binary <> Bopp def
R17411:17423 compcert.flocq.IEEE754.Bits <> unop_nan_pl32 def
def 17437:17443 <> b32_abs
R17455:17458 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17459:17466 compcert.flocq.IEEE754.Bits <> binary32 def
R17447:17454 compcert.flocq.IEEE754.Bits <> binary32 def
R17471:17474 compcert.flocq.IEEE754.Binary <> Babs def
R17483:17495 compcert.flocq.IEEE754.Bits <> unop_nan_pl32 def
def 17509:17516 <> b32_sqrt
R17525:17528 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17537:17540 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17541:17548 compcert.flocq.IEEE754.Bits <> binary32 def
R17529:17536 compcert.flocq.IEEE754.Bits <> binary32 def
R17521:17524 compcert.flocq.IEEE754.Binary <> mode ind
R17553:17557 compcert.flocq.IEEE754.Binary <> Bsqrt def
R17581:17593 compcert.flocq.IEEE754.Bits <> unop_nan_pl32 def
R17570:17579 compcert.flocq.IEEE754.Bits <> B32_Bits.Hprec_emax var
R17564:17568 compcert.flocq.IEEE754.Bits <> B32_Bits.Hprec var
def 17608:17615 <> b32_plus
R17624:17627 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17636:17639 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17648:17651 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17652:17659 compcert.flocq.IEEE754.Bits <> binary32 def
R17640:17647 compcert.flocq.IEEE754.Bits <> binary32 def
R17628:17635 compcert.flocq.IEEE754.Bits <> binary32 def
R17620:17623 compcert.flocq.IEEE754.Binary <> mode ind
R17664:17668 compcert.flocq.IEEE754.Binary <> Bplus def
R17692:17705 compcert.flocq.IEEE754.Bits <> binop_nan_pl32 def
R17681:17690 compcert.flocq.IEEE754.Bits <> B32_Bits.Hprec_emax var
R17675:17679 compcert.flocq.IEEE754.Bits <> B32_Bits.Hprec var
def 17719:17727 <> b32_minus
R17735:17738 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17747:17750 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17759:17762 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17763:17770 compcert.flocq.IEEE754.Bits <> binary32 def
R17751:17758 compcert.flocq.IEEE754.Bits <> binary32 def
R17739:17746 compcert.flocq.IEEE754.Bits <> binary32 def
R17731:17734 compcert.flocq.IEEE754.Binary <> mode ind
R17775:17780 compcert.flocq.IEEE754.Binary <> Bminus def
R17803:17816 compcert.flocq.IEEE754.Bits <> binop_nan_pl32 def
R17792:17801 compcert.flocq.IEEE754.Bits <> B32_Bits.Hprec_emax var
R17786:17790 compcert.flocq.IEEE754.Bits <> B32_Bits.Hprec var
def 17830:17837 <> b32_mult
R17846:17849 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17858:17861 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17870:17873 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17874:17881 compcert.flocq.IEEE754.Bits <> binary32 def
R17862:17869 compcert.flocq.IEEE754.Bits <> binary32 def
R17850:17857 compcert.flocq.IEEE754.Bits <> binary32 def
R17842:17845 compcert.flocq.IEEE754.Binary <> mode ind
R17886:17890 compcert.flocq.IEEE754.Binary <> Bmult def
R17914:17927 compcert.flocq.IEEE754.Bits <> binop_nan_pl32 def
R17903:17912 compcert.flocq.IEEE754.Bits <> B32_Bits.Hprec_emax var
R17897:17901 compcert.flocq.IEEE754.Bits <> B32_Bits.Hprec var
def 17941:17947 <> b32_div
R17957:17960 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17969:17972 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17981:17984 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17985:17992 compcert.flocq.IEEE754.Bits <> binary32 def
R17973:17980 compcert.flocq.IEEE754.Bits <> binary32 def
R17961:17968 compcert.flocq.IEEE754.Bits <> binary32 def
R17953:17956 compcert.flocq.IEEE754.Binary <> mode ind
R17997:18000 compcert.flocq.IEEE754.Binary <> Bdiv def
R18025:18038 compcert.flocq.IEEE754.Bits <> binop_nan_pl32 def
R18014:18023 compcert.flocq.IEEE754.Bits <> B32_Bits.Hprec_emax var
R18008:18012 compcert.flocq.IEEE754.Bits <> B32_Bits.Hprec var
def 18053:18063 <> b32_compare
R18075:18078 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18087:18090 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18091:18096 Coq.Init.Datatypes <> option ind
R18098:18107 Coq.Init.Datatypes <> comparison ind
R18079:18086 compcert.flocq.IEEE754.Bits <> binary32 def
R18067:18074 compcert.flocq.IEEE754.Bits <> binary32 def
R18112:18119 compcert.flocq.IEEE754.Binary <> Bcompare def
def 18140:18150 <> b32_of_bits
R18155:18158 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18159:18166 compcert.flocq.IEEE754.Bits <> binary32 def
R18154:18154 Coq.Numbers.BinNums <> Z ind
R18171:18190 compcert.flocq.IEEE754.Bits <> binary_float_of_bits def
R18228:18237 Coq.Init.Logic <> refl_equal syndef
R18213:18222 Coq.Init.Logic <> refl_equal syndef
R18198:18207 Coq.Init.Logic <> refl_equal syndef
def 18254:18264 <> bits_of_b32
R18276:18279 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18280:18280 Coq.Numbers.BinNums <> Z ind
R18268:18275 compcert.flocq.IEEE754.Bits <> binary32 def
R18285:18304 compcert.flocq.IEEE754.Bits <> bits_of_binary_float def
R18317:18324 compcert.flocq.IEEE754.Bits B32_Bits <> sec
sec 18395:18402 <> B64_Bits
R18416:18423 compcert.flocq.IEEE754.Binary <> B754_nan constr
R18416:18423 compcert.flocq.IEEE754.Binary <> B754_nan constr
def 18452:18459 <> binary64
R18464:18475 compcert.flocq.IEEE754.Binary <> binary_float ind
var 18491:18495 B64_Bits Hprec
R18501:18503 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R18524:18533 Coq.Init.Logic <> refl_equal syndef
R18524:18533 Coq.Init.Logic <> refl_equal syndef
var 18546:18555 B64_Bits Hprec_emax
R18562:18564 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R18587:18596 Coq.Init.Logic <> refl_equal syndef
R18587:18596 Coq.Init.Logic <> refl_equal syndef
def 18616:18631 <> default_nan_pl64
R18635:18636 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R18640:18642 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R18651:18653 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R18679:18680 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R18643:18650 compcert.flocq.IEEE754.Bits <> binary64 def
R18672:18674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18654:18659 compcert.flocq.IEEE754.Binary <> is_nan def
R18669:18671 compcert.flocq.IEEE754.Bits <> nan var
R18675:18678 Coq.Init.Datatypes <> true constr
R18687:18691 Coq.Init.Specif <> exist constr
R18760:18769 Coq.Init.Logic <> refl_equal syndef
R18771:18774 Coq.Init.Datatypes <> true constr
R18697:18704 compcert.flocq.IEEE754.Binary <> B754_nan constr
R18741:18750 Coq.Init.Logic <> refl_equal syndef
R18752:18755 Coq.Init.Datatypes <> true constr
R18721:18728 compcert.flocq.Core.Zaux <> iter_nat def
R18736:18737 Coq.Numbers.BinNums <> xH constr
R18730:18731 Coq.Numbers.BinNums <> xO constr
R18714:18718 Coq.Init.Datatypes <> false constr
def 18790:18802 <> unop_nan_pl64
R18809:18816 compcert.flocq.IEEE754.Bits <> binary64 def
R18821:18822 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R18826:18828 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R18837:18839 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R18865:18866 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R18829:18836 compcert.flocq.IEEE754.Bits <> binary64 def
R18858:18860 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18840:18845 compcert.flocq.IEEE754.Binary <> is_nan def
R18855:18857 compcert.flocq.IEEE754.Bits <> nan var
R18861:18864 Coq.Init.Datatypes <> true constr
R18879:18879 compcert.flocq.IEEE754.Bits <> f var
R18895:18902 compcert.flocq.IEEE754.Binary <> B754_nan constr
R18916:18920 Coq.Init.Specif <> exist constr
R18945:18954 Coq.Init.Logic <> refl_equal syndef
R18956:18959 Coq.Init.Datatypes <> true constr
R18925:18932 compcert.flocq.IEEE754.Binary <> B754_nan constr
R18971:18986 compcert.flocq.IEEE754.Bits <> default_nan_pl64 def
def 19007:19020 <> binop_nan_pl64
R19031:19038 compcert.flocq.IEEE754.Bits <> binary64 def
R19043:19044 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R19048:19050 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R19059:19061 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R19087:19088 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R19051:19058 compcert.flocq.IEEE754.Bits <> binary64 def
R19080:19082 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19062:19067 compcert.flocq.IEEE754.Binary <> is_nan def
R19077:19079 compcert.flocq.IEEE754.Bits <> nan var
R19083:19086 Coq.Init.Datatypes <> true constr
R19105:19106 compcert.flocq.IEEE754.Bits <> f2 var
R19101:19102 compcert.flocq.IEEE754.Bits <> f1 var
R19117:19124 compcert.flocq.IEEE754.Binary <> B754_nan constr
R19144:19148 Coq.Init.Specif <> exist constr
R19176:19185 Coq.Init.Logic <> refl_equal syndef
R19187:19190 Coq.Init.Datatypes <> true constr
R19153:19160 compcert.flocq.IEEE754.Binary <> B754_nan constr
R19200:19207 compcert.flocq.IEEE754.Binary <> B754_nan constr
R19224:19228 Coq.Init.Specif <> exist constr
R19256:19265 Coq.Init.Logic <> refl_equal syndef
R19267:19270 Coq.Init.Datatypes <> true constr
R19233:19240 compcert.flocq.IEEE754.Binary <> B754_nan constr
R19285:19300 compcert.flocq.IEEE754.Bits <> default_nan_pl64 def
def 19321:19329 <> b64_erase
R19341:19344 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19345:19352 compcert.flocq.IEEE754.Bits <> binary64 def
R19333:19340 compcert.flocq.IEEE754.Bits <> binary64 def
R19357:19361 compcert.flocq.IEEE754.Binary <> erase def
def 19383:19389 <> b64_opp
R19401:19404 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19405:19412 compcert.flocq.IEEE754.Bits <> binary64 def
R19393:19400 compcert.flocq.IEEE754.Bits <> binary64 def
R19417:19420 compcert.flocq.IEEE754.Binary <> Bopp def
R19430:19442 compcert.flocq.IEEE754.Bits <> unop_nan_pl64 def
def 19456:19462 <> b64_abs
R19474:19477 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19478:19485 compcert.flocq.IEEE754.Bits <> binary64 def
R19466:19473 compcert.flocq.IEEE754.Bits <> binary64 def
R19490:19493 compcert.flocq.IEEE754.Binary <> Babs def
R19503:19515 compcert.flocq.IEEE754.Bits <> unop_nan_pl64 def
def 19529:19536 <> b64_sqrt
R19544:19547 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19556:19559 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19560:19567 compcert.flocq.IEEE754.Bits <> binary64 def
R19548:19555 compcert.flocq.IEEE754.Bits <> binary64 def
R19540:19543 compcert.flocq.IEEE754.Binary <> mode ind
R19572:19576 compcert.flocq.IEEE754.Binary <> Bsqrt def
R19599:19611 compcert.flocq.IEEE754.Bits <> unop_nan_pl64 def
R19588:19597 compcert.flocq.IEEE754.Bits <> B64_Bits.Hprec_emax var
R19582:19586 compcert.flocq.IEEE754.Bits <> B64_Bits.Hprec var
def 19626:19633 <> b64_plus
R19642:19645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19654:19657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19666:19669 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19670:19677 compcert.flocq.IEEE754.Bits <> binary64 def
R19658:19665 compcert.flocq.IEEE754.Bits <> binary64 def
R19646:19653 compcert.flocq.IEEE754.Bits <> binary64 def
R19638:19641 compcert.flocq.IEEE754.Binary <> mode ind
R19682:19686 compcert.flocq.IEEE754.Binary <> Bplus def
R19710:19723 compcert.flocq.IEEE754.Bits <> binop_nan_pl64 def
R19699:19708 compcert.flocq.IEEE754.Bits <> B64_Bits.Hprec_emax var
R19693:19697 compcert.flocq.IEEE754.Bits <> B64_Bits.Hprec var
def 19737:19745 <> b64_minus
R19753:19756 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19765:19768 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19777:19780 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19781:19788 compcert.flocq.IEEE754.Bits <> binary64 def
R19769:19776 compcert.flocq.IEEE754.Bits <> binary64 def
R19757:19764 compcert.flocq.IEEE754.Bits <> binary64 def
R19749:19752 compcert.flocq.IEEE754.Binary <> mode ind
R19793:19798 compcert.flocq.IEEE754.Binary <> Bminus def
R19821:19834 compcert.flocq.IEEE754.Bits <> binop_nan_pl64 def
R19810:19819 compcert.flocq.IEEE754.Bits <> B64_Bits.Hprec_emax var
R19804:19808 compcert.flocq.IEEE754.Bits <> B64_Bits.Hprec var
def 19848:19855 <> b64_mult
R19864:19867 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19876:19879 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19888:19891 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19892:19899 compcert.flocq.IEEE754.Bits <> binary64 def
R19880:19887 compcert.flocq.IEEE754.Bits <> binary64 def
R19868:19875 compcert.flocq.IEEE754.Bits <> binary64 def
R19860:19863 compcert.flocq.IEEE754.Binary <> mode ind
R19904:19908 compcert.flocq.IEEE754.Binary <> Bmult def
R19932:19945 compcert.flocq.IEEE754.Bits <> binop_nan_pl64 def
R19921:19930 compcert.flocq.IEEE754.Bits <> B64_Bits.Hprec_emax var
R19915:19919 compcert.flocq.IEEE754.Bits <> B64_Bits.Hprec var
def 19959:19965 <> b64_div
R19975:19978 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19987:19990 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19999:20002 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20003:20010 compcert.flocq.IEEE754.Bits <> binary64 def
R19991:19998 compcert.flocq.IEEE754.Bits <> binary64 def
R19979:19986 compcert.flocq.IEEE754.Bits <> binary64 def
R19971:19974 compcert.flocq.IEEE754.Binary <> mode ind
R20015:20018 compcert.flocq.IEEE754.Binary <> Bdiv def
R20043:20056 compcert.flocq.IEEE754.Bits <> binop_nan_pl64 def
R20032:20041 compcert.flocq.IEEE754.Bits <> B64_Bits.Hprec_emax var
R20026:20030 compcert.flocq.IEEE754.Bits <> B64_Bits.Hprec var
def 20071:20081 <> b64_compare
R20093:20096 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20105:20108 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20109:20114 Coq.Init.Datatypes <> option ind
R20116:20125 Coq.Init.Datatypes <> comparison ind
R20097:20104 compcert.flocq.IEEE754.Bits <> binary64 def
R20085:20092 compcert.flocq.IEEE754.Bits <> binary64 def
R20130:20137 compcert.flocq.IEEE754.Binary <> Bcompare def
def 20159:20169 <> b64_of_bits
R20174:20177 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20178:20185 compcert.flocq.IEEE754.Bits <> binary64 def
R20173:20173 Coq.Numbers.BinNums <> Z ind
R20190:20209 compcert.flocq.IEEE754.Bits <> binary_float_of_bits def
R20248:20257 Coq.Init.Logic <> refl_equal syndef
R20233:20242 Coq.Init.Logic <> refl_equal syndef
R20218:20227 Coq.Init.Logic <> refl_equal syndef
def 20274:20284 <> bits_of_b64
R20296:20299 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20300:20300 Coq.Numbers.BinNums <> Z ind
R20288:20295 compcert.flocq.IEEE754.Bits <> binary64 def
R20305:20324 compcert.flocq.IEEE754.Bits <> bits_of_binary_float def
R20338:20345 compcert.flocq.IEEE754.Bits B64_Bits <> sec
