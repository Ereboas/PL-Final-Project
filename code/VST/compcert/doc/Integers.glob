DIGEST NO
Fcompcert.lib.Integers
R1125:1133 Coq.Logic.Eqdep_dec <> <> lib
R1151:1155 Coq.ZArith.Zquot <> <> lib
R1173:1175 Coq.ZArith.Zwf <> <> lib
R1193:1198 compcert.lib.Coqlib <> <> lib
ind 1234:1243 <> comparison
constr 1259:1261 <> Ceq
constr 1307:1309 <> Cne
constr 1360:1362 <> Clt
constr 1413:1415 <> Cle
constr 1475:1477 <> Cgt
constr 1531:1533 <> Cge
R1265:1274 compcert.lib.Integers <> comparison ind
R1313:1322 compcert.lib.Integers <> comparison ind
R1366:1375 compcert.lib.Integers <> comparison ind
R1419:1428 compcert.lib.Integers <> comparison ind
R1481:1490 compcert.lib.Integers <> comparison ind
R1537:1546 compcert.lib.Integers <> comparison ind
def 1604:1620 <> negate_comparison
R1626:1635 compcert.lib.Integers <> comparison ind
R1639:1648 compcert.lib.Integers <> comparison ind
R1661:1661 compcert.lib.Integers <> c var
R1672:1674 compcert.lib.Integers <> Ceq constr
R1679:1681 compcert.lib.Integers <> Cne constr
R1687:1689 compcert.lib.Integers <> Cne constr
R1694:1696 compcert.lib.Integers <> Ceq constr
R1702:1704 compcert.lib.Integers <> Clt constr
R1709:1711 compcert.lib.Integers <> Cge constr
R1717:1719 compcert.lib.Integers <> Cle constr
R1724:1726 compcert.lib.Integers <> Cgt constr
R1732:1734 compcert.lib.Integers <> Cgt constr
R1739:1741 compcert.lib.Integers <> Cle constr
R1747:1749 compcert.lib.Integers <> Cge constr
R1754:1756 compcert.lib.Integers <> Clt constr
def 1777:1791 <> swap_comparison
R1797:1806 compcert.lib.Integers <> comparison ind
R1810:1819 compcert.lib.Integers <> comparison ind
R1832:1832 compcert.lib.Integers <> c var
R1843:1845 compcert.lib.Integers <> Ceq constr
R1850:1852 compcert.lib.Integers <> Ceq constr
R1858:1860 compcert.lib.Integers <> Cne constr
R1865:1867 compcert.lib.Integers <> Cne constr
R1873:1875 compcert.lib.Integers <> Clt constr
R1880:1882 compcert.lib.Integers <> Cgt constr
R1888:1890 compcert.lib.Integers <> Cle constr
R1895:1897 compcert.lib.Integers <> Cge constr
R1903:1905 compcert.lib.Integers <> Cgt constr
R1910:1912 compcert.lib.Integers <> Clt constr
R1918:1920 compcert.lib.Integers <> Cge constr
R1925:1927 compcert.lib.Integers <> Cle constr
modtype 2003:2010 <> WORDSIZE
ax 2025:2032 WORDSIZE wordsize
R2035:2037 Coq.Init.Datatypes <> nat ind
ax 2048:2064 WORDSIZE wordsize_not_zero
R2075:2078 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R2067:2074 compcert.lib.Integers WORDSIZE wordsize defax
R2090:2097 compcert.lib.Integers WORDSIZE <> modtype
R2253:2260 compcert.lib.Integers WORDSIZE <> mod
mod 2244:2247 <> Make
def 2276:2283 Make wordsize
R2286:2288 Coq.Init.Datatypes <> nat ind
R2293:2303 compcert.lib.Integers WS wordsize defax
def 2317:2325 Make zwordsize
R2328:2328 Coq.Numbers.BinNums <> Z ind
R2333:2340 Coq.ZArith.BinInt <> Z_of_nat syndef
R2342:2349 compcert.lib.Integers Make wordsize def
def 2363:2369 Make modulus
R2373:2373 Coq.Numbers.BinNums <> Z ind
R2378:2390 Coq.ZArith.Zpower <> two_power_nat def
R2392:2399 compcert.lib.Integers Make wordsize def
def 2413:2424 Make half_modulus
R2428:2428 Coq.Numbers.BinNums <> Z ind
R2440:2442 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R2433:2439 compcert.lib.Integers Make modulus def
def 2457:2468 Make max_unsigned
R2472:2472 Coq.Numbers.BinNums <> Z ind
R2484:2486 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R2477:2483 compcert.lib.Integers Make modulus def
def 2501:2510 Make max_signed
R2514:2514 Coq.Numbers.BinNums <> Z ind
R2531:2533 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R2519:2530 compcert.lib.Integers Make half_modulus def
def 2548:2557 Make min_signed
R2561:2561 Coq.Numbers.BinNums <> Z ind
R2566:2567 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R2568:2579 compcert.lib.Integers Make half_modulus def
prf 2590:2601 Make wordsize_pos
R2613:2615 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R2604:2612 compcert.lib.Integers Make zwordsize def
R2635:2643 compcert.lib.Integers Make zwordsize def
R2646:2653 compcert.lib.Integers Make wordsize def
R2667:2686 compcert.lib.Integers WS wordsize_not_zero prfax
R2667:2686 compcert.lib.Integers WS wordsize_not_zero prfax
prf 2709:2721 Make modulus_power
R2731:2733 Coq.Init.Logic <> :type_scope:x_'='_x not
R2724:2730 compcert.lib.Integers Make modulus def
R2734:2738 Coq.ZArith.Zpower <> two_p def
R2740:2748 compcert.lib.Integers Make zwordsize def
R2767:2773 compcert.lib.Integers Make modulus def
R2782:2800 compcert.lib.Coqlib <> two_power_nat_two_p thm
R2782:2800 compcert.lib.Coqlib <> two_power_nat_two_p thm
prf 2816:2826 Make modulus_pos
R2836:2838 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R2829:2835 compcert.lib.Integers Make modulus def
R2859:2871 compcert.lib.Integers Make modulus_power thm
R2859:2871 compcert.lib.Integers Make modulus_power thm
R2859:2871 compcert.lib.Integers Make modulus_power thm
R2880:2892 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R2880:2892 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R2906:2917 compcert.lib.Integers Make wordsize_pos thm
R2906:2917 compcert.lib.Integers Make wordsize_pos thm
constr 3179:3183 Make mkint
rec 3166:3168 Make int
proj 3187:3192 Make intval
proj 3198:3205 Make intrange
R3195:3195 Coq.Numbers.BinNums <> Z ind
R3210:3212 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R3219:3221 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R3213:3218 compcert.lib.Integers <> intval meth
R3213:3218 compcert.lib.Integers <> intval meth
R3222:3228 compcert.lib.Integers Make modulus def
def 3290:3300 Make P_mod_two_p
R3306:3313 Coq.Numbers.BinNums <> positive ind
R3320:3322 Coq.Init.Datatypes <> nat ind
R3338:3338 Coq.Numbers.BinNums <> Z ind
R3351:3351 compcert.lib.Integers <> n var
R3362:3362 Coq.Init.Datatypes <> O constr
R3373:3373 Coq.Init.Datatypes <> S constr
R3392:3392 compcert.lib.Integers <> p var
R3407:3408 Coq.Numbers.BinNums <> xH constr
R3423:3424 Coq.Numbers.BinNums <> xO constr
R3431:3438 Coq.ZArith.BinInt Z double def
R3441:3451 compcert.lib.Integers <> P_mod_two_p def
R3466:3467 Coq.Numbers.BinNums <> xI constr
R3474:3486 Coq.ZArith.BinInt Z succ_double def
R3489:3499 compcert.lib.Integers <> P_mod_two_p def
def 3535:3547 Make Z_mod_modulus
R3553:3553 Coq.Numbers.BinNums <> Z ind
R3558:3558 Coq.Numbers.BinNums <> Z ind
R3571:3571 compcert.lib.Integers <> x var
R3582:3583 Coq.Numbers.BinNums <> Z0 constr
R3594:3597 Coq.Numbers.BinNums <> Zpos constr
R3604:3614 compcert.lib.Integers Make P_mod_two_p def
R3618:3625 compcert.lib.Integers Make wordsize def
R3631:3634 Coq.Numbers.BinNums <> Zneg constr
R3650:3660 compcert.lib.Integers Make P_mod_two_p def
R3664:3671 compcert.lib.Integers Make wordsize def
R3679:3681 compcert.lib.Coqlib <> zeq def
R3683:3683 compcert.lib.Integers <> r var
R3706:3708 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R3699:3705 compcert.lib.Integers Make modulus def
R3709:3709 compcert.lib.Integers <> r var
prf 3725:3741 Make P_mod_two_p_range
R3759:3762 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R3778:3780 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R3763:3773 compcert.lib.Integers Make P_mod_two_p def
R3777:3777 compcert.lib.Integers <> n var
R3775:3775 compcert.lib.Integers <> p var
R3763:3773 compcert.lib.Integers Make P_mod_two_p def
R3777:3777 compcert.lib.Integers <> n var
R3775:3775 compcert.lib.Integers <> p var
R3781:3793 Coq.ZArith.Zpower <> two_power_nat def
R3795:3795 compcert.lib.Integers <> n var
R3847:3861 compcert.lib.Coqlib <> two_power_nat_O thm
R3847:3861 compcert.lib.Coqlib <> two_power_nat_O thm
R3847:3861 compcert.lib.Coqlib <> two_power_nat_O thm
R3883:3897 Coq.ZArith.Zpower <> two_power_nat_S thm
R3883:3897 Coq.ZArith.Zpower <> two_power_nat_S thm
R3883:3897 Coq.ZArith.Zpower <> two_power_nat_S thm
R3946:3963 Coq.ZArith.BinInt Z succ_double_spec thm
R3946:3963 Coq.ZArith.BinInt Z succ_double_spec thm
R3946:3963 Coq.ZArith.BinInt Z succ_double_spec thm
R4007:4019 Coq.ZArith.BinInt Z double_spec thm
R4007:4019 Coq.ZArith.BinInt Z double_spec thm
R4007:4019 Coq.ZArith.BinInt Z double_spec thm
R4047:4063 compcert.lib.Coqlib <> two_power_nat_pos thm
R4047:4063 compcert.lib.Coqlib <> two_power_nat_pos thm
prf 4088:4101 Make P_mod_two_p_eq
R4133:4135 Coq.Init.Logic <> :type_scope:x_'='_x not
R4118:4128 compcert.lib.Integers Make P_mod_two_p def
R4132:4132 compcert.lib.Integers <> n var
R4130:4130 compcert.lib.Integers <> p var
R4136:4136 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R4143:4149 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R4165:4165 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R4137:4140 Coq.Numbers.BinNums <> Zpos constr
R4142:4142 compcert.lib.Integers <> p var
R4150:4162 Coq.ZArith.Zpower <> two_power_nat def
R4164:4164 compcert.lib.Integers <> n var
R4197:4203 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4205:4206 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4213:4215 Coq.Init.Logic <> :type_scope:x_'='_x not
R4207:4210 Coq.Numbers.BinNums <> Zpos constr
R4212:4212 compcert.lib.Integers <> p var
R4235:4237 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4217:4219 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4216:4216 compcert.lib.Integers <> y var
R4220:4232 Coq.ZArith.Zpower <> two_power_nat def
R4234:4234 compcert.lib.Integers <> n var
R4238:4248 compcert.lib.Integers Make P_mod_two_p def
R4252:4252 compcert.lib.Integers <> n var
R4250:4250 compcert.lib.Integers <> p var
R4197:4203 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4205:4206 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4213:4215 Coq.Init.Logic <> :type_scope:x_'='_x not
R4207:4210 Coq.Numbers.BinNums <> Zpos constr
R4212:4212 compcert.lib.Integers <> p var
R4235:4237 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4217:4219 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4216:4216 compcert.lib.Integers <> y var
R4220:4232 Coq.ZArith.Zpower <> two_power_nat def
R4234:4234 compcert.lib.Integers <> n var
R4238:4248 compcert.lib.Integers Make P_mod_two_p def
R4252:4252 compcert.lib.Integers <> n var
R4250:4250 compcert.lib.Integers <> p var
R4306:4320 compcert.lib.Coqlib <> two_power_nat_O thm
R4306:4320 compcert.lib.Coqlib <> two_power_nat_O thm
R4306:4320 compcert.lib.Coqlib <> two_power_nat_O thm
R4331:4334 Coq.Numbers.BinNums <> Zpos constr
R4331:4334 Coq.Numbers.BinNums <> Zpos constr
R4360:4374 Coq.ZArith.Zpower <> two_power_nat_S thm
R4360:4374 Coq.ZArith.Zpower <> two_power_nat_S thm
R4360:4374 Coq.ZArith.Zpower <> two_power_nat_S thm
R4477:4479 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4468:4470 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4471:4474 Coq.Numbers.BinNums <> Zpos constr
R4451:4454 Coq.Numbers.BinNums <> Zpos constr
R4457:4458 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R4451:4454 Coq.Numbers.BinNums <> Zpos constr
R4457:4458 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R4477:4479 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4468:4470 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4471:4474 Coq.Numbers.BinNums <> Zpos constr
R4512:4529 Coq.ZArith.BinInt Z succ_double_spec thm
R4512:4529 Coq.ZArith.BinInt Z succ_double_spec thm
R4512:4529 Coq.ZArith.BinInt Z succ_double_spec thm
R4617:4619 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4620:4623 Coq.Numbers.BinNums <> Zpos constr
R4600:4603 Coq.Numbers.BinNums <> Zpos constr
R4606:4607 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R4600:4603 Coq.Numbers.BinNums <> Zpos constr
R4606:4607 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R4617:4619 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4620:4623 Coq.Numbers.BinNums <> Zpos constr
R4658:4670 Coq.ZArith.BinInt Z double_spec thm
R4673:4683 compcert.lib.Integers Make P_mod_two_p def
R4658:4670 Coq.ZArith.BinInt Z double_spec thm
R4673:4683 compcert.lib.Integers Make P_mod_two_p def
R4658:4670 Coq.ZArith.BinInt Z double_spec thm
R4673:4683 compcert.lib.Integers Make P_mod_two_p def
R4785:4795 compcert.lib.Coqlib <> Zmod_unique thm
R4785:4795 compcert.lib.Coqlib <> Zmod_unique thm
R4817:4833 compcert.lib.Integers Make P_mod_two_p_range thm
R4817:4833 compcert.lib.Integers Make P_mod_two_p_range thm
prf 4848:4866 Make Z_mod_modulus_range
R4882:4885 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R4901:4903 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R4886:4898 compcert.lib.Integers Make Z_mod_modulus def
R4900:4900 compcert.lib.Integers <> x var
R4886:4898 compcert.lib.Integers Make Z_mod_modulus def
R4900:4900 compcert.lib.Integers <> x var
R4904:4910 compcert.lib.Integers Make modulus def
R4937:4949 compcert.lib.Integers Make Z_mod_modulus def
R4981:4991 compcert.lib.Integers Make modulus_pos thm
R4981:4991 compcert.lib.Integers Make modulus_pos thm
R5011:5027 compcert.lib.Integers Make P_mod_two_p_range thm
R5011:5027 compcert.lib.Integers Make P_mod_two_p_range thm
R5044:5054 compcert.lib.Integers Make P_mod_two_p def
R5058:5065 compcert.lib.Integers Make wordsize def
R5044:5054 compcert.lib.Integers Make P_mod_two_p def
R5058:5065 compcert.lib.Integers Make wordsize def
R5082:5085 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R5087:5089 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R5090:5096 compcert.lib.Integers Make modulus def
R5108:5124 compcert.lib.Integers Make P_mod_two_p_range thm
R5082:5085 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R5087:5089 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R5090:5096 compcert.lib.Integers Make modulus def
R5108:5124 compcert.lib.Integers Make P_mod_two_p_range thm
R5141:5143 compcert.lib.Coqlib <> zeq def
R5141:5143 compcert.lib.Coqlib <> zeq def
R5168:5178 compcert.lib.Integers Make modulus_pos thm
R5168:5178 compcert.lib.Integers Make modulus_pos thm
prf 5213:5232 Make Z_mod_modulus_range'
R5249:5251 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R5267:5269 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R5252:5264 compcert.lib.Integers Make Z_mod_modulus def
R5266:5266 compcert.lib.Integers <> x var
R5252:5264 compcert.lib.Integers Make Z_mod_modulus def
R5266:5266 compcert.lib.Integers <> x var
R5270:5276 compcert.lib.Integers Make modulus def
R5308:5326 compcert.lib.Integers Make Z_mod_modulus_range thm
R5308:5326 compcert.lib.Integers Make Z_mod_modulus_range thm
prf 5351:5366 Make Z_mod_modulus_eq
R5396:5398 Coq.Init.Logic <> :type_scope:x_'='_x not
R5381:5393 compcert.lib.Integers Make Z_mod_modulus def
R5395:5395 compcert.lib.Integers <> x var
R5400:5404 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R5399:5399 compcert.lib.Integers <> x var
R5405:5411 compcert.lib.Integers Make modulus def
R5438:5450 compcert.lib.Integers Make Z_mod_modulus def
R5477:5484 Coq.ZArith.Zdiv <> Zmod_0_l thm
R5477:5484 Coq.ZArith.Zdiv <> Zmod_0_l thm
R5477:5484 Coq.ZArith.Zdiv <> Zmod_0_l thm
R5503:5516 compcert.lib.Integers Make P_mod_two_p_eq thm
R5503:5516 compcert.lib.Integers Make P_mod_two_p_eq thm
R5535:5551 compcert.lib.Integers Make P_mod_two_p_range thm
R5553:5560 compcert.lib.Integers Make wordsize def
R5566:5579 compcert.lib.Integers Make P_mod_two_p_eq thm
R5581:5588 compcert.lib.Integers Make wordsize def
R5535:5551 compcert.lib.Integers Make P_mod_two_p_range thm
R5553:5560 compcert.lib.Integers Make wordsize def
R5566:5579 compcert.lib.Integers Make P_mod_two_p_eq thm
R5581:5588 compcert.lib.Integers Make wordsize def
R5603:5609 compcert.lib.Integers Make modulus def
R5603:5609 compcert.lib.Integers Make modulus def
R5637:5648 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R5659:5665 compcert.lib.Integers Make modulus def
R5651:5654 Coq.Numbers.BinNums <> Zpos constr
R5637:5648 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R5659:5665 compcert.lib.Integers Make modulus def
R5651:5654 Coq.Numbers.BinNums <> Zpos constr
R5675:5685 compcert.lib.Integers Make modulus_pos thm
R5675:5685 compcert.lib.Integers Make modulus_pos thm
R5718:5720 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R5712:5715 Coq.Numbers.BinNums <> Zpos constr
R5721:5727 compcert.lib.Integers Make modulus def
R5718:5720 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R5712:5715 Coq.Numbers.BinNums <> Zpos constr
R5721:5727 compcert.lib.Integers Make modulus def
R5750:5760 compcert.lib.Integers Make P_mod_two_p def
R5764:5771 compcert.lib.Integers Make wordsize def
R5750:5760 compcert.lib.Integers Make P_mod_two_p def
R5764:5771 compcert.lib.Integers Make wordsize def
R5830:5832 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5840:5840 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5833:5837 Coq.ZArith.BinInt Z pos syndef
R5815:5819 Coq.ZArith.BinInt Z neg syndef
R5815:5819 Coq.ZArith.BinInt Z neg syndef
R5830:5832 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5840:5840 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5833:5837 Coq.ZArith.BinInt Z pos syndef
R5854:5856 compcert.lib.Coqlib <> zeq def
R5854:5856 compcert.lib.Coqlib <> zeq def
R5904:5904 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5886:5896 compcert.lib.Coqlib <> Zmod_unique thm
R5904:5904 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5886:5896 compcert.lib.Coqlib <> Zmod_unique thm
R5954:5964 compcert.lib.Integers Make modulus_pos thm
R5954:5964 compcert.lib.Integers Make modulus_pos thm
R6016:6018 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R6014:6014 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5996:6006 compcert.lib.Coqlib <> Zmod_unique thm
R6016:6018 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R6014:6014 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5996:6006 compcert.lib.Coqlib <> Zmod_unique thm
def 6235:6242 Make unsigned
R6248:6250 compcert.lib.Integers Make int rec
R6255:6255 Coq.Numbers.BinNums <> Z ind
R6260:6265 compcert.lib.Integers Make intval proj
R6267:6267 compcert.lib.Integers <> n var
def 6282:6287 Make signed
R6293:6295 compcert.lib.Integers Make int rec
R6300:6300 Coq.Numbers.BinNums <> Z ind
R6316:6323 compcert.lib.Integers Make unsigned def
R6325:6325 compcert.lib.Integers <> n var
R6335:6337 compcert.lib.Coqlib <> zlt def
R6341:6352 compcert.lib.Integers Make half_modulus def
R6339:6339 compcert.lib.Integers <> x var
R6367:6369 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R6366:6366 compcert.lib.Integers <> x var
R6370:6376 compcert.lib.Integers Make modulus def
R6359:6359 compcert.lib.Integers <> x var
def 6530:6533 Make repr
R6539:6539 Coq.Numbers.BinNums <> Z ind
R6544:6546 compcert.lib.Integers Make int rec
R6553:6557 compcert.lib.Integers Make mkint constr
R6578:6597 compcert.lib.Integers Make Z_mod_modulus_range' thm
R6599:6599 compcert.lib.Integers <> x var
R6560:6572 compcert.lib.Integers Make Z_mod_modulus def
R6574:6574 compcert.lib.Integers <> x var
def 6615:6618 Make zero
R6623:6626 compcert.lib.Integers Make repr def
def 6642:6644 Make one
R6650:6653 compcert.lib.Integers Make repr def
def 6669:6672 Make mone
R6677:6680 compcert.lib.Integers Make repr def
def 6699:6707 Make iwordsize
R6712:6715 compcert.lib.Integers Make repr def
R6717:6725 compcert.lib.Integers Make zwordsize def
prf 6735:6742 Make mkint_eq
R6770:6773 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6784:6786 Coq.Init.Logic <> :type_scope:x_'='_x not
R6774:6778 compcert.lib.Integers Make mkint constr
R6782:6783 compcert.lib.Integers <> Px var
R6780:6780 compcert.lib.Integers <> x var
R6787:6791 compcert.lib.Integers Make mkint constr
R6795:6796 compcert.lib.Integers <> Py var
R6793:6793 compcert.lib.Integers <> y var
R6766:6768 Coq.Init.Logic <> :type_scope:x_'='_x not
R6765:6765 compcert.lib.Integers <> x var
R6769:6769 compcert.lib.Integers <> y var
R6848:6848 Coq.Numbers.BinNums <> Z ind
R6860:6862 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R6859:6859 compcert.lib.Integers <> n var
R6863:6863 compcert.lib.Integers <> m var
R6869:6871 Coq.Init.Logic <> :type_scope:x_'='_x not
R6867:6868 compcert.lib.Integers <> P1 var
R6872:6873 compcert.lib.Integers <> P2 var
R6848:6848 Coq.Numbers.BinNums <> Z ind
R6860:6862 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R6859:6859 compcert.lib.Integers <> n var
R6863:6863 compcert.lib.Integers <> m var
R6869:6871 Coq.Init.Logic <> :type_scope:x_'='_x not
R6867:6868 compcert.lib.Integers <> P1 var
R6872:6873 compcert.lib.Integers <> P2 var
R6892:6894 Coq.ZArith.BinInt Z lt def
R6915:6931 Coq.Logic.Eqdep_dec <> eq_proofs_unicity thm
R6915:6931 Coq.Logic.Eqdep_dec <> eq_proofs_unicity thm
prf 7161:7166 Make eq_dec
R7182:7184 compcert.lib.Integers Make int rec
R7188:7188 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7194:7198 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7205:7205 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7190:7192 Coq.Init.Logic <> :type_scope:x_'='_x not
R7189:7189 compcert.lib.Integers <> x var
R7193:7193 compcert.lib.Integers <> y var
R7200:7203 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R7199:7199 compcert.lib.Integers <> x var
R7204:7204 compcert.lib.Integers <> y var
R7259:7261 compcert.lib.Coqlib <> zeq def
R7259:7261 compcert.lib.Coqlib <> zeq def
R7295:7302 compcert.lib.Integers Make mkint_eq thm
R7295:7302 compcert.lib.Integers Make mkint_eq thm
def 7441:7442 Make eq
R7450:7452 compcert.lib.Integers Make int rec
R7457:7460 Coq.Init.Datatypes <> bool ind
R7470:7472 compcert.lib.Coqlib <> zeq def
R7488:7495 compcert.lib.Integers Make unsigned def
R7497:7497 compcert.lib.Integers <> y var
R7475:7482 compcert.lib.Integers Make unsigned def
R7484:7484 compcert.lib.Integers <> x var
R7515:7519 Coq.Init.Datatypes <> false constr
R7505:7508 Coq.Init.Datatypes <> true constr
def 7533:7534 Make lt
R7542:7544 compcert.lib.Integers Make int rec
R7549:7552 Coq.Init.Datatypes <> bool ind
R7562:7564 compcert.lib.Coqlib <> zlt def
R7578:7583 compcert.lib.Integers Make signed def
R7585:7585 compcert.lib.Integers <> y var
R7567:7572 compcert.lib.Integers Make signed def
R7574:7574 compcert.lib.Integers <> x var
R7603:7607 Coq.Init.Datatypes <> false constr
R7593:7596 Coq.Init.Datatypes <> true constr
def 7621:7623 Make ltu
R7631:7633 compcert.lib.Integers Make int rec
R7638:7641 Coq.Init.Datatypes <> bool ind
R7651:7653 compcert.lib.Coqlib <> zlt def
R7669:7676 compcert.lib.Integers Make unsigned def
R7678:7678 compcert.lib.Integers <> y var
R7656:7663 compcert.lib.Integers Make unsigned def
R7665:7665 compcert.lib.Integers <> x var
R7696:7700 Coq.Init.Datatypes <> false constr
R7686:7689 Coq.Init.Datatypes <> true constr
def 7715:7717 Make neg
R7723:7725 compcert.lib.Integers Make int rec
R7730:7732 compcert.lib.Integers Make int rec
R7737:7740 compcert.lib.Integers Make repr def
R7743:7744 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R7745:7752 compcert.lib.Integers Make unsigned def
R7754:7754 compcert.lib.Integers <> x var
def 7770:7772 Make add
R7780:7782 compcert.lib.Integers Make int rec
R7787:7789 compcert.lib.Integers Make int rec
R7796:7799 compcert.lib.Integers Make repr def
R7812:7814 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R7802:7809 compcert.lib.Integers Make unsigned def
R7811:7811 compcert.lib.Integers <> x var
R7815:7822 compcert.lib.Integers Make unsigned def
R7824:7824 compcert.lib.Integers <> y var
def 7839:7841 Make sub
R7849:7851 compcert.lib.Integers Make int rec
R7856:7858 compcert.lib.Integers Make int rec
R7865:7868 compcert.lib.Integers Make repr def
R7881:7883 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R7871:7878 compcert.lib.Integers Make unsigned def
R7880:7880 compcert.lib.Integers <> x var
R7884:7891 compcert.lib.Integers Make unsigned def
R7893:7893 compcert.lib.Integers <> y var
def 7908:7910 Make mul
R7918:7920 compcert.lib.Integers Make int rec
R7925:7927 compcert.lib.Integers Make int rec
R7934:7937 compcert.lib.Integers Make repr def
R7950:7952 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R7940:7947 compcert.lib.Integers Make unsigned def
R7949:7949 compcert.lib.Integers <> x var
R7953:7960 compcert.lib.Integers Make unsigned def
R7962:7962 compcert.lib.Integers <> y var
def 7978:7981 Make divs
R7989:7991 compcert.lib.Integers Make int rec
R7996:7998 compcert.lib.Integers Make int rec
R8005:8008 compcert.lib.Integers Make repr def
R8011:8016 Coq.ZArith.BinInt Z quot def
R8030:8035 compcert.lib.Integers Make signed def
R8037:8037 compcert.lib.Integers <> y var
R8019:8024 compcert.lib.Integers Make signed def
R8026:8026 compcert.lib.Integers <> x var
def 8053:8056 Make mods
R8064:8066 compcert.lib.Integers Make int rec
R8071:8073 compcert.lib.Integers Make int rec
R8080:8083 compcert.lib.Integers Make repr def
R8086:8090 Coq.ZArith.BinInt Z rem def
R8104:8109 compcert.lib.Integers Make signed def
R8111:8111 compcert.lib.Integers <> y var
R8093:8098 compcert.lib.Integers Make signed def
R8100:8100 compcert.lib.Integers <> x var
def 8128:8131 Make divu
R8139:8141 compcert.lib.Integers Make int rec
R8146:8148 compcert.lib.Integers Make int rec
R8155:8158 compcert.lib.Integers Make repr def
R8171:8173 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R8161:8168 compcert.lib.Integers Make unsigned def
R8170:8170 compcert.lib.Integers <> x var
R8174:8181 compcert.lib.Integers Make unsigned def
R8183:8183 compcert.lib.Integers <> y var
def 8198:8201 Make modu
R8209:8211 compcert.lib.Integers Make int rec
R8216:8218 compcert.lib.Integers Make int rec
R8225:8228 compcert.lib.Integers Make repr def
R8231:8231 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R8242:8248 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R8259:8259 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R8232:8239 compcert.lib.Integers Make unsigned def
R8241:8241 compcert.lib.Integers <> x var
R8249:8256 compcert.lib.Integers Make unsigned def
R8258:8258 compcert.lib.Integers <> y var
def 8311:8313 Make and
R8321:8323 compcert.lib.Integers Make int rec
R8327:8329 compcert.lib.Integers Make int rec
R8334:8337 compcert.lib.Integers Make repr def
R8340:8345 Coq.ZArith.BinInt Z land def
R8361:8368 compcert.lib.Integers Make unsigned def
R8370:8370 compcert.lib.Integers <> y var
R8348:8355 compcert.lib.Integers Make unsigned def
R8357:8357 compcert.lib.Integers <> x var
def 8386:8387 Make or
R8395:8397 compcert.lib.Integers Make int rec
R8401:8403 compcert.lib.Integers Make int rec
R8408:8411 compcert.lib.Integers Make repr def
R8414:8418 Coq.ZArith.BinInt Z lor def
R8434:8441 compcert.lib.Integers Make unsigned def
R8443:8443 compcert.lib.Integers <> y var
R8421:8428 compcert.lib.Integers Make unsigned def
R8430:8430 compcert.lib.Integers <> x var
def 8459:8461 Make xor
R8469:8471 compcert.lib.Integers Make int rec
R8476:8478 compcert.lib.Integers Make int rec
R8483:8486 compcert.lib.Integers Make repr def
R8489:8494 Coq.ZArith.BinInt Z lxor def
R8510:8517 compcert.lib.Integers Make unsigned def
R8519:8519 compcert.lib.Integers <> y var
R8497:8504 compcert.lib.Integers Make unsigned def
R8506:8506 compcert.lib.Integers <> x var
def 8536:8538 Make not
R8544:8546 compcert.lib.Integers Make int rec
R8551:8553 compcert.lib.Integers Make int rec
R8558:8560 compcert.lib.Integers Make xor def
R8564:8567 compcert.lib.Integers Make mone def
R8562:8562 compcert.lib.Integers <> x var
def 8610:8612 Make shl
R8620:8622 compcert.lib.Integers Make int rec
R8626:8628 compcert.lib.Integers Make int rec
R8633:8636 compcert.lib.Integers Make repr def
R8639:8646 Coq.ZArith.BinInt Z shiftl def
R8662:8669 compcert.lib.Integers Make unsigned def
R8671:8671 compcert.lib.Integers <> y var
R8649:8656 compcert.lib.Integers Make unsigned def
R8658:8658 compcert.lib.Integers <> x var
def 8687:8690 Make shru
R8698:8700 compcert.lib.Integers Make int rec
R8704:8706 compcert.lib.Integers Make int rec
R8711:8714 compcert.lib.Integers Make repr def
R8717:8724 Coq.ZArith.BinInt Z shiftr def
R8740:8747 compcert.lib.Integers Make unsigned def
R8749:8749 compcert.lib.Integers <> y var
R8727:8734 compcert.lib.Integers Make unsigned def
R8736:8736 compcert.lib.Integers <> x var
def 8765:8767 Make shr
R8775:8777 compcert.lib.Integers Make int rec
R8781:8783 compcert.lib.Integers Make int rec
R8788:8791 compcert.lib.Integers Make repr def
R8794:8801 Coq.ZArith.BinInt Z shiftr def
R8815:8822 compcert.lib.Integers Make unsigned def
R8824:8824 compcert.lib.Integers <> y var
R8804:8809 compcert.lib.Integers Make signed def
R8811:8811 compcert.lib.Integers <> x var
def 8841:8843 Make rol
R8851:8853 compcert.lib.Integers Make int rec
R8858:8860 compcert.lib.Integers Make int rec
R8876:8876 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R8887:8892 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R8877:8884 compcert.lib.Integers Make unsigned def
R8886:8886 compcert.lib.Integers <> y var
R8893:8901 compcert.lib.Integers Make zwordsize def
R8908:8911 compcert.lib.Integers Make repr def
R8914:8918 Coq.ZArith.BinInt Z lor def
R8947:8954 Coq.ZArith.BinInt Z shiftr def
R8979:8981 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R8970:8978 compcert.lib.Integers Make zwordsize def
R8982:8982 compcert.lib.Integers <> n var
R8957:8964 compcert.lib.Integers Make unsigned def
R8966:8966 compcert.lib.Integers <> x var
R8921:8928 Coq.ZArith.BinInt Z shiftl def
R8943:8943 compcert.lib.Integers <> n var
R8931:8938 compcert.lib.Integers Make unsigned def
R8940:8940 compcert.lib.Integers <> x var
def 8999:9001 Make ror
R9009:9011 compcert.lib.Integers Make int rec
R9016:9018 compcert.lib.Integers Make int rec
R9034:9034 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R9045:9050 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R9035:9042 compcert.lib.Integers Make unsigned def
R9044:9044 compcert.lib.Integers <> y var
R9051:9059 compcert.lib.Integers Make zwordsize def
R9066:9069 compcert.lib.Integers Make repr def
R9072:9076 Coq.ZArith.BinInt Z lor def
R9105:9112 Coq.ZArith.BinInt Z shiftl def
R9137:9139 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R9128:9136 compcert.lib.Integers Make zwordsize def
R9140:9140 compcert.lib.Integers <> n var
R9115:9122 compcert.lib.Integers Make unsigned def
R9124:9124 compcert.lib.Integers <> x var
R9079:9086 Coq.ZArith.BinInt Z shiftr def
R9101:9101 compcert.lib.Integers <> n var
R9089:9096 compcert.lib.Integers Make unsigned def
R9098:9098 compcert.lib.Integers <> x var
def 9158:9161 Make rolm
R9171:9173 compcert.lib.Integers Make int rec
R9177:9179 compcert.lib.Integers Make int rec
R9184:9186 compcert.lib.Integers Make and def
R9198:9198 compcert.lib.Integers <> m var
R9189:9191 compcert.lib.Integers Make rol def
R9195:9195 compcert.lib.Integers <> a var
R9193:9193 compcert.lib.Integers <> x var
def 9339:9342 Make shrx
R9350:9352 compcert.lib.Integers Make int rec
R9356:9358 compcert.lib.Integers Make int rec
R9365:9368 compcert.lib.Integers Make divs def
R9373:9375 compcert.lib.Integers Make shl def
R9381:9381 compcert.lib.Integers <> y var
R9377:9379 compcert.lib.Integers Make one def
R9370:9370 compcert.lib.Integers <> x var
def 9433:9437 Make mulhu
R9445:9447 compcert.lib.Integers Make int rec
R9451:9453 compcert.lib.Integers Make int rec
R9458:9461 compcert.lib.Integers Make repr def
R9464:9464 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R9488:9491 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R9475:9477 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R9465:9472 compcert.lib.Integers Make unsigned def
R9474:9474 compcert.lib.Integers <> x var
R9478:9485 compcert.lib.Integers Make unsigned def
R9487:9487 compcert.lib.Integers <> y var
R9492:9498 compcert.lib.Integers Make modulus def
def 9513:9517 Make mulhs
R9525:9527 compcert.lib.Integers Make int rec
R9531:9533 compcert.lib.Integers Make int rec
R9538:9541 compcert.lib.Integers Make repr def
R9544:9544 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R9564:9567 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R9553:9555 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R9545:9550 compcert.lib.Integers Make signed def
R9552:9552 compcert.lib.Integers <> x var
R9556:9561 compcert.lib.Integers Make signed def
R9563:9563 compcert.lib.Integers <> y var
R9568:9574 compcert.lib.Integers Make modulus def
def 9614:9621 Make negative
R9627:9629 compcert.lib.Integers Make int rec
R9633:9635 compcert.lib.Integers Make int rec
R9645:9646 compcert.lib.Integers Make lt def
R9650:9653 compcert.lib.Integers Make zero def
R9648:9648 compcert.lib.Integers <> x var
R9669:9672 compcert.lib.Integers Make zero def
R9660:9662 compcert.lib.Integers Make one def
def 9687:9695 Make add_carry
R9707:9709 compcert.lib.Integers Make int rec
R9713:9715 compcert.lib.Integers Make int rec
R9725:9727 compcert.lib.Coqlib <> zlt def
R9770:9776 compcert.lib.Integers Make modulus def
R9753:9755 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9740:9742 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9730:9737 compcert.lib.Integers Make unsigned def
R9739:9739 compcert.lib.Integers <> x var
R9743:9750 compcert.lib.Integers Make unsigned def
R9752:9752 compcert.lib.Integers <> y var
R9756:9763 compcert.lib.Integers Make unsigned def
R9765:9767 compcert.lib.Integers <> cin var
R9793:9795 compcert.lib.Integers Make one def
R9783:9786 compcert.lib.Integers Make zero def
def 9810:9821 Make add_overflow
R9833:9835 compcert.lib.Integers Make int rec
R9839:9841 compcert.lib.Integers Make int rec
R9876:9878 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9865:9867 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9857:9862 compcert.lib.Integers Make signed def
R9864:9864 compcert.lib.Integers <> x var
R9868:9873 compcert.lib.Integers Make signed def
R9875:9875 compcert.lib.Integers <> y var
R9879:9884 compcert.lib.Integers Make signed def
R9886:9888 compcert.lib.Integers <> cin var
R9914:9917 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R9898:9900 compcert.lib.Coqlib <> zle def
R9913:9913 compcert.lib.Integers <> s var
R9902:9911 compcert.lib.Integers Make min_signed def
R9918:9920 compcert.lib.Coqlib <> zle def
R9924:9933 compcert.lib.Integers Make max_signed def
R9922:9922 compcert.lib.Integers <> s var
R9950:9952 compcert.lib.Integers Make one def
R9940:9943 compcert.lib.Integers Make zero def
def 9967:9976 Make sub_borrow
R9988:9990 compcert.lib.Integers Make int rec
R9994:9996 compcert.lib.Integers Make int rec
R10006:10008 compcert.lib.Coqlib <> zlt def
R10034:10036 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R10021:10023 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R10011:10018 compcert.lib.Integers Make unsigned def
R10020:10020 compcert.lib.Integers <> x var
R10024:10031 compcert.lib.Integers Make unsigned def
R10033:10033 compcert.lib.Integers <> y var
R10037:10044 compcert.lib.Integers Make unsigned def
R10046:10048 compcert.lib.Integers <> bin var
R10067:10070 compcert.lib.Integers Make zero def
R10058:10060 compcert.lib.Integers Make one def
def 10085:10096 Make sub_overflow
R10108:10110 compcert.lib.Integers Make int rec
R10114:10116 compcert.lib.Integers Make int rec
R10151:10153 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R10140:10142 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R10132:10137 compcert.lib.Integers Make signed def
R10139:10139 compcert.lib.Integers <> x var
R10143:10148 compcert.lib.Integers Make signed def
R10150:10150 compcert.lib.Integers <> y var
R10154:10159 compcert.lib.Integers Make signed def
R10161:10163 compcert.lib.Integers <> bin var
R10189:10192 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R10173:10175 compcert.lib.Coqlib <> zle def
R10188:10188 compcert.lib.Integers <> s var
R10177:10186 compcert.lib.Integers Make min_signed def
R10193:10195 compcert.lib.Coqlib <> zle def
R10199:10208 compcert.lib.Integers Make max_signed def
R10197:10197 compcert.lib.Integers <> s var
R10225:10227 compcert.lib.Integers Make one def
R10215:10218 compcert.lib.Integers Make zero def
def 10330:10338 Make shr_carry
R10346:10348 compcert.lib.Integers Make int rec
R10353:10355 compcert.lib.Integers Make int rec
R10374:10377 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R10365:10366 compcert.lib.Integers Make lt def
R10370:10373 compcert.lib.Integers Make zero def
R10368:10368 compcert.lib.Integers <> x var
R10378:10381 Coq.Init.Datatypes <> negb def
R10384:10385 compcert.lib.Integers Make eq def
R10417:10420 compcert.lib.Integers Make zero def
R10388:10390 compcert.lib.Integers Make and def
R10395:10397 compcert.lib.Integers Make sub def
R10411:10413 compcert.lib.Integers Make one def
R10400:10402 compcert.lib.Integers Make shl def
R10408:10408 compcert.lib.Integers <> y var
R10404:10406 compcert.lib.Integers Make one def
R10392:10392 compcert.lib.Integers <> x var
R10439:10442 compcert.lib.Integers Make zero def
R10430:10432 compcert.lib.Integers Make one def
def 10490:10497 Make Zshiftin
R10503:10506 Coq.Init.Datatypes <> bool ind
R10513:10513 Coq.Numbers.BinNums <> Z ind
R10518:10518 Coq.Numbers.BinNums <> Z ind
R10528:10528 compcert.lib.Integers <> b var
R10556:10563 Coq.ZArith.BinInt Z double def
R10565:10565 compcert.lib.Integers <> x var
R10535:10547 Coq.ZArith.BinInt Z succ_double def
R10549:10549 compcert.lib.Integers <> x var
def 11107:11115 Make Zzero_ext
R11121:11121 Coq.Numbers.BinNums <> Z ind
R11128:11128 Coq.Numbers.BinNums <> Z ind
R11133:11133 Coq.Numbers.BinNums <> Z ind
R11140:11145 Coq.ZArith.BinInt Z iter def
R11225:11225 compcert.lib.Integers <> x var
R11167:11174 compcert.lib.Integers Make Zshiftin def
R11187:11189 compcert.lib.Integers <> rec var
R11192:11197 Coq.ZArith.BinInt Z div2 def
R11199:11199 compcert.lib.Integers <> x var
R11177:11181 Coq.ZArith.BinInt Z odd def
R11183:11183 compcert.lib.Integers <> x var
R11147:11147 compcert.lib.Integers <> n var
def 11240:11248 Make Zsign_ext
R11254:11254 Coq.Numbers.BinNums <> Z ind
R11261:11261 Coq.Numbers.BinNums <> Z ind
R11266:11266 Coq.Numbers.BinNums <> Z ind
R11273:11278 Coq.ZArith.BinInt Z iter def
R11391:11391 compcert.lib.Integers <> x var
R11363:11367 Coq.ZArith.BinInt Z odd def
R11369:11369 compcert.lib.Integers <> x var
R11309:11316 compcert.lib.Integers Make Zshiftin def
R11329:11331 compcert.lib.Integers <> rec var
R11334:11339 Coq.ZArith.BinInt Z div2 def
R11341:11341 compcert.lib.Integers <> x var
R11319:11323 Coq.ZArith.BinInt Z odd def
R11325:11325 compcert.lib.Integers <> x var
R11281:11286 Coq.ZArith.BinInt Z pred def
R11288:11288 compcert.lib.Integers <> n var
def 11406:11413 Make zero_ext
R11419:11419 Coq.Numbers.BinNums <> Z ind
R11426:11428 compcert.lib.Integers Make int rec
R11433:11435 compcert.lib.Integers Make int rec
R11440:11443 compcert.lib.Integers Make repr def
R11446:11454 compcert.lib.Integers Make Zzero_ext def
R11459:11466 compcert.lib.Integers Make unsigned def
R11468:11468 compcert.lib.Integers <> x var
R11456:11456 compcert.lib.Integers <> n var
def 11485:11492 Make sign_ext
R11498:11498 Coq.Numbers.BinNums <> Z ind
R11505:11507 compcert.lib.Integers Make int rec
R11512:11514 compcert.lib.Integers Make int rec
R11519:11522 compcert.lib.Integers Make repr def
R11525:11533 compcert.lib.Integers Make Zsign_ext def
R11538:11545 compcert.lib.Integers Make unsigned def
R11547:11547 compcert.lib.Integers <> x var
R11535:11535 compcert.lib.Integers <> n var
def 11623:11632 Make Z_one_bits
R11638:11640 Coq.Init.Datatypes <> nat ind
R11647:11647 Coq.Numbers.BinNums <> Z ind
R11654:11654 Coq.Numbers.BinNums <> Z ind
R11669:11672 Coq.Init.Datatypes <> list ind
R11674:11674 Coq.Numbers.BinNums <> Z ind
R11687:11687 compcert.lib.Integers <> n var
R11698:11698 Coq.Init.Datatypes <> O constr
R11703:11705 Coq.Init.Datatypes <> nil constr
R11711:11711 Coq.Init.Datatypes <> S constr
R11727:11731 Coq.ZArith.BinInt Z odd def
R11733:11733 compcert.lib.Integers <> x var
R11792:11801 compcert.lib.Integers <> Z_one_bits def
R11818:11818 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R11817:11817 compcert.lib.Integers <> i var
R11806:11811 Coq.ZArith.BinInt Z div2 def
R11813:11813 compcert.lib.Integers <> x var
R11747:11750 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11746:11746 compcert.lib.Integers <> i var
R11751:11760 compcert.lib.Integers <> Z_one_bits def
R11777:11777 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R11776:11776 compcert.lib.Integers <> i var
R11765:11770 Coq.ZArith.BinInt Z div2 def
R11772:11772 compcert.lib.Integers <> x var
def 11841:11848 Make one_bits
R11854:11856 compcert.lib.Integers Make int rec
R11861:11864 Coq.Init.Datatypes <> list ind
R11866:11868 compcert.lib.Integers Make int rec
R11875:11882 Coq.Lists.List <> map def
R11890:11899 compcert.lib.Integers Make Z_one_bits def
R11911:11918 compcert.lib.Integers Make unsigned def
R11920:11920 compcert.lib.Integers <> x var
R11901:11908 compcert.lib.Integers Make wordsize def
R11884:11887 compcert.lib.Integers Make repr def
def 11977:11985 Make is_power2
R11991:11993 compcert.lib.Integers Make int rec
R11998:12003 Coq.Init.Datatypes <> option ind
R12005:12007 compcert.lib.Integers Make int rec
R12020:12029 compcert.lib.Integers Make Z_one_bits def
R12041:12048 compcert.lib.Integers Make unsigned def
R12050:12050 compcert.lib.Integers <> x var
R12031:12038 compcert.lib.Integers Make wordsize def
R12065:12068 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12069:12071 Coq.Init.Datatypes <> nil constr
R12076:12079 Coq.Init.Datatypes <> Some constr
R12082:12085 compcert.lib.Integers Make repr def
R12099:12102 Coq.Init.Datatypes <> None constr
def 12144:12146 Make cmp
R12152:12161 compcert.lib.Integers Make comparison ind
R12170:12172 compcert.lib.Integers Make int rec
R12177:12180 Coq.Init.Datatypes <> bool ind
R12193:12193 compcert.lib.Integers <> c var
R12204:12206 compcert.lib.Integers Make Ceq constr
R12211:12212 compcert.lib.Integers Make eq def
R12216:12216 compcert.lib.Integers <> y var
R12214:12214 compcert.lib.Integers <> x var
R12222:12224 compcert.lib.Integers Make Cne constr
R12229:12232 Coq.Init.Datatypes <> negb def
R12235:12236 compcert.lib.Integers Make eq def
R12240:12240 compcert.lib.Integers <> y var
R12238:12238 compcert.lib.Integers <> x var
R12247:12249 compcert.lib.Integers Make Clt constr
R12254:12255 compcert.lib.Integers Make lt def
R12259:12259 compcert.lib.Integers <> y var
R12257:12257 compcert.lib.Integers <> x var
R12265:12267 compcert.lib.Integers Make Cle constr
R12272:12275 Coq.Init.Datatypes <> negb def
R12278:12279 compcert.lib.Integers Make lt def
R12283:12283 compcert.lib.Integers <> x var
R12281:12281 compcert.lib.Integers <> y var
R12290:12292 compcert.lib.Integers Make Cgt constr
R12297:12298 compcert.lib.Integers Make lt def
R12302:12302 compcert.lib.Integers <> x var
R12300:12300 compcert.lib.Integers <> y var
R12308:12310 compcert.lib.Integers Make Cge constr
R12315:12318 Coq.Init.Datatypes <> negb def
R12321:12322 compcert.lib.Integers Make lt def
R12326:12326 compcert.lib.Integers <> y var
R12324:12324 compcert.lib.Integers <> x var
def 12348:12351 Make cmpu
R12357:12366 compcert.lib.Integers Make comparison ind
R12375:12377 compcert.lib.Integers Make int rec
R12382:12385 Coq.Init.Datatypes <> bool ind
R12398:12398 compcert.lib.Integers <> c var
R12409:12411 compcert.lib.Integers Make Ceq constr
R12416:12417 compcert.lib.Integers Make eq def
R12421:12421 compcert.lib.Integers <> y var
R12419:12419 compcert.lib.Integers <> x var
R12427:12429 compcert.lib.Integers Make Cne constr
R12434:12437 Coq.Init.Datatypes <> negb def
R12440:12441 compcert.lib.Integers Make eq def
R12445:12445 compcert.lib.Integers <> y var
R12443:12443 compcert.lib.Integers <> x var
R12452:12454 compcert.lib.Integers Make Clt constr
R12459:12461 compcert.lib.Integers Make ltu def
R12465:12465 compcert.lib.Integers <> y var
R12463:12463 compcert.lib.Integers <> x var
R12471:12473 compcert.lib.Integers Make Cle constr
R12478:12481 Coq.Init.Datatypes <> negb def
R12484:12486 compcert.lib.Integers Make ltu def
R12490:12490 compcert.lib.Integers <> x var
R12488:12488 compcert.lib.Integers <> y var
R12497:12499 compcert.lib.Integers Make Cgt constr
R12504:12506 compcert.lib.Integers Make ltu def
R12510:12510 compcert.lib.Integers <> x var
R12508:12508 compcert.lib.Integers <> y var
R12516:12518 compcert.lib.Integers Make Cge constr
R12523:12526 Coq.Init.Datatypes <> negb def
R12529:12531 compcert.lib.Integers Make ltu def
R12535:12535 compcert.lib.Integers <> y var
R12533:12533 compcert.lib.Integers <> x var
def 12557:12564 Make is_false
R12570:12572 compcert.lib.Integers Make int rec
R12586:12588 Coq.Init.Logic <> :type_scope:x_'='_x not
R12585:12585 compcert.lib.Integers <> x var
R12589:12592 compcert.lib.Integers Make zero def
def 12606:12612 Make is_true
R12619:12621 compcert.lib.Integers Make int rec
R12635:12638 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R12634:12634 compcert.lib.Integers <> x var
R12639:12642 compcert.lib.Integers Make zero def
def 12656:12662 Make notbool
R12669:12671 compcert.lib.Integers Make int rec
R12676:12678 compcert.lib.Integers Make int rec
R12687:12688 compcert.lib.Integers Make eq def
R12692:12695 compcert.lib.Integers Make zero def
R12690:12690 compcert.lib.Integers <> x var
R12711:12714 compcert.lib.Integers Make zero def
R12702:12704 compcert.lib.Integers Make one def
prf 12838:12855 Make half_modulus_power
R12872:12874 Coq.Init.Logic <> :type_scope:x_'='_x not
R12860:12871 compcert.lib.Integers Make half_modulus def
R12875:12879 Coq.ZArith.Zpower <> two_p def
R12891:12893 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R12882:12890 compcert.lib.Integers Make zwordsize def
R12914:12925 compcert.lib.Integers Make half_modulus def
R12936:12948 compcert.lib.Integers Make modulus_power thm
R12936:12948 compcert.lib.Integers Make modulus_power thm
R12936:12948 compcert.lib.Integers Make modulus_power thm
R12974:12976 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R12965:12973 compcert.lib.Integers Make zwordsize def
R12974:12976 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R12965:12973 compcert.lib.Integers Make zwordsize def
R12992:13000 compcert.lib.Integers Make zwordsize def
R13009:13013 Coq.ZArith.BinInt <> Zsucc syndef
R13009:13013 Coq.ZArith.BinInt <> Zsucc syndef
R12992:13000 compcert.lib.Integers Make zwordsize def
R13031:13037 Coq.ZArith.Zpower <> two_p_S thm
R13031:13037 Coq.ZArith.Zpower <> two_p_S thm
R13031:13037 Coq.ZArith.Zpower <> two_p_S thm
R13031:13037 Coq.ZArith.Zpower <> two_p_S thm
R13048:13057 Coq.ZArith.BinInt <> Zmult_comm syndef
R13048:13057 Coq.ZArith.BinInt <> Zmult_comm syndef
R13048:13057 Coq.ZArith.BinInt <> Zmult_comm syndef
R13066:13075 Coq.ZArith.Zdiv <> Z_div_mult thm
R13066:13075 Coq.ZArith.Zdiv <> Z_div_mult thm
R13110:13121 compcert.lib.Integers Make wordsize_pos thm
R13110:13121 compcert.lib.Integers Make wordsize_pos thm
prf 13165:13184 Make half_modulus_modulus
R13194:13196 Coq.Init.Logic <> :type_scope:x_'='_x not
R13187:13193 compcert.lib.Integers Make modulus def
R13198:13200 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R13201:13212 compcert.lib.Integers Make half_modulus def
R13232:13249 compcert.lib.Integers Make half_modulus_power thm
R13232:13249 compcert.lib.Integers Make half_modulus_power thm
R13232:13249 compcert.lib.Integers Make half_modulus_power thm
R13260:13272 compcert.lib.Integers Make modulus_power thm
R13260:13272 compcert.lib.Integers Make modulus_power thm
R13260:13272 compcert.lib.Integers Make modulus_power thm
R13288:13294 Coq.ZArith.Zpower <> two_p_S thm
R13288:13294 Coq.ZArith.Zpower <> two_p_S thm
R13288:13294 Coq.ZArith.Zpower <> two_p_S thm
R13288:13294 Coq.ZArith.Zpower <> two_p_S thm
R13303:13309 Coq.Init.Logic <> f_equal thm
R13303:13309 Coq.Init.Logic <> f_equal thm
R13332:13343 compcert.lib.Integers Make wordsize_pos thm
R13332:13343 compcert.lib.Integers Make wordsize_pos thm
prf 13522:13537 Make half_modulus_pos
R13552:13554 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R13540:13551 compcert.lib.Integers Make half_modulus def
R13575:13592 compcert.lib.Integers Make half_modulus_power thm
R13575:13592 compcert.lib.Integers Make half_modulus_power thm
R13575:13592 compcert.lib.Integers Make half_modulus_power thm
R13601:13613 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R13601:13613 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R13627:13638 compcert.lib.Integers Make wordsize_pos thm
R13627:13638 compcert.lib.Integers Make wordsize_pos thm
prf 13661:13674 Make min_signed_neg
R13687:13689 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R13677:13686 compcert.lib.Integers Make min_signed def
R13709:13718 compcert.lib.Integers Make min_signed def
R13732:13747 compcert.lib.Integers Make half_modulus_pos thm
R13732:13747 compcert.lib.Integers Make half_modulus_pos thm
prf 13770:13783 Make max_signed_pos
R13796:13799 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R13786:13795 compcert.lib.Integers Make max_signed def
R13819:13828 compcert.lib.Integers Make max_signed def
R13842:13857 compcert.lib.Integers Make half_modulus_pos thm
R13842:13857 compcert.lib.Integers Make half_modulus_pos thm
prf 13880:13900 Make wordsize_max_unsigned
R13912:13915 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R13903:13911 compcert.lib.Integers Make zwordsize def
R13916:13927 compcert.lib.Integers Make max_unsigned def
R13956:13958 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R13947:13955 compcert.lib.Integers Make zwordsize def
R13959:13965 compcert.lib.Integers Make modulus def
R13956:13958 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R13947:13955 compcert.lib.Integers Make zwordsize def
R13959:13965 compcert.lib.Integers Make modulus def
R13981:13993 compcert.lib.Integers Make modulus_power thm
R13981:13993 compcert.lib.Integers Make modulus_power thm
R13981:13993 compcert.lib.Integers Make modulus_power thm
R14002:14013 compcert.lib.Coqlib <> two_p_strict thm
R14002:14013 compcert.lib.Coqlib <> two_p_strict thm
R14031:14042 compcert.lib.Integers Make wordsize_pos thm
R14031:14042 compcert.lib.Integers Make wordsize_pos thm
R14061:14072 compcert.lib.Integers Make max_unsigned def
prf 14095:14119 Make two_wordsize_max_unsigned
R14139:14142 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R14135:14137 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R14123:14125 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R14126:14134 compcert.lib.Integers Make zwordsize def
R14143:14154 compcert.lib.Integers Make max_unsigned def
R14191:14193 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R14187:14189 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R14175:14177 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R14178:14186 compcert.lib.Integers Make zwordsize def
R14194:14200 compcert.lib.Integers Make modulus def
R14191:14193 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R14187:14189 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R14175:14177 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R14178:14186 compcert.lib.Integers Make zwordsize def
R14194:14200 compcert.lib.Integers Make modulus def
R14216:14228 compcert.lib.Integers Make modulus_power thm
R14216:14228 compcert.lib.Integers Make modulus_power thm
R14216:14228 compcert.lib.Integers Make modulus_power thm
R14237:14250 compcert.lib.Coqlib <> two_p_strict_2 thm
R14237:14250 compcert.lib.Coqlib <> two_p_strict_2 thm
R14264:14275 compcert.lib.Integers Make wordsize_pos thm
R14264:14275 compcert.lib.Integers Make wordsize_pos thm
R14294:14305 compcert.lib.Integers Make max_unsigned def
prf 14328:14346 Make max_signed_unsigned
R14359:14361 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R14349:14358 compcert.lib.Integers Make max_signed def
R14362:14373 compcert.lib.Integers Make max_unsigned def
R14392:14401 compcert.lib.Integers Make max_signed def
R14404:14415 compcert.lib.Integers Make max_unsigned def
R14426:14445 compcert.lib.Integers Make half_modulus_modulus thm
R14426:14445 compcert.lib.Integers Make half_modulus_modulus thm
R14426:14445 compcert.lib.Integers Make half_modulus_modulus thm
R14461:14476 compcert.lib.Integers Make half_modulus_pos thm
R14461:14476 compcert.lib.Integers Make half_modulus_pos thm
prf 14498:14513 Make unsigned_repr_eq
R14545:14547 Coq.Init.Logic <> :type_scope:x_'='_x not
R14528:14535 compcert.lib.Integers Make unsigned def
R14538:14541 compcert.lib.Integers Make repr def
R14543:14543 compcert.lib.Integers <> x var
R14548:14551 Coq.ZArith.Zdiv <> Zmod syndef
R14555:14561 compcert.lib.Integers Make modulus def
R14553:14553 compcert.lib.Integers <> x var
R14594:14609 compcert.lib.Integers Make Z_mod_modulus_eq thm
R14594:14609 compcert.lib.Integers Make Z_mod_modulus_eq thm
prf 14624:14637 Make signed_repr_eq
R14667:14669 Coq.Init.Logic <> :type_scope:x_'='_x not
R14652:14657 compcert.lib.Integers Make signed def
R14660:14663 compcert.lib.Integers Make repr def
R14665:14665 compcert.lib.Integers <> x var
R14673:14675 compcert.lib.Coqlib <> zlt def
R14694:14705 compcert.lib.Integers Make half_modulus def
R14678:14681 Coq.ZArith.Zdiv <> Zmod syndef
R14685:14691 compcert.lib.Integers Make modulus def
R14683:14683 compcert.lib.Integers <> x var
R14746:14748 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R14732:14735 Coq.ZArith.Zdiv <> Zmod syndef
R14739:14745 compcert.lib.Integers Make modulus def
R14737:14737 compcert.lib.Integers <> x var
R14749:14755 compcert.lib.Integers Make modulus def
R14712:14715 Coq.ZArith.Zdiv <> Zmod syndef
R14719:14725 compcert.lib.Integers Make modulus def
R14717:14717 compcert.lib.Integers <> x var
R14782:14787 compcert.lib.Integers Make signed def
R14798:14813 compcert.lib.Integers Make unsigned_repr_eq thm
R14798:14813 compcert.lib.Integers Make unsigned_repr_eq thm
R14798:14813 compcert.lib.Integers Make unsigned_repr_eq thm
sec 14960:14968 Make EQ_MODULO
var 14981:14985 Make.EQ_MODULO modul
R14988:14988 Coq.Numbers.BinNums <> Z ind
var 15002:15010 Make.EQ_MODULO modul_pos
R15018:15020 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R15013:15017 compcert.lib.Integers <> Make.EQ_MODULO.modul var
def 15036:15040 Make eqmod
R15048:15048 Coq.Numbers.BinNums <> Z ind
R15061:15067 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15069:15070 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15072:15074 Coq.Init.Logic <> :type_scope:x_'='_x not
R15071:15071 compcert.lib.Integers <> x var
R15084:15086 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15076:15078 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R15075:15075 compcert.lib.Integers <> k var
R15079:15083 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R15087:15087 compcert.lib.Integers <> y var
prf 15097:15106 Make eqmod_refl
R15119:15123 compcert.lib.Integers Make eqmod def
R15127:15127 compcert.lib.Integers <> x var
R15125:15125 compcert.lib.Integers <> x var
prf 15181:15191 Make eqmod_refl2
R15211:15214 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15215:15219 compcert.lib.Integers Make eqmod def
R15223:15223 compcert.lib.Integers <> y var
R15221:15221 compcert.lib.Integers <> x var
R15207:15209 Coq.Init.Logic <> :type_scope:x_'='_x not
R15206:15206 compcert.lib.Integers <> x var
R15210:15210 compcert.lib.Integers <> y var
R15258:15267 compcert.lib.Integers Make eqmod_refl thm
R15258:15267 compcert.lib.Integers Make eqmod_refl thm
prf 15282:15290 Make eqmod_sym
R15314:15317 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15318:15322 compcert.lib.Integers Make eqmod def
R15326:15326 compcert.lib.Integers <> x var
R15324:15324 compcert.lib.Integers <> y var
R15305:15309 compcert.lib.Integers Make eqmod def
R15313:15313 compcert.lib.Integers <> y var
R15311:15311 compcert.lib.Integers <> x var
R15370:15370 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R15370:15370 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
prf 15402:15412 Make eqmod_trans
R15438:15441 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15451:15454 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15455:15459 compcert.lib.Integers Make eqmod def
R15463:15463 compcert.lib.Integers <> z var
R15461:15461 compcert.lib.Integers <> x var
R15442:15446 compcert.lib.Integers Make eqmod def
R15450:15450 compcert.lib.Integers <> z var
R15448:15448 compcert.lib.Integers <> y var
R15429:15433 compcert.lib.Integers Make eqmod def
R15437:15437 compcert.lib.Integers <> y var
R15435:15435 compcert.lib.Integers <> x var
R15524:15526 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15524:15526 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
prf 15568:15581 Make eqmod_small_eq
R15607:15610 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15625:15628 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15643:15646 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15648:15650 Coq.Init.Logic <> :type_scope:x_'='_x not
R15647:15647 compcert.lib.Integers <> x var
R15651:15651 compcert.lib.Integers <> y var
R15630:15633 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R15635:15637 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R15634:15634 compcert.lib.Integers <> y var
R15634:15634 compcert.lib.Integers <> y var
R15638:15642 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R15612:15615 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R15617:15619 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R15616:15616 compcert.lib.Integers <> x var
R15616:15616 compcert.lib.Integers <> x var
R15620:15624 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R15598:15602 compcert.lib.Integers Make eqmod def
R15606:15606 compcert.lib.Integers <> y var
R15604:15604 compcert.lib.Integers <> x var
R15702:15712 compcert.lib.Coqlib <> Zdiv_unique thm
R15702:15712 compcert.lib.Coqlib <> Zdiv_unique thm
R15748:15757 compcert.lib.Coqlib <> Zdiv_small thm
R15761:15765 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R15748:15757 compcert.lib.Coqlib <> Zdiv_small thm
R15761:15765 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R15748:15757 compcert.lib.Coqlib <> Zdiv_small thm
R15761:15765 compcert.lib.Integers <> Make.EQ_MODULO.modul var
prf 15805:15816 Make eqmod_mod_eq
R15842:15845 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15857:15859 Coq.Init.Logic <> :type_scope:x_'='_x not
R15847:15851 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R15846:15846 compcert.lib.Integers <> x var
R15852:15856 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R15861:15865 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R15860:15860 compcert.lib.Integers <> y var
R15866:15870 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R15833:15837 compcert.lib.Integers Make eqmod def
R15841:15841 compcert.lib.Integers <> y var
R15839:15839 compcert.lib.Integers <> x var
R15920:15929 Coq.ZArith.BinInt <> Zplus_comm syndef
R15920:15929 Coq.ZArith.BinInt <> Zplus_comm syndef
R15920:15929 Coq.ZArith.BinInt <> Zplus_comm syndef
R15938:15947 Coq.ZArith.Zdiv <> Z_mod_plus thm
R15938:15947 Coq.ZArith.Zdiv <> Z_mod_plus thm
prf 15968:15976 Make eqmod_mod
R15991:15995 compcert.lib.Integers Make eqmod def
R16001:16005 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R16000:16000 compcert.lib.Integers <> x var
R16006:16010 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R15997:15997 compcert.lib.Integers <> x var
R16045:16047 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R16048:16052 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R16045:16047 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R16048:16052 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R16066:16075 Coq.ZArith.BinInt <> Zmult_comm syndef
R16066:16075 Coq.ZArith.BinInt <> Zmult_comm syndef
R16066:16075 Coq.ZArith.BinInt <> Zmult_comm syndef
R16084:16095 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R16084:16095 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
prf 16116:16124 Make eqmod_add
R16154:16157 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16167:16170 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16171:16175 compcert.lib.Integers Make eqmod def
R16187:16189 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16186:16186 compcert.lib.Integers <> b var
R16190:16190 compcert.lib.Integers <> d var
R16179:16181 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16178:16178 compcert.lib.Integers <> a var
R16182:16182 compcert.lib.Integers <> c var
R16158:16162 compcert.lib.Integers Make eqmod def
R16166:16166 compcert.lib.Integers <> d var
R16164:16164 compcert.lib.Integers <> c var
R16145:16149 compcert.lib.Integers Make eqmod def
R16153:16153 compcert.lib.Integers <> b var
R16151:16151 compcert.lib.Integers <> a var
R16272:16274 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16272:16274 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
prf 16298:16306 Make eqmod_neg
R16332:16335 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16336:16340 compcert.lib.Integers Make eqmod def
R16348:16348 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R16349:16349 compcert.lib.Integers <> y var
R16343:16343 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R16344:16344 compcert.lib.Integers <> x var
R16323:16327 compcert.lib.Integers Make eqmod def
R16331:16331 compcert.lib.Integers <> y var
R16329:16329 compcert.lib.Integers <> x var
R16394:16394 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R16394:16394 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
prf 16429:16437 Make eqmod_sub
R16467:16470 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16480:16483 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16484:16488 compcert.lib.Integers Make eqmod def
R16500:16502 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R16499:16499 compcert.lib.Integers <> b var
R16503:16503 compcert.lib.Integers <> d var
R16492:16494 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R16491:16491 compcert.lib.Integers <> a var
R16495:16495 compcert.lib.Integers <> c var
R16471:16475 compcert.lib.Integers Make eqmod def
R16479:16479 compcert.lib.Integers <> d var
R16477:16477 compcert.lib.Integers <> c var
R16458:16462 compcert.lib.Integers Make eqmod def
R16466:16466 compcert.lib.Integers <> b var
R16464:16464 compcert.lib.Integers <> a var
R16585:16587 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R16585:16587 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
prf 16611:16620 Make eqmod_mult
R16650:16653 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16663:16666 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16667:16671 compcert.lib.Integers Make eqmod def
R16683:16685 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16682:16682 compcert.lib.Integers <> c var
R16686:16686 compcert.lib.Integers <> d var
R16675:16677 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16674:16674 compcert.lib.Integers <> a var
R16678:16678 compcert.lib.Integers <> b var
R16654:16658 compcert.lib.Integers Make eqmod def
R16662:16662 compcert.lib.Integers <> d var
R16660:16660 compcert.lib.Integers <> b var
R16641:16645 compcert.lib.Integers Make eqmod def
R16649:16649 compcert.lib.Integers <> c var
R16647:16647 compcert.lib.Integers <> a var
R16792:16794 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16783:16785 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16775:16777 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16770:16772 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16778:16782 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R16787:16789 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16797:16799 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16792:16794 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16783:16785 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16775:16777 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16770:16772 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16778:16782 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R16787:16789 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16797:16799 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16822:16830 compcert.lib.Integers Make.EQ_MODULO <> sec
prf 16840:16852 Make eqmod_divides
R16884:16887 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16899:16902 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16903:16907 compcert.lib.Integers Make eqmod def
R16913:16913 compcert.lib.Integers <> y var
R16911:16911 compcert.lib.Integers <> x var
R16909:16909 compcert.lib.Integers <> m var
R16888:16894 Coq.ZArith.Znumtheory <> Zdivide syndef
R16898:16898 compcert.lib.Integers <> n var
R16896:16896 compcert.lib.Integers <> m var
R16873:16877 compcert.lib.Integers Make eqmod def
R16883:16883 compcert.lib.Integers <> y var
R16881:16881 compcert.lib.Integers <> x var
R16879:16879 compcert.lib.Integers <> n var
R16994:16994 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16994:16994 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R17011:17021 Coq.ZArith.BinInt <> Zmult_assoc syndef
R17011:17021 Coq.ZArith.BinInt <> Zmult_assoc syndef
R17011:17021 Coq.ZArith.BinInt <> Zmult_assoc syndef
def 17201:17203 Make eqm
R17208:17212 compcert.lib.Integers Make eqmod def
R17214:17220 compcert.lib.Integers Make modulus def
prf 17230:17237 Make eqm_refl
R17250:17252 compcert.lib.Integers Make eqm def
R17256:17256 compcert.lib.Integers <> x var
R17254:17254 compcert.lib.Integers <> x var
R17266:17275 compcert.lib.Integers Make eqmod_refl thm
R17277:17283 compcert.lib.Integers Make modulus def
prf 17323:17331 Make eqm_refl2
R17353:17356 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17357:17359 compcert.lib.Integers Make eqm def
R17363:17363 compcert.lib.Integers <> y var
R17361:17361 compcert.lib.Integers <> x var
R17349:17351 Coq.Init.Logic <> :type_scope:x_'='_x not
R17348:17348 compcert.lib.Integers <> x var
R17352:17352 compcert.lib.Integers <> y var
R17373:17383 compcert.lib.Integers Make eqmod_refl2 thm
R17385:17391 compcert.lib.Integers Make modulus def
prf 17432:17438 Make eqm_sym
R17460:17463 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17464:17466 compcert.lib.Integers Make eqm def
R17470:17470 compcert.lib.Integers <> x var
R17468:17468 compcert.lib.Integers <> y var
R17453:17455 compcert.lib.Integers Make eqm def
R17459:17459 compcert.lib.Integers <> y var
R17457:17457 compcert.lib.Integers <> x var
R17480:17488 compcert.lib.Integers Make eqmod_sym thm
R17490:17496 compcert.lib.Integers Make modulus def
prf 17535:17543 Make eqm_trans
R17567:17570 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17578:17581 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17582:17584 compcert.lib.Integers Make eqm def
R17588:17588 compcert.lib.Integers <> z var
R17586:17586 compcert.lib.Integers <> x var
R17571:17573 compcert.lib.Integers Make eqm def
R17577:17577 compcert.lib.Integers <> z var
R17575:17575 compcert.lib.Integers <> y var
R17560:17562 compcert.lib.Integers Make eqm def
R17566:17566 compcert.lib.Integers <> y var
R17564:17564 compcert.lib.Integers <> x var
R17598:17608 compcert.lib.Integers Make eqmod_trans thm
R17610:17616 compcert.lib.Integers Make modulus def
prf 17657:17668 Make eqm_small_eq
R17692:17695 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17712:17715 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17732:17735 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17737:17739 Coq.Init.Logic <> :type_scope:x_'='_x not
R17736:17736 compcert.lib.Integers <> x var
R17740:17740 compcert.lib.Integers <> y var
R17717:17720 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R17722:17724 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R17721:17721 compcert.lib.Integers <> y var
R17721:17721 compcert.lib.Integers <> y var
R17725:17731 compcert.lib.Integers Make modulus def
R17697:17700 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R17702:17704 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R17701:17701 compcert.lib.Integers <> x var
R17701:17701 compcert.lib.Integers <> x var
R17705:17711 compcert.lib.Integers Make modulus def
R17685:17687 compcert.lib.Integers Make eqm def
R17691:17691 compcert.lib.Integers <> y var
R17689:17689 compcert.lib.Integers <> x var
R17750:17763 compcert.lib.Integers Make eqmod_small_eq thm
R17765:17771 compcert.lib.Integers Make modulus def
prf 17815:17821 Make eqm_add
R17849:17852 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17860:17863 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17864:17866 compcert.lib.Integers Make eqm def
R17878:17880 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17877:17877 compcert.lib.Integers <> b var
R17881:17881 compcert.lib.Integers <> d var
R17870:17872 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17869:17869 compcert.lib.Integers <> a var
R17873:17873 compcert.lib.Integers <> c var
R17853:17855 compcert.lib.Integers Make eqm def
R17859:17859 compcert.lib.Integers <> d var
R17857:17857 compcert.lib.Integers <> c var
R17842:17844 compcert.lib.Integers Make eqm def
R17848:17848 compcert.lib.Integers <> b var
R17846:17846 compcert.lib.Integers <> a var
R17892:17900 compcert.lib.Integers Make eqmod_add thm
R17902:17908 compcert.lib.Integers Make modulus def
prf 17947:17953 Make eqm_neg
R17977:17980 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17981:17983 compcert.lib.Integers Make eqm def
R17991:17991 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R17992:17992 compcert.lib.Integers <> y var
R17986:17986 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R17987:17987 compcert.lib.Integers <> x var
R17970:17972 compcert.lib.Integers Make eqm def
R17976:17976 compcert.lib.Integers <> y var
R17974:17974 compcert.lib.Integers <> x var
R18003:18011 compcert.lib.Integers Make eqmod_neg thm
R18013:18019 compcert.lib.Integers Make modulus def
prf 18058:18064 Make eqm_sub
R18092:18095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18103:18106 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18107:18109 compcert.lib.Integers Make eqm def
R18121:18123 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R18120:18120 compcert.lib.Integers <> b var
R18124:18124 compcert.lib.Integers <> d var
R18113:18115 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R18112:18112 compcert.lib.Integers <> a var
R18116:18116 compcert.lib.Integers <> c var
R18096:18098 compcert.lib.Integers Make eqm def
R18102:18102 compcert.lib.Integers <> d var
R18100:18100 compcert.lib.Integers <> c var
R18085:18087 compcert.lib.Integers Make eqm def
R18091:18091 compcert.lib.Integers <> b var
R18089:18089 compcert.lib.Integers <> a var
R18135:18143 compcert.lib.Integers Make eqmod_sub thm
R18145:18151 compcert.lib.Integers Make modulus def
prf 18190:18197 Make eqm_mult
R18225:18228 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18236:18239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18240:18242 compcert.lib.Integers Make eqm def
R18254:18256 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R18253:18253 compcert.lib.Integers <> c var
R18257:18257 compcert.lib.Integers <> d var
R18246:18248 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R18245:18245 compcert.lib.Integers <> a var
R18249:18249 compcert.lib.Integers <> b var
R18229:18231 compcert.lib.Integers Make eqm def
R18235:18235 compcert.lib.Integers <> d var
R18233:18233 compcert.lib.Integers <> b var
R18218:18220 compcert.lib.Integers Make eqm def
R18224:18224 compcert.lib.Integers <> c var
R18222:18222 compcert.lib.Integers <> a var
R18268:18277 compcert.lib.Integers Make eqmod_mult thm
R18279:18285 compcert.lib.Integers Make modulus def
prf 18386:18397 Make eqm_samerepr
R18419:18422 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18429:18431 Coq.Init.Logic <> :type_scope:x_'='_x not
R18423:18426 compcert.lib.Integers Make repr def
R18428:18428 compcert.lib.Integers <> x var
R18432:18435 compcert.lib.Integers Make repr def
R18437:18437 compcert.lib.Integers <> y var
R18412:18414 compcert.lib.Integers Make eqm def
R18418:18418 compcert.lib.Integers <> y var
R18416:18416 compcert.lib.Integers <> x var
R18464:18467 compcert.lib.Integers Make repr def
R18476:18483 compcert.lib.Integers Make mkint_eq thm
R18476:18483 compcert.lib.Integers Make mkint_eq thm
R18497:18512 compcert.lib.Integers Make Z_mod_modulus_eq thm
R18497:18512 compcert.lib.Integers Make Z_mod_modulus_eq thm
R18497:18512 compcert.lib.Integers Make Z_mod_modulus_eq thm
R18497:18512 compcert.lib.Integers Make Z_mod_modulus_eq thm
R18497:18512 compcert.lib.Integers Make Z_mod_modulus_eq thm
R18521:18532 compcert.lib.Integers Make eqmod_mod_eq thm
R18521:18532 compcert.lib.Integers Make eqmod_mod_eq thm
prf 18572:18588 Make eqm_unsigned_repr
R18603:18605 compcert.lib.Integers Make eqm def
R18610:18617 compcert.lib.Integers Make unsigned def
R18620:18623 compcert.lib.Integers Make repr def
R18625:18625 compcert.lib.Integers <> z var
R18607:18607 compcert.lib.Integers <> z var
R18646:18648 compcert.lib.Integers Make eqm def
R18667:18682 compcert.lib.Integers Make unsigned_repr_eq thm
R18667:18682 compcert.lib.Integers Make unsigned_repr_eq thm
R18667:18682 compcert.lib.Integers Make unsigned_repr_eq thm
R18691:18699 compcert.lib.Integers Make eqmod_mod thm
R18691:18699 compcert.lib.Integers Make eqmod_mod thm
prf 18768:18786 Make eqm_unsigned_repr_l
R18810:18813 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18814:18816 compcert.lib.Integers Make eqm def
R18838:18838 compcert.lib.Integers <> b var
R18819:18826 compcert.lib.Integers Make unsigned def
R18829:18832 compcert.lib.Integers Make repr def
R18834:18834 compcert.lib.Integers <> a var
R18803:18805 compcert.lib.Integers Make eqm def
R18809:18809 compcert.lib.Integers <> b var
R18807:18807 compcert.lib.Integers <> a var
R18864:18872 compcert.lib.Integers Make eqm_trans thm
R18864:18872 compcert.lib.Integers Make eqm_trans thm
R18890:18896 compcert.lib.Integers Make eqm_sym thm
R18890:18896 compcert.lib.Integers Make eqm_sym thm
R18905:18921 compcert.lib.Integers Make eqm_unsigned_repr thm
R18905:18921 compcert.lib.Integers Make eqm_unsigned_repr thm
prf 18982:19000 Make eqm_unsigned_repr_r
R19024:19027 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19028:19030 compcert.lib.Integers Make eqm def
R19035:19042 compcert.lib.Integers Make unsigned def
R19045:19048 compcert.lib.Integers Make repr def
R19050:19050 compcert.lib.Integers <> b var
R19032:19032 compcert.lib.Integers <> a var
R19017:19019 compcert.lib.Integers Make eqm def
R19023:19023 compcert.lib.Integers <> b var
R19021:19021 compcert.lib.Integers <> a var
R19078:19086 compcert.lib.Integers Make eqm_trans thm
R19078:19086 compcert.lib.Integers Make eqm_trans thm
R19110:19126 compcert.lib.Integers Make eqm_unsigned_repr thm
R19110:19126 compcert.lib.Integers Make eqm_unsigned_repr thm
prf 19181:19199 Make eqm_signed_unsigned
R19214:19216 compcert.lib.Integers Make eqm def
R19230:19237 compcert.lib.Integers Make unsigned def
R19239:19239 compcert.lib.Integers <> x var
R19219:19224 compcert.lib.Integers Make signed def
R19226:19226 compcert.lib.Integers <> x var
R19272:19277 compcert.lib.Integers Make signed def
R19290:19297 compcert.lib.Integers Make unsigned def
R19290:19297 compcert.lib.Integers Make unsigned def
R19311:19313 compcert.lib.Coqlib <> zlt def
R19317:19328 compcert.lib.Integers Make half_modulus def
R19311:19313 compcert.lib.Coqlib <> zlt def
R19317:19328 compcert.lib.Integers Make half_modulus def
R19347:19356 compcert.lib.Integers Make eqmod_refl thm
R19347:19356 compcert.lib.Integers Make eqmod_refl thm
prf 19397:19410 Make unsigned_range
R19426:19429 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R19440:19442 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R19430:19437 compcert.lib.Integers Make unsigned def
R19439:19439 compcert.lib.Integers <> i var
R19430:19437 compcert.lib.Integers Make unsigned def
R19439:19439 compcert.lib.Integers <> i var
R19443:19449 compcert.lib.Integers Make modulus def
prf 19536:19551 Make unsigned_range_2
R19567:19570 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R19581:19584 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R19571:19578 compcert.lib.Integers Make unsigned def
R19580:19580 compcert.lib.Integers <> i var
R19571:19578 compcert.lib.Integers Make unsigned def
R19580:19580 compcert.lib.Integers <> i var
R19585:19596 compcert.lib.Integers Make max_unsigned def
R19622:19633 compcert.lib.Integers Make max_unsigned def
R19650:19663 compcert.lib.Integers Make unsigned_range thm
R19650:19663 compcert.lib.Integers Make unsigned_range thm
prf 19727:19738 Make signed_range
R19763:19766 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R19775:19778 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R19753:19762 compcert.lib.Integers Make min_signed def
R19767:19772 compcert.lib.Integers Make signed def
R19774:19774 compcert.lib.Integers <> i var
R19767:19772 compcert.lib.Integers Make signed def
R19774:19774 compcert.lib.Integers <> i var
R19779:19788 compcert.lib.Integers Make max_signed def
R19815:19820 compcert.lib.Integers Make signed def
R19837:19850 compcert.lib.Integers Make unsigned_range thm
R19837:19850 compcert.lib.Integers Make unsigned_range thm
R19866:19873 compcert.lib.Integers Make unsigned def
R19866:19873 compcert.lib.Integers Make unsigned def
R19895:19897 compcert.lib.Coqlib <> zlt def
R19901:19912 compcert.lib.Integers Make half_modulus def
R19895:19897 compcert.lib.Coqlib <> zlt def
R19901:19912 compcert.lib.Integers Make half_modulus def
R19932:19941 compcert.lib.Integers Make max_signed def
R19955:19968 compcert.lib.Integers Make min_signed_neg thm
R19955:19968 compcert.lib.Integers Make min_signed_neg thm
R19987:19996 compcert.lib.Integers Make min_signed def
R19999:20008 compcert.lib.Integers Make max_signed def
R20021:20040 compcert.lib.Integers Make half_modulus_modulus thm
R20021:20040 compcert.lib.Integers Make half_modulus_modulus thm
R20021:20040 compcert.lib.Integers Make half_modulus_modulus thm
prf 20069:20081 Make repr_unsigned
R20113:20115 Coq.Init.Logic <> :type_scope:x_'='_x not
R20096:20099 compcert.lib.Integers Make repr def
R20102:20109 compcert.lib.Integers Make unsigned def
R20111:20111 compcert.lib.Integers <> i var
R20116:20116 compcert.lib.Integers <> i var
R20154:20157 compcert.lib.Integers Make repr def
R20166:20173 compcert.lib.Integers Make mkint_eq thm
R20166:20173 compcert.lib.Integers Make mkint_eq thm
R20186:20201 compcert.lib.Integers Make Z_mod_modulus_eq thm
R20186:20201 compcert.lib.Integers Make Z_mod_modulus_eq thm
R20186:20201 compcert.lib.Integers Make Z_mod_modulus_eq thm
R20210:20219 compcert.lib.Coqlib <> Zmod_small thm
R20210:20219 compcert.lib.Coqlib <> Zmod_small thm
prf 20275:20285 Make repr_signed
R20315:20317 Coq.Init.Logic <> :type_scope:x_'='_x not
R20300:20303 compcert.lib.Integers Make repr def
R20306:20311 compcert.lib.Integers Make signed def
R20313:20313 compcert.lib.Integers <> i var
R20318:20318 compcert.lib.Integers <> i var
R20352:20355 compcert.lib.Integers Make repr def
R20358:20365 compcert.lib.Integers Make unsigned def
R20352:20355 compcert.lib.Integers Make repr def
R20358:20365 compcert.lib.Integers Make unsigned def
R20380:20391 compcert.lib.Integers Make eqm_samerepr thm
R20380:20391 compcert.lib.Integers Make eqm_samerepr thm
R20400:20418 compcert.lib.Integers Make eqm_signed_unsigned thm
R20400:20418 compcert.lib.Integers Make eqm_signed_unsigned thm
R20482:20485 compcert.lib.Integers Make repr def
prf 20495:20505 Make eqm_repr_eq
R20538:20541 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20548:20550 Coq.Init.Logic <> :type_scope:x_'='_x not
R20542:20545 compcert.lib.Integers Make repr def
R20547:20547 compcert.lib.Integers <> x var
R20551:20551 compcert.lib.Integers <> y var
R20520:20522 compcert.lib.Integers Make eqm def
R20527:20534 compcert.lib.Integers Make unsigned def
R20536:20536 compcert.lib.Integers <> y var
R20524:20524 compcert.lib.Integers <> x var
R20583:20595 compcert.lib.Integers Make repr_unsigned thm
R20583:20595 compcert.lib.Integers Make repr_unsigned thm
R20583:20595 compcert.lib.Integers Make repr_unsigned thm
R20607:20618 compcert.lib.Integers Make eqm_samerepr thm
R20607:20618 compcert.lib.Integers Make eqm_samerepr thm
prf 20641:20653 Make unsigned_repr
R20690:20693 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20711:20713 Coq.Init.Logic <> :type_scope:x_'='_x not
R20694:20701 compcert.lib.Integers Make unsigned def
R20704:20707 compcert.lib.Integers Make repr def
R20709:20709 compcert.lib.Integers <> z var
R20714:20714 compcert.lib.Integers <> z var
R20669:20672 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R20674:20677 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R20673:20673 compcert.lib.Integers <> z var
R20673:20673 compcert.lib.Integers <> z var
R20678:20689 compcert.lib.Integers Make max_unsigned def
R20742:20757 compcert.lib.Integers Make unsigned_repr_eq thm
R20742:20757 compcert.lib.Integers Make unsigned_repr_eq thm
R20742:20757 compcert.lib.Integers Make unsigned_repr_eq thm
R20768:20777 compcert.lib.Coqlib <> Zmod_small thm
R20768:20777 compcert.lib.Coqlib <> Zmod_small thm
R20787:20798 compcert.lib.Integers Make max_unsigned def
prf 20861:20871 Make signed_repr
R20915:20918 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20934:20936 Coq.Init.Logic <> :type_scope:x_'='_x not
R20919:20924 compcert.lib.Integers Make signed def
R20927:20930 compcert.lib.Integers Make repr def
R20932:20932 compcert.lib.Integers <> z var
R20937:20937 compcert.lib.Integers <> z var
R20896:20899 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R20901:20904 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R20886:20895 compcert.lib.Integers Make min_signed def
R20900:20900 compcert.lib.Integers <> z var
R20900:20900 compcert.lib.Integers <> z var
R20905:20914 compcert.lib.Integers Make max_signed def
R20964:20969 compcert.lib.Integers Make signed def
R20982:20984 compcert.lib.Coqlib <> zle def
R20982:20984 compcert.lib.Coqlib <> zle def
R21003:21010 compcert.lib.Integers Make unsigned def
R21013:21016 compcert.lib.Integers Make repr def
R21003:21010 compcert.lib.Integers Make unsigned def
R21013:21016 compcert.lib.Integers Make repr def
R21040:21047 compcert.lib.Coqlib <> zlt_true thm
R21040:21047 compcert.lib.Coqlib <> zlt_true thm
R21040:21047 compcert.lib.Coqlib <> zlt_true thm
R21040:21047 compcert.lib.Coqlib <> zlt_true thm
R21063:21072 compcert.lib.Integers Make max_signed def
R21105:21117 compcert.lib.Integers Make unsigned_repr thm
R21105:21117 compcert.lib.Integers Make unsigned_repr thm
R21131:21149 compcert.lib.Integers Make max_signed_unsigned thm
R21131:21149 compcert.lib.Integers Make max_signed_unsigned thm
R21174:21176 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21177:21183 compcert.lib.Integers Make modulus def
R21174:21176 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21177:21183 compcert.lib.Integers Make modulus def
R21198:21201 compcert.lib.Integers Make repr def
R21212:21215 compcert.lib.Integers Make repr def
R21212:21215 compcert.lib.Integers Make repr def
R21198:21201 compcert.lib.Integers Make repr def
R21233:21240 compcert.lib.Integers Make unsigned def
R21243:21246 compcert.lib.Integers Make repr def
R21233:21240 compcert.lib.Integers Make unsigned def
R21243:21246 compcert.lib.Integers Make repr def
R21272:21280 compcert.lib.Coqlib <> zlt_false thm
R21272:21280 compcert.lib.Coqlib <> zlt_false thm
R21272:21280 compcert.lib.Coqlib <> zlt_false thm
R21272:21280 compcert.lib.Coqlib <> zlt_false thm
R21321:21330 compcert.lib.Integers Make min_signed def
R21348:21367 compcert.lib.Integers Make half_modulus_modulus thm
R21348:21367 compcert.lib.Integers Make half_modulus_modulus thm
R21348:21367 compcert.lib.Integers Make half_modulus_modulus thm
R21395:21407 compcert.lib.Integers Make unsigned_repr thm
R21395:21407 compcert.lib.Integers Make unsigned_repr thm
R21423:21434 compcert.lib.Integers Make max_unsigned def
R21444:21453 compcert.lib.Integers Make min_signed def
R21456:21465 compcert.lib.Integers Make max_signed def
R21483:21502 compcert.lib.Integers Make half_modulus_modulus thm
R21483:21502 compcert.lib.Integers Make half_modulus_modulus thm
R21483:21502 compcert.lib.Integers Make half_modulus_modulus thm
R21520:21531 compcert.lib.Integers Make eqm_samerepr thm
R21520:21531 compcert.lib.Integers Make eqm_samerepr thm
prf 21581:21598 Make signed_eq_unsigned
R21637:21640 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21649:21651 Coq.Init.Logic <> :type_scope:x_'='_x not
R21641:21646 compcert.lib.Integers Make signed def
R21648:21648 compcert.lib.Integers <> x var
R21652:21659 compcert.lib.Integers Make unsigned def
R21661:21661 compcert.lib.Integers <> x var
R21623:21626 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R21613:21620 compcert.lib.Integers Make unsigned def
R21622:21622 compcert.lib.Integers <> x var
R21627:21636 compcert.lib.Integers Make max_signed def
R21688:21693 compcert.lib.Integers Make signed def
R21706:21708 compcert.lib.Coqlib <> zlt def
R21723:21734 compcert.lib.Integers Make half_modulus def
R21711:21718 compcert.lib.Integers Make unsigned def
R21706:21708 compcert.lib.Coqlib <> zlt def
R21723:21734 compcert.lib.Integers Make half_modulus def
R21711:21718 compcert.lib.Integers Make unsigned def
R21753:21762 compcert.lib.Integers Make max_signed def
prf 21804:21818 Make signed_positive
R21846:21850 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21841:21844 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R21833:21838 compcert.lib.Integers Make signed def
R21840:21840 compcert.lib.Integers <> x var
R21861:21864 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R21851:21858 compcert.lib.Integers Make unsigned def
R21860:21860 compcert.lib.Integers <> x var
R21865:21874 compcert.lib.Integers Make max_signed def
R21901:21906 compcert.lib.Integers Make signed def
R21909:21918 compcert.lib.Integers Make max_signed def
R21935:21948 compcert.lib.Integers Make unsigned_range thm
R21953:21972 compcert.lib.Integers Make half_modulus_modulus thm
R21974:21989 compcert.lib.Integers Make half_modulus_pos thm
R21935:21948 compcert.lib.Integers Make unsigned_range thm
R21953:21972 compcert.lib.Integers Make half_modulus_modulus thm
R21974:21989 compcert.lib.Integers Make half_modulus_pos thm
R22012:22014 compcert.lib.Coqlib <> zlt def
R22029:22040 compcert.lib.Integers Make half_modulus def
R22017:22024 compcert.lib.Integers Make unsigned def
R22012:22014 compcert.lib.Coqlib <> zlt def
R22029:22040 compcert.lib.Integers Make half_modulus def
R22017:22024 compcert.lib.Integers Make unsigned def
prf 22111:22123 Make unsigned_zero
R22139:22141 Coq.Init.Logic <> :type_scope:x_'='_x not
R22126:22133 compcert.lib.Integers Make unsigned def
R22135:22138 compcert.lib.Integers Make zero def
R22161:22164 compcert.lib.Integers Make zero def
R22175:22190 compcert.lib.Integers Make unsigned_repr_eq thm
R22175:22190 compcert.lib.Integers Make unsigned_repr_eq thm
R22175:22190 compcert.lib.Integers Make unsigned_repr_eq thm
R22199:22206 Coq.ZArith.Zdiv <> Zmod_0_l thm
R22199:22206 Coq.ZArith.Zdiv <> Zmod_0_l thm
prf 22223:22234 Make unsigned_one
R22249:22251 Coq.Init.Logic <> :type_scope:x_'='_x not
R22237:22244 compcert.lib.Integers Make unsigned def
R22246:22248 compcert.lib.Integers Make one def
R22271:22273 compcert.lib.Integers Make one def
R22284:22299 compcert.lib.Integers Make unsigned_repr_eq thm
R22284:22299 compcert.lib.Integers Make unsigned_repr_eq thm
R22284:22299 compcert.lib.Integers Make unsigned_repr_eq thm
R22308:22317 compcert.lib.Coqlib <> Zmod_small thm
R22308:22317 compcert.lib.Coqlib <> Zmod_small thm
R22343:22349 compcert.lib.Integers Make modulus def
R22360:22367 compcert.lib.Integers Make wordsize def
R22375:22375 Coq.Init.Datatypes <> S constr
R22377:22380 Coq.Init.Peano <> pred syndef
R22382:22389 compcert.lib.Integers Make wordsize def
R22375:22375 Coq.Init.Datatypes <> S constr
R22377:22380 Coq.Init.Peano <> pred syndef
R22382:22389 compcert.lib.Integers Make wordsize def
R22360:22367 compcert.lib.Integers Make wordsize def
R22404:22418 Coq.ZArith.Zpower <> two_power_nat_S thm
R22404:22418 Coq.ZArith.Zpower <> two_power_nat_S thm
R22404:22418 Coq.ZArith.Zpower <> two_power_nat_S thm
R22433:22449 compcert.lib.Coqlib <> two_power_nat_pos thm
R22452:22455 Coq.Init.Peano <> pred syndef
R22457:22464 compcert.lib.Integers Make wordsize def
R22433:22449 compcert.lib.Coqlib <> two_power_nat_pos thm
R22452:22455 Coq.Init.Peano <> pred syndef
R22457:22464 compcert.lib.Integers Make wordsize def
R22491:22502 compcert.lib.Integers Make wordsize_pos thm
R22491:22502 compcert.lib.Integers Make wordsize_pos thm
R22512:22520 compcert.lib.Integers Make zwordsize def
prf 22544:22556 Make unsigned_mone
R22572:22574 Coq.Init.Logic <> :type_scope:x_'='_x not
R22559:22566 compcert.lib.Integers Make unsigned def
R22568:22571 compcert.lib.Integers Make mone def
R22582:22584 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R22575:22581 compcert.lib.Integers Make modulus def
R22604:22607 compcert.lib.Integers Make mone def
R22618:22633 compcert.lib.Integers Make unsigned_repr_eq thm
R22618:22633 compcert.lib.Integers Make unsigned_repr_eq thm
R22618:22633 compcert.lib.Integers Make unsigned_repr_eq thm
R22657:22657 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22669:22672 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22665:22667 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R22658:22664 compcert.lib.Integers Make modulus def
R22673:22673 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R22676:22679 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R22680:22686 compcert.lib.Integers Make modulus def
R22657:22657 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22669:22672 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22665:22667 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R22658:22664 compcert.lib.Integers Make modulus def
R22673:22673 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R22676:22679 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R22680:22686 compcert.lib.Integers Make modulus def
R22700:22714 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R22700:22714 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R22700:22714 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R22723:22732 compcert.lib.Coqlib <> Zmod_small thm
R22723:22732 compcert.lib.Coqlib <> Zmod_small thm
R22748:22758 compcert.lib.Integers Make modulus_pos thm
R22748:22758 compcert.lib.Integers Make modulus_pos thm
prf 22789:22799 Make signed_zero
R22813:22815 Coq.Init.Logic <> :type_scope:x_'='_x not
R22802:22807 compcert.lib.Integers Make signed def
R22809:22812 compcert.lib.Integers Make zero def
R22835:22840 compcert.lib.Integers Make signed def
R22851:22863 compcert.lib.Integers Make unsigned_zero thm
R22851:22863 compcert.lib.Integers Make unsigned_zero thm
R22851:22863 compcert.lib.Integers Make unsigned_zero thm
R22872:22879 compcert.lib.Coqlib <> zlt_true thm
R22872:22879 compcert.lib.Coqlib <> zlt_true thm
R22893:22908 compcert.lib.Integers Make half_modulus_pos thm
R22893:22908 compcert.lib.Integers Make half_modulus_pos thm
prf 22932:22942 Make signed_mone
R22956:22958 Coq.Init.Logic <> :type_scope:x_'='_x not
R22945:22950 compcert.lib.Integers Make signed def
R22952:22955 compcert.lib.Integers Make mone def
R22979:22984 compcert.lib.Integers Make signed def
R22995:23007 compcert.lib.Integers Make unsigned_mone thm
R22995:23007 compcert.lib.Integers Make unsigned_mone thm
R22995:23007 compcert.lib.Integers Make unsigned_mone thm
R23020:23028 compcert.lib.Coqlib <> zlt_false thm
R23020:23028 compcert.lib.Coqlib <> zlt_false thm
R23020:23028 compcert.lib.Coqlib <> zlt_false thm
R23020:23028 compcert.lib.Coqlib <> zlt_false thm
R23048:23067 compcert.lib.Integers Make half_modulus_modulus thm
R23048:23067 compcert.lib.Integers Make half_modulus_modulus thm
R23048:23067 compcert.lib.Integers Make half_modulus_modulus thm
R23081:23096 compcert.lib.Integers Make half_modulus_pos thm
R23081:23096 compcert.lib.Integers Make half_modulus_pos thm
prf 23120:23131 Make one_not_zero
R23137:23140 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R23134:23136 compcert.lib.Integers Make one def
R23141:23144 compcert.lib.Integers Make zero def
R23176:23179 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R23164:23171 compcert.lib.Integers Make unsigned def
R23173:23175 compcert.lib.Integers Make one def
R23180:23187 compcert.lib.Integers Make unsigned def
R23189:23192 compcert.lib.Integers Make zero def
R23176:23179 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R23164:23171 compcert.lib.Integers Make unsigned def
R23173:23175 compcert.lib.Integers Make one def
R23180:23187 compcert.lib.Integers Make unsigned def
R23189:23192 compcert.lib.Integers Make zero def
R23206:23217 compcert.lib.Integers Make unsigned_one thm
R23228:23240 compcert.lib.Integers Make unsigned_zero thm
R23206:23217 compcert.lib.Integers Make unsigned_one thm
R23206:23217 compcert.lib.Integers Make unsigned_one thm
R23228:23240 compcert.lib.Integers Make unsigned_zero thm
R23228:23240 compcert.lib.Integers Make unsigned_zero thm
prf 23283:23304 Make unsigned_repr_wordsize
R23327:23329 Coq.Init.Logic <> :type_scope:x_'='_x not
R23309:23316 compcert.lib.Integers Make unsigned def
R23318:23326 compcert.lib.Integers Make iwordsize def
R23330:23338 compcert.lib.Integers Make zwordsize def
R23357:23365 compcert.lib.Integers Make iwordsize def
R23376:23391 compcert.lib.Integers Make unsigned_repr_eq thm
R23376:23391 compcert.lib.Integers Make unsigned_repr_eq thm
R23376:23391 compcert.lib.Integers Make unsigned_repr_eq thm
R23400:23409 compcert.lib.Coqlib <> Zmod_small thm
R23400:23409 compcert.lib.Coqlib <> Zmod_small thm
R23425:23436 compcert.lib.Integers Make wordsize_pos thm
R23438:23458 compcert.lib.Integers Make wordsize_max_unsigned thm
R23468:23479 compcert.lib.Integers Make max_unsigned def
R23425:23436 compcert.lib.Integers Make wordsize_pos thm
R23438:23458 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 23537:23542 Make eq_sym
R23565:23567 Coq.Init.Logic <> :type_scope:x_'='_x not
R23559:23560 compcert.lib.Integers Make eq def
R23564:23564 compcert.lib.Integers <> y var
R23562:23562 compcert.lib.Integers <> x var
R23568:23569 compcert.lib.Integers Make eq def
R23573:23573 compcert.lib.Integers <> x var
R23571:23571 compcert.lib.Integers <> y var
R23600:23601 compcert.lib.Integers Make eq def
R23610:23612 compcert.lib.Coqlib <> zeq def
R23628:23635 compcert.lib.Integers Make unsigned def
R23615:23622 compcert.lib.Integers Make unsigned def
R23610:23612 compcert.lib.Coqlib <> zeq def
R23628:23635 compcert.lib.Integers Make unsigned def
R23615:23622 compcert.lib.Integers Make unsigned def
R23670:23677 compcert.lib.Coqlib <> zeq_true thm
R23670:23677 compcert.lib.Coqlib <> zeq_true thm
R23670:23677 compcert.lib.Coqlib <> zeq_true thm
R23696:23704 compcert.lib.Coqlib <> zeq_false thm
R23696:23704 compcert.lib.Coqlib <> zeq_false thm
R23696:23704 compcert.lib.Coqlib <> zeq_false thm
R23696:23704 compcert.lib.Coqlib <> zeq_false thm
prf 23733:23739 Make eq_spec
R23755:23757 compcert.lib.Integers Make int rec
R23764:23765 compcert.lib.Integers Make eq def
R23769:23769 compcert.lib.Integers <> y var
R23767:23767 compcert.lib.Integers <> x var
R23788:23791 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R23787:23787 compcert.lib.Integers <> x var
R23792:23792 compcert.lib.Integers <> y var
R23777:23779 Coq.Init.Logic <> :type_scope:x_'='_x not
R23776:23776 compcert.lib.Integers <> x var
R23780:23780 compcert.lib.Integers <> y var
R23819:23820 compcert.lib.Integers Make eq def
R23829:23834 compcert.lib.Integers Make eq_dec thm
R23829:23834 compcert.lib.Integers Make eq_dec thm
R23868:23875 compcert.lib.Coqlib <> zeq_true thm
R23868:23875 compcert.lib.Coqlib <> zeq_true thm
R23868:23875 compcert.lib.Coqlib <> zeq_true thm
R23894:23902 compcert.lib.Coqlib <> zeq_false thm
R23894:23902 compcert.lib.Coqlib <> zeq_false thm
R23894:23902 compcert.lib.Coqlib <> zeq_false thm
R23894:23902 compcert.lib.Coqlib <> zeq_false thm
R23972:23979 compcert.lib.Integers Make mkint_eq thm
R23972:23979 compcert.lib.Integers Make mkint_eq thm
prf 24002:24008 Make eq_true
R24027:24029 Coq.Init.Logic <> :type_scope:x_'='_x not
R24021:24022 compcert.lib.Integers Make eq def
R24026:24026 compcert.lib.Integers <> x var
R24024:24024 compcert.lib.Integers <> x var
R24030:24033 Coq.Init.Datatypes <> true constr
R24065:24071 compcert.lib.Integers Make eq_spec thm
R24085:24086 compcert.lib.Integers Make eq def
R24065:24071 compcert.lib.Integers Make eq_spec thm
R24085:24086 compcert.lib.Integers Make eq def
prf 24128:24135 Make eq_false
R24156:24159 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24166:24168 Coq.Init.Logic <> :type_scope:x_'='_x not
R24160:24161 compcert.lib.Integers Make eq def
R24165:24165 compcert.lib.Integers <> y var
R24163:24163 compcert.lib.Integers <> x var
R24169:24173 Coq.Init.Datatypes <> false constr
R24151:24154 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R24150:24150 compcert.lib.Integers <> x var
R24155:24155 compcert.lib.Integers <> y var
R24205:24211 compcert.lib.Integers Make eq_spec thm
R24225:24226 compcert.lib.Integers Make eq def
R24205:24211 compcert.lib.Integers Make eq_spec thm
R24225:24226 compcert.lib.Integers Make eq def
prf 24268:24276 Make eq_signed
R24299:24301 Coq.Init.Logic <> :type_scope:x_'='_x not
R24293:24294 compcert.lib.Integers Make eq def
R24298:24298 compcert.lib.Integers <> y var
R24296:24296 compcert.lib.Integers <> x var
R24305:24307 compcert.lib.Coqlib <> zeq def
R24321:24326 compcert.lib.Integers Make signed def
R24328:24328 compcert.lib.Integers <> y var
R24310:24315 compcert.lib.Integers Make signed def
R24317:24317 compcert.lib.Integers <> x var
R24346:24350 Coq.Init.Datatypes <> false constr
R24336:24339 Coq.Init.Datatypes <> true constr
R24379:24380 compcert.lib.Integers Make eq def
R24382:24388 compcert.lib.Integers Make eq_spec thm
R24414:24421 compcert.lib.Coqlib <> zeq_true thm
R24414:24421 compcert.lib.Coqlib <> zeq_true thm
R24414:24421 compcert.lib.Coqlib <> zeq_true thm
R24442:24444 compcert.lib.Coqlib <> zeq def
R24458:24463 compcert.lib.Integers Make signed def
R24447:24452 compcert.lib.Integers Make signed def
R24442:24444 compcert.lib.Coqlib <> zeq def
R24458:24463 compcert.lib.Integers Make signed def
R24447:24452 compcert.lib.Integers Make signed def
R24498:24508 compcert.lib.Integers Make repr_signed thm
R24498:24508 compcert.lib.Integers Make repr_signed thm
R24498:24508 compcert.lib.Integers Make repr_signed thm
R24526:24536 compcert.lib.Integers Make repr_signed thm
R24526:24536 compcert.lib.Integers Make repr_signed thm
R24526:24536 compcert.lib.Integers Make repr_signed thm
prf 24602:24613 Make add_unsigned
R24635:24637 Coq.Init.Logic <> :type_scope:x_'='_x not
R24628:24630 compcert.lib.Integers Make add def
R24634:24634 compcert.lib.Integers <> y var
R24632:24632 compcert.lib.Integers <> x var
R24638:24641 compcert.lib.Integers Make repr def
R24654:24656 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R24644:24651 compcert.lib.Integers Make unsigned def
R24653:24653 compcert.lib.Integers <> x var
R24657:24664 compcert.lib.Integers Make unsigned def
R24666:24666 compcert.lib.Integers <> y var
prf 24712:24721 Make add_signed
R24743:24745 Coq.Init.Logic <> :type_scope:x_'='_x not
R24736:24738 compcert.lib.Integers Make add def
R24742:24742 compcert.lib.Integers <> y var
R24740:24740 compcert.lib.Integers <> x var
R24746:24749 compcert.lib.Integers Make repr def
R24760:24762 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R24752:24757 compcert.lib.Integers Make signed def
R24759:24759 compcert.lib.Integers <> x var
R24763:24768 compcert.lib.Integers Make signed def
R24770:24770 compcert.lib.Integers <> y var
R24799:24810 compcert.lib.Integers Make add_unsigned thm
R24799:24810 compcert.lib.Integers Make add_unsigned thm
R24799:24810 compcert.lib.Integers Make add_unsigned thm
R24819:24830 compcert.lib.Integers Make eqm_samerepr thm
R24819:24830 compcert.lib.Integers Make eqm_samerepr thm
R24841:24847 compcert.lib.Integers Make eqm_add thm
R24856:24862 compcert.lib.Integers Make eqm_sym thm
R24871:24889 compcert.lib.Integers Make eqm_signed_unsigned thm
R24841:24847 compcert.lib.Integers Make eqm_add thm
R24856:24862 compcert.lib.Integers Make eqm_sym thm
R24856:24862 compcert.lib.Integers Make eqm_sym thm
R24871:24889 compcert.lib.Integers Make eqm_signed_unsigned thm
R24871:24889 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 24906:24915 Make add_commut
R24937:24939 Coq.Init.Logic <> :type_scope:x_'='_x not
R24930:24932 compcert.lib.Integers Make add def
R24936:24936 compcert.lib.Integers <> y var
R24934:24934 compcert.lib.Integers <> x var
R24940:24942 compcert.lib.Integers Make add def
R24946:24946 compcert.lib.Integers <> x var
R24944:24944 compcert.lib.Integers <> y var
R24971:24973 compcert.lib.Integers Make add def
prf 25004:25011 Make add_zero
R25034:25036 Coq.Init.Logic <> :type_scope:x_'='_x not
R25024:25026 compcert.lib.Integers Make add def
R25030:25033 compcert.lib.Integers Make zero def
R25028:25028 compcert.lib.Integers <> x var
R25037:25037 compcert.lib.Integers <> x var
R25064:25066 compcert.lib.Integers Make add def
R25077:25089 compcert.lib.Integers Make unsigned_zero thm
R25077:25089 compcert.lib.Integers Make unsigned_zero thm
R25077:25089 compcert.lib.Integers Make unsigned_zero thm
R25102:25110 Coq.ZArith.BinInt <> Zplus_0_r syndef
R25102:25110 Coq.ZArith.BinInt <> Zplus_0_r syndef
R25102:25110 Coq.ZArith.BinInt <> Zplus_0_r syndef
R25119:25131 compcert.lib.Integers Make repr_unsigned thm
R25119:25131 compcert.lib.Integers Make repr_unsigned thm
prf 25148:25157 Make add_zero_l
R25180:25182 Coq.Init.Logic <> :type_scope:x_'='_x not
R25170:25172 compcert.lib.Integers Make add def
R25179:25179 compcert.lib.Integers <> x var
R25174:25177 compcert.lib.Integers Make zero def
R25183:25183 compcert.lib.Integers <> x var
R25211:25220 compcert.lib.Integers Make add_commut thm
R25211:25220 compcert.lib.Integers Make add_commut thm
R25211:25220 compcert.lib.Integers Make add_commut thm
R25229:25236 compcert.lib.Integers Make add_zero thm
R25229:25236 compcert.lib.Integers Make add_zero thm
prf 25253:25261 Make add_assoc
R25293:25295 Coq.Init.Logic <> :type_scope:x_'='_x not
R25278:25280 compcert.lib.Integers Make add def
R25292:25292 compcert.lib.Integers <> z var
R25283:25285 compcert.lib.Integers Make add def
R25289:25289 compcert.lib.Integers <> y var
R25287:25287 compcert.lib.Integers <> x var
R25296:25298 compcert.lib.Integers Make add def
R25303:25305 compcert.lib.Integers Make add def
R25309:25309 compcert.lib.Integers <> z var
R25307:25307 compcert.lib.Integers <> y var
R25300:25300 compcert.lib.Integers <> x var
R25337:25339 compcert.lib.Integers Make add def
R25355:25362 compcert.lib.Integers Make unsigned def
R25355:25362 compcert.lib.Integers Make unsigned def
R25381:25388 compcert.lib.Integers Make unsigned def
R25381:25388 compcert.lib.Integers Make unsigned def
R25407:25414 compcert.lib.Integers Make unsigned def
R25407:25414 compcert.lib.Integers Make unsigned def
R25428:25439 compcert.lib.Integers Make eqm_samerepr thm
R25428:25439 compcert.lib.Integers Make eqm_samerepr thm
R25466:25466 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25474:25477 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25469:25471 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25450:25458 compcert.lib.Integers Make eqm_trans thm
R25466:25466 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25474:25477 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25469:25471 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25450:25458 compcert.lib.Integers Make eqm_trans thm
R25514:25524 Coq.ZArith.BinInt <> Zplus_assoc syndef
R25514:25524 Coq.ZArith.BinInt <> Zplus_assoc syndef
R25514:25524 Coq.ZArith.BinInt <> Zplus_assoc syndef
prf 25557:25566 Make add_permut
R25598:25600 Coq.Init.Logic <> :type_scope:x_'='_x not
R25583:25585 compcert.lib.Integers Make add def
R25590:25592 compcert.lib.Integers Make add def
R25596:25596 compcert.lib.Integers <> z var
R25594:25594 compcert.lib.Integers <> y var
R25587:25587 compcert.lib.Integers <> x var
R25601:25603 compcert.lib.Integers Make add def
R25608:25610 compcert.lib.Integers Make add def
R25614:25614 compcert.lib.Integers <> z var
R25612:25612 compcert.lib.Integers <> x var
R25605:25605 compcert.lib.Integers <> y var
R25644:25653 compcert.lib.Integers Make add_commut thm
R25644:25653 compcert.lib.Integers Make add_commut thm
R25644:25653 compcert.lib.Integers Make add_commut thm
R25672:25680 compcert.lib.Integers Make add_assoc thm
R25672:25680 compcert.lib.Integers Make add_assoc thm
R25672:25680 compcert.lib.Integers Make add_assoc thm
R25689:25698 compcert.lib.Integers Make add_commut thm
R25689:25698 compcert.lib.Integers Make add_commut thm
prf 25715:25726 Make add_neg_zero
R25752:25754 Coq.Init.Logic <> :type_scope:x_'='_x not
R25739:25741 compcert.lib.Integers Make add def
R25746:25748 compcert.lib.Integers Make neg def
R25750:25750 compcert.lib.Integers <> x var
R25743:25743 compcert.lib.Integers <> x var
R25755:25758 compcert.lib.Integers Make zero def
R25785:25787 compcert.lib.Integers Make add def
R25790:25792 compcert.lib.Integers Make neg def
R25795:25798 compcert.lib.Integers Make zero def
R25807:25818 compcert.lib.Integers Make eqm_samerepr thm
R25807:25818 compcert.lib.Integers Make eqm_samerepr thm
R25849:25852 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25867:25867 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25839:25846 compcert.lib.Integers Make unsigned def
R25853:25855 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R25866:25866 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R25856:25863 compcert.lib.Integers Make unsigned def
R25849:25852 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25867:25867 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25839:25846 compcert.lib.Integers Make unsigned def
R25853:25855 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R25866:25866 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R25856:25863 compcert.lib.Integers Make unsigned def
prf 25910:25927 Make unsigned_add_carry
R25964:25966 Coq.Init.Logic <> :type_scope:x_'='_x not
R25946:25953 compcert.lib.Integers Make unsigned def
R25956:25958 compcert.lib.Integers Make add def
R25962:25962 compcert.lib.Integers <> y var
R25960:25960 compcert.lib.Integers <> x var
R25990:25992 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R25977:25979 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25967:25974 compcert.lib.Integers Make unsigned def
R25976:25976 compcert.lib.Integers <> x var
R25980:25987 compcert.lib.Integers Make unsigned def
R25989:25989 compcert.lib.Integers <> y var
R26022:26024 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R25993:26000 compcert.lib.Integers Make unsigned def
R26003:26011 compcert.lib.Integers Make add_carry def
R26017:26020 compcert.lib.Integers Make zero def
R26015:26015 compcert.lib.Integers <> y var
R26013:26013 compcert.lib.Integers <> x var
R26025:26031 compcert.lib.Integers Make modulus def
R26060:26062 compcert.lib.Integers Make add def
R26065:26073 compcert.lib.Integers Make add_carry def
R26084:26096 compcert.lib.Integers Make unsigned_zero thm
R26084:26096 compcert.lib.Integers Make unsigned_zero thm
R26084:26096 compcert.lib.Integers Make unsigned_zero thm
R26107:26115 Coq.ZArith.BinInt <> Zplus_0_r syndef
R26107:26115 Coq.ZArith.BinInt <> Zplus_0_r syndef
R26107:26115 Coq.ZArith.BinInt <> Zplus_0_r syndef
R26128:26143 compcert.lib.Integers Make unsigned_repr_eq thm
R26128:26143 compcert.lib.Integers Make unsigned_repr_eq thm
R26128:26143 compcert.lib.Integers Make unsigned_repr_eq thm
R26160:26173 compcert.lib.Integers Make unsigned_range thm
R26179:26192 compcert.lib.Integers Make unsigned_range thm
R26160:26173 compcert.lib.Integers Make unsigned_range thm
R26179:26192 compcert.lib.Integers Make unsigned_range thm
R26218:26220 compcert.lib.Coqlib <> zlt def
R26248:26254 compcert.lib.Integers Make modulus def
R26233:26235 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26223:26230 compcert.lib.Integers Make unsigned def
R26236:26243 compcert.lib.Integers Make unsigned def
R26218:26220 compcert.lib.Coqlib <> zlt def
R26248:26254 compcert.lib.Integers Make modulus def
R26233:26235 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26223:26230 compcert.lib.Integers Make unsigned def
R26236:26243 compcert.lib.Integers Make unsigned def
R26268:26280 compcert.lib.Integers Make unsigned_zero thm
R26268:26280 compcert.lib.Integers Make unsigned_zero thm
R26268:26280 compcert.lib.Integers Make unsigned_zero thm
R26289:26299 compcert.lib.Coqlib <> Zmod_unique thm
R26289:26299 compcert.lib.Coqlib <> Zmod_unique thm
R26333:26344 compcert.lib.Integers Make unsigned_one thm
R26333:26344 compcert.lib.Integers Make unsigned_one thm
R26333:26344 compcert.lib.Integers Make unsigned_one thm
R26353:26363 compcert.lib.Coqlib <> Zmod_unique thm
R26353:26363 compcert.lib.Coqlib <> Zmod_unique thm
prf 26403:26421 Make unsigned_add_either
R26484:26489 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R26458:26460 Coq.Init.Logic <> :type_scope:x_'='_x not
R26440:26447 compcert.lib.Integers Make unsigned def
R26450:26452 compcert.lib.Integers Make add def
R26456:26456 compcert.lib.Integers <> y var
R26454:26454 compcert.lib.Integers <> x var
R26471:26473 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26461:26468 compcert.lib.Integers Make unsigned def
R26470:26470 compcert.lib.Integers <> x var
R26474:26481 compcert.lib.Integers Make unsigned def
R26483:26483 compcert.lib.Integers <> y var
R26508:26510 Coq.Init.Logic <> :type_scope:x_'='_x not
R26490:26497 compcert.lib.Integers Make unsigned def
R26500:26502 compcert.lib.Integers Make add def
R26506:26506 compcert.lib.Integers <> y var
R26504:26504 compcert.lib.Integers <> x var
R26534:26536 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R26521:26523 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26511:26518 compcert.lib.Integers Make unsigned def
R26520:26520 compcert.lib.Integers <> x var
R26524:26531 compcert.lib.Integers Make unsigned def
R26533:26533 compcert.lib.Integers <> y var
R26537:26543 compcert.lib.Integers Make modulus def
R26571:26588 compcert.lib.Integers Make unsigned_add_carry thm
R26571:26588 compcert.lib.Integers Make unsigned_add_carry thm
R26571:26588 compcert.lib.Integers Make unsigned_add_carry thm
R26598:26606 compcert.lib.Integers Make add_carry def
R26619:26631 compcert.lib.Integers Make unsigned_zero thm
R26619:26631 compcert.lib.Integers Make unsigned_zero thm
R26619:26631 compcert.lib.Integers Make unsigned_zero thm
R26642:26650 Coq.ZArith.BinInt <> Zplus_0_r syndef
R26642:26650 Coq.ZArith.BinInt <> Zplus_0_r syndef
R26642:26650 Coq.ZArith.BinInt <> Zplus_0_r syndef
R26665:26667 compcert.lib.Coqlib <> zlt def
R26695:26701 compcert.lib.Integers Make modulus def
R26680:26682 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26670:26677 compcert.lib.Integers Make unsigned def
R26683:26690 compcert.lib.Integers Make unsigned def
R26665:26667 compcert.lib.Coqlib <> zlt def
R26695:26701 compcert.lib.Integers Make modulus def
R26680:26682 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26670:26677 compcert.lib.Integers Make unsigned def
R26683:26690 compcert.lib.Integers Make unsigned def
R26715:26727 compcert.lib.Integers Make unsigned_zero thm
R26715:26727 compcert.lib.Integers Make unsigned_zero thm
R26715:26727 compcert.lib.Integers Make unsigned_zero thm
R26753:26764 compcert.lib.Integers Make unsigned_one thm
R26753:26764 compcert.lib.Integers Make unsigned_one thm
R26753:26764 compcert.lib.Integers Make unsigned_one thm
prf 26829:26836 Make neg_repr
R26861:26863 Coq.Init.Logic <> :type_scope:x_'='_x not
R26849:26851 compcert.lib.Integers Make neg def
R26854:26857 compcert.lib.Integers Make repr def
R26859:26859 compcert.lib.Integers <> z var
R26864:26867 compcert.lib.Integers Make repr def
R26870:26870 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R26871:26871 compcert.lib.Integers <> z var
R26899:26901 compcert.lib.Integers Make neg def
R26910:26921 compcert.lib.Integers Make eqm_samerepr thm
R26910:26921 compcert.lib.Integers Make eqm_samerepr thm
prf 26954:26961 Make neg_zero
R26972:26974 Coq.Init.Logic <> :type_scope:x_'='_x not
R26964:26966 compcert.lib.Integers Make neg def
R26968:26971 compcert.lib.Integers Make zero def
R26975:26978 compcert.lib.Integers Make zero def
R26997:26999 compcert.lib.Integers Make neg def
R27010:27022 compcert.lib.Integers Make unsigned_zero thm
R27010:27022 compcert.lib.Integers Make unsigned_zero thm
R27010:27022 compcert.lib.Integers Make unsigned_zero thm
prf 27045:27058 Make neg_involutive
R27082:27084 Coq.Init.Logic <> :type_scope:x_'='_x not
R27071:27073 compcert.lib.Integers Make neg def
R27076:27078 compcert.lib.Integers Make neg def
R27080:27080 compcert.lib.Integers <> x var
R27085:27085 compcert.lib.Integers <> x var
R27112:27114 compcert.lib.Integers Make neg def
R27125:27135 compcert.lib.Integers Make eqm_repr_eq thm
R27125:27135 compcert.lib.Integers Make eqm_repr_eq thm
R27145:27153 compcert.lib.Integers Make eqm_trans thm
R27145:27153 compcert.lib.Integers Make eqm_trans thm
R27162:27168 compcert.lib.Integers Make eqm_neg thm
R27162:27168 compcert.lib.Integers Make eqm_neg thm
R27179:27197 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R27179:27197 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R27206:27213 compcert.lib.Integers Make eqm_refl thm
R27206:27213 compcert.lib.Integers Make eqm_refl thm
R27222:27230 compcert.lib.Integers Make eqm_refl2 thm
R27222:27230 compcert.lib.Integers Make eqm_refl2 thm
prf 27254:27266 Make neg_add_distr
R27293:27295 Coq.Init.Logic <> :type_scope:x_'='_x not
R27281:27283 compcert.lib.Integers Make neg def
R27285:27287 compcert.lib.Integers Make add def
R27291:27291 compcert.lib.Integers <> y var
R27289:27289 compcert.lib.Integers <> x var
R27296:27298 compcert.lib.Integers Make add def
R27309:27311 compcert.lib.Integers Make neg def
R27313:27313 compcert.lib.Integers <> y var
R27301:27303 compcert.lib.Integers Make neg def
R27305:27305 compcert.lib.Integers <> x var
R27341:27343 compcert.lib.Integers Make neg def
R27346:27348 compcert.lib.Integers Make add def
R27357:27368 compcert.lib.Integers Make eqm_samerepr thm
R27357:27368 compcert.lib.Integers Make eqm_samerepr thm
R27395:27397 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27421:27421 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27408:27410 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27398:27405 compcert.lib.Integers Make unsigned def
R27411:27418 compcert.lib.Integers Make unsigned def
R27379:27387 compcert.lib.Integers Make eqm_trans thm
R27395:27397 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27421:27421 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27408:27410 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27398:27405 compcert.lib.Integers Make unsigned def
R27411:27418 compcert.lib.Integers Make unsigned def
R27379:27387 compcert.lib.Integers Make eqm_trans thm
R27454:27456 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27480:27480 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27467:27469 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27457:27464 compcert.lib.Integers Make unsigned def
R27470:27477 compcert.lib.Integers Make unsigned def
R27494:27494 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27507:27511 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27524:27524 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27495:27496 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27497:27504 compcert.lib.Integers Make unsigned def
R27512:27513 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27514:27521 compcert.lib.Integers Make unsigned def
R27494:27494 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27507:27511 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27524:27524 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27495:27496 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27497:27504 compcert.lib.Integers Make unsigned def
R27512:27513 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27514:27521 compcert.lib.Integers Make unsigned def
R27454:27456 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27480:27480 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27467:27469 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27457:27464 compcert.lib.Integers Make unsigned def
R27470:27477 compcert.lib.Integers Make unsigned def
prf 27604:27613 Make sub_zero_l
R27636:27638 Coq.Init.Logic <> :type_scope:x_'='_x not
R27626:27628 compcert.lib.Integers Make sub def
R27632:27635 compcert.lib.Integers Make zero def
R27630:27630 compcert.lib.Integers <> x var
R27639:27639 compcert.lib.Integers <> x var
R27666:27668 compcert.lib.Integers Make sub def
R27679:27691 compcert.lib.Integers Make unsigned_zero thm
R27679:27691 compcert.lib.Integers Make unsigned_zero thm
R27679:27691 compcert.lib.Integers Make unsigned_zero thm
R27715:27717 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R27705:27712 compcert.lib.Integers Make unsigned def
R27727:27734 compcert.lib.Integers Make unsigned def
R27727:27734 compcert.lib.Integers Make unsigned def
R27715:27717 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R27705:27712 compcert.lib.Integers Make unsigned def
R27755:27767 compcert.lib.Integers Make repr_unsigned thm
R27755:27767 compcert.lib.Integers Make repr_unsigned thm
prf 27784:27793 Make sub_zero_r
R27816:27818 Coq.Init.Logic <> :type_scope:x_'='_x not
R27806:27808 compcert.lib.Integers Make sub def
R27815:27815 compcert.lib.Integers <> x var
R27810:27813 compcert.lib.Integers Make zero def
R27819:27821 compcert.lib.Integers Make neg def
R27823:27823 compcert.lib.Integers <> x var
R27850:27852 compcert.lib.Integers Make sub def
R27855:27857 compcert.lib.Integers Make neg def
R27868:27880 compcert.lib.Integers Make unsigned_zero thm
R27868:27880 compcert.lib.Integers Make unsigned_zero thm
R27868:27880 compcert.lib.Integers Make unsigned_zero thm
prf 27903:27913 Make sub_add_opp
R27935:27937 Coq.Init.Logic <> :type_scope:x_'='_x not
R27928:27930 compcert.lib.Integers Make sub def
R27934:27934 compcert.lib.Integers <> y var
R27932:27932 compcert.lib.Integers <> x var
R27938:27940 compcert.lib.Integers Make add def
R27945:27947 compcert.lib.Integers Make neg def
R27949:27949 compcert.lib.Integers <> y var
R27942:27942 compcert.lib.Integers <> x var
R27977:27979 compcert.lib.Integers Make sub def
R27982:27984 compcert.lib.Integers Make add def
R27987:27989 compcert.lib.Integers Make neg def
R27998:28009 compcert.lib.Integers Make eqm_samerepr thm
R27998:28009 compcert.lib.Integers Make eqm_samerepr thm
R28020:28026 compcert.lib.Integers Make eqm_add thm
R28020:28026 compcert.lib.Integers Make eqm_add thm
prf 28059:28066 Make sub_idem
R28086:28088 Coq.Init.Logic <> :type_scope:x_'='_x not
R28079:28081 compcert.lib.Integers Make sub def
R28085:28085 compcert.lib.Integers <> x var
R28083:28083 compcert.lib.Integers <> x var
R28089:28092 compcert.lib.Integers Make zero def
R28119:28121 compcert.lib.Integers Make sub def
R28131:28134 compcert.lib.Integers Make zero def
prf 28165:28173 Make sub_add_l
R28205:28207 Coq.Init.Logic <> :type_scope:x_'='_x not
R28190:28192 compcert.lib.Integers Make sub def
R28204:28204 compcert.lib.Integers <> z var
R28195:28197 compcert.lib.Integers Make add def
R28201:28201 compcert.lib.Integers <> y var
R28199:28199 compcert.lib.Integers <> x var
R28208:28210 compcert.lib.Integers Make add def
R28222:28222 compcert.lib.Integers <> y var
R28213:28215 compcert.lib.Integers Make sub def
R28219:28219 compcert.lib.Integers <> z var
R28217:28217 compcert.lib.Integers <> x var
R28257:28267 compcert.lib.Integers Make sub_add_opp thm
R28257:28267 compcert.lib.Integers Make sub_add_opp thm
R28257:28267 compcert.lib.Integers Make sub_add_opp thm
R28257:28267 compcert.lib.Integers Make sub_add_opp thm
R28257:28267 compcert.lib.Integers Make sub_add_opp thm
R28257:28267 compcert.lib.Integers Make sub_add_opp thm
R28287:28295 compcert.lib.Integers Make add_assoc thm
R28287:28295 compcert.lib.Integers Make add_assoc thm
R28287:28295 compcert.lib.Integers Make add_assoc thm
R28287:28295 compcert.lib.Integers Make add_assoc thm
R28287:28295 compcert.lib.Integers Make add_assoc thm
R28287:28295 compcert.lib.Integers Make add_assoc thm
R28311:28320 compcert.lib.Integers Make add_commut thm
R28311:28320 compcert.lib.Integers Make add_commut thm
prf 28337:28345 Make sub_add_r
R28377:28379 Coq.Init.Logic <> :type_scope:x_'='_x not
R28362:28364 compcert.lib.Integers Make sub def
R28369:28371 compcert.lib.Integers Make add def
R28375:28375 compcert.lib.Integers <> z var
R28373:28373 compcert.lib.Integers <> y var
R28366:28366 compcert.lib.Integers <> x var
R28380:28382 compcert.lib.Integers Make add def
R28395:28397 compcert.lib.Integers Make neg def
R28399:28399 compcert.lib.Integers <> y var
R28385:28387 compcert.lib.Integers Make sub def
R28391:28391 compcert.lib.Integers <> z var
R28389:28389 compcert.lib.Integers <> x var
R28435:28445 compcert.lib.Integers Make sub_add_opp thm
R28435:28445 compcert.lib.Integers Make sub_add_opp thm
R28435:28445 compcert.lib.Integers Make sub_add_opp thm
R28435:28445 compcert.lib.Integers Make sub_add_opp thm
R28435:28445 compcert.lib.Integers Make sub_add_opp thm
R28435:28445 compcert.lib.Integers Make sub_add_opp thm
R28458:28470 compcert.lib.Integers Make neg_add_distr thm
R28458:28470 compcert.lib.Integers Make neg_add_distr thm
R28458:28470 compcert.lib.Integers Make neg_add_distr thm
R28481:28490 compcert.lib.Integers Make add_permut thm
R28481:28490 compcert.lib.Integers Make add_permut thm
R28481:28490 compcert.lib.Integers Make add_permut thm
R28499:28508 compcert.lib.Integers Make add_commut thm
R28499:28508 compcert.lib.Integers Make add_commut thm
prf 28525:28535 Make sub_shifted
R28579:28581 Coq.Init.Logic <> :type_scope:x_'='_x not
R28556:28558 compcert.lib.Integers Make sub def
R28571:28573 compcert.lib.Integers Make add def
R28577:28577 compcert.lib.Integers <> z var
R28575:28575 compcert.lib.Integers <> y var
R28561:28563 compcert.lib.Integers Make add def
R28567:28567 compcert.lib.Integers <> z var
R28565:28565 compcert.lib.Integers <> x var
R28582:28584 compcert.lib.Integers Make sub def
R28588:28588 compcert.lib.Integers <> y var
R28586:28586 compcert.lib.Integers <> x var
R28616:28626 compcert.lib.Integers Make sub_add_opp thm
R28616:28626 compcert.lib.Integers Make sub_add_opp thm
R28616:28626 compcert.lib.Integers Make sub_add_opp thm
R28637:28649 compcert.lib.Integers Make neg_add_distr thm
R28637:28649 compcert.lib.Integers Make neg_add_distr thm
R28637:28649 compcert.lib.Integers Make neg_add_distr thm
R28662:28670 compcert.lib.Integers Make add_assoc thm
R28662:28670 compcert.lib.Integers Make add_assoc thm
R28662:28670 compcert.lib.Integers Make add_assoc thm
R28684:28693 compcert.lib.Integers Make add_commut thm
R28704:28706 compcert.lib.Integers Make neg def
R28696:28698 compcert.lib.Integers Make neg def
R28684:28693 compcert.lib.Integers Make add_commut thm
R28704:28706 compcert.lib.Integers Make neg def
R28696:28698 compcert.lib.Integers Make neg def
R28684:28693 compcert.lib.Integers Make add_commut thm
R28704:28706 compcert.lib.Integers Make neg def
R28696:28698 compcert.lib.Integers Make neg def
R28727:28735 compcert.lib.Integers Make add_assoc thm
R28727:28735 compcert.lib.Integers Make add_assoc thm
R28727:28735 compcert.lib.Integers Make add_assoc thm
R28749:28760 compcert.lib.Integers Make add_neg_zero thm
R28749:28760 compcert.lib.Integers Make add_neg_zero thm
R28749:28760 compcert.lib.Integers Make add_neg_zero thm
R28774:28783 compcert.lib.Integers Make add_commut thm
R28785:28788 compcert.lib.Integers Make zero def
R28774:28783 compcert.lib.Integers Make add_commut thm
R28785:28788 compcert.lib.Integers Make zero def
R28774:28783 compcert.lib.Integers Make add_commut thm
R28785:28788 compcert.lib.Integers Make zero def
R28800:28807 compcert.lib.Integers Make add_zero thm
R28800:28807 compcert.lib.Integers Make add_zero thm
R28800:28807 compcert.lib.Integers Make add_zero thm
R28828:28838 compcert.lib.Integers Make sub_add_opp thm
R28828:28838 compcert.lib.Integers Make sub_add_opp thm
prf 28855:28864 Make sub_signed
R28888:28890 Coq.Init.Logic <> :type_scope:x_'='_x not
R28881:28883 compcert.lib.Integers Make sub def
R28887:28887 compcert.lib.Integers <> y var
R28885:28885 compcert.lib.Integers <> x var
R28891:28894 compcert.lib.Integers Make repr def
R28905:28907 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R28897:28902 compcert.lib.Integers Make signed def
R28904:28904 compcert.lib.Integers <> x var
R28908:28913 compcert.lib.Integers Make signed def
R28915:28915 compcert.lib.Integers <> y var
R28943:28945 compcert.lib.Integers Make sub def
R28954:28965 compcert.lib.Integers Make eqm_samerepr thm
R28954:28965 compcert.lib.Integers Make eqm_samerepr thm
R28976:28982 compcert.lib.Integers Make eqm_sub thm
R28991:28997 compcert.lib.Integers Make eqm_sym thm
R29006:29024 compcert.lib.Integers Make eqm_signed_unsigned thm
R28976:28982 compcert.lib.Integers Make eqm_sub thm
R28991:28997 compcert.lib.Integers Make eqm_sym thm
R28991:28997 compcert.lib.Integers Make eqm_sym thm
R29006:29024 compcert.lib.Integers Make eqm_signed_unsigned thm
R29006:29024 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 29041:29059 Make unsigned_sub_borrow
R29096:29098 Coq.Init.Logic <> :type_scope:x_'='_x not
R29078:29085 compcert.lib.Integers Make unsigned def
R29088:29090 compcert.lib.Integers Make sub def
R29094:29094 compcert.lib.Integers <> y var
R29092:29092 compcert.lib.Integers <> x var
R29122:29124 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R29109:29111 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R29099:29106 compcert.lib.Integers Make unsigned def
R29108:29108 compcert.lib.Integers <> x var
R29112:29119 compcert.lib.Integers Make unsigned def
R29121:29121 compcert.lib.Integers <> y var
R29155:29157 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R29125:29132 compcert.lib.Integers Make unsigned def
R29135:29144 compcert.lib.Integers Make sub_borrow def
R29150:29153 compcert.lib.Integers Make zero def
R29148:29148 compcert.lib.Integers <> y var
R29146:29146 compcert.lib.Integers <> x var
R29158:29164 compcert.lib.Integers Make modulus def
R29193:29195 compcert.lib.Integers Make sub def
R29198:29207 compcert.lib.Integers Make sub_borrow def
R29218:29230 compcert.lib.Integers Make unsigned_zero thm
R29218:29230 compcert.lib.Integers Make unsigned_zero thm
R29218:29230 compcert.lib.Integers Make unsigned_zero thm
R29241:29250 Coq.ZArith.BinInt <> Zminus_0_r syndef
R29241:29250 Coq.ZArith.BinInt <> Zminus_0_r syndef
R29241:29250 Coq.ZArith.BinInt <> Zminus_0_r syndef
R29263:29278 compcert.lib.Integers Make unsigned_repr_eq thm
R29263:29278 compcert.lib.Integers Make unsigned_repr_eq thm
R29263:29278 compcert.lib.Integers Make unsigned_repr_eq thm
R29295:29308 compcert.lib.Integers Make unsigned_range thm
R29314:29327 compcert.lib.Integers Make unsigned_range thm
R29295:29308 compcert.lib.Integers Make unsigned_range thm
R29314:29327 compcert.lib.Integers Make unsigned_range thm
R29353:29355 compcert.lib.Coqlib <> zlt def
R29368:29370 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R29358:29365 compcert.lib.Integers Make unsigned def
R29371:29378 compcert.lib.Integers Make unsigned def
R29353:29355 compcert.lib.Coqlib <> zlt def
R29368:29370 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R29358:29365 compcert.lib.Integers Make unsigned def
R29371:29378 compcert.lib.Integers Make unsigned def
R29397:29408 compcert.lib.Integers Make unsigned_one thm
R29397:29408 compcert.lib.Integers Make unsigned_one thm
R29397:29408 compcert.lib.Integers Make unsigned_one thm
R29417:29427 compcert.lib.Coqlib <> Zmod_unique thm
R29417:29427 compcert.lib.Coqlib <> Zmod_unique thm
R29464:29476 compcert.lib.Integers Make unsigned_zero thm
R29464:29476 compcert.lib.Integers Make unsigned_zero thm
R29464:29476 compcert.lib.Integers Make unsigned_zero thm
R29485:29495 compcert.lib.Coqlib <> Zmod_unique thm
R29485:29495 compcert.lib.Coqlib <> Zmod_unique thm
prf 29573:29582 Make mul_commut
R29604:29606 Coq.Init.Logic <> :type_scope:x_'='_x not
R29597:29599 compcert.lib.Integers Make mul def
R29603:29603 compcert.lib.Integers <> y var
R29601:29601 compcert.lib.Integers <> x var
R29607:29609 compcert.lib.Integers Make mul def
R29613:29613 compcert.lib.Integers <> x var
R29611:29611 compcert.lib.Integers <> y var
R29640:29642 compcert.lib.Integers Make mul def
prf 29672:29679 Make mul_zero
R29702:29704 Coq.Init.Logic <> :type_scope:x_'='_x not
R29692:29694 compcert.lib.Integers Make mul def
R29698:29701 compcert.lib.Integers Make zero def
R29696:29696 compcert.lib.Integers <> x var
R29705:29708 compcert.lib.Integers Make zero def
R29735:29737 compcert.lib.Integers Make mul def
R29748:29760 compcert.lib.Integers Make unsigned_zero thm
R29748:29760 compcert.lib.Integers Make unsigned_zero thm
R29748:29760 compcert.lib.Integers Make unsigned_zero thm
R29772:29775 compcert.lib.Integers Make zero def
prf 29805:29811 Make mul_one
R29833:29835 Coq.Init.Logic <> :type_scope:x_'='_x not
R29824:29826 compcert.lib.Integers Make mul def
R29830:29832 compcert.lib.Integers Make one def
R29828:29828 compcert.lib.Integers <> x var
R29836:29836 compcert.lib.Integers <> x var
R29863:29865 compcert.lib.Integers Make mul def
R29876:29887 compcert.lib.Integers Make unsigned_one thm
R29876:29887 compcert.lib.Integers Make unsigned_one thm
R29876:29887 compcert.lib.Integers Make unsigned_one thm
R29906:29909 compcert.lib.Integers Make repr def
R29912:29919 compcert.lib.Integers Make unsigned def
R29906:29909 compcert.lib.Integers Make repr def
R29912:29919 compcert.lib.Integers Make unsigned def
R29947:29959 compcert.lib.Integers Make repr_unsigned thm
R29947:29959 compcert.lib.Integers Make repr_unsigned thm
prf 29976:29983 Make mul_mone
R30006:30008 Coq.Init.Logic <> :type_scope:x_'='_x not
R29996:29998 compcert.lib.Integers Make mul def
R30002:30005 compcert.lib.Integers Make mone def
R30000:30000 compcert.lib.Integers <> x var
R30009:30011 compcert.lib.Integers Make neg def
R30013:30013 compcert.lib.Integers <> x var
R30040:30042 compcert.lib.Integers Make mul def
R30045:30047 compcert.lib.Integers Make neg def
R30058:30070 compcert.lib.Integers Make unsigned_mone thm
R30058:30070 compcert.lib.Integers Make unsigned_mone thm
R30058:30070 compcert.lib.Integers Make unsigned_mone thm
R30081:30092 compcert.lib.Integers Make eqm_samerepr thm
R30081:30092 compcert.lib.Integers Make eqm_samerepr thm
R30106:30106 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R30107:30114 compcert.lib.Integers Make unsigned def
R30126:30128 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30129:30136 compcert.lib.Integers Make unsigned def
R30126:30128 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30129:30136 compcert.lib.Integers Make unsigned def
R30106:30106 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R30107:30114 compcert.lib.Integers Make unsigned def
R30172:30175 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30187:30187 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30162:30169 compcert.lib.Integers Make unsigned def
R30183:30185 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30176:30182 compcert.lib.Integers Make modulus def
R30216:30218 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30206:30208 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30196:30203 compcert.lib.Integers Make unsigned def
R30209:30215 compcert.lib.Integers Make modulus def
R30219:30226 compcert.lib.Integers Make unsigned def
R30216:30218 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30206:30208 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30196:30203 compcert.lib.Integers Make unsigned def
R30209:30215 compcert.lib.Integers Make modulus def
R30219:30226 compcert.lib.Integers Make unsigned def
R30172:30175 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30187:30187 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30162:30169 compcert.lib.Integers Make unsigned def
R30183:30185 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30176:30182 compcert.lib.Integers Make modulus def
R30248:30254 compcert.lib.Integers Make eqm_sub thm
R30248:30254 compcert.lib.Integers Make eqm_sub thm
R30265:30272 compcert.lib.Integers Make unsigned def
R30265:30272 compcert.lib.Integers Make unsigned def
R30291:30298 compcert.lib.Integers Make eqm_refl thm
R30291:30298 compcert.lib.Integers Make eqm_refl thm
prf 30315:30323 Make mul_assoc
R30355:30357 Coq.Init.Logic <> :type_scope:x_'='_x not
R30340:30342 compcert.lib.Integers Make mul def
R30354:30354 compcert.lib.Integers <> z var
R30345:30347 compcert.lib.Integers Make mul def
R30351:30351 compcert.lib.Integers <> y var
R30349:30349 compcert.lib.Integers <> x var
R30358:30360 compcert.lib.Integers Make mul def
R30365:30367 compcert.lib.Integers Make mul def
R30371:30371 compcert.lib.Integers <> z var
R30369:30369 compcert.lib.Integers <> y var
R30362:30362 compcert.lib.Integers <> x var
R30399:30401 compcert.lib.Integers Make mul def
R30417:30424 compcert.lib.Integers Make unsigned def
R30417:30424 compcert.lib.Integers Make unsigned def
R30443:30450 compcert.lib.Integers Make unsigned def
R30443:30450 compcert.lib.Integers Make unsigned def
R30469:30476 compcert.lib.Integers Make unsigned def
R30469:30476 compcert.lib.Integers Make unsigned def
R30490:30501 compcert.lib.Integers Make eqm_samerepr thm
R30490:30501 compcert.lib.Integers Make eqm_samerepr thm
R30526:30526 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30534:30537 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30529:30531 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30510:30518 compcert.lib.Integers Make eqm_trans thm
R30526:30526 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30534:30537 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30529:30531 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30510:30518 compcert.lib.Integers Make eqm_trans thm
R30574:30584 Coq.ZArith.BinInt <> Zmult_assoc syndef
R30574:30584 Coq.ZArith.BinInt <> Zmult_assoc syndef
R30574:30584 Coq.ZArith.BinInt <> Zmult_assoc syndef
prf 30617:30631 Make mul_add_distr_l
R30665:30667 Coq.Init.Logic <> :type_scope:x_'='_x not
R30650:30652 compcert.lib.Integers Make mul def
R30664:30664 compcert.lib.Integers <> z var
R30655:30657 compcert.lib.Integers Make add def
R30661:30661 compcert.lib.Integers <> y var
R30659:30659 compcert.lib.Integers <> x var
R30668:30670 compcert.lib.Integers Make add def
R30683:30685 compcert.lib.Integers Make mul def
R30689:30689 compcert.lib.Integers <> z var
R30687:30687 compcert.lib.Integers <> y var
R30673:30675 compcert.lib.Integers Make mul def
R30679:30679 compcert.lib.Integers <> z var
R30677:30677 compcert.lib.Integers <> x var
R30717:30719 compcert.lib.Integers Make mul def
R30722:30724 compcert.lib.Integers Make add def
R30735:30746 compcert.lib.Integers Make eqm_samerepr thm
R30735:30746 compcert.lib.Integers Make eqm_samerepr thm
R30762:30769 compcert.lib.Integers Make unsigned def
R30762:30769 compcert.lib.Integers Make unsigned def
R30788:30795 compcert.lib.Integers Make unsigned def
R30788:30795 compcert.lib.Integers Make unsigned def
R30814:30821 compcert.lib.Integers Make unsigned def
R30814:30821 compcert.lib.Integers Make unsigned def
R30851:30851 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30859:30862 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30854:30856 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R30835:30843 compcert.lib.Integers Make eqm_trans thm
R30851:30851 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30859:30862 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30854:30856 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R30835:30843 compcert.lib.Integers Make eqm_trans thm
R30897:30897 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30905:30908 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30900:30902 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R30926:30928 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R30921:30923 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30931:30933 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30926:30928 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R30921:30923 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30931:30933 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30897:30897 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30905:30908 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30900:30902 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
prf 30979:30993 Make mul_add_distr_r
R31027:31029 Coq.Init.Logic <> :type_scope:x_'='_x not
R31012:31014 compcert.lib.Integers Make mul def
R31019:31021 compcert.lib.Integers Make add def
R31025:31025 compcert.lib.Integers <> z var
R31023:31023 compcert.lib.Integers <> y var
R31016:31016 compcert.lib.Integers <> x var
R31030:31032 compcert.lib.Integers Make add def
R31045:31047 compcert.lib.Integers Make mul def
R31051:31051 compcert.lib.Integers <> z var
R31049:31049 compcert.lib.Integers <> x var
R31035:31037 compcert.lib.Integers Make mul def
R31041:31041 compcert.lib.Integers <> y var
R31039:31039 compcert.lib.Integers <> x var
R31080:31089 compcert.lib.Integers Make mul_commut thm
R31080:31089 compcert.lib.Integers Make mul_commut thm
R31080:31089 compcert.lib.Integers Make mul_commut thm
R31100:31114 compcert.lib.Integers Make mul_add_distr_l thm
R31100:31114 compcert.lib.Integers Make mul_add_distr_l thm
R31100:31114 compcert.lib.Integers Make mul_add_distr_l thm
R31132:31141 compcert.lib.Integers Make mul_commut thm
R31132:31141 compcert.lib.Integers Make mul_commut thm
R31132:31141 compcert.lib.Integers Make mul_commut thm
prf 31158:31172 Make neg_mul_distr_l
R31201:31203 Coq.Init.Logic <> :type_scope:x_'='_x not
R31189:31191 compcert.lib.Integers Make neg def
R31193:31195 compcert.lib.Integers Make mul def
R31199:31199 compcert.lib.Integers <> y var
R31197:31197 compcert.lib.Integers <> x var
R31204:31206 compcert.lib.Integers Make mul def
R31216:31216 compcert.lib.Integers <> y var
R31209:31211 compcert.lib.Integers Make neg def
R31213:31213 compcert.lib.Integers <> x var
R31243:31245 compcert.lib.Integers Make mul def
R31248:31250 compcert.lib.Integers Make neg def
R31266:31273 compcert.lib.Integers Make unsigned def
R31266:31273 compcert.lib.Integers Make unsigned def
R31291:31298 compcert.lib.Integers Make unsigned def
R31291:31298 compcert.lib.Integers Make unsigned def
R31312:31323 compcert.lib.Integers Make eqm_samerepr thm
R31312:31323 compcert.lib.Integers Make eqm_samerepr thm
R31348:31350 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31358:31358 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31353:31355 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31332:31340 compcert.lib.Integers Make eqm_trans thm
R31348:31350 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31358:31358 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31353:31355 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31332:31340 compcert.lib.Integers Make eqm_trans thm
R31391:31393 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31401:31401 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31396:31398 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31410:31410 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31414:31417 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31411:31411 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31410:31410 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31414:31417 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31411:31411 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31391:31393 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31401:31401 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31396:31398 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
prf 31463:31477 Make neg_mul_distr_r
R31507:31509 Coq.Init.Logic <> :type_scope:x_'='_x not
R31495:31497 compcert.lib.Integers Make neg def
R31499:31501 compcert.lib.Integers Make mul def
R31505:31505 compcert.lib.Integers <> y var
R31503:31503 compcert.lib.Integers <> x var
R31510:31512 compcert.lib.Integers Make mul def
R31517:31519 compcert.lib.Integers Make neg def
R31521:31521 compcert.lib.Integers <> y var
R31514:31514 compcert.lib.Integers <> x var
R31551:31560 compcert.lib.Integers Make mul_commut thm
R31551:31560 compcert.lib.Integers Make mul_commut thm
R31551:31560 compcert.lib.Integers Make mul_commut thm
R31577:31586 compcert.lib.Integers Make mul_commut thm
R31591:31593 compcert.lib.Integers Make neg def
R31577:31586 compcert.lib.Integers Make mul_commut thm
R31591:31593 compcert.lib.Integers Make neg def
R31577:31586 compcert.lib.Integers Make mul_commut thm
R31591:31593 compcert.lib.Integers Make neg def
R31608:31622 compcert.lib.Integers Make neg_mul_distr_l thm
R31608:31622 compcert.lib.Integers Make neg_mul_distr_l thm
prf 31639:31648 Make mul_signed
R31672:31674 Coq.Init.Logic <> :type_scope:x_'='_x not
R31665:31667 compcert.lib.Integers Make mul def
R31671:31671 compcert.lib.Integers <> y var
R31669:31669 compcert.lib.Integers <> x var
R31675:31678 compcert.lib.Integers Make repr def
R31689:31691 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31681:31686 compcert.lib.Integers Make signed def
R31688:31688 compcert.lib.Integers <> x var
R31692:31697 compcert.lib.Integers Make signed def
R31699:31699 compcert.lib.Integers <> y var
R31727:31729 compcert.lib.Integers Make mul def
R31738:31749 compcert.lib.Integers Make eqm_samerepr thm
R31738:31749 compcert.lib.Integers Make eqm_samerepr thm
R31760:31767 compcert.lib.Integers Make eqm_mult thm
R31776:31782 compcert.lib.Integers Make eqm_sym thm
R31791:31809 compcert.lib.Integers Make eqm_signed_unsigned thm
R31760:31767 compcert.lib.Integers Make eqm_mult thm
R31776:31782 compcert.lib.Integers Make eqm_sym thm
R31776:31782 compcert.lib.Integers Make eqm_sym thm
R31791:31809 compcert.lib.Integers Make eqm_signed_unsigned thm
R31791:31809 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 31870:31885 Make modu_divu_Euclid
R31911:31914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31916:31918 Coq.Init.Logic <> :type_scope:x_'='_x not
R31915:31915 compcert.lib.Integers <> x var
R31919:31921 compcert.lib.Integers Make add def
R31943:31946 compcert.lib.Integers Make modu def
R31950:31950 compcert.lib.Integers <> y var
R31948:31948 compcert.lib.Integers <> x var
R31924:31926 compcert.lib.Integers Make mul def
R31939:31939 compcert.lib.Integers <> y var
R31929:31932 compcert.lib.Integers Make divu def
R31936:31936 compcert.lib.Integers <> y var
R31934:31934 compcert.lib.Integers <> x var
R31903:31906 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R31902:31902 compcert.lib.Integers <> y var
R31907:31910 compcert.lib.Integers Make zero def
R31978:31980 compcert.lib.Integers Make add def
R31983:31985 compcert.lib.Integers Make mul def
R31988:31991 compcert.lib.Integers Make divu def
R31994:31997 compcert.lib.Integers Make modu def
R32016:32019 compcert.lib.Integers Make repr def
R32022:32029 compcert.lib.Integers Make unsigned def
R32016:32019 compcert.lib.Integers Make repr def
R32022:32029 compcert.lib.Integers Make unsigned def
R32060:32071 compcert.lib.Integers Make eqm_samerepr thm
R32060:32071 compcert.lib.Integers Make eqm_samerepr thm
R32087:32094 compcert.lib.Integers Make unsigned def
R32087:32094 compcert.lib.Integers Make unsigned def
R32111:32118 compcert.lib.Integers Make unsigned def
R32111:32118 compcert.lib.Integers Make unsigned def
R32162:32164 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R32148:32148 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32156:32159 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32151:32153 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R32167:32171 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R32132:32140 compcert.lib.Integers Make eqm_trans thm
R32162:32164 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R32148:32148 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32156:32159 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32151:32153 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R32167:32171 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R32132:32140 compcert.lib.Integers Make eqm_trans thm
R32185:32193 compcert.lib.Integers Make eqm_refl2 thm
R32185:32193 compcert.lib.Integers Make eqm_refl2 thm
R32204:32213 Coq.ZArith.BinInt <> Zmult_comm syndef
R32204:32213 Coq.ZArith.BinInt <> Zmult_comm syndef
R32204:32213 Coq.ZArith.BinInt <> Zmult_comm syndef
R32222:32233 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R32222:32233 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R32250:32263 compcert.lib.Integers Make unsigned_range thm
R32250:32263 compcert.lib.Integers Make unsigned_range thm
R32296:32299 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R32286:32293 compcert.lib.Integers Make unsigned def
R32296:32299 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R32286:32293 compcert.lib.Integers Make unsigned def
R32338:32350 compcert.lib.Integers Make repr_unsigned thm
R32338:32350 compcert.lib.Integers Make repr_unsigned thm
R32338:32350 compcert.lib.Integers Make repr_unsigned thm
R32363:32366 compcert.lib.Integers Make zero def
prf 32433:32441 Make modu_divu
R32467:32470 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32479:32481 Coq.Init.Logic <> :type_scope:x_'='_x not
R32471:32474 compcert.lib.Integers Make modu def
R32478:32478 compcert.lib.Integers <> y var
R32476:32476 compcert.lib.Integers <> x var
R32482:32484 compcert.lib.Integers Make sub def
R32489:32491 compcert.lib.Integers Make mul def
R32504:32504 compcert.lib.Integers <> y var
R32494:32497 compcert.lib.Integers Make divu def
R32501:32501 compcert.lib.Integers <> y var
R32499:32499 compcert.lib.Integers <> x var
R32486:32486 compcert.lib.Integers <> x var
R32459:32462 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R32458:32458 compcert.lib.Integers <> y var
R32463:32466 compcert.lib.Integers Make zero def
R32560:32563 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32565:32567 Coq.Init.Logic <> :type_scope:x_'='_x not
R32564:32564 compcert.lib.Integers <> c var
R32568:32570 compcert.lib.Integers Make sub def
R32574:32574 compcert.lib.Integers <> b var
R32572:32572 compcert.lib.Integers <> a var
R32550:32552 Coq.Init.Logic <> :type_scope:x_'='_x not
R32549:32549 compcert.lib.Integers <> a var
R32553:32555 compcert.lib.Integers Make add def
R32559:32559 compcert.lib.Integers <> c var
R32557:32557 compcert.lib.Integers <> b var
R32560:32563 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32565:32567 Coq.Init.Logic <> :type_scope:x_'='_x not
R32564:32564 compcert.lib.Integers <> c var
R32568:32570 compcert.lib.Integers Make sub def
R32574:32574 compcert.lib.Integers <> b var
R32572:32572 compcert.lib.Integers <> a var
R32550:32552 Coq.Init.Logic <> :type_scope:x_'='_x not
R32549:32549 compcert.lib.Integers <> a var
R32553:32555 compcert.lib.Integers Make add def
R32559:32559 compcert.lib.Integers <> c var
R32557:32557 compcert.lib.Integers <> b var
R32605:32613 compcert.lib.Integers Make sub_add_l thm
R32605:32613 compcert.lib.Integers Make sub_add_l thm
R32605:32613 compcert.lib.Integers Make sub_add_l thm
R32624:32631 compcert.lib.Integers Make sub_idem thm
R32624:32631 compcert.lib.Integers Make sub_idem thm
R32624:32631 compcert.lib.Integers Make sub_idem thm
R32644:32653 compcert.lib.Integers Make add_commut thm
R32644:32653 compcert.lib.Integers Make add_commut thm
R32644:32653 compcert.lib.Integers Make add_commut thm
R32664:32671 compcert.lib.Integers Make add_zero thm
R32664:32671 compcert.lib.Integers Make add_zero thm
R32664:32671 compcert.lib.Integers Make add_zero thm
R32698:32713 compcert.lib.Integers Make modu_divu_Euclid thm
R32698:32713 compcert.lib.Integers Make modu_divu_Euclid thm
prf 32734:32749 Make mods_divs_Euclid
R32767:32769 Coq.Init.Logic <> :type_scope:x_'='_x not
R32766:32766 compcert.lib.Integers <> x var
R32770:32772 compcert.lib.Integers Make add def
R32794:32797 compcert.lib.Integers Make mods def
R32801:32801 compcert.lib.Integers <> y var
R32799:32799 compcert.lib.Integers <> x var
R32775:32777 compcert.lib.Integers Make mul def
R32790:32790 compcert.lib.Integers <> y var
R32780:32783 compcert.lib.Integers Make divs def
R32787:32787 compcert.lib.Integers <> y var
R32785:32785 compcert.lib.Integers <> x var
R32829:32831 compcert.lib.Integers Make add def
R32834:32836 compcert.lib.Integers Make mul def
R32839:32842 compcert.lib.Integers Make divs def
R32845:32848 compcert.lib.Integers Make mods def
R32867:32870 compcert.lib.Integers Make repr def
R32873:32878 compcert.lib.Integers Make signed def
R32867:32870 compcert.lib.Integers Make repr def
R32873:32878 compcert.lib.Integers Make signed def
R32909:32920 compcert.lib.Integers Make eqm_samerepr thm
R32909:32920 compcert.lib.Integers Make eqm_samerepr thm
R32936:32941 compcert.lib.Integers Make signed def
R32936:32941 compcert.lib.Integers Make signed def
R32958:32963 compcert.lib.Integers Make signed def
R32958:32963 compcert.lib.Integers Make signed def
R33012:33014 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R32993:32993 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R33006:33009 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32994:32999 Coq.ZArith.BinInt Z quot def
R33015:33019 Coq.ZArith.BinInt Z rem def
R32977:32985 compcert.lib.Integers Make eqm_trans thm
R33012:33014 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R32993:32993 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R33006:33009 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32994:32999 Coq.ZArith.BinInt Z quot def
R33015:33019 Coq.ZArith.BinInt Z rem def
R32977:32985 compcert.lib.Integers Make eqm_trans thm
R33037:33045 compcert.lib.Integers Make eqm_refl2 thm
R33037:33045 compcert.lib.Integers Make eqm_refl2 thm
R33056:33065 Coq.ZArith.BinInt <> Zmult_comm syndef
R33056:33065 Coq.ZArith.BinInt <> Zmult_comm syndef
R33056:33065 Coq.ZArith.BinInt <> Zmult_comm syndef
R33074:33084 Coq.ZArith.BinInt Z quot_rem' thm
R33074:33084 Coq.ZArith.BinInt Z quot_rem' thm
R33095:33101 compcert.lib.Integers Make eqm_add thm
R33095:33101 compcert.lib.Integers Make eqm_add thm
R33128:33146 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R33128:33146 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R33155:33162 compcert.lib.Integers Make eqm_mult thm
R33155:33162 compcert.lib.Integers Make eqm_mult thm
R33200:33218 compcert.lib.Integers Make eqm_signed_unsigned thm
R33200:33218 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 33235:33243 Make mods_divs
R33268:33270 Coq.Init.Logic <> :type_scope:x_'='_x not
R33260:33263 compcert.lib.Integers Make mods def
R33267:33267 compcert.lib.Integers <> y var
R33265:33265 compcert.lib.Integers <> x var
R33271:33273 compcert.lib.Integers Make sub def
R33278:33280 compcert.lib.Integers Make mul def
R33293:33293 compcert.lib.Integers <> y var
R33283:33286 compcert.lib.Integers Make divs def
R33290:33290 compcert.lib.Integers <> y var
R33288:33288 compcert.lib.Integers <> x var
R33275:33275 compcert.lib.Integers <> x var
R33349:33352 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33354:33356 Coq.Init.Logic <> :type_scope:x_'='_x not
R33353:33353 compcert.lib.Integers <> c var
R33357:33359 compcert.lib.Integers Make sub def
R33363:33363 compcert.lib.Integers <> b var
R33361:33361 compcert.lib.Integers <> a var
R33339:33341 Coq.Init.Logic <> :type_scope:x_'='_x not
R33338:33338 compcert.lib.Integers <> a var
R33342:33344 compcert.lib.Integers Make add def
R33348:33348 compcert.lib.Integers <> c var
R33346:33346 compcert.lib.Integers <> b var
R33349:33352 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33354:33356 Coq.Init.Logic <> :type_scope:x_'='_x not
R33353:33353 compcert.lib.Integers <> c var
R33357:33359 compcert.lib.Integers Make sub def
R33363:33363 compcert.lib.Integers <> b var
R33361:33361 compcert.lib.Integers <> a var
R33339:33341 Coq.Init.Logic <> :type_scope:x_'='_x not
R33338:33338 compcert.lib.Integers <> a var
R33342:33344 compcert.lib.Integers Make add def
R33348:33348 compcert.lib.Integers <> c var
R33346:33346 compcert.lib.Integers <> b var
R33394:33402 compcert.lib.Integers Make sub_add_l thm
R33394:33402 compcert.lib.Integers Make sub_add_l thm
R33394:33402 compcert.lib.Integers Make sub_add_l thm
R33413:33420 compcert.lib.Integers Make sub_idem thm
R33413:33420 compcert.lib.Integers Make sub_idem thm
R33413:33420 compcert.lib.Integers Make sub_idem thm
R33433:33442 compcert.lib.Integers Make add_commut thm
R33433:33442 compcert.lib.Integers Make add_commut thm
R33433:33442 compcert.lib.Integers Make add_commut thm
R33453:33460 compcert.lib.Integers Make add_zero thm
R33453:33460 compcert.lib.Integers Make add_zero thm
R33453:33460 compcert.lib.Integers Make add_zero thm
R33486:33501 compcert.lib.Integers Make mods_divs_Euclid thm
R33486:33501 compcert.lib.Integers Make mods_divs_Euclid thm
prf 33518:33525 Make divu_one
R33550:33552 Coq.Init.Logic <> :type_scope:x_'='_x not
R33540:33543 compcert.lib.Integers Make divu def
R33547:33549 compcert.lib.Integers Make one def
R33545:33545 compcert.lib.Integers <> x var
R33553:33553 compcert.lib.Integers <> x var
R33572:33575 compcert.lib.Integers Make divu def
R33594:33605 compcert.lib.Integers Make unsigned_one thm
R33594:33605 compcert.lib.Integers Make unsigned_one thm
R33594:33605 compcert.lib.Integers Make unsigned_one thm
R33616:33623 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R33616:33623 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R33616:33623 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R33632:33644 compcert.lib.Integers Make repr_unsigned thm
R33632:33644 compcert.lib.Integers Make repr_unsigned thm
prf 33661:33668 Make modu_one
R33693:33695 Coq.Init.Logic <> :type_scope:x_'='_x not
R33683:33686 compcert.lib.Integers Make modu def
R33690:33692 compcert.lib.Integers Make one def
R33688:33688 compcert.lib.Integers <> x var
R33696:33699 compcert.lib.Integers Make zero def
R33727:33735 compcert.lib.Integers Make modu_divu thm
R33727:33735 compcert.lib.Integers Make modu_divu thm
R33727:33735 compcert.lib.Integers Make modu_divu thm
R33727:33735 compcert.lib.Integers Make modu_divu thm
R33746:33753 compcert.lib.Integers Make divu_one thm
R33746:33753 compcert.lib.Integers Make divu_one thm
R33746:33753 compcert.lib.Integers Make divu_one thm
R33764:33770 compcert.lib.Integers Make mul_one thm
R33764:33770 compcert.lib.Integers Make mul_one thm
R33764:33770 compcert.lib.Integers Make mul_one thm
R33779:33786 compcert.lib.Integers Make sub_idem thm
R33779:33786 compcert.lib.Integers Make sub_idem thm
R33797:33808 compcert.lib.Integers Make one_not_zero thm
R33797:33808 compcert.lib.Integers Make one_not_zero thm
prf 33825:33833 Make divs_mone
R33859:33861 Coq.Init.Logic <> :type_scope:x_'='_x not
R33848:33851 compcert.lib.Integers Make divs def
R33855:33858 compcert.lib.Integers Make mone def
R33853:33853 compcert.lib.Integers <> x var
R33862:33864 compcert.lib.Integers Make neg def
R33866:33866 compcert.lib.Integers <> x var
R33885:33888 compcert.lib.Integers Make divs def
R33891:33893 compcert.lib.Integers Make neg def
R33914:33924 compcert.lib.Integers Make signed_mone thm
R33914:33924 compcert.lib.Integers Make signed_mone thm
R33914:33924 compcert.lib.Integers Make signed_mone thm
R33938:33943 Coq.ZArith.BinInt Z quot def
R33946:33951 compcert.lib.Integers Make signed def
R33968:33970 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R33979:33979 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R33971:33976 compcert.lib.Integers Make signed def
R33968:33970 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R33979:33979 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R33971:33976 compcert.lib.Integers Make signed def
R33938:33943 Coq.ZArith.BinInt Z quot def
R33946:33951 compcert.lib.Integers Make signed def
R33991:34002 compcert.lib.Integers Make eqm_samerepr thm
R33991:34002 compcert.lib.Integers Make eqm_samerepr thm
R34011:34017 compcert.lib.Integers Make eqm_neg thm
R34011:34017 compcert.lib.Integers Make eqm_neg thm
R34026:34044 compcert.lib.Integers Make eqm_signed_unsigned thm
R34026:34044 compcert.lib.Integers Make eqm_signed_unsigned thm
R34060:34065 compcert.lib.Integers Make signed def
R34060:34065 compcert.lib.Integers Make signed def
R34109:34110 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R34109:34110 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R34125:34135 Coq.ZArith.Zquot <> Zquot_opp_r thm
R34125:34135 Coq.ZArith.Zquot <> Zquot_opp_r thm
R34125:34135 Coq.ZArith.Zquot <> Zquot_opp_r thm
R34161:34163 Coq.Init.Logic <> :type_scope:x_'='_x not
R34148:34153 Coq.ZArith.BinInt Z quot def
R34161:34163 Coq.Init.Logic <> :type_scope:x_'='_x not
R34148:34153 Coq.ZArith.BinInt Z quot def
R34187:34203 Coq.ZArith.Zquot <> Zquot_unique_full thm
R34187:34203 Coq.ZArith.Zquot <> Zquot_unique_full thm
R34228:34232 Coq.ZArith.BinInt Z abs def
R34228:34232 Coq.ZArith.BinInt Z abs def
R34259:34261 compcert.lib.Coqlib <> zle def
R34259:34261 compcert.lib.Coqlib <> zle def
R34306:34308 compcert.lib.Integers Make one def
prf 34345:34353 Make mods_mone
R34379:34381 Coq.Init.Logic <> :type_scope:x_'='_x not
R34368:34371 compcert.lib.Integers Make mods def
R34375:34378 compcert.lib.Integers Make mone def
R34373:34373 compcert.lib.Integers <> x var
R34382:34385 compcert.lib.Integers Make zero def
R34413:34421 compcert.lib.Integers Make mods_divs thm
R34413:34421 compcert.lib.Integers Make mods_divs thm
R34413:34421 compcert.lib.Integers Make mods_divs thm
R34432:34440 compcert.lib.Integers Make divs_mone thm
R34432:34440 compcert.lib.Integers Make divs_mone thm
R34432:34440 compcert.lib.Integers Make divs_mone thm
R34456:34470 compcert.lib.Integers Make neg_mul_distr_l thm
R34456:34470 compcert.lib.Integers Make neg_mul_distr_l thm
R34456:34470 compcert.lib.Integers Make neg_mul_distr_l thm
R34481:34488 compcert.lib.Integers Make mul_mone thm
R34481:34488 compcert.lib.Integers Make mul_mone thm
R34481:34488 compcert.lib.Integers Make mul_mone thm
R34499:34512 compcert.lib.Integers Make neg_involutive thm
R34499:34512 compcert.lib.Integers Make neg_involutive thm
R34499:34512 compcert.lib.Integers Make neg_involutive thm
R34521:34528 compcert.lib.Integers Make sub_idem thm
R34521:34528 compcert.lib.Integers Make sub_idem thm
prf 34631:34640 Make Ztestbit_0
R34666:34668 Coq.Init.Logic <> :type_scope:x_'='_x not
R34653:34661 Coq.ZArith.BinInt Z testbit def
R34665:34665 compcert.lib.Integers <> n var
R34669:34673 Coq.Init.Datatypes <> false constr
R34682:34694 Coq.ZArith.BinInt Z testbit_0_l thm
prf 34705:34714 Make Ztestbit_1
R34740:34742 Coq.Init.Logic <> :type_scope:x_'='_x not
R34727:34735 Coq.ZArith.BinInt Z testbit def
R34739:34739 compcert.lib.Integers <> n var
R34743:34745 compcert.lib.Coqlib <> zeq def
R34747:34747 compcert.lib.Integers <> n var
prf 34807:34817 Make Ztestbit_m1
R34836:34839 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34856:34858 Coq.Init.Logic <> :type_scope:x_'='_x not
R34840:34848 Coq.ZArith.BinInt Z testbit def
R34855:34855 compcert.lib.Integers <> n var
R34859:34862 Coq.Init.Datatypes <> true constr
R34831:34834 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R34835:34835 compcert.lib.Integers <> n var
prf 34920:34932 Make Zshiftin_spec
R34961:34963 Coq.Init.Logic <> :type_scope:x_'='_x not
R34949:34956 compcert.lib.Integers Make Zshiftin def
R34960:34960 compcert.lib.Integers <> x var
R34958:34958 compcert.lib.Integers <> b var
R34969:34972 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R34991:34991 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R34965:34967 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R34968:34968 compcert.lib.Integers <> x var
R34976:34976 compcert.lib.Integers <> b var
R35010:35017 compcert.lib.Integers Make Zshiftin def
R35052:35069 Coq.ZArith.BinInt Z succ_double_spec thm
R35052:35069 Coq.ZArith.BinInt Z succ_double_spec thm
R35052:35069 Coq.ZArith.BinInt Z succ_double_spec thm
R35091:35103 Coq.ZArith.BinInt Z double_spec thm
R35091:35103 Coq.ZArith.BinInt Z double_spec thm
R35091:35103 Coq.ZArith.BinInt Z double_spec thm
prf 35126:35137 Make Zshiftin_inj
R35195:35198 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35206:35209 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R35201:35203 Coq.Init.Logic <> :type_scope:x_'='_x not
R35199:35200 compcert.lib.Integers <> b1 var
R35204:35205 compcert.lib.Integers <> b2 var
R35212:35214 Coq.Init.Logic <> :type_scope:x_'='_x not
R35210:35211 compcert.lib.Integers <> x1 var
R35215:35216 compcert.lib.Integers <> x2 var
R35178:35180 Coq.Init.Logic <> :type_scope:x_'='_x not
R35164:35171 compcert.lib.Integers Make Zshiftin def
R35176:35177 compcert.lib.Integers <> x1 var
R35173:35174 compcert.lib.Integers <> b1 var
R35181:35188 compcert.lib.Integers Make Zshiftin def
R35193:35194 compcert.lib.Integers <> x2 var
R35190:35191 compcert.lib.Integers <> b2 var
R35245:35257 compcert.lib.Integers Make Zshiftin_spec thm
R35245:35257 compcert.lib.Integers Make Zshiftin_spec thm
R35245:35257 compcert.lib.Integers Make Zshiftin_spec thm
R35245:35257 compcert.lib.Integers Make Zshiftin_spec thm
R35245:35257 compcert.lib.Integers Make Zshiftin_spec thm
prf 35396:35402 Make Zdecomp
R35418:35420 Coq.Init.Logic <> :type_scope:x_'='_x not
R35417:35417 compcert.lib.Integers <> x var
R35421:35428 compcert.lib.Integers Make Zshiftin def
R35441:35446 Coq.ZArith.BinInt Z div2 def
R35448:35448 compcert.lib.Integers <> x var
R35431:35435 Coq.ZArith.BinInt Z odd def
R35437:35437 compcert.lib.Integers <> x var
R35557:35576 Coq.PArith.BinPos Pos pred_double_succ thm
R35557:35576 Coq.PArith.BinPos Pos pred_double_succ thm
R35557:35576 Coq.PArith.BinPos Pos pred_double_succ thm
prf 35598:35613 Make Ztestbit_shiftin
R35640:35645 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35672:35674 Coq.Init.Logic <> :type_scope:x_'='_x not
R35646:35654 Coq.ZArith.BinInt Z testbit def
R35671:35671 compcert.lib.Integers <> n var
R35657:35664 compcert.lib.Integers Make Zshiftin def
R35668:35668 compcert.lib.Integers <> x var
R35666:35666 compcert.lib.Integers <> b var
R35678:35680 compcert.lib.Coqlib <> zeq def
R35682:35682 compcert.lib.Integers <> n var
R35698:35706 Coq.ZArith.BinInt Z testbit def
R35711:35716 Coq.ZArith.BinInt Z pred def
R35718:35718 compcert.lib.Integers <> n var
R35708:35708 compcert.lib.Integers <> x var
R35691:35691 compcert.lib.Integers <> b var
R35635:35638 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R35639:35639 compcert.lib.Integers <> n var
R35747:35759 compcert.lib.Integers Make Zshiftin_spec thm
R35747:35759 compcert.lib.Integers Make Zshiftin_spec thm
R35747:35759 compcert.lib.Integers Make Zshiftin_spec thm
R35772:35774 compcert.lib.Coqlib <> zeq def
R35772:35774 compcert.lib.Coqlib <> zeq def
R35819:35833 Coq.ZArith.BinInt Z testbit_odd_0 thm
R35819:35833 Coq.ZArith.BinInt Z testbit_odd_0 thm
R35850:35858 Coq.ZArith.BinInt <> Zplus_0_r syndef
R35850:35858 Coq.ZArith.BinInt <> Zplus_0_r syndef
R35850:35858 Coq.ZArith.BinInt <> Zplus_0_r syndef
R35867:35882 Coq.ZArith.BinInt Z testbit_even_0 thm
R35867:35882 Coq.ZArith.BinInt Z testbit_even_0 thm
R35898:35901 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R35902:35907 Coq.ZArith.BinInt Z pred def
R35898:35901 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R35902:35907 Coq.ZArith.BinInt Z pred def
R35937:35942 Coq.ZArith.BinInt Z pred def
R35937:35942 Coq.ZArith.BinInt Z pred def
R35973:35978 Coq.ZArith.BinInt Z succ def
R35973:35978 Coq.ZArith.BinInt Z succ def
R36035:36052 Coq.ZArith.BinInt Z testbit_odd_succ thm
R36035:36052 Coq.ZArith.BinInt Z testbit_odd_succ thm
R36075:36083 Coq.ZArith.BinInt <> Zplus_0_r syndef
R36075:36083 Coq.ZArith.BinInt <> Zplus_0_r syndef
R36075:36083 Coq.ZArith.BinInt <> Zplus_0_r syndef
R36092:36110 Coq.ZArith.BinInt Z testbit_even_succ thm
R36092:36110 Coq.ZArith.BinInt Z testbit_even_succ thm
prf 36132:36152 Make Ztestbit_shiftin_base
R36195:36197 Coq.Init.Logic <> :type_scope:x_'='_x not
R36169:36177 Coq.ZArith.BinInt Z testbit def
R36180:36187 compcert.lib.Integers Make Zshiftin def
R36191:36191 compcert.lib.Integers <> x var
R36189:36189 compcert.lib.Integers <> b var
R36198:36198 compcert.lib.Integers <> b var
R36226:36241 compcert.lib.Integers Make Ztestbit_shiftin thm
R36226:36241 compcert.lib.Integers Make Ztestbit_shiftin thm
R36226:36241 compcert.lib.Integers Make Ztestbit_shiftin thm
R36226:36241 compcert.lib.Integers Make Ztestbit_shiftin thm
R36250:36257 compcert.lib.Coqlib <> zeq_true thm
R36250:36257 compcert.lib.Coqlib <> zeq_true thm
prf 36280:36300 Make Ztestbit_shiftin_succ
R36325:36328 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36364:36366 Coq.Init.Logic <> :type_scope:x_'='_x not
R36329:36337 Coq.ZArith.BinInt Z testbit def
R36355:36360 Coq.ZArith.BinInt Z succ def
R36362:36362 compcert.lib.Integers <> n var
R36340:36347 compcert.lib.Integers Make Zshiftin def
R36351:36351 compcert.lib.Integers <> x var
R36349:36349 compcert.lib.Integers <> b var
R36367:36375 Coq.ZArith.BinInt Z testbit def
R36379:36379 compcert.lib.Integers <> n var
R36377:36377 compcert.lib.Integers <> x var
R36320:36323 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R36324:36324 compcert.lib.Integers <> n var
R36407:36422 compcert.lib.Integers Make Ztestbit_shiftin thm
R36407:36422 compcert.lib.Integers Make Ztestbit_shiftin thm
R36407:36422 compcert.lib.Integers Make Ztestbit_shiftin thm
R36407:36422 compcert.lib.Integers Make Ztestbit_shiftin thm
R36433:36441 compcert.lib.Coqlib <> zeq_false thm
R36433:36441 compcert.lib.Coqlib <> zeq_false thm
R36433:36441 compcert.lib.Coqlib <> zeq_false thm
R36433:36441 compcert.lib.Coqlib <> zeq_false thm
R36452:36462 Coq.ZArith.BinInt Z pred_succ thm
R36452:36462 Coq.ZArith.BinInt Z pred_succ thm
R36452:36462 Coq.ZArith.BinInt Z pred_succ thm
prf 36500:36510 Make Ztestbit_eq
R36533:36538 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36552:36554 Coq.Init.Logic <> :type_scope:x_'='_x not
R36539:36547 Coq.ZArith.BinInt Z testbit def
R36551:36551 compcert.lib.Integers <> n var
R36549:36549 compcert.lib.Integers <> x var
R36558:36560 compcert.lib.Coqlib <> zeq def
R36562:36562 compcert.lib.Integers <> n var
R36584:36592 Coq.ZArith.BinInt Z testbit def
R36606:36611 Coq.ZArith.BinInt Z pred def
R36613:36613 compcert.lib.Integers <> n var
R36595:36600 Coq.ZArith.BinInt Z div2 def
R36602:36602 compcert.lib.Integers <> x var
R36571:36575 Coq.ZArith.BinInt Z odd def
R36577:36577 compcert.lib.Integers <> x var
R36528:36531 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R36532:36532 compcert.lib.Integers <> n var
R36643:36649 compcert.lib.Integers Make Zdecomp thm
R36643:36649 compcert.lib.Integers Make Zdecomp thm
R36643:36649 compcert.lib.Integers Make Zdecomp thm
R36666:36681 compcert.lib.Integers Make Ztestbit_shiftin thm
R36666:36681 compcert.lib.Integers Make Ztestbit_shiftin thm
prf 36703:36715 Make Ztestbit_base
R36743:36745 Coq.Init.Logic <> :type_scope:x_'='_x not
R36730:36738 Coq.ZArith.BinInt Z testbit def
R36740:36740 compcert.lib.Integers <> x var
R36746:36750 Coq.ZArith.BinInt Z odd def
R36752:36752 compcert.lib.Integers <> x var
R36780:36790 compcert.lib.Integers Make Ztestbit_eq thm
R36780:36790 compcert.lib.Integers Make Ztestbit_eq thm
R36780:36790 compcert.lib.Integers Make Ztestbit_eq thm
R36780:36790 compcert.lib.Integers Make Ztestbit_eq thm
R36799:36806 compcert.lib.Coqlib <> zeq_true thm
R36799:36806 compcert.lib.Coqlib <> zeq_true thm
prf 36829:36841 Make Ztestbit_succ
R36864:36867 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36890:36892 Coq.Init.Logic <> :type_scope:x_'='_x not
R36868:36876 Coq.ZArith.BinInt Z testbit def
R36881:36886 Coq.ZArith.BinInt Z succ def
R36888:36888 compcert.lib.Integers <> n var
R36878:36878 compcert.lib.Integers <> x var
R36893:36901 Coq.ZArith.BinInt Z testbit def
R36914:36914 compcert.lib.Integers <> n var
R36904:36909 Coq.ZArith.BinInt Z div2 def
R36911:36911 compcert.lib.Integers <> x var
R36859:36862 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R36863:36863 compcert.lib.Integers <> n var
R36942:36952 compcert.lib.Integers Make Ztestbit_eq thm
R36942:36952 compcert.lib.Integers Make Ztestbit_eq thm
R36942:36952 compcert.lib.Integers Make Ztestbit_eq thm
R36942:36952 compcert.lib.Integers Make Ztestbit_eq thm
R36963:36971 compcert.lib.Coqlib <> zeq_false thm
R36963:36971 compcert.lib.Coqlib <> zeq_false thm
R36963:36971 compcert.lib.Coqlib <> zeq_false thm
R36963:36971 compcert.lib.Coqlib <> zeq_false thm
R36982:36992 Coq.ZArith.BinInt Z pred_succ thm
R36982:36992 Coq.ZArith.BinInt Z pred_succ thm
R36982:36992 Coq.ZArith.BinInt Z pred_succ thm
prf 37029:37043 Make eqmod_same_bits
R37064:37064 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37127:37133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37134:37138 compcert.lib.Integers Make eqmod def
R37160:37160 compcert.lib.Integers <> y var
R37158:37158 compcert.lib.Integers <> x var
R37141:37153 Coq.ZArith.Zpower <> two_power_nat def
R37155:37155 compcert.lib.Integers <> n var
R37094:37097 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37111:37113 Coq.Init.Logic <> :type_scope:x_'='_x not
R37098:37106 Coq.ZArith.BinInt Z testbit def
R37110:37110 compcert.lib.Integers <> i var
R37108:37108 compcert.lib.Integers <> x var
R37114:37122 Coq.ZArith.BinInt Z testbit def
R37126:37126 compcert.lib.Integers <> i var
R37124:37124 compcert.lib.Integers <> y var
R37076:37079 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R37081:37083 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R37080:37080 compcert.lib.Integers <> i var
R37080:37080 compcert.lib.Integers <> i var
R37084:37091 Coq.ZArith.BinInt Z of_nat def
R37093:37093 compcert.lib.Integers <> n var
R37205:37217 Coq.ZArith.Zpower <> two_power_nat def
R37205:37217 Coq.ZArith.Zpower <> two_power_nat def
R37239:37239 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R37239:37239 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R37262:37276 Coq.ZArith.Zpower <> two_power_nat_S thm
R37262:37276 Coq.ZArith.Zpower <> two_power_nat_S thm
R37262:37276 Coq.ZArith.Zpower <> two_power_nat_S thm
R37291:37295 compcert.lib.Integers Make eqmod def
R37327:37332 Coq.ZArith.BinInt Z div2 def
R37316:37321 Coq.ZArith.BinInt Z div2 def
R37298:37310 Coq.ZArith.Zpower <> two_power_nat def
R37291:37295 compcert.lib.Integers Make eqmod def
R37327:37332 Coq.ZArith.BinInt Z div2 def
R37316:37321 Coq.ZArith.BinInt Z div2 def
R37298:37310 Coq.ZArith.Zpower <> two_power_nat def
R37376:37388 compcert.lib.Integers Make Ztestbit_succ thm
R37376:37388 compcert.lib.Integers Make Ztestbit_succ thm
R37376:37388 compcert.lib.Integers Make Ztestbit_succ thm
R37376:37388 compcert.lib.Integers Make Ztestbit_succ thm
R37376:37388 compcert.lib.Integers Make Ztestbit_succ thm
R37376:37388 compcert.lib.Integers Make Ztestbit_succ thm
R37376:37388 compcert.lib.Integers Make Ztestbit_succ thm
R37408:37412 Coq.ZArith.Znat <> inj_S syndef
R37408:37412 Coq.ZArith.Znat <> inj_S syndef
R37408:37412 Coq.ZArith.Znat <> inj_S syndef
R37488:37494 compcert.lib.Integers Make Zdecomp thm
R37488:37494 compcert.lib.Integers Make Zdecomp thm
R37488:37494 compcert.lib.Integers Make Zdecomp thm
R37509:37515 compcert.lib.Integers Make Zdecomp thm
R37509:37515 compcert.lib.Integers Make Zdecomp thm
R37509:37515 compcert.lib.Integers Make Zdecomp thm
R37532:37536 Coq.ZArith.BinInt Z odd def
R37547:37551 Coq.ZArith.BinInt Z odd def
R37547:37551 Coq.ZArith.BinInt Z odd def
R37532:37536 Coq.ZArith.BinInt Z odd def
R37580:37592 compcert.lib.Integers Make Zshiftin_spec thm
R37580:37592 compcert.lib.Integers Make Zshiftin_spec thm
R37580:37592 compcert.lib.Integers Make Zshiftin_spec thm
R37580:37592 compcert.lib.Integers Make Zshiftin_spec thm
R37580:37592 compcert.lib.Integers Make Zshiftin_spec thm
R37626:37630 Coq.ZArith.Znat <> inj_S syndef
R37626:37630 Coq.ZArith.Znat <> inj_S syndef
R37626:37630 Coq.ZArith.Znat <> inj_S syndef
R37651:37663 compcert.lib.Integers Make Ztestbit_base thm
R37651:37663 compcert.lib.Integers Make Ztestbit_base thm
R37651:37663 compcert.lib.Integers Make Ztestbit_base thm
R37651:37663 compcert.lib.Integers Make Ztestbit_base thm
R37651:37663 compcert.lib.Integers Make Ztestbit_base thm
prf 37684:37696 Make eqm_same_bits
R37715:37715 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37777:37783 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37784:37786 compcert.lib.Integers Make eqm def
R37790:37790 compcert.lib.Integers <> y var
R37788:37788 compcert.lib.Integers <> x var
R37744:37747 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37761:37763 Coq.Init.Logic <> :type_scope:x_'='_x not
R37748:37756 Coq.ZArith.BinInt Z testbit def
R37760:37760 compcert.lib.Integers <> i var
R37758:37758 compcert.lib.Integers <> x var
R37764:37772 Coq.ZArith.BinInt Z testbit def
R37776:37776 compcert.lib.Integers <> i var
R37774:37774 compcert.lib.Integers <> y var
R37727:37730 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R37732:37734 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R37731:37731 compcert.lib.Integers <> i var
R37731:37731 compcert.lib.Integers <> i var
R37735:37743 compcert.lib.Integers Make zwordsize def
R37800:37814 compcert.lib.Integers Make eqmod_same_bits thm
R37816:37823 compcert.lib.Integers Make wordsize def
prf 37834:37848 Make same_bits_eqmod
R37898:37901 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37921:37926 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37940:37942 Coq.Init.Logic <> :type_scope:x_'='_x not
R37927:37935 Coq.ZArith.BinInt Z testbit def
R37939:37939 compcert.lib.Integers <> i var
R37937:37937 compcert.lib.Integers <> x var
R37943:37951 Coq.ZArith.BinInt Z testbit def
R37955:37955 compcert.lib.Integers <> i var
R37953:37953 compcert.lib.Integers <> y var
R37903:37906 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R37908:37910 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R37907:37907 compcert.lib.Integers <> i var
R37907:37907 compcert.lib.Integers <> i var
R37911:37918 Coq.ZArith.BinInt Z of_nat def
R37920:37920 compcert.lib.Integers <> n var
R37871:37875 compcert.lib.Integers Make eqmod def
R37897:37897 compcert.lib.Integers <> y var
R37895:37895 compcert.lib.Integers <> x var
R37878:37890 Coq.ZArith.Zpower <> two_power_nat def
R37892:37892 compcert.lib.Integers <> n var
R38037:38041 Coq.ZArith.Znat <> inj_S syndef
R38037:38041 Coq.ZArith.Znat <> inj_S syndef
R38037:38041 Coq.ZArith.Znat <> inj_S syndef
R38058:38072 Coq.ZArith.Zpower <> two_power_nat_S thm
R38058:38072 Coq.ZArith.Zpower <> two_power_nat_S thm
R38058:38072 Coq.ZArith.Zpower <> two_power_nat_S thm
R38094:38104 compcert.lib.Integers Make Ztestbit_eq thm
R38094:38104 compcert.lib.Integers Make Ztestbit_eq thm
R38094:38104 compcert.lib.Integers Make Ztestbit_eq thm
R38094:38104 compcert.lib.Integers Make Ztestbit_eq thm
R38094:38104 compcert.lib.Integers Make Ztestbit_eq thm
R38094:38104 compcert.lib.Integers Make Ztestbit_eq thm
R38094:38104 compcert.lib.Integers Make Ztestbit_eq thm
R38193:38212 Coq.Init.Logic <> :type_scope:x_'='_x not
R38164:38171 compcert.lib.Integers Make Zshiftin def
R38184:38189 Coq.ZArith.BinInt Z div2 def
R38174:38178 Coq.ZArith.BinInt Z odd def
R38213:38220 compcert.lib.Integers Make Zshiftin def
R38252:38254 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38234:38236 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R38237:38249 Coq.ZArith.Zpower <> two_power_nat def
R38255:38260 Coq.ZArith.BinInt Z div2 def
R38223:38227 Coq.ZArith.BinInt Z odd def
R38193:38212 Coq.Init.Logic <> :type_scope:x_'='_x not
R38164:38171 compcert.lib.Integers Make Zshiftin def
R38184:38189 Coq.ZArith.BinInt Z div2 def
R38174:38178 Coq.ZArith.BinInt Z odd def
R38213:38220 compcert.lib.Integers Make Zshiftin def
R38252:38254 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38234:38236 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R38237:38249 Coq.ZArith.Zpower <> two_power_nat def
R38255:38260 Coq.ZArith.BinInt Z div2 def
R38223:38227 Coq.ZArith.BinInt Z odd def
R38288:38294 compcert.lib.Integers Make Zdecomp thm
R38288:38294 compcert.lib.Integers Make Zdecomp thm
R38288:38294 compcert.lib.Integers Make Zdecomp thm
R38315:38321 compcert.lib.Integers Make Zdecomp thm
R38315:38321 compcert.lib.Integers Make Zdecomp thm
R38315:38321 compcert.lib.Integers Make Zdecomp thm
R38360:38372 compcert.lib.Integers Make Zshiftin_spec thm
R38360:38372 compcert.lib.Integers Make Zshiftin_spec thm
R38360:38372 compcert.lib.Integers Make Zshiftin_spec thm
R38360:38372 compcert.lib.Integers Make Zshiftin_spec thm
R38360:38372 compcert.lib.Integers Make Zshiftin_spec thm
R38399:38410 compcert.lib.Integers Make Zshiftin_inj thm
R38448:38450 compcert.lib.Coqlib <> zeq def
R38448:38450 compcert.lib.Coqlib <> zeq def
prf 38522:38534 Make same_bits_eqm
R38562:38567 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38586:38591 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38605:38607 Coq.Init.Logic <> :type_scope:x_'='_x not
R38592:38600 Coq.ZArith.BinInt Z testbit def
R38604:38604 compcert.lib.Integers <> i var
R38602:38602 compcert.lib.Integers <> x var
R38608:38616 Coq.ZArith.BinInt Z testbit def
R38620:38620 compcert.lib.Integers <> i var
R38618:38618 compcert.lib.Integers <> y var
R38569:38572 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R38574:38576 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R38573:38573 compcert.lib.Integers <> i var
R38573:38573 compcert.lib.Integers <> i var
R38577:38585 compcert.lib.Integers Make zwordsize def
R38555:38557 compcert.lib.Integers Make eqm def
R38561:38561 compcert.lib.Integers <> y var
R38559:38559 compcert.lib.Integers <> x var
R38630:38644 compcert.lib.Integers Make same_bits_eqmod thm
R38646:38653 compcert.lib.Integers Make wordsize def
prf 38665:38686 Make two_power_nat_infinity
R38707:38710 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38711:38717 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38719:38720 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38722:38724 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R38721:38721 compcert.lib.Integers <> x var
R38725:38737 Coq.ZArith.Zpower <> two_power_nat def
R38739:38739 compcert.lib.Integers <> n var
R38702:38705 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R38706:38706 compcert.lib.Integers <> x var
R38785:38795 Coq.ZArith.Wf_Z <> natlike_ind thm
R38785:38795 Coq.ZArith.Wf_Z <> natlike_ind thm
R38813:38813 Coq.Init.Datatypes <> O constr
R38813:38813 Coq.Init.Datatypes <> O constr
R38872:38872 Coq.Init.Datatypes <> S constr
R38872:38872 Coq.Init.Datatypes <> S constr
R38886:38900 Coq.ZArith.Zpower <> two_power_nat_S thm
R38886:38900 Coq.ZArith.Zpower <> two_power_nat_S thm
R38886:38900 Coq.ZArith.Zpower <> two_power_nat_S thm
R38917:38933 compcert.lib.Coqlib <> two_power_nat_pos thm
R38917:38933 compcert.lib.Coqlib <> two_power_nat_pos thm
prf 38958:38972 Make equal_same_bits
R38991:38991 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39041:39047 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39049:39051 Coq.Init.Logic <> :type_scope:x_'='_x not
R39048:39048 compcert.lib.Integers <> x var
R39052:39052 compcert.lib.Integers <> y var
R39008:39011 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39025:39027 Coq.Init.Logic <> :type_scope:x_'='_x not
R39012:39020 Coq.ZArith.BinInt Z testbit def
R39024:39024 compcert.lib.Integers <> i var
R39022:39022 compcert.lib.Integers <> x var
R39028:39036 Coq.ZArith.BinInt Z testbit def
R39040:39040 compcert.lib.Integers <> i var
R39038:39038 compcert.lib.Integers <> y var
R39003:39006 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R39007:39007 compcert.lib.Integers <> i var
R39087:39089 compcert.lib.Coqlib <> zlt def
R39112:39114 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39101:39103 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39087:39089 compcert.lib.Coqlib <> zlt def
R39112:39114 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39101:39103 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39130:39133 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R39130:39133 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R39162:39164 compcert.lib.Coqlib <> zlt def
R39162:39164 compcert.lib.Coqlib <> zlt def
R39190:39211 compcert.lib.Integers Make two_power_nat_infinity thm
R39190:39211 compcert.lib.Integers Make two_power_nat_infinity thm
R39248:39252 compcert.lib.Integers Make eqmod def
R39255:39267 Coq.ZArith.Zpower <> two_power_nat def
R39248:39252 compcert.lib.Integers Make eqmod def
R39255:39267 Coq.ZArith.Zpower <> two_power_nat def
R39288:39302 compcert.lib.Integers Make eqmod_same_bits thm
R39288:39302 compcert.lib.Integers Make eqmod_same_bits thm
R39339:39343 compcert.lib.Integers Make eqmod def
R39346:39358 Coq.ZArith.Zpower <> two_power_nat def
R39339:39343 compcert.lib.Integers Make eqmod def
R39346:39358 Coq.ZArith.Zpower <> two_power_nat def
R39393:39395 compcert.lib.Coqlib <> zlt def
R39393:39395 compcert.lib.Coqlib <> zlt def
R39424:39426 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39424:39426 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39446:39454 compcert.lib.Integers Make eqmod_sub thm
R39446:39454 compcert.lib.Integers Make eqmod_sub thm
R39463:39472 compcert.lib.Integers Make eqmod_refl thm
R39463:39472 compcert.lib.Integers Make eqmod_refl thm
R39502:39504 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39502:39504 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39524:39532 compcert.lib.Integers Make eqmod_sub thm
R39524:39532 compcert.lib.Integers Make eqmod_sub thm
R39541:39550 compcert.lib.Integers Make eqmod_refl thm
R39541:39550 compcert.lib.Integers Make eqmod_refl thm
R39559:39567 compcert.lib.Integers Make eqmod_sym thm
R39559:39567 compcert.lib.Integers Make eqmod_sym thm
R39587:39589 Coq.Init.Logic <> :type_scope:x_'='_x not
R39587:39589 Coq.Init.Logic <> :type_scope:x_'='_x not
R39625:39637 Coq.ZArith.Zpower <> two_power_nat def
R39604:39617 compcert.lib.Integers Make eqmod_small_eq thm
R39625:39637 Coq.ZArith.Zpower <> two_power_nat def
R39604:39617 compcert.lib.Integers Make eqmod_small_eq thm
R39668:39684 compcert.lib.Coqlib <> two_power_nat_pos thm
R39668:39684 compcert.lib.Coqlib <> two_power_nat_pos thm
R39725:39727 compcert.lib.Coqlib <> zlt def
R39725:39727 compcert.lib.Coqlib <> zlt def
prf 39754:39769 Make Z_one_complement
R39790:39795 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39824:39826 Coq.Init.Logic <> :type_scope:x_'='_x not
R39806:39814 Coq.ZArith.BinInt Z testbit def
R39823:39823 compcert.lib.Integers <> i var
R39819:39819 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39817:39817 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R39818:39818 compcert.lib.Integers <> x var
R39827:39830 Coq.Init.Datatypes <> negb def
R39833:39841 Coq.ZArith.BinInt Z testbit def
R39845:39845 compcert.lib.Integers <> i var
R39843:39843 compcert.lib.Integers <> x var
R39785:39788 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R39789:39789 compcert.lib.Integers <> i var
R39892:39900 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R39892:39900 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R39942:39948 compcert.lib.Integers Make Zdecomp thm
R39942:39948 compcert.lib.Integers Make Zdecomp thm
R39942:39948 compcert.lib.Integers Make Zdecomp thm
R39964:39969 Coq.ZArith.BinInt Z div2 def
R39964:39969 Coq.ZArith.BinInt Z div2 def
R40008:40010 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39986:39987 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R39988:39995 compcert.lib.Integers Make Zshiftin def
R39998:40002 Coq.ZArith.BinInt Z odd def
R40025:40032 compcert.lib.Integers Make Zshiftin def
R40055:40057 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R40052:40053 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R40035:40038 Coq.Init.Datatypes <> negb def
R40041:40045 Coq.ZArith.BinInt Z odd def
R40025:40032 compcert.lib.Integers Make Zshiftin def
R40055:40057 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R40052:40053 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R40035:40038 Coq.Init.Datatypes <> negb def
R40041:40045 Coq.ZArith.BinInt Z odd def
R40008:40010 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39986:39987 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R39988:39995 compcert.lib.Integers Make Zshiftin def
R39998:40002 Coq.ZArith.BinInt Z odd def
R40074:40089 compcert.lib.Integers Make Ztestbit_shiftin thm
R40074:40089 compcert.lib.Integers Make Ztestbit_shiftin thm
R40074:40089 compcert.lib.Integers Make Ztestbit_shiftin thm
R40074:40089 compcert.lib.Integers Make Ztestbit_shiftin thm
R40074:40089 compcert.lib.Integers Make Ztestbit_shiftin thm
R40074:40089 compcert.lib.Integers Make Ztestbit_shiftin thm
R40074:40089 compcert.lib.Integers Make Ztestbit_shiftin thm
R40110:40112 compcert.lib.Coqlib <> zeq def
R40110:40112 compcert.lib.Coqlib <> zeq def
R40155:40167 compcert.lib.Integers Make Zshiftin_spec thm
R40155:40167 compcert.lib.Integers Make Zshiftin_spec thm
R40155:40167 compcert.lib.Integers Make Zshiftin_spec thm
R40155:40167 compcert.lib.Integers Make Zshiftin_spec thm
R40155:40167 compcert.lib.Integers Make Zshiftin_spec thm
R40180:40184 Coq.ZArith.BinInt Z odd def
R40180:40184 Coq.ZArith.BinInt Z odd def
prf 40220:40233 Make Ztestbit_above
R40278:40283 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40299:40304 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40318:40320 Coq.Init.Logic <> :type_scope:x_'='_x not
R40305:40313 Coq.ZArith.BinInt Z testbit def
R40317:40317 compcert.lib.Integers <> i var
R40315:40315 compcert.lib.Integers <> x var
R40321:40325 Coq.Init.Datatypes <> false constr
R40285:40288 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R40284:40284 compcert.lib.Integers <> i var
R40289:40296 Coq.ZArith.BinInt Z of_nat def
R40298:40298 compcert.lib.Integers <> n var
R40255:40258 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40260:40262 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40259:40259 compcert.lib.Integers <> x var
R40259:40259 compcert.lib.Integers <> x var
R40263:40275 Coq.ZArith.Zpower <> two_power_nat def
R40277:40277 compcert.lib.Integers <> n var
R40370:40382 Coq.ZArith.Zpower <> two_power_nat def
R40370:40382 Coq.ZArith.Zpower <> two_power_nat def
R40441:40453 Coq.ZArith.BinInt Z testbit_0_l thm
R40441:40453 Coq.ZArith.BinInt Z testbit_0_l thm
R40468:40472 Coq.ZArith.Znat <> inj_S syndef
R40468:40472 Coq.ZArith.Znat <> inj_S syndef
R40468:40472 Coq.ZArith.Znat <> inj_S syndef
R40489:40499 compcert.lib.Integers Make Ztestbit_eq thm
R40489:40499 compcert.lib.Integers Make Ztestbit_eq thm
R40489:40499 compcert.lib.Integers Make Ztestbit_eq thm
R40489:40499 compcert.lib.Integers Make Ztestbit_eq thm
R40510:40518 compcert.lib.Coqlib <> zeq_false thm
R40510:40518 compcert.lib.Coqlib <> zeq_false thm
R40510:40518 compcert.lib.Coqlib <> zeq_false thm
R40510:40518 compcert.lib.Coqlib <> zeq_false thm
R40544:40558 Coq.ZArith.Zpower <> two_power_nat_S thm
R40544:40558 Coq.ZArith.Zpower <> two_power_nat_S thm
R40544:40558 Coq.ZArith.Zpower <> two_power_nat_S thm
R40575:40581 compcert.lib.Integers Make Zdecomp thm
R40575:40581 compcert.lib.Integers Make Zdecomp thm
R40575:40581 compcert.lib.Integers Make Zdecomp thm
R40604:40616 compcert.lib.Integers Make Zshiftin_spec thm
R40604:40616 compcert.lib.Integers Make Zshiftin_spec thm
R40604:40616 compcert.lib.Integers Make Zshiftin_spec thm
R40634:40638 Coq.ZArith.BinInt Z odd def
R40634:40638 Coq.ZArith.BinInt Z odd def
prf 40688:40705 Make Ztestbit_above_neg
R40751:40756 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40772:40777 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40791:40793 Coq.Init.Logic <> :type_scope:x_'='_x not
R40778:40786 Coq.ZArith.BinInt Z testbit def
R40790:40790 compcert.lib.Integers <> i var
R40788:40788 compcert.lib.Integers <> x var
R40794:40797 Coq.Init.Datatypes <> true constr
R40758:40761 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R40757:40757 compcert.lib.Integers <> i var
R40762:40769 Coq.ZArith.BinInt Z of_nat def
R40771:40771 compcert.lib.Integers <> n var
R40742:40745 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40747:40749 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40726:40726 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R40727:40739 Coq.ZArith.Zpower <> two_power_nat def
R40741:40741 compcert.lib.Integers <> n var
R40746:40746 compcert.lib.Integers <> x var
R40746:40746 compcert.lib.Integers <> x var
R40829:40829 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R40827:40827 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R40829:40829 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R40827:40827 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R40857:40859 Coq.Init.Logic <> :type_scope:x_'='_x not
R40844:40852 Coq.ZArith.BinInt Z testbit def
R40860:40864 Coq.Init.Datatypes <> false constr
R40857:40859 Coq.Init.Logic <> :type_scope:x_'='_x not
R40844:40852 Coq.ZArith.BinInt Z testbit def
R40860:40864 Coq.Init.Datatypes <> false constr
R40878:40891 compcert.lib.Integers Make Ztestbit_above thm
R40878:40891 compcert.lib.Integers Make Ztestbit_above thm
R40954:40969 compcert.lib.Integers Make Z_one_complement thm
R40954:40969 compcert.lib.Integers Make Z_one_complement thm
R40954:40969 compcert.lib.Integers Make Z_one_complement thm
R40954:40969 compcert.lib.Integers Make Z_one_complement thm
R40998:41001 Coq.Init.Datatypes <> negb def
R41003:41007 Coq.Init.Datatypes <> false constr
R40987:40990 Coq.Init.Datatypes <> true constr
R40987:40990 Coq.Init.Datatypes <> true constr
R40998:41001 Coq.Init.Datatypes <> negb def
R41003:41007 Coq.Init.Datatypes <> false constr
R41034:41048 Coq.Bool.Bool <> negb_involutive thm
R41034:41048 Coq.Bool.Bool <> negb_involutive thm
R41034:41048 Coq.Bool.Bool <> negb_involutive thm
prf 41078:41086 Make Zsign_bit
R41133:41138 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41163:41165 Coq.Init.Logic <> :type_scope:x_'='_x not
R41139:41147 Coq.ZArith.BinInt Z testbit def
R41152:41159 Coq.ZArith.BinInt <> Z_of_nat syndef
R41161:41161 compcert.lib.Integers <> n var
R41149:41149 compcert.lib.Integers <> x var
R41169:41171 compcert.lib.Coqlib <> zlt def
R41176:41188 Coq.ZArith.Zpower <> two_power_nat def
R41190:41190 compcert.lib.Integers <> n var
R41173:41173 compcert.lib.Integers <> x var
R41209:41212 Coq.Init.Datatypes <> true constr
R41198:41202 Coq.Init.Datatypes <> false constr
R41106:41109 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41111:41113 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41110:41110 compcert.lib.Integers <> x var
R41110:41110 compcert.lib.Integers <> x var
R41114:41126 Coq.ZArith.Zpower <> two_power_nat def
R41129:41129 Coq.Init.Datatypes <> S constr
R41131:41131 compcert.lib.Integers <> n var
R41257:41269 Coq.ZArith.Zpower <> two_power_nat def
R41257:41269 Coq.ZArith.Zpower <> two_power_nat def
R41304:41307 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R41300:41302 Coq.Init.Logic <> :type_scope:x_'='_x not
R41309:41311 Coq.Init.Logic <> :type_scope:x_'='_x not
R41304:41307 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R41300:41302 Coq.Init.Logic <> :type_scope:x_'='_x not
R41309:41311 Coq.Init.Logic <> :type_scope:x_'='_x not
R41376:41380 Coq.ZArith.Znat <> inj_S syndef
R41376:41380 Coq.ZArith.Znat <> inj_S syndef
R41376:41380 Coq.ZArith.Znat <> inj_S syndef
R41391:41401 compcert.lib.Integers Make Ztestbit_eq thm
R41391:41401 compcert.lib.Integers Make Ztestbit_eq thm
R41391:41401 compcert.lib.Integers Make Ztestbit_eq thm
R41391:41401 compcert.lib.Integers Make Ztestbit_eq thm
R41412:41420 compcert.lib.Coqlib <> zeq_false thm
R41412:41420 compcert.lib.Coqlib <> zeq_false thm
R41412:41420 compcert.lib.Coqlib <> zeq_false thm
R41412:41420 compcert.lib.Coqlib <> zeq_false thm
R41431:41441 Coq.ZArith.BinInt Z pred_succ thm
R41431:41441 Coq.ZArith.BinInt Z pred_succ thm
R41431:41441 Coq.ZArith.BinInt Z pred_succ thm
R41469:41483 Coq.ZArith.Zpower <> two_power_nat_S thm
R41469:41483 Coq.ZArith.Zpower <> two_power_nat_S thm
R41469:41483 Coq.ZArith.Zpower <> two_power_nat_S thm
R41500:41502 compcert.lib.Coqlib <> zlt def
R41516:41528 Coq.ZArith.Zpower <> two_power_nat def
R41505:41510 Coq.ZArith.BinInt Z div2 def
R41544:41550 compcert.lib.Integers Make Zdecomp thm
R41564:41576 compcert.lib.Integers Make Zshiftin_spec thm
R41500:41502 compcert.lib.Coqlib <> zlt def
R41516:41528 Coq.ZArith.Zpower <> two_power_nat def
R41505:41510 Coq.ZArith.BinInt Z div2 def
R41544:41550 compcert.lib.Integers Make Zdecomp thm
R41544:41550 compcert.lib.Integers Make Zdecomp thm
R41544:41550 compcert.lib.Integers Make Zdecomp thm
R41544:41550 compcert.lib.Integers Make Zdecomp thm
R41564:41576 compcert.lib.Integers Make Zshiftin_spec thm
R41564:41576 compcert.lib.Integers Make Zshiftin_spec thm
R41564:41576 compcert.lib.Integers Make Zshiftin_spec thm
R41564:41576 compcert.lib.Integers Make Zshiftin_spec thm
R41591:41598 compcert.lib.Coqlib <> zlt_true thm
R41591:41598 compcert.lib.Coqlib <> zlt_true thm
R41591:41598 compcert.lib.Coqlib <> zlt_true thm
R41591:41598 compcert.lib.Coqlib <> zlt_true thm
R41617:41621 Coq.ZArith.BinInt Z odd def
R41617:41621 Coq.ZArith.BinInt Z odd def
R41646:41654 compcert.lib.Coqlib <> zlt_false thm
R41646:41654 compcert.lib.Coqlib <> zlt_false thm
R41646:41654 compcert.lib.Coqlib <> zlt_false thm
R41646:41654 compcert.lib.Coqlib <> zlt_false thm
R41673:41677 Coq.ZArith.BinInt Z odd def
R41673:41677 Coq.ZArith.BinInt Z odd def
R41703:41709 compcert.lib.Integers Make Zdecomp thm
R41728:41740 compcert.lib.Integers Make Zshiftin_spec thm
R41703:41709 compcert.lib.Integers Make Zdecomp thm
R41703:41709 compcert.lib.Integers Make Zdecomp thm
R41728:41740 compcert.lib.Integers Make Zshiftin_spec thm
R41728:41740 compcert.lib.Integers Make Zshiftin_spec thm
R41760:41774 Coq.ZArith.Zpower <> two_power_nat_S thm
R41760:41774 Coq.ZArith.Zpower <> two_power_nat_S thm
R41760:41774 Coq.ZArith.Zpower <> two_power_nat_S thm
R41792:41796 Coq.ZArith.BinInt Z odd def
R41792:41796 Coq.ZArith.BinInt Z odd def
prf 41839:41850 Make Zshiftin_ind
R41867:41870 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41866:41866 Coq.Numbers.BinNums <> Z ind
R41883:41888 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41889:41889 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41935:41941 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41958:41961 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41962:41962 compcert.lib.Integers <> P var
R41964:41964 compcert.lib.Integers <> x var
R41953:41956 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R41957:41957 compcert.lib.Integers <> x var
R41908:41911 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41915:41918 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41919:41919 compcert.lib.Integers <> P var
R41922:41929 compcert.lib.Integers Make Zshiftin def
R41933:41933 compcert.lib.Integers <> x var
R41931:41931 compcert.lib.Integers <> b var
R41912:41912 compcert.lib.Integers <> P var
R41914:41914 compcert.lib.Integers <> x var
R41903:41906 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R41907:41907 compcert.lib.Integers <> x var
R41880:41880 compcert.lib.Integers <> P var
R42040:42047 compcert.lib.Integers Make Zshiftin def
R42055:42059 Coq.ZArith.BinInt Z pos syndef
R42049:42052 Coq.Init.Datatypes <> true constr
R42040:42047 compcert.lib.Integers Make Zshiftin def
R42055:42059 Coq.ZArith.BinInt Z pos syndef
R42049:42052 Coq.Init.Datatypes <> true constr
R42090:42097 compcert.lib.Integers Make Zshiftin def
R42106:42110 Coq.ZArith.BinInt Z pos syndef
R42099:42103 Coq.Init.Datatypes <> false constr
R42090:42097 compcert.lib.Integers Make Zshiftin def
R42106:42110 Coq.ZArith.BinInt Z pos syndef
R42099:42103 Coq.Init.Datatypes <> false constr
R42141:42148 compcert.lib.Integers Make Zshiftin def
R42150:42153 Coq.Init.Datatypes <> true constr
R42141:42148 compcert.lib.Integers Make Zshiftin def
R42150:42153 Coq.Init.Datatypes <> true constr
prf 42236:42251 Make Zshiftin_pos_ind
R42268:42271 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42267:42267 Coq.Numbers.BinNums <> Z ind
R42284:42289 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42290:42290 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42335:42341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42357:42360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42361:42361 compcert.lib.Integers <> P var
R42363:42363 compcert.lib.Integers <> x var
R42353:42355 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R42356:42356 compcert.lib.Integers <> x var
R42308:42311 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42315:42318 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42319:42319 compcert.lib.Integers <> P var
R42322:42329 compcert.lib.Integers Make Zshiftin def
R42333:42333 compcert.lib.Integers <> x var
R42331:42331 compcert.lib.Integers <> b var
R42312:42312 compcert.lib.Integers <> P var
R42314:42314 compcert.lib.Integers <> x var
R42304:42306 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R42307:42307 compcert.lib.Integers <> x var
R42281:42281 compcert.lib.Integers <> P var
R42458:42465 compcert.lib.Integers Make Zshiftin def
R42473:42477 Coq.ZArith.BinInt Z pos syndef
R42467:42470 Coq.Init.Datatypes <> true constr
R42458:42465 compcert.lib.Integers Make Zshiftin def
R42473:42477 Coq.ZArith.BinInt Z pos syndef
R42467:42470 Coq.Init.Datatypes <> true constr
R42508:42515 compcert.lib.Integers Make Zshiftin def
R42524:42528 Coq.ZArith.BinInt Z pos syndef
R42517:42521 Coq.Init.Datatypes <> false constr
R42508:42515 compcert.lib.Integers Make Zshiftin def
R42524:42528 Coq.ZArith.BinInt Z pos syndef
R42517:42521 Coq.Init.Datatypes <> false constr
prf 42566:42576 Make Ztestbit_le
R42601:42606 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42607:42607 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42672:42678 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42680:42683 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R42679:42679 compcert.lib.Integers <> x var
R42684:42684 compcert.lib.Integers <> y var
R42624:42627 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42648:42651 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42665:42667 Coq.Init.Logic <> :type_scope:x_'='_x not
R42652:42660 Coq.ZArith.BinInt Z testbit def
R42664:42664 compcert.lib.Integers <> i var
R42662:42662 compcert.lib.Integers <> y var
R42668:42671 Coq.Init.Datatypes <> true constr
R42641:42643 Coq.Init.Logic <> :type_scope:x_'='_x not
R42628:42636 Coq.ZArith.BinInt Z testbit def
R42640:42640 compcert.lib.Integers <> i var
R42638:42638 compcert.lib.Integers <> x var
R42644:42647 Coq.Init.Datatypes <> true constr
R42619:42622 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R42623:42623 compcert.lib.Integers <> i var
R42596:42599 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R42600:42600 compcert.lib.Integers <> y var
R42742:42753 compcert.lib.Integers Make Zshiftin_ind thm
R42742:42753 compcert.lib.Integers Make Zshiftin_ind thm
R42805:42819 compcert.lib.Integers Make equal_same_bits thm
R42805:42819 compcert.lib.Integers Make equal_same_bits thm
R42842:42851 compcert.lib.Integers Make Ztestbit_0 thm
R42842:42851 compcert.lib.Integers Make Ztestbit_0 thm
R42842:42851 compcert.lib.Integers Make Ztestbit_0 thm
R42864:42872 Coq.ZArith.BinInt Z testbit def
R42864:42872 Coq.ZArith.BinInt Z testbit def
R42928:42937 compcert.lib.Integers Make Ztestbit_0 thm
R42928:42937 compcert.lib.Integers Make Ztestbit_0 thm
R42928:42937 compcert.lib.Integers Make Ztestbit_0 thm
R42967:42970 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R42958:42963 Coq.ZArith.BinInt Z div2 def
R42967:42970 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R42958:42963 Coq.ZArith.BinInt Z div2 def
R43012:43016 Coq.ZArith.BinInt <> Zsucc syndef
R43012:43016 Coq.ZArith.BinInt <> Zsucc syndef
R43046:43058 compcert.lib.Integers Make Ztestbit_succ thm
R43046:43058 compcert.lib.Integers Make Ztestbit_succ thm
R43046:43058 compcert.lib.Integers Make Ztestbit_succ thm
R43046:43058 compcert.lib.Integers Make Ztestbit_succ thm
R43075:43095 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R43075:43095 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R43075:43095 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R43075:43095 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R43123:43129 compcert.lib.Integers Make Zdecomp thm
R43123:43129 compcert.lib.Integers Make Zdecomp thm
R43123:43129 compcert.lib.Integers Make Zdecomp thm
R43145:43157 compcert.lib.Integers Make Zshiftin_spec thm
R43145:43157 compcert.lib.Integers Make Zshiftin_spec thm
R43145:43157 compcert.lib.Integers Make Zshiftin_spec thm
R43145:43157 compcert.lib.Integers Make Zshiftin_spec thm
R43145:43157 compcert.lib.Integers Make Zshiftin_spec thm
R43174:43178 Coq.ZArith.BinInt Z odd def
R43174:43178 Coq.ZArith.BinInt Z odd def
R43269:43281 compcert.lib.Integers Make Ztestbit_base thm
R43269:43281 compcert.lib.Integers Make Ztestbit_base thm
R43269:43281 compcert.lib.Integers Make Ztestbit_base thm
R43302:43322 compcert.lib.Integers Make Ztestbit_shiftin_base thm
R43302:43322 compcert.lib.Integers Make Ztestbit_shiftin_base thm
R43302:43322 compcert.lib.Integers Make Ztestbit_shiftin_base thm
def 43401:43407 Make testbit
R43413:43415 compcert.lib.Integers Make int rec
R43422:43422 Coq.Numbers.BinNums <> Z ind
R43427:43430 Coq.Init.Datatypes <> bool ind
R43435:43443 Coq.ZArith.BinInt Z testbit def
R43458:43458 compcert.lib.Integers <> i var
R43446:43453 compcert.lib.Integers Make unsigned def
R43455:43455 compcert.lib.Integers <> x var
prf 43468:43479 Make testbit_repr
R43516:43521 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43540:43542 Coq.Init.Logic <> :type_scope:x_'='_x not
R43522:43528 compcert.lib.Integers Make testbit def
R43539:43539 compcert.lib.Integers <> i var
R43531:43534 compcert.lib.Integers Make repr def
R43536:43536 compcert.lib.Integers <> x var
R43543:43551 Coq.ZArith.BinInt Z testbit def
R43555:43555 compcert.lib.Integers <> i var
R43553:43553 compcert.lib.Integers <> x var
R43499:43502 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R43504:43506 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R43503:43503 compcert.lib.Integers <> i var
R43503:43503 compcert.lib.Integers <> i var
R43507:43515 compcert.lib.Integers Make zwordsize def
R43582:43588 compcert.lib.Integers Make testbit def
R43597:43609 compcert.lib.Integers Make same_bits_eqm thm
R43597:43609 compcert.lib.Integers Make same_bits_eqm thm
prf 43640:43651 Make same_bits_eq
R43670:43670 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43728:43734 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43736:43738 Coq.Init.Logic <> :type_scope:x_'='_x not
R43735:43735 compcert.lib.Integers <> x var
R43739:43739 compcert.lib.Integers <> y var
R43699:43702 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43714:43716 Coq.Init.Logic <> :type_scope:x_'='_x not
R43703:43709 compcert.lib.Integers Make testbit def
R43713:43713 compcert.lib.Integers <> i var
R43711:43711 compcert.lib.Integers <> x var
R43717:43723 compcert.lib.Integers Make testbit def
R43727:43727 compcert.lib.Integers <> i var
R43725:43725 compcert.lib.Integers <> y var
R43682:43685 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R43687:43689 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R43686:43686 compcert.lib.Integers <> i var
R43686:43686 compcert.lib.Integers <> i var
R43690:43698 compcert.lib.Integers Make zwordsize def
R43771:43783 compcert.lib.Integers Make repr_unsigned thm
R43771:43783 compcert.lib.Integers Make repr_unsigned thm
R43771:43783 compcert.lib.Integers Make repr_unsigned thm
R43801:43813 compcert.lib.Integers Make repr_unsigned thm
R43801:43813 compcert.lib.Integers Make repr_unsigned thm
R43801:43813 compcert.lib.Integers Make repr_unsigned thm
R43827:43838 compcert.lib.Integers Make eqm_samerepr thm
R43827:43838 compcert.lib.Integers Make eqm_samerepr thm
R43847:43859 compcert.lib.Integers Make eqm_same_bits thm
R43847:43859 compcert.lib.Integers Make eqm_same_bits thm
prf 43880:43889 Make bits_above
R43920:43923 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43935:43937 Coq.Init.Logic <> :type_scope:x_'='_x not
R43924:43930 compcert.lib.Integers Make testbit def
R43934:43934 compcert.lib.Integers <> i var
R43932:43932 compcert.lib.Integers <> x var
R43938:43942 Coq.Init.Datatypes <> false constr
R43907:43910 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R43906:43906 compcert.lib.Integers <> i var
R43911:43919 compcert.lib.Integers Make zwordsize def
R43988:43995 compcert.lib.Integers Make wordsize def
R43968:43981 compcert.lib.Integers Make Ztestbit_above thm
R43988:43995 compcert.lib.Integers Make wordsize def
R43968:43981 compcert.lib.Integers Make Ztestbit_above thm
R44010:44023 compcert.lib.Integers Make unsigned_range thm
R44010:44023 compcert.lib.Integers Make unsigned_range thm
prf 44038:44046 Make bits_zero
R44075:44077 Coq.Init.Logic <> :type_scope:x_'='_x not
R44061:44067 compcert.lib.Integers Make testbit def
R44074:44074 compcert.lib.Integers <> i var
R44069:44072 compcert.lib.Integers Make zero def
R44078:44082 Coq.Init.Datatypes <> false constr
R44109:44115 compcert.lib.Integers Make testbit def
R44126:44138 compcert.lib.Integers Make unsigned_zero thm
R44126:44138 compcert.lib.Integers Make unsigned_zero thm
R44126:44138 compcert.lib.Integers Make unsigned_zero thm
R44147:44156 compcert.lib.Integers Make Ztestbit_0 thm
R44147:44156 compcert.lib.Integers Make Ztestbit_0 thm
prf 44172:44179 Make bits_one
R44205:44207 Coq.Init.Logic <> :type_scope:x_'='_x not
R44192:44198 compcert.lib.Integers Make testbit def
R44204:44204 compcert.lib.Integers <> n var
R44200:44202 compcert.lib.Integers Make one def
R44208:44210 compcert.lib.Coqlib <> zeq def
R44212:44212 compcert.lib.Integers <> n var
R44233:44239 compcert.lib.Integers Make testbit def
R44258:44269 compcert.lib.Integers Make unsigned_one thm
R44258:44269 compcert.lib.Integers Make unsigned_one thm
R44258:44269 compcert.lib.Integers Make unsigned_one thm
R44278:44287 compcert.lib.Integers Make Ztestbit_1 thm
R44278:44287 compcert.lib.Integers Make Ztestbit_1 thm
prf 44302:44310 Make bits_mone
R44343:44346 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44361:44363 Coq.Init.Logic <> :type_scope:x_'='_x not
R44347:44353 compcert.lib.Integers Make testbit def
R44360:44360 compcert.lib.Integers <> i var
R44355:44358 compcert.lib.Integers Make mone def
R44364:44367 Coq.Init.Datatypes <> true constr
R44326:44329 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R44331:44333 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R44330:44330 compcert.lib.Integers <> i var
R44330:44330 compcert.lib.Integers <> i var
R44334:44342 compcert.lib.Integers Make zwordsize def
R44394:44397 compcert.lib.Integers Make mone def
R44408:44419 compcert.lib.Integers Make testbit_repr thm
R44408:44419 compcert.lib.Integers Make testbit_repr thm
R44408:44419 compcert.lib.Integers Make testbit_repr thm
R44408:44419 compcert.lib.Integers Make testbit_repr thm
R44434:44444 compcert.lib.Integers Make Ztestbit_m1 thm
R44434:44444 compcert.lib.Integers Make Ztestbit_m1 thm
R44473:44481 compcert.lib.Integers Make bits_zero thm
R44483:44491 compcert.lib.Integers Make bits_mone thm
R44536:44547 compcert.lib.Integers Make same_bits_eq thm
prf 44604:44623 Make sign_bit_of_unsigned
R44663:44665 Coq.Init.Logic <> :type_scope:x_'='_x not
R44638:44644 compcert.lib.Integers Make testbit def
R44658:44660 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R44649:44657 compcert.lib.Integers Make zwordsize def
R44646:44646 compcert.lib.Integers <> x var
R44669:44671 compcert.lib.Coqlib <> zlt def
R44686:44697 compcert.lib.Integers Make half_modulus def
R44674:44681 compcert.lib.Integers Make unsigned def
R44683:44683 compcert.lib.Integers <> x var
R44715:44718 Coq.Init.Datatypes <> true constr
R44704:44708 Coq.Init.Datatypes <> false constr
R44745:44751 compcert.lib.Integers Make testbit def
R44768:44771 Coq.Init.Peano <> pred syndef
R44773:44780 compcert.lib.Integers Make wordsize def
R44768:44771 Coq.Init.Peano <> pred syndef
R44773:44780 compcert.lib.Integers Make wordsize def
R44807:44809 Coq.Init.Logic <> :type_scope:x_'='_x not
R44803:44805 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R44794:44802 compcert.lib.Integers Make zwordsize def
R44810:44817 Coq.ZArith.BinInt <> Z_of_nat syndef
R44807:44809 Coq.Init.Logic <> :type_scope:x_'='_x not
R44803:44805 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R44794:44802 compcert.lib.Integers Make zwordsize def
R44810:44817 Coq.ZArith.BinInt <> Z_of_nat syndef
R44836:44844 compcert.lib.Integers Make zwordsize def
R44852:44859 compcert.lib.Integers Make wordsize def
R44875:44885 compcert.lib.Integers WS wordsize defax
R44875:44885 compcert.lib.Integers WS wordsize defax
R44909:44928 compcert.lib.Integers WS wordsize_not_zero prfax
R44909:44928 compcert.lib.Integers WS wordsize_not_zero prfax
R44949:44953 Coq.ZArith.Znat <> inj_S syndef
R44949:44953 Coq.ZArith.Znat <> inj_S syndef
R44949:44953 Coq.ZArith.Znat <> inj_S syndef
R44992:44994 Coq.Init.Logic <> :type_scope:x_'='_x not
R44980:44991 compcert.lib.Integers Make half_modulus def
R44995:45007 Coq.ZArith.Zpower <> two_power_nat def
R44992:44994 Coq.Init.Logic <> :type_scope:x_'='_x not
R44980:44991 compcert.lib.Integers Make half_modulus def
R44995:45007 Coq.ZArith.Zpower <> two_power_nat def
R45027:45045 compcert.lib.Coqlib <> two_power_nat_two_p thm
R45027:45045 compcert.lib.Coqlib <> two_power_nat_two_p thm
R45027:45045 compcert.lib.Coqlib <> two_power_nat_two_p thm
R45068:45085 compcert.lib.Integers Make half_modulus_power thm
R45068:45085 compcert.lib.Integers Make half_modulus_power thm
R45121:45129 compcert.lib.Integers Make Zsign_bit thm
R45121:45129 compcert.lib.Integers Make Zsign_bit thm
R45140:45154 Coq.ZArith.Zpower <> two_power_nat_S thm
R45140:45154 Coq.ZArith.Zpower <> two_power_nat_S thm
R45140:45154 Coq.ZArith.Zpower <> two_power_nat_S thm
R45185:45204 compcert.lib.Integers Make half_modulus_modulus thm
R45185:45204 compcert.lib.Integers Make half_modulus_modulus thm
R45185:45204 compcert.lib.Integers Make half_modulus_modulus thm
R45213:45226 compcert.lib.Integers Make unsigned_range thm
R45213:45226 compcert.lib.Integers Make unsigned_range thm
prf 45241:45251 Make bits_signed
R45274:45279 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45302:45304 Coq.Init.Logic <> :type_scope:x_'='_x not
R45280:45288 Coq.ZArith.BinInt Z testbit def
R45301:45301 compcert.lib.Integers <> i var
R45291:45296 compcert.lib.Integers Make signed def
R45298:45298 compcert.lib.Integers <> x var
R45305:45311 compcert.lib.Integers Make testbit def
R45319:45321 compcert.lib.Coqlib <> zlt def
R45325:45333 compcert.lib.Integers Make zwordsize def
R45323:45323 compcert.lib.Integers <> i var
R45356:45358 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R45347:45355 compcert.lib.Integers Make zwordsize def
R45340:45340 compcert.lib.Integers <> i var
R45313:45313 compcert.lib.Integers <> x var
R45269:45272 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R45273:45273 compcert.lib.Integers <> i var
R45392:45394 compcert.lib.Coqlib <> zlt def
R45398:45406 compcert.lib.Integers Make zwordsize def
R45392:45394 compcert.lib.Coqlib <> zlt def
R45398:45406 compcert.lib.Integers Make zwordsize def
R45420:45432 compcert.lib.Integers Make same_bits_eqm thm
R45420:45432 compcert.lib.Integers Make same_bits_eqm thm
R45441:45459 compcert.lib.Integers Make eqm_signed_unsigned thm
R45441:45459 compcert.lib.Integers Make eqm_signed_unsigned thm
R45480:45485 compcert.lib.Integers Make signed def
R45496:45515 compcert.lib.Integers Make sign_bit_of_unsigned thm
R45496:45515 compcert.lib.Integers Make sign_bit_of_unsigned thm
R45496:45515 compcert.lib.Integers Make sign_bit_of_unsigned thm
R45528:45530 compcert.lib.Coqlib <> zlt def
R45545:45556 compcert.lib.Integers Make half_modulus def
R45533:45540 compcert.lib.Integers Make unsigned def
R45528:45530 compcert.lib.Coqlib <> zlt def
R45545:45556 compcert.lib.Integers Make half_modulus def
R45533:45540 compcert.lib.Integers Make unsigned def
R45592:45599 compcert.lib.Integers Make wordsize def
R45572:45585 compcert.lib.Integers Make Ztestbit_above thm
R45592:45599 compcert.lib.Integers Make wordsize def
R45572:45585 compcert.lib.Integers Make Ztestbit_above thm
R45608:45621 compcert.lib.Integers Make unsigned_range thm
R45608:45621 compcert.lib.Integers Make unsigned_range thm
R45666:45673 compcert.lib.Integers Make wordsize def
R45642:45659 compcert.lib.Integers Make Ztestbit_above_neg thm
R45666:45673 compcert.lib.Integers Make wordsize def
R45642:45659 compcert.lib.Integers Make Ztestbit_above_neg thm
R45687:45693 compcert.lib.Integers Make modulus def
R45687:45693 compcert.lib.Integers Make modulus def
R45708:45721 compcert.lib.Integers Make unsigned_range thm
R45708:45721 compcert.lib.Integers Make unsigned_range thm
prf 45752:45758 Make bits_le
R45777:45777 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45850:45856 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45867:45870 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R45857:45864 compcert.lib.Integers Make unsigned def
R45866:45866 compcert.lib.Integers <> x var
R45871:45878 compcert.lib.Integers Make unsigned def
R45880:45880 compcert.lib.Integers <> y var
R45806:45809 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45828:45831 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45843:45845 Coq.Init.Logic <> :type_scope:x_'='_x not
R45832:45838 compcert.lib.Integers Make testbit def
R45842:45842 compcert.lib.Integers <> i var
R45840:45840 compcert.lib.Integers <> y var
R45846:45849 Coq.Init.Datatypes <> true constr
R45821:45823 Coq.Init.Logic <> :type_scope:x_'='_x not
R45810:45816 compcert.lib.Integers Make testbit def
R45820:45820 compcert.lib.Integers <> i var
R45818:45818 compcert.lib.Integers <> x var
R45824:45827 Coq.Init.Datatypes <> true constr
R45789:45792 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R45794:45796 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R45793:45793 compcert.lib.Integers <> i var
R45793:45793 compcert.lib.Integers <> i var
R45797:45805 compcert.lib.Integers Make zwordsize def
R45906:45916 compcert.lib.Integers Make Ztestbit_le thm
R45906:45916 compcert.lib.Integers Make Ztestbit_le thm
R45931:45944 compcert.lib.Integers Make unsigned_range thm
R45931:45944 compcert.lib.Integers Make unsigned_range thm
R45973:45979 compcert.lib.Integers Make testbit def
R45973:45979 compcert.lib.Integers Make testbit def
R45997:45999 compcert.lib.Coqlib <> zlt def
R46003:46011 compcert.lib.Integers Make zwordsize def
R45997:45999 compcert.lib.Coqlib <> zlt def
R46003:46011 compcert.lib.Integers Make zwordsize def
R46047:46053 compcert.lib.Integers Make testbit def
R46047:46053 compcert.lib.Integers Make testbit def
R46075:46084 compcert.lib.Integers Make bits_above thm
R46075:46084 compcert.lib.Integers Make bits_above thm
R46075:46084 compcert.lib.Integers Make bits_above thm
R46075:46084 compcert.lib.Integers Make bits_above thm
prf 46169:46176 Make bits_and
R46213:46218 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46238:46240 Coq.Init.Logic <> :type_scope:x_'='_x not
R46219:46225 compcert.lib.Integers Make testbit def
R46237:46237 compcert.lib.Integers <> i var
R46228:46230 compcert.lib.Integers Make and def
R46234:46234 compcert.lib.Integers <> y var
R46232:46232 compcert.lib.Integers <> x var
R46252:46255 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R46241:46247 compcert.lib.Integers Make testbit def
R46251:46251 compcert.lib.Integers <> i var
R46249:46249 compcert.lib.Integers <> x var
R46256:46262 compcert.lib.Integers Make testbit def
R46266:46266 compcert.lib.Integers <> i var
R46264:46264 compcert.lib.Integers <> y var
R46196:46199 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46201:46203 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46200:46200 compcert.lib.Integers <> i var
R46200:46200 compcert.lib.Integers <> i var
R46204:46212 compcert.lib.Integers Make zwordsize def
R46293:46295 compcert.lib.Integers Make and def
R46306:46317 compcert.lib.Integers Make testbit_repr thm
R46306:46317 compcert.lib.Integers Make testbit_repr thm
R46306:46317 compcert.lib.Integers Make testbit_repr thm
R46306:46317 compcert.lib.Integers Make testbit_repr thm
R46334:46344 Coq.ZArith.BinInt Z land_spec thm
R46334:46344 Coq.ZArith.BinInt Z land_spec thm
R46334:46344 Coq.ZArith.BinInt Z land_spec thm
prf 46370:46376 Make bits_or
R46413:46418 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46437:46439 Coq.Init.Logic <> :type_scope:x_'='_x not
R46419:46425 compcert.lib.Integers Make testbit def
R46436:46436 compcert.lib.Integers <> i var
R46428:46429 compcert.lib.Integers Make or def
R46433:46433 compcert.lib.Integers <> y var
R46431:46431 compcert.lib.Integers <> x var
R46451:46454 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R46440:46446 compcert.lib.Integers Make testbit def
R46450:46450 compcert.lib.Integers <> i var
R46448:46448 compcert.lib.Integers <> x var
R46455:46461 compcert.lib.Integers Make testbit def
R46465:46465 compcert.lib.Integers <> i var
R46463:46463 compcert.lib.Integers <> y var
R46396:46399 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46401:46403 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46400:46400 compcert.lib.Integers <> i var
R46400:46400 compcert.lib.Integers <> i var
R46404:46412 compcert.lib.Integers Make zwordsize def
R46492:46493 compcert.lib.Integers Make or def
R46504:46515 compcert.lib.Integers Make testbit_repr thm
R46504:46515 compcert.lib.Integers Make testbit_repr thm
R46504:46515 compcert.lib.Integers Make testbit_repr thm
R46504:46515 compcert.lib.Integers Make testbit_repr thm
R46532:46541 Coq.ZArith.BinInt Z lor_spec thm
R46532:46541 Coq.ZArith.BinInt Z lor_spec thm
R46532:46541 Coq.ZArith.BinInt Z lor_spec thm
prf 46567:46574 Make bits_xor
R46611:46616 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46636:46638 Coq.Init.Logic <> :type_scope:x_'='_x not
R46617:46623 compcert.lib.Integers Make testbit def
R46635:46635 compcert.lib.Integers <> i var
R46626:46628 compcert.lib.Integers Make xor def
R46632:46632 compcert.lib.Integers <> y var
R46630:46630 compcert.lib.Integers <> x var
R46639:46642 Coq.Init.Datatypes <> xorb def
R46659:46665 compcert.lib.Integers Make testbit def
R46669:46669 compcert.lib.Integers <> i var
R46667:46667 compcert.lib.Integers <> y var
R46645:46651 compcert.lib.Integers Make testbit def
R46655:46655 compcert.lib.Integers <> i var
R46653:46653 compcert.lib.Integers <> x var
R46594:46597 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46599:46601 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46598:46598 compcert.lib.Integers <> i var
R46598:46598 compcert.lib.Integers <> i var
R46602:46610 compcert.lib.Integers Make zwordsize def
R46697:46699 compcert.lib.Integers Make xor def
R46710:46721 compcert.lib.Integers Make testbit_repr thm
R46710:46721 compcert.lib.Integers Make testbit_repr thm
R46710:46721 compcert.lib.Integers Make testbit_repr thm
R46710:46721 compcert.lib.Integers Make testbit_repr thm
R46738:46748 Coq.ZArith.BinInt Z lxor_spec thm
R46738:46748 Coq.ZArith.BinInt Z lxor_spec thm
R46738:46748 Coq.ZArith.BinInt Z lxor_spec thm
prf 46774:46781 Make bits_not
R46816:46821 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46839:46841 Coq.Init.Logic <> :type_scope:x_'='_x not
R46822:46828 compcert.lib.Integers Make testbit def
R46838:46838 compcert.lib.Integers <> i var
R46831:46833 compcert.lib.Integers Make not def
R46835:46835 compcert.lib.Integers <> x var
R46842:46845 Coq.Init.Datatypes <> negb def
R46848:46854 compcert.lib.Integers Make testbit def
R46858:46858 compcert.lib.Integers <> i var
R46856:46856 compcert.lib.Integers <> x var
R46799:46802 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46804:46806 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46803:46803 compcert.lib.Integers <> i var
R46803:46803 compcert.lib.Integers <> i var
R46807:46815 compcert.lib.Integers Make zwordsize def
R46886:46888 compcert.lib.Integers Make not def
R46899:46906 compcert.lib.Integers Make bits_xor thm
R46899:46906 compcert.lib.Integers Make bits_xor thm
R46899:46906 compcert.lib.Integers Make bits_xor thm
R46899:46906 compcert.lib.Integers Make bits_xor thm
R46923:46931 compcert.lib.Integers Make bits_mone thm
R46923:46931 compcert.lib.Integers Make bits_mone thm
R46923:46931 compcert.lib.Integers Make bits_mone thm
R46923:46931 compcert.lib.Integers Make bits_mone thm
R46959:46966 compcert.lib.Integers Make bits_and thm
R46968:46974 compcert.lib.Integers Make bits_or thm
R46976:46983 compcert.lib.Integers Make bits_xor thm
R46985:46992 compcert.lib.Integers Make bits_not thm
prf 47010:47019 Make and_commut
R47041:47043 Coq.Init.Logic <> :type_scope:x_'='_x not
R47034:47036 compcert.lib.Integers Make and def
R47040:47040 compcert.lib.Integers <> y var
R47038:47038 compcert.lib.Integers <> x var
R47044:47046 compcert.lib.Integers Make and def
R47050:47050 compcert.lib.Integers <> x var
R47048:47048 compcert.lib.Integers <> y var
prf 47087:47095 Make and_assoc
R47127:47129 Coq.Init.Logic <> :type_scope:x_'='_x not
R47112:47114 compcert.lib.Integers Make and def
R47126:47126 compcert.lib.Integers <> z var
R47117:47119 compcert.lib.Integers Make and def
R47123:47123 compcert.lib.Integers <> y var
R47121:47121 compcert.lib.Integers <> x var
R47130:47132 compcert.lib.Integers Make and def
R47137:47139 compcert.lib.Integers Make and def
R47143:47143 compcert.lib.Integers <> z var
R47141:47141 compcert.lib.Integers <> y var
R47134:47134 compcert.lib.Integers <> x var
prf 47181:47188 Make and_zero
R47211:47213 Coq.Init.Logic <> :type_scope:x_'='_x not
R47201:47203 compcert.lib.Integers Make and def
R47207:47210 compcert.lib.Integers Make zero def
R47205:47205 compcert.lib.Integers <> x var
R47214:47217 compcert.lib.Integers Make zero def
R47246:47257 Coq.Bool.Bool <> andb_b_false syndef
R47246:47257 Coq.Bool.Bool <> andb_b_false syndef
prf 47276:47285 Make and_zero_l
R47308:47310 Coq.Init.Logic <> :type_scope:x_'='_x not
R47298:47300 compcert.lib.Integers Make and def
R47307:47307 compcert.lib.Integers <> x var
R47302:47305 compcert.lib.Integers Make zero def
R47311:47314 compcert.lib.Integers Make zero def
R47342:47351 compcert.lib.Integers Make and_commut thm
R47342:47351 compcert.lib.Integers Make and_commut thm
R47342:47351 compcert.lib.Integers Make and_commut thm
R47360:47367 compcert.lib.Integers Make and_zero thm
R47360:47367 compcert.lib.Integers Make and_zero thm
prf 47384:47391 Make and_mone
R47414:47416 Coq.Init.Logic <> :type_scope:x_'='_x not
R47404:47406 compcert.lib.Integers Make and def
R47410:47413 compcert.lib.Integers Make mone def
R47408:47408 compcert.lib.Integers <> x var
R47417:47417 compcert.lib.Integers <> x var
R47446:47456 Coq.Bool.Bool <> andb_b_true syndef
R47446:47456 Coq.Bool.Bool <> andb_b_true syndef
prf 47475:47484 Make and_mone_l
R47507:47509 Coq.Init.Logic <> :type_scope:x_'='_x not
R47497:47499 compcert.lib.Integers Make and def
R47506:47506 compcert.lib.Integers <> x var
R47501:47504 compcert.lib.Integers Make mone def
R47510:47510 compcert.lib.Integers <> x var
R47538:47547 compcert.lib.Integers Make and_commut thm
R47538:47547 compcert.lib.Integers Make and_commut thm
R47538:47547 compcert.lib.Integers Make and_commut thm
R47556:47563 compcert.lib.Integers Make and_mone thm
R47556:47563 compcert.lib.Integers Make and_mone thm
prf 47580:47587 Make and_idem
R47607:47609 Coq.Init.Logic <> :type_scope:x_'='_x not
R47600:47602 compcert.lib.Integers Make and def
R47606:47606 compcert.lib.Integers <> x var
R47604:47604 compcert.lib.Integers <> x var
R47610:47610 compcert.lib.Integers <> x var
R47643:47649 compcert.lib.Integers Make testbit def
R47643:47649 compcert.lib.Integers Make testbit def
prf 47677:47685 Make or_commut
R47706:47708 Coq.Init.Logic <> :type_scope:x_'='_x not
R47700:47701 compcert.lib.Integers Make or def
R47705:47705 compcert.lib.Integers <> y var
R47703:47703 compcert.lib.Integers <> x var
R47709:47710 compcert.lib.Integers Make or def
R47714:47714 compcert.lib.Integers <> x var
R47712:47712 compcert.lib.Integers <> y var
prf 47751:47758 Make or_assoc
R47788:47790 Coq.Init.Logic <> :type_scope:x_'='_x not
R47775:47776 compcert.lib.Integers Make or def
R47787:47787 compcert.lib.Integers <> z var
R47779:47780 compcert.lib.Integers Make or def
R47784:47784 compcert.lib.Integers <> y var
R47782:47782 compcert.lib.Integers <> x var
R47791:47792 compcert.lib.Integers Make or def
R47797:47798 compcert.lib.Integers Make or def
R47802:47802 compcert.lib.Integers <> z var
R47800:47800 compcert.lib.Integers <> y var
R47794:47794 compcert.lib.Integers <> x var
prf 47840:47846 Make or_zero
R47868:47870 Coq.Init.Logic <> :type_scope:x_'='_x not
R47859:47860 compcert.lib.Integers Make or def
R47864:47867 compcert.lib.Integers Make zero def
R47862:47862 compcert.lib.Integers <> x var
R47871:47871 compcert.lib.Integers <> x var
prf 47910:47918 Make or_zero_l
R47940:47942 Coq.Init.Logic <> :type_scope:x_'='_x not
R47931:47932 compcert.lib.Integers Make or def
R47939:47939 compcert.lib.Integers <> x var
R47934:47937 compcert.lib.Integers Make zero def
R47943:47943 compcert.lib.Integers <> x var
R47971:47979 compcert.lib.Integers Make or_commut thm
R47971:47979 compcert.lib.Integers Make or_commut thm
R47971:47979 compcert.lib.Integers Make or_commut thm
R47988:47994 compcert.lib.Integers Make or_zero thm
R47988:47994 compcert.lib.Integers Make or_zero thm
prf 48011:48017 Make or_mone
R48039:48041 Coq.Init.Logic <> :type_scope:x_'='_x not
R48030:48031 compcert.lib.Integers Make or def
R48035:48038 compcert.lib.Integers Make mone def
R48033:48033 compcert.lib.Integers <> x var
R48042:48045 compcert.lib.Integers Make mone def
prf 48082:48088 Make or_idem
R48107:48109 Coq.Init.Logic <> :type_scope:x_'='_x not
R48101:48102 compcert.lib.Integers Make or def
R48106:48106 compcert.lib.Integers <> x var
R48104:48104 compcert.lib.Integers <> x var
R48110:48110 compcert.lib.Integers <> x var
R48143:48149 compcert.lib.Integers Make testbit def
R48143:48149 compcert.lib.Integers Make testbit def
prf 48177:48190 Make and_or_distrib
R48225:48227 Coq.Init.Logic <> :type_scope:x_'='_x not
R48211:48213 compcert.lib.Integers Make and def
R48218:48219 compcert.lib.Integers Make or def
R48223:48223 compcert.lib.Integers <> z var
R48221:48221 compcert.lib.Integers <> y var
R48215:48215 compcert.lib.Integers <> x var
R48228:48229 compcert.lib.Integers Make or def
R48242:48244 compcert.lib.Integers Make and def
R48248:48248 compcert.lib.Integers <> z var
R48246:48246 compcert.lib.Integers <> x var
R48232:48234 compcert.lib.Integers Make and def
R48238:48238 compcert.lib.Integers <> y var
R48236:48236 compcert.lib.Integers <> x var
R48278:48286 Coq.Bool.Bool <> demorgan1 syndef
R48278:48286 Coq.Bool.Bool <> demorgan1 syndef
prf 48305:48320 Make and_or_distrib_l
R48355:48357 Coq.Init.Logic <> :type_scope:x_'='_x not
R48341:48343 compcert.lib.Integers Make and def
R48354:48354 compcert.lib.Integers <> z var
R48346:48347 compcert.lib.Integers Make or def
R48351:48351 compcert.lib.Integers <> y var
R48349:48349 compcert.lib.Integers <> x var
R48358:48359 compcert.lib.Integers Make or def
R48372:48374 compcert.lib.Integers Make and def
R48378:48378 compcert.lib.Integers <> z var
R48376:48376 compcert.lib.Integers <> y var
R48362:48364 compcert.lib.Integers Make and def
R48368:48368 compcert.lib.Integers <> z var
R48366:48366 compcert.lib.Integers <> x var
R48408:48417 compcert.lib.Integers Make and_commut thm
R48420:48421 compcert.lib.Integers Make or def
R48408:48417 compcert.lib.Integers Make and_commut thm
R48420:48421 compcert.lib.Integers Make or def
R48408:48417 compcert.lib.Integers Make and_commut thm
R48420:48421 compcert.lib.Integers Make or def
R48438:48451 compcert.lib.Integers Make and_or_distrib thm
R48438:48451 compcert.lib.Integers Make and_or_distrib thm
R48438:48451 compcert.lib.Integers Make and_or_distrib thm
R48469:48478 compcert.lib.Integers Make and_commut thm
R48469:48478 compcert.lib.Integers Make and_commut thm
R48469:48478 compcert.lib.Integers Make and_commut thm
prf 48495:48508 Make or_and_distrib
R48543:48545 Coq.Init.Logic <> :type_scope:x_'='_x not
R48529:48530 compcert.lib.Integers Make or def
R48535:48537 compcert.lib.Integers Make and def
R48541:48541 compcert.lib.Integers <> z var
R48539:48539 compcert.lib.Integers <> y var
R48532:48532 compcert.lib.Integers <> x var
R48546:48548 compcert.lib.Integers Make and def
R48560:48561 compcert.lib.Integers Make or def
R48565:48565 compcert.lib.Integers <> z var
R48563:48563 compcert.lib.Integers <> x var
R48551:48552 compcert.lib.Integers Make or def
R48556:48556 compcert.lib.Integers <> y var
R48554:48554 compcert.lib.Integers <> x var
R48595:48612 Coq.Bool.Bool <> orb_andb_distrib_r thm
R48595:48612 Coq.Bool.Bool <> orb_andb_distrib_r thm
prf 48631:48646 Make or_and_distrib_l
R48681:48683 Coq.Init.Logic <> :type_scope:x_'='_x not
R48667:48668 compcert.lib.Integers Make or def
R48680:48680 compcert.lib.Integers <> z var
R48671:48673 compcert.lib.Integers Make and def
R48677:48677 compcert.lib.Integers <> y var
R48675:48675 compcert.lib.Integers <> x var
R48684:48686 compcert.lib.Integers Make and def
R48698:48699 compcert.lib.Integers Make or def
R48703:48703 compcert.lib.Integers <> z var
R48701:48701 compcert.lib.Integers <> y var
R48689:48690 compcert.lib.Integers Make or def
R48694:48694 compcert.lib.Integers <> z var
R48692:48692 compcert.lib.Integers <> x var
R48733:48741 compcert.lib.Integers Make or_commut thm
R48744:48746 compcert.lib.Integers Make and def
R48733:48741 compcert.lib.Integers Make or_commut thm
R48744:48746 compcert.lib.Integers Make and def
R48733:48741 compcert.lib.Integers Make or_commut thm
R48744:48746 compcert.lib.Integers Make and def
R48763:48776 compcert.lib.Integers Make or_and_distrib thm
R48763:48776 compcert.lib.Integers Make or_and_distrib thm
R48763:48776 compcert.lib.Integers Make or_and_distrib thm
R48794:48802 compcert.lib.Integers Make or_commut thm
R48794:48802 compcert.lib.Integers Make or_commut thm
R48794:48802 compcert.lib.Integers Make or_commut thm
prf 48819:48831 Make and_or_absorb
R48860:48862 Coq.Init.Logic <> :type_scope:x_'='_x not
R48846:48848 compcert.lib.Integers Make and def
R48853:48854 compcert.lib.Integers Make or def
R48858:48858 compcert.lib.Integers <> y var
R48856:48856 compcert.lib.Integers <> x var
R48850:48850 compcert.lib.Integers <> x var
R48863:48863 compcert.lib.Integers <> x var
R48921:48923 Coq.Init.Logic <> :type_scope:x_'='_x not
R48909:48913 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R48920:48920 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R48908:48908 compcert.lib.Integers <> a var
R48915:48918 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R48914:48914 compcert.lib.Integers <> a var
R48919:48919 compcert.lib.Integers <> b var
R48924:48924 compcert.lib.Integers <> a var
R48921:48923 Coq.Init.Logic <> :type_scope:x_'='_x not
R48909:48913 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R48920:48920 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R48908:48908 compcert.lib.Integers <> a var
R48915:48918 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R48914:48914 compcert.lib.Integers <> a var
R48919:48919 compcert.lib.Integers <> b var
R48924:48924 compcert.lib.Integers <> a var
prf 48964:48976 Make or_and_absorb
R49005:49007 Coq.Init.Logic <> :type_scope:x_'='_x not
R48991:48992 compcert.lib.Integers Make or def
R48997:48999 compcert.lib.Integers Make and def
R49003:49003 compcert.lib.Integers <> y var
R49001:49001 compcert.lib.Integers <> x var
R48994:48994 compcert.lib.Integers <> x var
R49008:49008 compcert.lib.Integers <> x var
R49066:49068 Coq.Init.Logic <> :type_scope:x_'='_x not
R49054:49058 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R49065:49065 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R49053:49053 compcert.lib.Integers <> a var
R49060:49063 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R49059:49059 compcert.lib.Integers <> a var
R49064:49064 compcert.lib.Integers <> b var
R49069:49069 compcert.lib.Integers <> a var
R49066:49068 Coq.Init.Logic <> :type_scope:x_'='_x not
R49054:49058 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R49065:49065 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R49053:49053 compcert.lib.Integers <> a var
R49060:49063 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R49059:49059 compcert.lib.Integers <> a var
R49064:49064 compcert.lib.Integers <> b var
R49069:49069 compcert.lib.Integers <> a var
prf 49109:49118 Make xor_commut
R49140:49142 Coq.Init.Logic <> :type_scope:x_'='_x not
R49133:49135 compcert.lib.Integers Make xor def
R49139:49139 compcert.lib.Integers <> y var
R49137:49137 compcert.lib.Integers <> x var
R49143:49145 compcert.lib.Integers Make xor def
R49149:49149 compcert.lib.Integers <> x var
R49147:49147 compcert.lib.Integers <> y var
R49178:49186 Coq.Bool.Bool <> xorb_comm thm
R49178:49186 Coq.Bool.Bool <> xorb_comm thm
prf 49203:49211 Make xor_assoc
R49243:49245 Coq.Init.Logic <> :type_scope:x_'='_x not
R49228:49230 compcert.lib.Integers Make xor def
R49242:49242 compcert.lib.Integers <> z var
R49233:49235 compcert.lib.Integers Make xor def
R49239:49239 compcert.lib.Integers <> y var
R49237:49237 compcert.lib.Integers <> x var
R49246:49248 compcert.lib.Integers Make xor def
R49253:49255 compcert.lib.Integers Make xor def
R49259:49259 compcert.lib.Integers <> z var
R49257:49257 compcert.lib.Integers <> y var
R49250:49250 compcert.lib.Integers <> x var
R49289:49298 Coq.Bool.Bool <> xorb_assoc syndef
R49289:49298 Coq.Bool.Bool <> xorb_assoc syndef
prf 49315:49322 Make xor_zero
R49345:49347 Coq.Init.Logic <> :type_scope:x_'='_x not
R49335:49337 compcert.lib.Integers Make xor def
R49341:49344 compcert.lib.Integers Make zero def
R49339:49339 compcert.lib.Integers <> x var
R49348:49348 compcert.lib.Integers <> x var
R49377:49386 Coq.Bool.Bool <> xorb_false syndef
R49377:49386 Coq.Bool.Bool <> xorb_false syndef
prf 49405:49414 Make xor_zero_l
R49437:49439 Coq.Init.Logic <> :type_scope:x_'='_x not
R49427:49429 compcert.lib.Integers Make xor def
R49436:49436 compcert.lib.Integers <> x var
R49431:49434 compcert.lib.Integers Make zero def
R49440:49440 compcert.lib.Integers <> x var
R49468:49477 compcert.lib.Integers Make xor_commut thm
R49468:49477 compcert.lib.Integers Make xor_commut thm
R49468:49477 compcert.lib.Integers Make xor_commut thm
R49486:49493 compcert.lib.Integers Make xor_zero thm
R49486:49493 compcert.lib.Integers Make xor_zero thm
prf 49510:49517 Make xor_idem
R49537:49539 Coq.Init.Logic <> :type_scope:x_'='_x not
R49530:49532 compcert.lib.Integers Make xor def
R49536:49536 compcert.lib.Integers <> x var
R49534:49534 compcert.lib.Integers <> x var
R49540:49543 compcert.lib.Integers Make zero def
R49572:49585 Coq.Bool.Bool <> xorb_nilpotent thm
R49572:49585 Coq.Bool.Bool <> xorb_nilpotent thm
prf 49602:49613 Make xor_zero_one
R49628:49630 Coq.Init.Logic <> :type_scope:x_'='_x not
R49616:49618 compcert.lib.Integers Make xor def
R49625:49627 compcert.lib.Integers Make one def
R49620:49623 compcert.lib.Integers Make zero def
R49631:49633 compcert.lib.Integers Make one def
R49651:49660 compcert.lib.Integers Make xor_commut thm
R49651:49660 compcert.lib.Integers Make xor_commut thm
R49651:49660 compcert.lib.Integers Make xor_commut thm
R49669:49676 compcert.lib.Integers Make xor_zero thm
R49669:49676 compcert.lib.Integers Make xor_zero thm
prf 49693:49703 Make xor_one_one
R49717:49719 Coq.Init.Logic <> :type_scope:x_'='_x not
R49706:49708 compcert.lib.Integers Make xor def
R49714:49716 compcert.lib.Integers Make one def
R49710:49712 compcert.lib.Integers Make one def
R49720:49723 compcert.lib.Integers Make zero def
R49739:49746 compcert.lib.Integers Make xor_idem thm
R49739:49746 compcert.lib.Integers Make xor_idem thm
prf 49763:49776 Make xor_zero_equal
R49805:49808 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49810:49812 Coq.Init.Logic <> :type_scope:x_'='_x not
R49809:49809 compcert.lib.Integers <> x var
R49813:49813 compcert.lib.Integers <> y var
R49798:49800 Coq.Init.Logic <> :type_scope:x_'='_x not
R49791:49793 compcert.lib.Integers Make xor def
R49797:49797 compcert.lib.Integers <> y var
R49795:49795 compcert.lib.Integers <> x var
R49801:49804 compcert.lib.Integers Make zero def
R49839:49850 compcert.lib.Integers Make same_bits_eq thm
R49839:49850 compcert.lib.Integers Make same_bits_eq thm
R49903:49905 Coq.Init.Logic <> :type_scope:x_'='_x not
R49871:49874 Coq.Init.Datatypes <> xorb def
R49891:49897 compcert.lib.Integers Make testbit def
R49877:49883 compcert.lib.Integers Make testbit def
R49906:49910 Coq.Init.Datatypes <> false constr
R49903:49905 Coq.Init.Logic <> :type_scope:x_'='_x not
R49871:49874 Coq.Init.Datatypes <> xorb def
R49891:49897 compcert.lib.Integers Make testbit def
R49877:49883 compcert.lib.Integers Make testbit def
R49906:49910 Coq.Init.Datatypes <> false constr
R49929:49936 compcert.lib.Integers Make bits_xor thm
R49929:49936 compcert.lib.Integers Make bits_xor thm
R49929:49936 compcert.lib.Integers Make bits_xor thm
R49929:49936 compcert.lib.Integers Make bits_xor thm
R49962:49970 compcert.lib.Integers Make bits_zero thm
R49962:49970 compcert.lib.Integers Make bits_zero thm
R49985:49991 compcert.lib.Integers Make testbit def
R50009:50015 compcert.lib.Integers Make testbit def
R49985:49991 compcert.lib.Integers Make testbit def
R50009:50015 compcert.lib.Integers Make testbit def
R50009:50015 compcert.lib.Integers Make testbit def
prf 50066:50080 Make and_xor_distrib
R50116:50118 Coq.Init.Logic <> :type_scope:x_'='_x not
R50101:50103 compcert.lib.Integers Make and def
R50108:50110 compcert.lib.Integers Make xor def
R50114:50114 compcert.lib.Integers <> z var
R50112:50112 compcert.lib.Integers <> y var
R50105:50105 compcert.lib.Integers <> x var
R50119:50121 compcert.lib.Integers Make xor def
R50134:50136 compcert.lib.Integers Make and def
R50140:50140 compcert.lib.Integers <> z var
R50138:50138 compcert.lib.Integers <> x var
R50124:50126 compcert.lib.Integers Make and def
R50130:50130 compcert.lib.Integers <> y var
R50128:50128 compcert.lib.Integers <> x var
R50203:50205 Coq.Init.Logic <> :type_scope:x_'='_x not
R50189:50193 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50202:50202 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50188:50188 compcert.lib.Integers <> a var
R50194:50197 Coq.Init.Datatypes <> xorb def
R50201:50201 compcert.lib.Integers <> c var
R50199:50199 compcert.lib.Integers <> b var
R50206:50209 Coq.Init.Datatypes <> xorb def
R50222:50225 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50221:50221 compcert.lib.Integers <> a var
R50226:50226 compcert.lib.Integers <> c var
R50213:50216 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50212:50212 compcert.lib.Integers <> a var
R50217:50217 compcert.lib.Integers <> b var
R50203:50205 Coq.Init.Logic <> :type_scope:x_'='_x not
R50189:50193 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50202:50202 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50188:50188 compcert.lib.Integers <> a var
R50194:50197 Coq.Init.Datatypes <> xorb def
R50201:50201 compcert.lib.Integers <> c var
R50199:50199 compcert.lib.Integers <> b var
R50206:50209 Coq.Init.Datatypes <> xorb def
R50222:50225 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50221:50221 compcert.lib.Integers <> a var
R50226:50226 compcert.lib.Integers <> c var
R50213:50216 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50212:50212 compcert.lib.Integers <> a var
R50217:50217 compcert.lib.Integers <> b var
prf 50267:50272 Make and_le
R50307:50310 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R50289:50296 compcert.lib.Integers Make unsigned def
R50299:50301 compcert.lib.Integers Make and def
R50305:50305 compcert.lib.Integers <> y var
R50303:50303 compcert.lib.Integers <> x var
R50311:50318 compcert.lib.Integers Make unsigned def
R50320:50320 compcert.lib.Integers <> x var
R50346:50352 compcert.lib.Integers Make bits_le thm
R50346:50352 compcert.lib.Integers Make bits_le thm
R50373:50380 compcert.lib.Integers Make bits_and thm
R50373:50380 compcert.lib.Integers Make bits_and thm
R50373:50380 compcert.lib.Integers Make bits_and thm
R50373:50380 compcert.lib.Integers Make bits_and thm
R50403:50415 Coq.Bool.Bool <> andb_true_iff thm
R50403:50415 Coq.Bool.Bool <> andb_true_iff thm
R50403:50415 Coq.Bool.Bool <> andb_true_iff thm
prf 50445:50449 Make or_le
R50476:50479 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R50466:50473 compcert.lib.Integers Make unsigned def
R50475:50475 compcert.lib.Integers <> x var
R50480:50487 compcert.lib.Integers Make unsigned def
R50490:50491 compcert.lib.Integers Make or def
R50495:50495 compcert.lib.Integers <> y var
R50493:50493 compcert.lib.Integers <> x var
R50522:50528 compcert.lib.Integers Make bits_le thm
R50522:50528 compcert.lib.Integers Make bits_le thm
R50549:50555 compcert.lib.Integers Make bits_or thm
R50549:50555 compcert.lib.Integers Make bits_or thm
R50549:50555 compcert.lib.Integers Make bits_or thm
R50549:50555 compcert.lib.Integers Make bits_or thm
prf 50637:50650 Make not_involutive
R50666:50668 compcert.lib.Integers Make int rec
R50683:50685 Coq.Init.Logic <> :type_scope:x_'='_x not
R50672:50674 compcert.lib.Integers Make not def
R50677:50679 compcert.lib.Integers Make not def
R50681:50681 compcert.lib.Integers <> x var
R50686:50686 compcert.lib.Integers <> x var
R50713:50715 compcert.lib.Integers Make not def
R50726:50734 compcert.lib.Integers Make xor_assoc thm
R50726:50734 compcert.lib.Integers Make xor_assoc thm
R50726:50734 compcert.lib.Integers Make xor_assoc thm
R50745:50752 compcert.lib.Integers Make xor_idem thm
R50745:50752 compcert.lib.Integers Make xor_idem thm
R50745:50752 compcert.lib.Integers Make xor_idem thm
R50761:50768 compcert.lib.Integers Make xor_zero thm
R50761:50768 compcert.lib.Integers Make xor_zero thm
prf 50785:50792 Make not_zero
R50805:50807 Coq.Init.Logic <> :type_scope:x_'='_x not
R50797:50799 compcert.lib.Integers Make not def
R50801:50804 compcert.lib.Integers Make zero def
R50808:50811 compcert.lib.Integers Make mone def
R50830:50832 compcert.lib.Integers Make not def
R50843:50852 compcert.lib.Integers Make xor_commut thm
R50843:50852 compcert.lib.Integers Make xor_commut thm
R50843:50852 compcert.lib.Integers Make xor_commut thm
R50861:50868 compcert.lib.Integers Make xor_zero thm
R50861:50868 compcert.lib.Integers Make xor_zero thm
prf 50885:50892 Make not_mone
R50905:50907 Coq.Init.Logic <> :type_scope:x_'='_x not
R50897:50899 compcert.lib.Integers Make not def
R50901:50904 compcert.lib.Integers Make mone def
R50908:50911 compcert.lib.Integers Make zero def
R50935:50948 compcert.lib.Integers Make not_involutive thm
R50950:50953 compcert.lib.Integers Make zero def
R50935:50948 compcert.lib.Integers Make not_involutive thm
R50950:50953 compcert.lib.Integers Make zero def
R50935:50948 compcert.lib.Integers Make not_involutive thm
R50950:50953 compcert.lib.Integers Make zero def
R50980:50987 compcert.lib.Integers Make not_zero thm
R50980:50987 compcert.lib.Integers Make not_zero thm
prf 51004:51017 Make not_or_and_not
R51046:51048 Coq.Init.Logic <> :type_scope:x_'='_x not
R51034:51036 compcert.lib.Integers Make not def
R51039:51040 compcert.lib.Integers Make or def
R51044:51044 compcert.lib.Integers <> y var
R51042:51042 compcert.lib.Integers <> x var
R51049:51051 compcert.lib.Integers Make and def
R51062:51064 compcert.lib.Integers Make not def
R51066:51066 compcert.lib.Integers <> y var
R51054:51056 compcert.lib.Integers Make not def
R51058:51058 compcert.lib.Integers <> x var
R51096:51103 Coq.Bool.Bool <> negb_orb thm
R51096:51103 Coq.Bool.Bool <> negb_orb thm
prf 51120:51133 Make not_and_or_not
R51163:51165 Coq.Init.Logic <> :type_scope:x_'='_x not
R51150:51152 compcert.lib.Integers Make not def
R51155:51157 compcert.lib.Integers Make and def
R51161:51161 compcert.lib.Integers <> y var
R51159:51159 compcert.lib.Integers <> x var
R51166:51167 compcert.lib.Integers Make or def
R51178:51180 compcert.lib.Integers Make not def
R51182:51182 compcert.lib.Integers <> y var
R51170:51172 compcert.lib.Integers Make not def
R51174:51174 compcert.lib.Integers <> x var
R51212:51220 Coq.Bool.Bool <> negb_andb thm
R51212:51220 Coq.Bool.Bool <> negb_andb thm
prf 51237:51248 Make and_not_self
R51276:51278 Coq.Init.Logic <> :type_scope:x_'='_x not
R51263:51265 compcert.lib.Integers Make and def
R51270:51272 compcert.lib.Integers Make not def
R51274:51274 compcert.lib.Integers <> x var
R51267:51267 compcert.lib.Integers <> x var
R51279:51282 compcert.lib.Integers Make zero def
prf 51319:51329 Make or_not_self
R51356:51358 Coq.Init.Logic <> :type_scope:x_'='_x not
R51344:51345 compcert.lib.Integers Make or def
R51350:51352 compcert.lib.Integers Make not def
R51354:51354 compcert.lib.Integers <> x var
R51347:51347 compcert.lib.Integers <> x var
R51359:51362 compcert.lib.Integers Make mone def
prf 51399:51410 Make xor_not_self
R51438:51440 Coq.Init.Logic <> :type_scope:x_'='_x not
R51425:51427 compcert.lib.Integers Make xor def
R51432:51434 compcert.lib.Integers Make not def
R51436:51436 compcert.lib.Integers <> x var
R51429:51429 compcert.lib.Integers <> x var
R51441:51444 compcert.lib.Integers Make mone def
R51477:51483 compcert.lib.Integers Make testbit def
R51477:51483 compcert.lib.Integers Make testbit def
prf 51509:51520 Make unsigned_not
R51551:51553 Coq.Init.Logic <> :type_scope:x_'='_x not
R51535:51542 compcert.lib.Integers Make unsigned def
R51545:51547 compcert.lib.Integers Make not def
R51549:51549 compcert.lib.Integers <> x var
R51566:51568 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R51554:51565 compcert.lib.Integers Make max_unsigned def
R51569:51576 compcert.lib.Integers Make unsigned def
R51578:51578 compcert.lib.Integers <> x var
R51612:51619 compcert.lib.Integers Make unsigned def
R51622:51625 compcert.lib.Integers Make repr def
R51638:51640 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R51627:51627 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R51628:51635 compcert.lib.Integers Make unsigned def
R51612:51619 compcert.lib.Integers Make unsigned def
R51622:51625 compcert.lib.Integers Make repr def
R51638:51640 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R51627:51627 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R51628:51635 compcert.lib.Integers Make unsigned def
R51677:51688 compcert.lib.Integers Make testbit_repr thm
R51677:51688 compcert.lib.Integers Make testbit_repr thm
R51677:51688 compcert.lib.Integers Make testbit_repr thm
R51677:51688 compcert.lib.Integers Make testbit_repr thm
R51713:51728 compcert.lib.Integers Make Z_one_complement thm
R51713:51728 compcert.lib.Integers Make Z_one_complement thm
R51748:51763 compcert.lib.Integers Make unsigned_repr_eq thm
R51748:51763 compcert.lib.Integers Make unsigned_repr_eq thm
R51748:51763 compcert.lib.Integers Make unsigned_repr_eq thm
R51772:51782 compcert.lib.Coqlib <> Zmod_unique thm
R51772:51782 compcert.lib.Coqlib <> Zmod_unique thm
R51804:51815 compcert.lib.Integers Make max_unsigned def
R51839:51852 compcert.lib.Integers Make unsigned_range thm
R51839:51852 compcert.lib.Integers Make unsigned_range thm
R51865:51876 compcert.lib.Integers Make max_unsigned def
prf 51900:51906 Make not_neg
R51926:51928 Coq.Init.Logic <> :type_scope:x_'='_x not
R51921:51923 compcert.lib.Integers Make not def
R51925:51925 compcert.lib.Integers <> x var
R51929:51931 compcert.lib.Integers Make add def
R51941:51944 compcert.lib.Integers Make mone def
R51934:51936 compcert.lib.Integers Make neg def
R51938:51938 compcert.lib.Integers <> x var
R51981:51993 compcert.lib.Integers Make repr_unsigned thm
R51981:51993 compcert.lib.Integers Make repr_unsigned thm
R51981:51993 compcert.lib.Integers Make repr_unsigned thm
R52011:52013 compcert.lib.Integers Make add def
R52027:52038 compcert.lib.Integers Make testbit_repr thm
R52027:52038 compcert.lib.Integers Make testbit_repr thm
R52027:52038 compcert.lib.Integers Make testbit_repr thm
R52027:52038 compcert.lib.Integers Make testbit_repr thm
R52027:52038 compcert.lib.Integers Make testbit_repr thm
R52027:52038 compcert.lib.Integers Make testbit_repr thm
R52027:52038 compcert.lib.Integers Make testbit_repr thm
R52063:52071 Coq.ZArith.BinInt Z testbit def
R52085:52087 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R52074:52074 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R52075:52082 compcert.lib.Integers Make unsigned def
R52063:52071 Coq.ZArith.BinInt Z testbit def
R52085:52087 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R52074:52074 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R52075:52082 compcert.lib.Integers Make unsigned def
R52113:52128 compcert.lib.Integers Make Z_one_complement thm
R52113:52128 compcert.lib.Integers Make Z_one_complement thm
R52146:52158 compcert.lib.Integers Make same_bits_eqm thm
R52146:52158 compcert.lib.Integers Make same_bits_eqm thm
R52189:52191 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R52178:52178 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R52179:52186 compcert.lib.Integers Make unsigned def
R52212:52215 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R52218:52218 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R52201:52201 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R52202:52209 compcert.lib.Integers Make unsigned def
R52212:52215 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R52218:52218 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R52201:52201 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R52202:52209 compcert.lib.Integers Make unsigned def
R52189:52191 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R52178:52178 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R52179:52186 compcert.lib.Integers Make unsigned def
R52239:52245 compcert.lib.Integers Make eqm_add thm
R52239:52245 compcert.lib.Integers Make eqm_add thm
R52257:52259 compcert.lib.Integers Make neg def
R52268:52284 compcert.lib.Integers Make eqm_unsigned_repr thm
R52268:52284 compcert.lib.Integers Make eqm_unsigned_repr thm
R52297:52309 compcert.lib.Integers Make unsigned_mone thm
R52297:52309 compcert.lib.Integers Make unsigned_mone thm
R52297:52309 compcert.lib.Integers Make unsigned_mone thm
prf 52345:52351 Make neg_not
R52371:52373 Coq.Init.Logic <> :type_scope:x_'='_x not
R52366:52368 compcert.lib.Integers Make neg def
R52370:52370 compcert.lib.Integers <> x var
R52374:52376 compcert.lib.Integers Make add def
R52386:52388 compcert.lib.Integers Make one def
R52379:52381 compcert.lib.Integers Make not def
R52383:52383 compcert.lib.Integers <> x var
R52416:52422 compcert.lib.Integers Make not_neg thm
R52416:52422 compcert.lib.Integers Make not_neg thm
R52416:52422 compcert.lib.Integers Make not_neg thm
R52433:52441 compcert.lib.Integers Make add_assoc thm
R52433:52441 compcert.lib.Integers Make add_assoc thm
R52433:52441 compcert.lib.Integers Make add_assoc thm
R52455:52457 compcert.lib.Integers Make add def
R52464:52466 compcert.lib.Integers Make one def
R52459:52462 compcert.lib.Integers Make mone def
R52474:52477 compcert.lib.Integers Make zero def
R52474:52477 compcert.lib.Integers Make zero def
R52455:52457 compcert.lib.Integers Make add def
R52464:52466 compcert.lib.Integers Make one def
R52459:52462 compcert.lib.Integers Make mone def
R52488:52495 compcert.lib.Integers Make add_zero thm
R52488:52495 compcert.lib.Integers Make add_zero thm
R52488:52495 compcert.lib.Integers Make add_zero thm
R52512:52523 compcert.lib.Integers Make eqm_samerepr thm
R52512:52523 compcert.lib.Integers Make eqm_samerepr thm
R52534:52546 compcert.lib.Integers Make unsigned_mone thm
R52534:52546 compcert.lib.Integers Make unsigned_mone thm
R52534:52546 compcert.lib.Integers Make unsigned_mone thm
R52557:52568 compcert.lib.Integers Make unsigned_one thm
R52557:52568 compcert.lib.Integers Make unsigned_one thm
R52557:52568 compcert.lib.Integers Make unsigned_one thm
prf 52606:52616 Make sub_add_not
R52640:52642 Coq.Init.Logic <> :type_scope:x_'='_x not
R52633:52635 compcert.lib.Integers Make sub def
R52639:52639 compcert.lib.Integers <> y var
R52637:52637 compcert.lib.Integers <> x var
R52643:52645 compcert.lib.Integers Make add def
R52663:52665 compcert.lib.Integers Make one def
R52648:52650 compcert.lib.Integers Make add def
R52655:52657 compcert.lib.Integers Make not def
R52659:52659 compcert.lib.Integers <> y var
R52652:52652 compcert.lib.Integers <> x var
R52693:52703 compcert.lib.Integers Make sub_add_opp thm
R52693:52703 compcert.lib.Integers Make sub_add_opp thm
R52693:52703 compcert.lib.Integers Make sub_add_opp thm
R52714:52720 compcert.lib.Integers Make neg_not thm
R52714:52720 compcert.lib.Integers Make neg_not thm
R52714:52720 compcert.lib.Integers Make neg_not thm
R52735:52743 compcert.lib.Integers Make add_assoc thm
R52735:52743 compcert.lib.Integers Make add_assoc thm
R52735:52743 compcert.lib.Integers Make add_assoc thm
R52735:52743 compcert.lib.Integers Make add_assoc thm
prf 52766:52778 Make sub_add_not_3
R52818:52823 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52839:52841 Coq.Init.Logic <> :type_scope:x_'='_x not
R52824:52826 compcert.lib.Integers Make sub def
R52838:52838 compcert.lib.Integers <> b var
R52829:52831 compcert.lib.Integers Make sub def
R52835:52835 compcert.lib.Integers <> y var
R52833:52833 compcert.lib.Integers <> x var
R52842:52844 compcert.lib.Integers Make add def
R52863:52865 compcert.lib.Integers Make xor def
R52869:52871 compcert.lib.Integers Make one def
R52867:52867 compcert.lib.Integers <> b var
R52847:52849 compcert.lib.Integers Make add def
R52854:52856 compcert.lib.Integers Make not def
R52858:52858 compcert.lib.Integers <> y var
R52851:52851 compcert.lib.Integers <> x var
R52807:52810 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R52800:52802 Coq.Init.Logic <> :type_scope:x_'='_x not
R52799:52799 compcert.lib.Integers <> b var
R52803:52806 compcert.lib.Integers Make zero def
R52812:52814 Coq.Init.Logic <> :type_scope:x_'='_x not
R52811:52811 compcert.lib.Integers <> b var
R52815:52817 compcert.lib.Integers Make one def
R52902:52912 compcert.lib.Integers Make sub_add_not thm
R52902:52912 compcert.lib.Integers Make sub_add_not thm
R52902:52912 compcert.lib.Integers Make sub_add_not thm
R52902:52912 compcert.lib.Integers Make sub_add_not thm
R52902:52912 compcert.lib.Integers Make sub_add_not thm
R52925:52933 compcert.lib.Integers Make add_assoc thm
R52925:52933 compcert.lib.Integers Make add_assoc thm
R52925:52933 compcert.lib.Integers Make add_assoc thm
R52925:52933 compcert.lib.Integers Make add_assoc thm
R52925:52933 compcert.lib.Integers Make add_assoc thm
R52925:52933 compcert.lib.Integers Make add_assoc thm
R52925:52933 compcert.lib.Integers Make add_assoc thm
R52967:52973 compcert.lib.Integers Make neg_not thm
R52967:52973 compcert.lib.Integers Make neg_not thm
R52967:52973 compcert.lib.Integers Make neg_not thm
R52987:52997 compcert.lib.Integers Make sub_add_opp thm
R52987:52997 compcert.lib.Integers Make sub_add_opp thm
R52987:52997 compcert.lib.Integers Make sub_add_opp thm
R53031:53040 compcert.lib.Integers Make xor_zero_l thm
R53031:53040 compcert.lib.Integers Make xor_zero_l thm
R53031:53040 compcert.lib.Integers Make xor_zero_l thm
R53051:53060 compcert.lib.Integers Make sub_zero_l thm
R53051:53060 compcert.lib.Integers Make sub_zero_l thm
R53051:53060 compcert.lib.Integers Make sub_zero_l thm
R53079:53086 compcert.lib.Integers Make xor_idem thm
R53079:53086 compcert.lib.Integers Make xor_idem thm
R53079:53086 compcert.lib.Integers Make xor_idem thm
R53097:53104 compcert.lib.Integers Make sub_idem thm
R53097:53104 compcert.lib.Integers Make sub_idem thm
R53097:53104 compcert.lib.Integers Make sub_idem thm
prf 53127:53146 Make sub_borrow_add_carry
R53186:53191 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53208:53210 Coq.Init.Logic <> :type_scope:x_'='_x not
R53192:53201 compcert.lib.Integers Make sub_borrow def
R53207:53207 compcert.lib.Integers <> b var
R53205:53205 compcert.lib.Integers <> y var
R53203:53203 compcert.lib.Integers <> x var
R53211:53213 compcert.lib.Integers Make xor def
R53249:53251 compcert.lib.Integers Make one def
R53216:53224 compcert.lib.Integers Make add_carry def
R53237:53239 compcert.lib.Integers Make xor def
R53243:53245 compcert.lib.Integers Make one def
R53241:53241 compcert.lib.Integers <> b var
R53229:53231 compcert.lib.Integers Make not def
R53233:53233 compcert.lib.Integers <> y var
R53226:53226 compcert.lib.Integers <> x var
R53175:53178 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R53168:53170 Coq.Init.Logic <> :type_scope:x_'='_x not
R53167:53167 compcert.lib.Integers <> b var
R53171:53174 compcert.lib.Integers Make zero def
R53180:53182 Coq.Init.Logic <> :type_scope:x_'='_x not
R53179:53179 compcert.lib.Integers <> b var
R53183:53185 compcert.lib.Integers Make one def
R53278:53287 compcert.lib.Integers Make sub_borrow def
R53290:53298 compcert.lib.Integers Make add_carry def
R53309:53320 compcert.lib.Integers Make unsigned_not thm
R53309:53320 compcert.lib.Integers Make unsigned_not thm
R53309:53320 compcert.lib.Integers Make unsigned_not thm
R53334:53341 compcert.lib.Integers Make unsigned def
R53344:53346 compcert.lib.Integers Make xor def
R53350:53352 compcert.lib.Integers Make one def
R53363:53365 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R53366:53373 compcert.lib.Integers Make unsigned def
R53363:53365 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R53366:53373 compcert.lib.Integers Make unsigned def
R53334:53341 compcert.lib.Integers Make unsigned def
R53344:53346 compcert.lib.Integers Make xor def
R53350:53352 compcert.lib.Integers Make one def
R53391:53393 compcert.lib.Coqlib <> zlt def
R53419:53421 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R53406:53408 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R53396:53403 compcert.lib.Integers Make unsigned def
R53409:53416 compcert.lib.Integers Make unsigned def
R53422:53429 compcert.lib.Integers Make unsigned def
R53391:53393 compcert.lib.Coqlib <> zlt def
R53419:53421 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R53406:53408 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R53396:53403 compcert.lib.Integers Make unsigned def
R53409:53416 compcert.lib.Integers Make unsigned def
R53422:53429 compcert.lib.Integers Make unsigned def
R53446:53453 compcert.lib.Coqlib <> zlt_true thm
R53446:53453 compcert.lib.Coqlib <> zlt_true thm
R53446:53453 compcert.lib.Coqlib <> zlt_true thm
R53446:53453 compcert.lib.Coqlib <> zlt_true thm
R53464:53473 compcert.lib.Integers Make xor_zero_l thm
R53464:53473 compcert.lib.Integers Make xor_zero_l thm
R53464:53473 compcert.lib.Integers Make xor_zero_l thm
R53491:53502 compcert.lib.Integers Make max_unsigned def
R53522:53530 compcert.lib.Coqlib <> zlt_false thm
R53522:53530 compcert.lib.Coqlib <> zlt_false thm
R53522:53530 compcert.lib.Coqlib <> zlt_false thm
R53522:53530 compcert.lib.Coqlib <> zlt_false thm
R53541:53548 compcert.lib.Integers Make xor_idem thm
R53541:53548 compcert.lib.Integers Make xor_idem thm
R53541:53548 compcert.lib.Integers Make xor_idem thm
R53566:53577 compcert.lib.Integers Make max_unsigned def
R53620:53629 compcert.lib.Integers Make xor_zero_l thm
R53620:53629 compcert.lib.Integers Make xor_zero_l thm
R53620:53629 compcert.lib.Integers Make xor_zero_l thm
R53640:53651 compcert.lib.Integers Make unsigned_one thm
R53654:53666 compcert.lib.Integers Make unsigned_zero thm
R53640:53651 compcert.lib.Integers Make unsigned_one thm
R53640:53651 compcert.lib.Integers Make unsigned_one thm
R53654:53666 compcert.lib.Integers Make unsigned_zero thm
R53654:53666 compcert.lib.Integers Make unsigned_zero thm
R53685:53692 compcert.lib.Integers Make xor_idem thm
R53685:53692 compcert.lib.Integers Make xor_idem thm
R53685:53692 compcert.lib.Integers Make xor_idem thm
R53703:53714 compcert.lib.Integers Make unsigned_one thm
R53717:53729 compcert.lib.Integers Make unsigned_zero thm
R53703:53714 compcert.lib.Integers Make unsigned_one thm
R53703:53714 compcert.lib.Integers Make unsigned_one thm
R53717:53729 compcert.lib.Integers Make unsigned_zero thm
R53717:53729 compcert.lib.Integers Make unsigned_zero thm
prf 53816:53826 Make Z_add_is_or
R53847:53852 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53867:53867 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53931:53937 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53957:53959 Coq.Init.Logic <> :type_scope:x_'='_x not
R53938:53946 Coq.ZArith.BinInt Z testbit def
R53956:53956 compcert.lib.Integers <> i var
R53950:53952 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R53949:53949 compcert.lib.Integers <> x var
R53953:53953 compcert.lib.Integers <> y var
R53973:53976 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R53960:53968 Coq.ZArith.BinInt Z testbit def
R53972:53972 compcert.lib.Integers <> i var
R53970:53970 compcert.lib.Integers <> x var
R53977:53985 Coq.ZArith.BinInt Z testbit def
R53989:53989 compcert.lib.Integers <> i var
R53987:53987 compcert.lib.Integers <> y var
R53889:53892 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53923:53925 Coq.Init.Logic <> :type_scope:x_'='_x not
R53906:53909 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R53893:53901 Coq.ZArith.BinInt Z testbit def
R53905:53905 compcert.lib.Integers <> j var
R53903:53903 compcert.lib.Integers <> x var
R53910:53918 Coq.ZArith.BinInt Z testbit def
R53922:53922 compcert.lib.Integers <> j var
R53920:53920 compcert.lib.Integers <> y var
R53926:53930 Coq.Init.Datatypes <> false constr
R53879:53882 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R53884:53887 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R53883:53883 compcert.lib.Integers <> j var
R53883:53883 compcert.lib.Integers <> j var
R53888:53888 compcert.lib.Integers <> i var
R53842:53845 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R53846:53846 compcert.lib.Integers <> i var
R54035:54043 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R54035:54043 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R54092:54098 compcert.lib.Integers Make Zdecomp thm
R54092:54098 compcert.lib.Integers Make Zdecomp thm
R54092:54098 compcert.lib.Integers Make Zdecomp thm
R54118:54124 compcert.lib.Integers Make Zdecomp thm
R54118:54124 compcert.lib.Integers Make Zdecomp thm
R54118:54124 compcert.lib.Integers Make Zdecomp thm
R54151:54159 Coq.ZArith.BinInt Z testbit def
R54162:54169 compcert.lib.Integers Make Zshiftin def
R54201:54203 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R54193:54198 Coq.ZArith.BinInt Z div2 def
R54204:54209 Coq.ZArith.BinInt Z div2 def
R54179:54182 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R54172:54176 Coq.ZArith.BinInt Z odd def
R54183:54187 Coq.ZArith.BinInt Z odd def
R54151:54159 Coq.ZArith.BinInt Z testbit def
R54162:54169 compcert.lib.Integers Make Zshiftin def
R54201:54203 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R54193:54198 Coq.ZArith.BinInt Z div2 def
R54204:54209 Coq.ZArith.BinInt Z div2 def
R54179:54182 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R54172:54176 Coq.ZArith.BinInt Z odd def
R54183:54187 Coq.ZArith.BinInt Z odd def
R54241:54253 compcert.lib.Integers Make Zshiftin_spec thm
R54241:54253 compcert.lib.Integers Make Zshiftin_spec thm
R54241:54253 compcert.lib.Integers Make Zshiftin_spec thm
R54241:54253 compcert.lib.Integers Make Zshiftin_spec thm
R54241:54253 compcert.lib.Integers Make Zshiftin_spec thm
R54241:54253 compcert.lib.Integers Make Zshiftin_spec thm
R54294:54314 compcert.lib.Integers Make Ztestbit_shiftin_base thm
R54294:54314 compcert.lib.Integers Make Ztestbit_shiftin_base thm
R54294:54314 compcert.lib.Integers Make Ztestbit_shiftin_base thm
R54294:54314 compcert.lib.Integers Make Ztestbit_shiftin_base thm
R54294:54314 compcert.lib.Integers Make Ztestbit_shiftin_base thm
R54332:54336 Coq.ZArith.BinInt Z mul def
R54353:54357 Coq.ZArith.BinInt Z odd def
R54373:54377 Coq.ZArith.BinInt Z odd def
R54353:54357 Coq.ZArith.BinInt Z odd def
R54373:54377 Coq.ZArith.BinInt Z odd def
R54373:54377 Coq.ZArith.BinInt Z odd def
R54430:54445 compcert.lib.Integers Make Ztestbit_shiftin thm
R54430:54445 compcert.lib.Integers Make Ztestbit_shiftin thm
R54430:54445 compcert.lib.Integers Make Ztestbit_shiftin thm
R54430:54445 compcert.lib.Integers Make Ztestbit_shiftin thm
R54430:54445 compcert.lib.Integers Make Ztestbit_shiftin thm
R54430:54445 compcert.lib.Integers Make Ztestbit_shiftin thm
R54430:54445 compcert.lib.Integers Make Ztestbit_shiftin thm
R54430:54445 compcert.lib.Integers Make Ztestbit_shiftin thm
R54430:54445 compcert.lib.Integers Make Ztestbit_shiftin thm
R54468:54470 compcert.lib.Coqlib <> zeq def
R54468:54470 compcert.lib.Coqlib <> zeq def
R54543:54548 Coq.ZArith.BinInt Z succ def
R54543:54548 Coq.ZArith.BinInt Z succ def
R54577:54597 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R54577:54597 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R54577:54597 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R54577:54597 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R54577:54597 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R54577:54597 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R54577:54597 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R54332:54336 Coq.ZArith.BinInt Z mul def
prf 54640:54648 Make add_is_or
R54681:54686 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54694:54696 Coq.Init.Logic <> :type_scope:x_'='_x not
R54687:54689 compcert.lib.Integers Make add def
R54693:54693 compcert.lib.Integers <> y var
R54691:54691 compcert.lib.Integers <> x var
R54697:54698 compcert.lib.Integers Make or def
R54702:54702 compcert.lib.Integers <> y var
R54700:54700 compcert.lib.Integers <> x var
R54674:54676 Coq.Init.Logic <> :type_scope:x_'='_x not
R54667:54669 compcert.lib.Integers Make and def
R54673:54673 compcert.lib.Integers <> y var
R54671:54671 compcert.lib.Integers <> x var
R54677:54680 compcert.lib.Integers Make zero def
R54732:54734 compcert.lib.Integers Make add def
R54745:54756 compcert.lib.Integers Make testbit_repr thm
R54745:54756 compcert.lib.Integers Make testbit_repr thm
R54745:54756 compcert.lib.Integers Make testbit_repr thm
R54745:54756 compcert.lib.Integers Make testbit_repr thm
R54773:54783 compcert.lib.Integers Make Z_add_is_or thm
R54773:54783 compcert.lib.Integers Make Z_add_is_or thm
R54832:54834 Coq.Init.Logic <> :type_scope:x_'='_x not
R54813:54819 compcert.lib.Integers Make testbit def
R54822:54824 compcert.lib.Integers Make and def
R54835:54841 compcert.lib.Integers Make testbit def
R54843:54846 compcert.lib.Integers Make zero def
R54832:54834 Coq.Init.Logic <> :type_scope:x_'='_x not
R54813:54819 compcert.lib.Integers Make testbit def
R54822:54824 compcert.lib.Integers Make and def
R54835:54841 compcert.lib.Integers Make testbit def
R54843:54846 compcert.lib.Integers Make zero def
prf 54930:54938 Make xor_is_or
R54969:54972 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54980:54982 Coq.Init.Logic <> :type_scope:x_'='_x not
R54973:54975 compcert.lib.Integers Make xor def
R54979:54979 compcert.lib.Integers <> y var
R54977:54977 compcert.lib.Integers <> x var
R54983:54984 compcert.lib.Integers Make or def
R54988:54988 compcert.lib.Integers <> y var
R54986:54986 compcert.lib.Integers <> x var
R54962:54964 Coq.Init.Logic <> :type_scope:x_'='_x not
R54955:54957 compcert.lib.Integers Make and def
R54961:54961 compcert.lib.Integers <> y var
R54959:54959 compcert.lib.Integers <> x var
R54965:54968 compcert.lib.Integers Make zero def
R55040:55042 Coq.Init.Logic <> :type_scope:x_'='_x not
R55021:55027 compcert.lib.Integers Make testbit def
R55030:55032 compcert.lib.Integers Make and def
R55043:55049 compcert.lib.Integers Make testbit def
R55051:55054 compcert.lib.Integers Make zero def
R55040:55042 Coq.Init.Logic <> :type_scope:x_'='_x not
R55021:55027 compcert.lib.Integers Make testbit def
R55030:55032 compcert.lib.Integers Make and def
R55043:55049 compcert.lib.Integers Make testbit def
R55051:55054 compcert.lib.Integers Make zero def
R55123:55129 compcert.lib.Integers Make testbit def
R55147:55153 compcert.lib.Integers Make testbit def
R55123:55129 compcert.lib.Integers Make testbit def
R55147:55153 compcert.lib.Integers Make testbit def
R55147:55153 compcert.lib.Integers Make testbit def
prf 55199:55208 Make add_is_xor
R55241:55246 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55254:55256 Coq.Init.Logic <> :type_scope:x_'='_x not
R55247:55249 compcert.lib.Integers Make add def
R55253:55253 compcert.lib.Integers <> y var
R55251:55251 compcert.lib.Integers <> x var
R55257:55259 compcert.lib.Integers Make xor def
R55263:55263 compcert.lib.Integers <> y var
R55261:55261 compcert.lib.Integers <> x var
R55234:55236 Coq.Init.Logic <> :type_scope:x_'='_x not
R55227:55229 compcert.lib.Integers Make and def
R55233:55233 compcert.lib.Integers <> y var
R55231:55231 compcert.lib.Integers <> x var
R55237:55240 compcert.lib.Integers Make zero def
R55291:55299 compcert.lib.Integers Make xor_is_or thm
R55291:55299 compcert.lib.Integers Make xor_is_or thm
R55291:55299 compcert.lib.Integers Make xor_is_or thm
R55291:55299 compcert.lib.Integers Make xor_is_or thm
R55314:55322 compcert.lib.Integers Make add_is_or thm
R55314:55322 compcert.lib.Integers Make add_is_or thm
prf 55345:55351 Make add_and
R55386:55391 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55415:55417 Coq.Init.Logic <> :type_scope:x_'='_x not
R55392:55394 compcert.lib.Integers Make add def
R55407:55409 compcert.lib.Integers Make and def
R55413:55413 compcert.lib.Integers <> z var
R55411:55411 compcert.lib.Integers <> x var
R55397:55399 compcert.lib.Integers Make and def
R55403:55403 compcert.lib.Integers <> y var
R55401:55401 compcert.lib.Integers <> x var
R55418:55420 compcert.lib.Integers Make and def
R55425:55426 compcert.lib.Integers Make or def
R55430:55430 compcert.lib.Integers <> z var
R55428:55428 compcert.lib.Integers <> y var
R55422:55422 compcert.lib.Integers <> x var
R55379:55381 Coq.Init.Logic <> :type_scope:x_'='_x not
R55372:55374 compcert.lib.Integers Make and def
R55378:55378 compcert.lib.Integers <> z var
R55376:55376 compcert.lib.Integers <> y var
R55382:55385 compcert.lib.Integers Make zero def
R55459:55467 compcert.lib.Integers Make add_is_or thm
R55459:55467 compcert.lib.Integers Make add_is_or thm
R55459:55467 compcert.lib.Integers Make add_is_or thm
R55459:55467 compcert.lib.Integers Make add_is_or thm
R55480:55493 compcert.lib.Integers Make and_or_distrib thm
R55480:55493 compcert.lib.Integers Make and_or_distrib thm
R55480:55493 compcert.lib.Integers Make and_or_distrib thm
R55513:55522 compcert.lib.Integers Make and_commut thm
R55513:55522 compcert.lib.Integers Make and_commut thm
R55513:55522 compcert.lib.Integers Make and_commut thm
R55540:55548 compcert.lib.Integers Make and_assoc thm
R55540:55548 compcert.lib.Integers Make and_assoc thm
R55540:55548 compcert.lib.Integers Make and_assoc thm
R55572:55580 compcert.lib.Integers Make and_assoc thm
R55572:55580 compcert.lib.Integers Make and_assoc thm
R55572:55580 compcert.lib.Integers Make and_assoc thm
R55572:55580 compcert.lib.Integers Make and_assoc thm
R55597:55606 compcert.lib.Integers Make and_commut thm
R55609:55611 compcert.lib.Integers Make and def
R55597:55606 compcert.lib.Integers Make and_commut thm
R55609:55611 compcert.lib.Integers Make and def
R55597:55606 compcert.lib.Integers Make and_commut thm
R55609:55611 compcert.lib.Integers Make and def
R55633:55641 compcert.lib.Integers Make and_assoc thm
R55633:55641 compcert.lib.Integers Make and_assoc thm
R55633:55641 compcert.lib.Integers Make and_assoc thm
R55665:55674 compcert.lib.Integers Make and_commut thm
R55665:55674 compcert.lib.Integers Make and_commut thm
R55665:55674 compcert.lib.Integers Make and_commut thm
R55683:55690 compcert.lib.Integers Make and_zero thm
R55683:55690 compcert.lib.Integers Make and_zero thm
prf 55737:55744 Make bits_shl
R55783:55788 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55808:55812 Coq.Init.Logic <> :type_scope:x_'='_x not
R55789:55795 compcert.lib.Integers Make testbit def
R55807:55807 compcert.lib.Integers <> i var
R55798:55800 compcert.lib.Integers Make shl def
R55804:55804 compcert.lib.Integers <> y var
R55802:55802 compcert.lib.Integers <> x var
R55816:55818 compcert.lib.Coqlib <> zlt def
R55823:55830 compcert.lib.Integers Make unsigned def
R55832:55832 compcert.lib.Integers <> y var
R55820:55820 compcert.lib.Integers <> i var
R55851:55857 compcert.lib.Integers Make testbit def
R55863:55865 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R55862:55862 compcert.lib.Integers <> i var
R55866:55873 compcert.lib.Integers Make unsigned def
R55875:55875 compcert.lib.Integers <> y var
R55859:55859 compcert.lib.Integers <> x var
R55840:55844 Coq.Init.Datatypes <> false constr
R55766:55769 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R55771:55773 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R55770:55770 compcert.lib.Integers <> i var
R55770:55770 compcert.lib.Integers <> i var
R55774:55782 compcert.lib.Integers Make zwordsize def
R55903:55905 compcert.lib.Integers Make shl def
R55916:55927 compcert.lib.Integers Make testbit_repr thm
R55916:55927 compcert.lib.Integers Make testbit_repr thm
R55916:55927 compcert.lib.Integers Make testbit_repr thm
R55916:55927 compcert.lib.Integers Make testbit_repr thm
R55948:55950 compcert.lib.Coqlib <> zlt def
R55955:55962 compcert.lib.Integers Make unsigned def
R55948:55950 compcert.lib.Coqlib <> zlt def
R55955:55962 compcert.lib.Integers Make unsigned def
R55977:55993 Coq.ZArith.BinInt Z shiftl_spec_low thm
R55977:55993 Coq.ZArith.BinInt Z shiftl_spec_low thm
R56010:56027 Coq.ZArith.BinInt Z shiftl_spec_high thm
R56010:56027 Coq.ZArith.BinInt Z shiftl_spec_high thm
prf 56056:56064 Make bits_shru
R56103:56108 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56129:56133 Coq.Init.Logic <> :type_scope:x_'='_x not
R56109:56115 compcert.lib.Integers Make testbit def
R56128:56128 compcert.lib.Integers <> i var
R56118:56121 compcert.lib.Integers Make shru def
R56125:56125 compcert.lib.Integers <> y var
R56123:56123 compcert.lib.Integers <> x var
R56137:56139 compcert.lib.Coqlib <> zlt def
R56158:56166 compcert.lib.Integers Make zwordsize def
R56143:56145 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56142:56142 compcert.lib.Integers <> i var
R56146:56153 compcert.lib.Integers Make unsigned def
R56155:56155 compcert.lib.Integers <> y var
R56205:56209 Coq.Init.Datatypes <> false constr
R56173:56179 compcert.lib.Integers Make testbit def
R56185:56187 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56184:56184 compcert.lib.Integers <> i var
R56188:56195 compcert.lib.Integers Make unsigned def
R56197:56197 compcert.lib.Integers <> y var
R56181:56181 compcert.lib.Integers <> x var
R56086:56089 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R56091:56093 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R56090:56090 compcert.lib.Integers <> i var
R56090:56090 compcert.lib.Integers <> i var
R56094:56102 compcert.lib.Integers Make zwordsize def
R56236:56239 compcert.lib.Integers Make shru def
R56250:56261 compcert.lib.Integers Make testbit_repr thm
R56250:56261 compcert.lib.Integers Make testbit_repr thm
R56250:56261 compcert.lib.Integers Make testbit_repr thm
R56250:56261 compcert.lib.Integers Make testbit_repr thm
R56280:56292 Coq.ZArith.BinInt Z shiftr_spec thm
R56280:56292 Coq.ZArith.BinInt Z shiftr_spec thm
R56280:56292 Coq.ZArith.BinInt Z shiftr_spec thm
R56280:56292 Coq.ZArith.BinInt Z shiftr_spec thm
R56301:56307 compcert.lib.Integers Make testbit def
R56313:56315 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56316:56323 compcert.lib.Integers Make unsigned def
R56301:56307 compcert.lib.Integers Make testbit def
R56313:56315 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56316:56323 compcert.lib.Integers Make unsigned def
R56342:56344 compcert.lib.Coqlib <> zlt def
R56363:56371 compcert.lib.Integers Make zwordsize def
R56348:56350 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56351:56358 compcert.lib.Integers Make unsigned def
R56342:56344 compcert.lib.Coqlib <> zlt def
R56363:56371 compcert.lib.Integers Make zwordsize def
R56348:56350 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56351:56358 compcert.lib.Integers Make unsigned def
R56391:56400 compcert.lib.Integers Make bits_above thm
R56391:56400 compcert.lib.Integers Make bits_above thm
prf 56430:56437 Make bits_shr
R56476:56481 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56501:56505 Coq.Init.Logic <> :type_scope:x_'='_x not
R56482:56488 compcert.lib.Integers Make testbit def
R56500:56500 compcert.lib.Integers <> i var
R56491:56493 compcert.lib.Integers Make shr def
R56497:56497 compcert.lib.Integers <> y var
R56495:56495 compcert.lib.Integers <> x var
R56506:56512 compcert.lib.Integers Make testbit def
R56520:56522 compcert.lib.Coqlib <> zlt def
R56541:56549 compcert.lib.Integers Make zwordsize def
R56526:56528 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56525:56525 compcert.lib.Integers <> i var
R56529:56536 compcert.lib.Integers Make unsigned def
R56538:56538 compcert.lib.Integers <> y var
R56585:56587 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R56576:56584 compcert.lib.Integers Make zwordsize def
R56557:56559 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56556:56556 compcert.lib.Integers <> i var
R56560:56567 compcert.lib.Integers Make unsigned def
R56569:56569 compcert.lib.Integers <> y var
R56514:56514 compcert.lib.Integers <> x var
R56459:56462 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R56464:56466 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R56463:56463 compcert.lib.Integers <> i var
R56463:56463 compcert.lib.Integers <> i var
R56467:56475 compcert.lib.Integers Make zwordsize def
R56616:56618 compcert.lib.Integers Make shr def
R56629:56640 compcert.lib.Integers Make testbit_repr thm
R56629:56640 compcert.lib.Integers Make testbit_repr thm
R56629:56640 compcert.lib.Integers Make testbit_repr thm
R56629:56640 compcert.lib.Integers Make testbit_repr thm
R56659:56671 Coq.ZArith.BinInt Z shiftr_spec thm
R56659:56671 Coq.ZArith.BinInt Z shiftr_spec thm
R56659:56671 Coq.ZArith.BinInt Z shiftr_spec thm
R56659:56671 Coq.ZArith.BinInt Z shiftr_spec thm
R56680:56690 compcert.lib.Integers Make bits_signed thm
R56680:56690 compcert.lib.Integers Make bits_signed thm
R56707:56720 compcert.lib.Integers Make unsigned_range thm
R56707:56720 compcert.lib.Integers Make unsigned_range thm
R56761:56768 compcert.lib.Integers Make bits_shl thm
R56770:56778 compcert.lib.Integers Make bits_shru thm
R56780:56787 compcert.lib.Integers Make bits_shr thm
prf 56805:56812 Make shl_zero
R56835:56837 Coq.Init.Logic <> :type_scope:x_'='_x not
R56825:56827 compcert.lib.Integers Make shl def
R56831:56834 compcert.lib.Integers Make zero def
R56829:56829 compcert.lib.Integers <> x var
R56838:56838 compcert.lib.Integers <> x var
R56869:56881 compcert.lib.Integers Make unsigned_zero thm
R56869:56881 compcert.lib.Integers Make unsigned_zero thm
R56869:56881 compcert.lib.Integers Make unsigned_zero thm
R56892:56900 compcert.lib.Coqlib <> zlt_false thm
R56892:56900 compcert.lib.Coqlib <> zlt_false thm
R56892:56900 compcert.lib.Coqlib <> zlt_false thm
R56892:56900 compcert.lib.Coqlib <> zlt_false thm
prf 56938:56954 Make bitwise_binop_shl
R56980:56980 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57067:57073 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57096:57101 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57123:57125 Coq.Init.Logic <> :type_scope:x_'='_x not
R57102:57102 compcert.lib.Integers <> f var
R57115:57117 compcert.lib.Integers Make shl def
R57121:57121 compcert.lib.Integers <> n var
R57119:57119 compcert.lib.Integers <> y var
R57105:57107 compcert.lib.Integers Make shl def
R57111:57111 compcert.lib.Integers <> n var
R57109:57109 compcert.lib.Integers <> x var
R57126:57128 compcert.lib.Integers Make shl def
R57138:57138 compcert.lib.Integers <> n var
R57131:57131 compcert.lib.Integers <> f var
R57135:57135 compcert.lib.Integers <> y var
R57133:57133 compcert.lib.Integers <> x var
R57088:57090 Coq.Init.Logic <> :type_scope:x_'='_x not
R57074:57075 compcert.lib.Integers <> f' var
R57083:57087 Coq.Init.Datatypes <> false constr
R57077:57081 Coq.Init.Datatypes <> false constr
R57091:57095 Coq.Init.Datatypes <> false constr
R57013:57016 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57034:57036 Coq.Init.Logic <> :type_scope:x_'='_x not
R57017:57023 compcert.lib.Integers Make testbit def
R57033:57033 compcert.lib.Integers <> i var
R57026:57026 compcert.lib.Integers <> f var
R57030:57030 compcert.lib.Integers <> y var
R57028:57028 compcert.lib.Integers <> x var
R57037:57038 compcert.lib.Integers <> f' var
R57055:57061 compcert.lib.Integers Make testbit def
R57065:57065 compcert.lib.Integers <> i var
R57063:57063 compcert.lib.Integers <> y var
R57041:57047 compcert.lib.Integers Make testbit def
R57051:57051 compcert.lib.Integers <> i var
R57049:57049 compcert.lib.Integers <> x var
R56996:56999 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R57001:57003 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R57000:57000 compcert.lib.Integers <> i var
R57000:57000 compcert.lib.Integers <> i var
R57004:57012 compcert.lib.Integers Make zwordsize def
R57164:57175 compcert.lib.Integers Make same_bits_eq thm
R57164:57175 compcert.lib.Integers Make same_bits_eq thm
R57214:57221 compcert.lib.Integers Make bits_shl thm
R57214:57221 compcert.lib.Integers Make bits_shl thm
R57214:57221 compcert.lib.Integers Make bits_shl thm
R57214:57221 compcert.lib.Integers Make bits_shl thm
R57214:57221 compcert.lib.Integers Make bits_shl thm
R57214:57221 compcert.lib.Integers Make bits_shl thm
R57214:57221 compcert.lib.Integers Make bits_shl thm
R57214:57221 compcert.lib.Integers Make bits_shl thm
R57214:57221 compcert.lib.Integers Make bits_shl thm
R57242:57244 compcert.lib.Coqlib <> zlt def
R57249:57256 compcert.lib.Integers Make unsigned def
R57242:57244 compcert.lib.Coqlib <> zlt def
R57249:57256 compcert.lib.Integers Make unsigned def
R57300:57313 compcert.lib.Integers Make unsigned_range thm
R57300:57313 compcert.lib.Integers Make unsigned_range thm
prf 57340:57346 Make and_shl
R57390:57392 Coq.Init.Logic <> :type_scope:x_'='_x not
R57367:57369 compcert.lib.Integers Make and def
R57382:57384 compcert.lib.Integers Make shl def
R57388:57388 compcert.lib.Integers <> n var
R57386:57386 compcert.lib.Integers <> y var
R57372:57374 compcert.lib.Integers Make shl def
R57378:57378 compcert.lib.Integers <> n var
R57376:57376 compcert.lib.Integers <> x var
R57393:57395 compcert.lib.Integers Make shl def
R57407:57407 compcert.lib.Integers <> n var
R57398:57400 compcert.lib.Integers Make and def
R57404:57404 compcert.lib.Integers <> y var
R57402:57402 compcert.lib.Integers <> x var
R57456:57459 Coq.Init.Datatypes <> andb def
R57433:57449 compcert.lib.Integers Make bitwise_binop_shl thm
R57456:57459 Coq.Init.Datatypes <> andb def
R57433:57449 compcert.lib.Integers Make bitwise_binop_shl thm
R57468:57475 compcert.lib.Integers Make bits_and thm
R57468:57475 compcert.lib.Integers Make bits_and thm
prf 57498:57503 Make or_shl
R57546:57548 Coq.Init.Logic <> :type_scope:x_'='_x not
R57524:57525 compcert.lib.Integers Make or def
R57538:57540 compcert.lib.Integers Make shl def
R57544:57544 compcert.lib.Integers <> n var
R57542:57542 compcert.lib.Integers <> y var
R57528:57530 compcert.lib.Integers Make shl def
R57534:57534 compcert.lib.Integers <> n var
R57532:57532 compcert.lib.Integers <> x var
R57549:57551 compcert.lib.Integers Make shl def
R57562:57562 compcert.lib.Integers <> n var
R57554:57555 compcert.lib.Integers Make or def
R57559:57559 compcert.lib.Integers <> y var
R57557:57557 compcert.lib.Integers <> x var
R57611:57613 Coq.Init.Datatypes <> orb def
R57588:57604 compcert.lib.Integers Make bitwise_binop_shl thm
R57611:57613 Coq.Init.Datatypes <> orb def
R57588:57604 compcert.lib.Integers Make bitwise_binop_shl thm
R57622:57628 compcert.lib.Integers Make bits_or thm
R57622:57628 compcert.lib.Integers Make bits_or thm
prf 57651:57657 Make xor_shl
R57701:57703 Coq.Init.Logic <> :type_scope:x_'='_x not
R57678:57680 compcert.lib.Integers Make xor def
R57693:57695 compcert.lib.Integers Make shl def
R57699:57699 compcert.lib.Integers <> n var
R57697:57697 compcert.lib.Integers <> y var
R57683:57685 compcert.lib.Integers Make shl def
R57689:57689 compcert.lib.Integers <> n var
R57687:57687 compcert.lib.Integers <> x var
R57704:57706 compcert.lib.Integers Make shl def
R57718:57718 compcert.lib.Integers <> n var
R57709:57711 compcert.lib.Integers Make xor def
R57715:57715 compcert.lib.Integers <> y var
R57713:57713 compcert.lib.Integers <> x var
R57767:57770 Coq.Init.Datatypes <> xorb def
R57744:57760 compcert.lib.Integers Make bitwise_binop_shl thm
R57767:57770 Coq.Init.Datatypes <> xorb def
R57744:57760 compcert.lib.Integers Make bitwise_binop_shl thm
R57779:57786 compcert.lib.Integers Make bits_xor thm
R57779:57786 compcert.lib.Integers Make bits_xor thm
prf 57807:57813 Make ltu_inv
R57844:57847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57849:57852 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R57863:57865 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R57853:57860 compcert.lib.Integers Make unsigned def
R57862:57862 compcert.lib.Integers <> x var
R57853:57860 compcert.lib.Integers Make unsigned def
R57862:57862 compcert.lib.Integers <> x var
R57866:57873 compcert.lib.Integers Make unsigned def
R57875:57875 compcert.lib.Integers <> y var
R57837:57839 Coq.Init.Logic <> :type_scope:x_'='_x not
R57830:57832 compcert.lib.Integers Make ltu def
R57836:57836 compcert.lib.Integers <> y var
R57834:57834 compcert.lib.Integers <> x var
R57840:57843 Coq.Init.Datatypes <> true constr
R57894:57896 compcert.lib.Integers Make ltu def
R57917:57919 compcert.lib.Coqlib <> zlt def
R57935:57942 compcert.lib.Integers Make unsigned def
R57922:57929 compcert.lib.Integers Make unsigned def
R57917:57919 compcert.lib.Coqlib <> zlt def
R57935:57942 compcert.lib.Integers Make unsigned def
R57922:57929 compcert.lib.Integers Make unsigned def
R57976:57989 compcert.lib.Integers Make unsigned_range thm
R57976:57989 compcert.lib.Integers Make unsigned_range thm
prf 58030:58046 Make ltu_iwordsize_inv
R58083:58086 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58088:58091 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R58102:58104 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R58092:58099 compcert.lib.Integers Make unsigned def
R58101:58101 compcert.lib.Integers <> x var
R58092:58099 compcert.lib.Integers Make unsigned def
R58101:58101 compcert.lib.Integers <> x var
R58105:58113 compcert.lib.Integers Make zwordsize def
R58076:58078 Coq.Init.Logic <> :type_scope:x_'='_x not
R58061:58063 compcert.lib.Integers Make ltu def
R58067:58075 compcert.lib.Integers Make iwordsize def
R58065:58065 compcert.lib.Integers <> x var
R58079:58082 Coq.Init.Datatypes <> true constr
R58145:58151 compcert.lib.Integers Make ltu_inv thm
R58145:58151 compcert.lib.Integers Make ltu_inv thm
R58169:58190 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58169:58190 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58169:58190 compcert.lib.Integers Make unsigned_repr_wordsize thm
prf 58213:58219 Make shl_shl
R58262:58267 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58290:58295 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58326:58331 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58347:58349 Coq.Init.Logic <> :type_scope:x_'='_x not
R58332:58334 compcert.lib.Integers Make shl def
R58346:58346 compcert.lib.Integers <> z var
R58337:58339 compcert.lib.Integers Make shl def
R58343:58343 compcert.lib.Integers <> y var
R58341:58341 compcert.lib.Integers <> x var
R58350:58352 compcert.lib.Integers Make shl def
R58357:58359 compcert.lib.Integers Make add def
R58363:58363 compcert.lib.Integers <> z var
R58361:58361 compcert.lib.Integers <> y var
R58354:58354 compcert.lib.Integers <> x var
R58319:58321 Coq.Init.Logic <> :type_scope:x_'='_x not
R58296:58298 compcert.lib.Integers Make ltu def
R58310:58318 compcert.lib.Integers Make iwordsize def
R58301:58303 compcert.lib.Integers Make add def
R58307:58307 compcert.lib.Integers <> z var
R58305:58305 compcert.lib.Integers <> y var
R58322:58325 Coq.Init.Datatypes <> true constr
R58283:58285 Coq.Init.Logic <> :type_scope:x_'='_x not
R58268:58270 compcert.lib.Integers Make ltu def
R58274:58282 compcert.lib.Integers Make iwordsize def
R58272:58272 compcert.lib.Integers <> z var
R58286:58289 Coq.Init.Datatypes <> true constr
R58255:58257 Coq.Init.Logic <> :type_scope:x_'='_x not
R58240:58242 compcert.lib.Integers Make ltu def
R58246:58254 compcert.lib.Integers Make iwordsize def
R58244:58244 compcert.lib.Integers <> y var
R58258:58261 Coq.Init.Datatypes <> true constr
R58398:58414 compcert.lib.Integers Make ltu_iwordsize_inv thm
R58422:58438 compcert.lib.Integers Make ltu_iwordsize_inv thm
R58398:58414 compcert.lib.Integers Make ltu_iwordsize_inv thm
R58422:58438 compcert.lib.Integers Make ltu_iwordsize_inv thm
R58483:58485 Coq.Init.Logic <> :type_scope:x_'='_x not
R58465:58472 compcert.lib.Integers Make unsigned def
R58475:58477 compcert.lib.Integers Make add def
R58496:58498 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R58486:58493 compcert.lib.Integers Make unsigned def
R58499:58506 compcert.lib.Integers Make unsigned def
R58483:58485 Coq.Init.Logic <> :type_scope:x_'='_x not
R58465:58472 compcert.lib.Integers Make unsigned def
R58475:58477 compcert.lib.Integers Make add def
R58496:58498 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R58486:58493 compcert.lib.Integers Make unsigned def
R58499:58506 compcert.lib.Integers Make unsigned def
R58523:58525 compcert.lib.Integers Make add def
R58534:58546 compcert.lib.Integers Make unsigned_repr thm
R58534:58546 compcert.lib.Integers Make unsigned_repr thm
R58564:58588 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R58564:58588 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R58606:58617 compcert.lib.Integers Make same_bits_eq thm
R58606:58617 compcert.lib.Integers Make same_bits_eq thm
R58638:58645 compcert.lib.Integers Make bits_shl thm
R58638:58645 compcert.lib.Integers Make bits_shl thm
R58638:58645 compcert.lib.Integers Make bits_shl thm
R58638:58645 compcert.lib.Integers Make bits_shl thm
R58666:58668 compcert.lib.Coqlib <> zlt def
R58673:58680 compcert.lib.Integers Make unsigned def
R58666:58668 compcert.lib.Coqlib <> zlt def
R58673:58680 compcert.lib.Integers Make unsigned def
R58699:58706 compcert.lib.Integers Make bits_shl thm
R58699:58706 compcert.lib.Integers Make bits_shl thm
R58699:58706 compcert.lib.Integers Make bits_shl thm
R58699:58706 compcert.lib.Integers Make bits_shl thm
R58723:58730 compcert.lib.Coqlib <> zlt_true thm
R58723:58730 compcert.lib.Coqlib <> zlt_true thm
R58723:58730 compcert.lib.Coqlib <> zlt_true thm
R58723:58730 compcert.lib.Coqlib <> zlt_true thm
R58758:58765 compcert.lib.Integers Make bits_shl thm
R58758:58765 compcert.lib.Integers Make bits_shl thm
R58758:58765 compcert.lib.Integers Make bits_shl thm
R58758:58765 compcert.lib.Integers Make bits_shl thm
R58778:58780 compcert.lib.Coqlib <> zlt def
R58800:58807 compcert.lib.Integers Make unsigned def
R58784:58786 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R58787:58794 compcert.lib.Integers Make unsigned def
R58778:58780 compcert.lib.Coqlib <> zlt def
R58800:58807 compcert.lib.Integers Make unsigned def
R58784:58786 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R58787:58794 compcert.lib.Integers Make unsigned def
R58828:58835 compcert.lib.Integers Make bits_shl thm
R58828:58835 compcert.lib.Integers Make bits_shl thm
R58828:58835 compcert.lib.Integers Make bits_shl thm
R58828:58835 compcert.lib.Integers Make bits_shl thm
R58852:58859 compcert.lib.Coqlib <> zlt_true thm
R58852:58859 compcert.lib.Coqlib <> zlt_true thm
R58852:58859 compcert.lib.Coqlib <> zlt_true thm
R58852:58859 compcert.lib.Coqlib <> zlt_true thm
R58889:58896 compcert.lib.Integers Make bits_shl thm
R58889:58896 compcert.lib.Integers Make bits_shl thm
R58889:58896 compcert.lib.Integers Make bits_shl thm
R58889:58896 compcert.lib.Integers Make bits_shl thm
R58913:58921 compcert.lib.Coqlib <> zlt_false thm
R58913:58921 compcert.lib.Coqlib <> zlt_false thm
R58913:58921 compcert.lib.Coqlib <> zlt_false thm
R58913:58921 compcert.lib.Coqlib <> zlt_false thm
prf 58974:58982 Make shru_zero
R59006:59008 Coq.Init.Logic <> :type_scope:x_'='_x not
R58995:58998 compcert.lib.Integers Make shru def
R59002:59005 compcert.lib.Integers Make zero def
R59000:59000 compcert.lib.Integers <> x var
R59009:59009 compcert.lib.Integers <> x var
R59040:59052 compcert.lib.Integers Make unsigned_zero thm
R59040:59052 compcert.lib.Integers Make unsigned_zero thm
R59040:59052 compcert.lib.Integers Make unsigned_zero thm
R59063:59070 compcert.lib.Coqlib <> zlt_true thm
R59063:59070 compcert.lib.Coqlib <> zlt_true thm
R59063:59070 compcert.lib.Coqlib <> zlt_true thm
R59063:59070 compcert.lib.Coqlib <> zlt_true thm
prf 59108:59125 Make bitwise_binop_shru
R59151:59151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59238:59244 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59267:59272 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59296:59298 Coq.Init.Logic <> :type_scope:x_'='_x not
R59273:59273 compcert.lib.Integers <> f var
R59287:59290 compcert.lib.Integers Make shru def
R59294:59294 compcert.lib.Integers <> n var
R59292:59292 compcert.lib.Integers <> y var
R59276:59279 compcert.lib.Integers Make shru def
R59283:59283 compcert.lib.Integers <> n var
R59281:59281 compcert.lib.Integers <> x var
R59299:59302 compcert.lib.Integers Make shru def
R59312:59312 compcert.lib.Integers <> n var
R59305:59305 compcert.lib.Integers <> f var
R59309:59309 compcert.lib.Integers <> y var
R59307:59307 compcert.lib.Integers <> x var
R59259:59261 Coq.Init.Logic <> :type_scope:x_'='_x not
R59245:59246 compcert.lib.Integers <> f' var
R59254:59258 Coq.Init.Datatypes <> false constr
R59248:59252 Coq.Init.Datatypes <> false constr
R59262:59266 Coq.Init.Datatypes <> false constr
R59184:59187 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59205:59207 Coq.Init.Logic <> :type_scope:x_'='_x not
R59188:59194 compcert.lib.Integers Make testbit def
R59204:59204 compcert.lib.Integers <> i var
R59197:59197 compcert.lib.Integers <> f var
R59201:59201 compcert.lib.Integers <> y var
R59199:59199 compcert.lib.Integers <> x var
R59208:59209 compcert.lib.Integers <> f' var
R59226:59232 compcert.lib.Integers Make testbit def
R59236:59236 compcert.lib.Integers <> i var
R59234:59234 compcert.lib.Integers <> y var
R59212:59218 compcert.lib.Integers Make testbit def
R59222:59222 compcert.lib.Integers <> i var
R59220:59220 compcert.lib.Integers <> x var
R59167:59170 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R59172:59174 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R59171:59171 compcert.lib.Integers <> i var
R59171:59171 compcert.lib.Integers <> i var
R59175:59183 compcert.lib.Integers Make zwordsize def
R59338:59349 compcert.lib.Integers Make same_bits_eq thm
R59338:59349 compcert.lib.Integers Make same_bits_eq thm
R59388:59396 compcert.lib.Integers Make bits_shru thm
R59388:59396 compcert.lib.Integers Make bits_shru thm
R59388:59396 compcert.lib.Integers Make bits_shru thm
R59388:59396 compcert.lib.Integers Make bits_shru thm
R59388:59396 compcert.lib.Integers Make bits_shru thm
R59388:59396 compcert.lib.Integers Make bits_shru thm
R59388:59396 compcert.lib.Integers Make bits_shru thm
R59388:59396 compcert.lib.Integers Make bits_shru thm
R59388:59396 compcert.lib.Integers Make bits_shru thm
R59417:59419 compcert.lib.Coqlib <> zlt def
R59438:59446 compcert.lib.Integers Make zwordsize def
R59423:59425 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R59426:59433 compcert.lib.Integers Make unsigned def
R59417:59419 compcert.lib.Coqlib <> zlt def
R59438:59446 compcert.lib.Integers Make zwordsize def
R59423:59425 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R59426:59433 compcert.lib.Integers Make unsigned def
R59487:59500 compcert.lib.Integers Make unsigned_range thm
R59487:59500 compcert.lib.Integers Make unsigned_range thm
prf 59527:59534 Make and_shru
R59580:59582 Coq.Init.Logic <> :type_scope:x_'='_x not
R59555:59557 compcert.lib.Integers Make and def
R59571:59574 compcert.lib.Integers Make shru def
R59578:59578 compcert.lib.Integers <> n var
R59576:59576 compcert.lib.Integers <> y var
R59560:59563 compcert.lib.Integers Make shru def
R59567:59567 compcert.lib.Integers <> n var
R59565:59565 compcert.lib.Integers <> x var
R59583:59586 compcert.lib.Integers Make shru def
R59598:59598 compcert.lib.Integers <> n var
R59589:59591 compcert.lib.Integers Make and def
R59595:59595 compcert.lib.Integers <> y var
R59593:59593 compcert.lib.Integers <> x var
R59648:59651 Coq.Init.Datatypes <> andb def
R59624:59641 compcert.lib.Integers Make bitwise_binop_shru thm
R59648:59651 Coq.Init.Datatypes <> andb def
R59624:59641 compcert.lib.Integers Make bitwise_binop_shru thm
R59666:59673 compcert.lib.Integers Make bits_and thm
R59666:59673 compcert.lib.Integers Make bits_and thm
prf 59690:59696 Make or_shru
R59741:59743 Coq.Init.Logic <> :type_scope:x_'='_x not
R59717:59718 compcert.lib.Integers Make or def
R59732:59735 compcert.lib.Integers Make shru def
R59739:59739 compcert.lib.Integers <> n var
R59737:59737 compcert.lib.Integers <> y var
R59721:59724 compcert.lib.Integers Make shru def
R59728:59728 compcert.lib.Integers <> n var
R59726:59726 compcert.lib.Integers <> x var
R59744:59747 compcert.lib.Integers Make shru def
R59758:59758 compcert.lib.Integers <> n var
R59750:59751 compcert.lib.Integers Make or def
R59755:59755 compcert.lib.Integers <> y var
R59753:59753 compcert.lib.Integers <> x var
R59808:59810 Coq.Init.Datatypes <> orb def
R59784:59801 compcert.lib.Integers Make bitwise_binop_shru thm
R59808:59810 Coq.Init.Datatypes <> orb def
R59784:59801 compcert.lib.Integers Make bitwise_binop_shru thm
R59825:59831 compcert.lib.Integers Make bits_or thm
R59825:59831 compcert.lib.Integers Make bits_or thm
prf 59848:59855 Make xor_shru
R59901:59903 Coq.Init.Logic <> :type_scope:x_'='_x not
R59876:59878 compcert.lib.Integers Make xor def
R59892:59895 compcert.lib.Integers Make shru def
R59899:59899 compcert.lib.Integers <> n var
R59897:59897 compcert.lib.Integers <> y var
R59881:59884 compcert.lib.Integers Make shru def
R59888:59888 compcert.lib.Integers <> n var
R59886:59886 compcert.lib.Integers <> x var
R59904:59907 compcert.lib.Integers Make shru def
R59919:59919 compcert.lib.Integers <> n var
R59910:59912 compcert.lib.Integers Make xor def
R59916:59916 compcert.lib.Integers <> y var
R59914:59914 compcert.lib.Integers <> x var
R59969:59972 Coq.Init.Datatypes <> xorb def
R59945:59962 compcert.lib.Integers Make bitwise_binop_shru thm
R59969:59972 Coq.Init.Datatypes <> xorb def
R59945:59962 compcert.lib.Integers Make bitwise_binop_shru thm
R59987:59994 compcert.lib.Integers Make bits_xor thm
R59987:59994 compcert.lib.Integers Make bits_xor thm
prf 60011:60019 Make shru_shru
R60062:60067 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60090:60095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60126:60131 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60149:60151 Coq.Init.Logic <> :type_scope:x_'='_x not
R60132:60135 compcert.lib.Integers Make shru def
R60148:60148 compcert.lib.Integers <> z var
R60138:60141 compcert.lib.Integers Make shru def
R60145:60145 compcert.lib.Integers <> y var
R60143:60143 compcert.lib.Integers <> x var
R60152:60155 compcert.lib.Integers Make shru def
R60160:60162 compcert.lib.Integers Make add def
R60166:60166 compcert.lib.Integers <> z var
R60164:60164 compcert.lib.Integers <> y var
R60157:60157 compcert.lib.Integers <> x var
R60119:60121 Coq.Init.Logic <> :type_scope:x_'='_x not
R60096:60098 compcert.lib.Integers Make ltu def
R60110:60118 compcert.lib.Integers Make iwordsize def
R60101:60103 compcert.lib.Integers Make add def
R60107:60107 compcert.lib.Integers <> z var
R60105:60105 compcert.lib.Integers <> y var
R60122:60125 Coq.Init.Datatypes <> true constr
R60083:60085 Coq.Init.Logic <> :type_scope:x_'='_x not
R60068:60070 compcert.lib.Integers Make ltu def
R60074:60082 compcert.lib.Integers Make iwordsize def
R60072:60072 compcert.lib.Integers <> z var
R60086:60089 Coq.Init.Datatypes <> true constr
R60055:60057 Coq.Init.Logic <> :type_scope:x_'='_x not
R60040:60042 compcert.lib.Integers Make ltu def
R60046:60054 compcert.lib.Integers Make iwordsize def
R60044:60044 compcert.lib.Integers <> y var
R60058:60061 Coq.Init.Datatypes <> true constr
R60201:60217 compcert.lib.Integers Make ltu_iwordsize_inv thm
R60225:60241 compcert.lib.Integers Make ltu_iwordsize_inv thm
R60201:60217 compcert.lib.Integers Make ltu_iwordsize_inv thm
R60225:60241 compcert.lib.Integers Make ltu_iwordsize_inv thm
R60286:60288 Coq.Init.Logic <> :type_scope:x_'='_x not
R60268:60275 compcert.lib.Integers Make unsigned def
R60278:60280 compcert.lib.Integers Make add def
R60299:60301 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60289:60296 compcert.lib.Integers Make unsigned def
R60302:60309 compcert.lib.Integers Make unsigned def
R60286:60288 Coq.Init.Logic <> :type_scope:x_'='_x not
R60268:60275 compcert.lib.Integers Make unsigned def
R60278:60280 compcert.lib.Integers Make add def
R60299:60301 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60289:60296 compcert.lib.Integers Make unsigned def
R60302:60309 compcert.lib.Integers Make unsigned def
R60326:60328 compcert.lib.Integers Make add def
R60337:60349 compcert.lib.Integers Make unsigned_repr thm
R60337:60349 compcert.lib.Integers Make unsigned_repr thm
R60367:60391 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R60367:60391 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R60409:60420 compcert.lib.Integers Make same_bits_eq thm
R60409:60420 compcert.lib.Integers Make same_bits_eq thm
R60441:60449 compcert.lib.Integers Make bits_shru thm
R60441:60449 compcert.lib.Integers Make bits_shru thm
R60441:60449 compcert.lib.Integers Make bits_shru thm
R60441:60449 compcert.lib.Integers Make bits_shru thm
R60470:60472 compcert.lib.Coqlib <> zlt def
R60491:60499 compcert.lib.Integers Make zwordsize def
R60476:60478 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60479:60486 compcert.lib.Integers Make unsigned def
R60470:60472 compcert.lib.Coqlib <> zlt def
R60491:60499 compcert.lib.Integers Make zwordsize def
R60476:60478 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60479:60486 compcert.lib.Integers Make unsigned def
R60515:60523 compcert.lib.Integers Make bits_shru thm
R60515:60523 compcert.lib.Integers Make bits_shru thm
R60515:60523 compcert.lib.Integers Make bits_shru thm
R60515:60523 compcert.lib.Integers Make bits_shru thm
R60536:60538 compcert.lib.Coqlib <> zlt def
R60570:60578 compcert.lib.Integers Make zwordsize def
R60555:60557 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60542:60544 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60545:60552 compcert.lib.Integers Make unsigned def
R60558:60565 compcert.lib.Integers Make unsigned def
R60536:60538 compcert.lib.Coqlib <> zlt def
R60570:60578 compcert.lib.Integers Make zwordsize def
R60555:60557 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60542:60544 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60545:60552 compcert.lib.Integers Make unsigned def
R60558:60565 compcert.lib.Integers Make unsigned def
R60596:60604 compcert.lib.Integers Make bits_shru thm
R60596:60604 compcert.lib.Integers Make bits_shru thm
R60596:60604 compcert.lib.Integers Make bits_shru thm
R60596:60604 compcert.lib.Integers Make bits_shru thm
R60621:60628 compcert.lib.Coqlib <> zlt_true thm
R60621:60628 compcert.lib.Coqlib <> zlt_true thm
R60621:60628 compcert.lib.Coqlib <> zlt_true thm
R60621:60628 compcert.lib.Coqlib <> zlt_true thm
R60668:60676 compcert.lib.Integers Make bits_shru thm
R60668:60676 compcert.lib.Integers Make bits_shru thm
R60668:60676 compcert.lib.Integers Make bits_shru thm
R60668:60676 compcert.lib.Integers Make bits_shru thm
R60693:60701 compcert.lib.Coqlib <> zlt_false thm
R60693:60701 compcert.lib.Coqlib <> zlt_false thm
R60693:60701 compcert.lib.Coqlib <> zlt_false thm
R60693:60701 compcert.lib.Coqlib <> zlt_false thm
R60742:60750 compcert.lib.Integers Make bits_shru thm
R60742:60750 compcert.lib.Integers Make bits_shru thm
R60742:60750 compcert.lib.Integers Make bits_shru thm
R60742:60750 compcert.lib.Integers Make bits_shru thm
R60767:60775 compcert.lib.Coqlib <> zlt_false thm
R60767:60775 compcert.lib.Coqlib <> zlt_false thm
R60767:60775 compcert.lib.Coqlib <> zlt_false thm
R60767:60775 compcert.lib.Coqlib <> zlt_false thm
prf 60805:60812 Make shr_zero
R60835:60837 Coq.Init.Logic <> :type_scope:x_'='_x not
R60825:60827 compcert.lib.Integers Make shr def
R60831:60834 compcert.lib.Integers Make zero def
R60829:60829 compcert.lib.Integers <> x var
R60838:60838 compcert.lib.Integers <> x var
R60869:60881 compcert.lib.Integers Make unsigned_zero thm
R60869:60881 compcert.lib.Integers Make unsigned_zero thm
R60869:60881 compcert.lib.Integers Make unsigned_zero thm
R60892:60899 compcert.lib.Coqlib <> zlt_true thm
R60892:60899 compcert.lib.Coqlib <> zlt_true thm
R60892:60899 compcert.lib.Coqlib <> zlt_true thm
R60892:60899 compcert.lib.Coqlib <> zlt_true thm
prf 60937:60953 Make bitwise_binop_shr
R60979:60979 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61066:61072 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61094:61096 Coq.Init.Logic <> :type_scope:x_'='_x not
R61073:61073 compcert.lib.Integers <> f var
R61086:61088 compcert.lib.Integers Make shr def
R61092:61092 compcert.lib.Integers <> n var
R61090:61090 compcert.lib.Integers <> y var
R61076:61078 compcert.lib.Integers Make shr def
R61082:61082 compcert.lib.Integers <> n var
R61080:61080 compcert.lib.Integers <> x var
R61097:61099 compcert.lib.Integers Make shr def
R61109:61109 compcert.lib.Integers <> n var
R61102:61102 compcert.lib.Integers <> f var
R61106:61106 compcert.lib.Integers <> y var
R61104:61104 compcert.lib.Integers <> x var
R61012:61015 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61033:61035 Coq.Init.Logic <> :type_scope:x_'='_x not
R61016:61022 compcert.lib.Integers Make testbit def
R61032:61032 compcert.lib.Integers <> i var
R61025:61025 compcert.lib.Integers <> f var
R61029:61029 compcert.lib.Integers <> y var
R61027:61027 compcert.lib.Integers <> x var
R61036:61037 compcert.lib.Integers <> f' var
R61054:61060 compcert.lib.Integers Make testbit def
R61064:61064 compcert.lib.Integers <> i var
R61062:61062 compcert.lib.Integers <> y var
R61040:61046 compcert.lib.Integers Make testbit def
R61050:61050 compcert.lib.Integers <> i var
R61048:61048 compcert.lib.Integers <> x var
R60995:60998 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R61000:61002 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R60999:60999 compcert.lib.Integers <> i var
R60999:60999 compcert.lib.Integers <> i var
R61003:61011 compcert.lib.Integers Make zwordsize def
R61135:61146 compcert.lib.Integers Make same_bits_eq thm
R61135:61146 compcert.lib.Integers Make same_bits_eq thm
R61185:61192 compcert.lib.Integers Make bits_shr thm
R61185:61192 compcert.lib.Integers Make bits_shr thm
R61185:61192 compcert.lib.Integers Make bits_shr thm
R61185:61192 compcert.lib.Integers Make bits_shr thm
R61185:61192 compcert.lib.Integers Make bits_shr thm
R61185:61192 compcert.lib.Integers Make bits_shr thm
R61185:61192 compcert.lib.Integers Make bits_shr thm
R61185:61192 compcert.lib.Integers Make bits_shr thm
R61185:61192 compcert.lib.Integers Make bits_shr thm
R61232:61234 compcert.lib.Coqlib <> zlt def
R61253:61261 compcert.lib.Integers Make zwordsize def
R61238:61240 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R61241:61248 compcert.lib.Integers Make unsigned def
R61232:61234 compcert.lib.Coqlib <> zlt def
R61253:61261 compcert.lib.Integers Make zwordsize def
R61238:61240 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R61241:61248 compcert.lib.Integers Make unsigned def
R61279:61292 compcert.lib.Integers Make unsigned_range thm
R61279:61292 compcert.lib.Integers Make unsigned_range thm
prf 61328:61334 Make and_shr
R61378:61380 Coq.Init.Logic <> :type_scope:x_'='_x not
R61355:61357 compcert.lib.Integers Make and def
R61370:61372 compcert.lib.Integers Make shr def
R61376:61376 compcert.lib.Integers <> n var
R61374:61374 compcert.lib.Integers <> y var
R61360:61362 compcert.lib.Integers Make shr def
R61366:61366 compcert.lib.Integers <> n var
R61364:61364 compcert.lib.Integers <> x var
R61381:61383 compcert.lib.Integers Make shr def
R61395:61395 compcert.lib.Integers <> n var
R61386:61388 compcert.lib.Integers Make and def
R61392:61392 compcert.lib.Integers <> y var
R61390:61390 compcert.lib.Integers <> x var
R61444:61447 Coq.Init.Datatypes <> andb def
R61421:61437 compcert.lib.Integers Make bitwise_binop_shr thm
R61444:61447 Coq.Init.Datatypes <> andb def
R61421:61437 compcert.lib.Integers Make bitwise_binop_shr thm
R61456:61463 compcert.lib.Integers Make bits_and thm
R61456:61463 compcert.lib.Integers Make bits_and thm
prf 61480:61485 Make or_shr
R61528:61530 Coq.Init.Logic <> :type_scope:x_'='_x not
R61506:61507 compcert.lib.Integers Make or def
R61520:61522 compcert.lib.Integers Make shr def
R61526:61526 compcert.lib.Integers <> n var
R61524:61524 compcert.lib.Integers <> y var
R61510:61512 compcert.lib.Integers Make shr def
R61516:61516 compcert.lib.Integers <> n var
R61514:61514 compcert.lib.Integers <> x var
R61531:61533 compcert.lib.Integers Make shr def
R61544:61544 compcert.lib.Integers <> n var
R61536:61537 compcert.lib.Integers Make or def
R61541:61541 compcert.lib.Integers <> y var
R61539:61539 compcert.lib.Integers <> x var
R61593:61595 Coq.Init.Datatypes <> orb def
R61570:61586 compcert.lib.Integers Make bitwise_binop_shr thm
R61593:61595 Coq.Init.Datatypes <> orb def
R61570:61586 compcert.lib.Integers Make bitwise_binop_shr thm
R61604:61610 compcert.lib.Integers Make bits_or thm
R61604:61610 compcert.lib.Integers Make bits_or thm
prf 61627:61633 Make xor_shr
R61677:61679 Coq.Init.Logic <> :type_scope:x_'='_x not
R61654:61656 compcert.lib.Integers Make xor def
R61669:61671 compcert.lib.Integers Make shr def
R61675:61675 compcert.lib.Integers <> n var
R61673:61673 compcert.lib.Integers <> y var
R61659:61661 compcert.lib.Integers Make shr def
R61665:61665 compcert.lib.Integers <> n var
R61663:61663 compcert.lib.Integers <> x var
R61680:61682 compcert.lib.Integers Make shr def
R61694:61694 compcert.lib.Integers <> n var
R61685:61687 compcert.lib.Integers Make xor def
R61691:61691 compcert.lib.Integers <> y var
R61689:61689 compcert.lib.Integers <> x var
R61743:61746 Coq.Init.Datatypes <> xorb def
R61720:61736 compcert.lib.Integers Make bitwise_binop_shr thm
R61743:61746 Coq.Init.Datatypes <> xorb def
R61720:61736 compcert.lib.Integers Make bitwise_binop_shr thm
R61755:61762 compcert.lib.Integers Make bits_xor thm
R61755:61762 compcert.lib.Integers Make bits_xor thm
prf 61779:61785 Make shr_shr
R61828:61833 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61856:61861 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61892:61897 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61913:61915 Coq.Init.Logic <> :type_scope:x_'='_x not
R61898:61900 compcert.lib.Integers Make shr def
R61912:61912 compcert.lib.Integers <> z var
R61903:61905 compcert.lib.Integers Make shr def
R61909:61909 compcert.lib.Integers <> y var
R61907:61907 compcert.lib.Integers <> x var
R61916:61918 compcert.lib.Integers Make shr def
R61923:61925 compcert.lib.Integers Make add def
R61929:61929 compcert.lib.Integers <> z var
R61927:61927 compcert.lib.Integers <> y var
R61920:61920 compcert.lib.Integers <> x var
R61885:61887 Coq.Init.Logic <> :type_scope:x_'='_x not
R61862:61864 compcert.lib.Integers Make ltu def
R61876:61884 compcert.lib.Integers Make iwordsize def
R61867:61869 compcert.lib.Integers Make add def
R61873:61873 compcert.lib.Integers <> z var
R61871:61871 compcert.lib.Integers <> y var
R61888:61891 Coq.Init.Datatypes <> true constr
R61849:61851 Coq.Init.Logic <> :type_scope:x_'='_x not
R61834:61836 compcert.lib.Integers Make ltu def
R61840:61848 compcert.lib.Integers Make iwordsize def
R61838:61838 compcert.lib.Integers <> z var
R61852:61855 Coq.Init.Datatypes <> true constr
R61821:61823 Coq.Init.Logic <> :type_scope:x_'='_x not
R61806:61808 compcert.lib.Integers Make ltu def
R61812:61820 compcert.lib.Integers Make iwordsize def
R61810:61810 compcert.lib.Integers <> y var
R61824:61827 Coq.Init.Datatypes <> true constr
R61964:61980 compcert.lib.Integers Make ltu_iwordsize_inv thm
R61988:62004 compcert.lib.Integers Make ltu_iwordsize_inv thm
R61964:61980 compcert.lib.Integers Make ltu_iwordsize_inv thm
R61988:62004 compcert.lib.Integers Make ltu_iwordsize_inv thm
R62049:62051 Coq.Init.Logic <> :type_scope:x_'='_x not
R62031:62038 compcert.lib.Integers Make unsigned def
R62041:62043 compcert.lib.Integers Make add def
R62062:62064 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62052:62059 compcert.lib.Integers Make unsigned def
R62065:62072 compcert.lib.Integers Make unsigned def
R62049:62051 Coq.Init.Logic <> :type_scope:x_'='_x not
R62031:62038 compcert.lib.Integers Make unsigned def
R62041:62043 compcert.lib.Integers Make add def
R62062:62064 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62052:62059 compcert.lib.Integers Make unsigned def
R62065:62072 compcert.lib.Integers Make unsigned def
R62089:62091 compcert.lib.Integers Make add def
R62100:62112 compcert.lib.Integers Make unsigned_repr thm
R62100:62112 compcert.lib.Integers Make unsigned_repr thm
R62130:62154 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R62130:62154 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R62172:62183 compcert.lib.Integers Make same_bits_eq thm
R62172:62183 compcert.lib.Integers Make same_bits_eq thm
R62205:62212 compcert.lib.Integers Make bits_shr thm
R62205:62212 compcert.lib.Integers Make bits_shr thm
R62205:62212 compcert.lib.Integers Make bits_shr thm
R62205:62212 compcert.lib.Integers Make bits_shr thm
R62205:62212 compcert.lib.Integers Make bits_shr thm
R62205:62212 compcert.lib.Integers Make bits_shr thm
R62205:62212 compcert.lib.Integers Make bits_shr thm
R62205:62212 compcert.lib.Integers Make bits_shr thm
R62205:62212 compcert.lib.Integers Make bits_shr thm
R62242:62244 compcert.lib.Coqlib <> zlt def
R62263:62271 compcert.lib.Integers Make zwordsize def
R62248:62250 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62251:62258 compcert.lib.Integers Make unsigned def
R62242:62244 compcert.lib.Coqlib <> zlt def
R62263:62271 compcert.lib.Integers Make zwordsize def
R62248:62250 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62251:62258 compcert.lib.Integers Make unsigned def
R62299:62302 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62326:62326 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62313:62315 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62303:62310 compcert.lib.Integers Make unsigned def
R62316:62323 compcert.lib.Integers Make unsigned def
R62349:62351 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62336:62338 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62339:62346 compcert.lib.Integers Make unsigned def
R62352:62359 compcert.lib.Integers Make unsigned def
R62349:62351 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62336:62338 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62339:62346 compcert.lib.Integers Make unsigned def
R62352:62359 compcert.lib.Integers Make unsigned def
R62299:62302 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62326:62326 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62313:62315 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62303:62310 compcert.lib.Integers Make unsigned def
R62316:62323 compcert.lib.Integers Make unsigned def
R62391:62399 compcert.lib.Coqlib <> zlt_false thm
R62405:62407 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62408:62415 compcert.lib.Integers Make unsigned def
R62418:62420 compcert.lib.Integers Make add def
R62391:62399 compcert.lib.Coqlib <> zlt_false thm
R62405:62407 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62408:62415 compcert.lib.Integers Make unsigned def
R62418:62420 compcert.lib.Integers Make add def
R62391:62399 compcert.lib.Coqlib <> zlt_false thm
R62405:62407 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62408:62415 compcert.lib.Integers Make unsigned def
R62418:62420 compcert.lib.Integers Make add def
R62391:62399 compcert.lib.Coqlib <> zlt_false thm
R62405:62407 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62408:62415 compcert.lib.Integers Make unsigned def
R62418:62420 compcert.lib.Integers Make add def
R62442:62444 compcert.lib.Coqlib <> zlt def
R62475:62483 compcert.lib.Integers Make zwordsize def
R62460:62462 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62456:62458 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R62447:62455 compcert.lib.Integers Make zwordsize def
R62463:62470 compcert.lib.Integers Make unsigned def
R62442:62444 compcert.lib.Coqlib <> zlt def
R62475:62483 compcert.lib.Integers Make zwordsize def
R62460:62462 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62456:62458 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R62447:62455 compcert.lib.Integers Make zwordsize def
R62463:62470 compcert.lib.Integers Make unsigned def
R62515:62517 compcert.lib.Coqlib <> zlt def
R62536:62544 compcert.lib.Integers Make zwordsize def
R62521:62523 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62524:62531 compcert.lib.Integers Make unsigned def
R62515:62517 compcert.lib.Coqlib <> zlt def
R62536:62544 compcert.lib.Integers Make zwordsize def
R62521:62523 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62524:62531 compcert.lib.Integers Make unsigned def
prf 62569:62580 Make and_shr_shru
R62625:62627 Coq.Init.Logic <> :type_scope:x_'='_x not
R62601:62603 compcert.lib.Integers Make and def
R62616:62619 compcert.lib.Integers Make shru def
R62623:62623 compcert.lib.Integers <> z var
R62621:62621 compcert.lib.Integers <> y var
R62606:62608 compcert.lib.Integers Make shr def
R62612:62612 compcert.lib.Integers <> z var
R62610:62610 compcert.lib.Integers <> x var
R62628:62631 compcert.lib.Integers Make shru def
R62643:62643 compcert.lib.Integers <> z var
R62634:62636 compcert.lib.Integers Make and def
R62640:62640 compcert.lib.Integers <> y var
R62638:62638 compcert.lib.Integers <> x var
R62669:62680 compcert.lib.Integers Make same_bits_eq thm
R62669:62680 compcert.lib.Integers Make same_bits_eq thm
R62701:62708 compcert.lib.Integers Make bits_and thm
R62701:62708 compcert.lib.Integers Make bits_and thm
R62701:62708 compcert.lib.Integers Make bits_and thm
R62701:62708 compcert.lib.Integers Make bits_and thm
R62725:62732 compcert.lib.Integers Make bits_shr thm
R62725:62732 compcert.lib.Integers Make bits_shr thm
R62725:62732 compcert.lib.Integers Make bits_shr thm
R62725:62732 compcert.lib.Integers Make bits_shr thm
R62750:62758 compcert.lib.Integers Make bits_shru thm
R62750:62758 compcert.lib.Integers Make bits_shru thm
R62750:62758 compcert.lib.Integers Make bits_shru thm
R62750:62758 compcert.lib.Integers Make bits_shru thm
R62750:62758 compcert.lib.Integers Make bits_shru thm
R62750:62758 compcert.lib.Integers Make bits_shru thm
R62750:62758 compcert.lib.Integers Make bits_shru thm
R62779:62781 compcert.lib.Coqlib <> zlt def
R62800:62808 compcert.lib.Integers Make zwordsize def
R62785:62787 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62788:62795 compcert.lib.Integers Make unsigned def
R62779:62781 compcert.lib.Coqlib <> zlt def
R62800:62808 compcert.lib.Integers Make zwordsize def
R62785:62787 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62788:62795 compcert.lib.Integers Make unsigned def
R62824:62831 compcert.lib.Integers Make bits_and thm
R62824:62831 compcert.lib.Integers Make bits_and thm
R62824:62831 compcert.lib.Integers Make bits_and thm
R62824:62831 compcert.lib.Integers Make bits_and thm
R62852:62865 compcert.lib.Integers Make unsigned_range thm
R62852:62865 compcert.lib.Integers Make unsigned_range thm
R62888:62899 Coq.Bool.Bool <> andb_false_r thm
R62888:62899 Coq.Bool.Bool <> andb_false_r thm
prf 62916:62931 Make shr_and_shru_and
R62972:62977 Coq.Init.Logic <> :type_scope:x_'->'_x not
R62993:62995 Coq.Init.Logic <> :type_scope:x_'='_x not
R62978:62980 compcert.lib.Integers Make and def
R62992:62992 compcert.lib.Integers <> z var
R62983:62985 compcert.lib.Integers Make shr def
R62989:62989 compcert.lib.Integers <> y var
R62987:62987 compcert.lib.Integers <> x var
R62996:62998 compcert.lib.Integers Make and def
R63011:63011 compcert.lib.Integers <> z var
R63001:63004 compcert.lib.Integers Make shru def
R63008:63008 compcert.lib.Integers <> y var
R63006:63006 compcert.lib.Integers <> x var
R62968:62970 Coq.Init.Logic <> :type_scope:x_'='_x not
R62952:62955 compcert.lib.Integers Make shru def
R62967:62967 compcert.lib.Integers <> y var
R62958:62960 compcert.lib.Integers Make shl def
R62964:62964 compcert.lib.Integers <> y var
R62962:62962 compcert.lib.Integers <> z var
R62971:62971 compcert.lib.Integers <> z var
R63057:63064 compcert.lib.Integers Make and_shru thm
R63057:63064 compcert.lib.Integers Make and_shru thm
R63057:63064 compcert.lib.Integers Make and_shru thm
R63075:63086 compcert.lib.Integers Make and_shr_shru thm
R63075:63086 compcert.lib.Integers Make and_shr_shru thm
R63075:63086 compcert.lib.Integers Make and_shr_shru thm
prf 63109:63120 Make shru_lt_zero
R63166:63168 Coq.Init.Logic <> :type_scope:x_'='_x not
R63137:63140 compcert.lib.Integers Make shru def
R63145:63148 compcert.lib.Integers Make repr def
R63160:63162 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R63151:63159 compcert.lib.Integers Make zwordsize def
R63142:63142 compcert.lib.Integers <> x var
R63172:63173 compcert.lib.Integers Make lt def
R63177:63180 compcert.lib.Integers Make zero def
R63175:63175 compcert.lib.Integers <> x var
R63196:63199 compcert.lib.Integers Make zero def
R63187:63189 compcert.lib.Integers Make one def
R63225:63236 compcert.lib.Integers Make same_bits_eq thm
R63225:63236 compcert.lib.Integers Make same_bits_eq thm
R63257:63265 compcert.lib.Integers Make bits_shru thm
R63257:63265 compcert.lib.Integers Make bits_shru thm
R63257:63265 compcert.lib.Integers Make bits_shru thm
R63257:63265 compcert.lib.Integers Make bits_shru thm
R63284:63296 compcert.lib.Integers Make unsigned_repr thm
R63284:63296 compcert.lib.Integers Make unsigned_repr thm
R63284:63296 compcert.lib.Integers Make unsigned_repr thm
R63284:63296 compcert.lib.Integers Make unsigned_repr thm
R63311:63313 compcert.lib.Coqlib <> zeq def
R63311:63313 compcert.lib.Coqlib <> zeq def
R63340:63348 Coq.ZArith.BinInt <> Zplus_0_l syndef
R63340:63348 Coq.ZArith.BinInt <> Zplus_0_l syndef
R63340:63348 Coq.ZArith.BinInt <> Zplus_0_l syndef
R63359:63366 compcert.lib.Coqlib <> zlt_true thm
R63359:63366 compcert.lib.Coqlib <> zlt_true thm
R63359:63366 compcert.lib.Coqlib <> zlt_true thm
R63359:63366 compcert.lib.Coqlib <> zlt_true thm
R63379:63398 compcert.lib.Integers Make sign_bit_of_unsigned thm
R63379:63398 compcert.lib.Integers Make sign_bit_of_unsigned thm
R63379:63398 compcert.lib.Integers Make sign_bit_of_unsigned thm
R63410:63411 compcert.lib.Integers Make lt def
R63422:63432 compcert.lib.Integers Make signed_zero thm
R63422:63432 compcert.lib.Integers Make signed_zero thm
R63422:63432 compcert.lib.Integers Make signed_zero thm
R63442:63447 compcert.lib.Integers Make signed def
R63462:63464 compcert.lib.Coqlib <> zlt def
R63479:63490 compcert.lib.Integers Make half_modulus def
R63467:63474 compcert.lib.Integers Make unsigned def
R63462:63464 compcert.lib.Coqlib <> zlt def
R63479:63490 compcert.lib.Integers Make half_modulus def
R63467:63474 compcert.lib.Integers Make unsigned def
R63504:63512 compcert.lib.Coqlib <> zlt_false thm
R63504:63512 compcert.lib.Coqlib <> zlt_false thm
R63504:63512 compcert.lib.Coqlib <> zlt_false thm
R63504:63512 compcert.lib.Coqlib <> zlt_false thm
R63533:63546 compcert.lib.Integers Make unsigned_range thm
R63533:63546 compcert.lib.Integers Make unsigned_range thm
R63569:63576 compcert.lib.Coqlib <> zlt_true thm
R63569:63576 compcert.lib.Coqlib <> zlt_true thm
R63569:63576 compcert.lib.Coqlib <> zlt_true thm
R63569:63576 compcert.lib.Coqlib <> zlt_true thm
R63586:63588 compcert.lib.Integers Make one def
R63599:63610 compcert.lib.Integers Make testbit_repr thm
R63599:63610 compcert.lib.Integers Make testbit_repr thm
R63599:63610 compcert.lib.Integers Make testbit_repr thm
R63599:63610 compcert.lib.Integers Make testbit_repr thm
R63633:63646 compcert.lib.Integers Make unsigned_range thm
R63633:63646 compcert.lib.Integers Make unsigned_range thm
R63678:63686 compcert.lib.Coqlib <> zlt_false thm
R63678:63686 compcert.lib.Coqlib <> zlt_false thm
R63678:63686 compcert.lib.Coqlib <> zlt_false thm
R63678:63686 compcert.lib.Coqlib <> zlt_false thm
R63698:63704 compcert.lib.Integers Make testbit def
R63715:63725 compcert.lib.Integers Make Ztestbit_eq thm
R63715:63725 compcert.lib.Integers Make Ztestbit_eq thm
R63715:63725 compcert.lib.Integers Make Ztestbit_eq thm
R63715:63725 compcert.lib.Integers Make Ztestbit_eq thm
R63736:63744 compcert.lib.Coqlib <> zeq_false thm
R63736:63744 compcert.lib.Coqlib <> zeq_false thm
R63736:63744 compcert.lib.Coqlib <> zeq_false thm
R63736:63744 compcert.lib.Coqlib <> zeq_false thm
R63759:63760 compcert.lib.Integers Make lt def
R63764:63767 compcert.lib.Integers Make zero def
R63759:63760 compcert.lib.Integers Make lt def
R63764:63767 compcert.lib.Integers Make zero def
R63781:63792 compcert.lib.Integers Make unsigned_one thm
R63781:63792 compcert.lib.Integers Make unsigned_one thm
R63781:63792 compcert.lib.Integers Make unsigned_one thm
R63817:63829 Coq.ZArith.BinInt Z testbit_0_l thm
R63817:63829 Coq.ZArith.BinInt Z testbit_0_l thm
R63817:63829 Coq.ZArith.BinInt Z testbit_0_l thm
R63848:63860 compcert.lib.Integers Make unsigned_zero thm
R63848:63860 compcert.lib.Integers Make unsigned_zero thm
R63848:63860 compcert.lib.Integers Make unsigned_zero thm
R63885:63897 Coq.ZArith.BinInt Z testbit_0_l thm
R63885:63897 Coq.ZArith.BinInt Z testbit_0_l thm
R63885:63897 Coq.ZArith.BinInt Z testbit_0_l thm
R63941:63961 compcert.lib.Integers Make wordsize_max_unsigned thm
R63941:63961 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 63985:63995 Make shr_lt_zero
R64040:64042 Coq.Init.Logic <> :type_scope:x_'='_x not
R64012:64014 compcert.lib.Integers Make shr def
R64019:64022 compcert.lib.Integers Make repr def
R64034:64036 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R64025:64033 compcert.lib.Integers Make zwordsize def
R64016:64016 compcert.lib.Integers <> x var
R64046:64047 compcert.lib.Integers Make lt def
R64051:64054 compcert.lib.Integers Make zero def
R64049:64049 compcert.lib.Integers <> x var
R64071:64074 compcert.lib.Integers Make zero def
R64061:64064 compcert.lib.Integers Make mone def
R64100:64111 compcert.lib.Integers Make same_bits_eq thm
R64100:64111 compcert.lib.Integers Make same_bits_eq thm
R64132:64139 compcert.lib.Integers Make bits_shr thm
R64132:64139 compcert.lib.Integers Make bits_shr thm
R64132:64139 compcert.lib.Integers Make bits_shr thm
R64132:64139 compcert.lib.Integers Make bits_shr thm
R64158:64170 compcert.lib.Integers Make unsigned_repr thm
R64158:64170 compcert.lib.Integers Make unsigned_repr thm
R64158:64170 compcert.lib.Integers Make unsigned_repr thm
R64158:64170 compcert.lib.Integers Make unsigned_repr thm
R64189:64195 compcert.lib.Integers Make testbit def
R64209:64211 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R64200:64208 compcert.lib.Integers Make zwordsize def
R64189:64195 compcert.lib.Integers Make testbit def
R64209:64211 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R64200:64208 compcert.lib.Integers Make zwordsize def
R64238:64240 compcert.lib.Coqlib <> zlt def
R64264:64272 compcert.lib.Integers Make zwordsize def
R64244:64247 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R64261:64261 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R64257:64259 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R64248:64256 compcert.lib.Integers Make zwordsize def
R64238:64240 compcert.lib.Coqlib <> zlt def
R64264:64272 compcert.lib.Integers Make zwordsize def
R64244:64247 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R64261:64261 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R64257:64259 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R64248:64256 compcert.lib.Integers Make zwordsize def
R64293:64312 compcert.lib.Integers Make sign_bit_of_unsigned thm
R64293:64312 compcert.lib.Integers Make sign_bit_of_unsigned thm
R64293:64312 compcert.lib.Integers Make sign_bit_of_unsigned thm
R64324:64325 compcert.lib.Integers Make lt def
R64336:64346 compcert.lib.Integers Make signed_zero thm
R64336:64346 compcert.lib.Integers Make signed_zero thm
R64336:64346 compcert.lib.Integers Make signed_zero thm
R64356:64361 compcert.lib.Integers Make signed def
R64376:64378 compcert.lib.Coqlib <> zlt def
R64393:64404 compcert.lib.Integers Make half_modulus def
R64381:64388 compcert.lib.Integers Make unsigned def
R64376:64378 compcert.lib.Coqlib <> zlt def
R64393:64404 compcert.lib.Integers Make half_modulus def
R64381:64388 compcert.lib.Integers Make unsigned def
R64418:64426 compcert.lib.Coqlib <> zlt_false thm
R64418:64426 compcert.lib.Coqlib <> zlt_false thm
R64418:64426 compcert.lib.Coqlib <> zlt_false thm
R64418:64426 compcert.lib.Coqlib <> zlt_false thm
R64437:64445 compcert.lib.Integers Make bits_zero thm
R64437:64445 compcert.lib.Integers Make bits_zero thm
R64437:64445 compcert.lib.Integers Make bits_zero thm
R64466:64479 compcert.lib.Integers Make unsigned_range thm
R64466:64479 compcert.lib.Integers Make unsigned_range thm
R64502:64509 compcert.lib.Coqlib <> zlt_true thm
R64502:64509 compcert.lib.Coqlib <> zlt_true thm
R64502:64509 compcert.lib.Coqlib <> zlt_true thm
R64502:64509 compcert.lib.Coqlib <> zlt_true thm
R64520:64528 compcert.lib.Integers Make bits_mone thm
R64520:64528 compcert.lib.Integers Make bits_mone thm
R64520:64528 compcert.lib.Integers Make bits_mone thm
R64520:64528 compcert.lib.Integers Make bits_mone thm
R64549:64562 compcert.lib.Integers Make unsigned_range thm
R64549:64562 compcert.lib.Integers Make unsigned_range thm
R64588:64608 compcert.lib.Integers Make wordsize_max_unsigned thm
R64588:64608 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 64665:64672 Make bits_rol
R64711:64716 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64736:64738 Coq.Init.Logic <> :type_scope:x_'='_x not
R64717:64723 compcert.lib.Integers Make testbit def
R64735:64735 compcert.lib.Integers <> i var
R64726:64728 compcert.lib.Integers Make rol def
R64732:64732 compcert.lib.Integers <> y var
R64730:64730 compcert.lib.Integers <> x var
R64739:64745 compcert.lib.Integers Make testbit def
R64750:64750 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R64765:64770 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R64752:64754 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R64751:64751 compcert.lib.Integers <> i var
R64755:64762 compcert.lib.Integers Make unsigned def
R64764:64764 compcert.lib.Integers <> y var
R64771:64779 compcert.lib.Integers Make zwordsize def
R64747:64747 compcert.lib.Integers <> x var
R64694:64697 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R64699:64701 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R64698:64698 compcert.lib.Integers <> i var
R64698:64698 compcert.lib.Integers <> i var
R64702:64710 compcert.lib.Integers Make zwordsize def
R64807:64809 compcert.lib.Integers Make rol def
R64823:64834 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R64849:64857 compcert.lib.Integers Make zwordsize def
R64837:64844 compcert.lib.Integers Make unsigned def
R64823:64834 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R64849:64857 compcert.lib.Integers Make zwordsize def
R64837:64844 compcert.lib.Integers Make unsigned def
R64867:64878 compcert.lib.Integers Make wordsize_pos thm
R64867:64878 compcert.lib.Integers Make wordsize_pos thm
R64903:64907 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R64893:64900 compcert.lib.Integers Make unsigned def
R64908:64916 compcert.lib.Integers Make zwordsize def
R64903:64907 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R64893:64900 compcert.lib.Integers Make unsigned def
R64908:64916 compcert.lib.Integers Make zwordsize def
R64940:64942 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R64930:64937 compcert.lib.Integers Make unsigned def
R64943:64951 compcert.lib.Integers Make zwordsize def
R64940:64942 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R64930:64937 compcert.lib.Integers Make unsigned def
R64943:64951 compcert.lib.Integers Make zwordsize def
R64979:64986 Coq.ZArith.Zdiv <> Z_mod_lt thm
R65001:65009 compcert.lib.Integers Make zwordsize def
R64989:64996 compcert.lib.Integers Make unsigned def
R64979:64986 Coq.ZArith.Zdiv <> Z_mod_lt thm
R65001:65009 compcert.lib.Integers Make zwordsize def
R64989:64996 compcert.lib.Integers Make unsigned def
R65019:65030 compcert.lib.Integers Make wordsize_pos thm
R65019:65030 compcert.lib.Integers Make wordsize_pos thm
R65067:65078 compcert.lib.Integers Make testbit_repr thm
R65067:65078 compcert.lib.Integers Make testbit_repr thm
R65067:65078 compcert.lib.Integers Make testbit_repr thm
R65067:65078 compcert.lib.Integers Make testbit_repr thm
R65097:65106 Coq.ZArith.BinInt Z lor_spec thm
R65097:65106 Coq.ZArith.BinInt Z lor_spec thm
R65097:65106 Coq.ZArith.BinInt Z lor_spec thm
R65117:65129 Coq.ZArith.BinInt Z shiftr_spec thm
R65117:65129 Coq.ZArith.BinInt Z shiftr_spec thm
R65117:65129 Coq.ZArith.BinInt Z shiftr_spec thm
R65117:65129 Coq.ZArith.BinInt Z shiftr_spec thm
R65154:65156 compcert.lib.Coqlib <> zlt def
R65154:65156 compcert.lib.Coqlib <> zlt def
R65176:65192 Coq.ZArith.BinInt Z shiftl_spec_low thm
R65176:65192 Coq.ZArith.BinInt Z shiftl_spec_low thm
R65176:65192 Coq.ZArith.BinInt Z shiftl_spec_low thm
R65176:65192 Coq.ZArith.BinInt Z shiftl_spec_low thm
R65219:65225 compcert.lib.Integers Make testbit def
R65277:65279 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65275:65275 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R65257:65267 compcert.lib.Coqlib <> Zmod_unique thm
R65277:65279 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65275:65275 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R65257:65267 compcert.lib.Coqlib <> Zmod_unique thm
R65329:65346 Coq.ZArith.BinInt Z shiftl_spec_high thm
R65329:65346 Coq.ZArith.BinInt Z shiftl_spec_high thm
R65329:65346 Coq.ZArith.BinInt Z shiftl_spec_high thm
R65329:65346 Coq.ZArith.BinInt Z shiftl_spec_high thm
R65329:65346 Coq.ZArith.BinInt Z shiftl_spec_high thm
R65359:65365 compcert.lib.Integers Make testbit def
R65371:65374 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65388:65388 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65384:65386 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65375:65383 compcert.lib.Integers Make zwordsize def
R65359:65365 compcert.lib.Integers Make testbit def
R65371:65374 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65388:65388 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65384:65386 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65375:65383 compcert.lib.Integers Make zwordsize def
R65405:65414 compcert.lib.Integers Make bits_above thm
R65405:65414 compcert.lib.Integers Make bits_above thm
R65405:65414 compcert.lib.Integers Make bits_above thm
R65405:65414 compcert.lib.Integers Make bits_above thm
R65425:65435 Coq.Bool.Bool <> orb_false_r thm
R65425:65435 Coq.Bool.Bool <> orb_false_r thm
R65425:65435 Coq.Bool.Bool <> orb_false_r thm
R65448:65454 compcert.lib.Integers Make testbit def
R65460:65462 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65448:65454 compcert.lib.Integers Make testbit def
R65460:65462 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65515:65515 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R65497:65507 compcert.lib.Coqlib <> Zmod_unique thm
R65515:65515 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R65497:65507 compcert.lib.Coqlib <> Zmod_unique thm
prf 65586:65593 Make bits_ror
R65632:65637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65657:65659 Coq.Init.Logic <> :type_scope:x_'='_x not
R65638:65644 compcert.lib.Integers Make testbit def
R65656:65656 compcert.lib.Integers <> i var
R65647:65649 compcert.lib.Integers Make ror def
R65653:65653 compcert.lib.Integers <> y var
R65651:65651 compcert.lib.Integers <> x var
R65660:65666 compcert.lib.Integers Make testbit def
R65671:65671 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R65686:65691 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R65673:65675 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65672:65672 compcert.lib.Integers <> i var
R65676:65683 compcert.lib.Integers Make unsigned def
R65685:65685 compcert.lib.Integers <> y var
R65692:65700 compcert.lib.Integers Make zwordsize def
R65668:65668 compcert.lib.Integers <> x var
R65615:65618 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R65620:65622 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R65619:65619 compcert.lib.Integers <> i var
R65619:65619 compcert.lib.Integers <> i var
R65623:65631 compcert.lib.Integers Make zwordsize def
R65728:65730 compcert.lib.Integers Make ror def
R65744:65755 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R65770:65778 compcert.lib.Integers Make zwordsize def
R65758:65765 compcert.lib.Integers Make unsigned def
R65744:65755 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R65770:65778 compcert.lib.Integers Make zwordsize def
R65758:65765 compcert.lib.Integers Make unsigned def
R65788:65799 compcert.lib.Integers Make wordsize_pos thm
R65788:65799 compcert.lib.Integers Make wordsize_pos thm
R65824:65828 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R65814:65821 compcert.lib.Integers Make unsigned def
R65829:65837 compcert.lib.Integers Make zwordsize def
R65824:65828 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R65814:65821 compcert.lib.Integers Make unsigned def
R65829:65837 compcert.lib.Integers Make zwordsize def
R65861:65863 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R65851:65858 compcert.lib.Integers Make unsigned def
R65864:65872 compcert.lib.Integers Make zwordsize def
R65861:65863 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R65851:65858 compcert.lib.Integers Make unsigned def
R65864:65872 compcert.lib.Integers Make zwordsize def
R65900:65907 Coq.ZArith.Zdiv <> Z_mod_lt thm
R65922:65930 compcert.lib.Integers Make zwordsize def
R65910:65917 compcert.lib.Integers Make unsigned def
R65900:65907 Coq.ZArith.Zdiv <> Z_mod_lt thm
R65922:65930 compcert.lib.Integers Make zwordsize def
R65910:65917 compcert.lib.Integers Make unsigned def
R65940:65951 compcert.lib.Integers Make wordsize_pos thm
R65940:65951 compcert.lib.Integers Make wordsize_pos thm
R65988:65999 compcert.lib.Integers Make testbit_repr thm
R65988:65999 compcert.lib.Integers Make testbit_repr thm
R65988:65999 compcert.lib.Integers Make testbit_repr thm
R65988:65999 compcert.lib.Integers Make testbit_repr thm
R66018:66027 Coq.ZArith.BinInt Z lor_spec thm
R66018:66027 Coq.ZArith.BinInt Z lor_spec thm
R66018:66027 Coq.ZArith.BinInt Z lor_spec thm
R66038:66050 Coq.ZArith.BinInt Z shiftr_spec thm
R66038:66050 Coq.ZArith.BinInt Z shiftr_spec thm
R66038:66050 Coq.ZArith.BinInt Z shiftr_spec thm
R66038:66050 Coq.ZArith.BinInt Z shiftr_spec thm
R66075:66077 compcert.lib.Coqlib <> zlt def
R66087:66095 compcert.lib.Integers Make zwordsize def
R66081:66083 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66075:66077 compcert.lib.Coqlib <> zlt def
R66087:66095 compcert.lib.Integers Make zwordsize def
R66081:66083 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66111:66127 Coq.ZArith.BinInt Z shiftl_spec_low thm
R66111:66127 Coq.ZArith.BinInt Z shiftl_spec_low thm
R66111:66127 Coq.ZArith.BinInt Z shiftl_spec_low thm
R66111:66127 Coq.ZArith.BinInt Z shiftl_spec_low thm
R66144:66154 Coq.Bool.Bool <> orb_false_r thm
R66144:66154 Coq.Bool.Bool <> orb_false_r thm
R66144:66154 Coq.Bool.Bool <> orb_false_r thm
R66168:66174 compcert.lib.Integers Make testbit def
R66206:66216 compcert.lib.Coqlib <> Zmod_unique thm
R66206:66216 compcert.lib.Coqlib <> Zmod_unique thm
R66278:66295 Coq.ZArith.BinInt Z shiftl_spec_high thm
R66278:66295 Coq.ZArith.BinInt Z shiftl_spec_high thm
R66278:66295 Coq.ZArith.BinInt Z shiftl_spec_high thm
R66278:66295 Coq.ZArith.BinInt Z shiftl_spec_high thm
R66278:66295 Coq.ZArith.BinInt Z shiftl_spec_high thm
R66308:66314 compcert.lib.Integers Make testbit def
R66320:66322 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66308:66314 compcert.lib.Integers Make testbit def
R66320:66322 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66340:66349 compcert.lib.Integers Make bits_above thm
R66340:66349 compcert.lib.Integers Make bits_above thm
R66340:66349 compcert.lib.Integers Make bits_above thm
R66340:66349 compcert.lib.Integers Make bits_above thm
R66370:66376 compcert.lib.Integers Make testbit def
R66427:66429 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66408:66418 compcert.lib.Coqlib <> Zmod_unique thm
R66427:66429 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66408:66418 compcert.lib.Coqlib <> Zmod_unique thm
R66507:66514 compcert.lib.Integers Make bits_rol thm
R66516:66523 compcert.lib.Integers Make bits_ror thm
prf 66541:66548 Make shl_rolm
R66589:66594 Coq.Init.Logic <> :type_scope:x_'->'_x not
R66602:66604 Coq.Init.Logic <> :type_scope:x_'='_x not
R66595:66597 compcert.lib.Integers Make shl def
R66601:66601 compcert.lib.Integers <> n var
R66599:66599 compcert.lib.Integers <> x var
R66605:66608 compcert.lib.Integers Make rolm def
R66615:66617 compcert.lib.Integers Make shl def
R66624:66624 compcert.lib.Integers <> n var
R66619:66622 compcert.lib.Integers Make mone def
R66612:66612 compcert.lib.Integers <> n var
R66610:66610 compcert.lib.Integers <> x var
R66582:66584 Coq.Init.Logic <> :type_scope:x_'='_x not
R66567:66569 compcert.lib.Integers Make ltu def
R66573:66581 compcert.lib.Integers Make iwordsize def
R66571:66571 compcert.lib.Integers <> n var
R66585:66588 Coq.Init.Datatypes <> true constr
R66657:66663 compcert.lib.Integers Make ltu_inv thm
R66657:66663 compcert.lib.Integers Make ltu_inv thm
R66681:66702 compcert.lib.Integers Make unsigned_repr_wordsize thm
R66681:66702 compcert.lib.Integers Make unsigned_repr_wordsize thm
R66681:66702 compcert.lib.Integers Make unsigned_repr_wordsize thm
R66722:66725 compcert.lib.Integers Make rolm def
R66734:66745 compcert.lib.Integers Make same_bits_eq thm
R66734:66745 compcert.lib.Integers Make same_bits_eq thm
R66766:66773 compcert.lib.Integers Make bits_and thm
R66766:66773 compcert.lib.Integers Make bits_and thm
R66766:66773 compcert.lib.Integers Make bits_and thm
R66766:66773 compcert.lib.Integers Make bits_and thm
R66791:66798 compcert.lib.Integers Make bits_shl thm
R66791:66798 compcert.lib.Integers Make bits_shl thm
R66791:66798 compcert.lib.Integers Make bits_shl thm
R66791:66798 compcert.lib.Integers Make bits_shl thm
R66791:66798 compcert.lib.Integers Make bits_shl thm
R66791:66798 compcert.lib.Integers Make bits_shl thm
R66791:66798 compcert.lib.Integers Make bits_shl thm
R66815:66822 compcert.lib.Integers Make bits_rol thm
R66815:66822 compcert.lib.Integers Make bits_rol thm
R66815:66822 compcert.lib.Integers Make bits_rol thm
R66815:66822 compcert.lib.Integers Make bits_rol thm
R66843:66845 compcert.lib.Coqlib <> zlt def
R66850:66857 compcert.lib.Integers Make unsigned def
R66843:66845 compcert.lib.Coqlib <> zlt def
R66850:66857 compcert.lib.Integers Make unsigned def
R66876:66887 Coq.Bool.Bool <> andb_false_r thm
R66876:66887 Coq.Bool.Bool <> andb_false_r thm
R66876:66887 Coq.Bool.Bool <> andb_false_r thm
R66912:66925 compcert.lib.Integers Make unsigned_range thm
R66912:66925 compcert.lib.Integers Make unsigned_range thm
R66951:66959 compcert.lib.Integers Make bits_mone thm
R66951:66959 compcert.lib.Integers Make bits_mone thm
R66951:66959 compcert.lib.Integers Make bits_mone thm
R66951:66959 compcert.lib.Integers Make bits_mone thm
R66970:66980 Coq.Bool.Bool <> andb_true_r thm
R66970:66980 Coq.Bool.Bool <> andb_true_r thm
R66970:66980 Coq.Bool.Bool <> andb_true_r thm
R67012:67021 compcert.lib.Coqlib <> Zmod_small thm
R67012:67021 compcert.lib.Coqlib <> Zmod_small thm
prf 67056:67064 Make shru_rolm
R67105:67110 Coq.Init.Logic <> :type_scope:x_'->'_x not
R67119:67121 Coq.Init.Logic <> :type_scope:x_'='_x not
R67111:67114 compcert.lib.Integers Make shru def
R67118:67118 compcert.lib.Integers <> n var
R67116:67116 compcert.lib.Integers <> x var
R67122:67125 compcert.lib.Integers Make rolm def
R67148:67151 compcert.lib.Integers Make shru def
R67158:67158 compcert.lib.Integers <> n var
R67153:67156 compcert.lib.Integers Make mone def
R67130:67132 compcert.lib.Integers Make sub def
R67144:67144 compcert.lib.Integers <> n var
R67134:67142 compcert.lib.Integers Make iwordsize def
R67127:67127 compcert.lib.Integers <> x var
R67098:67100 Coq.Init.Logic <> :type_scope:x_'='_x not
R67083:67085 compcert.lib.Integers Make ltu def
R67089:67097 compcert.lib.Integers Make iwordsize def
R67087:67087 compcert.lib.Integers <> n var
R67101:67104 Coq.Init.Datatypes <> true constr
R67191:67197 compcert.lib.Integers Make ltu_inv thm
R67191:67197 compcert.lib.Integers Make ltu_inv thm
R67215:67236 compcert.lib.Integers Make unsigned_repr_wordsize thm
R67215:67236 compcert.lib.Integers Make unsigned_repr_wordsize thm
R67215:67236 compcert.lib.Integers Make unsigned_repr_wordsize thm
R67256:67259 compcert.lib.Integers Make rolm def
R67268:67279 compcert.lib.Integers Make same_bits_eq thm
R67268:67279 compcert.lib.Integers Make same_bits_eq thm
R67300:67307 compcert.lib.Integers Make bits_and thm
R67300:67307 compcert.lib.Integers Make bits_and thm
R67300:67307 compcert.lib.Integers Make bits_and thm
R67300:67307 compcert.lib.Integers Make bits_and thm
R67325:67333 compcert.lib.Integers Make bits_shru thm
R67325:67333 compcert.lib.Integers Make bits_shru thm
R67325:67333 compcert.lib.Integers Make bits_shru thm
R67325:67333 compcert.lib.Integers Make bits_shru thm
R67325:67333 compcert.lib.Integers Make bits_shru thm
R67325:67333 compcert.lib.Integers Make bits_shru thm
R67325:67333 compcert.lib.Integers Make bits_shru thm
R67350:67357 compcert.lib.Integers Make bits_rol thm
R67350:67357 compcert.lib.Integers Make bits_rol thm
R67350:67357 compcert.lib.Integers Make bits_rol thm
R67350:67357 compcert.lib.Integers Make bits_rol thm
R67378:67380 compcert.lib.Coqlib <> zlt def
R67399:67407 compcert.lib.Integers Make zwordsize def
R67384:67386 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67387:67394 compcert.lib.Integers Make unsigned def
R67378:67380 compcert.lib.Coqlib <> zlt def
R67399:67407 compcert.lib.Integers Make zwordsize def
R67384:67386 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67387:67394 compcert.lib.Integers Make unsigned def
R67427:67440 compcert.lib.Integers Make unsigned_range thm
R67427:67440 compcert.lib.Integers Make unsigned_range thm
R67466:67474 compcert.lib.Integers Make bits_mone thm
R67466:67474 compcert.lib.Integers Make bits_mone thm
R67466:67474 compcert.lib.Integers Make bits_mone thm
R67466:67474 compcert.lib.Integers Make bits_mone thm
R67485:67495 Coq.Bool.Bool <> andb_true_r thm
R67485:67495 Coq.Bool.Bool <> andb_true_r thm
R67485:67495 Coq.Bool.Bool <> andb_true_r thm
R67518:67520 compcert.lib.Integers Make sub def
R67531:67543 compcert.lib.Integers Make unsigned_repr thm
R67531:67543 compcert.lib.Integers Make unsigned_repr thm
R67531:67543 compcert.lib.Integers Make unsigned_repr thm
R67531:67543 compcert.lib.Integers Make unsigned_repr thm
R67554:67575 compcert.lib.Integers Make unsigned_repr_wordsize thm
R67554:67575 compcert.lib.Integers Make unsigned_repr_wordsize thm
R67554:67575 compcert.lib.Integers Make unsigned_repr_wordsize thm
R67598:67608 compcert.lib.Coqlib <> Zmod_unique thm
R67598:67608 compcert.lib.Coqlib <> Zmod_unique thm
R67646:67667 compcert.lib.Integers Make unsigned_repr_wordsize thm
R67646:67667 compcert.lib.Integers Make unsigned_repr_wordsize thm
R67646:67667 compcert.lib.Integers Make unsigned_repr_wordsize thm
R67681:67701 compcert.lib.Integers Make wordsize_max_unsigned thm
R67681:67701 compcert.lib.Integers Make wordsize_max_unsigned thm
R67734:67745 Coq.Bool.Bool <> andb_false_r thm
R67734:67745 Coq.Bool.Bool <> andb_false_r thm
R67734:67745 Coq.Bool.Bool <> andb_false_r thm
prf 67768:67775 Make rol_zero
R67802:67804 Coq.Init.Logic <> :type_scope:x_'='_x not
R67792:67794 compcert.lib.Integers Make rol def
R67798:67801 compcert.lib.Integers Make zero def
R67796:67796 compcert.lib.Integers <> x var
R67805:67805 compcert.lib.Integers <> x var
R67845:67857 compcert.lib.Integers Make unsigned_zero thm
R67845:67857 compcert.lib.Integers Make unsigned_zero thm
R67845:67857 compcert.lib.Integers Make unsigned_zero thm
R67868:67877 Coq.ZArith.BinInt <> Zminus_0_r syndef
R67868:67877 Coq.ZArith.BinInt <> Zminus_0_r syndef
R67868:67877 Coq.ZArith.BinInt <> Zminus_0_r syndef
R67888:67897 compcert.lib.Coqlib <> Zmod_small thm
R67888:67897 compcert.lib.Coqlib <> Zmod_small thm
prf 67918:67934 Make bitwise_binop_rol
R67960:67960 Coq.Init.Logic <> :type_scope:x_'->'_x not
R68047:68053 Coq.Init.Logic <> :type_scope:x_'->'_x not
R68067:68069 Coq.Init.Logic <> :type_scope:x_'='_x not
R68054:68056 compcert.lib.Integers Make rol def
R68066:68066 compcert.lib.Integers <> n var
R68059:68059 compcert.lib.Integers <> f var
R68063:68063 compcert.lib.Integers <> y var
R68061:68061 compcert.lib.Integers <> x var
R68070:68070 compcert.lib.Integers <> f var
R68083:68085 compcert.lib.Integers Make rol def
R68089:68089 compcert.lib.Integers <> n var
R68087:68087 compcert.lib.Integers <> y var
R68073:68075 compcert.lib.Integers Make rol def
R68079:68079 compcert.lib.Integers <> n var
R68077:68077 compcert.lib.Integers <> x var
R67993:67996 Coq.Init.Logic <> :type_scope:x_'->'_x not
R68014:68016 Coq.Init.Logic <> :type_scope:x_'='_x not
R67997:68003 compcert.lib.Integers Make testbit def
R68013:68013 compcert.lib.Integers <> i var
R68006:68006 compcert.lib.Integers <> f var
R68010:68010 compcert.lib.Integers <> y var
R68008:68008 compcert.lib.Integers <> x var
R68017:68018 compcert.lib.Integers <> f' var
R68035:68041 compcert.lib.Integers Make testbit def
R68045:68045 compcert.lib.Integers <> i var
R68043:68043 compcert.lib.Integers <> y var
R68021:68027 compcert.lib.Integers Make testbit def
R68031:68031 compcert.lib.Integers <> i var
R68029:68029 compcert.lib.Integers <> x var
R67976:67979 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R67981:67983 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R67980:67980 compcert.lib.Integers <> i var
R67980:67980 compcert.lib.Integers <> i var
R67984:67992 compcert.lib.Integers Make zwordsize def
R68116:68127 compcert.lib.Integers Make same_bits_eq thm
R68116:68127 compcert.lib.Integers Make same_bits_eq thm
R68166:68173 compcert.lib.Integers Make bits_rol thm
R68166:68173 compcert.lib.Integers Make bits_rol thm
R68166:68173 compcert.lib.Integers Make bits_rol thm
R68166:68173 compcert.lib.Integers Make bits_rol thm
R68166:68173 compcert.lib.Integers Make bits_rol thm
R68166:68173 compcert.lib.Integers Make bits_rol thm
R68166:68173 compcert.lib.Integers Make bits_rol thm
R68166:68173 compcert.lib.Integers Make bits_rol thm
R68166:68173 compcert.lib.Integers Make bits_rol thm
R68207:68214 Coq.ZArith.Zdiv <> Z_mod_lt thm
R68207:68214 Coq.ZArith.Zdiv <> Z_mod_lt thm
R68223:68234 compcert.lib.Integers Make wordsize_pos thm
R68223:68234 compcert.lib.Integers Make wordsize_pos thm
prf 68251:68257 Make rol_and
R68293:68295 Coq.Init.Logic <> :type_scope:x_'='_x not
R68278:68280 compcert.lib.Integers Make rol def
R68292:68292 compcert.lib.Integers <> n var
R68283:68285 compcert.lib.Integers Make and def
R68289:68289 compcert.lib.Integers <> y var
R68287:68287 compcert.lib.Integers <> x var
R68296:68298 compcert.lib.Integers Make and def
R68311:68313 compcert.lib.Integers Make rol def
R68317:68317 compcert.lib.Integers <> n var
R68315:68315 compcert.lib.Integers <> y var
R68301:68303 compcert.lib.Integers Make rol def
R68307:68307 compcert.lib.Integers <> n var
R68305:68305 compcert.lib.Integers <> x var
R68367:68370 Coq.Init.Datatypes <> andb def
R68344:68360 compcert.lib.Integers Make bitwise_binop_rol thm
R68367:68370 Coq.Init.Datatypes <> andb def
R68344:68360 compcert.lib.Integers Make bitwise_binop_rol thm
R68379:68386 compcert.lib.Integers Make bits_and thm
R68379:68386 compcert.lib.Integers Make bits_and thm
prf 68403:68408 Make rol_or
R68443:68445 Coq.Init.Logic <> :type_scope:x_'='_x not
R68429:68431 compcert.lib.Integers Make rol def
R68442:68442 compcert.lib.Integers <> n var
R68434:68435 compcert.lib.Integers Make or def
R68439:68439 compcert.lib.Integers <> y var
R68437:68437 compcert.lib.Integers <> x var
R68446:68447 compcert.lib.Integers Make or def
R68460:68462 compcert.lib.Integers Make rol def
R68466:68466 compcert.lib.Integers <> n var
R68464:68464 compcert.lib.Integers <> y var
R68450:68452 compcert.lib.Integers Make rol def
R68456:68456 compcert.lib.Integers <> n var
R68454:68454 compcert.lib.Integers <> x var
R68516:68518 Coq.Init.Datatypes <> orb def
R68493:68509 compcert.lib.Integers Make bitwise_binop_rol thm
R68516:68518 Coq.Init.Datatypes <> orb def
R68493:68509 compcert.lib.Integers Make bitwise_binop_rol thm
R68527:68533 compcert.lib.Integers Make bits_or thm
R68527:68533 compcert.lib.Integers Make bits_or thm
prf 68550:68556 Make rol_xor
R68592:68594 Coq.Init.Logic <> :type_scope:x_'='_x not
R68577:68579 compcert.lib.Integers Make rol def
R68591:68591 compcert.lib.Integers <> n var
R68582:68584 compcert.lib.Integers Make xor def
R68588:68588 compcert.lib.Integers <> y var
R68586:68586 compcert.lib.Integers <> x var
R68595:68597 compcert.lib.Integers Make xor def
R68610:68612 compcert.lib.Integers Make rol def
R68616:68616 compcert.lib.Integers <> n var
R68614:68614 compcert.lib.Integers <> y var
R68600:68602 compcert.lib.Integers Make rol def
R68606:68606 compcert.lib.Integers <> n var
R68604:68604 compcert.lib.Integers <> x var
R68666:68669 Coq.Init.Datatypes <> xorb def
R68643:68659 compcert.lib.Integers Make bitwise_binop_rol thm
R68666:68669 Coq.Init.Datatypes <> xorb def
R68643:68659 compcert.lib.Integers Make bitwise_binop_rol thm
R68678:68685 compcert.lib.Integers Make bits_xor thm
R68678:68685 compcert.lib.Integers Make bits_xor thm
prf 68702:68708 Make rol_rol
R68754:68759 Coq.Init.Logic <> :type_scope:x_'->'_x not
R68775:68777 Coq.Init.Logic <> :type_scope:x_'='_x not
R68760:68762 compcert.lib.Integers Make rol def
R68774:68774 compcert.lib.Integers <> m var
R68765:68767 compcert.lib.Integers Make rol def
R68771:68771 compcert.lib.Integers <> n var
R68769:68769 compcert.lib.Integers <> x var
R68778:68780 compcert.lib.Integers Make rol def
R68785:68788 compcert.lib.Integers Make modu def
R68800:68808 compcert.lib.Integers Make iwordsize def
R68791:68793 compcert.lib.Integers Make add def
R68797:68797 compcert.lib.Integers <> m var
R68795:68795 compcert.lib.Integers <> n var
R68782:68782 compcert.lib.Integers <> x var
R68729:68735 Coq.ZArith.Znumtheory <> Zdivide syndef
R68747:68753 compcert.lib.Integers Make modulus def
R68737:68745 compcert.lib.Integers Make zwordsize def
R68847:68858 compcert.lib.Integers Make eqmod_mod_eq thm
R68847:68858 compcert.lib.Integers Make eqmod_mod_eq thm
R68867:68878 compcert.lib.Integers Make wordsize_pos thm
R68867:68878 compcert.lib.Integers Make wordsize_pos thm
R68893:68900 compcert.lib.Integers Make unsigned def
R68916:68923 compcert.lib.Integers Make unsigned def
R68893:68900 compcert.lib.Integers Make unsigned def
R68916:68923 compcert.lib.Integers Make unsigned def
R68960:68962 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R68956:68958 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R68937:68947 compcert.lib.Integers Make eqmod_trans thm
R68960:68962 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R68956:68958 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R68937:68947 compcert.lib.Integers Make eqmod_trans thm
R68975:68983 compcert.lib.Integers Make eqmod_sub thm
R68975:68983 compcert.lib.Integers Make eqmod_sub thm
R68994:69002 compcert.lib.Integers Make eqmod_sym thm
R68994:69002 compcert.lib.Integers Make eqmod_sym thm
R69011:69019 compcert.lib.Integers Make eqmod_mod thm
R69011:69019 compcert.lib.Integers Make eqmod_mod thm
R69028:69039 compcert.lib.Integers Make wordsize_pos thm
R69028:69039 compcert.lib.Integers Make wordsize_pos thm
R69050:69059 compcert.lib.Integers Make eqmod_refl thm
R69050:69059 compcert.lib.Integers Make eqmod_refl thm
R69078:69080 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69074:69076 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69091:69094 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69100:69100 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69096:69098 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69091:69094 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69100:69100 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69096:69098 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69078:69080 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69074:69076 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69121:69129 compcert.lib.Integers Make eqmod_sub thm
R69121:69129 compcert.lib.Integers Make eqmod_sub thm
R69140:69149 compcert.lib.Integers Make eqmod_refl thm
R69140:69149 compcert.lib.Integers Make eqmod_refl thm
R69178:69181 Coq.ZArith.Zdiv <> Zmod syndef
R69209:69217 compcert.lib.Integers Make zwordsize def
R69194:69196 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69184:69191 compcert.lib.Integers Make unsigned def
R69197:69204 compcert.lib.Integers Make unsigned def
R69160:69170 compcert.lib.Integers Make eqmod_trans thm
R69178:69181 Coq.ZArith.Zdiv <> Zmod syndef
R69209:69217 compcert.lib.Integers Make zwordsize def
R69194:69196 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69184:69191 compcert.lib.Integers Make unsigned def
R69197:69204 compcert.lib.Integers Make unsigned def
R69160:69170 compcert.lib.Integers Make eqmod_trans thm
R69233:69235 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69246:69248 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69246:69248 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69233:69235 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69268:69276 compcert.lib.Integers Make eqmod_mod thm
R69268:69276 compcert.lib.Integers Make eqmod_mod thm
R69285:69296 compcert.lib.Integers Make wordsize_pos thm
R69285:69296 compcert.lib.Integers Make wordsize_pos thm
R69308:69311 compcert.lib.Integers Make modu def
R69314:69316 compcert.lib.Integers Make add def
R69343:69364 compcert.lib.Integers Make unsigned_repr_wordsize thm
R69343:69364 compcert.lib.Integers Make unsigned_repr_wordsize thm
R69343:69364 compcert.lib.Integers Make unsigned_repr_wordsize thm
R69387:69391 compcert.lib.Integers Make eqmod def
R69406:69413 compcert.lib.Integers Make unsigned def
R69416:69419 compcert.lib.Integers Make repr def
R69421:69421 compcert.lib.Integers <> a var
R69403:69403 compcert.lib.Integers <> a var
R69393:69401 compcert.lib.Integers Make zwordsize def
R69387:69391 compcert.lib.Integers Make eqmod def
R69406:69413 compcert.lib.Integers Make unsigned def
R69416:69419 compcert.lib.Integers Make repr def
R69421:69421 compcert.lib.Integers <> a var
R69403:69403 compcert.lib.Integers <> a var
R69393:69401 compcert.lib.Integers Make zwordsize def
R69446:69458 compcert.lib.Integers Make eqmod_divides thm
R69446:69458 compcert.lib.Integers Make eqmod_divides thm
R69467:69483 compcert.lib.Integers Make eqm_unsigned_repr thm
R69467:69483 compcert.lib.Integers Make eqm_unsigned_repr thm
R69507:69517 compcert.lib.Integers Make eqmod_trans thm
R69507:69517 compcert.lib.Integers Make eqmod_trans thm
R69541:69551 compcert.lib.Integers Make eqmod_refl2 thm
R69541:69551 compcert.lib.Integers Make eqmod_refl2 thm
R69560:69571 compcert.lib.Integers Make eqmod_mod_eq thm
R69560:69571 compcert.lib.Integers Make eqmod_mod_eq thm
R69580:69591 compcert.lib.Integers Make wordsize_pos thm
R69580:69591 compcert.lib.Integers Make wordsize_pos thm
R69608:69615 Coq.ZArith.Zdiv <> Z_mod_lt thm
R69608:69615 Coq.ZArith.Zdiv <> Z_mod_lt thm
R69624:69635 compcert.lib.Integers Make wordsize_pos thm
R69624:69635 compcert.lib.Integers Make wordsize_pos thm
prf 69652:69660 Make rolm_zero
R69692:69694 Coq.Init.Logic <> :type_scope:x_'='_x not
R69679:69682 compcert.lib.Integers Make rolm def
R69691:69691 compcert.lib.Integers <> m var
R69686:69689 compcert.lib.Integers Make zero def
R69684:69684 compcert.lib.Integers <> x var
R69695:69697 compcert.lib.Integers Make and def
R69701:69701 compcert.lib.Integers <> m var
R69699:69699 compcert.lib.Integers <> x var
R69728:69731 compcert.lib.Integers Make rolm def
R69742:69749 compcert.lib.Integers Make rol_zero thm
R69742:69749 compcert.lib.Integers Make rol_zero thm
R69742:69749 compcert.lib.Integers Make rol_zero thm
prf 69772:69780 Make rolm_rolm
R69834:69839 Coq.Init.Logic <> :type_scope:x_'->'_x not
R69865:69871 Coq.Init.Logic <> :type_scope:x_'='_x not
R69840:69843 compcert.lib.Integers Make rolm def
R69863:69864 compcert.lib.Integers <> m2 var
R69860:69861 compcert.lib.Integers <> n2 var
R69846:69849 compcert.lib.Integers Make rolm def
R69856:69857 compcert.lib.Integers <> m1 var
R69853:69854 compcert.lib.Integers <> n1 var
R69851:69851 compcert.lib.Integers <> x var
R69872:69875 compcert.lib.Integers Make rolm def
R69920:69922 compcert.lib.Integers Make and def
R69936:69937 compcert.lib.Integers <> m2 var
R69925:69927 compcert.lib.Integers Make rol def
R69932:69933 compcert.lib.Integers <> n2 var
R69929:69930 compcert.lib.Integers <> m1 var
R69880:69883 compcert.lib.Integers Make modu def
R69897:69905 compcert.lib.Integers Make iwordsize def
R69886:69888 compcert.lib.Integers Make add def
R69893:69894 compcert.lib.Integers <> n2 var
R69890:69891 compcert.lib.Integers <> n1 var
R69877:69877 compcert.lib.Integers <> x var
R69809:69815 Coq.ZArith.Znumtheory <> Zdivide syndef
R69827:69833 compcert.lib.Integers Make modulus def
R69817:69825 compcert.lib.Integers Make zwordsize def
R69967:69970 compcert.lib.Integers Make rolm def
R69981:69987 compcert.lib.Integers Make rol_and thm
R69981:69987 compcert.lib.Integers Make rol_and thm
R69981:69987 compcert.lib.Integers Make rol_and thm
R69998:70006 compcert.lib.Integers Make and_assoc thm
R69998:70006 compcert.lib.Integers Make and_assoc thm
R69998:70006 compcert.lib.Integers Make and_assoc thm
R70019:70025 compcert.lib.Integers Make rol_rol thm
R70019:70025 compcert.lib.Integers Make rol_rol thm
R70019:70025 compcert.lib.Integers Make rol_rol thm
R70019:70025 compcert.lib.Integers Make rol_rol thm
prf 70061:70067 Make or_rolm
R70122:70124 Coq.Init.Logic <> :type_scope:x_'='_x not
R70092:70093 compcert.lib.Integers Make or def
R70110:70113 compcert.lib.Integers Make rolm def
R70119:70120 compcert.lib.Integers <> m2 var
R70117:70117 compcert.lib.Integers <> n var
R70115:70115 compcert.lib.Integers <> x var
R70096:70099 compcert.lib.Integers Make rolm def
R70105:70106 compcert.lib.Integers <> m1 var
R70103:70103 compcert.lib.Integers <> n var
R70101:70101 compcert.lib.Integers <> x var
R70125:70128 compcert.lib.Integers Make rolm def
R70135:70136 compcert.lib.Integers Make or def
R70141:70142 compcert.lib.Integers <> m2 var
R70138:70139 compcert.lib.Integers <> m1 var
R70132:70132 compcert.lib.Integers <> n var
R70130:70130 compcert.lib.Integers <> x var
R70170:70173 compcert.lib.Integers Make rolm def
R70192:70205 compcert.lib.Integers Make and_or_distrib thm
R70192:70205 compcert.lib.Integers Make and_or_distrib thm
prf 70222:70228 Make ror_rol
R70269:70274 Coq.Init.Logic <> :type_scope:x_'->'_x not
R70282:70284 Coq.Init.Logic <> :type_scope:x_'='_x not
R70275:70277 compcert.lib.Integers Make ror def
R70281:70281 compcert.lib.Integers <> y var
R70279:70279 compcert.lib.Integers <> x var
R70285:70287 compcert.lib.Integers Make rol def
R70292:70294 compcert.lib.Integers Make sub def
R70306:70306 compcert.lib.Integers <> y var
R70296:70304 compcert.lib.Integers Make iwordsize def
R70289:70289 compcert.lib.Integers <> x var
R70262:70264 Coq.Init.Logic <> :type_scope:x_'='_x not
R70247:70249 compcert.lib.Integers Make ltu def
R70253:70261 compcert.lib.Integers Make iwordsize def
R70251:70251 compcert.lib.Integers <> y var
R70265:70268 Coq.Init.Datatypes <> true constr
R70341:70357 compcert.lib.Integers Make ltu_iwordsize_inv thm
R70341:70357 compcert.lib.Integers Make ltu_iwordsize_inv thm
R70381:70392 compcert.lib.Integers Make same_bits_eq thm
R70381:70392 compcert.lib.Integers Make same_bits_eq thm
R70413:70420 compcert.lib.Integers Make bits_ror thm
R70413:70420 compcert.lib.Integers Make bits_ror thm
R70413:70420 compcert.lib.Integers Make bits_ror thm
R70413:70420 compcert.lib.Integers Make bits_ror thm
R70437:70444 compcert.lib.Integers Make bits_rol thm
R70437:70444 compcert.lib.Integers Make bits_rol thm
R70437:70444 compcert.lib.Integers Make bits_rol thm
R70437:70444 compcert.lib.Integers Make bits_rol thm
R70471:70473 compcert.lib.Integers Make sub def
R70484:70496 compcert.lib.Integers Make unsigned_repr thm
R70484:70496 compcert.lib.Integers Make unsigned_repr thm
R70484:70496 compcert.lib.Integers Make unsigned_repr thm
R70484:70496 compcert.lib.Integers Make unsigned_repr thm
R70507:70528 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70507:70528 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70507:70528 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70539:70550 compcert.lib.Integers Make eqmod_mod_eq thm
R70539:70550 compcert.lib.Integers Make eqmod_mod_eq thm
R70559:70570 compcert.lib.Integers Make wordsize_pos thm
R70559:70570 compcert.lib.Integers Make wordsize_pos thm
R70599:70620 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70599:70620 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70599:70620 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70636:70647 compcert.lib.Integers Make wordsize_pos thm
R70661:70681 compcert.lib.Integers Make wordsize_max_unsigned thm
R70636:70647 compcert.lib.Integers Make wordsize_pos thm
R70661:70681 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 70705:70715 Make ror_rol_neg
R70753:70756 Coq.Init.Logic <> :type_scope:x_'->'_x not
R70764:70766 Coq.Init.Logic <> :type_scope:x_'='_x not
R70757:70759 compcert.lib.Integers Make ror def
R70763:70763 compcert.lib.Integers <> y var
R70761:70761 compcert.lib.Integers <> x var
R70767:70769 compcert.lib.Integers Make rol def
R70774:70776 compcert.lib.Integers Make neg def
R70778:70778 compcert.lib.Integers <> y var
R70771:70771 compcert.lib.Integers <> x var
R70732:70732 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R70742:70744 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R70752:70752 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R70733:70741 compcert.lib.Integers Make zwordsize def
R70745:70751 compcert.lib.Integers Make modulus def
R70805:70816 compcert.lib.Integers Make same_bits_eq thm
R70805:70816 compcert.lib.Integers Make same_bits_eq thm
R70837:70844 compcert.lib.Integers Make bits_ror thm
R70837:70844 compcert.lib.Integers Make bits_ror thm
R70837:70844 compcert.lib.Integers Make bits_ror thm
R70863:70870 compcert.lib.Integers Make bits_rol thm
R70863:70870 compcert.lib.Integers Make bits_rol thm
R70863:70870 compcert.lib.Integers Make bits_rol thm
R70898:70909 compcert.lib.Integers Make eqmod_mod_eq thm
R70898:70909 compcert.lib.Integers Make eqmod_mod_eq thm
R70946:70949 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R70962:70962 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R70950:70951 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R70952:70959 compcert.lib.Integers Make unsigned def
R70927:70937 compcert.lib.Integers Make eqmod_trans thm
R70946:70949 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R70962:70962 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R70950:70951 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R70952:70959 compcert.lib.Integers Make unsigned def
R70927:70937 compcert.lib.Integers Make eqmod_trans thm
R70974:70984 compcert.lib.Integers Make eqmod_refl2 thm
R70974:70984 compcert.lib.Integers Make eqmod_refl2 thm
R71002:71010 compcert.lib.Integers Make eqmod_sub thm
R71002:71010 compcert.lib.Integers Make eqmod_sub thm
R71019:71028 compcert.lib.Integers Make eqmod_refl thm
R71019:71028 compcert.lib.Integers Make eqmod_refl thm
R71058:71064 compcert.lib.Integers Make modulus def
R71039:71051 compcert.lib.Integers Make eqmod_divides thm
R71058:71064 compcert.lib.Integers Make modulus def
R71039:71051 compcert.lib.Integers Make eqmod_divides thm
R71075:71091 compcert.lib.Integers Make eqm_unsigned_repr thm
R71075:71091 compcert.lib.Integers Make eqm_unsigned_repr thm
prf 71114:71119 Make or_ror
R71162:71167 Coq.Init.Logic <> :type_scope:x_'->'_x not
R71190:71195 Coq.Init.Logic <> :type_scope:x_'->'_x not
R71215:71220 Coq.Init.Logic <> :type_scope:x_'->'_x not
R71228:71230 Coq.Init.Logic <> :type_scope:x_'='_x not
R71221:71223 compcert.lib.Integers Make ror def
R71227:71227 compcert.lib.Integers <> z var
R71225:71225 compcert.lib.Integers <> x var
R71231:71232 compcert.lib.Integers Make or def
R71245:71248 compcert.lib.Integers Make shru def
R71252:71252 compcert.lib.Integers <> z var
R71250:71250 compcert.lib.Integers <> x var
R71235:71237 compcert.lib.Integers Make shl def
R71241:71241 compcert.lib.Integers <> y var
R71239:71239 compcert.lib.Integers <> x var
R71203:71205 Coq.Init.Logic <> :type_scope:x_'='_x not
R71196:71198 compcert.lib.Integers Make add def
R71202:71202 compcert.lib.Integers <> z var
R71200:71200 compcert.lib.Integers <> y var
R71206:71214 compcert.lib.Integers Make iwordsize def
R71183:71185 Coq.Init.Logic <> :type_scope:x_'='_x not
R71168:71170 compcert.lib.Integers Make ltu def
R71174:71182 compcert.lib.Integers Make iwordsize def
R71172:71172 compcert.lib.Integers <> z var
R71186:71189 Coq.Init.Datatypes <> true constr
R71155:71157 Coq.Init.Logic <> :type_scope:x_'='_x not
R71140:71142 compcert.lib.Integers Make ltu def
R71146:71154 compcert.lib.Integers Make iwordsize def
R71144:71144 compcert.lib.Integers <> y var
R71158:71161 Coq.Init.Datatypes <> true constr
R71287:71303 compcert.lib.Integers Make ltu_iwordsize_inv thm
R71311:71327 compcert.lib.Integers Make ltu_iwordsize_inv thm
R71287:71303 compcert.lib.Integers Make ltu_iwordsize_inv thm
R71311:71327 compcert.lib.Integers Make ltu_iwordsize_inv thm
R71353:71355 compcert.lib.Integers Make ror def
R71358:71359 compcert.lib.Integers Make or def
R71362:71364 compcert.lib.Integers Make shl def
R71367:71370 compcert.lib.Integers Make shru def
R71379:71390 compcert.lib.Integers Make same_bits_eq thm
R71379:71390 compcert.lib.Integers Make same_bits_eq thm
R71412:71423 compcert.lib.Integers Make testbit_repr thm
R71412:71423 compcert.lib.Integers Make testbit_repr thm
R71412:71423 compcert.lib.Integers Make testbit_repr thm
R71412:71423 compcert.lib.Integers Make testbit_repr thm
R71412:71423 compcert.lib.Integers Make testbit_repr thm
R71412:71423 compcert.lib.Integers Make testbit_repr thm
R71412:71423 compcert.lib.Integers Make testbit_repr thm
R71443:71452 Coq.ZArith.BinInt Z lor_spec thm
R71443:71452 Coq.ZArith.BinInt Z lor_spec thm
R71443:71452 Coq.ZArith.BinInt Z lor_spec thm
R71443:71452 Coq.ZArith.BinInt Z lor_spec thm
R71443:71452 Coq.ZArith.BinInt Z lor_spec thm
R71463:71470 Coq.Bool.Bool <> orb_comm thm
R71463:71470 Coq.Bool.Bool <> orb_comm thm
R71463:71470 Coq.Bool.Bool <> orb_comm thm
R71488:71500 compcert.lib.Integers Make same_bits_eqm thm
R71488:71500 compcert.lib.Integers Make same_bits_eqm thm
R71488:71500 compcert.lib.Integers Make same_bits_eqm thm
R71519:71537 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R71519:71537 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R71546:71554 compcert.lib.Integers Make eqm_refl2 thm
R71546:71554 compcert.lib.Integers Make eqm_refl2 thm
R71578:71587 compcert.lib.Coqlib <> Zmod_small thm
R71578:71587 compcert.lib.Coqlib <> Zmod_small thm
R71578:71587 compcert.lib.Coqlib <> Zmod_small thm
R71578:71587 compcert.lib.Coqlib <> Zmod_small thm
R71626:71628 Coq.Init.Logic <> :type_scope:x_'='_x not
R71608:71615 compcert.lib.Integers Make unsigned def
R71618:71620 compcert.lib.Integers Make add def
R71629:71637 compcert.lib.Integers Make zwordsize def
R71626:71628 Coq.Init.Logic <> :type_scope:x_'='_x not
R71608:71615 compcert.lib.Integers Make unsigned def
R71618:71620 compcert.lib.Integers Make add def
R71629:71637 compcert.lib.Integers Make zwordsize def
R71665:71686 compcert.lib.Integers Make unsigned_repr_wordsize thm
R71665:71686 compcert.lib.Integers Make unsigned_repr_wordsize thm
R71700:71702 compcert.lib.Integers Make add def
R71719:71731 compcert.lib.Integers Make unsigned_repr thm
R71719:71731 compcert.lib.Integers Make unsigned_repr thm
R71719:71731 compcert.lib.Integers Make unsigned_repr thm
R71719:71731 compcert.lib.Integers Make unsigned_repr thm
R71766:71790 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R71766:71790 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R71810:71828 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R71810:71828 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R71837:71845 compcert.lib.Integers Make eqm_refl2 thm
R71837:71845 compcert.lib.Integers Make eqm_refl2 thm
R71867:71876 compcert.lib.Coqlib <> Zmod_small thm
R71867:71876 compcert.lib.Coqlib <> Zmod_small thm
def 71955:71964 Make powerserie
R71970:71973 Coq.Init.Datatypes <> list ind
R71975:71975 Coq.Numbers.BinNums <> Z ind
R71979:71979 Coq.Numbers.BinNums <> Z ind
R71992:71992 compcert.lib.Integers <> l var
R72003:72005 Coq.Init.Datatypes <> nil constr
R72017:72020 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R72034:72036 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R72027:72031 Coq.ZArith.Zpower <> two_p def
R72037:72046 compcert.lib.Integers <> powerserie def
prf 72065:72085 Make Z_one_bits_powerserie
R72116:72119 Coq.Init.Logic <> :type_scope:x_'->'_x not
R72121:72123 Coq.Init.Logic <> :type_scope:x_'='_x not
R72120:72120 compcert.lib.Integers <> x var
R72124:72133 compcert.lib.Integers Make powerserie def
R72136:72145 compcert.lib.Integers Make Z_one_bits def
R72156:72156 compcert.lib.Integers <> x var
R72147:72154 compcert.lib.Integers Make wordsize def
R72101:72104 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R72106:72108 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R72105:72105 compcert.lib.Integers <> x var
R72105:72105 compcert.lib.Integers <> x var
R72109:72115 compcert.lib.Integers Make modulus def
R72203:72210 Coq.Init.Logic <> :type_scope:x_'->'_x not
R72235:72242 Coq.Init.Logic <> :type_scope:x_'->'_x not
R72254:72256 Coq.Init.Logic <> :type_scope:x_'='_x not
R72244:72246 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R72243:72243 compcert.lib.Integers <> x var
R72247:72251 Coq.ZArith.Zpower <> two_p def
R72253:72253 compcert.lib.Integers <> i var
R72257:72266 compcert.lib.Integers Make powerserie def
R72269:72278 compcert.lib.Integers Make Z_one_bits def
R72284:72284 compcert.lib.Integers <> i var
R72282:72282 compcert.lib.Integers <> x var
R72280:72280 compcert.lib.Integers <> n var
R72212:72215 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R72217:72219 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R72216:72216 compcert.lib.Integers <> x var
R72216:72216 compcert.lib.Integers <> x var
R72220:72232 Coq.ZArith.Zpower <> two_power_nat def
R72234:72234 compcert.lib.Integers <> n var
R72198:72201 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R72202:72202 compcert.lib.Integers <> i var
R72203:72210 Coq.Init.Logic <> :type_scope:x_'->'_x not
R72235:72242 Coq.Init.Logic <> :type_scope:x_'->'_x not
R72254:72256 Coq.Init.Logic <> :type_scope:x_'='_x not
R72244:72246 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R72243:72243 compcert.lib.Integers <> x var
R72247:72251 Coq.ZArith.Zpower <> two_p def
R72253:72253 compcert.lib.Integers <> i var
R72257:72266 compcert.lib.Integers Make powerserie def
R72269:72278 compcert.lib.Integers Make Z_one_bits def
R72284:72284 compcert.lib.Integers <> i var
R72282:72282 compcert.lib.Integers <> x var
R72280:72280 compcert.lib.Integers <> n var
R72212:72215 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R72217:72219 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R72216:72216 compcert.lib.Integers <> x var
R72216:72216 compcert.lib.Integers <> x var
R72220:72232 Coq.ZArith.Zpower <> two_power_nat def
R72234:72234 compcert.lib.Integers <> n var
R72198:72201 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R72202:72202 compcert.lib.Integers <> i var
R72333:72347 compcert.lib.Coqlib <> two_power_nat_O thm
R72333:72347 compcert.lib.Coqlib <> two_power_nat_O thm
R72333:72347 compcert.lib.Coqlib <> two_power_nat_O thm
R72367:72369 Coq.Init.Logic <> :type_scope:x_'='_x not
R72367:72369 Coq.Init.Logic <> :type_scope:x_'='_x not
R72409:72423 Coq.ZArith.Zpower <> two_power_nat_S thm
R72409:72423 Coq.ZArith.Zpower <> two_power_nat_S thm
R72409:72423 Coq.ZArith.Zpower <> two_power_nat_S thm
R72461:72467 compcert.lib.Integers Make Zdecomp thm
R72461:72467 compcert.lib.Integers Make Zdecomp thm
R72461:72467 compcert.lib.Integers Make Zdecomp thm
R72487:72499 compcert.lib.Integers Make Zshiftin_spec thm
R72487:72499 compcert.lib.Integers Make Zshiftin_spec thm
R72487:72499 compcert.lib.Integers Make Zshiftin_spec thm
R72546:72548 Coq.Init.Logic <> :type_scope:x_'='_x not
R72530:72532 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R72522:72527 Coq.ZArith.BinInt Z div2 def
R72533:72537 Coq.ZArith.Zpower <> two_p def
R72541:72543 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R72549:72558 compcert.lib.Integers Make powerserie def
R72561:72570 compcert.lib.Integers Make Z_one_bits def
R72587:72589 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R72575:72580 Coq.ZArith.BinInt Z div2 def
R72546:72548 Coq.Init.Logic <> :type_scope:x_'='_x not
R72530:72532 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R72522:72527 Coq.ZArith.BinInt Z div2 def
R72533:72537 Coq.ZArith.Zpower <> two_p def
R72541:72543 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R72549:72558 compcert.lib.Integers Make powerserie def
R72561:72570 compcert.lib.Integers Make Z_one_bits def
R72587:72589 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R72575:72580 Coq.ZArith.BinInt Z div2 def
R72632:72636 Coq.ZArith.BinInt Z odd def
R72632:72636 Coq.ZArith.BinInt Z odd def
R72659:72670 Coq.ZArith.Zpower <> two_p_is_exp thm
R72659:72670 Coq.ZArith.Zpower <> two_p_is_exp thm
R72659:72670 Coq.ZArith.Zpower <> two_p_is_exp thm
R72659:72670 Coq.ZArith.Zpower <> two_p_is_exp thm
R72659:72670 Coq.ZArith.Zpower <> two_p_is_exp thm
R72687:72691 Coq.ZArith.Zpower <> two_p def
R72687:72691 Coq.ZArith.Zpower <> two_p def
R72721:72727 compcert.lib.Integers Make Zdecomp thm
R72721:72727 compcert.lib.Integers Make Zdecomp thm
R72721:72727 compcert.lib.Integers Make Zdecomp thm
R72746:72758 compcert.lib.Integers Make Zshiftin_spec thm
R72746:72758 compcert.lib.Integers Make Zshiftin_spec thm
R72746:72758 compcert.lib.Integers Make Zshiftin_spec thm
R72773:72777 Coq.ZArith.BinInt Z odd def
R72773:72777 Coq.ZArith.BinInt Z odd def
R72874:72878 Coq.ZArith.Zpower <> two_p def
R72874:72878 Coq.ZArith.Zpower <> two_p def
prf 72929:72944 Make Z_one_bits_range
R72991:72994 Coq.Init.Logic <> :type_scope:x_'->'_x not
R72996:72999 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73001:73003 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73000:73000 compcert.lib.Integers <> i var
R73000:73000 compcert.lib.Integers <> i var
R73004:73012 compcert.lib.Integers Make zwordsize def
R72961:72962 Coq.Lists.List <> In def
R72967:72976 compcert.lib.Integers Make Z_one_bits def
R72987:72987 compcert.lib.Integers <> x var
R72978:72985 compcert.lib.Integers Make wordsize def
R72964:72964 compcert.lib.Integers <> i var
R73075:73078 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73080:73083 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73085:73087 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73079:73079 compcert.lib.Integers <> i var
R73084:73084 compcert.lib.Integers <> j var
R73084:73084 compcert.lib.Integers <> j var
R73089:73091 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73088:73088 compcert.lib.Integers <> i var
R73092:73099 Coq.ZArith.BinInt <> Z_of_nat syndef
R73101:73101 compcert.lib.Integers <> n var
R73052:73053 Coq.Lists.List <> In def
R73058:73067 compcert.lib.Integers Make Z_one_bits def
R73073:73073 compcert.lib.Integers <> i var
R73071:73071 compcert.lib.Integers <> x var
R73069:73069 compcert.lib.Integers <> n var
R73055:73055 compcert.lib.Integers <> j var
R73075:73078 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73080:73083 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73085:73087 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73079:73079 compcert.lib.Integers <> i var
R73084:73084 compcert.lib.Integers <> j var
R73084:73084 compcert.lib.Integers <> j var
R73089:73091 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73088:73088 compcert.lib.Integers <> i var
R73092:73099 Coq.ZArith.BinInt <> Z_of_nat syndef
R73101:73101 compcert.lib.Integers <> n var
R73052:73053 Coq.Lists.List <> In def
R73058:73067 compcert.lib.Integers Make Z_one_bits def
R73073:73073 compcert.lib.Integers <> i var
R73071:73071 compcert.lib.Integers <> x var
R73069:73069 compcert.lib.Integers <> n var
R73055:73055 compcert.lib.Integers <> j var
R73167:73171 Coq.ZArith.Znat <> inj_S syndef
R73167:73171 Coq.ZArith.Znat <> inj_S syndef
R73167:73171 Coq.ZArith.Znat <> inj_S syndef
R73222:73225 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73227:73230 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73232:73234 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73236:73238 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73239:73244 Coq.ZArith.BinInt Z succ def
R73247:73254 Coq.ZArith.BinInt Z of_nat def
R73184:73185 Coq.Lists.List <> In def
R73190:73199 compcert.lib.Integers Make Z_one_bits def
R73216:73218 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73204:73209 Coq.ZArith.BinInt Z div2 def
R73222:73225 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73227:73230 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73232:73234 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73236:73238 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73239:73244 Coq.ZArith.BinInt Z succ def
R73247:73254 Coq.ZArith.BinInt Z of_nat def
R73184:73185 Coq.Lists.List <> In def
R73190:73199 compcert.lib.Integers Make Z_one_bits def
R73216:73218 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73204:73209 Coq.ZArith.BinInt Z div2 def
R73312:73316 Coq.ZArith.BinInt Z odd def
R73312:73316 Coq.ZArith.BinInt Z odd def
R73403:73410 compcert.lib.Integers Make wordsize def
R73403:73410 compcert.lib.Integers Make wordsize def
R73428:73436 compcert.lib.Integers Make zwordsize def
R73428:73436 compcert.lib.Integers Make zwordsize def
prf 73458:73470 Make is_power2_rng
R73515:73520 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73522:73525 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73539:73541 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73526:73533 compcert.lib.Integers Make unsigned def
R73535:73538 compcert.lib.Integers <> logn var
R73526:73533 compcert.lib.Integers Make unsigned def
R73535:73538 compcert.lib.Integers <> logn var
R73542:73550 compcert.lib.Integers Make zwordsize def
R73503:73505 Coq.Init.Logic <> :type_scope:x_'='_x not
R73492:73500 compcert.lib.Integers Make is_power2 def
R73502:73502 compcert.lib.Integers <> n var
R73506:73509 Coq.Init.Datatypes <> Some constr
R73511:73514 compcert.lib.Integers <> logn var
R73584:73592 compcert.lib.Integers Make is_power2 def
R73609:73624 compcert.lib.Integers Make Z_one_bits_range thm
R73627:73634 compcert.lib.Integers Make unsigned def
R73609:73624 compcert.lib.Integers Make Z_one_bits_range thm
R73627:73634 compcert.lib.Integers Make unsigned def
R73653:73662 compcert.lib.Integers Make Z_one_bits def
R73674:73681 compcert.lib.Integers Make unsigned def
R73664:73671 compcert.lib.Integers Make wordsize def
R73653:73662 compcert.lib.Integers Make Z_one_bits def
R73674:73681 compcert.lib.Integers Make unsigned def
R73664:73671 compcert.lib.Integers Make wordsize def
R73792:73795 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73797:73799 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73800:73808 compcert.lib.Integers Make zwordsize def
R73792:73795 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73797:73799 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73800:73808 compcert.lib.Integers Make zwordsize def
R73851:73863 compcert.lib.Integers Make unsigned_repr thm
R73851:73863 compcert.lib.Integers Make unsigned_repr thm
R73851:73863 compcert.lib.Integers Make unsigned_repr thm
R73851:73863 compcert.lib.Integers Make unsigned_repr thm
R73883:73903 compcert.lib.Integers Make wordsize_max_unsigned thm
R73883:73903 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 73951:73965 Make is_power2_range
R74010:74013 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74032:74034 Coq.Init.Logic <> :type_scope:x_'='_x not
R74014:74016 compcert.lib.Integers Make ltu def
R74023:74031 compcert.lib.Integers Make iwordsize def
R74018:74021 compcert.lib.Integers <> logn var
R74035:74038 Coq.Init.Datatypes <> true constr
R73998:74000 Coq.Init.Logic <> :type_scope:x_'='_x not
R73987:73995 compcert.lib.Integers Make is_power2 def
R73997:73997 compcert.lib.Integers <> n var
R74001:74004 Coq.Init.Datatypes <> Some constr
R74006:74009 compcert.lib.Integers <> logn var
R74065:74067 compcert.lib.Integers Make ltu def
R74078:74099 compcert.lib.Integers Make unsigned_repr_wordsize thm
R74078:74099 compcert.lib.Integers Make unsigned_repr_wordsize thm
R74078:74099 compcert.lib.Integers Make unsigned_repr_wordsize thm
R74110:74117 compcert.lib.Coqlib <> zlt_true thm
R74110:74117 compcert.lib.Coqlib <> zlt_true thm
R74132:74144 compcert.lib.Integers Make is_power2_rng thm
R74132:74144 compcert.lib.Integers Make is_power2_rng thm
prf 74173:74189 Make is_power2_correct
R74234:74239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74250:74252 Coq.Init.Logic <> :type_scope:x_'='_x not
R74240:74247 compcert.lib.Integers Make unsigned def
R74249:74249 compcert.lib.Integers <> n var
R74253:74257 Coq.ZArith.Zpower <> two_p def
R74260:74267 compcert.lib.Integers Make unsigned def
R74269:74272 compcert.lib.Integers <> logn var
R74222:74224 Coq.Init.Logic <> :type_scope:x_'='_x not
R74211:74219 compcert.lib.Integers Make is_power2 def
R74221:74221 compcert.lib.Integers <> n var
R74225:74228 Coq.Init.Datatypes <> Some constr
R74230:74233 compcert.lib.Integers <> logn var
R74307:74315 compcert.lib.Integers Make is_power2 def
R74332:74352 compcert.lib.Integers Make Z_one_bits_powerserie thm
R74368:74381 compcert.lib.Integers Make unsigned_range thm
R74355:74362 compcert.lib.Integers Make unsigned def
R74332:74352 compcert.lib.Integers Make Z_one_bits_powerserie thm
R74368:74381 compcert.lib.Integers Make unsigned_range thm
R74355:74362 compcert.lib.Integers Make unsigned def
R74402:74417 compcert.lib.Integers Make Z_one_bits_range thm
R74420:74427 compcert.lib.Integers Make unsigned def
R74402:74417 compcert.lib.Integers Make Z_one_bits_range thm
R74420:74427 compcert.lib.Integers Make unsigned def
R74446:74455 compcert.lib.Integers Make Z_one_bits def
R74467:74474 compcert.lib.Integers Make unsigned def
R74457:74464 compcert.lib.Integers Make wordsize def
R74446:74455 compcert.lib.Integers Make Z_one_bits def
R74467:74474 compcert.lib.Integers Make unsigned def
R74457:74464 compcert.lib.Integers Make wordsize def
R74598:74610 compcert.lib.Integers Make unsigned_repr thm
R74598:74610 compcert.lib.Integers Make unsigned_repr thm
R74598:74610 compcert.lib.Integers Make unsigned_repr thm
R74598:74610 compcert.lib.Integers Make unsigned_repr thm
R74622:74626 Coq.ZArith.Zpower <> two_p def
R74644:74646 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R74637:74641 Coq.ZArith.Zpower <> two_p def
R74644:74646 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R74637:74641 Coq.ZArith.Zpower <> two_p def
R74622:74626 Coq.ZArith.Zpower <> two_p def
R74699:74719 compcert.lib.Integers Make wordsize_max_unsigned thm
R74699:74719 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 74786:74796 Make two_p_range
R74831:74836 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74838:74841 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R74849:74852 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R74842:74846 Coq.ZArith.Zpower <> two_p def
R74848:74848 compcert.lib.Integers <> n var
R74842:74846 Coq.ZArith.Zpower <> two_p def
R74848:74848 compcert.lib.Integers <> n var
R74853:74864 compcert.lib.Integers Make max_unsigned def
R74814:74817 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R74819:74821 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R74818:74818 compcert.lib.Integers <> n var
R74818:74818 compcert.lib.Integers <> n var
R74822:74830 compcert.lib.Integers Make zwordsize def
R74908:74910 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R74901:74905 Coq.ZArith.Zpower <> two_p def
R74908:74910 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R74901:74905 Coq.ZArith.Zpower <> two_p def
R74921:74933 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R74921:74933 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R74964:74984 compcert.lib.Coqlib <> two_p_monotone_strict thm
R74964:74984 compcert.lib.Coqlib <> two_p_monotone_strict thm
R75003:75011 compcert.lib.Integers Make zwordsize def
R75025:75043 compcert.lib.Coqlib <> two_power_nat_two_p thm
R75025:75043 compcert.lib.Coqlib <> two_power_nat_two_p thm
R75025:75043 compcert.lib.Coqlib <> two_power_nat_two_p thm
R75055:75066 compcert.lib.Integers Make max_unsigned def
R75069:75075 compcert.lib.Integers Make modulus def
prf 75098:75112 Make Z_one_bits_zero
R75145:75147 Coq.Init.Logic <> :type_scope:x_'='_x not
R75129:75138 compcert.lib.Integers Make Z_one_bits def
R75144:75144 compcert.lib.Integers <> i var
R75140:75140 compcert.lib.Integers <> n var
R75148:75150 Coq.Init.Datatypes <> nil constr
prf 75209:75224 Make Z_one_bits_two_p
R75264:75269 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75294:75296 Coq.Init.Logic <> :type_scope:x_'='_x not
R75270:75279 compcert.lib.Integers Make Z_one_bits def
R75293:75293 compcert.lib.Integers <> i var
R75284:75288 Coq.ZArith.Zpower <> two_p def
R75290:75290 compcert.lib.Integers <> x var
R75281:75281 compcert.lib.Integers <> n var
R75297:75297 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R75303:75307 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R75299:75301 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R75298:75298 compcert.lib.Integers <> i var
R75302:75302 compcert.lib.Integers <> x var
R75308:75310 Coq.Init.Datatypes <> nil constr
R75246:75249 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R75251:75253 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R75250:75250 compcert.lib.Integers <> x var
R75250:75250 compcert.lib.Integers <> x var
R75254:75261 Coq.ZArith.BinInt <> Z_of_nat syndef
R75263:75263 compcert.lib.Integers <> n var
R75392:75396 Coq.ZArith.Znat <> inj_S syndef
R75392:75396 Coq.ZArith.Znat <> inj_S syndef
R75392:75396 Coq.ZArith.Znat <> inj_S syndef
R75419:75422 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R75415:75417 Coq.Init.Logic <> :type_scope:x_'='_x not
R75424:75426 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R75419:75422 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R75415:75417 Coq.Init.Logic <> :type_scope:x_'='_x not
R75424:75426 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R75491:75505 compcert.lib.Integers Make Z_one_bits_zero thm
R75491:75505 compcert.lib.Integers Make Z_one_bits_zero thm
R75541:75544 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R75533:75535 Coq.Init.Logic <> :type_scope:x_'='_x not
R75518:75522 Coq.ZArith.BinInt Z odd def
R75525:75529 Coq.ZArith.Zpower <> two_p def
R75536:75540 Coq.Init.Datatypes <> false constr
R75561:75563 Coq.Init.Logic <> :type_scope:x_'='_x not
R75545:75550 Coq.ZArith.BinInt Z div2 def
R75553:75557 Coq.ZArith.Zpower <> two_p def
R75564:75568 Coq.ZArith.Zpower <> two_p def
R75572:75572 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R75541:75544 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R75533:75535 Coq.Init.Logic <> :type_scope:x_'='_x not
R75518:75522 Coq.ZArith.BinInt Z odd def
R75525:75529 Coq.ZArith.Zpower <> two_p def
R75536:75540 Coq.Init.Datatypes <> false constr
R75561:75563 Coq.Init.Logic <> :type_scope:x_'='_x not
R75545:75550 Coq.ZArith.BinInt Z div2 def
R75553:75557 Coq.ZArith.Zpower <> two_p def
R75564:75568 Coq.ZArith.Zpower <> two_p def
R75572:75572 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R75588:75599 compcert.lib.Integers Make Zshiftin_inj thm
R75588:75599 compcert.lib.Integers Make Zshiftin_inj thm
R75613:75619 compcert.lib.Integers Make Zdecomp thm
R75613:75619 compcert.lib.Integers Make Zdecomp thm
R75613:75619 compcert.lib.Integers Make Zdecomp thm
R75631:75643 compcert.lib.Integers Make Zshiftin_spec thm
R75631:75643 compcert.lib.Integers Make Zshiftin_spec thm
R75631:75643 compcert.lib.Integers Make Zshiftin_spec thm
R75631:75643 compcert.lib.Integers Make Zshiftin_spec thm
R75661:75667 Coq.ZArith.Zpower <> two_p_S thm
R75661:75667 Coq.ZArith.Zpower <> two_p_S thm
R75661:75667 Coq.ZArith.Zpower <> two_p_S thm
R75661:75667 Coq.ZArith.Zpower <> two_p_S thm
R75678:75686 Coq.ZArith.BinInt <> Zplus_0_r syndef
R75678:75686 Coq.ZArith.BinInt <> Zplus_0_r syndef
R75678:75686 Coq.ZArith.BinInt <> Zplus_0_r syndef
prf 75808:75822 Make is_power2_two_p
R75855:75860 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75887:75889 Coq.Init.Logic <> :type_scope:x_'='_x not
R75861:75869 compcert.lib.Integers Make is_power2 def
R75872:75875 compcert.lib.Integers Make repr def
R75878:75882 Coq.ZArith.Zpower <> two_p def
R75884:75884 compcert.lib.Integers <> n var
R75890:75893 Coq.Init.Datatypes <> Some constr
R75896:75899 compcert.lib.Integers Make repr def
R75901:75901 compcert.lib.Integers <> n var
R75838:75841 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R75843:75845 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R75842:75842 compcert.lib.Integers <> n var
R75842:75842 compcert.lib.Integers <> n var
R75846:75854 compcert.lib.Integers Make zwordsize def
R75929:75937 compcert.lib.Integers Make is_power2 def
R75948:75960 compcert.lib.Integers Make unsigned_repr thm
R75948:75960 compcert.lib.Integers Make unsigned_repr thm
R75948:75960 compcert.lib.Integers Make unsigned_repr thm
R75948:75960 compcert.lib.Integers Make unsigned_repr thm
R75973:75988 compcert.lib.Integers Make Z_one_bits_two_p thm
R75973:75988 compcert.lib.Integers Make Z_one_bits_two_p thm
R75973:75988 compcert.lib.Integers Make Z_one_bits_two_p thm
R75973:75988 compcert.lib.Integers Make Z_one_bits_two_p thm
R76011:76021 compcert.lib.Integers Make two_p_range thm
R76011:76021 compcert.lib.Integers Make two_p_range thm
prf 76192:76208 Make Zshiftl_mul_two_p
R76231:76234 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76247:76249 Coq.Init.Logic <> :type_scope:x_'='_x not
R76235:76242 Coq.ZArith.BinInt Z shiftl def
R76246:76246 compcert.lib.Integers <> n var
R76244:76244 compcert.lib.Integers <> x var
R76251:76253 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R76250:76250 compcert.lib.Integers <> x var
R76254:76258 Coq.ZArith.Zpower <> two_p def
R76260:76260 compcert.lib.Integers <> n var
R76226:76229 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R76230:76230 compcert.lib.Integers <> n var
R76331:76343 Coq.PArith.BinPos Pos peano_ind def
R76331:76343 Coq.PArith.BinPos Pos peano_ind def
R76360:76372 Coq.ZArith.Zpower <> two_power_pos def
R76360:76372 Coq.ZArith.Zpower <> two_power_pos def
R76420:76432 Coq.PArith.BinPos Pos iter_succ thm
R76420:76432 Coq.PArith.BinPos Pos iter_succ thm
R76420:76432 Coq.PArith.BinPos Pos iter_succ thm
R76461:76476 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R76461:76476 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R76461:76476 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R76487:76506 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R76487:76506 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R76487:76506 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R76523:76535 Coq.ZArith.Zpower <> two_power_pos def
R76523:76535 Coq.ZArith.Zpower <> two_power_pos def
prf 76596:76608 Make shl_mul_two_p
R76634:76636 Coq.Init.Logic <> :type_scope:x_'='_x not
R76627:76629 compcert.lib.Integers Make shl def
R76633:76633 compcert.lib.Integers <> y var
R76631:76631 compcert.lib.Integers <> x var
R76637:76639 compcert.lib.Integers Make mul def
R76644:76647 compcert.lib.Integers Make repr def
R76650:76654 Coq.ZArith.Zpower <> two_p def
R76657:76664 compcert.lib.Integers Make unsigned def
R76666:76666 compcert.lib.Integers <> y var
R76641:76641 compcert.lib.Integers <> x var
R76696:76698 compcert.lib.Integers Make shl def
R76701:76703 compcert.lib.Integers Make mul def
R76712:76723 compcert.lib.Integers Make eqm_samerepr thm
R76712:76723 compcert.lib.Integers Make eqm_samerepr thm
R76736:76752 compcert.lib.Integers Make Zshiftl_mul_two_p thm
R76736:76752 compcert.lib.Integers Make Zshiftl_mul_two_p thm
R76736:76752 compcert.lib.Integers Make Zshiftl_mul_two_p thm
R76736:76752 compcert.lib.Integers Make Zshiftl_mul_two_p thm
R76785:76798 compcert.lib.Integers Make unsigned_range thm
R76785:76798 compcert.lib.Integers Make unsigned_range thm
prf 76825:76831 Make shl_mul
R76857:76859 Coq.Init.Logic <> :type_scope:x_'='_x not
R76850:76852 compcert.lib.Integers Make shl def
R76856:76856 compcert.lib.Integers <> y var
R76854:76854 compcert.lib.Integers <> x var
R76860:76862 compcert.lib.Integers Make mul def
R76867:76869 compcert.lib.Integers Make shl def
R76875:76875 compcert.lib.Integers <> y var
R76871:76873 compcert.lib.Integers Make one def
R76864:76864 compcert.lib.Integers <> x var
R76915:76917 Coq.Init.Logic <> :type_scope:x_'='_x not
R76906:76908 compcert.lib.Integers Make shl def
R76910:76912 compcert.lib.Integers Make one def
R76918:76921 compcert.lib.Integers Make repr def
R76924:76928 Coq.ZArith.Zpower <> two_p def
R76931:76938 compcert.lib.Integers Make unsigned def
R76915:76917 Coq.Init.Logic <> :type_scope:x_'='_x not
R76906:76908 compcert.lib.Integers Make shl def
R76910:76912 compcert.lib.Integers Make one def
R76918:76921 compcert.lib.Integers Make repr def
R76924:76928 Coq.ZArith.Zpower <> two_p def
R76931:76938 compcert.lib.Integers Make unsigned def
R76962:76974 compcert.lib.Integers Make shl_mul_two_p thm
R76962:76974 compcert.lib.Integers Make shl_mul_two_p thm
R76962:76974 compcert.lib.Integers Make shl_mul_two_p thm
R76985:76994 compcert.lib.Integers Make mul_commut thm
R76985:76994 compcert.lib.Integers Make mul_commut thm
R76985:76994 compcert.lib.Integers Make mul_commut thm
R77005:77011 compcert.lib.Integers Make mul_one thm
R77005:77011 compcert.lib.Integers Make mul_one thm
R77005:77011 compcert.lib.Integers Make mul_one thm
R77043:77055 compcert.lib.Integers Make shl_mul_two_p thm
R77043:77055 compcert.lib.Integers Make shl_mul_two_p thm
prf 77072:77079 Make mul_pow2
R77126:77131 Coq.Init.Logic <> :type_scope:x_'->'_x not
R77139:77141 Coq.Init.Logic <> :type_scope:x_'='_x not
R77132:77134 compcert.lib.Integers Make mul def
R77138:77138 compcert.lib.Integers <> n var
R77136:77136 compcert.lib.Integers <> x var
R77142:77144 compcert.lib.Integers Make shl def
R77148:77151 compcert.lib.Integers <> logn var
R77146:77146 compcert.lib.Integers <> x var
R77114:77116 Coq.Init.Logic <> :type_scope:x_'='_x not
R77103:77111 compcert.lib.Integers Make is_power2 def
R77113:77113 compcert.lib.Integers <> n var
R77117:77120 Coq.Init.Datatypes <> Some constr
R77122:77125 compcert.lib.Integers <> logn var
R77183:77199 compcert.lib.Integers Make is_power2_correct thm
R77183:77199 compcert.lib.Integers Make is_power2_correct thm
R77229:77241 compcert.lib.Integers Make shl_mul_two_p thm
R77229:77241 compcert.lib.Integers Make shl_mul_two_p thm
R77229:77241 compcert.lib.Integers Make shl_mul_two_p thm
R77267:77279 compcert.lib.Integers Make repr_unsigned thm
R77267:77279 compcert.lib.Integers Make repr_unsigned thm
R77267:77279 compcert.lib.Integers Make repr_unsigned thm
prf 77304:77320 Make shifted_or_is_add
R77359:77364 Coq.Init.Logic <> :type_scope:x_'->'_x not
R77385:77390 Coq.Init.Logic <> :type_scope:x_'->'_x not
R77412:77414 Coq.Init.Logic <> :type_scope:x_'='_x not
R77391:77392 compcert.lib.Integers Make or def
R77411:77411 compcert.lib.Integers <> y var
R77395:77397 compcert.lib.Integers Make shl def
R77402:77405 compcert.lib.Integers Make repr def
R77407:77407 compcert.lib.Integers <> n var
R77399:77399 compcert.lib.Integers <> x var
R77415:77418 compcert.lib.Integers Make repr def
R77440:77442 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77430:77432 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R77420:77427 compcert.lib.Integers Make unsigned def
R77429:77429 compcert.lib.Integers <> x var
R77433:77437 Coq.ZArith.Zpower <> two_p def
R77439:77439 compcert.lib.Integers <> n var
R77443:77450 compcert.lib.Integers Make unsigned def
R77452:77452 compcert.lib.Integers <> y var
R77375:77377 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R77365:77372 compcert.lib.Integers Make unsigned def
R77374:77374 compcert.lib.Integers <> y var
R77378:77382 Coq.ZArith.Zpower <> two_p def
R77384:77384 compcert.lib.Integers <> n var
R77342:77345 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R77347:77349 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R77346:77346 compcert.lib.Integers <> n var
R77346:77346 compcert.lib.Integers <> n var
R77350:77358 compcert.lib.Integers Make zwordsize def
R77484:77492 compcert.lib.Integers Make add_is_or thm
R77484:77492 compcert.lib.Integers Make add_is_or thm
R77484:77492 compcert.lib.Integers Make add_is_or thm
R77484:77492 compcert.lib.Integers Make add_is_or thm
R77506:77508 compcert.lib.Integers Make add def
R77517:77528 compcert.lib.Integers Make eqm_samerepr thm
R77517:77528 compcert.lib.Integers Make eqm_samerepr thm
R77537:77543 compcert.lib.Integers Make eqm_add thm
R77537:77543 compcert.lib.Integers Make eqm_add thm
R77574:77586 compcert.lib.Integers Make shl_mul_two_p thm
R77574:77586 compcert.lib.Integers Make shl_mul_two_p thm
R77574:77586 compcert.lib.Integers Make shl_mul_two_p thm
R77596:77598 compcert.lib.Integers Make mul def
R77607:77625 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R77607:77625 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R77638:77645 compcert.lib.Integers Make eqm_mult thm
R77638:77645 compcert.lib.Integers Make eqm_mult thm
R77670:77688 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R77670:77688 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R77701:77709 compcert.lib.Integers Make eqm_refl2 thm
R77701:77709 compcert.lib.Integers Make eqm_refl2 thm
R77720:77732 compcert.lib.Integers Make unsigned_repr thm
R77720:77732 compcert.lib.Integers Make unsigned_repr thm
R77720:77732 compcert.lib.Integers Make unsigned_repr thm
R77720:77732 compcert.lib.Integers Make unsigned_repr thm
R77756:77776 compcert.lib.Integers Make wordsize_max_unsigned thm
R77756:77776 compcert.lib.Integers Make wordsize_max_unsigned thm
R77813:77825 compcert.lib.Integers Make unsigned_repr thm
R77813:77825 compcert.lib.Integers Make unsigned_repr thm
R77813:77825 compcert.lib.Integers Make unsigned_repr thm
R77813:77825 compcert.lib.Integers Make unsigned_repr thm
R77842:77844 compcert.lib.Coqlib <> zlt def
R77842:77844 compcert.lib.Coqlib <> zlt def
R77879:77885 compcert.lib.Integers Make testbit def
R77897:77901 Coq.Init.Datatypes <> false constr
R77897:77901 Coq.Init.Datatypes <> false constr
R77879:77885 compcert.lib.Integers Make testbit def
R77910:77921 Coq.Bool.Bool <> andb_false_r thm
R77910:77921 Coq.Bool.Bool <> andb_false_r thm
R77947:77953 compcert.lib.Integers Make testbit def
R77995:77997 Coq.Init.Logic <> :type_scope:x_'='_x not
R77974:77981 Coq.ZArith.BinInt Z of_nat def
R77984:77991 Coq.ZArith.BinInt Z to_nat def
R78011:78018 Coq.ZArith.Znat Z2Nat id thm
R77995:77997 Coq.Init.Logic <> :type_scope:x_'='_x not
R77974:77981 Coq.ZArith.BinInt Z of_nat def
R77984:77991 Coq.ZArith.BinInt Z to_nat def
R78011:78018 Coq.ZArith.Znat Z2Nat id thm
R78062:78069 Coq.ZArith.BinInt Z to_nat def
R78041:78054 compcert.lib.Integers Make Ztestbit_above thm
R78062:78069 Coq.ZArith.BinInt Z to_nat def
R78041:78054 compcert.lib.Integers Make Ztestbit_above thm
R78113:78131 compcert.lib.Coqlib <> two_power_nat_two_p thm
R78113:78131 compcert.lib.Coqlib <> two_power_nat_two_p thm
R78113:78131 compcert.lib.Coqlib <> two_power_nat_two_p thm
R78158:78171 compcert.lib.Integers Make unsigned_range thm
R78158:78171 compcert.lib.Integers Make unsigned_range thm
R78225:78245 compcert.lib.Integers Make wordsize_max_unsigned thm
R78225:78245 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 78336:78352 Make Zshiftr_div_two_p
R78375:78378 Coq.Init.Logic <> :type_scope:x_'->'_x not
R78391:78393 Coq.Init.Logic <> :type_scope:x_'='_x not
R78379:78386 Coq.ZArith.BinInt Z shiftr def
R78390:78390 compcert.lib.Integers <> n var
R78388:78388 compcert.lib.Integers <> x var
R78395:78397 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R78394:78394 compcert.lib.Integers <> x var
R78398:78402 Coq.ZArith.Zpower <> two_p def
R78404:78404 compcert.lib.Integers <> n var
R78370:78373 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R78374:78374 compcert.lib.Integers <> n var
R78443:78450 Coq.ZArith.BinInt Z shiftr def
R78472:78479 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R78472:78479 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R78472:78479 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R78509:78521 Coq.PArith.BinPos Pos peano_ind def
R78509:78521 Coq.PArith.BinPos Pos peano_ind def
R78538:78550 Coq.ZArith.Zpower <> two_power_pos def
R78538:78550 Coq.ZArith.Zpower <> two_power_pos def
R78576:78584 Coq.ZArith.Zdiv <> Zdiv2_div thm
R78576:78584 Coq.ZArith.Zdiv <> Zdiv2_div thm
R78609:78621 Coq.PArith.BinPos Pos iter_succ thm
R78609:78621 Coq.PArith.BinPos Pos iter_succ thm
R78609:78621 Coq.PArith.BinPos Pos iter_succ thm
R78650:78665 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R78650:78665 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R78650:78665 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R78676:78695 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R78676:78695 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R78676:78695 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R78712:78724 Coq.ZArith.Zpower <> two_power_pos def
R78712:78724 Coq.ZArith.Zpower <> two_power_pos def
R78751:78759 Coq.ZArith.Zdiv <> Zdiv2_div thm
R78751:78759 Coq.ZArith.Zdiv <> Zdiv2_div thm
R78751:78759 Coq.ZArith.Zdiv <> Zdiv2_div thm
R78770:78779 Coq.ZArith.BinInt <> Zmult_comm syndef
R78770:78779 Coq.ZArith.BinInt <> Zmult_comm syndef
R78770:78779 Coq.ZArith.BinInt <> Zmult_comm syndef
R78788:78796 compcert.lib.Coqlib <> Zdiv_Zdiv thm
R78788:78796 compcert.lib.Coqlib <> Zdiv_Zdiv thm
R78813:78829 Coq.ZArith.Zpower <> two_power_pos_nat thm
R78813:78829 Coq.ZArith.Zpower <> two_power_pos_nat thm
R78813:78829 Coq.ZArith.Zpower <> two_power_pos_nat thm
R78838:78854 compcert.lib.Coqlib <> two_power_nat_pos thm
R78838:78854 compcert.lib.Coqlib <> two_power_nat_pos thm
prf 78906:78919 Make shru_div_two_p
R78946:78948 Coq.Init.Logic <> :type_scope:x_'='_x not
R78938:78941 compcert.lib.Integers Make shru def
R78945:78945 compcert.lib.Integers <> y var
R78943:78943 compcert.lib.Integers <> x var
R78949:78952 compcert.lib.Integers Make repr def
R78965:78967 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R78955:78962 compcert.lib.Integers Make unsigned def
R78964:78964 compcert.lib.Integers <> x var
R78968:78972 Coq.ZArith.Zpower <> two_p def
R78975:78982 compcert.lib.Integers Make unsigned def
R78984:78984 compcert.lib.Integers <> y var
R79013:79016 compcert.lib.Integers Make shru def
R79029:79045 compcert.lib.Integers Make Zshiftr_div_two_p thm
R79029:79045 compcert.lib.Integers Make Zshiftr_div_two_p thm
R79029:79045 compcert.lib.Integers Make Zshiftr_div_two_p thm
R79029:79045 compcert.lib.Integers Make Zshiftr_div_two_p thm
R79068:79081 compcert.lib.Integers Make unsigned_range thm
R79068:79081 compcert.lib.Integers Make unsigned_range thm
prf 79108:79116 Make divu_pow2
R79163:79168 Coq.Init.Logic <> :type_scope:x_'->'_x not
R79177:79179 Coq.Init.Logic <> :type_scope:x_'='_x not
R79169:79172 compcert.lib.Integers Make divu def
R79176:79176 compcert.lib.Integers <> n var
R79174:79174 compcert.lib.Integers <> x var
R79180:79183 compcert.lib.Integers Make shru def
R79187:79190 compcert.lib.Integers <> logn var
R79185:79185 compcert.lib.Integers <> x var
R79151:79153 Coq.Init.Logic <> :type_scope:x_'='_x not
R79140:79148 compcert.lib.Integers Make is_power2 def
R79150:79150 compcert.lib.Integers <> n var
R79154:79157 Coq.Init.Datatypes <> Some constr
R79159:79162 compcert.lib.Integers <> logn var
R79222:79238 compcert.lib.Integers Make is_power2_correct thm
R79222:79238 compcert.lib.Integers Make is_power2_correct thm
R79277:79280 compcert.lib.Integers Make divu def
R79301:79314 compcert.lib.Integers Make shru_div_two_p thm
R79301:79314 compcert.lib.Integers Make shru_div_two_p thm
prf 79394:79406 Make shr_div_two_p
R79432:79434 Coq.Init.Logic <> :type_scope:x_'='_x not
R79425:79427 compcert.lib.Integers Make shr def
R79431:79431 compcert.lib.Integers <> y var
R79429:79429 compcert.lib.Integers <> x var
R79435:79438 compcert.lib.Integers Make repr def
R79449:79451 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R79441:79446 compcert.lib.Integers Make signed def
R79448:79448 compcert.lib.Integers <> x var
R79452:79456 Coq.ZArith.Zpower <> two_p def
R79459:79466 compcert.lib.Integers Make unsigned def
R79468:79468 compcert.lib.Integers <> y var
R79497:79499 compcert.lib.Integers Make shr def
R79512:79528 compcert.lib.Integers Make Zshiftr_div_two_p thm
R79512:79528 compcert.lib.Integers Make Zshiftr_div_two_p thm
R79512:79528 compcert.lib.Integers Make Zshiftr_div_two_p thm
R79512:79528 compcert.lib.Integers Make Zshiftr_div_two_p thm
R79551:79564 compcert.lib.Integers Make unsigned_range thm
R79551:79564 compcert.lib.Integers Make unsigned_range thm
prf 79591:79599 Make divs_pow2
R79646:79651 Coq.Init.Logic <> :type_scope:x_'->'_x not
R79660:79662 Coq.Init.Logic <> :type_scope:x_'='_x not
R79652:79655 compcert.lib.Integers Make divs def
R79659:79659 compcert.lib.Integers <> n var
R79657:79657 compcert.lib.Integers <> x var
R79663:79666 compcert.lib.Integers Make shrx def
R79670:79673 compcert.lib.Integers <> logn var
R79668:79668 compcert.lib.Integers <> x var
R79634:79636 Coq.Init.Logic <> :type_scope:x_'='_x not
R79623:79631 compcert.lib.Integers Make is_power2 def
R79633:79633 compcert.lib.Integers <> n var
R79637:79640 Coq.Init.Datatypes <> Some constr
R79642:79645 compcert.lib.Integers <> logn var
R79705:79721 compcert.lib.Integers Make is_power2_correct thm
R79705:79721 compcert.lib.Integers Make is_power2_correct thm
R79747:79750 compcert.lib.Integers Make shrx def
R79761:79773 compcert.lib.Integers Make shl_mul_two_p thm
R79761:79773 compcert.lib.Integers Make shl_mul_two_p thm
R79761:79773 compcert.lib.Integers Make shl_mul_two_p thm
R79786:79795 compcert.lib.Integers Make mul_commut thm
R79786:79795 compcert.lib.Integers Make mul_commut thm
R79786:79795 compcert.lib.Integers Make mul_commut thm
R79806:79812 compcert.lib.Integers Make mul_one thm
R79806:79812 compcert.lib.Integers Make mul_one thm
R79806:79812 compcert.lib.Integers Make mul_one thm
R79840:79852 compcert.lib.Integers Make repr_unsigned thm
R79840:79852 compcert.lib.Integers Make repr_unsigned thm
R79840:79852 compcert.lib.Integers Make repr_unsigned thm
prf 79934:79951 Make Ztestbit_mod_two_p
R79978:79981 Coq.Init.Logic <> :type_scope:x_'->'_x not
R79988:79993 Coq.Init.Logic <> :type_scope:x_'->'_x not
R80023:80025 Coq.Init.Logic <> :type_scope:x_'='_x not
R79994:80002 Coq.ZArith.BinInt Z testbit def
R80022:80022 compcert.lib.Integers <> i var
R80006:80011 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80019:80019 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80005:80005 compcert.lib.Integers <> x var
R80012:80016 Coq.ZArith.Zpower <> two_p def
R80018:80018 compcert.lib.Integers <> n var
R80029:80031 compcert.lib.Coqlib <> zlt def
R80035:80035 compcert.lib.Integers <> n var
R80033:80033 compcert.lib.Integers <> i var
R80061:80065 Coq.Init.Datatypes <> false constr
R80042:80050 Coq.ZArith.BinInt Z testbit def
R80054:80054 compcert.lib.Integers <> i var
R80052:80052 compcert.lib.Integers <> x var
R79983:79986 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R79987:79987 compcert.lib.Integers <> i var
R79973:79976 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R79977:79977 compcert.lib.Integers <> n var
R80128:80138 Coq.ZArith.Wf_Z <> natlike_ind thm
R80128:80138 Coq.ZArith.Wf_Z <> natlike_ind thm
R80167:80171 Coq.ZArith.Zpower <> two_p def
R80167:80171 Coq.ZArith.Zpower <> two_p def
R80192:80199 Coq.ZArith.Zdiv <> Zmod_1_r thm
R80192:80199 Coq.ZArith.Zdiv <> Zmod_1_r thm
R80192:80199 Coq.ZArith.Zdiv <> Zmod_1_r thm
R80210:80222 Coq.ZArith.BinInt Z testbit_0_l thm
R80210:80222 Coq.ZArith.BinInt Z testbit_0_l thm
R80210:80222 Coq.ZArith.BinInt Z testbit_0_l thm
R80237:80245 compcert.lib.Coqlib <> zlt_false thm
R80237:80245 compcert.lib.Coqlib <> zlt_false thm
R80237:80245 compcert.lib.Coqlib <> zlt_false thm
R80237:80245 compcert.lib.Coqlib <> zlt_false thm
R80281:80287 Coq.ZArith.Zpower <> two_p_S thm
R80281:80287 Coq.ZArith.Zpower <> two_p_S thm
R80281:80287 Coq.ZArith.Zpower <> two_p_S thm
R80281:80287 Coq.ZArith.Zpower <> two_p_S thm
R80311:80316 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80328:80328 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80318:80320 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R80321:80325 Coq.ZArith.Zpower <> two_p def
R80344:80351 compcert.lib.Integers Make Zshiftin def
R80374:80378 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80365:80370 Coq.ZArith.BinInt Z div2 def
R80379:80383 Coq.ZArith.Zpower <> two_p def
R80354:80358 Coq.ZArith.BinInt Z odd def
R80344:80351 compcert.lib.Integers Make Zshiftin def
R80374:80378 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80365:80370 Coq.ZArith.BinInt Z div2 def
R80379:80383 Coq.ZArith.Zpower <> two_p def
R80354:80358 Coq.ZArith.BinInt Z odd def
R80311:80316 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80328:80328 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80318:80320 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R80321:80325 Coq.ZArith.Zpower <> two_p def
R80402:80417 compcert.lib.Integers Make Ztestbit_shiftin thm
R80402:80417 compcert.lib.Integers Make Ztestbit_shiftin thm
R80402:80417 compcert.lib.Integers Make Ztestbit_shiftin thm
R80402:80417 compcert.lib.Integers Make Ztestbit_shiftin thm
R80435:80445 compcert.lib.Integers Make Ztestbit_eq thm
R80435:80445 compcert.lib.Integers Make Ztestbit_eq thm
R80435:80445 compcert.lib.Integers Make Ztestbit_eq thm
R80435:80445 compcert.lib.Integers Make Ztestbit_eq thm
R80470:80472 compcert.lib.Coqlib <> zeq def
R80470:80472 compcert.lib.Coqlib <> zeq def
R80494:80501 compcert.lib.Coqlib <> zlt_true thm
R80494:80501 compcert.lib.Coqlib <> zlt_true thm
R80494:80501 compcert.lib.Coqlib <> zlt_true thm
R80494:80501 compcert.lib.Coqlib <> zlt_true thm
R80545:80547 compcert.lib.Coqlib <> zlt def
R80550:80555 Coq.ZArith.BinInt Z pred def
R80545:80547 compcert.lib.Coqlib <> zlt def
R80550:80555 Coq.ZArith.BinInt Z pred def
R80580:80587 compcert.lib.Coqlib <> zlt_true thm
R80580:80587 compcert.lib.Coqlib <> zlt_true thm
R80580:80587 compcert.lib.Coqlib <> zlt_true thm
R80580:80587 compcert.lib.Coqlib <> zlt_true thm
R80619:80627 compcert.lib.Coqlib <> zlt_false thm
R80619:80627 compcert.lib.Coqlib <> zlt_false thm
R80619:80627 compcert.lib.Coqlib <> zlt_false thm
R80619:80627 compcert.lib.Coqlib <> zlt_false thm
R80673:80679 compcert.lib.Integers Make Zdecomp thm
R80673:80679 compcert.lib.Integers Make Zdecomp thm
R80673:80679 compcert.lib.Integers Make Zdecomp thm
R80702:80707 Coq.ZArith.BinInt Z div2 def
R80702:80707 Coq.ZArith.BinInt Z div2 def
R80756:80758 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R80759:80763 Coq.ZArith.Zpower <> two_p def
R80736:80746 compcert.lib.Coqlib <> Zmod_unique thm
R80756:80758 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R80759:80763 Coq.ZArith.Zpower <> two_p def
R80736:80746 compcert.lib.Coqlib <> Zmod_unique thm
R80784:80796 compcert.lib.Integers Make Zshiftin_spec thm
R80784:80796 compcert.lib.Integers Make Zshiftin_spec thm
R80784:80796 compcert.lib.Integers Make Zshiftin_spec thm
R80784:80796 compcert.lib.Integers Make Zshiftin_spec thm
R80784:80796 compcert.lib.Integers Make Zshiftin_spec thm
R80807:80817 Coq.ZArith.BinInt <> Zplus_assoc syndef
R80807:80817 Coq.ZArith.BinInt <> Zplus_assoc syndef
R80807:80817 Coq.ZArith.BinInt <> Zplus_assoc syndef
R80850:80853 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R80895:80895 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R80878:80880 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R80861:80864 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R80877:80877 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R80854:80858 Coq.ZArith.Zpower <> two_p def
R80867:80869 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R80870:80874 Coq.ZArith.Zpower <> two_p def
R80883:80887 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80888:80892 Coq.ZArith.Zpower <> two_p def
R80850:80853 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R80895:80895 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R80878:80880 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R80861:80864 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R80877:80877 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R80854:80858 Coq.ZArith.Zpower <> two_p def
R80867:80869 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R80870:80874 Coq.ZArith.Zpower <> two_p def
R80883:80887 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80888:80892 Coq.ZArith.Zpower <> two_p def
R80920:80931 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R80920:80931 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R80940:80952 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R80940:80952 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R80987:80999 compcert.lib.Integers Make Zshiftin_spec thm
R80987:80999 compcert.lib.Integers Make Zshiftin_spec thm
R80987:80999 compcert.lib.Integers Make Zshiftin_spec thm
R81011:81018 Coq.ZArith.Zdiv <> Z_mod_lt thm
R81024:81028 Coq.ZArith.Zpower <> two_p def
R81011:81018 Coq.ZArith.Zdiv <> Z_mod_lt thm
R81024:81028 Coq.ZArith.Zpower <> two_p def
R81041:81053 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R81041:81053 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R81078:81082 Coq.ZArith.BinInt Z odd def
R81078:81082 Coq.ZArith.BinInt Z odd def
prf 81112:81128 Make Ztestbit_two_p_m1
R81151:81154 Coq.Init.Logic <> :type_scope:x_'->'_x not
R81161:81166 Coq.Init.Logic <> :type_scope:x_'->'_x not
R81192:81194 Coq.Init.Logic <> :type_scope:x_'='_x not
R81167:81175 Coq.ZArith.BinInt Z testbit def
R81191:81191 compcert.lib.Integers <> i var
R81185:81187 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R81178:81182 Coq.ZArith.Zpower <> two_p def
R81184:81184 compcert.lib.Integers <> n var
R81198:81200 compcert.lib.Coqlib <> zlt def
R81204:81204 compcert.lib.Integers <> n var
R81202:81202 compcert.lib.Integers <> i var
R81221:81225 Coq.Init.Datatypes <> false constr
R81211:81214 Coq.Init.Datatypes <> true constr
R81156:81159 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R81160:81160 compcert.lib.Integers <> i var
R81146:81149 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R81150:81150 compcert.lib.Integers <> n var
R81261:81263 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R81254:81258 Coq.ZArith.Zpower <> two_p def
R81273:81273 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R81276:81282 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R81290:81290 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R81283:81287 Coq.ZArith.Zpower <> two_p def
R81273:81273 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R81276:81282 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R81290:81290 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R81283:81287 Coq.ZArith.Zpower <> two_p def
R81261:81263 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R81254:81258 Coq.ZArith.Zpower <> two_p def
R81304:81321 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R81304:81321 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R81304:81321 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R81304:81321 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R81304:81321 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R81340:81342 compcert.lib.Coqlib <> zlt def
R81340:81342 compcert.lib.Coqlib <> zlt def
R81362:81372 compcert.lib.Integers Make Ztestbit_m1 thm
R81362:81372 compcert.lib.Integers Make Ztestbit_m1 thm
R81389:81399 compcert.lib.Coqlib <> Zmod_unique thm
R81389:81399 compcert.lib.Coqlib <> Zmod_unique thm
R81429:81441 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R81429:81441 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 81474:81481 Make modu_and
R81528:81533 Coq.Init.Logic <> :type_scope:x_'->'_x not
R81542:81544 Coq.Init.Logic <> :type_scope:x_'='_x not
R81534:81537 compcert.lib.Integers Make modu def
R81541:81541 compcert.lib.Integers <> n var
R81539:81539 compcert.lib.Integers <> x var
R81545:81547 compcert.lib.Integers Make and def
R81552:81554 compcert.lib.Integers Make sub def
R81558:81560 compcert.lib.Integers Make one def
R81556:81556 compcert.lib.Integers <> n var
R81549:81549 compcert.lib.Integers <> x var
R81516:81518 Coq.Init.Logic <> :type_scope:x_'='_x not
R81505:81513 compcert.lib.Integers Make is_power2 def
R81515:81515 compcert.lib.Integers <> n var
R81519:81522 Coq.Init.Datatypes <> Some constr
R81524:81527 compcert.lib.Integers <> logn var
R81593:81609 compcert.lib.Integers Make is_power2_correct thm
R81593:81609 compcert.lib.Integers Make is_power2_correct thm
R81640:81652 compcert.lib.Integers Make is_power2_rng thm
R81640:81652 compcert.lib.Integers Make is_power2_rng thm
R81677:81688 compcert.lib.Integers Make same_bits_eq thm
R81677:81688 compcert.lib.Integers Make same_bits_eq thm
R81709:81716 compcert.lib.Integers Make bits_and thm
R81709:81716 compcert.lib.Integers Make bits_and thm
R81709:81716 compcert.lib.Integers Make bits_and thm
R81709:81716 compcert.lib.Integers Make bits_and thm
R81734:81736 compcert.lib.Integers Make sub def
R81747:81758 compcert.lib.Integers Make testbit_repr thm
R81747:81758 compcert.lib.Integers Make testbit_repr thm
R81747:81758 compcert.lib.Integers Make testbit_repr thm
R81747:81758 compcert.lib.Integers Make testbit_repr thm
R81789:81800 compcert.lib.Integers Make unsigned_one thm
R81789:81800 compcert.lib.Integers Make unsigned_one thm
R81789:81800 compcert.lib.Integers Make unsigned_one thm
R81812:81815 compcert.lib.Integers Make modu def
R81826:81837 compcert.lib.Integers Make testbit_repr thm
R81826:81837 compcert.lib.Integers Make testbit_repr thm
R81826:81837 compcert.lib.Integers Make testbit_repr thm
R81826:81837 compcert.lib.Integers Make testbit_repr thm
R81868:81885 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R81868:81885 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R81868:81885 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R81868:81885 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R81868:81885 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R81896:81912 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R81896:81912 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R81896:81912 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R81896:81912 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R81896:81912 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R81927:81929 compcert.lib.Coqlib <> zlt def
R81934:81941 compcert.lib.Integers Make unsigned def
R81927:81929 compcert.lib.Coqlib <> zlt def
R81934:81941 compcert.lib.Integers Make unsigned def
R81961:81971 Coq.Bool.Bool <> andb_true_r thm
R81961:81971 Coq.Bool.Bool <> andb_true_r thm
R81961:81971 Coq.Bool.Bool <> andb_true_r thm
R81990:82001 Coq.Bool.Bool <> andb_false_r thm
R81990:82001 Coq.Bool.Bool <> andb_false_r thm
R81990:82001 Coq.Bool.Bool <> andb_false_r thm
prf 82118:82127 Make Zquot_Zdiv
R82151:82156 Coq.Init.Logic <> :type_scope:x_'->'_x not
R82167:82169 Coq.Init.Logic <> :type_scope:x_'='_x not
R82157:82162 Coq.ZArith.BinInt Z quot def
R82166:82166 compcert.lib.Integers <> y var
R82164:82164 compcert.lib.Integers <> x var
R82173:82175 compcert.lib.Coqlib <> zlt def
R82177:82177 compcert.lib.Integers <> x var
R82208:82210 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R82207:82207 compcert.lib.Integers <> x var
R82211:82211 compcert.lib.Integers <> y var
R82186:82186 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R82196:82199 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R82192:82194 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82188:82190 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82187:82187 compcert.lib.Integers <> x var
R82191:82191 compcert.lib.Integers <> y var
R82200:82200 compcert.lib.Integers <> y var
R82147:82149 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R82146:82146 compcert.lib.Integers <> y var
R82241:82243 compcert.lib.Coqlib <> zlt def
R82241:82243 compcert.lib.Coqlib <> zlt def
R82312:82315 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82321:82321 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82295:82295 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82305:82310 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82301:82303 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82297:82299 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82317:82319 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82271:82287 Coq.ZArith.Zquot <> Zquot_unique_full thm
R82312:82315 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82321:82321 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82295:82295 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82305:82310 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82301:82303 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82297:82299 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82317:82319 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82271:82287 Coq.ZArith.Zquot <> Zquot_unique_full thm
R82374:82381 Coq.ZArith.Zdiv <> Z_mod_lt thm
R82389:82391 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82385:82387 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82374:82381 Coq.ZArith.Zdiv <> Z_mod_lt thm
R82389:82391 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82385:82387 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82420:82427 Coq.ZArith.BinInt Z abs_eq thm
R82420:82427 Coq.ZArith.BinInt Z abs_eq thm
R82420:82427 Coq.ZArith.BinInt Z abs_eq thm
R82420:82427 Coq.ZArith.BinInt Z abs_eq thm
R82465:82465 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82507:82511 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82515:82515 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82487:82489 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82467:82470 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R82486:82486 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R82471:82471 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R82481:82484 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R82477:82479 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82473:82475 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82490:82490 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82500:82505 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82496:82498 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82492:82494 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82513:82513 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82465:82465 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82507:82511 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82515:82515 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82487:82489 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82467:82470 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R82486:82486 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R82471:82471 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R82481:82484 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R82477:82479 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82473:82475 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82490:82490 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82500:82505 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82496:82498 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82492:82494 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82513:82513 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82537:82548 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R82537:82548 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R82537:82548 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R82537:82548 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R82579:82592 Coq.ZArith.Zquot <> Zquot_Zdiv_pos thm
R82579:82592 Coq.ZArith.Zquot <> Zquot_Zdiv_pos thm
prf 82616:82623 Make shrx_shr
R82677:82682 Coq.Init.Logic <> :type_scope:x_'->'_x not
R82691:82693 Coq.Init.Logic <> :type_scope:x_'='_x not
R82683:82686 compcert.lib.Integers Make shrx def
R82690:82690 compcert.lib.Integers <> y var
R82688:82688 compcert.lib.Integers <> x var
R82694:82696 compcert.lib.Integers Make shr def
R82753:82753 compcert.lib.Integers <> y var
R82702:82703 compcert.lib.Integers Make lt def
R82707:82710 compcert.lib.Integers Make zero def
R82705:82705 compcert.lib.Integers <> x var
R82750:82750 compcert.lib.Integers <> x var
R82717:82719 compcert.lib.Integers Make add def
R82724:82726 compcert.lib.Integers Make sub def
R82740:82742 compcert.lib.Integers Make one def
R82729:82731 compcert.lib.Integers Make shl def
R82737:82737 compcert.lib.Integers <> y var
R82733:82735 compcert.lib.Integers Make one def
R82721:82721 compcert.lib.Integers <> x var
R82670:82672 Coq.Init.Logic <> :type_scope:x_'='_x not
R82642:82644 compcert.lib.Integers Make ltu def
R82649:82652 compcert.lib.Integers Make repr def
R82664:82666 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82655:82663 compcert.lib.Integers Make zwordsize def
R82646:82646 compcert.lib.Integers <> y var
R82673:82676 Coq.Init.Datatypes <> true constr
R82786:82793 compcert.lib.Integers Make unsigned def
R82786:82793 compcert.lib.Integers Make unsigned def
R82810:82813 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R82816:82818 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R82828:82830 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82819:82827 compcert.lib.Integers Make zwordsize def
R82810:82813 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R82816:82818 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R82828:82830 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82819:82827 compcert.lib.Integers Make zwordsize def
R82851:82857 compcert.lib.Integers Make ltu_inv thm
R82851:82857 compcert.lib.Integers Make ltu_inv thm
R82875:82887 compcert.lib.Integers Make unsigned_repr thm
R82875:82887 compcert.lib.Integers Make unsigned_repr thm
R82875:82887 compcert.lib.Integers Make unsigned_repr thm
R82875:82887 compcert.lib.Integers Make unsigned_repr thm
R82911:82922 compcert.lib.Integers Make wordsize_pos thm
R82924:82944 compcert.lib.Integers Make wordsize_max_unsigned thm
R82911:82922 compcert.lib.Integers Make wordsize_pos thm
R82924:82944 compcert.lib.Integers Make wordsize_max_unsigned thm
R82964:82976 compcert.lib.Integers Make shr_div_two_p thm
R82964:82976 compcert.lib.Integers Make shr_div_two_p thm
R82964:82976 compcert.lib.Integers Make shr_div_two_p thm
R82986:82989 compcert.lib.Integers Make shrx def
R82999:83002 compcert.lib.Integers Make divs def
R83024:83026 Coq.Init.Logic <> :type_scope:x_'='_x not
R83015:83017 compcert.lib.Integers Make shl def
R83019:83021 compcert.lib.Integers Make one def
R83027:83030 compcert.lib.Integers Make repr def
R83033:83037 Coq.ZArith.Zpower <> two_p def
R83024:83026 Coq.Init.Logic <> :type_scope:x_'='_x not
R83015:83017 compcert.lib.Integers Make shl def
R83019:83021 compcert.lib.Integers Make one def
R83027:83030 compcert.lib.Integers Make repr def
R83033:83037 Coq.ZArith.Zpower <> two_p def
R83063:83065 compcert.lib.Integers Make mul def
R83072:83075 compcert.lib.Integers Make repr def
R83078:83082 Coq.ZArith.Zpower <> two_p def
R83067:83069 compcert.lib.Integers Make one def
R83063:83065 compcert.lib.Integers Make mul def
R83072:83075 compcert.lib.Integers Make repr def
R83078:83082 Coq.ZArith.Zpower <> two_p def
R83067:83069 compcert.lib.Integers Make one def
R83111:83118 compcert.lib.Integers Make mul_pow2 thm
R83111:83118 compcert.lib.Integers Make mul_pow2 thm
R83137:83140 compcert.lib.Integers Make repr def
R83137:83140 compcert.lib.Integers Make repr def
R83157:83171 compcert.lib.Integers Make is_power2_two_p thm
R83157:83171 compcert.lib.Integers Make is_power2_two_p thm
R83187:83199 compcert.lib.Integers Make repr_unsigned thm
R83187:83199 compcert.lib.Integers Make repr_unsigned thm
R83214:83223 compcert.lib.Integers Make mul_commut thm
R83214:83223 compcert.lib.Integers Make mul_commut thm
R83214:83223 compcert.lib.Integers Make mul_commut thm
R83232:83238 compcert.lib.Integers Make mul_one thm
R83232:83238 compcert.lib.Integers Make mul_one thm
R83259:83261 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R83251:83255 Coq.ZArith.Zpower <> two_p def
R83259:83261 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R83251:83255 Coq.ZArith.Zpower <> two_p def
R83272:83284 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R83272:83284 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R83312:83314 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R83304:83308 Coq.ZArith.Zpower <> two_p def
R83315:83326 compcert.lib.Integers Make half_modulus def
R83312:83314 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R83304:83308 Coq.ZArith.Zpower <> two_p def
R83315:83326 compcert.lib.Integers Make half_modulus def
R83342:83359 compcert.lib.Integers Make half_modulus_power thm
R83342:83359 compcert.lib.Integers Make half_modulus_power thm
R83342:83359 compcert.lib.Integers Make half_modulus_power thm
R83372:83392 compcert.lib.Coqlib <> two_p_monotone_strict thm
R83372:83392 compcert.lib.Coqlib <> two_p_monotone_strict thm
R83419:83421 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R83411:83415 Coq.ZArith.Zpower <> two_p def
R83422:83428 compcert.lib.Integers Make modulus def
R83419:83421 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R83411:83415 Coq.ZArith.Zpower <> two_p def
R83422:83428 compcert.lib.Integers Make modulus def
R83444:83456 compcert.lib.Integers Make modulus_power thm
R83444:83456 compcert.lib.Integers Make modulus_power thm
R83444:83456 compcert.lib.Integers Make modulus_power thm
R83465:83485 compcert.lib.Coqlib <> two_p_monotone_strict thm
R83465:83485 compcert.lib.Coqlib <> two_p_monotone_strict thm
R83525:83527 Coq.Init.Logic <> :type_scope:x_'='_x not
R83505:83512 compcert.lib.Integers Make unsigned def
R83515:83517 compcert.lib.Integers Make shl def
R83519:83521 compcert.lib.Integers Make one def
R83528:83532 Coq.ZArith.Zpower <> two_p def
R83525:83527 Coq.Init.Logic <> :type_scope:x_'='_x not
R83505:83512 compcert.lib.Integers Make unsigned def
R83515:83517 compcert.lib.Integers Make shl def
R83519:83521 compcert.lib.Integers Make one def
R83528:83532 Coq.ZArith.Zpower <> two_p def
R83561:83573 compcert.lib.Integers Make unsigned_repr thm
R83561:83573 compcert.lib.Integers Make unsigned_repr thm
R83583:83594 compcert.lib.Integers Make max_unsigned def
R83632:83634 Coq.Init.Logic <> :type_scope:x_'='_x not
R83614:83619 compcert.lib.Integers Make signed def
R83622:83624 compcert.lib.Integers Make shl def
R83626:83628 compcert.lib.Integers Make one def
R83635:83639 Coq.ZArith.Zpower <> two_p def
R83632:83634 Coq.Init.Logic <> :type_scope:x_'='_x not
R83614:83619 compcert.lib.Integers Make signed def
R83622:83624 compcert.lib.Integers Make shl def
R83626:83628 compcert.lib.Integers Make one def
R83635:83639 Coq.ZArith.Zpower <> two_p def
R83668:83678 compcert.lib.Integers Make signed_repr thm
R83668:83678 compcert.lib.Integers Make signed_repr thm
R83692:83701 compcert.lib.Integers Make max_signed def
R83715:83728 compcert.lib.Integers Make min_signed_neg thm
R83715:83728 compcert.lib.Integers Make min_signed_neg thm
R83762:83771 compcert.lib.Integers Make Zquot_Zdiv thm
R83762:83771 compcert.lib.Integers Make Zquot_Zdiv thm
R83762:83771 compcert.lib.Integers Make Zquot_Zdiv thm
R83762:83771 compcert.lib.Integers Make Zquot_Zdiv thm
R83789:83790 compcert.lib.Integers Make lt def
R83801:83811 compcert.lib.Integers Make signed_zero thm
R83801:83811 compcert.lib.Integers Make signed_zero thm
R83801:83811 compcert.lib.Integers Make signed_zero thm
R83826:83828 compcert.lib.Coqlib <> zlt def
R83831:83836 compcert.lib.Integers Make signed def
R83826:83828 compcert.lib.Coqlib <> zlt def
R83831:83836 compcert.lib.Integers Make signed def
R83861:83870 compcert.lib.Integers Make add_signed thm
R83861:83870 compcert.lib.Integers Make add_signed thm
R83861:83870 compcert.lib.Integers Make add_signed thm
R83911:83913 Coq.Init.Logic <> :type_scope:x_'='_x not
R83883:83888 compcert.lib.Integers Make signed def
R83891:83893 compcert.lib.Integers Make sub def
R83907:83909 compcert.lib.Integers Make one def
R83896:83898 compcert.lib.Integers Make shl def
R83900:83902 compcert.lib.Integers Make one def
R83922:83924 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R83914:83918 Coq.ZArith.Zpower <> two_p def
R83911:83913 Coq.Init.Logic <> :type_scope:x_'='_x not
R83883:83888 compcert.lib.Integers Make signed def
R83891:83893 compcert.lib.Integers Make sub def
R83907:83909 compcert.lib.Integers Make one def
R83896:83898 compcert.lib.Integers Make shl def
R83900:83902 compcert.lib.Integers Make one def
R83922:83924 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R83914:83918 Coq.ZArith.Zpower <> two_p def
R83940:83942 compcert.lib.Integers Make sub def
R83965:83976 compcert.lib.Integers Make unsigned_one thm
R83965:83976 compcert.lib.Integers Make unsigned_one thm
R83965:83976 compcert.lib.Integers Make unsigned_one thm
R83989:83999 compcert.lib.Integers Make signed_repr thm
R83989:83999 compcert.lib.Integers Make signed_repr thm
R84017:84030 compcert.lib.Integers Make min_signed_neg thm
R84017:84030 compcert.lib.Integers Make min_signed_neg thm
R84040:84049 compcert.lib.Integers Make max_signed def
R84081:84091 compcert.lib.Integers Make signed_repr thm
R84081:84091 compcert.lib.Integers Make signed_repr thm
R84081:84091 compcert.lib.Integers Make signed_repr thm
R84081:84091 compcert.lib.Integers Make signed_repr thm
R84133:84144 compcert.lib.Integers Make signed_range thm
R84133:84144 compcert.lib.Integers Make signed_range thm
R84180:84183 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R84176:84178 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R84168:84172 Coq.ZArith.Zpower <> two_p def
R84184:84193 compcert.lib.Integers Make max_signed def
R84180:84183 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R84176:84178 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R84168:84172 Coq.ZArith.Zpower <> two_p def
R84184:84193 compcert.lib.Integers Make max_signed def
R84204:84213 compcert.lib.Integers Make max_signed def
prf 84244:84253 Make shrx_shr_2
R84307:84312 Coq.Init.Logic <> :type_scope:x_'->'_x not
R84321:84323 Coq.Init.Logic <> :type_scope:x_'='_x not
R84313:84316 compcert.lib.Integers Make shrx def
R84320:84320 compcert.lib.Integers <> y var
R84318:84318 compcert.lib.Integers <> x var
R84324:84326 compcert.lib.Integers Make shr def
R84392:84392 compcert.lib.Integers <> y var
R84329:84331 compcert.lib.Integers Make add def
R84336:84339 compcert.lib.Integers Make shru def
R84373:84375 compcert.lib.Integers Make sub def
R84387:84387 compcert.lib.Integers <> y var
R84377:84385 compcert.lib.Integers Make iwordsize def
R84342:84344 compcert.lib.Integers Make shr def
R84349:84352 compcert.lib.Integers Make repr def
R84364:84366 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R84355:84363 compcert.lib.Integers Make zwordsize def
R84346:84346 compcert.lib.Integers <> x var
R84333:84333 compcert.lib.Integers <> x var
R84300:84302 Coq.Init.Logic <> :type_scope:x_'='_x not
R84272:84274 compcert.lib.Integers Make ltu def
R84279:84282 compcert.lib.Integers Make repr def
R84294:84296 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R84285:84293 compcert.lib.Integers Make zwordsize def
R84276:84276 compcert.lib.Integers <> y var
R84303:84306 Coq.Init.Datatypes <> true constr
R84422:84429 compcert.lib.Integers Make shrx_shr thm
R84422:84429 compcert.lib.Integers Make shrx_shr thm
R84422:84429 compcert.lib.Integers Make shrx_shr thm
R84459:84469 compcert.lib.Integers Make shr_lt_zero thm
R84459:84469 compcert.lib.Integers Make shr_lt_zero thm
R84459:84469 compcert.lib.Integers Make shr_lt_zero thm
R84482:84483 compcert.lib.Integers Make lt def
R84487:84490 compcert.lib.Integers Make zero def
R84482:84483 compcert.lib.Integers Make lt def
R84487:84490 compcert.lib.Integers Make zero def
R84507:84514 compcert.lib.Integers Make unsigned def
R84507:84514 compcert.lib.Integers Make unsigned def
R84534:84547 compcert.lib.Integers Make unsigned_range thm
R84534:84547 compcert.lib.Integers Make unsigned_range thm
R84581:84584 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R84587:84589 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R84599:84601 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R84590:84598 compcert.lib.Integers Make zwordsize def
R84581:84584 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R84587:84589 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R84599:84601 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R84590:84598 compcert.lib.Integers Make zwordsize def
R84622:84628 compcert.lib.Integers Make ltu_inv thm
R84622:84628 compcert.lib.Integers Make ltu_inv thm
R84646:84658 compcert.lib.Integers Make unsigned_repr thm
R84646:84658 compcert.lib.Integers Make unsigned_repr thm
R84646:84658 compcert.lib.Integers Make unsigned_repr thm
R84646:84658 compcert.lib.Integers Make unsigned_repr thm
R84682:84693 compcert.lib.Integers Make wordsize_pos thm
R84695:84715 compcert.lib.Integers Make wordsize_max_unsigned thm
R84682:84693 compcert.lib.Integers Make wordsize_pos thm
R84695:84715 compcert.lib.Integers Make wordsize_max_unsigned thm
R84743:84745 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R84735:84739 Coq.ZArith.Zpower <> two_p def
R84746:84752 compcert.lib.Integers Make modulus def
R84743:84745 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R84735:84739 Coq.ZArith.Zpower <> two_p def
R84746:84752 compcert.lib.Integers Make modulus def
R84768:84780 compcert.lib.Integers Make modulus_power thm
R84768:84780 compcert.lib.Integers Make modulus_power thm
R84768:84780 compcert.lib.Integers Make modulus_power thm
R84789:84809 compcert.lib.Coqlib <> two_p_monotone_strict thm
R84789:84809 compcert.lib.Coqlib <> two_p_monotone_strict thm
R84838:84850 compcert.lib.Integers Make shl_mul_two_p thm
R84838:84850 compcert.lib.Integers Make shl_mul_two_p thm
R84838:84850 compcert.lib.Integers Make shl_mul_two_p thm
R84870:84879 compcert.lib.Integers Make mul_commut thm
R84870:84879 compcert.lib.Integers Make mul_commut thm
R84870:84879 compcert.lib.Integers Make mul_commut thm
R84890:84896 compcert.lib.Integers Make mul_one thm
R84890:84896 compcert.lib.Integers Make mul_one thm
R84890:84896 compcert.lib.Integers Make mul_one thm
R84908:84910 compcert.lib.Integers Make sub def
R84921:84932 compcert.lib.Integers Make unsigned_one thm
R84921:84932 compcert.lib.Integers Make unsigned_one thm
R84921:84932 compcert.lib.Integers Make unsigned_one thm
R84943:84955 compcert.lib.Integers Make unsigned_repr thm
R84943:84955 compcert.lib.Integers Make unsigned_repr thm
R84943:84955 compcert.lib.Integers Make unsigned_repr thm
R84943:84955 compcert.lib.Integers Make unsigned_repr thm
R84968:84989 compcert.lib.Integers Make unsigned_repr_wordsize thm
R84968:84989 compcert.lib.Integers Make unsigned_repr_wordsize thm
R84968:84989 compcert.lib.Integers Make unsigned_repr_wordsize thm
R85009:85020 compcert.lib.Integers Make same_bits_eq thm
R85009:85020 compcert.lib.Integers Make same_bits_eq thm
R85039:85047 compcert.lib.Integers Make bits_shru thm
R85039:85047 compcert.lib.Integers Make bits_shru thm
R85039:85047 compcert.lib.Integers Make bits_shru thm
R85068:85079 compcert.lib.Integers Make testbit_repr thm
R85068:85079 compcert.lib.Integers Make testbit_repr thm
R85068:85079 compcert.lib.Integers Make testbit_repr thm
R85098:85114 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R85098:85114 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R85098:85114 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R85165:85185 compcert.lib.Integers Make wordsize_max_unsigned thm
R85136:85148 compcert.lib.Integers Make unsigned_repr thm
R85136:85148 compcert.lib.Integers Make unsigned_repr thm
R85165:85185 compcert.lib.Integers Make wordsize_max_unsigned thm
R85136:85148 compcert.lib.Integers Make unsigned_repr thm
R85208:85210 compcert.lib.Coqlib <> zlt def
R85208:85210 compcert.lib.Coqlib <> zlt def
R85229:85236 compcert.lib.Coqlib <> zlt_true thm
R85229:85236 compcert.lib.Coqlib <> zlt_true thm
R85229:85236 compcert.lib.Coqlib <> zlt_true thm
R85256:85264 compcert.lib.Integers Make bits_mone thm
R85256:85264 compcert.lib.Integers Make bits_mone thm
R85256:85264 compcert.lib.Integers Make bits_mone thm
R85292:85300 compcert.lib.Coqlib <> zlt_false thm
R85292:85300 compcert.lib.Coqlib <> zlt_false thm
R85292:85300 compcert.lib.Coqlib <> zlt_false thm
R85336:85338 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R85328:85332 Coq.ZArith.Zpower <> two_p def
R85352:85364 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R85336:85338 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R85328:85332 Coq.ZArith.Zpower <> two_p def
R85352:85364 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R85382:85393 compcert.lib.Integers Make max_unsigned def
R85414:85417 compcert.lib.Integers Make shru def
R85425:85427 compcert.lib.Integers Make sub def
R85429:85437 compcert.lib.Integers Make iwordsize def
R85419:85422 compcert.lib.Integers Make zero def
R85448:85451 compcert.lib.Integers Make zero def
R85448:85451 compcert.lib.Integers Make zero def
R85414:85417 compcert.lib.Integers Make shru def
R85425:85427 compcert.lib.Integers Make sub def
R85429:85437 compcert.lib.Integers Make iwordsize def
R85419:85422 compcert.lib.Integers Make zero def
R85464:85471 compcert.lib.Integers Make add_zero thm
R85464:85471 compcert.lib.Integers Make add_zero thm
R85464:85471 compcert.lib.Integers Make add_zero thm
R85503:85505 compcert.lib.Coqlib <> zlt def
R85540:85548 compcert.lib.Integers Make zwordsize def
R85509:85511 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R85512:85519 compcert.lib.Integers Make unsigned def
R85522:85524 compcert.lib.Integers Make sub def
R85526:85534 compcert.lib.Integers Make iwordsize def
R85503:85505 compcert.lib.Coqlib <> zlt def
R85540:85548 compcert.lib.Integers Make zwordsize def
R85509:85511 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R85512:85519 compcert.lib.Integers Make unsigned def
R85522:85524 compcert.lib.Integers Make sub def
R85526:85534 compcert.lib.Integers Make iwordsize def
prf 85570:85579 Make Zdiv_shift
R85601:85606 Coq.Init.Logic <> :type_scope:x_'->'_x not
R85624:85626 Coq.Init.Logic <> :type_scope:x_'='_x not
R85607:85607 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R85619:85622 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R85609:85612 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R85618:85618 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R85608:85608 compcert.lib.Integers <> x var
R85614:85616 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R85613:85613 compcert.lib.Integers <> y var
R85623:85623 compcert.lib.Integers <> y var
R85632:85634 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R85628:85630 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R85627:85627 compcert.lib.Integers <> x var
R85631:85631 compcert.lib.Integers <> y var
R85638:85640 compcert.lib.Coqlib <> zeq def
R85643:85646 Coq.ZArith.Zdiv <> Zmod syndef
R85650:85650 compcert.lib.Integers <> y var
R85648:85648 compcert.lib.Integers <> x var
R85597:85599 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R85596:85596 compcert.lib.Integers <> y var
R85699:85710 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R85699:85710 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R85732:85739 Coq.ZArith.Zdiv <> Z_mod_lt thm
R85732:85739 Coq.ZArith.Zdiv <> Z_mod_lt thm
R85762:85764 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R85762:85764 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R85780:85784 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85780:85784 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R85809:85811 compcert.lib.Coqlib <> zeq def
R85809:85811 compcert.lib.Coqlib <> zeq def
R85846:85848 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R85827:85837 compcert.lib.Coqlib <> Zdiv_unique thm
R85846:85848 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R85827:85837 compcert.lib.Coqlib <> Zdiv_unique thm
R85916:85918 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R85897:85907 compcert.lib.Coqlib <> Zdiv_unique thm
R85916:85918 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R85897:85907 compcert.lib.Coqlib <> Zdiv_unique thm
prf 85962:85971 Make shrx_carry
R86025:86030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R86039:86041 Coq.Init.Logic <> :type_scope:x_'='_x not
R86031:86034 compcert.lib.Integers Make shrx def
R86038:86038 compcert.lib.Integers <> y var
R86036:86036 compcert.lib.Integers <> x var
R86042:86044 compcert.lib.Integers Make add def
R86057:86065 compcert.lib.Integers Make shr_carry def
R86069:86069 compcert.lib.Integers <> y var
R86067:86067 compcert.lib.Integers <> x var
R86047:86049 compcert.lib.Integers Make shr def
R86053:86053 compcert.lib.Integers <> y var
R86051:86051 compcert.lib.Integers <> x var
R86018:86020 Coq.Init.Logic <> :type_scope:x_'='_x not
R85990:85992 compcert.lib.Integers Make ltu def
R85997:86000 compcert.lib.Integers Make repr def
R86012:86014 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86003:86011 compcert.lib.Integers Make zwordsize def
R85994:85994 compcert.lib.Integers <> y var
R86021:86024 Coq.Init.Datatypes <> true constr
R86098:86105 compcert.lib.Integers Make shrx_shr thm
R86098:86105 compcert.lib.Integers Make shrx_shr thm
R86098:86105 compcert.lib.Integers Make shrx_shr thm
R86098:86105 compcert.lib.Integers Make shrx_shr thm
R86121:86129 compcert.lib.Integers Make shr_carry def
R86141:86142 compcert.lib.Integers Make lt def
R86156:86161 compcert.lib.Integers Make signed def
R86156:86161 compcert.lib.Integers Make signed def
R86175:86185 compcert.lib.Integers Make signed_zero thm
R86175:86185 compcert.lib.Integers Make signed_zero thm
R86175:86185 compcert.lib.Integers Make signed_zero thm
R86200:86202 compcert.lib.Coqlib <> zlt def
R86200:86202 compcert.lib.Coqlib <> zlt def
R86231:86238 compcert.lib.Integers Make add_zero thm
R86231:86238 compcert.lib.Integers Make add_zero thm
R86231:86238 compcert.lib.Integers Make add_zero thm
R86260:86267 compcert.lib.Integers Make unsigned def
R86260:86267 compcert.lib.Integers Make unsigned def
R86284:86287 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R86290:86292 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R86302:86304 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86293:86301 compcert.lib.Integers Make zwordsize def
R86284:86287 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R86290:86292 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R86302:86304 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86293:86301 compcert.lib.Integers Make zwordsize def
R86325:86331 compcert.lib.Integers Make ltu_inv thm
R86325:86331 compcert.lib.Integers Make ltu_inv thm
R86349:86361 compcert.lib.Integers Make unsigned_repr thm
R86349:86361 compcert.lib.Integers Make unsigned_repr thm
R86349:86361 compcert.lib.Integers Make unsigned_repr thm
R86349:86361 compcert.lib.Integers Make unsigned_repr thm
R86385:86396 compcert.lib.Integers Make wordsize_pos thm
R86398:86418 compcert.lib.Integers Make wordsize_max_unsigned thm
R86385:86396 compcert.lib.Integers Make wordsize_pos thm
R86398:86418 compcert.lib.Integers Make wordsize_max_unsigned thm
R86447:86449 Coq.Init.Logic <> :type_scope:x_'='_x not
R86438:86440 compcert.lib.Integers Make shl def
R86442:86444 compcert.lib.Integers Make one def
R86450:86453 compcert.lib.Integers Make repr def
R86456:86460 Coq.ZArith.Zpower <> two_p def
R86447:86449 Coq.Init.Logic <> :type_scope:x_'='_x not
R86438:86440 compcert.lib.Integers Make shl def
R86442:86444 compcert.lib.Integers Make one def
R86450:86453 compcert.lib.Integers Make repr def
R86456:86460 Coq.ZArith.Zpower <> two_p def
R86480:86492 compcert.lib.Integers Make shl_mul_two_p thm
R86480:86492 compcert.lib.Integers Make shl_mul_two_p thm
R86480:86492 compcert.lib.Integers Make shl_mul_two_p thm
R86503:86512 compcert.lib.Integers Make mul_commut thm
R86503:86512 compcert.lib.Integers Make mul_commut thm
R86503:86512 compcert.lib.Integers Make mul_commut thm
R86521:86527 compcert.lib.Integers Make mul_one thm
R86521:86527 compcert.lib.Integers Make mul_one thm
R86567:86569 Coq.Init.Logic <> :type_scope:x_'='_x not
R86540:86542 compcert.lib.Integers Make and def
R86547:86549 compcert.lib.Integers Make sub def
R86563:86565 compcert.lib.Integers Make one def
R86552:86554 compcert.lib.Integers Make shl def
R86556:86558 compcert.lib.Integers Make one def
R86570:86573 compcert.lib.Integers Make modu def
R86578:86581 compcert.lib.Integers Make repr def
R86584:86588 Coq.ZArith.Zpower <> two_p def
R86567:86569 Coq.Init.Logic <> :type_scope:x_'='_x not
R86540:86542 compcert.lib.Integers Make and def
R86547:86549 compcert.lib.Integers Make sub def
R86563:86565 compcert.lib.Integers Make one def
R86552:86554 compcert.lib.Integers Make shl def
R86556:86558 compcert.lib.Integers Make one def
R86570:86573 compcert.lib.Integers Make modu def
R86578:86581 compcert.lib.Integers Make repr def
R86584:86588 Coq.ZArith.Zpower <> two_p def
R86629:86636 compcert.lib.Integers Make modu_and thm
R86629:86636 compcert.lib.Integers Make modu_and thm
R86668:86682 compcert.lib.Integers Make is_power2_two_p thm
R86668:86682 compcert.lib.Integers Make is_power2_two_p thm
R86668:86682 compcert.lib.Integers Make is_power2_two_p thm
R86668:86682 compcert.lib.Integers Make is_power2_two_p thm
R86704:86716 compcert.lib.Integers Make repr_unsigned thm
R86704:86716 compcert.lib.Integers Make repr_unsigned thm
R86704:86716 compcert.lib.Integers Make repr_unsigned thm
R86779:86791 compcert.lib.Integers Make shr_div_two_p thm
R86779:86791 compcert.lib.Integers Make shr_div_two_p thm
R86779:86791 compcert.lib.Integers Make shr_div_two_p thm
R86779:86791 compcert.lib.Integers Make shr_div_two_p thm
R86779:86791 compcert.lib.Integers Make shr_div_two_p thm
R86779:86791 compcert.lib.Integers Make shr_div_two_p thm
R86830:86832 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R86822:86826 Coq.ZArith.Zpower <> two_p def
R86830:86832 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R86822:86826 Coq.ZArith.Zpower <> two_p def
R86843:86855 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R86843:86855 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R86883:86885 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R86875:86879 Coq.ZArith.Zpower <> two_p def
R86886:86892 compcert.lib.Integers Make modulus def
R86883:86885 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R86875:86879 Coq.ZArith.Zpower <> two_p def
R86886:86892 compcert.lib.Integers Make modulus def
R86908:86920 compcert.lib.Integers Make modulus_power thm
R86908:86920 compcert.lib.Integers Make modulus_power thm
R86908:86920 compcert.lib.Integers Make modulus_power thm
R86929:86949 compcert.lib.Coqlib <> two_p_monotone_strict thm
R86929:86949 compcert.lib.Coqlib <> two_p_monotone_strict thm
R86977:86979 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R86969:86973 Coq.ZArith.Zpower <> two_p def
R86980:86991 compcert.lib.Integers Make half_modulus def
R86977:86979 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R86969:86973 Coq.ZArith.Zpower <> two_p def
R86980:86991 compcert.lib.Integers Make half_modulus def
R87007:87024 compcert.lib.Integers Make half_modulus_power thm
R87007:87024 compcert.lib.Integers Make half_modulus_power thm
R87007:87024 compcert.lib.Integers Make half_modulus_power thm
R87037:87057 compcert.lib.Coqlib <> two_p_monotone_strict thm
R87037:87057 compcert.lib.Coqlib <> two_p_monotone_strict thm
R87084:87086 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R87076:87080 Coq.ZArith.Zpower <> two_p def
R87087:87093 compcert.lib.Integers Make modulus def
R87084:87086 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R87076:87080 Coq.ZArith.Zpower <> two_p def
R87087:87093 compcert.lib.Integers Make modulus def
R87109:87121 compcert.lib.Integers Make modulus_power thm
R87109:87121 compcert.lib.Integers Make modulus_power thm
R87109:87121 compcert.lib.Integers Make modulus_power thm
R87130:87150 compcert.lib.Coqlib <> two_p_monotone_strict thm
R87130:87150 compcert.lib.Coqlib <> two_p_monotone_strict thm
R87195:87197 Coq.Init.Logic <> :type_scope:x_'='_x not
R87170:87172 compcert.lib.Integers Make sub def
R87192:87194 compcert.lib.Integers Make one def
R87175:87178 compcert.lib.Integers Make repr def
R87181:87185 Coq.ZArith.Zpower <> two_p def
R87198:87201 compcert.lib.Integers Make repr def
R87212:87214 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87204:87208 Coq.ZArith.Zpower <> two_p def
R87195:87197 Coq.Init.Logic <> :type_scope:x_'='_x not
R87170:87172 compcert.lib.Integers Make sub def
R87192:87194 compcert.lib.Integers Make one def
R87175:87178 compcert.lib.Integers Make repr def
R87181:87185 Coq.ZArith.Zpower <> two_p def
R87198:87201 compcert.lib.Integers Make repr def
R87212:87214 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87204:87208 Coq.ZArith.Zpower <> two_p def
R87231:87233 compcert.lib.Integers Make sub def
R87242:87253 compcert.lib.Integers Make eqm_samerepr thm
R87242:87253 compcert.lib.Integers Make eqm_samerepr thm
R87262:87268 compcert.lib.Integers Make eqm_sub thm
R87262:87268 compcert.lib.Integers Make eqm_sub thm
R87277:87283 compcert.lib.Integers Make eqm_sym thm
R87292:87308 compcert.lib.Integers Make eqm_unsigned_repr thm
R87277:87283 compcert.lib.Integers Make eqm_sym thm
R87292:87308 compcert.lib.Integers Make eqm_unsigned_repr thm
R87323:87334 compcert.lib.Integers Make unsigned_one thm
R87323:87334 compcert.lib.Integers Make unsigned_one thm
R87323:87334 compcert.lib.Integers Make unsigned_one thm
R87343:87350 compcert.lib.Integers Make eqm_refl thm
R87343:87350 compcert.lib.Integers Make eqm_refl thm
R87375:87384 compcert.lib.Integers Make add_signed thm
R87375:87384 compcert.lib.Integers Make add_signed thm
R87375:87384 compcert.lib.Integers Make add_signed thm
R87407:87417 compcert.lib.Integers Make signed_repr thm
R87428:87430 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87420:87424 Coq.ZArith.Zpower <> two_p def
R87407:87417 compcert.lib.Integers Make signed_repr thm
R87428:87430 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87420:87424 Coq.ZArith.Zpower <> two_p def
R87407:87417 compcert.lib.Integers Make signed_repr thm
R87428:87430 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87420:87424 Coq.ZArith.Zpower <> two_p def
R87407:87417 compcert.lib.Integers Make signed_repr thm
R87428:87430 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87420:87424 Coq.ZArith.Zpower <> two_p def
R87444:87454 compcert.lib.Integers Make signed_repr thm
R87444:87454 compcert.lib.Integers Make signed_repr thm
R87444:87454 compcert.lib.Integers Make signed_repr thm
R87444:87454 compcert.lib.Integers Make signed_repr thm
R87466:87469 compcert.lib.Integers Make modu def
R87480:87492 compcert.lib.Integers Make unsigned_repr thm
R87480:87492 compcert.lib.Integers Make unsigned_repr thm
R87480:87492 compcert.lib.Integers Make unsigned_repr thm
R87480:87492 compcert.lib.Integers Make unsigned_repr thm
R87504:87505 compcert.lib.Integers Make eq def
R87516:87528 compcert.lib.Integers Make unsigned_zero thm
R87516:87528 compcert.lib.Integers Make unsigned_zero thm
R87516:87528 compcert.lib.Integers Make unsigned_zero thm
R87539:87551 compcert.lib.Integers Make unsigned_repr thm
R87539:87551 compcert.lib.Integers Make unsigned_repr thm
R87539:87551 compcert.lib.Integers Make unsigned_repr thm
R87539:87551 compcert.lib.Integers Make unsigned_repr thm
R87587:87589 Coq.Init.Logic <> :type_scope:x_'='_x not
R87574:87578 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R87564:87571 compcert.lib.Integers Make unsigned def
R87579:87583 Coq.ZArith.Zpower <> two_p def
R87592:87596 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R87597:87601 Coq.ZArith.Zpower <> two_p def
R87587:87589 Coq.Init.Logic <> :type_scope:x_'='_x not
R87574:87578 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R87564:87571 compcert.lib.Integers Make unsigned def
R87579:87583 Coq.ZArith.Zpower <> two_p def
R87592:87596 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R87597:87601 Coq.ZArith.Zpower <> two_p def
R87618:87629 compcert.lib.Integers Make eqmod_mod_eq thm
R87618:87629 compcert.lib.Integers Make eqmod_mod_eq thm
R87663:87669 compcert.lib.Integers Make modulus def
R87644:87656 compcert.lib.Integers Make eqmod_divides thm
R87663:87669 compcert.lib.Integers Make modulus def
R87644:87656 compcert.lib.Integers Make eqmod_divides thm
R87681:87683 compcert.lib.Integers Make eqm def
R87681:87683 compcert.lib.Integers Make eqm def
R87703:87709 compcert.lib.Integers Make eqm_sym thm
R87703:87709 compcert.lib.Integers Make eqm_sym thm
R87718:87736 compcert.lib.Integers Make eqm_signed_unsigned thm
R87718:87736 compcert.lib.Integers Make eqm_signed_unsigned thm
R87750:87756 compcert.lib.Integers Make modulus def
R87767:87785 compcert.lib.Coqlib <> two_power_nat_two_p thm
R87767:87785 compcert.lib.Coqlib <> two_power_nat_two_p thm
R87767:87785 compcert.lib.Coqlib <> two_power_nat_two_p thm
R87800:87804 Coq.ZArith.Zpower <> two_p def
R87816:87818 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87807:87815 compcert.lib.Integers Make zwordsize def
R87800:87804 Coq.ZArith.Zpower <> two_p def
R87816:87818 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87807:87815 compcert.lib.Integers Make zwordsize def
R87836:87847 Coq.ZArith.Zpower <> two_p_is_exp thm
R87836:87847 Coq.ZArith.Zpower <> two_p_is_exp thm
R87836:87847 Coq.ZArith.Zpower <> two_p_is_exp thm
R87836:87847 Coq.ZArith.Zpower <> two_p_is_exp thm
R87836:87847 Coq.ZArith.Zpower <> two_p_is_exp thm
R87868:87876 compcert.lib.Integers Make zwordsize def
R87868:87876 compcert.lib.Integers Make zwordsize def
R87922:87931 compcert.lib.Integers Make Zdiv_shift thm
R87922:87931 compcert.lib.Integers Make Zdiv_shift thm
R87922:87931 compcert.lib.Integers Make Zdiv_shift thm
R87922:87931 compcert.lib.Integers Make Zdiv_shift thm
R87949:87951 compcert.lib.Integers Make add def
R87960:87971 compcert.lib.Integers Make eqm_samerepr thm
R87960:87971 compcert.lib.Integers Make eqm_samerepr thm
R87980:87986 compcert.lib.Integers Make eqm_add thm
R87980:87986 compcert.lib.Integers Make eqm_add thm
R87997:88013 compcert.lib.Integers Make eqm_unsigned_repr thm
R87997:88013 compcert.lib.Integers Make eqm_unsigned_repr thm
R88028:88030 compcert.lib.Coqlib <> zeq def
R88035:88039 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R88040:88044 Coq.ZArith.Zpower <> two_p def
R88028:88030 compcert.lib.Coqlib <> zeq def
R88035:88039 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R88040:88044 Coq.ZArith.Zpower <> two_p def
R88071:88083 compcert.lib.Integers Make unsigned_zero thm
R88071:88083 compcert.lib.Integers Make unsigned_zero thm
R88071:88083 compcert.lib.Integers Make unsigned_zero thm
R88092:88099 compcert.lib.Integers Make eqm_refl thm
R88092:88099 compcert.lib.Integers Make eqm_refl thm
R88112:88123 compcert.lib.Integers Make unsigned_one thm
R88112:88123 compcert.lib.Integers Make unsigned_one thm
R88112:88123 compcert.lib.Integers Make unsigned_one thm
R88132:88139 compcert.lib.Integers Make eqm_refl thm
R88132:88139 compcert.lib.Integers Make eqm_refl thm
R88156:88163 Coq.ZArith.Zdiv <> Z_mod_lt thm
R88179:88183 Coq.ZArith.Zpower <> two_p def
R88166:88173 compcert.lib.Integers Make unsigned def
R88156:88163 Coq.ZArith.Zdiv <> Z_mod_lt thm
R88179:88183 Coq.ZArith.Zpower <> two_p def
R88166:88173 compcert.lib.Integers Make unsigned def
R88201:88212 compcert.lib.Integers Make max_unsigned def
R88231:88242 compcert.lib.Integers Make max_unsigned def
R88266:88277 compcert.lib.Integers Make signed_range thm
R88266:88277 compcert.lib.Integers Make signed_range thm
R88321:88330 compcert.lib.Integers Make max_signed def
R88353:88366 compcert.lib.Integers Make min_signed_neg thm
R88353:88366 compcert.lib.Integers Make min_signed_neg thm
R88376:88385 compcert.lib.Integers Make max_signed def
prf 88453:88469 Make shr_shru_positive
R88501:88506 Coq.Init.Logic <> :type_scope:x_'->'_x not
R88514:88516 Coq.Init.Logic <> :type_scope:x_'='_x not
R88507:88509 compcert.lib.Integers Make shr def
R88513:88513 compcert.lib.Integers <> y var
R88511:88511 compcert.lib.Integers <> x var
R88517:88520 compcert.lib.Integers Make shru def
R88524:88524 compcert.lib.Integers <> y var
R88522:88522 compcert.lib.Integers <> x var
R88496:88499 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R88488:88493 compcert.lib.Integers Make signed def
R88495:88495 compcert.lib.Integers <> x var
R88554:88566 compcert.lib.Integers Make shr_div_two_p thm
R88554:88566 compcert.lib.Integers Make shr_div_two_p thm
R88554:88566 compcert.lib.Integers Make shr_div_two_p thm
R88577:88590 compcert.lib.Integers Make shru_div_two_p thm
R88577:88590 compcert.lib.Integers Make shru_div_two_p thm
R88577:88590 compcert.lib.Integers Make shru_div_two_p thm
R88603:88620 compcert.lib.Integers Make signed_eq_unsigned thm
R88603:88620 compcert.lib.Integers Make signed_eq_unsigned thm
R88603:88620 compcert.lib.Integers Make signed_eq_unsigned thm
R88603:88620 compcert.lib.Integers Make signed_eq_unsigned thm
R88635:88649 compcert.lib.Integers Make signed_positive thm
R88635:88649 compcert.lib.Integers Make signed_positive thm
prf 88670:88681 Make and_positive
R88711:88714 Coq.Init.Logic <> :type_scope:x_'->'_x not
R88731:88734 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R88715:88720 compcert.lib.Integers Make signed def
R88723:88725 compcert.lib.Integers Make and def
R88729:88729 compcert.lib.Integers <> y var
R88727:88727 compcert.lib.Integers <> x var
R88706:88709 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R88698:88703 compcert.lib.Integers Make signed def
R88705:88705 compcert.lib.Integers <> y var
R88775:88777 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R88765:88772 compcert.lib.Integers Make unsigned def
R88778:88789 compcert.lib.Integers Make half_modulus def
R88775:88777 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R88765:88772 compcert.lib.Integers Make unsigned def
R88778:88789 compcert.lib.Integers Make half_modulus def
R88801:88815 compcert.lib.Integers Make signed_positive thm
R88801:88815 compcert.lib.Integers Make signed_positive thm
R88801:88815 compcert.lib.Integers Make signed_positive thm
R88830:88839 compcert.lib.Integers Make max_signed def
R88868:88887 compcert.lib.Integers Make sign_bit_of_unsigned thm
R88868:88887 compcert.lib.Integers Make sign_bit_of_unsigned thm
R88901:88908 compcert.lib.Coqlib <> zlt_true thm
R88901:88908 compcert.lib.Coqlib <> zlt_true thm
R88901:88908 compcert.lib.Coqlib <> zlt_true thm
R88901:88908 compcert.lib.Coqlib <> zlt_true thm
R88941:88960 compcert.lib.Integers Make sign_bit_of_unsigned thm
R88963:88965 compcert.lib.Integers Make and def
R88941:88960 compcert.lib.Integers Make sign_bit_of_unsigned thm
R88963:88965 compcert.lib.Integers Make and def
R88982:88989 compcert.lib.Integers Make bits_and thm
R88982:88989 compcert.lib.Integers Make bits_and thm
R88982:88989 compcert.lib.Integers Make bits_and thm
R88982:88989 compcert.lib.Integers Make bits_and thm
R89013:89024 Coq.Bool.Bool <> andb_false_r thm
R89013:89024 Coq.Bool.Bool <> andb_false_r thm
R89013:89024 Coq.Bool.Bool <> andb_false_r thm
R89034:89039 compcert.lib.Integers Make signed def
R89054:89056 compcert.lib.Coqlib <> zlt def
R89079:89090 compcert.lib.Integers Make half_modulus def
R89059:89066 compcert.lib.Integers Make unsigned def
R89069:89071 compcert.lib.Integers Make and def
R89054:89056 compcert.lib.Coqlib <> zlt def
R89079:89090 compcert.lib.Integers Make half_modulus def
R89059:89066 compcert.lib.Integers Make unsigned def
R89069:89071 compcert.lib.Integers Make and def
R89116:89129 compcert.lib.Integers Make unsigned_range thm
R89132:89134 compcert.lib.Integers Make and def
R89116:89129 compcert.lib.Integers Make unsigned_range thm
R89132:89134 compcert.lib.Integers Make and def
R89177:89188 compcert.lib.Integers Make wordsize_pos thm
R89177:89188 compcert.lib.Integers Make wordsize_pos thm
prf 89212:89230 Make shr_and_is_shru_and
R89268:89271 Coq.Init.Logic <> :type_scope:x_'->'_x not
R89287:89289 Coq.Init.Logic <> :type_scope:x_'='_x not
R89272:89274 compcert.lib.Integers Make shr def
R89286:89286 compcert.lib.Integers <> z var
R89277:89279 compcert.lib.Integers Make and def
R89283:89283 compcert.lib.Integers <> y var
R89281:89281 compcert.lib.Integers <> x var
R89290:89293 compcert.lib.Integers Make shru def
R89305:89305 compcert.lib.Integers <> z var
R89296:89298 compcert.lib.Integers Make and def
R89302:89302 compcert.lib.Integers <> y var
R89300:89300 compcert.lib.Integers <> x var
R89260:89262 Coq.Init.Logic <> :type_scope:x_'='_x not
R89251:89252 compcert.lib.Integers Make lt def
R89256:89259 compcert.lib.Integers Make zero def
R89254:89254 compcert.lib.Integers <> y var
R89263:89267 Coq.Init.Datatypes <> false constr
R89331:89347 compcert.lib.Integers Make shr_shru_positive thm
R89331:89347 compcert.lib.Integers Make shr_shru_positive thm
R89356:89367 compcert.lib.Integers Make and_positive thm
R89356:89367 compcert.lib.Integers Make and_positive thm
R89379:89380 compcert.lib.Integers Make lt def
R89396:89406 compcert.lib.Integers Make signed_zero thm
R89396:89406 compcert.lib.Integers Make signed_zero thm
R89396:89406 compcert.lib.Integers Make signed_zero thm
R89424:89426 compcert.lib.Coqlib <> zlt def
R89429:89434 compcert.lib.Integers Make signed def
R89424:89426 compcert.lib.Coqlib <> zlt def
R89429:89434 compcert.lib.Integers Make signed def
prf 89541:89550 Make Ziter_base
R89579:89582 Coq.Init.Logic <> :type_scope:x_'->'_x not
R89583:89583 compcert.lib.Integers <> A var
R89578:89578 compcert.lib.Integers <> A var
R89595:89598 Coq.Init.Logic <> :type_scope:x_'->'_x not
R89611:89613 Coq.Init.Logic <> :type_scope:x_'='_x not
R89599:89604 Coq.ZArith.BinInt Z iter def
R89610:89610 compcert.lib.Integers <> x var
R89608:89608 compcert.lib.Integers <> f var
R89606:89606 compcert.lib.Integers <> n var
R89614:89614 compcert.lib.Integers <> x var
R89590:89593 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R89589:89589 compcert.lib.Integers <> n var
R89641:89646 Coq.ZArith.BinInt Z iter def
prf 89707:89716 Make Ziter_succ
R89745:89748 Coq.Init.Logic <> :type_scope:x_'->'_x not
R89749:89749 compcert.lib.Integers <> A var
R89744:89744 compcert.lib.Integers <> A var
R89763:89766 Coq.Init.Logic <> :type_scope:x_'->'_x not
R89788:89790 Coq.Init.Logic <> :type_scope:x_'='_x not
R89767:89772 Coq.ZArith.BinInt Z iter def
R89787:89787 compcert.lib.Integers <> x var
R89785:89785 compcert.lib.Integers <> f var
R89775:89780 Coq.ZArith.BinInt Z succ def
R89782:89782 compcert.lib.Integers <> n var
R89791:89791 compcert.lib.Integers <> f var
R89794:89799 Coq.ZArith.BinInt Z iter def
R89805:89805 compcert.lib.Integers <> x var
R89803:89803 compcert.lib.Integers <> f var
R89801:89801 compcert.lib.Integers <> n var
R89758:89761 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R89762:89762 compcert.lib.Integers <> n var
R89867:89877 Coq.PArith.BinPos Pos add_1_r thm
R89867:89877 Coq.PArith.BinPos Pos add_1_r thm
R89867:89877 Coq.PArith.BinPos Pos add_1_r thm
R89886:89898 Coq.PArith.BinPos Pos iter_succ thm
R89886:89898 Coq.PArith.BinPos Pos iter_succ thm
prf 89945:89956 Make Znatlike_ind
R89973:89976 Coq.Init.Logic <> :type_scope:x_'->'_x not
R89972:89972 Coq.Numbers.BinNums <> Z ind
R89986:89986 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90010:90016 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90017:90017 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90057:90063 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90074:90074 compcert.lib.Integers <> P var
R90076:90076 compcert.lib.Integers <> n var
R90034:90037 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90041:90044 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90045:90045 compcert.lib.Integers <> P var
R90048:90053 Coq.ZArith.BinInt Z succ def
R90055:90055 compcert.lib.Integers <> n var
R90038:90038 compcert.lib.Integers <> P var
R90040:90040 compcert.lib.Integers <> n var
R90029:90032 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R90033:90033 compcert.lib.Integers <> n var
R90003:90006 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90007:90007 compcert.lib.Integers <> P var
R90009:90009 compcert.lib.Integers <> n var
R89998:90001 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R89997:89997 compcert.lib.Integers <> n var
R90106:90108 compcert.lib.Coqlib <> zle def
R90106:90108 compcert.lib.Coqlib <> zle def
R90124:90134 Coq.ZArith.Wf_Z <> natlike_ind thm
R90124:90134 Coq.ZArith.Wf_Z <> natlike_ind thm
prf 90189:90202 Make Zzero_ext_spec
R90227:90232 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90260:90262 Coq.Init.Logic <> :type_scope:x_'='_x not
R90233:90241 Coq.ZArith.BinInt Z testbit def
R90259:90259 compcert.lib.Integers <> i var
R90244:90252 compcert.lib.Integers Make Zzero_ext def
R90256:90256 compcert.lib.Integers <> x var
R90254:90254 compcert.lib.Integers <> n var
R90266:90268 compcert.lib.Coqlib <> zlt def
R90272:90272 compcert.lib.Integers <> n var
R90270:90270 compcert.lib.Integers <> i var
R90298:90302 Coq.Init.Datatypes <> false constr
R90279:90287 Coq.ZArith.BinInt Z testbit def
R90291:90291 compcert.lib.Integers <> i var
R90289:90289 compcert.lib.Integers <> x var
R90222:90225 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R90226:90226 compcert.lib.Integers <> i var
R90321:90329 compcert.lib.Integers Make Zzero_ext def
R90350:90361 compcert.lib.Integers Make Znatlike_ind thm
R90350:90361 compcert.lib.Integers Make Znatlike_ind thm
R90384:90393 compcert.lib.Integers Make Ziter_base thm
R90384:90393 compcert.lib.Integers Make Ziter_base thm
R90384:90393 compcert.lib.Integers Make Ziter_base thm
R90384:90393 compcert.lib.Integers Make Ziter_base thm
R90414:90422 compcert.lib.Coqlib <> zlt_false thm
R90414:90422 compcert.lib.Coqlib <> zlt_false thm
R90414:90422 compcert.lib.Coqlib <> zlt_false thm
R90414:90422 compcert.lib.Coqlib <> zlt_false thm
R90433:90442 compcert.lib.Integers Make Ztestbit_0 thm
R90433:90442 compcert.lib.Integers Make Ztestbit_0 thm
R90433:90442 compcert.lib.Integers Make Ztestbit_0 thm
R90478:90487 compcert.lib.Integers Make Ziter_succ thm
R90478:90487 compcert.lib.Integers Make Ziter_succ thm
R90478:90487 compcert.lib.Integers Make Ziter_succ thm
R90478:90487 compcert.lib.Integers Make Ziter_succ thm
R90508:90523 compcert.lib.Integers Make Ztestbit_shiftin thm
R90508:90523 compcert.lib.Integers Make Ztestbit_shiftin thm
R90508:90523 compcert.lib.Integers Make Ztestbit_shiftin thm
R90508:90523 compcert.lib.Integers Make Ztestbit_shiftin thm
R90545:90555 compcert.lib.Integers Make Ztestbit_eq thm
R90545:90555 compcert.lib.Integers Make Ztestbit_eq thm
R90545:90555 compcert.lib.Integers Make Ztestbit_eq thm
R90545:90555 compcert.lib.Integers Make Ztestbit_eq thm
R90583:90585 compcert.lib.Coqlib <> zeq def
R90583:90585 compcert.lib.Coqlib <> zeq def
R90616:90623 compcert.lib.Coqlib <> zlt_true thm
R90616:90623 compcert.lib.Coqlib <> zlt_true thm
R90616:90623 compcert.lib.Coqlib <> zlt_true thm
R90616:90623 compcert.lib.Coqlib <> zlt_true thm
R90668:90670 compcert.lib.Coqlib <> zlt def
R90673:90678 Coq.ZArith.BinInt Z pred def
R90668:90670 compcert.lib.Coqlib <> zlt def
R90673:90678 Coq.ZArith.BinInt Z pred def
R90701:90708 compcert.lib.Coqlib <> zlt_true thm
R90701:90708 compcert.lib.Coqlib <> zlt_true thm
R90701:90708 compcert.lib.Coqlib <> zlt_true thm
R90701:90708 compcert.lib.Coqlib <> zlt_true thm
R90738:90746 compcert.lib.Coqlib <> zlt_false thm
R90738:90746 compcert.lib.Coqlib <> zlt_false thm
R90738:90746 compcert.lib.Coqlib <> zlt_false thm
R90738:90746 compcert.lib.Coqlib <> zlt_false thm
prf 90787:90799 Make bits_zero_ext
R90824:90829 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90854:90856 Coq.Init.Logic <> :type_scope:x_'='_x not
R90830:90836 compcert.lib.Integers Make testbit def
R90853:90853 compcert.lib.Integers <> i var
R90839:90846 compcert.lib.Integers Make zero_ext def
R90850:90850 compcert.lib.Integers <> x var
R90848:90848 compcert.lib.Integers <> n var
R90860:90862 compcert.lib.Coqlib <> zlt def
R90866:90866 compcert.lib.Integers <> n var
R90864:90864 compcert.lib.Integers <> i var
R90890:90894 Coq.Init.Datatypes <> false constr
R90873:90879 compcert.lib.Integers Make testbit def
R90883:90883 compcert.lib.Integers <> i var
R90881:90881 compcert.lib.Integers <> x var
R90819:90822 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R90823:90823 compcert.lib.Integers <> i var
R90921:90928 compcert.lib.Integers Make zero_ext def
R90941:90943 compcert.lib.Coqlib <> zlt def
R90947:90955 compcert.lib.Integers Make zwordsize def
R90941:90943 compcert.lib.Coqlib <> zlt def
R90947:90955 compcert.lib.Integers Make zwordsize def
R90969:90980 compcert.lib.Integers Make testbit_repr thm
R90969:90980 compcert.lib.Integers Make testbit_repr thm
R90969:90980 compcert.lib.Integers Make testbit_repr thm
R90969:90980 compcert.lib.Integers Make testbit_repr thm
R90997:91010 compcert.lib.Integers Make Zzero_ext_spec thm
R90997:91010 compcert.lib.Integers Make Zzero_ext_spec thm
R90997:91010 compcert.lib.Integers Make Zzero_ext_spec thm
R90997:91010 compcert.lib.Integers Make Zzero_ext_spec thm
R91036:91045 compcert.lib.Integers Make bits_above thm
R91036:91045 compcert.lib.Integers Make bits_above thm
R91036:91045 compcert.lib.Integers Make bits_above thm
R91036:91045 compcert.lib.Integers Make bits_above thm
R91036:91045 compcert.lib.Integers Make bits_above thm
R91036:91045 compcert.lib.Integers Make bits_above thm
R91036:91045 compcert.lib.Integers Make bits_above thm
R91064:91066 compcert.lib.Coqlib <> zlt def
R91064:91066 compcert.lib.Coqlib <> zlt def
prf 91092:91105 Make Zsign_ext_spec
R91130:91133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R91139:91144 Coq.Init.Logic <> :type_scope:x_'->'_x not
R91172:91174 Coq.Init.Logic <> :type_scope:x_'='_x not
R91145:91153 Coq.ZArith.BinInt Z testbit def
R91171:91171 compcert.lib.Integers <> i var
R91156:91164 compcert.lib.Integers Make Zsign_ext def
R91168:91168 compcert.lib.Integers <> x var
R91166:91166 compcert.lib.Integers <> n var
R91175:91183 Coq.ZArith.BinInt Z testbit def
R91191:91193 compcert.lib.Coqlib <> zlt def
R91197:91197 compcert.lib.Integers <> n var
R91195:91195 compcert.lib.Integers <> i var
R91212:91214 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R91211:91211 compcert.lib.Integers <> n var
R91204:91204 compcert.lib.Integers <> i var
R91185:91185 compcert.lib.Integers <> x var
R91135:91137 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R91138:91138 compcert.lib.Integers <> n var
R91125:91128 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R91129:91129 compcert.lib.Integers <> i var
R91284:91302 Coq.ZArith.Wf_Z <> Zlt_lower_bound_ind thm
R91284:91302 Coq.ZArith.Wf_Z <> Zlt_lower_bound_ind thm
R91330:91338 compcert.lib.Integers Make Zsign_ext def
R91363:91365 compcert.lib.Coqlib <> zeq def
R91363:91365 compcert.lib.Coqlib <> zeq def
R91413:91415 compcert.lib.Coqlib <> zlt def
R91413:91415 compcert.lib.Coqlib <> zlt def
R91458:91470 compcert.lib.Integers Make Ztestbit_base thm
R91458:91470 compcert.lib.Integers Make Ztestbit_base thm
R91458:91470 compcert.lib.Integers Make Ztestbit_base thm
R91489:91493 Coq.ZArith.BinInt Z odd def
R91489:91493 Coq.ZArith.BinInt Z odd def
R91512:91522 compcert.lib.Integers Make Ztestbit_m1 thm
R91512:91522 compcert.lib.Integers Make Ztestbit_m1 thm
R91543:91552 compcert.lib.Integers Make Ztestbit_0 thm
R91543:91552 compcert.lib.Integers Make Ztestbit_0 thm
R91571:91573 compcert.lib.Coqlib <> zlt def
R91571:91573 compcert.lib.Coqlib <> zlt def
R91605:91610 Coq.ZArith.BinInt Z pred def
R91605:91610 Coq.ZArith.BinInt Z pred def
R91633:91638 Coq.ZArith.BinInt Z succ def
R91641:91646 Coq.ZArith.BinInt Z pred def
R91633:91638 Coq.ZArith.BinInt Z succ def
R91641:91646 Coq.ZArith.BinInt Z pred def
R91668:91677 compcert.lib.Integers Make Ziter_succ thm
R91668:91677 compcert.lib.Integers Make Ziter_succ thm
R91668:91677 compcert.lib.Integers Make Ziter_succ thm
R91668:91677 compcert.lib.Integers Make Ziter_succ thm
R91688:91703 compcert.lib.Integers Make Ztestbit_shiftin thm
R91688:91703 compcert.lib.Integers Make Ztestbit_shiftin thm
R91688:91703 compcert.lib.Integers Make Ztestbit_shiftin thm
R91688:91703 compcert.lib.Integers Make Ztestbit_shiftin thm
R91722:91724 compcert.lib.Coqlib <> zeq def
R91722:91724 compcert.lib.Coqlib <> zeq def
R91757:91764 compcert.lib.Coqlib <> zlt_true thm
R91757:91764 compcert.lib.Coqlib <> zlt_true thm
R91757:91764 compcert.lib.Coqlib <> zlt_true thm
R91757:91764 compcert.lib.Coqlib <> zlt_true thm
R91775:91787 compcert.lib.Integers Make Ztestbit_base thm
R91775:91787 compcert.lib.Integers Make Ztestbit_base thm
R91775:91787 compcert.lib.Integers Make Ztestbit_base thm
R91843:91845 compcert.lib.Coqlib <> zlt def
R91859:91864 Coq.ZArith.BinInt Z pred def
R91848:91853 Coq.ZArith.BinInt Z pred def
R91843:91845 compcert.lib.Coqlib <> zlt def
R91859:91864 Coq.ZArith.BinInt Z pred def
R91848:91853 Coq.ZArith.BinInt Z pred def
R91887:91894 compcert.lib.Coqlib <> zlt_true thm
R91887:91894 compcert.lib.Coqlib <> zlt_true thm
R91887:91894 compcert.lib.Coqlib <> zlt_true thm
R91887:91894 compcert.lib.Coqlib <> zlt_true thm
R91906:91916 compcert.lib.Integers Make Ztestbit_eq thm
R91906:91916 compcert.lib.Integers Make Ztestbit_eq thm
R91906:91916 compcert.lib.Integers Make Ztestbit_eq thm
R91906:91916 compcert.lib.Integers Make Ztestbit_eq thm
R91939:91947 compcert.lib.Coqlib <> zeq_false thm
R91939:91947 compcert.lib.Coqlib <> zeq_false thm
R91939:91947 compcert.lib.Coqlib <> zeq_false thm
R91939:91947 compcert.lib.Coqlib <> zeq_false thm
R91979:91987 compcert.lib.Coqlib <> zlt_false thm
R91979:91987 compcert.lib.Coqlib <> zlt_false thm
R91979:91987 compcert.lib.Coqlib <> zlt_false thm
R91979:91987 compcert.lib.Coqlib <> zlt_false thm
R91999:92009 compcert.lib.Integers Make Ztestbit_eq thm
R92013:92015 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R91999:92009 compcert.lib.Integers Make Ztestbit_eq thm
R92013:92015 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R91999:92009 compcert.lib.Integers Make Ztestbit_eq thm
R92013:92015 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R91999:92009 compcert.lib.Integers Make Ztestbit_eq thm
R92013:92015 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R92032:92040 compcert.lib.Coqlib <> zeq_false thm
R92032:92040 compcert.lib.Coqlib <> zeq_false thm
R92032:92040 compcert.lib.Coqlib <> zeq_false thm
R92032:92040 compcert.lib.Coqlib <> zeq_false thm
prf 92182:92194 Make bits_sign_ext
R92231:92234 Coq.Init.Logic <> :type_scope:x_'->'_x not
R92240:92245 Coq.Init.Logic <> :type_scope:x_'->'_x not
R92270:92272 Coq.Init.Logic <> :type_scope:x_'='_x not
R92246:92252 compcert.lib.Integers Make testbit def
R92269:92269 compcert.lib.Integers <> i var
R92255:92262 compcert.lib.Integers Make sign_ext def
R92266:92266 compcert.lib.Integers <> x var
R92264:92264 compcert.lib.Integers <> n var
R92273:92279 compcert.lib.Integers Make testbit def
R92287:92289 compcert.lib.Coqlib <> zlt def
R92293:92293 compcert.lib.Integers <> n var
R92291:92291 compcert.lib.Integers <> i var
R92308:92310 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R92307:92307 compcert.lib.Integers <> n var
R92300:92300 compcert.lib.Integers <> i var
R92281:92281 compcert.lib.Integers <> x var
R92236:92238 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R92239:92239 compcert.lib.Integers <> n var
R92214:92217 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R92219:92221 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R92218:92218 compcert.lib.Integers <> i var
R92218:92218 compcert.lib.Integers <> i var
R92222:92230 compcert.lib.Integers Make zwordsize def
R92339:92346 compcert.lib.Integers Make sign_ext def
R92359:92370 compcert.lib.Integers Make testbit_repr thm
R92359:92370 compcert.lib.Integers Make testbit_repr thm
R92359:92370 compcert.lib.Integers Make testbit_repr thm
R92359:92370 compcert.lib.Integers Make testbit_repr thm
R92387:92400 compcert.lib.Integers Make Zsign_ext_spec thm
R92387:92400 compcert.lib.Integers Make Zsign_ext_spec thm
R92387:92400 compcert.lib.Integers Make Zsign_ext_spec thm
R92387:92400 compcert.lib.Integers Make Zsign_ext_spec thm
R92387:92400 compcert.lib.Integers Make Zsign_ext_spec thm
R92413:92415 compcert.lib.Coqlib <> zlt def
R92413:92415 compcert.lib.Coqlib <> zlt def
R92463:92475 compcert.lib.Integers Make bits_zero_ext thm
R92477:92489 compcert.lib.Integers Make bits_sign_ext thm
prf 92507:92520 Make zero_ext_above
R92551:92554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R92567:92569 Coq.Init.Logic <> :type_scope:x_'='_x not
R92555:92562 compcert.lib.Integers Make zero_ext def
R92566:92566 compcert.lib.Integers <> x var
R92564:92564 compcert.lib.Integers <> n var
R92570:92570 compcert.lib.Integers <> x var
R92538:92541 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R92537:92537 compcert.lib.Integers <> n var
R92542:92550 compcert.lib.Integers Make zwordsize def
R92596:92607 compcert.lib.Integers Make same_bits_eq thm
R92596:92607 compcert.lib.Integers Make same_bits_eq thm
R92628:92640 compcert.lib.Integers Make bits_zero_ext thm
R92628:92640 compcert.lib.Integers Make bits_zero_ext thm
R92628:92640 compcert.lib.Integers Make bits_zero_ext thm
R92628:92640 compcert.lib.Integers Make bits_zero_ext thm
R92649:92656 compcert.lib.Coqlib <> zlt_true thm
R92649:92656 compcert.lib.Coqlib <> zlt_true thm
prf 92687:92700 Make sign_ext_above
R92731:92734 Coq.Init.Logic <> :type_scope:x_'->'_x not
R92747:92749 Coq.Init.Logic <> :type_scope:x_'='_x not
R92735:92742 compcert.lib.Integers Make sign_ext def
R92746:92746 compcert.lib.Integers <> x var
R92744:92744 compcert.lib.Integers <> n var
R92750:92750 compcert.lib.Integers <> x var
R92718:92721 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R92717:92717 compcert.lib.Integers <> n var
R92722:92730 compcert.lib.Integers Make zwordsize def
R92776:92787 compcert.lib.Integers Make same_bits_eq thm
R92776:92787 compcert.lib.Integers Make same_bits_eq thm
R92807:92814 compcert.lib.Integers Make sign_ext def
R92825:92836 compcert.lib.Integers Make testbit_repr thm
R92825:92836 compcert.lib.Integers Make testbit_repr thm
R92825:92836 compcert.lib.Integers Make testbit_repr thm
R92825:92836 compcert.lib.Integers Make testbit_repr thm
R92855:92868 compcert.lib.Integers Make Zsign_ext_spec thm
R92855:92868 compcert.lib.Integers Make Zsign_ext_spec thm
R92855:92868 compcert.lib.Integers Make Zsign_ext_spec thm
R92855:92868 compcert.lib.Integers Make Zsign_ext_spec thm
R92855:92868 compcert.lib.Integers Make Zsign_ext_spec thm
R92879:92886 compcert.lib.Coqlib <> zlt_true thm
R92879:92886 compcert.lib.Coqlib <> zlt_true thm
R92879:92886 compcert.lib.Coqlib <> zlt_true thm
R92879:92886 compcert.lib.Coqlib <> zlt_true thm
prf 92930:92941 Make zero_ext_and
R92964:92967 Coq.Init.Logic <> :type_scope:x_'->'_x not
R92980:92982 Coq.Init.Logic <> :type_scope:x_'='_x not
R92968:92975 compcert.lib.Integers Make zero_ext def
R92979:92979 compcert.lib.Integers <> x var
R92977:92977 compcert.lib.Integers <> n var
R92983:92985 compcert.lib.Integers Make and def
R92990:92993 compcert.lib.Integers Make repr def
R93003:93005 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R92996:93000 Coq.ZArith.Zpower <> two_p def
R93002:93002 compcert.lib.Integers <> n var
R92987:92987 compcert.lib.Integers <> x var
R92959:92962 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R92963:92963 compcert.lib.Integers <> n var
R93039:93050 compcert.lib.Integers Make testbit_repr thm
R93039:93050 compcert.lib.Integers Make testbit_repr thm
R93039:93050 compcert.lib.Integers Make testbit_repr thm
R93039:93050 compcert.lib.Integers Make testbit_repr thm
R93067:93083 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R93067:93083 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R93067:93083 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R93067:93083 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R93067:93083 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R93109:93111 compcert.lib.Coqlib <> zlt def
R93109:93111 compcert.lib.Coqlib <> zlt def
R93129:93139 Coq.Bool.Bool <> andb_true_r thm
R93129:93139 Coq.Bool.Bool <> andb_true_r thm
R93129:93139 Coq.Bool.Bool <> andb_true_r thm
R93158:93169 Coq.Bool.Bool <> andb_false_r thm
R93158:93169 Coq.Bool.Bool <> andb_false_r thm
R93158:93169 Coq.Bool.Bool <> andb_false_r thm
prf 93201:93212 Make zero_ext_mod
R93247:93252 Coq.Init.Logic <> :type_scope:x_'->'_x not
R93276:93278 Coq.Init.Logic <> :type_scope:x_'='_x not
R93253:93260 compcert.lib.Integers Make unsigned def
R93263:93270 compcert.lib.Integers Make zero_ext def
R93274:93274 compcert.lib.Integers <> x var
R93272:93272 compcert.lib.Integers <> n var
R93279:93282 Coq.ZArith.Zdiv <> Zmod syndef
R93298:93302 Coq.ZArith.Zpower <> two_p def
R93304:93304 compcert.lib.Integers <> n var
R93285:93292 compcert.lib.Integers Make unsigned def
R93294:93294 compcert.lib.Integers <> x var
R93230:93233 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R93235:93237 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R93234:93234 compcert.lib.Integers <> n var
R93234:93234 compcert.lib.Integers <> n var
R93238:93246 compcert.lib.Integers Make zwordsize def
R93331:93345 compcert.lib.Integers Make equal_same_bits thm
R93331:93345 compcert.lib.Integers Make equal_same_bits thm
R93366:93383 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R93366:93383 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R93366:93383 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R93366:93383 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R93366:93383 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R93400:93406 compcert.lib.Integers Make testbit def
R93409:93416 compcert.lib.Integers Make zero_ext def
R93400:93406 compcert.lib.Integers Make testbit def
R93409:93416 compcert.lib.Integers Make zero_ext def
R93439:93441 compcert.lib.Coqlib <> zlt def
R93445:93453 compcert.lib.Integers Make zwordsize def
R93439:93441 compcert.lib.Coqlib <> zlt def
R93445:93453 compcert.lib.Integers Make zwordsize def
R93467:93479 compcert.lib.Integers Make bits_zero_ext thm
R93467:93479 compcert.lib.Integers Make bits_zero_ext thm
R93467:93479 compcert.lib.Integers Make bits_zero_ext thm
R93467:93479 compcert.lib.Integers Make bits_zero_ext thm
R93498:93507 compcert.lib.Integers Make bits_above thm
R93498:93507 compcert.lib.Integers Make bits_above thm
R93498:93507 compcert.lib.Integers Make bits_above thm
R93498:93507 compcert.lib.Integers Make bits_above thm
R93518:93526 compcert.lib.Coqlib <> zlt_false thm
R93518:93526 compcert.lib.Coqlib <> zlt_false thm
R93518:93526 compcert.lib.Coqlib <> zlt_false thm
R93518:93526 compcert.lib.Coqlib <> zlt_false thm
prf 93572:93585 Make zero_ext_widen
R93617:93622 Coq.Init.Logic <> :type_scope:x_'->'_x not
R93649:93651 Coq.Init.Logic <> :type_scope:x_'='_x not
R93623:93630 compcert.lib.Integers Make zero_ext def
R93636:93643 compcert.lib.Integers Make zero_ext def
R93647:93647 compcert.lib.Integers <> x var
R93645:93645 compcert.lib.Integers <> n var
R93632:93633 compcert.lib.Integers <> n' var
R93652:93659 compcert.lib.Integers Make zero_ext def
R93663:93663 compcert.lib.Integers <> x var
R93661:93661 compcert.lib.Integers <> n var
R93606:93609 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R93611:93614 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R93610:93610 compcert.lib.Integers <> n var
R93610:93610 compcert.lib.Integers <> n var
R93615:93616 compcert.lib.Integers <> n' var
R93696:93698 compcert.lib.Coqlib <> zlt def
R93696:93698 compcert.lib.Coqlib <> zlt def
R93714:93721 compcert.lib.Coqlib <> zlt_true thm
R93714:93721 compcert.lib.Coqlib <> zlt_true thm
R93743:93745 compcert.lib.Coqlib <> zlt def
R93743:93745 compcert.lib.Coqlib <> zlt def
prf 93790:93803 Make sign_ext_widen
R93835:93840 Coq.Init.Logic <> :type_scope:x_'->'_x not
R93867:93869 Coq.Init.Logic <> :type_scope:x_'='_x not
R93841:93848 compcert.lib.Integers Make sign_ext def
R93854:93861 compcert.lib.Integers Make sign_ext def
R93865:93865 compcert.lib.Integers <> x var
R93863:93863 compcert.lib.Integers <> n var
R93850:93851 compcert.lib.Integers <> n' var
R93870:93877 compcert.lib.Integers Make sign_ext def
R93881:93881 compcert.lib.Integers <> x var
R93879:93879 compcert.lib.Integers <> n var
R93824:93826 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R93828:93832 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R93827:93827 compcert.lib.Integers <> n var
R93827:93827 compcert.lib.Integers <> n var
R93833:93834 compcert.lib.Integers <> n' var
R93911:93913 compcert.lib.Coqlib <> zlt def
R93918:93926 compcert.lib.Integers Make zwordsize def
R93911:93913 compcert.lib.Coqlib <> zlt def
R93918:93926 compcert.lib.Integers Make zwordsize def
R93953:93955 compcert.lib.Coqlib <> zlt def
R93953:93955 compcert.lib.Coqlib <> zlt def
R93983:93991 compcert.lib.Coqlib <> zlt_false thm
R93983:93991 compcert.lib.Coqlib <> zlt_false thm
R93983:93991 compcert.lib.Coqlib <> zlt_false thm
R93983:93991 compcert.lib.Coqlib <> zlt_false thm
R94013:94015 compcert.lib.Coqlib <> zlt def
R94020:94022 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R94013:94015 compcert.lib.Coqlib <> zlt def
R94020:94022 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R94074:94076 compcert.lib.Coqlib <> zlt def
R94074:94076 compcert.lib.Coqlib <> zlt def
R94116:94129 compcert.lib.Integers Make sign_ext_above thm
R94116:94129 compcert.lib.Integers Make sign_ext_above thm
prf 94152:94170 Make sign_zero_ext_widen
R94201:94206 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94233:94235 Coq.Init.Logic <> :type_scope:x_'='_x not
R94207:94214 compcert.lib.Integers Make sign_ext def
R94220:94227 compcert.lib.Integers Make zero_ext def
R94231:94231 compcert.lib.Integers <> x var
R94229:94229 compcert.lib.Integers <> n var
R94216:94217 compcert.lib.Integers <> n' var
R94236:94243 compcert.lib.Integers Make zero_ext def
R94247:94247 compcert.lib.Integers <> x var
R94245:94245 compcert.lib.Integers <> n var
R94191:94194 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R94196:94198 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R94195:94195 compcert.lib.Integers <> n var
R94195:94195 compcert.lib.Integers <> n var
R94199:94200 compcert.lib.Integers <> n' var
R94277:94279 compcert.lib.Coqlib <> zlt def
R94284:94292 compcert.lib.Integers Make zwordsize def
R94277:94279 compcert.lib.Coqlib <> zlt def
R94284:94292 compcert.lib.Integers Make zwordsize def
R94321:94323 compcert.lib.Coqlib <> zlt def
R94321:94323 compcert.lib.Coqlib <> zlt def
R94351:94359 compcert.lib.Coqlib <> zlt_false thm
R94351:94359 compcert.lib.Coqlib <> zlt_false thm
R94351:94359 compcert.lib.Coqlib <> zlt_false thm
R94351:94359 compcert.lib.Coqlib <> zlt_false thm
R94351:94359 compcert.lib.Coqlib <> zlt_false thm
R94351:94359 compcert.lib.Coqlib <> zlt_false thm
R94351:94359 compcert.lib.Coqlib <> zlt_false thm
R94401:94403 compcert.lib.Coqlib <> zlt def
R94401:94403 compcert.lib.Coqlib <> zlt def
R94436:94449 compcert.lib.Integers Make sign_ext_above thm
R94436:94449 compcert.lib.Integers Make sign_ext_above thm
prf 94472:94486 Make zero_ext_narrow
R94518:94523 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94550:94552 Coq.Init.Logic <> :type_scope:x_'='_x not
R94524:94531 compcert.lib.Integers Make zero_ext def
R94536:94543 compcert.lib.Integers Make zero_ext def
R94548:94548 compcert.lib.Integers <> x var
R94545:94546 compcert.lib.Integers <> n' var
R94533:94533 compcert.lib.Integers <> n var
R94553:94560 compcert.lib.Integers Make zero_ext def
R94564:94564 compcert.lib.Integers <> x var
R94562:94562 compcert.lib.Integers <> n var
R94507:94510 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R94512:94515 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R94511:94511 compcert.lib.Integers <> n var
R94511:94511 compcert.lib.Integers <> n var
R94516:94517 compcert.lib.Integers <> n' var
R94597:94599 compcert.lib.Coqlib <> zlt def
R94597:94599 compcert.lib.Coqlib <> zlt def
R94615:94622 compcert.lib.Coqlib <> zlt_true thm
R94615:94622 compcert.lib.Coqlib <> zlt_true thm
prf 94677:94691 Make sign_ext_narrow
R94722:94727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94754:94756 Coq.Init.Logic <> :type_scope:x_'='_x not
R94728:94735 compcert.lib.Integers Make sign_ext def
R94740:94747 compcert.lib.Integers Make sign_ext def
R94752:94752 compcert.lib.Integers <> x var
R94749:94750 compcert.lib.Integers <> n' var
R94737:94737 compcert.lib.Integers <> n var
R94757:94764 compcert.lib.Integers Make sign_ext def
R94768:94768 compcert.lib.Integers <> x var
R94766:94766 compcert.lib.Integers <> n var
R94712:94714 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R94716:94719 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R94715:94715 compcert.lib.Integers <> n var
R94715:94715 compcert.lib.Integers <> n var
R94720:94721 compcert.lib.Integers <> n' var
R94798:94800 compcert.lib.Coqlib <> zlt def
R94804:94812 compcert.lib.Integers Make zwordsize def
R94798:94800 compcert.lib.Coqlib <> zlt def
R94804:94812 compcert.lib.Integers Make zwordsize def
R94839:94841 compcert.lib.Coqlib <> zlt def
R94864:94871 compcert.lib.Coqlib <> zlt_true thm
R94839:94841 compcert.lib.Coqlib <> zlt def
R94864:94871 compcert.lib.Coqlib <> zlt_true thm
R94864:94871 compcert.lib.Coqlib <> zlt_true thm
R94902:94904 compcert.lib.Coqlib <> zlt def
R94902:94904 compcert.lib.Coqlib <> zlt def
R94946:94959 compcert.lib.Integers Make sign_ext_above thm
R94946:94959 compcert.lib.Integers Make sign_ext_above thm
R94946:94959 compcert.lib.Integers Make sign_ext_above thm
R94946:94959 compcert.lib.Integers Make sign_ext_above thm
prf 94993:95012 Make zero_sign_ext_narrow
R95043:95048 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95075:95077 Coq.Init.Logic <> :type_scope:x_'='_x not
R95049:95056 compcert.lib.Integers Make zero_ext def
R95061:95068 compcert.lib.Integers Make sign_ext def
R95073:95073 compcert.lib.Integers <> x var
R95070:95071 compcert.lib.Integers <> n' var
R95058:95058 compcert.lib.Integers <> n var
R95078:95085 compcert.lib.Integers Make zero_ext def
R95089:95089 compcert.lib.Integers <> x var
R95087:95087 compcert.lib.Integers <> n var
R95033:95035 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R95037:95040 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R95036:95036 compcert.lib.Integers <> n var
R95036:95036 compcert.lib.Integers <> n var
R95041:95042 compcert.lib.Integers <> n' var
R95119:95121 compcert.lib.Coqlib <> zlt def
R95126:95134 compcert.lib.Integers Make zwordsize def
R95119:95121 compcert.lib.Coqlib <> zlt def
R95126:95134 compcert.lib.Integers Make zwordsize def
R95163:95165 compcert.lib.Coqlib <> zlt def
R95163:95165 compcert.lib.Coqlib <> zlt def
R95189:95196 compcert.lib.Coqlib <> zlt_true thm
R95189:95196 compcert.lib.Coqlib <> zlt_true thm
R95189:95196 compcert.lib.Coqlib <> zlt_true thm
R95189:95196 compcert.lib.Coqlib <> zlt_true thm
R95245:95258 compcert.lib.Integers Make sign_ext_above thm
R95245:95258 compcert.lib.Integers Make sign_ext_above thm
R95245:95258 compcert.lib.Integers Make sign_ext_above thm
R95245:95258 compcert.lib.Integers Make sign_ext_above thm
prf 95281:95293 Make zero_ext_idem
R95316:95319 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95345:95347 Coq.Init.Logic <> :type_scope:x_'='_x not
R95320:95327 compcert.lib.Integers Make zero_ext def
R95332:95339 compcert.lib.Integers Make zero_ext def
R95343:95343 compcert.lib.Integers <> x var
R95341:95341 compcert.lib.Integers <> n var
R95329:95329 compcert.lib.Integers <> n var
R95348:95355 compcert.lib.Integers Make zero_ext def
R95359:95359 compcert.lib.Integers <> x var
R95357:95357 compcert.lib.Integers <> n var
R95311:95314 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R95315:95315 compcert.lib.Integers <> n var
R95385:95398 compcert.lib.Integers Make zero_ext_widen thm
R95385:95398 compcert.lib.Integers Make zero_ext_widen thm
prf 95422:95434 Make sign_ext_idem
R95456:95459 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95485:95487 Coq.Init.Logic <> :type_scope:x_'='_x not
R95460:95467 compcert.lib.Integers Make sign_ext def
R95472:95479 compcert.lib.Integers Make sign_ext def
R95483:95483 compcert.lib.Integers <> x var
R95481:95481 compcert.lib.Integers <> n var
R95469:95469 compcert.lib.Integers <> n var
R95488:95495 compcert.lib.Integers Make sign_ext def
R95499:95499 compcert.lib.Integers <> x var
R95497:95497 compcert.lib.Integers <> n var
R95452:95454 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R95455:95455 compcert.lib.Integers <> n var
R95525:95538 compcert.lib.Integers Make sign_ext_widen thm
R95525:95538 compcert.lib.Integers Make sign_ext_widen thm
prf 95562:95578 Make sign_ext_zero_ext
R95600:95603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95629:95631 Coq.Init.Logic <> :type_scope:x_'='_x not
R95604:95611 compcert.lib.Integers Make sign_ext def
R95616:95623 compcert.lib.Integers Make zero_ext def
R95627:95627 compcert.lib.Integers <> x var
R95625:95625 compcert.lib.Integers <> n var
R95613:95613 compcert.lib.Integers <> n var
R95632:95639 compcert.lib.Integers Make sign_ext def
R95643:95643 compcert.lib.Integers <> x var
R95641:95641 compcert.lib.Integers <> n var
R95596:95598 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R95599:95599 compcert.lib.Integers <> n var
R95673:95675 compcert.lib.Coqlib <> zlt def
R95679:95687 compcert.lib.Integers Make zwordsize def
R95673:95675 compcert.lib.Coqlib <> zlt def
R95679:95687 compcert.lib.Integers Make zwordsize def
R95716:95718 compcert.lib.Coqlib <> zlt def
R95716:95718 compcert.lib.Coqlib <> zlt def
R95736:95743 compcert.lib.Coqlib <> zlt_true thm
R95736:95743 compcert.lib.Coqlib <> zlt_true thm
R95736:95743 compcert.lib.Coqlib <> zlt_true thm
R95736:95743 compcert.lib.Coqlib <> zlt_true thm
R95762:95769 compcert.lib.Coqlib <> zlt_true thm
R95762:95769 compcert.lib.Coqlib <> zlt_true thm
R95762:95769 compcert.lib.Coqlib <> zlt_true thm
R95762:95769 compcert.lib.Coqlib <> zlt_true thm
R95797:95799 compcert.lib.Coqlib <> zlt def
R95797:95799 compcert.lib.Coqlib <> zlt def
R95824:95837 compcert.lib.Integers Make zero_ext_above thm
R95824:95837 compcert.lib.Integers Make zero_ext_above thm
R95824:95837 compcert.lib.Integers Make zero_ext_above thm
R95824:95837 compcert.lib.Integers Make zero_ext_above thm
prf 95860:95876 Make zero_ext_sign_ext
R95898:95901 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95927:95929 Coq.Init.Logic <> :type_scope:x_'='_x not
R95902:95909 compcert.lib.Integers Make zero_ext def
R95914:95921 compcert.lib.Integers Make sign_ext def
R95925:95925 compcert.lib.Integers <> x var
R95923:95923 compcert.lib.Integers <> n var
R95911:95911 compcert.lib.Integers <> n var
R95930:95937 compcert.lib.Integers Make zero_ext def
R95941:95941 compcert.lib.Integers <> x var
R95939:95939 compcert.lib.Integers <> n var
R95894:95896 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R95897:95897 compcert.lib.Integers <> n var
R95967:95986 compcert.lib.Integers Make zero_sign_ext_narrow thm
R95967:95986 compcert.lib.Integers Make zero_sign_ext_narrow thm
prf 96010:96037 Make sign_ext_equal_if_zero_equal
R96061:96066 Coq.Init.Logic <> :type_scope:x_'->'_x not
R96094:96099 Coq.Init.Logic <> :type_scope:x_'->'_x not
R96112:96114 Coq.Init.Logic <> :type_scope:x_'='_x not
R96100:96107 compcert.lib.Integers Make sign_ext def
R96111:96111 compcert.lib.Integers <> x var
R96109:96109 compcert.lib.Integers <> n var
R96115:96122 compcert.lib.Integers Make sign_ext def
R96126:96126 compcert.lib.Integers <> y var
R96124:96124 compcert.lib.Integers <> n var
R96079:96081 Coq.Init.Logic <> :type_scope:x_'='_x not
R96067:96074 compcert.lib.Integers Make zero_ext def
R96078:96078 compcert.lib.Integers <> x var
R96076:96076 compcert.lib.Integers <> n var
R96082:96089 compcert.lib.Integers Make zero_ext def
R96093:96093 compcert.lib.Integers <> y var
R96091:96091 compcert.lib.Integers <> n var
R96057:96059 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R96060:96060 compcert.lib.Integers <> n var
R96158:96174 compcert.lib.Integers Make sign_ext_zero_ext thm
R96158:96174 compcert.lib.Integers Make sign_ext_zero_ext thm
R96158:96174 compcert.lib.Integers Make sign_ext_zero_ext thm
R96198:96214 compcert.lib.Integers Make sign_ext_zero_ext thm
R96198:96214 compcert.lib.Integers Make sign_ext_zero_ext thm
R96198:96214 compcert.lib.Integers Make sign_ext_zero_ext thm
prf 96250:96266 Make zero_ext_shru_shl
R96302:96307 Coq.Init.Logic <> :type_scope:x_'->'_x not
R96317:96320 compcert.lib.Integers Make repr def
R96332:96334 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R96323:96331 compcert.lib.Integers Make zwordsize def
R96335:96335 compcert.lib.Integers <> n var
R96355:96357 Coq.Init.Logic <> :type_scope:x_'='_x not
R96343:96350 compcert.lib.Integers Make zero_ext def
R96354:96354 compcert.lib.Integers <> x var
R96352:96352 compcert.lib.Integers <> n var
R96358:96361 compcert.lib.Integers Make shru def
R96373:96373 compcert.lib.Integers <> y var
R96364:96366 compcert.lib.Integers Make shl def
R96370:96370 compcert.lib.Integers <> y var
R96368:96368 compcert.lib.Integers <> x var
R96286:96288 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R96290:96292 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R96289:96289 compcert.lib.Integers <> n var
R96289:96289 compcert.lib.Integers <> n var
R96293:96301 compcert.lib.Integers Make zwordsize def
R96413:96415 Coq.Init.Logic <> :type_scope:x_'='_x not
R96403:96410 compcert.lib.Integers Make unsigned def
R96425:96427 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R96416:96424 compcert.lib.Integers Make zwordsize def
R96413:96415 Coq.Init.Logic <> :type_scope:x_'='_x not
R96403:96410 compcert.lib.Integers Make unsigned def
R96425:96427 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R96416:96424 compcert.lib.Integers Make zwordsize def
R96452:96464 compcert.lib.Integers Make unsigned_repr thm
R96452:96464 compcert.lib.Integers Make unsigned_repr thm
R96478:96498 compcert.lib.Integers Make wordsize_max_unsigned thm
R96478:96498 compcert.lib.Integers Make wordsize_max_unsigned thm
R96516:96527 compcert.lib.Integers Make same_bits_eq thm
R96516:96527 compcert.lib.Integers Make same_bits_eq thm
R96548:96560 compcert.lib.Integers Make bits_zero_ext thm
R96548:96560 compcert.lib.Integers Make bits_zero_ext thm
R96548:96560 compcert.lib.Integers Make bits_zero_ext thm
R96548:96560 compcert.lib.Integers Make bits_zero_ext thm
R96573:96581 compcert.lib.Integers Make bits_shru thm
R96573:96581 compcert.lib.Integers Make bits_shru thm
R96573:96581 compcert.lib.Integers Make bits_shru thm
R96573:96581 compcert.lib.Integers Make bits_shru thm
R96602:96604 compcert.lib.Coqlib <> zlt def
R96602:96604 compcert.lib.Coqlib <> zlt def
R96622:96629 compcert.lib.Coqlib <> zlt_true thm
R96622:96629 compcert.lib.Coqlib <> zlt_true thm
R96622:96629 compcert.lib.Coqlib <> zlt_true thm
R96622:96629 compcert.lib.Coqlib <> zlt_true thm
R96640:96647 compcert.lib.Integers Make bits_shl thm
R96640:96647 compcert.lib.Integers Make bits_shl thm
R96640:96647 compcert.lib.Integers Make bits_shl thm
R96640:96647 compcert.lib.Integers Make bits_shl thm
R96658:96666 compcert.lib.Coqlib <> zlt_false thm
R96658:96666 compcert.lib.Coqlib <> zlt_false thm
R96658:96666 compcert.lib.Coqlib <> zlt_false thm
R96658:96666 compcert.lib.Coqlib <> zlt_false thm
R96718:96726 compcert.lib.Coqlib <> zlt_false thm
R96718:96726 compcert.lib.Coqlib <> zlt_false thm
R96718:96726 compcert.lib.Coqlib <> zlt_false thm
R96718:96726 compcert.lib.Coqlib <> zlt_false thm
prf 96765:96780 Make sign_ext_shr_shl
R96816:96821 Coq.Init.Logic <> :type_scope:x_'->'_x not
R96831:96834 compcert.lib.Integers Make repr def
R96846:96848 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R96837:96845 compcert.lib.Integers Make zwordsize def
R96849:96849 compcert.lib.Integers <> n var
R96869:96871 Coq.Init.Logic <> :type_scope:x_'='_x not
R96857:96864 compcert.lib.Integers Make sign_ext def
R96868:96868 compcert.lib.Integers <> x var
R96866:96866 compcert.lib.Integers <> n var
R96872:96874 compcert.lib.Integers Make shr def
R96886:96886 compcert.lib.Integers <> y var
R96877:96879 compcert.lib.Integers Make shl def
R96883:96883 compcert.lib.Integers <> y var
R96881:96881 compcert.lib.Integers <> x var
R96800:96802 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R96804:96806 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R96803:96803 compcert.lib.Integers <> n var
R96803:96803 compcert.lib.Integers <> n var
R96807:96815 compcert.lib.Integers Make zwordsize def
R96926:96928 Coq.Init.Logic <> :type_scope:x_'='_x not
R96916:96923 compcert.lib.Integers Make unsigned def
R96938:96940 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R96929:96937 compcert.lib.Integers Make zwordsize def
R96926:96928 Coq.Init.Logic <> :type_scope:x_'='_x not
R96916:96923 compcert.lib.Integers Make unsigned def
R96938:96940 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R96929:96937 compcert.lib.Integers Make zwordsize def
R96965:96977 compcert.lib.Integers Make unsigned_repr thm
R96965:96977 compcert.lib.Integers Make unsigned_repr thm
R96991:97011 compcert.lib.Integers Make wordsize_max_unsigned thm
R96991:97011 compcert.lib.Integers Make wordsize_max_unsigned thm
R97029:97040 compcert.lib.Integers Make same_bits_eq thm
R97029:97040 compcert.lib.Integers Make same_bits_eq thm
R97061:97073 compcert.lib.Integers Make bits_sign_ext thm
R97061:97073 compcert.lib.Integers Make bits_sign_ext thm
R97061:97073 compcert.lib.Integers Make bits_sign_ext thm
R97061:97073 compcert.lib.Integers Make bits_sign_ext thm
R97061:97073 compcert.lib.Integers Make bits_sign_ext thm
R97086:97093 compcert.lib.Integers Make bits_shr thm
R97086:97093 compcert.lib.Integers Make bits_shr thm
R97086:97093 compcert.lib.Integers Make bits_shr thm
R97086:97093 compcert.lib.Integers Make bits_shr thm
R97114:97116 compcert.lib.Coqlib <> zlt def
R97114:97116 compcert.lib.Coqlib <> zlt def
R97134:97141 compcert.lib.Coqlib <> zlt_true thm
R97134:97141 compcert.lib.Coqlib <> zlt_true thm
R97134:97141 compcert.lib.Coqlib <> zlt_true thm
R97134:97141 compcert.lib.Coqlib <> zlt_true thm
R97152:97159 compcert.lib.Integers Make bits_shl thm
R97152:97159 compcert.lib.Integers Make bits_shl thm
R97152:97159 compcert.lib.Integers Make bits_shl thm
R97152:97159 compcert.lib.Integers Make bits_shl thm
R97170:97178 compcert.lib.Coqlib <> zlt_false thm
R97170:97178 compcert.lib.Coqlib <> zlt_false thm
R97170:97178 compcert.lib.Coqlib <> zlt_false thm
R97170:97178 compcert.lib.Coqlib <> zlt_false thm
R97230:97238 compcert.lib.Coqlib <> zlt_false thm
R97230:97238 compcert.lib.Coqlib <> zlt_false thm
R97230:97238 compcert.lib.Coqlib <> zlt_false thm
R97230:97238 compcert.lib.Coqlib <> zlt_false thm
R97249:97256 compcert.lib.Integers Make bits_shl thm
R97249:97256 compcert.lib.Integers Make bits_shl thm
R97249:97256 compcert.lib.Integers Make bits_shl thm
R97249:97256 compcert.lib.Integers Make bits_shl thm
R97267:97275 compcert.lib.Coqlib <> zlt_false thm
R97267:97275 compcert.lib.Coqlib <> zlt_false thm
R97267:97275 compcert.lib.Coqlib <> zlt_false thm
R97267:97275 compcert.lib.Coqlib <> zlt_false thm
prf 97448:97461 Make zero_ext_range
R97496:97499 Coq.Init.Logic <> :type_scope:x_'->'_x not
R97501:97504 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R97528:97530 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R97505:97512 compcert.lib.Integers Make unsigned def
R97515:97522 compcert.lib.Integers Make zero_ext def
R97526:97526 compcert.lib.Integers <> x var
R97524:97524 compcert.lib.Integers <> n var
R97505:97512 compcert.lib.Integers Make unsigned def
R97515:97522 compcert.lib.Integers Make zero_ext def
R97526:97526 compcert.lib.Integers <> x var
R97524:97524 compcert.lib.Integers <> n var
R97531:97535 Coq.ZArith.Zpower <> two_p def
R97537:97537 compcert.lib.Integers <> n var
R97479:97482 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R97484:97486 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R97483:97483 compcert.lib.Integers <> n var
R97483:97483 compcert.lib.Integers <> n var
R97487:97495 compcert.lib.Integers Make zwordsize def
R97565:97576 compcert.lib.Integers Make zero_ext_mod thm
R97565:97576 compcert.lib.Integers Make zero_ext_mod thm
R97565:97576 compcert.lib.Integers Make zero_ext_mod thm
R97565:97576 compcert.lib.Integers Make zero_ext_mod thm
R97591:97598 Coq.ZArith.Zdiv <> Z_mod_lt thm
R97591:97598 Coq.ZArith.Zdiv <> Z_mod_lt thm
R97607:97619 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R97607:97619 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 97641:97654 Make eqmod_zero_ext
R97689:97692 Coq.Init.Logic <> :type_scope:x_'->'_x not
R97693:97697 compcert.lib.Integers Make eqmod def
R97736:97743 compcert.lib.Integers Make unsigned def
R97745:97745 compcert.lib.Integers <> x var
R97710:97717 compcert.lib.Integers Make unsigned def
R97720:97727 compcert.lib.Integers Make zero_ext def
R97731:97731 compcert.lib.Integers <> x var
R97729:97729 compcert.lib.Integers <> n var
R97700:97704 Coq.ZArith.Zpower <> two_p def
R97706:97706 compcert.lib.Integers <> n var
R97672:97675 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R97677:97679 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R97676:97676 compcert.lib.Integers <> n var
R97676:97676 compcert.lib.Integers <> n var
R97680:97688 compcert.lib.Integers Make zwordsize def
R97774:97785 compcert.lib.Integers Make zero_ext_mod thm
R97774:97785 compcert.lib.Integers Make zero_ext_mod thm
R97774:97785 compcert.lib.Integers Make zero_ext_mod thm
R97774:97785 compcert.lib.Integers Make zero_ext_mod thm
R97800:97808 compcert.lib.Integers Make eqmod_sym thm
R97800:97808 compcert.lib.Integers Make eqmod_sym thm
R97817:97825 compcert.lib.Integers Make eqmod_mod thm
R97817:97825 compcert.lib.Integers Make eqmod_mod thm
R97836:97848 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R97836:97848 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 97988:98001 Make sign_ext_range
R98035:98038 Coq.Init.Logic <> :type_scope:x_'->'_x not
R98051:98054 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R98076:98078 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R98039:98039 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R98040:98044 Coq.ZArith.Zpower <> two_p def
R98048:98048 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98047:98047 compcert.lib.Integers <> n var
R98055:98060 compcert.lib.Integers Make signed def
R98063:98070 compcert.lib.Integers Make sign_ext def
R98074:98074 compcert.lib.Integers <> x var
R98072:98072 compcert.lib.Integers <> n var
R98055:98060 compcert.lib.Integers Make signed def
R98063:98070 compcert.lib.Integers Make sign_ext def
R98074:98074 compcert.lib.Integers <> x var
R98072:98072 compcert.lib.Integers <> n var
R98079:98083 Coq.ZArith.Zpower <> two_p def
R98087:98087 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98086:98086 compcert.lib.Integers <> n var
R98019:98021 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R98023:98025 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R98022:98022 compcert.lib.Integers <> n var
R98022:98022 compcert.lib.Integers <> n var
R98026:98034 compcert.lib.Integers Make zwordsize def
R98117:98132 compcert.lib.Integers Make sign_ext_shr_shl thm
R98117:98132 compcert.lib.Integers Make sign_ext_shr_shl thm
R98117:98132 compcert.lib.Integers Make sign_ext_shr_shl thm
R98117:98132 compcert.lib.Integers Make sign_ext_shr_shl thm
R98153:98155 compcert.lib.Integers Make shl def
R98160:98163 compcert.lib.Integers Make repr def
R98175:98177 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98166:98174 compcert.lib.Integers Make zwordsize def
R98153:98155 compcert.lib.Integers Make shl def
R98160:98163 compcert.lib.Integers Make repr def
R98175:98177 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98166:98174 compcert.lib.Integers Make zwordsize def
R98207:98209 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R98194:98198 Coq.ZArith.Zpower <> two_p def
R98202:98204 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98223:98235 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R98207:98209 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R98194:98198 Coq.ZArith.Zpower <> two_p def
R98202:98204 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98223:98235 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R98287:98289 Coq.Init.Logic <> :type_scope:x_'='_x not
R98256:98263 compcert.lib.Integers Make unsigned def
R98266:98269 compcert.lib.Integers Make repr def
R98281:98283 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98272:98280 compcert.lib.Integers Make zwordsize def
R98299:98301 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98290:98298 compcert.lib.Integers Make zwordsize def
R98287:98289 Coq.Init.Logic <> :type_scope:x_'='_x not
R98256:98263 compcert.lib.Integers Make unsigned def
R98266:98269 compcert.lib.Integers Make repr def
R98281:98283 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98272:98280 compcert.lib.Integers Make zwordsize def
R98299:98301 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98290:98298 compcert.lib.Integers Make zwordsize def
R98316:98328 compcert.lib.Integers Make unsigned_repr thm
R98316:98328 compcert.lib.Integers Make unsigned_repr thm
R98360:98380 compcert.lib.Integers Make wordsize_max_unsigned thm
R98360:98380 compcert.lib.Integers Make wordsize_max_unsigned thm
R98400:98412 compcert.lib.Integers Make shr_div_two_p thm
R98400:98412 compcert.lib.Integers Make shr_div_two_p thm
R98400:98412 compcert.lib.Integers Make shr_div_two_p thm
R98425:98435 compcert.lib.Integers Make signed_repr thm
R98425:98435 compcert.lib.Integers Make signed_repr thm
R98425:98435 compcert.lib.Integers Make signed_repr thm
R98425:98435 compcert.lib.Integers Make signed_repr thm
R98460:98474 compcert.lib.Coqlib <> Zdiv_interval_1 thm
R98460:98474 compcert.lib.Coqlib <> Zdiv_interval_1 thm
R98499:98511 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R98499:98511 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R98547:98549 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R98532:98533 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R98534:98538 Coq.ZArith.Zpower <> two_p def
R98542:98544 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98550:98554 Coq.ZArith.Zpower <> two_p def
R98566:98568 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98557:98565 compcert.lib.Integers Make zwordsize def
R98584:98586 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R98624:98624 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R98600:98602 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R98587:98591 Coq.ZArith.Zpower <> two_p def
R98595:98597 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98603:98607 Coq.ZArith.Zpower <> two_p def
R98619:98621 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98610:98618 compcert.lib.Integers Make zwordsize def
R98584:98586 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R98624:98624 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R98600:98602 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R98587:98591 Coq.ZArith.Zpower <> two_p def
R98595:98597 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98603:98607 Coq.ZArith.Zpower <> two_p def
R98619:98621 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98610:98618 compcert.lib.Integers Make zwordsize def
R98547:98549 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R98532:98533 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R98534:98538 Coq.ZArith.Zpower <> two_p def
R98542:98544 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98550:98554 Coq.ZArith.Zpower <> two_p def
R98566:98568 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98557:98565 compcert.lib.Integers Make zwordsize def
R98649:98660 Coq.ZArith.Zpower <> two_p_is_exp thm
R98649:98660 Coq.ZArith.Zpower <> two_p_is_exp thm
R98649:98660 Coq.ZArith.Zpower <> two_p_is_exp thm
R98649:98660 Coq.ZArith.Zpower <> two_p_is_exp thm
R98649:98660 Coq.ZArith.Zpower <> two_p_is_exp thm
R98679:98682 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R98696:98696 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R98675:98677 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98692:98694 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98683:98691 compcert.lib.Integers Make zwordsize def
R98714:98716 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98705:98713 compcert.lib.Integers Make zwordsize def
R98714:98716 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98705:98713 compcert.lib.Integers Make zwordsize def
R98679:98682 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R98696:98696 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R98675:98677 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98692:98694 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98683:98691 compcert.lib.Integers Make zwordsize def
R98743:98760 compcert.lib.Integers Make half_modulus_power thm
R98743:98760 compcert.lib.Integers Make half_modulus_power thm
R98743:98760 compcert.lib.Integers Make half_modulus_power thm
R98777:98788 compcert.lib.Integers Make signed_range thm
R98777:98788 compcert.lib.Integers Make signed_range thm
R98801:98810 compcert.lib.Integers Make min_signed def
R98813:98822 compcert.lib.Integers Make max_signed def
R98856:98870 compcert.lib.Coqlib <> Zdiv_interval_2 thm
R98856:98870 compcert.lib.Coqlib <> Zdiv_interval_2 thm
R98879:98890 compcert.lib.Integers Make signed_range thm
R98879:98890 compcert.lib.Integers Make signed_range thm
R98906:98919 compcert.lib.Integers Make min_signed_neg thm
R98906:98919 compcert.lib.Integers Make min_signed_neg thm
R98942:98955 compcert.lib.Integers Make max_signed_pos thm
R98942:98955 compcert.lib.Integers Make max_signed_pos thm
R98985:98997 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R98985:98997 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 99019:99033 Make eqmod_sign_ext'
R99067:99072 Coq.Init.Logic <> :type_scope:x_'->'_x not
R99073:99077 compcert.lib.Integers Make eqmod def
R99116:99123 compcert.lib.Integers Make unsigned def
R99125:99125 compcert.lib.Integers <> x var
R99090:99097 compcert.lib.Integers Make unsigned def
R99100:99107 compcert.lib.Integers Make sign_ext def
R99111:99111 compcert.lib.Integers <> x var
R99109:99109 compcert.lib.Integers <> n var
R99080:99084 Coq.ZArith.Zpower <> two_p def
R99086:99086 compcert.lib.Integers <> n var
R99051:99053 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R99055:99057 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R99054:99054 compcert.lib.Integers <> n var
R99054:99054 compcert.lib.Integers <> n var
R99058:99066 compcert.lib.Integers Make zwordsize def
R99158:99165 Coq.ZArith.BinInt Z to_nat def
R99158:99165 Coq.ZArith.BinInt Z to_nat def
R99191:99193 Coq.Init.Logic <> :type_scope:x_'='_x not
R99181:99188 Coq.ZArith.BinInt Z of_nat def
R99207:99214 Coq.ZArith.Znat Z2Nat id thm
R99191:99193 Coq.Init.Logic <> :type_scope:x_'='_x not
R99181:99188 Coq.ZArith.BinInt Z of_nat def
R99207:99214 Coq.ZArith.Znat Z2Nat id thm
R99253:99271 compcert.lib.Coqlib <> two_power_nat_two_p thm
R99253:99271 compcert.lib.Coqlib <> two_power_nat_two_p thm
R99253:99271 compcert.lib.Coqlib <> two_power_nat_two_p thm
R99282:99296 compcert.lib.Integers Make eqmod_same_bits thm
R99282:99296 compcert.lib.Integers Make eqmod_same_bits thm
R99347:99353 compcert.lib.Integers Make testbit def
R99356:99363 compcert.lib.Integers Make sign_ext def
R99347:99353 compcert.lib.Integers Make testbit def
R99356:99363 compcert.lib.Integers Make sign_ext def
R99382:99394 compcert.lib.Integers Make bits_sign_ext thm
R99382:99394 compcert.lib.Integers Make bits_sign_ext thm
R99382:99394 compcert.lib.Integers Make bits_sign_ext thm
R99382:99394 compcert.lib.Integers Make bits_sign_ext thm
R99382:99394 compcert.lib.Integers Make bits_sign_ext thm
R99407:99414 compcert.lib.Coqlib <> zlt_true thm
R99407:99414 compcert.lib.Coqlib <> zlt_true thm
R99407:99414 compcert.lib.Coqlib <> zlt_true thm
R99407:99414 compcert.lib.Coqlib <> zlt_true thm
prf 99456:99469 Make eqmod_sign_ext
R99503:99508 Coq.Init.Logic <> :type_scope:x_'->'_x not
R99509:99513 compcert.lib.Integers Make eqmod def
R99550:99557 compcert.lib.Integers Make unsigned def
R99559:99559 compcert.lib.Integers <> x var
R99526:99531 compcert.lib.Integers Make signed def
R99534:99541 compcert.lib.Integers Make sign_ext def
R99545:99545 compcert.lib.Integers <> x var
R99543:99543 compcert.lib.Integers <> n var
R99516:99520 Coq.ZArith.Zpower <> two_p def
R99522:99522 compcert.lib.Integers <> n var
R99487:99489 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R99491:99493 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R99490:99490 compcert.lib.Integers <> n var
R99490:99490 compcert.lib.Integers <> n var
R99494:99502 compcert.lib.Integers Make zwordsize def
R99604:99611 compcert.lib.Integers Make unsigned def
R99614:99621 compcert.lib.Integers Make sign_ext def
R99586:99596 compcert.lib.Integers Make eqmod_trans thm
R99604:99611 compcert.lib.Integers Make unsigned def
R99614:99621 compcert.lib.Integers Make sign_ext def
R99586:99596 compcert.lib.Integers Make eqmod_trans thm
R99657:99663 compcert.lib.Integers Make modulus def
R99638:99650 compcert.lib.Integers Make eqmod_divides thm
R99657:99663 compcert.lib.Integers Make modulus def
R99638:99650 compcert.lib.Integers Make eqmod_divides thm
R99672:99690 compcert.lib.Integers Make eqm_signed_unsigned thm
R99672:99690 compcert.lib.Integers Make eqm_signed_unsigned thm
R99703:99707 Coq.ZArith.Zpower <> two_p def
R99719:99721 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R99710:99718 compcert.lib.Integers Make zwordsize def
R99703:99707 Coq.ZArith.Zpower <> two_p def
R99719:99721 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R99710:99718 compcert.lib.Integers Make zwordsize def
R99736:99742 compcert.lib.Integers Make modulus def
R99753:99771 compcert.lib.Coqlib <> two_power_nat_two_p thm
R99753:99771 compcert.lib.Coqlib <> two_power_nat_two_p thm
R99753:99771 compcert.lib.Coqlib <> two_power_nat_two_p thm
R99779:99787 compcert.lib.Integers Make zwordsize def
R99779:99787 compcert.lib.Integers Make zwordsize def
R99803:99814 Coq.ZArith.Zpower <> two_p_is_exp thm
R99803:99814 Coq.ZArith.Zpower <> two_p_is_exp thm
R99803:99814 Coq.ZArith.Zpower <> two_p_is_exp thm
R99803:99814 Coq.ZArith.Zpower <> two_p_is_exp thm
R99803:99814 Coq.ZArith.Zpower <> two_p_is_exp thm
R99855:99869 compcert.lib.Integers Make eqmod_sign_ext' thm
R99855:99869 compcert.lib.Integers Make eqmod_sign_ext' thm
prf 99968:99981 Make one_bits_range
R100015:100018 Coq.Init.Logic <> :type_scope:x_'->'_x not
R100034:100036 Coq.Init.Logic <> :type_scope:x_'='_x not
R100019:100021 compcert.lib.Integers Make ltu def
R100025:100033 compcert.lib.Integers Make iwordsize def
R100023:100023 compcert.lib.Integers <> i var
R100037:100040 Coq.Init.Datatypes <> true constr
R99998:99999 Coq.Lists.List <> In def
R100004:100011 compcert.lib.Integers Make one_bits def
R100013:100013 compcert.lib.Integers <> x var
R100001:100001 compcert.lib.Integers <> i var
R100091:100094 Coq.Init.Logic <> :type_scope:x_'->'_x not
R100117:100119 Coq.Init.Logic <> :type_scope:x_'='_x not
R100095:100097 compcert.lib.Integers Make ltu def
R100108:100116 compcert.lib.Integers Make iwordsize def
R100100:100103 compcert.lib.Integers Make repr def
R100105:100105 compcert.lib.Integers <> p var
R100120:100123 Coq.Init.Datatypes <> true constr
R100074:100077 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R100079:100081 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R100078:100078 compcert.lib.Integers <> p var
R100078:100078 compcert.lib.Integers <> p var
R100082:100090 compcert.lib.Integers Make zwordsize def
R100091:100094 Coq.Init.Logic <> :type_scope:x_'->'_x not
R100117:100119 Coq.Init.Logic <> :type_scope:x_'='_x not
R100095:100097 compcert.lib.Integers Make ltu def
R100108:100116 compcert.lib.Integers Make iwordsize def
R100100:100103 compcert.lib.Integers Make repr def
R100105:100105 compcert.lib.Integers <> p var
R100120:100123 Coq.Init.Datatypes <> true constr
R100074:100077 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R100079:100081 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R100078:100078 compcert.lib.Integers <> p var
R100078:100078 compcert.lib.Integers <> p var
R100082:100090 compcert.lib.Integers Make zwordsize def
R100146:100148 compcert.lib.Integers Make ltu def
R100151:100159 compcert.lib.Integers Make iwordsize def
R100168:100175 compcert.lib.Coqlib <> zlt_true thm
R100168:100175 compcert.lib.Coqlib <> zlt_true thm
R100197:100209 compcert.lib.Integers Make unsigned_repr thm
R100197:100209 compcert.lib.Integers Make unsigned_repr thm
R100197:100209 compcert.lib.Integers Make unsigned_repr thm
R100197:100209 compcert.lib.Integers Make unsigned_repr thm
R100197:100209 compcert.lib.Integers Make unsigned_repr thm
R100197:100209 compcert.lib.Integers Make unsigned_repr thm
R100197:100209 compcert.lib.Integers Make unsigned_repr thm
R100197:100209 compcert.lib.Integers Make unsigned_repr thm
R100197:100209 compcert.lib.Integers Make unsigned_repr thm
R100197:100209 compcert.lib.Integers Make unsigned_repr thm
R100234:100254 compcert.lib.Integers Make wordsize_max_unsigned thm
R100234:100254 compcert.lib.Integers Make wordsize_max_unsigned thm
R100279:100299 compcert.lib.Integers Make wordsize_max_unsigned thm
R100279:100299 compcert.lib.Integers Make wordsize_max_unsigned thm
R100318:100325 compcert.lib.Integers Make one_bits def
R100348:100362 compcert.lib.Coqlib <> list_in_map_inv thm
R100348:100362 compcert.lib.Coqlib <> list_in_map_inv thm
R100439:100446 compcert.lib.Integers Make unsigned def
R100416:100431 compcert.lib.Integers Make Z_one_bits_range thm
R100439:100446 compcert.lib.Integers Make unsigned def
R100416:100431 compcert.lib.Integers Make Z_one_bits_range thm
def 100473:100487 Make int_of_one_bits
R100493:100496 Coq.Init.Datatypes <> list ind
R100498:100500 compcert.lib.Integers Make int rec
R100505:100507 compcert.lib.Integers Make int rec
R100520:100520 compcert.lib.Integers <> l var
R100531:100533 Coq.Init.Datatypes <> nil constr
R100538:100541 compcert.lib.Integers Make zero def
R100548:100551 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R100557:100559 compcert.lib.Integers Make add def
R100574:100588 compcert.lib.Integers <> int_of_one_bits def
R100562:100564 compcert.lib.Integers Make shl def
R100566:100568 compcert.lib.Integers Make one def
prf 100609:100623 Make one_bits_decomp
R100639:100641 Coq.Init.Logic <> :type_scope:x_'='_x not
R100638:100638 compcert.lib.Integers <> x var
R100642:100656 compcert.lib.Integers Make int_of_one_bits def
R100659:100666 compcert.lib.Integers Make one_bits def
R100668:100668 compcert.lib.Integers <> x var
R100705:100708 compcert.lib.Integers Make repr def
R100711:100720 compcert.lib.Integers Make powerserie def
R100723:100732 compcert.lib.Integers Make Z_one_bits def
R100744:100751 compcert.lib.Integers Make unsigned def
R100734:100741 compcert.lib.Integers Make wordsize def
R100705:100708 compcert.lib.Integers Make repr def
R100711:100720 compcert.lib.Integers Make powerserie def
R100723:100732 compcert.lib.Integers Make Z_one_bits def
R100744:100751 compcert.lib.Integers Make unsigned def
R100734:100741 compcert.lib.Integers Make wordsize def
R100778:100781 compcert.lib.Integers Make repr def
R100784:100791 compcert.lib.Integers Make unsigned def
R100778:100781 compcert.lib.Integers Make repr def
R100784:100791 compcert.lib.Integers Make unsigned def
R100829:100849 compcert.lib.Integers Make Z_one_bits_powerserie thm
R100829:100849 compcert.lib.Integers Make Z_one_bits_powerserie thm
R100879:100886 compcert.lib.Integers Make one_bits def
R100903:100918 compcert.lib.Integers Make Z_one_bits_range thm
R100921:100928 compcert.lib.Integers Make unsigned def
R100903:100918 compcert.lib.Integers Make Z_one_bits_range thm
R100921:100928 compcert.lib.Integers Make unsigned def
R100949:100958 compcert.lib.Integers Make Z_one_bits def
R100970:100977 compcert.lib.Integers Make unsigned def
R100960:100967 compcert.lib.Integers Make wordsize def
R100949:100958 compcert.lib.Integers Make Z_one_bits def
R100970:100977 compcert.lib.Integers Make unsigned def
R100960:100967 compcert.lib.Integers Make wordsize def
R101064:101066 compcert.lib.Integers Make add def
R101075:101086 compcert.lib.Integers Make eqm_samerepr thm
R101075:101086 compcert.lib.Integers Make eqm_samerepr thm
R101097:101103 compcert.lib.Integers Make eqm_add thm
R101097:101103 compcert.lib.Integers Make eqm_add thm
R101114:101126 compcert.lib.Integers Make shl_mul_two_p thm
R101114:101126 compcert.lib.Integers Make shl_mul_two_p thm
R101114:101126 compcert.lib.Integers Make shl_mul_two_p thm
R101137:101146 compcert.lib.Integers Make mul_commut thm
R101137:101146 compcert.lib.Integers Make mul_commut thm
R101137:101146 compcert.lib.Integers Make mul_commut thm
R101159:101165 compcert.lib.Integers Make mul_one thm
R101159:101165 compcert.lib.Integers Make mul_one thm
R101159:101165 compcert.lib.Integers Make mul_one thm
R101174:101192 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R101174:101192 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R101205:101217 compcert.lib.Integers Make unsigned_repr thm
R101205:101217 compcert.lib.Integers Make unsigned_repr thm
R101205:101217 compcert.lib.Integers Make unsigned_repr thm
R101205:101217 compcert.lib.Integers Make unsigned_repr thm
R101255:101259 Coq.Lists.List <> in_eq thm
R101255:101259 Coq.Lists.List <> in_eq thm
R101279:101299 compcert.lib.Integers Make wordsize_max_unsigned thm
R101279:101299 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 101415:101424 Make negate_cmp
R101472:101474 Coq.Init.Logic <> :type_scope:x_'='_x not
R101443:101445 compcert.lib.Integers Make cmp def
R101471:101471 compcert.lib.Integers <> y var
R101469:101469 compcert.lib.Integers <> x var
R101448:101464 compcert.lib.Integers Make negate_comparison def
R101466:101466 compcert.lib.Integers <> c var
R101475:101478 Coq.Init.Datatypes <> negb def
R101481:101483 compcert.lib.Integers Make cmp def
R101489:101489 compcert.lib.Integers <> y var
R101487:101487 compcert.lib.Integers <> x var
R101485:101485 compcert.lib.Integers <> c var
R101541:101549 Coq.Bool.Bool <> negb_elim syndef
R101541:101549 Coq.Bool.Bool <> negb_elim syndef
R101541:101549 Coq.Bool.Bool <> negb_elim syndef
R101541:101549 Coq.Bool.Bool <> negb_elim syndef
R101541:101549 Coq.Bool.Bool <> negb_elim syndef
R101541:101549 Coq.Bool.Bool <> negb_elim syndef
R101541:101549 Coq.Bool.Bool <> negb_elim syndef
R101541:101549 Coq.Bool.Bool <> negb_elim syndef
R101541:101549 Coq.Bool.Bool <> negb_elim syndef
R101541:101549 Coq.Bool.Bool <> negb_elim syndef
prf 101572:101582 Make negate_cmpu
R101631:101633 Coq.Init.Logic <> :type_scope:x_'='_x not
R101601:101604 compcert.lib.Integers Make cmpu def
R101630:101630 compcert.lib.Integers <> y var
R101628:101628 compcert.lib.Integers <> x var
R101607:101623 compcert.lib.Integers Make negate_comparison def
R101625:101625 compcert.lib.Integers <> c var
R101634:101637 Coq.Init.Datatypes <> negb def
R101640:101643 compcert.lib.Integers Make cmpu def
R101649:101649 compcert.lib.Integers <> y var
R101647:101647 compcert.lib.Integers <> x var
R101645:101645 compcert.lib.Integers <> c var
R101701:101709 Coq.Bool.Bool <> negb_elim syndef
R101701:101709 Coq.Bool.Bool <> negb_elim syndef
R101701:101709 Coq.Bool.Bool <> negb_elim syndef
R101701:101709 Coq.Bool.Bool <> negb_elim syndef
R101701:101709 Coq.Bool.Bool <> negb_elim syndef
R101701:101709 Coq.Bool.Bool <> negb_elim syndef
R101701:101709 Coq.Bool.Bool <> negb_elim syndef
R101701:101709 Coq.Bool.Bool <> negb_elim syndef
R101701:101709 Coq.Bool.Bool <> negb_elim syndef
R101701:101709 Coq.Bool.Bool <> negb_elim syndef
prf 101732:101739 Make swap_cmp
R101785:101787 Coq.Init.Logic <> :type_scope:x_'='_x not
R101758:101760 compcert.lib.Integers Make cmp def
R101784:101784 compcert.lib.Integers <> y var
R101782:101782 compcert.lib.Integers <> x var
R101763:101777 compcert.lib.Integers Make swap_comparison def
R101779:101779 compcert.lib.Integers <> c var
R101788:101790 compcert.lib.Integers Make cmp def
R101796:101796 compcert.lib.Integers <> x var
R101794:101794 compcert.lib.Integers <> y var
R101792:101792 compcert.lib.Integers <> c var
R101847:101852 compcert.lib.Integers Make eq_sym thm
R101847:101852 compcert.lib.Integers Make eq_sym thm
R101868:101873 compcert.lib.Integers Make eq_sym thm
R101868:101873 compcert.lib.Integers Make eq_sym thm
prf 101890:101898 Make swap_cmpu
R101945:101947 Coq.Init.Logic <> :type_scope:x_'='_x not
R101917:101920 compcert.lib.Integers Make cmpu def
R101944:101944 compcert.lib.Integers <> y var
R101942:101942 compcert.lib.Integers <> x var
R101923:101937 compcert.lib.Integers Make swap_comparison def
R101939:101939 compcert.lib.Integers <> c var
R101948:101951 compcert.lib.Integers Make cmpu def
R101957:101957 compcert.lib.Integers <> x var
R101955:101955 compcert.lib.Integers <> y var
R101953:101953 compcert.lib.Integers <> c var
R102008:102013 compcert.lib.Integers Make eq_sym thm
R102008:102013 compcert.lib.Integers Make eq_sym thm
R102029:102034 compcert.lib.Integers Make eq_sym thm
R102029:102034 compcert.lib.Integers Make eq_sym thm
prf 102049:102060 Make translate_eq
R102103:102105 Coq.Init.Logic <> :type_scope:x_'='_x not
R102081:102082 compcert.lib.Integers Make eq def
R102095:102097 compcert.lib.Integers Make add def
R102101:102101 compcert.lib.Integers <> d var
R102099:102099 compcert.lib.Integers <> y var
R102085:102087 compcert.lib.Integers Make add def
R102091:102091 compcert.lib.Integers <> d var
R102089:102089 compcert.lib.Integers <> x var
R102106:102107 compcert.lib.Integers Make eq def
R102111:102111 compcert.lib.Integers <> y var
R102109:102109 compcert.lib.Integers <> x var
R102138:102139 compcert.lib.Integers Make eq def
R102148:102150 compcert.lib.Coqlib <> zeq def
R102166:102173 compcert.lib.Integers Make unsigned def
R102153:102160 compcert.lib.Integers Make unsigned def
R102148:102150 compcert.lib.Coqlib <> zeq def
R102166:102173 compcert.lib.Integers Make unsigned def
R102153:102160 compcert.lib.Integers Make unsigned def
R102196:102198 compcert.lib.Integers Make add def
R102218:102225 compcert.lib.Coqlib <> zeq_true thm
R102218:102225 compcert.lib.Coqlib <> zeq_true thm
R102236:102244 compcert.lib.Coqlib <> zeq_false thm
R102236:102244 compcert.lib.Coqlib <> zeq_false thm
R102254:102256 compcert.lib.Integers Make add def
R102288:102299 compcert.lib.Integers Make eqm_small_eq thm
R102288:102299 compcert.lib.Integers Make eqm_small_eq thm
R102329:102336 compcert.lib.Integers Make unsigned def
R102347:102347 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102371:102374 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102358:102360 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102348:102355 compcert.lib.Integers Make unsigned def
R102361:102368 compcert.lib.Integers Make unsigned def
R102375:102382 compcert.lib.Integers Make unsigned def
R102347:102347 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102371:102374 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102358:102360 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102348:102355 compcert.lib.Integers Make unsigned def
R102361:102368 compcert.lib.Integers Make unsigned def
R102375:102382 compcert.lib.Integers Make unsigned def
R102329:102336 compcert.lib.Integers Make unsigned def
R102399:102406 compcert.lib.Integers Make unsigned def
R102417:102417 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102441:102444 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102428:102430 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102418:102425 compcert.lib.Integers Make unsigned def
R102431:102438 compcert.lib.Integers Make unsigned def
R102445:102452 compcert.lib.Integers Make unsigned def
R102417:102417 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102441:102444 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102428:102430 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102418:102425 compcert.lib.Integers Make unsigned def
R102431:102438 compcert.lib.Integers Make unsigned def
R102445:102452 compcert.lib.Integers Make unsigned def
R102399:102406 compcert.lib.Integers Make unsigned def
R102466:102472 compcert.lib.Integers Make eqm_sub thm
R102466:102472 compcert.lib.Integers Make eqm_sub thm
R102497:102504 compcert.lib.Integers Make unsigned def
R102507:102510 compcert.lib.Integers Make repr def
R102523:102525 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102513:102520 compcert.lib.Integers Make unsigned def
R102526:102533 compcert.lib.Integers Make unsigned def
R102481:102489 compcert.lib.Integers Make eqm_trans thm
R102497:102504 compcert.lib.Integers Make unsigned def
R102507:102510 compcert.lib.Integers Make repr def
R102523:102525 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102513:102520 compcert.lib.Integers Make unsigned def
R102526:102533 compcert.lib.Integers Make unsigned def
R102481:102489 compcert.lib.Integers Make eqm_trans thm
R102582:102589 compcert.lib.Integers Make unsigned def
R102592:102595 compcert.lib.Integers Make repr def
R102608:102610 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102598:102605 compcert.lib.Integers Make unsigned def
R102611:102618 compcert.lib.Integers Make unsigned def
R102566:102574 compcert.lib.Integers Make eqm_trans thm
R102582:102589 compcert.lib.Integers Make unsigned def
R102592:102595 compcert.lib.Integers Make repr def
R102608:102610 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102598:102605 compcert.lib.Integers Make unsigned def
R102611:102618 compcert.lib.Integers Make unsigned def
R102566:102574 compcert.lib.Integers Make eqm_trans thm
prf 102707:102719 Make translate_ltu
R102784:102789 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102834:102839 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102863:102865 Coq.Init.Logic <> :type_scope:x_'='_x not
R102840:102842 compcert.lib.Integers Make ltu def
R102855:102857 compcert.lib.Integers Make add def
R102861:102861 compcert.lib.Integers <> d var
R102859:102859 compcert.lib.Integers <> y var
R102845:102847 compcert.lib.Integers Make add def
R102851:102851 compcert.lib.Integers <> d var
R102849:102849 compcert.lib.Integers <> x var
R102866:102868 compcert.lib.Integers Make ltu def
R102872:102872 compcert.lib.Integers <> y var
R102870:102870 compcert.lib.Integers <> x var
R102791:102794 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R102818:102821 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R102805:102807 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102795:102802 compcert.lib.Integers Make unsigned def
R102804:102804 compcert.lib.Integers <> y var
R102808:102815 compcert.lib.Integers Make unsigned def
R102817:102817 compcert.lib.Integers <> d var
R102805:102807 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102795:102802 compcert.lib.Integers Make unsigned def
R102804:102804 compcert.lib.Integers <> y var
R102808:102815 compcert.lib.Integers Make unsigned def
R102817:102817 compcert.lib.Integers <> d var
R102822:102833 compcert.lib.Integers Make max_unsigned def
R102741:102744 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R102768:102771 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R102755:102757 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102745:102752 compcert.lib.Integers Make unsigned def
R102754:102754 compcert.lib.Integers <> x var
R102758:102765 compcert.lib.Integers Make unsigned def
R102767:102767 compcert.lib.Integers <> d var
R102755:102757 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102745:102752 compcert.lib.Integers Make unsigned def
R102754:102754 compcert.lib.Integers <> x var
R102758:102765 compcert.lib.Integers Make unsigned def
R102767:102767 compcert.lib.Integers <> d var
R102772:102783 compcert.lib.Integers Make max_unsigned def
R102899:102901 compcert.lib.Integers Make add def
R102911:102913 compcert.lib.Integers Make ltu def
R102933:102945 compcert.lib.Integers Make unsigned_repr thm
R102933:102945 compcert.lib.Integers Make unsigned_repr thm
R102933:102945 compcert.lib.Integers Make unsigned_repr thm
R102933:102945 compcert.lib.Integers Make unsigned_repr thm
R102933:102945 compcert.lib.Integers Make unsigned_repr thm
R102933:102945 compcert.lib.Integers Make unsigned_repr thm
R102933:102945 compcert.lib.Integers Make unsigned_repr thm
R102933:102945 compcert.lib.Integers Make unsigned_repr thm
R102933:102945 compcert.lib.Integers Make unsigned_repr thm
R102933:102945 compcert.lib.Integers Make unsigned_repr thm
R102960:102962 compcert.lib.Coqlib <> zlt def
R102978:102985 compcert.lib.Integers Make unsigned def
R102965:102972 compcert.lib.Integers Make unsigned def
R102960:102962 compcert.lib.Coqlib <> zlt def
R102978:102985 compcert.lib.Integers Make unsigned def
R102965:102972 compcert.lib.Integers Make unsigned def
R103007:103014 compcert.lib.Coqlib <> zlt_true thm
R103007:103014 compcert.lib.Coqlib <> zlt_true thm
R103032:103040 compcert.lib.Coqlib <> zlt_false thm
R103032:103040 compcert.lib.Coqlib <> zlt_false thm
prf 103064:103077 Make translate_cmpu
R103144:103149 Coq.Init.Logic <> :type_scope:x_'->'_x not
R103194:103199 Coq.Init.Logic <> :type_scope:x_'->'_x not
R103226:103228 Coq.Init.Logic <> :type_scope:x_'='_x not
R103200:103203 compcert.lib.Integers Make cmpu def
R103218:103220 compcert.lib.Integers Make add def
R103224:103224 compcert.lib.Integers <> d var
R103222:103222 compcert.lib.Integers <> y var
R103208:103210 compcert.lib.Integers Make add def
R103214:103214 compcert.lib.Integers <> d var
R103212:103212 compcert.lib.Integers <> x var
R103205:103205 compcert.lib.Integers <> c var
R103229:103232 compcert.lib.Integers Make cmpu def
R103238:103238 compcert.lib.Integers <> y var
R103236:103236 compcert.lib.Integers <> x var
R103234:103234 compcert.lib.Integers <> c var
R103151:103154 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103178:103181 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103165:103167 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103155:103162 compcert.lib.Integers Make unsigned def
R103164:103164 compcert.lib.Integers <> y var
R103168:103175 compcert.lib.Integers Make unsigned def
R103177:103177 compcert.lib.Integers <> d var
R103165:103167 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103155:103162 compcert.lib.Integers Make unsigned def
R103164:103164 compcert.lib.Integers <> y var
R103168:103175 compcert.lib.Integers Make unsigned def
R103177:103177 compcert.lib.Integers <> d var
R103182:103193 compcert.lib.Integers Make max_unsigned def
R103101:103104 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103128:103131 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103115:103117 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103105:103112 compcert.lib.Integers Make unsigned def
R103114:103114 compcert.lib.Integers <> x var
R103118:103125 compcert.lib.Integers Make unsigned def
R103127:103127 compcert.lib.Integers <> d var
R103115:103117 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103105:103112 compcert.lib.Integers Make unsigned def
R103114:103114 compcert.lib.Integers <> x var
R103118:103125 compcert.lib.Integers Make unsigned def
R103127:103127 compcert.lib.Integers <> d var
R103132:103143 compcert.lib.Integers Make max_unsigned def
R103265:103268 compcert.lib.Integers Make cmpu def
R103281:103292 compcert.lib.Integers Make translate_eq thm
R103281:103292 compcert.lib.Integers Make translate_eq thm
R103281:103292 compcert.lib.Integers Make translate_eq thm
R103310:103322 compcert.lib.Integers Make translate_ltu thm
R103310:103322 compcert.lib.Integers Make translate_ltu thm
R103310:103322 compcert.lib.Integers Make translate_ltu thm
R103310:103322 compcert.lib.Integers Make translate_ltu thm
R103310:103322 compcert.lib.Integers Make translate_ltu thm
R103310:103322 compcert.lib.Integers Make translate_ltu thm
R103310:103322 compcert.lib.Integers Make translate_ltu thm
R103310:103322 compcert.lib.Integers Make translate_ltu thm
R103310:103322 compcert.lib.Integers Make translate_ltu thm
R103310:103322 compcert.lib.Integers Make translate_ltu thm
R103310:103322 compcert.lib.Integers Make translate_ltu thm
R103310:103322 compcert.lib.Integers Make translate_ltu thm
R103310:103322 compcert.lib.Integers Make translate_ltu thm
R103310:103322 compcert.lib.Integers Make translate_ltu thm
prf 103343:103354 Make translate_lt
R103422:103427 Coq.Init.Logic <> :type_scope:x_'->'_x not
R103475:103480 Coq.Init.Logic <> :type_scope:x_'->'_x not
R103503:103505 Coq.Init.Logic <> :type_scope:x_'='_x not
R103481:103482 compcert.lib.Integers Make lt def
R103495:103497 compcert.lib.Integers Make add def
R103501:103501 compcert.lib.Integers <> d var
R103499:103499 compcert.lib.Integers <> y var
R103485:103487 compcert.lib.Integers Make add def
R103491:103491 compcert.lib.Integers <> d var
R103489:103489 compcert.lib.Integers <> x var
R103506:103507 compcert.lib.Integers Make lt def
R103511:103511 compcert.lib.Integers <> y var
R103509:103509 compcert.lib.Integers <> x var
R103438:103441 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103461:103464 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103428:103437 compcert.lib.Integers Make min_signed def
R103450:103452 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103442:103447 compcert.lib.Integers Make signed def
R103449:103449 compcert.lib.Integers <> y var
R103453:103458 compcert.lib.Integers Make signed def
R103460:103460 compcert.lib.Integers <> d var
R103450:103452 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103442:103447 compcert.lib.Integers Make signed def
R103449:103449 compcert.lib.Integers <> y var
R103453:103458 compcert.lib.Integers Make signed def
R103460:103460 compcert.lib.Integers <> d var
R103465:103474 compcert.lib.Integers Make max_signed def
R103385:103388 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103408:103411 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103375:103384 compcert.lib.Integers Make min_signed def
R103397:103399 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103389:103394 compcert.lib.Integers Make signed def
R103396:103396 compcert.lib.Integers <> x var
R103400:103405 compcert.lib.Integers Make signed def
R103407:103407 compcert.lib.Integers <> d var
R103397:103399 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103389:103394 compcert.lib.Integers Make signed def
R103396:103396 compcert.lib.Integers <> x var
R103400:103405 compcert.lib.Integers Make signed def
R103407:103407 compcert.lib.Integers <> d var
R103412:103421 compcert.lib.Integers Make max_signed def
R103546:103555 compcert.lib.Integers Make add_signed thm
R103546:103555 compcert.lib.Integers Make add_signed thm
R103546:103555 compcert.lib.Integers Make add_signed thm
R103546:103555 compcert.lib.Integers Make add_signed thm
R103546:103555 compcert.lib.Integers Make add_signed thm
R103546:103555 compcert.lib.Integers Make add_signed thm
R103565:103566 compcert.lib.Integers Make lt def
R103586:103596 compcert.lib.Integers Make signed_repr thm
R103586:103596 compcert.lib.Integers Make signed_repr thm
R103586:103596 compcert.lib.Integers Make signed_repr thm
R103586:103596 compcert.lib.Integers Make signed_repr thm
R103586:103596 compcert.lib.Integers Make signed_repr thm
R103586:103596 compcert.lib.Integers Make signed_repr thm
R103586:103596 compcert.lib.Integers Make signed_repr thm
R103586:103596 compcert.lib.Integers Make signed_repr thm
R103586:103596 compcert.lib.Integers Make signed_repr thm
R103586:103596 compcert.lib.Integers Make signed_repr thm
R103611:103613 compcert.lib.Coqlib <> zlt def
R103627:103632 compcert.lib.Integers Make signed def
R103616:103621 compcert.lib.Integers Make signed def
R103611:103613 compcert.lib.Coqlib <> zlt def
R103627:103632 compcert.lib.Integers Make signed def
R103616:103621 compcert.lib.Integers Make signed def
R103654:103661 compcert.lib.Coqlib <> zlt_true thm
R103654:103661 compcert.lib.Coqlib <> zlt_true thm
R103679:103687 compcert.lib.Coqlib <> zlt_false thm
R103679:103687 compcert.lib.Coqlib <> zlt_false thm
prf 103711:103723 Make translate_cmp
R103793:103798 Coq.Init.Logic <> :type_scope:x_'->'_x not
R103846:103851 Coq.Init.Logic <> :type_scope:x_'->'_x not
R103877:103879 Coq.Init.Logic <> :type_scope:x_'='_x not
R103852:103854 compcert.lib.Integers Make cmp def
R103869:103871 compcert.lib.Integers Make add def
R103875:103875 compcert.lib.Integers <> d var
R103873:103873 compcert.lib.Integers <> y var
R103859:103861 compcert.lib.Integers Make add def
R103865:103865 compcert.lib.Integers <> d var
R103863:103863 compcert.lib.Integers <> x var
R103856:103856 compcert.lib.Integers <> c var
R103880:103882 compcert.lib.Integers Make cmp def
R103888:103888 compcert.lib.Integers <> y var
R103886:103886 compcert.lib.Integers <> x var
R103884:103884 compcert.lib.Integers <> c var
R103809:103812 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103832:103835 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103799:103808 compcert.lib.Integers Make min_signed def
R103821:103823 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103813:103818 compcert.lib.Integers Make signed def
R103820:103820 compcert.lib.Integers <> y var
R103824:103829 compcert.lib.Integers Make signed def
R103831:103831 compcert.lib.Integers <> d var
R103821:103823 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103813:103818 compcert.lib.Integers Make signed def
R103820:103820 compcert.lib.Integers <> y var
R103824:103829 compcert.lib.Integers Make signed def
R103831:103831 compcert.lib.Integers <> d var
R103836:103845 compcert.lib.Integers Make max_signed def
R103756:103759 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103779:103782 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103746:103755 compcert.lib.Integers Make min_signed def
R103768:103770 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103760:103765 compcert.lib.Integers Make signed def
R103767:103767 compcert.lib.Integers <> x var
R103771:103776 compcert.lib.Integers Make signed def
R103778:103778 compcert.lib.Integers <> d var
R103768:103770 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103760:103765 compcert.lib.Integers Make signed def
R103767:103767 compcert.lib.Integers <> x var
R103771:103776 compcert.lib.Integers Make signed def
R103778:103778 compcert.lib.Integers <> d var
R103783:103792 compcert.lib.Integers Make max_signed def
R103915:103917 compcert.lib.Integers Make cmp def
R103930:103941 compcert.lib.Integers Make translate_eq thm
R103930:103941 compcert.lib.Integers Make translate_eq thm
R103930:103941 compcert.lib.Integers Make translate_eq thm
R103959:103970 compcert.lib.Integers Make translate_lt thm
R103959:103970 compcert.lib.Integers Make translate_lt thm
R103959:103970 compcert.lib.Integers Make translate_lt thm
R103959:103970 compcert.lib.Integers Make translate_lt thm
R103959:103970 compcert.lib.Integers Make translate_lt thm
R103959:103970 compcert.lib.Integers Make translate_lt thm
R103959:103970 compcert.lib.Integers Make translate_lt thm
R103959:103970 compcert.lib.Integers Make translate_lt thm
R103959:103970 compcert.lib.Integers Make translate_lt thm
R103959:103970 compcert.lib.Integers Make translate_lt thm
R103959:103970 compcert.lib.Integers Make translate_lt thm
R103959:103970 compcert.lib.Integers Make translate_lt thm
R103959:103970 compcert.lib.Integers Make translate_lt thm
R103959:103970 compcert.lib.Integers Make translate_lt thm
prf 103993:104014 Make notbool_isfalse_istrue
R104039:104042 Coq.Init.Logic <> :type_scope:x_'->'_x not
R104043:104049 compcert.lib.Integers Make is_true def
R104052:104058 compcert.lib.Integers Make notbool def
R104060:104060 compcert.lib.Integers <> x var
R104029:104036 compcert.lib.Integers Make is_false def
R104038:104038 compcert.lib.Integers <> x var
R104080:104087 compcert.lib.Integers Make is_false def
R104090:104096 compcert.lib.Integers Make is_true def
R104099:104105 compcert.lib.Integers Make notbool def
R104135:104141 compcert.lib.Integers Make eq_true thm
R104135:104141 compcert.lib.Integers Make eq_true thm
R104135:104141 compcert.lib.Integers Make eq_true thm
R104150:104161 compcert.lib.Integers Make one_not_zero thm
R104150:104161 compcert.lib.Integers Make one_not_zero thm
prf 104178:104199 Make notbool_istrue_isfalse
R104223:104226 Coq.Init.Logic <> :type_scope:x_'->'_x not
R104227:104234 compcert.lib.Integers Make is_false def
R104237:104243 compcert.lib.Integers Make notbool def
R104245:104245 compcert.lib.Integers <> x var
R104214:104220 compcert.lib.Integers Make is_true def
R104222:104222 compcert.lib.Integers <> x var
R104265:104272 compcert.lib.Integers Make is_false def
R104275:104281 compcert.lib.Integers Make is_true def
R104284:104290 compcert.lib.Integers Make notbool def
R104315:104321 compcert.lib.Integers Make eq_spec thm
R104325:104328 compcert.lib.Integers Make zero def
R104315:104321 compcert.lib.Integers Make eq_spec thm
R104325:104328 compcert.lib.Integers Make zero def
R104338:104339 compcert.lib.Integers Make eq def
R104343:104346 compcert.lib.Integers Make zero def
R104338:104339 compcert.lib.Integers Make eq def
R104343:104346 compcert.lib.Integers Make zero def
prf 104394:104407 Make ltu_range_test
R104440:104443 Coq.Init.Logic <> :type_scope:x_'->'_x not
R104468:104473 Coq.Init.Logic <> :type_scope:x_'->'_x not
R104475:104478 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R104487:104489 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R104479:104484 compcert.lib.Integers Make signed def
R104486:104486 compcert.lib.Integers <> x var
R104479:104484 compcert.lib.Integers Make signed def
R104486:104486 compcert.lib.Integers <> x var
R104490:104497 compcert.lib.Integers Make unsigned def
R104499:104499 compcert.lib.Integers <> y var
R104454:104457 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R104444:104451 compcert.lib.Integers Make unsigned def
R104453:104453 compcert.lib.Integers <> y var
R104458:104467 compcert.lib.Integers Make max_signed def
R104433:104435 Coq.Init.Logic <> :type_scope:x_'='_x not
R104426:104428 compcert.lib.Integers Make ltu def
R104432:104432 compcert.lib.Integers <> y var
R104430:104430 compcert.lib.Integers <> x var
R104436:104439 Coq.Init.Datatypes <> true constr
R104528:104530 compcert.lib.Integers Make ltu def
R104548:104550 compcert.lib.Coqlib <> zlt def
R104566:104573 compcert.lib.Integers Make unsigned def
R104553:104560 compcert.lib.Integers Make unsigned def
R104548:104550 compcert.lib.Coqlib <> zlt def
R104566:104573 compcert.lib.Integers Make unsigned def
R104553:104560 compcert.lib.Integers Make unsigned def
R104608:104625 compcert.lib.Integers Make signed_eq_unsigned thm
R104608:104625 compcert.lib.Integers Make signed_eq_unsigned thm
R104608:104625 compcert.lib.Integers Make signed_eq_unsigned thm
R104608:104625 compcert.lib.Integers Make signed_eq_unsigned thm
R104642:104655 compcert.lib.Integers Make unsigned_range thm
R104642:104655 compcert.lib.Integers Make unsigned_range thm
prf 104689:104703 Make lt_sub_overflow
R104770:104772 Coq.Init.Logic <> :type_scope:x_'='_x not
R104722:104724 compcert.lib.Integers Make xor def
R104751:104758 compcert.lib.Integers Make negative def
R104761:104763 compcert.lib.Integers Make sub def
R104767:104767 compcert.lib.Integers <> y var
R104765:104765 compcert.lib.Integers <> x var
R104727:104738 compcert.lib.Integers Make sub_overflow def
R104744:104747 compcert.lib.Integers Make zero def
R104742:104742 compcert.lib.Integers <> y var
R104740:104740 compcert.lib.Integers <> x var
R104776:104777 compcert.lib.Integers Make lt def
R104781:104781 compcert.lib.Integers <> y var
R104779:104779 compcert.lib.Integers <> x var
R104797:104800 compcert.lib.Integers Make zero def
R104788:104790 compcert.lib.Integers Make one def
R104827:104834 compcert.lib.Integers Make negative def
R104837:104848 compcert.lib.Integers Make sub_overflow def
R104851:104852 compcert.lib.Integers Make lt def
R104863:104872 compcert.lib.Integers Make sub_signed thm
R104863:104872 compcert.lib.Integers Make sub_signed thm
R104863:104872 compcert.lib.Integers Make sub_signed thm
R104885:104895 compcert.lib.Integers Make signed_zero thm
R104885:104895 compcert.lib.Integers Make signed_zero thm
R104885:104895 compcert.lib.Integers Make signed_zero thm
R104906:104915 Coq.ZArith.BinInt <> Zminus_0_r syndef
R104906:104915 Coq.ZArith.BinInt <> Zminus_0_r syndef
R104906:104915 Coq.ZArith.BinInt <> Zminus_0_r syndef
R104932:104943 compcert.lib.Integers Make signed_range thm
R104949:104960 compcert.lib.Integers Make signed_range thm
R104932:104943 compcert.lib.Integers Make signed_range thm
R104949:104960 compcert.lib.Integers Make signed_range thm
R104978:104983 compcert.lib.Integers Make signed def
R104999:105004 compcert.lib.Integers Make signed def
R104978:104983 compcert.lib.Integers Make signed def
R104999:105004 compcert.lib.Integers Make signed def
R105033:105042 compcert.lib.Integers Make min_signed def
R105045:105054 compcert.lib.Integers Make max_signed def
R105075:105090 compcert.lib.Integers Make half_modulus_pos thm
R105092:105111 compcert.lib.Integers Make half_modulus_modulus thm
R105075:105090 compcert.lib.Integers Make half_modulus_pos thm
R105092:105111 compcert.lib.Integers Make half_modulus_modulus thm
R105140:105142 compcert.lib.Coqlib <> zle def
R105148:105150 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105140:105142 compcert.lib.Coqlib <> zle def
R105148:105150 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105165:105176 compcert.lib.Coqlib <> proj_sumbool def
R105192:105199 compcert.lib.Coqlib <> zle_true thm
R105192:105199 compcert.lib.Coqlib <> zle_true thm
R105192:105199 compcert.lib.Coqlib <> zle_true thm
R105234:105242 compcert.lib.Coqlib <> zlt_false thm
R105234:105242 compcert.lib.Coqlib <> zlt_false thm
R105234:105242 compcert.lib.Coqlib <> zlt_false thm
R105271:105273 compcert.lib.Coqlib <> zlt def
R105283:105294 compcert.lib.Integers Make half_modulus def
R105277:105279 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105271:105273 compcert.lib.Coqlib <> zlt def
R105283:105294 compcert.lib.Integers Make half_modulus def
R105277:105279 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105309:105320 compcert.lib.Coqlib <> proj_sumbool def
R105331:105338 compcert.lib.Coqlib <> zle_true thm
R105331:105338 compcert.lib.Coqlib <> zle_true thm
R105331:105338 compcert.lib.Coqlib <> zle_true thm
R105362:105372 compcert.lib.Integers Make signed_repr thm
R105362:105372 compcert.lib.Integers Make signed_repr thm
R105362:105372 compcert.lib.Integers Make signed_repr thm
R105362:105372 compcert.lib.Integers Make signed_repr thm
R105383:105391 compcert.lib.Coqlib <> zlt_false thm
R105383:105391 compcert.lib.Coqlib <> zlt_false thm
R105383:105391 compcert.lib.Coqlib <> zlt_false thm
R105409:105416 compcert.lib.Integers Make xor_idem thm
R105409:105416 compcert.lib.Integers Make xor_idem thm
R105430:105439 compcert.lib.Integers Make min_signed def
R105442:105451 compcert.lib.Integers Make max_signed def
R105472:105483 compcert.lib.Coqlib <> proj_sumbool def
R105494:105502 compcert.lib.Coqlib <> zle_false thm
R105494:105502 compcert.lib.Coqlib <> zle_false thm
R105494:105502 compcert.lib.Coqlib <> zle_false thm
R105527:105532 compcert.lib.Integers Make signed def
R105535:105538 compcert.lib.Integers Make repr def
R105542:105544 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105561:105563 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105557:105559 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105564:105570 compcert.lib.Integers Make modulus def
R105561:105563 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105557:105559 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105564:105570 compcert.lib.Integers Make modulus def
R105527:105532 compcert.lib.Integers Make signed def
R105535:105538 compcert.lib.Integers Make repr def
R105542:105544 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105586:105593 compcert.lib.Coqlib <> zlt_true thm
R105586:105593 compcert.lib.Coqlib <> zlt_true thm
R105586:105593 compcert.lib.Coqlib <> zlt_true thm
R105611:105618 compcert.lib.Integers Make xor_idem thm
R105611:105618 compcert.lib.Integers Make xor_idem thm
R105633:105646 compcert.lib.Integers Make signed_repr_eq thm
R105633:105646 compcert.lib.Integers Make signed_repr_eq thm
R105633:105646 compcert.lib.Integers Make signed_repr_eq thm
R105658:105658 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R105664:105669 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R105660:105662 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105670:105676 compcert.lib.Integers Make modulus def
R105686:105688 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105686:105688 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105658:105658 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R105664:105669 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R105660:105662 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105670:105676 compcert.lib.Integers Make modulus def
R105705:105713 compcert.lib.Coqlib <> zlt_false thm
R105705:105713 compcert.lib.Coqlib <> zlt_false thm
R105705:105713 compcert.lib.Coqlib <> zlt_false thm
R105705:105713 compcert.lib.Coqlib <> zlt_false thm
R105742:105752 compcert.lib.Coqlib <> Zmod_unique thm
R105742:105752 compcert.lib.Coqlib <> Zmod_unique thm
R105778:105789 compcert.lib.Coqlib <> proj_sumbool def
R105805:105812 compcert.lib.Coqlib <> zle_true thm
R105805:105812 compcert.lib.Coqlib <> zle_true thm
R105805:105812 compcert.lib.Coqlib <> zle_true thm
R105837:105847 Coq.Bool.Bool <> andb_true_r thm
R105837:105847 Coq.Bool.Bool <> andb_true_r thm
R105837:105847 Coq.Bool.Bool <> andb_true_r thm
R105861:105868 compcert.lib.Coqlib <> zlt_true thm
R105861:105868 compcert.lib.Coqlib <> zlt_true thm
R105861:105868 compcert.lib.Coqlib <> zlt_true thm
R105897:105899 compcert.lib.Coqlib <> zlt def
R105910:105910 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R105911:105922 compcert.lib.Integers Make half_modulus def
R105903:105905 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105897:105899 compcert.lib.Coqlib <> zlt def
R105910:105910 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R105911:105922 compcert.lib.Integers Make half_modulus def
R105903:105905 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105938:105949 compcert.lib.Coqlib <> proj_sumbool def
R105960:105968 compcert.lib.Coqlib <> zle_false thm
R105960:105968 compcert.lib.Coqlib <> zle_false thm
R105960:105968 compcert.lib.Coqlib <> zle_false thm
R105993:105998 compcert.lib.Integers Make signed def
R106001:106004 compcert.lib.Integers Make repr def
R106008:106010 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106027:106029 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R106023:106025 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106030:106036 compcert.lib.Integers Make modulus def
R106027:106029 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R106023:106025 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106030:106036 compcert.lib.Integers Make modulus def
R105993:105998 compcert.lib.Integers Make signed def
R106001:106004 compcert.lib.Integers Make repr def
R106008:106010 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106052:106060 compcert.lib.Coqlib <> zlt_false thm
R106052:106060 compcert.lib.Coqlib <> zlt_false thm
R106052:106060 compcert.lib.Coqlib <> zlt_false thm
R106078:106085 compcert.lib.Integers Make xor_zero thm
R106078:106085 compcert.lib.Integers Make xor_zero thm
R106100:106113 compcert.lib.Integers Make signed_repr_eq thm
R106100:106113 compcert.lib.Integers Make signed_repr_eq thm
R106100:106113 compcert.lib.Integers Make signed_repr_eq thm
R106125:106125 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R106131:106136 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R106127:106129 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106137:106143 compcert.lib.Integers Make modulus def
R106157:106159 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R106153:106155 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106160:106166 compcert.lib.Integers Make modulus def
R106157:106159 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R106153:106155 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106160:106166 compcert.lib.Integers Make modulus def
R106125:106125 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R106131:106136 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R106127:106129 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106137:106143 compcert.lib.Integers Make modulus def
R106182:106189 compcert.lib.Coqlib <> zlt_true thm
R106182:106189 compcert.lib.Coqlib <> zlt_true thm
R106182:106189 compcert.lib.Coqlib <> zlt_true thm
R106227:106237 compcert.lib.Coqlib <> Zmod_unique thm
R106227:106237 compcert.lib.Coqlib <> Zmod_unique thm
R106268:106279 compcert.lib.Coqlib <> proj_sumbool def
R106290:106297 compcert.lib.Coqlib <> zle_true thm
R106290:106297 compcert.lib.Coqlib <> zle_true thm
R106290:106297 compcert.lib.Coqlib <> zle_true thm
R106321:106331 compcert.lib.Integers Make signed_repr thm
R106321:106331 compcert.lib.Integers Make signed_repr thm
R106321:106331 compcert.lib.Integers Make signed_repr thm
R106321:106331 compcert.lib.Integers Make signed_repr thm
R106342:106349 compcert.lib.Coqlib <> zlt_true thm
R106342:106349 compcert.lib.Coqlib <> zlt_true thm
R106342:106349 compcert.lib.Coqlib <> zlt_true thm
R106367:106376 compcert.lib.Integers Make xor_zero_l thm
R106367:106376 compcert.lib.Integers Make xor_zero_l thm
R106390:106399 compcert.lib.Integers Make min_signed def
R106402:106411 compcert.lib.Integers Make max_signed def
def 106467:106476 Make no_overlap
R106485:106487 compcert.lib.Integers Make int rec
R106496:106496 Coq.Numbers.BinNums <> Z ind
R106506:106508 compcert.lib.Integers Make int rec
R106517:106517 Coq.Numbers.BinNums <> Z ind
R106522:106525 Coq.Init.Datatypes <> bool ind
R106542:106549 compcert.lib.Integers Make unsigned def
R106551:106554 compcert.lib.Integers <> ofs1 var
R106569:106576 compcert.lib.Integers Make unsigned def
R106578:106581 compcert.lib.Integers <> ofs2 var
R106639:106645 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R106684:106684 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R106613:106616 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R106591:106593 compcert.lib.Coqlib <> zlt def
R106606:106612 compcert.lib.Integers Make modulus def
R106598:106600 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R106596:106597 compcert.lib.Integers <> x1 var
R106601:106603 compcert.lib.Integers <> sz1 var
R106617:106619 compcert.lib.Coqlib <> zlt def
R106632:106638 compcert.lib.Integers Make modulus def
R106624:106626 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R106622:106623 compcert.lib.Integers <> x2 var
R106627:106629 compcert.lib.Integers <> sz2 var
R106663:106666 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R106646:106648 compcert.lib.Coqlib <> zle def
R106661:106662 compcert.lib.Integers <> x2 var
R106653:106655 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R106651:106652 compcert.lib.Integers <> x1 var
R106656:106658 compcert.lib.Integers <> sz1 var
R106667:106669 compcert.lib.Coqlib <> zle def
R106682:106683 compcert.lib.Integers <> x1 var
R106674:106676 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R106672:106673 compcert.lib.Integers <> x2 var
R106677:106679 compcert.lib.Integers <> sz2 var
prf 106694:106709 Make no_overlap_sound
R106754:106757 Coq.Init.Logic <> :type_scope:x_'->'_x not
R106765:106768 Coq.Init.Logic <> :type_scope:x_'->'_x not
R106804:106809 Coq.Init.Logic <> :type_scope:x_'->'_x not
R106868:106873 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R106840:106843 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R106834:106836 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R106810:106817 compcert.lib.Integers Make unsigned def
R106820:106822 compcert.lib.Integers Make add def
R106829:106832 compcert.lib.Integers <> ofs1 var
R106824:106827 compcert.lib.Integers <> base var
R106837:106839 compcert.lib.Integers <> sz1 var
R106844:106851 compcert.lib.Integers Make unsigned def
R106854:106856 compcert.lib.Integers Make add def
R106863:106866 compcert.lib.Integers <> ofs2 var
R106858:106861 compcert.lib.Integers <> base var
R106904:106907 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R106898:106900 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R106874:106881 compcert.lib.Integers Make unsigned def
R106884:106886 compcert.lib.Integers Make add def
R106893:106896 compcert.lib.Integers <> ofs2 var
R106888:106891 compcert.lib.Integers <> base var
R106901:106903 compcert.lib.Integers <> sz2 var
R106908:106915 compcert.lib.Integers Make unsigned def
R106918:106920 compcert.lib.Integers Make add def
R106927:106930 compcert.lib.Integers <> ofs1 var
R106922:106925 compcert.lib.Integers <> base var
R106797:106799 Coq.Init.Logic <> :type_scope:x_'='_x not
R106769:106778 compcert.lib.Integers Make no_overlap def
R106794:106796 compcert.lib.Integers <> sz2 var
R106789:106792 compcert.lib.Integers <> ofs2 var
R106785:106787 compcert.lib.Integers <> sz1 var
R106780:106783 compcert.lib.Integers <> ofs1 var
R106800:106803 Coq.Init.Datatypes <> true constr
R106761:106763 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R106758:106760 compcert.lib.Integers <> sz2 var
R106750:106752 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R106747:106749 compcert.lib.Integers <> sz1 var
R106963:106971 Coq.Init.Datatypes <> andb_prop thm
R106963:106971 Coq.Init.Datatypes <> andb_prop thm
R107004:107012 Coq.Init.Datatypes <> andb_prop thm
R107004:107012 Coq.Init.Datatypes <> andb_prop thm
R107041:107057 compcert.lib.Coqlib <> proj_sumbool_true thm
R107041:107057 compcert.lib.Coqlib <> proj_sumbool_true thm
R107074:107090 compcert.lib.Coqlib <> proj_sumbool_true thm
R107074:107090 compcert.lib.Coqlib <> proj_sumbool_true thm
R107145:107148 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R107128:107131 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R107122:107124 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107109:107116 compcert.lib.Integers Make unsigned def
R107132:107139 compcert.lib.Integers Make unsigned def
R107168:107171 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R107162:107164 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107149:107156 compcert.lib.Integers Make unsigned def
R107172:107179 compcert.lib.Integers Make unsigned def
R107145:107148 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R107128:107131 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R107122:107124 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107109:107116 compcert.lib.Integers Make unsigned def
R107132:107139 compcert.lib.Integers Make unsigned def
R107168:107171 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R107162:107164 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107149:107156 compcert.lib.Integers Make unsigned def
R107172:107179 compcert.lib.Integers Make unsigned def
R107200:107207 Coq.Bool.Bool <> orb_prop thm
R107200:107207 Coq.Bool.Bool <> orb_prop thm
R107231:107247 compcert.lib.Coqlib <> proj_sumbool_true thm
R107231:107247 compcert.lib.Coqlib <> proj_sumbool_true thm
R107271:107287 compcert.lib.Coqlib <> proj_sumbool_true thm
R107271:107287 compcert.lib.Coqlib <> proj_sumbool_true thm
R107323:107336 compcert.lib.Integers Make unsigned_range thm
R107345:107358 compcert.lib.Integers Make unsigned_range thm
R107323:107336 compcert.lib.Integers Make unsigned_range thm
R107345:107358 compcert.lib.Integers Make unsigned_range thm
R107393:107411 compcert.lib.Integers Make unsigned_add_either thm
R107425:107443 compcert.lib.Integers Make unsigned_add_either thm
R107393:107411 compcert.lib.Integers Make unsigned_add_either thm
R107425:107443 compcert.lib.Integers Make unsigned_add_either thm
def 107538:107542 Make Zsize
R107548:107548 Coq.Numbers.BinNums <> Z ind
R107553:107553 Coq.Numbers.BinNums <> Z ind
R107566:107566 compcert.lib.Integers <> x var
R107577:107580 Coq.Numbers.BinNums <> Zpos constr
R107587:107590 Coq.Numbers.BinNums <> Zpos constr
R107593:107600 Coq.PArith.BinPos Pos size def
def 107635:107638 Make size
R107644:107646 compcert.lib.Integers Make int rec
R107651:107651 Coq.Numbers.BinNums <> Z ind
R107656:107660 compcert.lib.Integers Make Zsize def
R107663:107670 compcert.lib.Integers Make unsigned def
R107672:107672 compcert.lib.Integers <> x var
prf 107684:107692 Make Zsize_pos
R107706:107709 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R107710:107714 compcert.lib.Integers Make Zsize def
R107716:107716 compcert.lib.Integers <> x var
prf 107805:107814 Make Zsize_pos'
R107832:107835 Coq.Init.Logic <> :type_scope:x_'->'_x not
R107837:107839 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R107840:107844 compcert.lib.Integers Make Zsize def
R107846:107846 compcert.lib.Integers <> x var
R107828:107830 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R107831:107831 compcert.lib.Integers <> x var
prf 107930:107942 Make Zsize_shiftin
R107964:107967 Coq.Init.Logic <> :type_scope:x_'->'_x not
R107988:107990 Coq.Init.Logic <> :type_scope:x_'='_x not
R107968:107972 compcert.lib.Integers Make Zsize def
R107975:107982 compcert.lib.Integers Make Zshiftin def
R107986:107986 compcert.lib.Integers <> x var
R107984:107984 compcert.lib.Integers <> b var
R107991:107995 Coq.ZArith.BinInt <> Zsucc syndef
R107998:108002 compcert.lib.Integers Make Zsize def
R108004:108004 compcert.lib.Integers <> x var
R107960:107962 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R107963:107963 compcert.lib.Integers <> x var
R108123:108126 Coq.Numbers.BinNums <> Zpos constr
R108130:108131 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R108093:108100 compcert.lib.Integers Make Zshiftin def
R108108:108111 Coq.Numbers.BinNums <> Zpos constr
R108102:108105 Coq.Init.Datatypes <> true constr
R108093:108100 compcert.lib.Integers Make Zshiftin def
R108108:108111 Coq.Numbers.BinNums <> Zpos constr
R108102:108105 Coq.Init.Datatypes <> true constr
R108123:108126 Coq.Numbers.BinNums <> Zpos constr
R108130:108131 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R108162:108172 Coq.PArith.BinPos Pos add_1_r thm
R108162:108172 Coq.PArith.BinPos Pos add_1_r thm
R108162:108172 Coq.PArith.BinPos Pos add_1_r thm
R108222:108225 Coq.Numbers.BinNums <> Zpos constr
R108229:108230 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R108191:108198 compcert.lib.Integers Make Zshiftin def
R108207:108210 Coq.Numbers.BinNums <> Zpos constr
R108200:108204 Coq.Init.Datatypes <> false constr
R108191:108198 compcert.lib.Integers Make Zshiftin def
R108207:108210 Coq.Numbers.BinNums <> Zpos constr
R108200:108204 Coq.Init.Datatypes <> false constr
R108222:108225 Coq.Numbers.BinNums <> Zpos constr
R108229:108230 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R108261:108271 Coq.PArith.BinPos Pos add_1_r thm
R108261:108271 Coq.PArith.BinPos Pos add_1_r thm
R108261:108271 Coq.PArith.BinPos Pos add_1_r thm
prf 108292:108306 Make Ztestbit_size_1
R108326:108329 Coq.Init.Logic <> :type_scope:x_'->'_x not
R108359:108361 Coq.Init.Logic <> :type_scope:x_'='_x not
R108330:108338 Coq.ZArith.BinInt Z testbit def
R108343:108347 Coq.ZArith.BinInt <> Zpred syndef
R108350:108354 compcert.lib.Integers Make Zsize def
R108356:108356 compcert.lib.Integers <> x var
R108340:108340 compcert.lib.Integers <> x var
R108362:108365 Coq.Init.Datatypes <> true constr
R108322:108324 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R108325:108325 compcert.lib.Integers <> x var
R108411:108426 compcert.lib.Integers Make Zshiftin_pos_ind thm
R108411:108426 compcert.lib.Integers Make Zshiftin_pos_ind thm
R108453:108465 compcert.lib.Integers Make Zsize_shiftin thm
R108453:108465 compcert.lib.Integers Make Zsize_shiftin thm
R108453:108465 compcert.lib.Integers Make Zsize_shiftin thm
R108453:108465 compcert.lib.Integers Make Zsize_shiftin thm
R108485:108490 Coq.ZArith.BinInt Z pred def
R108493:108498 Coq.ZArith.BinInt Z succ def
R108501:108505 compcert.lib.Integers Make Zsize def
R108518:108523 Coq.ZArith.BinInt Z succ def
R108526:108531 Coq.ZArith.BinInt Z pred def
R108534:108538 compcert.lib.Integers Make Zsize def
R108518:108523 Coq.ZArith.BinInt Z succ def
R108526:108531 Coq.ZArith.BinInt Z pred def
R108534:108538 compcert.lib.Integers Make Zsize def
R108485:108490 Coq.ZArith.BinInt Z pred def
R108493:108498 Coq.ZArith.BinInt Z succ def
R108501:108505 compcert.lib.Integers Make Zsize def
R108565:108585 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R108565:108585 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R108565:108585 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R108565:108585 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R108606:108615 compcert.lib.Integers Make Zsize_pos' thm
R108606:108615 compcert.lib.Integers Make Zsize_pos' thm
prf 108642:108656 Make Ztestbit_size_2
R108677:108680 Coq.Init.Logic <> :type_scope:x_'->'_x not
R108703:108706 Coq.Init.Logic <> :type_scope:x_'->'_x not
R108720:108722 Coq.Init.Logic <> :type_scope:x_'='_x not
R108707:108715 Coq.ZArith.BinInt Z testbit def
R108719:108719 compcert.lib.Integers <> i var
R108717:108717 compcert.lib.Integers <> x var
R108723:108727 Coq.Init.Datatypes <> false constr
R108692:108695 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R108691:108691 compcert.lib.Integers <> i var
R108696:108700 compcert.lib.Integers Make Zsize def
R108702:108702 compcert.lib.Integers <> x var
R108672:108675 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R108676:108676 compcert.lib.Integers <> x var
R108765:108767 compcert.lib.Coqlib <> zeq def
R108765:108767 compcert.lib.Coqlib <> zeq def
R108804:108813 compcert.lib.Integers Make Ztestbit_0 thm
R108804:108813 compcert.lib.Integers Make Ztestbit_0 thm
R108838:108853 compcert.lib.Integers Make Zshiftin_pos_ind thm
R108838:108853 compcert.lib.Integers Make Zshiftin_pos_ind thm
R108892:108899 compcert.lib.Integers Make Zshiftin def
R108901:108904 Coq.Init.Datatypes <> true constr
R108892:108899 compcert.lib.Integers Make Zshiftin def
R108901:108904 Coq.Init.Datatypes <> true constr
R108918:108933 compcert.lib.Integers Make Ztestbit_shiftin thm
R108918:108933 compcert.lib.Integers Make Ztestbit_shiftin thm
R108918:108933 compcert.lib.Integers Make Ztestbit_shiftin thm
R108918:108933 compcert.lib.Integers Make Ztestbit_shiftin thm
R108950:108958 compcert.lib.Coqlib <> zeq_false thm
R108950:108958 compcert.lib.Coqlib <> zeq_false thm
R108950:108958 compcert.lib.Coqlib <> zeq_false thm
R108950:108958 compcert.lib.Coqlib <> zeq_false thm
R108967:108976 compcert.lib.Integers Make Ztestbit_0 thm
R108967:108976 compcert.lib.Integers Make Ztestbit_0 thm
R109015:109027 compcert.lib.Integers Make Zsize_shiftin thm
R109015:109027 compcert.lib.Integers Make Zsize_shiftin thm
R109015:109027 compcert.lib.Integers Make Zsize_shiftin thm
R109015:109027 compcert.lib.Integers Make Zsize_shiftin thm
R109060:109069 compcert.lib.Integers Make Zsize_pos' thm
R109060:109069 compcert.lib.Integers Make Zsize_pos' thm
R109099:109114 compcert.lib.Integers Make Ztestbit_shiftin thm
R109099:109114 compcert.lib.Integers Make Ztestbit_shiftin thm
R109099:109114 compcert.lib.Integers Make Ztestbit_shiftin thm
R109099:109114 compcert.lib.Integers Make Ztestbit_shiftin thm
R109125:109133 compcert.lib.Coqlib <> zeq_false thm
R109125:109133 compcert.lib.Coqlib <> zeq_false thm
R109125:109133 compcert.lib.Coqlib <> zeq_false thm
R109125:109133 compcert.lib.Coqlib <> zeq_false thm
prf 109198:109213 Make Zsize_interval_1
R109234:109237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R109239:109242 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R109244:109246 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R109243:109243 compcert.lib.Integers <> x var
R109243:109243 compcert.lib.Integers <> x var
R109247:109251 Coq.ZArith.Zpower <> two_p def
R109254:109258 compcert.lib.Integers Make Zsize def
R109260:109260 compcert.lib.Integers <> x var
R109229:109232 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R109233:109233 compcert.lib.Integers <> x var
R109292:109294 Coq.Init.Logic <> :type_scope:x_'='_x not
R109296:109301 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R109317:109317 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R109302:109306 Coq.ZArith.Zpower <> two_p def
R109309:109313 compcert.lib.Integers Make Zsize def
R109292:109294 Coq.Init.Logic <> :type_scope:x_'='_x not
R109296:109301 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R109317:109317 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R109302:109306 Coq.ZArith.Zpower <> two_p def
R109309:109313 compcert.lib.Integers Make Zsize def
R109331:109345 compcert.lib.Integers Make equal_same_bits thm
R109331:109345 compcert.lib.Integers Make equal_same_bits thm
R109368:109385 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R109368:109385 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R109368:109385 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R109368:109385 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R109368:109385 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R109408:109410 compcert.lib.Coqlib <> zlt def
R109415:109419 compcert.lib.Integers Make Zsize def
R109408:109410 compcert.lib.Coqlib <> zlt def
R109415:109419 compcert.lib.Integers Make Zsize def
R109438:109452 compcert.lib.Integers Make Ztestbit_size_2 thm
R109438:109452 compcert.lib.Integers Make Ztestbit_size_2 thm
R109471:109479 compcert.lib.Integers Make Zsize_pos thm
R109471:109479 compcert.lib.Integers Make Zsize_pos thm
R109530:109537 Coq.ZArith.Zdiv <> Z_mod_lt thm
R109530:109537 Coq.ZArith.Zdiv <> Z_mod_lt thm
R109546:109558 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R109546:109558 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R109567:109575 compcert.lib.Integers Make Zsize_pos thm
R109567:109575 compcert.lib.Integers Make Zsize_pos thm
prf 109596:109611 Make Zsize_interval_2
R109634:109637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R109654:109657 Coq.Init.Logic <> :type_scope:x_'->'_x not
R109659:109662 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R109658:109658 compcert.lib.Integers <> n var
R109663:109667 compcert.lib.Integers Make Zsize def
R109669:109669 compcert.lib.Integers <> x var
R109639:109642 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R109644:109646 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R109643:109643 compcert.lib.Integers <> x var
R109643:109643 compcert.lib.Integers <> x var
R109647:109651 Coq.ZArith.Zpower <> two_p def
R109653:109653 compcert.lib.Integers <> n var
R109629:109632 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R109633:109633 compcert.lib.Integers <> n var
R109699:109706 Coq.ZArith.BinInt Z to_nat def
R109699:109706 Coq.ZArith.BinInt Z to_nat def
R109732:109734 Coq.Init.Logic <> :type_scope:x_'='_x not
R109722:109729 Coq.ZArith.BinInt Z of_nat def
R109748:109755 Coq.ZArith.Znat Z2Nat id thm
R109732:109734 Coq.Init.Logic <> :type_scope:x_'='_x not
R109722:109729 Coq.ZArith.BinInt Z of_nat def
R109748:109755 Coq.ZArith.Znat Z2Nat id thm
R109799:109817 compcert.lib.Coqlib <> two_power_nat_two_p thm
R109799:109817 compcert.lib.Coqlib <> two_power_nat_two_p thm
R109799:109817 compcert.lib.Coqlib <> two_power_nat_two_p thm
R109838:109840 compcert.lib.Coqlib <> zeq def
R109838:109840 compcert.lib.Coqlib <> zeq def
R109885:109887 compcert.lib.Coqlib <> zlt def
R109892:109896 compcert.lib.Integers Make Zsize def
R109885:109887 compcert.lib.Coqlib <> zlt def
R109892:109896 compcert.lib.Integers Make Zsize def
R109920:109933 compcert.lib.Integers Make Ztestbit_above thm
R109940:109944 Coq.ZArith.BinInt <> Zpred syndef
R109947:109951 compcert.lib.Integers Make Zsize def
R109920:109933 compcert.lib.Integers Make Ztestbit_above thm
R109940:109944 Coq.ZArith.BinInt <> Zpred syndef
R109947:109951 compcert.lib.Integers Make Zsize def
R109982:109996 compcert.lib.Integers Make Ztestbit_size_1 thm
R109982:109996 compcert.lib.Integers Make Ztestbit_size_1 thm
R109982:109996 compcert.lib.Integers Make Ztestbit_size_1 thm
R109982:109996 compcert.lib.Integers Make Ztestbit_size_1 thm
prf 110030:110043 Make Zsize_monotone
R110071:110074 Coq.Init.Logic <> :type_scope:x_'->'_x not
R110082:110085 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R110075:110079 compcert.lib.Integers Make Zsize def
R110081:110081 compcert.lib.Integers <> x var
R110086:110090 compcert.lib.Integers Make Zsize def
R110092:110092 compcert.lib.Integers <> y var
R110061:110064 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R110066:110069 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R110065:110065 compcert.lib.Integers <> x var
R110065:110065 compcert.lib.Integers <> x var
R110070:110070 compcert.lib.Integers <> y var
R110118:110123 Coq.ZArith.Zorder <> Zge_le syndef
R110118:110123 Coq.ZArith.Zorder <> Zge_le syndef
R110132:110147 compcert.lib.Integers Make Zsize_interval_2 thm
R110132:110147 compcert.lib.Integers Make Zsize_interval_2 thm
R110156:110164 compcert.lib.Integers Make Zsize_pos thm
R110156:110164 compcert.lib.Integers Make Zsize_pos thm
R110178:110193 compcert.lib.Integers Make Zsize_interval_1 thm
R110178:110193 compcert.lib.Integers Make Zsize_interval_1 thm
prf 110229:110237 Make size_zero
R110249:110251 Coq.Init.Logic <> :type_scope:x_'='_x not
R110240:110243 compcert.lib.Integers Make size def
R110245:110248 compcert.lib.Integers Make zero def
R110271:110274 compcert.lib.Integers Make size def
R110285:110297 compcert.lib.Integers Make unsigned_zero thm
R110285:110297 compcert.lib.Integers Make unsigned_zero thm
R110285:110297 compcert.lib.Integers Make unsigned_zero thm
prf 110320:110330 Make bits_size_1
R110353:110356 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R110346:110348 Coq.Init.Logic <> :type_scope:x_'='_x not
R110345:110345 compcert.lib.Integers <> x var
R110349:110352 compcert.lib.Integers Make zero def
R110383:110385 Coq.Init.Logic <> :type_scope:x_'='_x not
R110357:110363 compcert.lib.Integers Make testbit def
R110368:110372 Coq.ZArith.BinInt <> Zpred syndef
R110375:110378 compcert.lib.Integers Make size def
R110380:110380 compcert.lib.Integers <> x var
R110365:110365 compcert.lib.Integers <> x var
R110386:110389 Coq.Init.Datatypes <> true constr
R110419:110421 compcert.lib.Coqlib <> zeq def
R110424:110431 compcert.lib.Integers Make unsigned def
R110419:110421 compcert.lib.Coqlib <> zeq def
R110424:110431 compcert.lib.Integers Make unsigned def
R110460:110472 compcert.lib.Integers Make repr_unsigned thm
R110460:110472 compcert.lib.Integers Make repr_unsigned thm
R110460:110472 compcert.lib.Integers Make repr_unsigned thm
R110510:110524 compcert.lib.Integers Make Ztestbit_size_1 thm
R110510:110524 compcert.lib.Integers Make Ztestbit_size_1 thm
R110539:110552 compcert.lib.Integers Make unsigned_range thm
R110539:110552 compcert.lib.Integers Make unsigned_range thm
prf 110579:110589 Make bits_size_2
R110617:110620 Coq.Init.Logic <> :type_scope:x_'->'_x not
R110632:110634 Coq.Init.Logic <> :type_scope:x_'='_x not
R110621:110627 compcert.lib.Integers Make testbit def
R110631:110631 compcert.lib.Integers <> i var
R110629:110629 compcert.lib.Integers <> x var
R110635:110639 Coq.Init.Datatypes <> false constr
R110612:110615 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R110606:110609 compcert.lib.Integers Make size def
R110611:110611 compcert.lib.Integers <> x var
R110616:110616 compcert.lib.Integers <> i var
R110665:110679 compcert.lib.Integers Make Ztestbit_size_2 thm
R110665:110679 compcert.lib.Integers Make Ztestbit_size_2 thm
R110694:110707 compcert.lib.Integers Make unsigned_range thm
R110694:110707 compcert.lib.Integers Make unsigned_range thm
R110728:110731 compcert.lib.Integers Make size def
R110728:110731 compcert.lib.Integers Make size def
prf 110758:110767 Make size_range
R110783:110786 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R110793:110796 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R110787:110790 compcert.lib.Integers Make size def
R110792:110792 compcert.lib.Integers <> x var
R110787:110790 compcert.lib.Integers Make size def
R110792:110792 compcert.lib.Integers <> x var
R110797:110805 compcert.lib.Integers Make zwordsize def
R110838:110846 compcert.lib.Integers Make Zsize_pos thm
R110838:110846 compcert.lib.Integers Make Zsize_pos thm
R110861:110871 compcert.lib.Integers Make bits_size_1 thm
R110861:110871 compcert.lib.Integers Make bits_size_1 thm
R110895:110898 compcert.lib.Integers Make size def
R110909:110921 compcert.lib.Integers Make unsigned_zero thm
R110909:110921 compcert.lib.Integers Make unsigned_zero thm
R110909:110921 compcert.lib.Integers Make unsigned_zero thm
R110942:110953 compcert.lib.Integers Make wordsize_pos thm
R110942:110953 compcert.lib.Integers Make wordsize_pos thm
R110975:110977 compcert.lib.Coqlib <> zle def
R110988:110996 compcert.lib.Integers Make zwordsize def
R110980:110983 compcert.lib.Integers Make size def
R110975:110977 compcert.lib.Coqlib <> zle def
R110988:110996 compcert.lib.Integers Make zwordsize def
R110980:110983 compcert.lib.Integers Make size def
R111016:111025 compcert.lib.Integers Make bits_above thm
R111016:111025 compcert.lib.Integers Make bits_above thm
R111016:111025 compcert.lib.Integers Make bits_above thm
R111016:111025 compcert.lib.Integers Make bits_above thm
prf 111066:111076 Make bits_size_3
R111101:111106 Coq.Init.Logic <> :type_scope:x_'->'_x not
R111107:111107 Coq.Init.Logic <> :type_scope:x_'->'_x not
R111159:111165 Coq.Init.Logic <> :type_scope:x_'->'_x not
R111172:111175 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R111166:111169 compcert.lib.Integers Make size def
R111171:111171 compcert.lib.Integers <> x var
R111176:111176 compcert.lib.Integers <> n var
R111136:111139 Coq.Init.Logic <> :type_scope:x_'->'_x not
R111151:111153 Coq.Init.Logic <> :type_scope:x_'='_x not
R111140:111146 compcert.lib.Integers Make testbit def
R111150:111150 compcert.lib.Integers <> i var
R111148:111148 compcert.lib.Integers <> x var
R111154:111158 Coq.Init.Datatypes <> false constr
R111119:111122 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R111124:111126 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R111118:111118 compcert.lib.Integers <> n var
R111123:111123 compcert.lib.Integers <> i var
R111123:111123 compcert.lib.Integers <> i var
R111127:111135 compcert.lib.Integers Make zwordsize def
R111096:111099 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R111100:111100 compcert.lib.Integers <> n var
R111206:111208 compcert.lib.Coqlib <> zle def
R111211:111214 compcert.lib.Integers Make size def
R111206:111208 compcert.lib.Coqlib <> zle def
R111211:111214 compcert.lib.Integers Make size def
R111241:111251 compcert.lib.Integers Make bits_size_1 thm
R111241:111251 compcert.lib.Integers Make bits_size_1 thm
R111275:111278 compcert.lib.Integers Make size def
R111289:111301 compcert.lib.Integers Make unsigned_zero thm
R111289:111301 compcert.lib.Integers Make unsigned_zero thm
R111289:111301 compcert.lib.Integers Make unsigned_zero thm
R111331:111336 Coq.ZArith.BinInt Z pred def
R111339:111342 compcert.lib.Integers Make size def
R111331:111336 Coq.ZArith.BinInt Z pred def
R111339:111342 compcert.lib.Integers Make size def
R111331:111336 Coq.ZArith.BinInt Z pred def
R111339:111342 compcert.lib.Integers Make size def
R111331:111336 Coq.ZArith.BinInt Z pred def
R111339:111342 compcert.lib.Integers Make size def
R111382:111391 compcert.lib.Integers Make size_range thm
R111382:111391 compcert.lib.Integers Make size_range thm
prf 111418:111428 Make bits_size_4
R111453:111458 Coq.Init.Logic <> :type_scope:x_'->'_x not
R111485:111490 Coq.Init.Logic <> :type_scope:x_'->'_x not
R111491:111491 Coq.Init.Logic <> :type_scope:x_'->'_x not
R111543:111549 Coq.Init.Logic <> :type_scope:x_'->'_x not
R111556:111558 Coq.Init.Logic <> :type_scope:x_'='_x not
R111550:111553 compcert.lib.Integers Make size def
R111555:111555 compcert.lib.Integers <> x var
R111559:111559 compcert.lib.Integers <> n var
R111520:111523 Coq.Init.Logic <> :type_scope:x_'->'_x not
R111535:111537 Coq.Init.Logic <> :type_scope:x_'='_x not
R111524:111530 compcert.lib.Integers Make testbit def
R111534:111534 compcert.lib.Integers <> i var
R111532:111532 compcert.lib.Integers <> x var
R111538:111542 Coq.Init.Datatypes <> false constr
R111503:111506 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R111508:111510 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R111502:111502 compcert.lib.Integers <> n var
R111507:111507 compcert.lib.Integers <> i var
R111507:111507 compcert.lib.Integers <> i var
R111511:111519 compcert.lib.Integers Make zwordsize def
R111478:111480 Coq.Init.Logic <> :type_scope:x_'='_x not
R111459:111465 compcert.lib.Integers Make testbit def
R111470:111474 Coq.ZArith.BinInt <> Zpred syndef
R111476:111476 compcert.lib.Integers <> n var
R111467:111467 compcert.lib.Integers <> x var
R111481:111484 Coq.Init.Datatypes <> true constr
R111448:111451 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R111452:111452 compcert.lib.Integers <> n var
R111595:111598 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R111589:111592 compcert.lib.Integers Make size def
R111595:111598 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R111589:111592 compcert.lib.Integers Make size def
R111613:111623 compcert.lib.Integers Make bits_size_3 thm
R111613:111623 compcert.lib.Integers Make bits_size_3 thm
R111644:111646 compcert.lib.Coqlib <> zlt def
R111649:111652 compcert.lib.Integers Make size def
R111644:111646 compcert.lib.Coqlib <> zlt def
R111649:111652 compcert.lib.Integers Make size def
R111671:111681 compcert.lib.Integers Make bits_size_2 thm
R111671:111681 compcert.lib.Integers Make bits_size_2 thm
R111671:111681 compcert.lib.Integers Make bits_size_2 thm
R111671:111681 compcert.lib.Integers Make bits_size_2 thm
prf 111732:111746 Make size_interval_1
R111762:111765 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R111776:111778 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R111766:111773 compcert.lib.Integers Make unsigned def
R111775:111775 compcert.lib.Integers <> x var
R111766:111773 compcert.lib.Integers Make unsigned def
R111775:111775 compcert.lib.Integers <> x var
R111779:111783 Coq.ZArith.Zpower <> two_p def
R111786:111789 compcert.lib.Integers Make size def
R111791:111791 compcert.lib.Integers <> x var
R111818:111833 compcert.lib.Integers Make Zsize_interval_1 thm
R111818:111833 compcert.lib.Integers Make Zsize_interval_1 thm
R111848:111861 compcert.lib.Integers Make unsigned_range thm
R111848:111861 compcert.lib.Integers Make unsigned_range thm
prf 111888:111902 Make size_interval_2
R111925:111928 Coq.Init.Logic <> :type_scope:x_'->'_x not
R111954:111957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R111959:111962 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R111958:111958 compcert.lib.Integers <> n var
R111963:111966 compcert.lib.Integers Make size def
R111968:111968 compcert.lib.Integers <> x var
R111930:111933 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R111944:111946 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R111934:111941 compcert.lib.Integers Make unsigned def
R111943:111943 compcert.lib.Integers <> x var
R111934:111941 compcert.lib.Integers Make unsigned def
R111943:111943 compcert.lib.Integers <> x var
R111947:111951 Coq.ZArith.Zpower <> two_p def
R111953:111953 compcert.lib.Integers <> n var
R111920:111923 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R111924:111924 compcert.lib.Integers <> n var
R111994:112009 compcert.lib.Integers Make Zsize_interval_2 thm
R111994:112009 compcert.lib.Integers Make Zsize_interval_2 thm
prf 112032:112039 Make size_and
R112070:112073 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R112056:112059 compcert.lib.Integers Make size def
R112062:112064 compcert.lib.Integers Make and def
R112068:112068 compcert.lib.Integers <> b var
R112066:112066 compcert.lib.Integers <> a var
R112074:112078 Coq.ZArith.BinInt Z min def
R112090:112093 compcert.lib.Integers Make size def
R112095:112095 compcert.lib.Integers <> b var
R112081:112084 compcert.lib.Integers Make size def
R112086:112086 compcert.lib.Integers <> a var
R112127:112130 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R112131:112135 Coq.ZArith.BinInt Z min def
R112147:112150 compcert.lib.Integers Make size def
R112138:112141 compcert.lib.Integers Make size def
R112127:112130 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R112131:112135 Coq.ZArith.BinInt Z min def
R112147:112150 compcert.lib.Integers Make size def
R112138:112141 compcert.lib.Integers Make size def
R112173:112182 compcert.lib.Integers Make size_range thm
R112188:112197 compcert.lib.Integers Make size_range thm
R112173:112182 compcert.lib.Integers Make size_range thm
R112188:112197 compcert.lib.Integers Make size_range thm
R112224:112234 compcert.lib.Integers Make bits_size_3 thm
R112224:112234 compcert.lib.Integers Make bits_size_3 thm
R112261:112268 compcert.lib.Integers Make bits_and thm
R112261:112268 compcert.lib.Integers Make bits_and thm
R112261:112268 compcert.lib.Integers Make bits_and thm
R112261:112268 compcert.lib.Integers Make bits_and thm
R112313:112323 compcert.lib.Integers Make bits_size_2 thm
R112313:112323 compcert.lib.Integers Make bits_size_2 thm
R112313:112323 compcert.lib.Integers Make bits_size_2 thm
R112313:112323 compcert.lib.Integers Make bits_size_2 thm
R112353:112363 compcert.lib.Integers Make bits_size_2 thm
R112353:112363 compcert.lib.Integers Make bits_size_2 thm
R112353:112363 compcert.lib.Integers Make bits_size_2 thm
R112353:112363 compcert.lib.Integers Make bits_size_2 thm
R112375:112386 Coq.Bool.Bool <> andb_false_r thm
R112375:112386 Coq.Bool.Bool <> andb_false_r thm
prf 112421:112432 Make and_interval
R112450:112453 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R112472:112474 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R112454:112461 compcert.lib.Integers Make unsigned def
R112464:112466 compcert.lib.Integers Make and def
R112470:112470 compcert.lib.Integers <> b var
R112468:112468 compcert.lib.Integers <> a var
R112454:112461 compcert.lib.Integers Make unsigned def
R112464:112466 compcert.lib.Integers Make and def
R112470:112470 compcert.lib.Integers <> b var
R112468:112468 compcert.lib.Integers <> a var
R112475:112479 Coq.ZArith.Zpower <> two_p def
R112482:112486 Coq.ZArith.BinInt Z min def
R112498:112501 compcert.lib.Integers Make size def
R112503:112503 compcert.lib.Integers <> b var
R112489:112492 compcert.lib.Integers Make size def
R112494:112494 compcert.lib.Integers <> a var
R112539:112553 compcert.lib.Integers Make size_interval_1 thm
R112556:112558 compcert.lib.Integers Make and def
R112539:112553 compcert.lib.Integers Make size_interval_1 thm
R112556:112558 compcert.lib.Integers Make and def
R112607:112610 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R112585:112589 Coq.ZArith.Zpower <> two_p def
R112592:112595 compcert.lib.Integers Make size def
R112598:112600 compcert.lib.Integers Make and def
R112611:112615 Coq.ZArith.Zpower <> two_p def
R112618:112622 Coq.ZArith.BinInt Z min def
R112634:112637 compcert.lib.Integers Make size def
R112625:112628 compcert.lib.Integers Make size def
R112607:112610 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R112585:112589 Coq.ZArith.Zpower <> two_p def
R112592:112595 compcert.lib.Integers Make size def
R112598:112600 compcert.lib.Integers Make and def
R112611:112615 Coq.ZArith.Zpower <> two_p def
R112618:112622 Coq.ZArith.BinInt Z min def
R112634:112637 compcert.lib.Integers Make size def
R112625:112628 compcert.lib.Integers Make size def
R112653:112666 compcert.lib.Coqlib <> two_p_monotone thm
R112653:112666 compcert.lib.Coqlib <> two_p_monotone thm
R112688:112697 compcert.lib.Integers Make size_range thm
R112700:112702 compcert.lib.Integers Make and def
R112688:112697 compcert.lib.Integers Make size_range thm
R112700:112702 compcert.lib.Integers Make and def
R112726:112733 compcert.lib.Integers Make size_and thm
R112726:112733 compcert.lib.Integers Make size_and thm
prf 112759:112765 Make size_or
R112795:112797 Coq.Init.Logic <> :type_scope:x_'='_x not
R112782:112785 compcert.lib.Integers Make size def
R112788:112789 compcert.lib.Integers Make or def
R112793:112793 compcert.lib.Integers <> b var
R112791:112791 compcert.lib.Integers <> a var
R112798:112802 Coq.ZArith.BinInt Z max def
R112814:112817 compcert.lib.Integers Make size def
R112819:112819 compcert.lib.Integers <> b var
R112805:112808 compcert.lib.Integers Make size def
R112810:112810 compcert.lib.Integers <> a var
R112852:112861 compcert.lib.Integers Make size_range thm
R112867:112876 compcert.lib.Integers Make size_range thm
R112852:112861 compcert.lib.Integers Make size_range thm
R112867:112876 compcert.lib.Integers Make size_range thm
R112902:112912 compcert.lib.Integers Make bits_size_1 thm
R112902:112912 compcert.lib.Integers Make bits_size_1 thm
R112937:112945 compcert.lib.Integers Make size_zero thm
R112937:112945 compcert.lib.Integers Make size_zero thm
R112937:112945 compcert.lib.Integers Make size_zero thm
R112956:112964 compcert.lib.Integers Make or_zero_l thm
R112956:112964 compcert.lib.Integers Make or_zero_l thm
R112956:112964 compcert.lib.Integers Make or_zero_l thm
R112992:113002 compcert.lib.Integers Make bits_size_1 thm
R112992:113002 compcert.lib.Integers Make bits_size_1 thm
R113027:113035 compcert.lib.Integers Make size_zero thm
R113027:113035 compcert.lib.Integers Make size_zero thm
R113027:113035 compcert.lib.Integers Make size_zero thm
R113046:113052 compcert.lib.Integers Make or_zero thm
R113046:113052 compcert.lib.Integers Make or_zero thm
R113046:113052 compcert.lib.Integers Make or_zero thm
R113123:113133 compcert.lib.Integers Make bits_size_4 thm
R113123:113133 compcert.lib.Integers Make bits_size_4 thm
R113151:113157 compcert.lib.Integers Make bits_or thm
R113151:113157 compcert.lib.Integers Make bits_or thm
R113151:113157 compcert.lib.Integers Make bits_or thm
R113151:113157 compcert.lib.Integers Make bits_or thm
R113178:113187 Coq.Bool.Bool <> orb_true_r thm
R113178:113187 Coq.Bool.Bool <> orb_true_r thm
R113217:113223 compcert.lib.Integers Make bits_or thm
R113217:113223 compcert.lib.Integers Make bits_or thm
R113217:113223 compcert.lib.Integers Make bits_or thm
R113217:113223 compcert.lib.Integers Make bits_or thm
R113235:113245 compcert.lib.Integers Make bits_size_2 thm
R113235:113245 compcert.lib.Integers Make bits_size_2 thm
R113235:113245 compcert.lib.Integers Make bits_size_2 thm
R113235:113245 compcert.lib.Integers Make bits_size_2 thm
R113235:113245 compcert.lib.Integers Make bits_size_2 thm
R113235:113245 compcert.lib.Integers Make bits_size_2 thm
R113235:113245 compcert.lib.Integers Make bits_size_2 thm
R113283:113293 compcert.lib.Integers Make bits_size_4 thm
R113283:113293 compcert.lib.Integers Make bits_size_4 thm
R113311:113317 compcert.lib.Integers Make bits_or thm
R113311:113317 compcert.lib.Integers Make bits_or thm
R113311:113317 compcert.lib.Integers Make bits_or thm
R113311:113317 compcert.lib.Integers Make bits_or thm
R113338:113347 Coq.Bool.Bool <> orb_true_l thm
R113338:113347 Coq.Bool.Bool <> orb_true_l thm
R113362:113364 compcert.lib.Coqlib <> zeq def
R113367:113370 compcert.lib.Integers Make size def
R113362:113364 compcert.lib.Coqlib <> zeq def
R113367:113370 compcert.lib.Integers Make size def
R113386:113392 compcert.lib.Integers Make testbit def
R113409:113423 Coq.ZArith.BinInt Z testbit_neg_r thm
R113409:113423 Coq.ZArith.BinInt Z testbit_neg_r thm
R113409:113423 Coq.ZArith.BinInt Z testbit_neg_r thm
R113409:113423 Coq.ZArith.BinInt Z testbit_neg_r thm
R113478:113484 compcert.lib.Integers Make bits_or thm
R113478:113484 compcert.lib.Integers Make bits_or thm
R113478:113484 compcert.lib.Integers Make bits_or thm
R113478:113484 compcert.lib.Integers Make bits_or thm
R113496:113506 compcert.lib.Integers Make bits_size_2 thm
R113496:113506 compcert.lib.Integers Make bits_size_2 thm
R113496:113506 compcert.lib.Integers Make bits_size_2 thm
R113496:113506 compcert.lib.Integers Make bits_size_2 thm
R113496:113506 compcert.lib.Integers Make bits_size_2 thm
R113496:113506 compcert.lib.Integers Make bits_size_2 thm
R113496:113506 compcert.lib.Integers Make bits_size_2 thm
prf 113552:113562 Make or_interval
R113580:113583 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R113601:113603 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R113584:113591 compcert.lib.Integers Make unsigned def
R113594:113595 compcert.lib.Integers Make or def
R113599:113599 compcert.lib.Integers <> b var
R113597:113597 compcert.lib.Integers <> a var
R113584:113591 compcert.lib.Integers Make unsigned def
R113594:113595 compcert.lib.Integers Make or def
R113599:113599 compcert.lib.Integers <> b var
R113597:113597 compcert.lib.Integers <> a var
R113604:113608 Coq.ZArith.Zpower <> two_p def
R113611:113615 Coq.ZArith.BinInt Z max def
R113627:113630 compcert.lib.Integers Make size def
R113632:113632 compcert.lib.Integers <> b var
R113618:113621 compcert.lib.Integers Make size def
R113623:113623 compcert.lib.Integers <> a var
R113665:113671 compcert.lib.Integers Make size_or thm
R113665:113671 compcert.lib.Integers Make size_or thm
R113665:113671 compcert.lib.Integers Make size_or thm
R113680:113694 compcert.lib.Integers Make size_interval_1 thm
R113680:113694 compcert.lib.Integers Make size_interval_1 thm
prf 113711:113718 Make size_xor
R113749:113752 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R113735:113738 compcert.lib.Integers Make size def
R113741:113743 compcert.lib.Integers Make xor def
R113747:113747 compcert.lib.Integers <> b var
R113745:113745 compcert.lib.Integers <> a var
R113753:113757 Coq.ZArith.BinInt Z max def
R113769:113772 compcert.lib.Integers Make size def
R113774:113774 compcert.lib.Integers <> b var
R113760:113763 compcert.lib.Integers Make size def
R113765:113765 compcert.lib.Integers <> a var
R113806:113809 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R113810:113814 Coq.ZArith.BinInt Z max def
R113826:113829 compcert.lib.Integers Make size def
R113817:113820 compcert.lib.Integers Make size def
R113806:113809 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R113810:113814 Coq.ZArith.BinInt Z max def
R113826:113829 compcert.lib.Integers Make size def
R113817:113820 compcert.lib.Integers Make size def
R113852:113861 compcert.lib.Integers Make size_range thm
R113867:113876 compcert.lib.Integers Make size_range thm
R113852:113861 compcert.lib.Integers Make size_range thm
R113867:113876 compcert.lib.Integers Make size_range thm
R113903:113913 compcert.lib.Integers Make bits_size_3 thm
R113903:113913 compcert.lib.Integers Make bits_size_3 thm
R113940:113947 compcert.lib.Integers Make bits_xor thm
R113940:113947 compcert.lib.Integers Make bits_xor thm
R113940:113947 compcert.lib.Integers Make bits_xor thm
R113940:113947 compcert.lib.Integers Make bits_xor thm
R113959:113969 compcert.lib.Integers Make bits_size_2 thm
R113959:113969 compcert.lib.Integers Make bits_size_2 thm
R113959:113969 compcert.lib.Integers Make bits_size_2 thm
R113959:113969 compcert.lib.Integers Make bits_size_2 thm
R113959:113969 compcert.lib.Integers Make bits_size_2 thm
R113959:113969 compcert.lib.Integers Make bits_size_2 thm
R113959:113969 compcert.lib.Integers Make bits_size_2 thm
prf 114033:114044 Make xor_interval
R114062:114065 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R114084:114086 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R114066:114073 compcert.lib.Integers Make unsigned def
R114076:114078 compcert.lib.Integers Make xor def
R114082:114082 compcert.lib.Integers <> b var
R114080:114080 compcert.lib.Integers <> a var
R114066:114073 compcert.lib.Integers Make unsigned def
R114076:114078 compcert.lib.Integers Make xor def
R114082:114082 compcert.lib.Integers <> b var
R114080:114080 compcert.lib.Integers <> a var
R114087:114091 Coq.ZArith.Zpower <> two_p def
R114094:114098 Coq.ZArith.BinInt Z max def
R114110:114113 compcert.lib.Integers Make size def
R114115:114115 compcert.lib.Integers <> b var
R114101:114104 compcert.lib.Integers Make size def
R114106:114106 compcert.lib.Integers <> a var
R114151:114165 compcert.lib.Integers Make size_interval_1 thm
R114168:114170 compcert.lib.Integers Make xor def
R114151:114165 compcert.lib.Integers Make size_interval_1 thm
R114168:114170 compcert.lib.Integers Make xor def
R114219:114222 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R114197:114201 Coq.ZArith.Zpower <> two_p def
R114204:114207 compcert.lib.Integers Make size def
R114210:114212 compcert.lib.Integers Make xor def
R114223:114227 Coq.ZArith.Zpower <> two_p def
R114230:114234 Coq.ZArith.BinInt Z max def
R114246:114249 compcert.lib.Integers Make size def
R114237:114240 compcert.lib.Integers Make size def
R114219:114222 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R114197:114201 Coq.ZArith.Zpower <> two_p def
R114204:114207 compcert.lib.Integers Make size def
R114210:114212 compcert.lib.Integers Make xor def
R114223:114227 Coq.ZArith.Zpower <> two_p def
R114230:114234 Coq.ZArith.BinInt Z max def
R114246:114249 compcert.lib.Integers Make size def
R114237:114240 compcert.lib.Integers Make size def
R114265:114278 compcert.lib.Coqlib <> two_p_monotone thm
R114265:114278 compcert.lib.Coqlib <> two_p_monotone thm
R114300:114309 compcert.lib.Integers Make size_range thm
R114312:114314 compcert.lib.Integers Make xor def
R114300:114309 compcert.lib.Integers Make size_range thm
R114312:114314 compcert.lib.Integers Make xor def
R114338:114345 compcert.lib.Integers Make size_xor thm
R114338:114345 compcert.lib.Integers Make size_xor thm
R114367:114370 compcert.lib.Integers Make <> mod
mod 114445:114455 <> Wordsize_32
def 114471:114478 Wordsize_32 wordsize
prf 114500:114516 Wordsize_32 wordsize_not_zero
R114527:114530 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R114519:114526 compcert.lib.Integers Wordsize_32 wordsize def
R114554:114561 compcert.lib.Integers Wordsize_32 wordsize def
R114585:114595 compcert.lib.Integers Wordsize_32 <> mod
R114616:114635 compcert.lib.Integers Wordsize_32 wordsize def
R114654:114657 compcert.lib.Integers Make <> modtype
R114659:114669 compcert.lib.Integers Wordsize_32 <> modtype
mod 114647:114649 <> Int
R114686:114705 compcert.lib.Integers Wordsize_32 wordsize def
syndef 114719:114721 <> int
R114726:114732 compcert.lib.Integers Int int rec
prf 114743:114770 <> int_wordsize_divides_modulus
R114775:114781 Coq.ZArith.Znumtheory <> Zdivide syndef
R114807:114817 compcert.lib.Integers Int modulus def
R114784:114791 Coq.ZArith.BinInt <> Z_of_nat syndef
R114793:114804 compcert.lib.Integers Int wordsize def
R114837:114841 Coq.ZArith.Zpower <> two_p def
R114846:114846 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R114837:114841 Coq.ZArith.Zpower <> two_p def
R114846:114846 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
mod 114878:114887 <> Wordsize_8
def 114903:114910 Wordsize_8 wordsize
prf 114931:114947 Wordsize_8 wordsize_not_zero
R114958:114961 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R114950:114957 compcert.lib.Integers Wordsize_8 wordsize def
R114985:114992 compcert.lib.Integers Wordsize_8 wordsize def
R115016:115025 compcert.lib.Integers Wordsize_8 <> mod
R115046:115064 compcert.lib.Integers Wordsize_8 wordsize def
R115084:115087 compcert.lib.Integers Make <> modtype
R115089:115098 compcert.lib.Integers Wordsize_8 <> modtype
mod 115076:115079 <> Byte
R115115:115133 compcert.lib.Integers Wordsize_8 wordsize def
syndef 115147:115150 <> byte
R115155:115162 compcert.lib.Integers Byte int rec
mod 115173:115183 <> Wordsize_64
def 115199:115206 Wordsize_64 wordsize
prf 115228:115244 Wordsize_64 wordsize_not_zero
R115255:115258 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R115247:115254 compcert.lib.Integers Wordsize_64 wordsize def
R115282:115289 compcert.lib.Integers Wordsize_64 wordsize def
R115313:115323 compcert.lib.Integers Wordsize_64 <> mod
R115344:115363 compcert.lib.Integers Wordsize_64 wordsize def
mod 115375:115379 <> Int64
R115391:115394 compcert.lib.Integers Make <> modtype
R115396:115406 compcert.lib.Integers Wordsize_64 <> modtype
def 115475:115484 Int64 iwordsize'
R115487:115493 compcert.lib.Integers Int int rec
R115498:115505 compcert.lib.Integers Int repr def
R115507:115515 compcert.lib.Integers Int64 zwordsize def
def 115530:115533 Int64 shl'
R115539:115541 compcert.lib.Integers Int64 int rec
R115548:115554 compcert.lib.Integers Int int rec
R115558:115560 compcert.lib.Integers Int64 int rec
R115567:115570 compcert.lib.Integers Int64 repr def
R115573:115580 Coq.ZArith.BinInt Z shiftl def
R115596:115607 compcert.lib.Integers Int unsigned def
R115609:115609 compcert.lib.Integers <> y var
R115583:115590 compcert.lib.Integers Int64 unsigned def
R115592:115592 compcert.lib.Integers <> x var
def 115625:115629 Int64 shru'
R115635:115637 compcert.lib.Integers Int64 int rec
R115644:115650 compcert.lib.Integers Int int rec
R115654:115656 compcert.lib.Integers Int64 int rec
R115663:115666 compcert.lib.Integers Int64 repr def
R115669:115676 Coq.ZArith.BinInt Z shiftr def
R115692:115703 compcert.lib.Integers Int unsigned def
R115705:115705 compcert.lib.Integers <> y var
R115679:115686 compcert.lib.Integers Int64 unsigned def
R115688:115688 compcert.lib.Integers <> x var
def 115721:115724 Int64 shr'
R115730:115732 compcert.lib.Integers Int64 int rec
R115739:115745 compcert.lib.Integers Int int rec
R115749:115751 compcert.lib.Integers Int64 int rec
R115758:115761 compcert.lib.Integers Int64 repr def
R115764:115771 Coq.ZArith.BinInt Z shiftr def
R115785:115796 compcert.lib.Integers Int unsigned def
R115798:115798 compcert.lib.Integers <> y var
R115774:115779 compcert.lib.Integers Int64 signed def
R115781:115781 compcert.lib.Integers <> x var
prf 115810:115818 Int64 bits_shl'
R115857:115862 Coq.Init.Logic <> :type_scope:x_'->'_x not
R115883:115887 Coq.Init.Logic <> :type_scope:x_'='_x not
R115863:115869 compcert.lib.Integers Int64 testbit def
R115882:115882 compcert.lib.Integers <> i var
R115872:115875 compcert.lib.Integers Int64 shl' def
R115879:115879 compcert.lib.Integers <> y var
R115877:115877 compcert.lib.Integers <> x var
R115891:115893 compcert.lib.Coqlib <> zlt def
R115898:115909 compcert.lib.Integers Int unsigned def
R115911:115911 compcert.lib.Integers <> y var
R115895:115895 compcert.lib.Integers <> i var
R115930:115936 compcert.lib.Integers Int64 testbit def
R115942:115944 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R115941:115941 compcert.lib.Integers <> i var
R115945:115956 compcert.lib.Integers Int unsigned def
R115958:115958 compcert.lib.Integers <> y var
R115938:115938 compcert.lib.Integers <> x var
R115919:115923 Coq.Init.Datatypes <> false constr
R115840:115843 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R115845:115847 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R115844:115844 compcert.lib.Integers <> i var
R115844:115844 compcert.lib.Integers <> i var
R115848:115856 compcert.lib.Integers Int64 zwordsize def
R115986:115989 compcert.lib.Integers Int64 shl' def
R116000:116011 compcert.lib.Integers Int64 testbit_repr thm
R116000:116011 compcert.lib.Integers Int64 testbit_repr thm
R116000:116011 compcert.lib.Integers Int64 testbit_repr thm
R116000:116011 compcert.lib.Integers Int64 testbit_repr thm
R116032:116034 compcert.lib.Coqlib <> zlt def
R116039:116050 compcert.lib.Integers Int unsigned def
R116032:116034 compcert.lib.Coqlib <> zlt def
R116039:116050 compcert.lib.Integers Int unsigned def
R116065:116081 Coq.ZArith.BinInt Z shiftl_spec_low thm
R116065:116081 Coq.ZArith.BinInt Z shiftl_spec_low thm
R116098:116115 Coq.ZArith.BinInt Z shiftl_spec_high thm
R116098:116115 Coq.ZArith.BinInt Z shiftl_spec_high thm
prf 116144:116153 Int64 bits_shru'
R116192:116197 Coq.Init.Logic <> :type_scope:x_'->'_x not
R116219:116223 Coq.Init.Logic <> :type_scope:x_'='_x not
R116198:116204 compcert.lib.Integers Int64 testbit def
R116218:116218 compcert.lib.Integers <> i var
R116207:116211 compcert.lib.Integers Int64 shru' def
R116215:116215 compcert.lib.Integers <> y var
R116213:116213 compcert.lib.Integers <> x var
R116227:116229 compcert.lib.Coqlib <> zlt def
R116252:116260 compcert.lib.Integers Int64 zwordsize def
R116233:116235 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R116232:116232 compcert.lib.Integers <> i var
R116236:116247 compcert.lib.Integers Int unsigned def
R116249:116249 compcert.lib.Integers <> y var
R116303:116307 Coq.Init.Datatypes <> false constr
R116267:116273 compcert.lib.Integers Int64 testbit def
R116279:116281 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R116278:116278 compcert.lib.Integers <> i var
R116282:116293 compcert.lib.Integers Int unsigned def
R116295:116295 compcert.lib.Integers <> y var
R116275:116275 compcert.lib.Integers <> x var
R116175:116178 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R116180:116182 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R116179:116179 compcert.lib.Integers <> i var
R116179:116179 compcert.lib.Integers <> i var
R116183:116191 compcert.lib.Integers Int64 zwordsize def
R116334:116338 compcert.lib.Integers Int64 shru' def
R116349:116360 compcert.lib.Integers Int64 testbit_repr thm
R116349:116360 compcert.lib.Integers Int64 testbit_repr thm
R116349:116360 compcert.lib.Integers Int64 testbit_repr thm
R116349:116360 compcert.lib.Integers Int64 testbit_repr thm
R116379:116391 Coq.ZArith.BinInt Z shiftr_spec thm
R116379:116391 Coq.ZArith.BinInt Z shiftr_spec thm
R116379:116391 Coq.ZArith.BinInt Z shiftr_spec thm
R116379:116391 Coq.ZArith.BinInt Z shiftr_spec thm
R116400:116406 compcert.lib.Integers Int64 testbit def
R116412:116414 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R116415:116426 compcert.lib.Integers Int unsigned def
R116400:116406 compcert.lib.Integers Int64 testbit def
R116412:116414 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R116415:116426 compcert.lib.Integers Int unsigned def
R116445:116447 compcert.lib.Coqlib <> zlt def
R116470:116478 compcert.lib.Integers Int64 zwordsize def
R116451:116453 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R116454:116465 compcert.lib.Integers Int unsigned def
R116445:116447 compcert.lib.Coqlib <> zlt def
R116470:116478 compcert.lib.Integers Int64 zwordsize def
R116451:116453 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R116454:116465 compcert.lib.Integers Int unsigned def
R116498:116507 compcert.lib.Integers Int64 bits_above thm
R116498:116507 compcert.lib.Integers Int64 bits_above thm
prf 116537:116545 Int64 bits_shr'
R116584:116589 Coq.Init.Logic <> :type_scope:x_'->'_x not
R116610:116614 Coq.Init.Logic <> :type_scope:x_'='_x not
R116590:116596 compcert.lib.Integers Int64 testbit def
R116609:116609 compcert.lib.Integers <> i var
R116599:116602 compcert.lib.Integers Int64 shr' def
R116606:116606 compcert.lib.Integers <> y var
R116604:116604 compcert.lib.Integers <> x var
R116615:116621 compcert.lib.Integers Int64 testbit def
R116629:116631 compcert.lib.Coqlib <> zlt def
R116654:116662 compcert.lib.Integers Int64 zwordsize def
R116635:116637 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R116634:116634 compcert.lib.Integers <> i var
R116638:116649 compcert.lib.Integers Int unsigned def
R116651:116651 compcert.lib.Integers <> y var
R116702:116704 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R116693:116701 compcert.lib.Integers Int64 zwordsize def
R116670:116672 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R116669:116669 compcert.lib.Integers <> i var
R116673:116684 compcert.lib.Integers Int unsigned def
R116686:116686 compcert.lib.Integers <> y var
R116623:116623 compcert.lib.Integers <> x var
R116567:116570 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R116572:116574 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R116571:116571 compcert.lib.Integers <> i var
R116571:116571 compcert.lib.Integers <> i var
R116575:116583 compcert.lib.Integers Int64 zwordsize def
R116733:116736 compcert.lib.Integers Int64 shr' def
R116747:116758 compcert.lib.Integers Int64 testbit_repr thm
R116747:116758 compcert.lib.Integers Int64 testbit_repr thm
R116747:116758 compcert.lib.Integers Int64 testbit_repr thm
R116747:116758 compcert.lib.Integers Int64 testbit_repr thm
R116777:116789 Coq.ZArith.BinInt Z shiftr_spec thm
R116777:116789 Coq.ZArith.BinInt Z shiftr_spec thm
R116777:116789 Coq.ZArith.BinInt Z shiftr_spec thm
R116777:116789 Coq.ZArith.BinInt Z shiftr_spec thm
R116798:116808 compcert.lib.Integers Int64 bits_signed thm
R116798:116808 compcert.lib.Integers Int64 bits_signed thm
R116825:116842 compcert.lib.Integers Int unsigned_range thm
R116825:116842 compcert.lib.Integers Int unsigned_range thm
def 116937:116942 Int64 loword
R116948:116950 compcert.lib.Integers Int64 int rec
R116955:116961 compcert.lib.Integers Int int rec
R116966:116973 compcert.lib.Integers Int repr def
R116976:116983 compcert.lib.Integers Int64 unsigned def
R116985:116985 compcert.lib.Integers <> n var
def 117001:117006 Int64 hiword
R117012:117014 compcert.lib.Integers Int64 int rec
R117019:117025 compcert.lib.Integers Int int rec
R117030:117037 compcert.lib.Integers Int repr def
R117040:117047 compcert.lib.Integers Int64 unsigned def
R117050:117053 compcert.lib.Integers Int64 shru def
R117058:117061 compcert.lib.Integers Int64 repr def
R117063:117075 compcert.lib.Integers Int zwordsize def
R117055:117055 compcert.lib.Integers <> n var
def 117093:117099 Int64 ofwords
R117109:117115 compcert.lib.Integers Int int rec
R117120:117122 compcert.lib.Integers Int64 int rec
R117129:117130 compcert.lib.Integers Int64 or def
R117185:117188 compcert.lib.Integers Int64 repr def
R117191:117202 compcert.lib.Integers Int unsigned def
R117204:117205 compcert.lib.Integers <> lo var
R117133:117135 compcert.lib.Integers Int64 shl def
R117163:117166 compcert.lib.Integers Int64 repr def
R117168:117180 compcert.lib.Integers Int zwordsize def
R117138:117141 compcert.lib.Integers Int64 repr def
R117144:117155 compcert.lib.Integers Int unsigned def
R117157:117158 compcert.lib.Integers <> hi var
prf 117217:117227 Int64 bits_loword
R117266:117269 Coq.Init.Logic <> :type_scope:x_'->'_x not
R117294:117296 Coq.Init.Logic <> :type_scope:x_'='_x not
R117270:117280 compcert.lib.Integers Int testbit def
R117293:117293 compcert.lib.Integers <> i var
R117283:117288 compcert.lib.Integers Int64 loword def
R117290:117290 compcert.lib.Integers <> n var
R117297:117303 compcert.lib.Integers Int64 testbit def
R117307:117307 compcert.lib.Integers <> i var
R117305:117305 compcert.lib.Integers <> n var
R117245:117248 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R117250:117252 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R117249:117249 compcert.lib.Integers <> i var
R117249:117249 compcert.lib.Integers <> i var
R117253:117265 compcert.lib.Integers Int zwordsize def
R117334:117339 compcert.lib.Integers Int64 loword def
R117350:117365 compcert.lib.Integers Int testbit_repr thm
R117350:117365 compcert.lib.Integers Int testbit_repr thm
R117350:117365 compcert.lib.Integers Int testbit_repr thm
R117350:117365 compcert.lib.Integers Int testbit_repr thm
prf 117386:117396 Int64 bits_hiword
R117435:117438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R117463:117465 Coq.Init.Logic <> :type_scope:x_'='_x not
R117439:117449 compcert.lib.Integers Int testbit def
R117462:117462 compcert.lib.Integers <> i var
R117452:117457 compcert.lib.Integers Int64 hiword def
R117459:117459 compcert.lib.Integers <> n var
R117466:117472 compcert.lib.Integers Int64 testbit def
R117478:117480 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R117477:117477 compcert.lib.Integers <> i var
R117481:117493 compcert.lib.Integers Int zwordsize def
R117474:117474 compcert.lib.Integers <> n var
R117414:117417 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R117419:117421 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R117418:117418 compcert.lib.Integers <> i var
R117418:117418 compcert.lib.Integers <> i var
R117422:117434 compcert.lib.Integers Int zwordsize def
R117521:117526 compcert.lib.Integers Int64 hiword def
R117537:117552 compcert.lib.Integers Int testbit_repr thm
R117537:117552 compcert.lib.Integers Int testbit_repr thm
R117537:117552 compcert.lib.Integers Int testbit_repr thm
R117537:117552 compcert.lib.Integers Int testbit_repr thm
R117580:117582 Coq.Init.Logic <> :type_scope:x_'='_x not
R117571:117579 compcert.lib.Integers Int64 zwordsize def
R117584:117586 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R117587:117599 compcert.lib.Integers Int zwordsize def
R117580:117582 Coq.Init.Logic <> :type_scope:x_'='_x not
R117571:117579 compcert.lib.Integers Int64 zwordsize def
R117584:117586 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R117587:117599 compcert.lib.Integers Int zwordsize def
R117626:117632 compcert.lib.Integers Int64 testbit def
R117635:117638 compcert.lib.Integers Int64 shru def
R117643:117646 compcert.lib.Integers Int64 repr def
R117648:117660 compcert.lib.Integers Int zwordsize def
R117626:117632 compcert.lib.Integers Int64 testbit def
R117635:117638 compcert.lib.Integers Int64 shru def
R117643:117646 compcert.lib.Integers Int64 repr def
R117648:117660 compcert.lib.Integers Int zwordsize def
R117676:117684 compcert.lib.Integers Int64 bits_shru thm
R117676:117684 compcert.lib.Integers Int64 bits_shru thm
R117676:117684 compcert.lib.Integers Int64 bits_shru thm
R117676:117684 compcert.lib.Integers Int64 bits_shru thm
R117733:117745 compcert.lib.Integers Int zwordsize def
R117697:117704 compcert.lib.Integers Int64 unsigned def
R117707:117710 compcert.lib.Integers Int64 repr def
R117712:117724 compcert.lib.Integers Int zwordsize def
R117697:117704 compcert.lib.Integers Int64 unsigned def
R117707:117710 compcert.lib.Integers Int64 repr def
R117712:117724 compcert.lib.Integers Int zwordsize def
R117733:117745 compcert.lib.Integers Int zwordsize def
R117733:117745 compcert.lib.Integers Int zwordsize def
R117733:117745 compcert.lib.Integers Int zwordsize def
R117733:117745 compcert.lib.Integers Int zwordsize def
R117733:117745 compcert.lib.Integers Int zwordsize def
R117733:117745 compcert.lib.Integers Int zwordsize def
R117756:117763 compcert.lib.Coqlib <> zlt_true thm
R117756:117763 compcert.lib.Coqlib <> zlt_true thm
prf 117792:117803 Int64 bits_ofwords
R117842:117847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R117873:117877 Coq.Init.Logic <> :type_scope:x_'='_x not
R117848:117854 compcert.lib.Integers Int64 testbit def
R117872:117872 compcert.lib.Integers <> i var
R117857:117863 compcert.lib.Integers Int64 ofwords def
R117868:117869 compcert.lib.Integers <> lo var
R117865:117866 compcert.lib.Integers <> hi var
R117881:117883 compcert.lib.Coqlib <> zlt def
R117887:117899 compcert.lib.Integers Int zwordsize def
R117885:117885 compcert.lib.Integers <> i var
R117928:117938 compcert.lib.Integers Int testbit def
R117945:117947 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R117944:117944 compcert.lib.Integers <> i var
R117948:117960 compcert.lib.Integers Int zwordsize def
R117940:117941 compcert.lib.Integers <> hi var
R117906:117916 compcert.lib.Integers Int testbit def
R117921:117921 compcert.lib.Integers <> i var
R117918:117919 compcert.lib.Integers <> lo var
R117825:117828 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R117830:117832 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R117829:117829 compcert.lib.Integers <> i var
R117829:117829 compcert.lib.Integers <> i var
R117833:117841 compcert.lib.Integers Int64 zwordsize def
R117988:117994 compcert.lib.Integers Int64 ofwords def
R118005:118011 compcert.lib.Integers Int64 bits_or thm
R118005:118011 compcert.lib.Integers Int64 bits_or thm
R118005:118011 compcert.lib.Integers Int64 bits_or thm
R118005:118011 compcert.lib.Integers Int64 bits_or thm
R118028:118035 compcert.lib.Integers Int64 bits_shl thm
R118028:118035 compcert.lib.Integers Int64 bits_shl thm
R118028:118035 compcert.lib.Integers Int64 bits_shl thm
R118028:118035 compcert.lib.Integers Int64 bits_shl thm
R118090:118102 compcert.lib.Integers Int zwordsize def
R118054:118061 compcert.lib.Integers Int64 unsigned def
R118064:118067 compcert.lib.Integers Int64 repr def
R118069:118081 compcert.lib.Integers Int zwordsize def
R118054:118061 compcert.lib.Integers Int64 unsigned def
R118064:118067 compcert.lib.Integers Int64 repr def
R118069:118081 compcert.lib.Integers Int zwordsize def
R118090:118102 compcert.lib.Integers Int zwordsize def
R118090:118102 compcert.lib.Integers Int zwordsize def
R118090:118102 compcert.lib.Integers Int zwordsize def
R118090:118102 compcert.lib.Integers Int zwordsize def
R118090:118102 compcert.lib.Integers Int zwordsize def
R118090:118102 compcert.lib.Integers Int zwordsize def
R118124:118126 Coq.Init.Logic <> :type_scope:x_'='_x not
R118115:118123 compcert.lib.Integers Int64 zwordsize def
R118128:118130 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R118131:118143 compcert.lib.Integers Int zwordsize def
R118124:118126 Coq.Init.Logic <> :type_scope:x_'='_x not
R118115:118123 compcert.lib.Integers Int64 zwordsize def
R118128:118130 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R118131:118143 compcert.lib.Integers Int zwordsize def
R118174:118176 compcert.lib.Coqlib <> zlt def
R118180:118192 compcert.lib.Integers Int zwordsize def
R118174:118176 compcert.lib.Coqlib <> zlt def
R118180:118192 compcert.lib.Integers Int zwordsize def
R118206:118217 compcert.lib.Integers Int64 testbit_repr thm
R118206:118217 compcert.lib.Integers Int64 testbit_repr thm
R118206:118217 compcert.lib.Integers Int64 testbit_repr thm
R118206:118217 compcert.lib.Integers Int64 testbit_repr thm
R118237:118248 compcert.lib.Integers Int64 testbit_repr thm
R118237:118248 compcert.lib.Integers Int64 testbit_repr thm
R118237:118248 compcert.lib.Integers Int64 testbit_repr thm
R118237:118248 compcert.lib.Integers Int64 testbit_repr thm
R118237:118248 compcert.lib.Integers Int64 testbit_repr thm
R118237:118248 compcert.lib.Integers Int64 testbit_repr thm
R118237:118248 compcert.lib.Integers Int64 testbit_repr thm
R118265:118275 compcert.lib.Integers Int testbit def
R118265:118275 compcert.lib.Integers Int testbit def
R118292:118305 compcert.lib.Integers Int bits_above thm
R118292:118305 compcert.lib.Integers Int bits_above thm
R118292:118305 compcert.lib.Integers Int bits_above thm
R118292:118305 compcert.lib.Integers Int bits_above thm
R118314:118324 Coq.Bool.Bool <> orb_false_r thm
R118314:118324 Coq.Bool.Bool <> orb_false_r thm
prf 118354:118363 Int64 lo_ofwords
R118404:118406 Coq.Init.Logic <> :type_scope:x_'='_x not
R118382:118387 compcert.lib.Integers Int64 loword def
R118390:118396 compcert.lib.Integers Int64 ofwords def
R118401:118402 compcert.lib.Integers <> lo var
R118398:118399 compcert.lib.Integers <> hi var
R118407:118408 compcert.lib.Integers <> lo var
R118434:118449 compcert.lib.Integers Int same_bits_eq thm
R118434:118449 compcert.lib.Integers Int same_bits_eq thm
R118470:118480 compcert.lib.Integers Int64 bits_loword thm
R118470:118480 compcert.lib.Integers Int64 bits_loword thm
R118470:118480 compcert.lib.Integers Int64 bits_loword thm
R118470:118480 compcert.lib.Integers Int64 bits_loword thm
R118497:118508 compcert.lib.Integers Int64 bits_ofwords thm
R118497:118508 compcert.lib.Integers Int64 bits_ofwords thm
R118497:118508 compcert.lib.Integers Int64 bits_ofwords thm
R118497:118508 compcert.lib.Integers Int64 bits_ofwords thm
R118517:118524 compcert.lib.Coqlib <> zlt_true thm
R118517:118524 compcert.lib.Coqlib <> zlt_true thm
R118553:118555 Coq.Init.Logic <> :type_scope:x_'='_x not
R118544:118552 compcert.lib.Integers Int64 zwordsize def
R118557:118559 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R118560:118572 compcert.lib.Integers Int zwordsize def
R118553:118555 Coq.Init.Logic <> :type_scope:x_'='_x not
R118544:118552 compcert.lib.Integers Int64 zwordsize def
R118557:118559 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R118560:118572 compcert.lib.Integers Int zwordsize def
prf 118610:118619 Int64 hi_ofwords
R118660:118662 Coq.Init.Logic <> :type_scope:x_'='_x not
R118638:118643 compcert.lib.Integers Int64 hiword def
R118646:118652 compcert.lib.Integers Int64 ofwords def
R118657:118658 compcert.lib.Integers <> lo var
R118654:118655 compcert.lib.Integers <> hi var
R118663:118664 compcert.lib.Integers <> hi var
R118690:118705 compcert.lib.Integers Int same_bits_eq thm
R118690:118705 compcert.lib.Integers Int same_bits_eq thm
R118726:118736 compcert.lib.Integers Int64 bits_hiword thm
R118726:118736 compcert.lib.Integers Int64 bits_hiword thm
R118726:118736 compcert.lib.Integers Int64 bits_hiword thm
R118726:118736 compcert.lib.Integers Int64 bits_hiword thm
R118753:118764 compcert.lib.Integers Int64 bits_ofwords thm
R118753:118764 compcert.lib.Integers Int64 bits_ofwords thm
R118753:118764 compcert.lib.Integers Int64 bits_ofwords thm
R118753:118764 compcert.lib.Integers Int64 bits_ofwords thm
R118777:118785 compcert.lib.Coqlib <> zlt_false thm
R118777:118785 compcert.lib.Coqlib <> zlt_false thm
R118777:118785 compcert.lib.Coqlib <> zlt_false thm
R118777:118785 compcert.lib.Coqlib <> zlt_false thm
R118830:118832 Coq.Init.Logic <> :type_scope:x_'='_x not
R118821:118829 compcert.lib.Integers Int64 zwordsize def
R118834:118836 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R118837:118849 compcert.lib.Integers Int zwordsize def
R118830:118832 Coq.Init.Logic <> :type_scope:x_'='_x not
R118821:118829 compcert.lib.Integers Int64 zwordsize def
R118834:118836 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R118837:118849 compcert.lib.Integers Int zwordsize def
prf 118887:118903 Int64 ofwords_recompose
R118947:118949 Coq.Init.Logic <> :type_scope:x_'='_x not
R118918:118924 compcert.lib.Integers Int64 ofwords def
R118938:118943 compcert.lib.Integers Int64 loword def
R118945:118945 compcert.lib.Integers <> n var
R118927:118932 compcert.lib.Integers Int64 hiword def
R118934:118934 compcert.lib.Integers <> n var
R118950:118950 compcert.lib.Integers <> n var
R118976:118987 compcert.lib.Integers Int64 same_bits_eq thm
R118976:118987 compcert.lib.Integers Int64 same_bits_eq thm
R119006:119017 compcert.lib.Integers Int64 bits_ofwords thm
R119006:119017 compcert.lib.Integers Int64 bits_ofwords thm
R119006:119017 compcert.lib.Integers Int64 bits_ofwords thm
R119006:119017 compcert.lib.Integers Int64 bits_ofwords thm
R119038:119040 compcert.lib.Coqlib <> zlt def
R119044:119056 compcert.lib.Integers Int zwordsize def
R119038:119040 compcert.lib.Coqlib <> zlt def
R119044:119056 compcert.lib.Integers Int zwordsize def
R119068:119078 compcert.lib.Integers Int64 bits_loword thm
R119068:119078 compcert.lib.Integers Int64 bits_loword thm
R119098:119108 compcert.lib.Integers Int64 bits_hiword thm
R119098:119108 compcert.lib.Integers Int64 bits_hiword thm
R119098:119108 compcert.lib.Integers Int64 bits_hiword thm
R119098:119108 compcert.lib.Integers Int64 bits_hiword thm
R119146:119148 Coq.Init.Logic <> :type_scope:x_'='_x not
R119137:119145 compcert.lib.Integers Int64 zwordsize def
R119150:119152 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R119153:119165 compcert.lib.Integers Int zwordsize def
R119146:119148 Coq.Init.Logic <> :type_scope:x_'='_x not
R119137:119145 compcert.lib.Integers Int64 zwordsize def
R119150:119152 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R119153:119165 compcert.lib.Integers Int zwordsize def
prf 119203:119213 Int64 ofwords_add
R119245:119247 Coq.Init.Logic <> :type_scope:x_'='_x not
R119232:119238 compcert.lib.Integers Int64 ofwords def
R119243:119244 compcert.lib.Integers <> lo var
R119240:119241 compcert.lib.Integers <> hi var
R119248:119251 compcert.lib.Integers Int64 repr def
R119280:119282 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R119269:119271 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R119254:119265 compcert.lib.Integers Int unsigned def
R119267:119268 compcert.lib.Integers <> hi var
R119272:119276 Coq.ZArith.Zpower <> two_p def
R119283:119294 compcert.lib.Integers Int unsigned def
R119296:119297 compcert.lib.Integers <> lo var
R119325:119331 compcert.lib.Integers Int64 ofwords def
R119342:119358 compcert.lib.Integers Int64 shifted_or_is_add thm
R119342:119358 compcert.lib.Integers Int64 shifted_or_is_add thm
R119342:119358 compcert.lib.Integers Int64 shifted_or_is_add thm
R119342:119358 compcert.lib.Integers Int64 shifted_or_is_add thm
R119342:119358 compcert.lib.Integers Int64 shifted_or_is_add thm
R119369:119380 compcert.lib.Integers Int64 eqm_samerepr thm
R119369:119380 compcert.lib.Integers Int64 eqm_samerepr thm
R119389:119395 compcert.lib.Integers Int64 eqm_add thm
R119389:119395 compcert.lib.Integers Int64 eqm_add thm
R119404:119411 compcert.lib.Integers Int64 eqm_mult thm
R119404:119411 compcert.lib.Integers Int64 eqm_mult thm
R119422:119428 compcert.lib.Integers Int64 eqm_sym thm
R119437:119453 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R119422:119428 compcert.lib.Integers Int64 eqm_sym thm
R119437:119453 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R119464:119471 compcert.lib.Integers Int64 eqm_refl thm
R119464:119471 compcert.lib.Integers Int64 eqm_refl thm
R119482:119488 compcert.lib.Integers Int64 eqm_sym thm
R119497:119513 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R119482:119488 compcert.lib.Integers Int64 eqm_sym thm
R119497:119513 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R119525:119537 compcert.lib.Integers Int zwordsize def
R119555:119563 compcert.lib.Integers Int64 zwordsize def
R119525:119537 compcert.lib.Integers Int zwordsize def
R119555:119563 compcert.lib.Integers Int64 zwordsize def
R119591:119603 compcert.lib.Integers Int64 unsigned_repr thm
R119591:119603 compcert.lib.Integers Int64 unsigned_repr thm
R119591:119603 compcert.lib.Integers Int64 unsigned_repr thm
R119591:119603 compcert.lib.Integers Int64 unsigned_repr thm
R119618:119635 compcert.lib.Integers Int unsigned_range thm
R119618:119635 compcert.lib.Integers Int unsigned_range thm
R119691:119693 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R119675:119690 compcert.lib.Integers Int max_unsigned def
R119694:119705 compcert.lib.Integers Int64 max_unsigned def
R119691:119693 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R119675:119690 compcert.lib.Integers Int max_unsigned def
R119694:119705 compcert.lib.Integers Int64 max_unsigned def
R119742:119761 compcert.lib.Integers Int unsigned_range_2 thm
R119742:119761 compcert.lib.Integers Int unsigned_range_2 thm
prf 119787:119798 Int64 ofwords_add'
R119841:119843 Coq.Init.Logic <> :type_scope:x_'='_x not
R119817:119824 compcert.lib.Integers Int64 unsigned def
R119827:119833 compcert.lib.Integers Int64 ofwords def
R119838:119839 compcert.lib.Integers <> lo var
R119835:119836 compcert.lib.Integers <> hi var
R119870:119872 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R119859:119861 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R119844:119855 compcert.lib.Integers Int unsigned def
R119857:119858 compcert.lib.Integers <> hi var
R119862:119866 Coq.ZArith.Zpower <> two_p def
R119873:119884 compcert.lib.Integers Int unsigned def
R119886:119887 compcert.lib.Integers <> lo var
R119915:119925 compcert.lib.Integers Int64 ofwords_add thm
R119915:119925 compcert.lib.Integers Int64 ofwords_add thm
R119915:119925 compcert.lib.Integers Int64 ofwords_add thm
R119934:119946 compcert.lib.Integers Int64 unsigned_repr thm
R119934:119946 compcert.lib.Integers Int64 unsigned_repr thm
R119963:119980 compcert.lib.Integers Int unsigned_range thm
R119987:120004 compcert.lib.Integers Int unsigned_range thm
R119963:119980 compcert.lib.Integers Int unsigned_range thm
R119987:120004 compcert.lib.Integers Int unsigned_range thm
R120036:120046 compcert.lib.Integers Int modulus def
R120021:120025 Coq.ZArith.Zpower <> two_p def
R120021:120025 Coq.ZArith.Zpower <> two_p def
R120036:120046 compcert.lib.Integers Int modulus def
R120036:120046 compcert.lib.Integers Int modulus def
R120058:120068 compcert.lib.Integers Int modulus def
R120058:120068 compcert.lib.Integers Int modulus def
R120096:120107 compcert.lib.Integers Int64 max_unsigned def
R120096:120107 compcert.lib.Integers Int64 max_unsigned def
prf 120158:120169 Int64 eqm_mul_2p32
R120197:120200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R120201:120203 compcert.lib.Integers Int64 eqm def
R120222:120224 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120221:120221 compcert.lib.Integers <> y var
R120225:120229 Coq.ZArith.Zpower <> two_p def
R120207:120209 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120206:120206 compcert.lib.Integers <> x var
R120210:120214 Coq.ZArith.Zpower <> two_p def
R120186:120192 compcert.lib.Integers Int eqm def
R120196:120196 compcert.lib.Integers <> y var
R120194:120194 compcert.lib.Integers <> x var
R120324:120328 Coq.ZArith.Zpower <> two_p def
R120306:120316 compcert.lib.Integers Int modulus def
R120306:120316 compcert.lib.Integers Int modulus def
R120324:120328 Coq.ZArith.Zpower <> two_p def
R120366:120368 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120358:120362 Coq.ZArith.Zpower <> two_p def
R120369:120373 Coq.ZArith.Zpower <> two_p def
R120344:120350 compcert.lib.Integers Int64 modulus def
R120344:120350 compcert.lib.Integers Int64 modulus def
R120366:120368 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120358:120362 Coq.ZArith.Zpower <> two_p def
R120369:120373 Coq.ZArith.Zpower <> two_p def
prf 120400:120412 Int64 ofwords_add''
R120453:120455 Coq.Init.Logic <> :type_scope:x_'='_x not
R120431:120436 compcert.lib.Integers Int64 signed def
R120439:120445 compcert.lib.Integers Int64 ofwords def
R120450:120451 compcert.lib.Integers <> lo var
R120447:120448 compcert.lib.Integers <> hi var
R120480:120482 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R120469:120471 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120456:120465 compcert.lib.Integers Int signed def
R120467:120468 compcert.lib.Integers <> hi var
R120472:120476 Coq.ZArith.Zpower <> two_p def
R120483:120494 compcert.lib.Integers Int unsigned def
R120496:120497 compcert.lib.Integers <> lo var
R120525:120535 compcert.lib.Integers Int64 ofwords_add thm
R120525:120535 compcert.lib.Integers Int64 ofwords_add thm
R120525:120535 compcert.lib.Integers Int64 ofwords_add thm
R120549:120552 compcert.lib.Integers Int64 repr def
R120581:120583 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R120570:120572 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120555:120566 compcert.lib.Integers Int unsigned def
R120573:120577 Coq.ZArith.Zpower <> two_p def
R120584:120595 compcert.lib.Integers Int unsigned def
R120613:120616 compcert.lib.Integers Int64 repr def
R120643:120645 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R120632:120634 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120619:120628 compcert.lib.Integers Int signed def
R120635:120639 Coq.ZArith.Zpower <> two_p def
R120646:120657 compcert.lib.Integers Int unsigned def
R120613:120616 compcert.lib.Integers Int64 repr def
R120643:120645 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R120632:120634 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120619:120628 compcert.lib.Integers Int signed def
R120635:120639 Coq.ZArith.Zpower <> two_p def
R120646:120657 compcert.lib.Integers Int unsigned def
R120549:120552 compcert.lib.Integers Int64 repr def
R120581:120583 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R120570:120572 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120555:120566 compcert.lib.Integers Int unsigned def
R120573:120577 Coq.ZArith.Zpower <> two_p def
R120584:120595 compcert.lib.Integers Int unsigned def
R120673:120683 compcert.lib.Integers Int64 signed_repr thm
R120673:120683 compcert.lib.Integers Int64 signed_repr thm
R120700:120715 compcert.lib.Integers Int signed_range thm
R120722:120739 compcert.lib.Integers Int unsigned_range thm
R120700:120715 compcert.lib.Integers Int signed_range thm
R120722:120739 compcert.lib.Integers Int unsigned_range thm
R120771:120781 compcert.lib.Integers Int modulus def
R120756:120760 Coq.ZArith.Zpower <> two_p def
R120756:120760 Coq.ZArith.Zpower <> two_p def
R120771:120781 compcert.lib.Integers Int modulus def
R120771:120781 compcert.lib.Integers Int modulus def
R120824:120826 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120810:120823 compcert.lib.Integers Int min_signed def
R120827:120837 compcert.lib.Integers Int modulus def
R120793:120802 compcert.lib.Integers Int64 min_signed def
R120793:120802 compcert.lib.Integers Int64 min_signed def
R120824:120826 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120810:120823 compcert.lib.Integers Int min_signed def
R120827:120837 compcert.lib.Integers Int modulus def
R120909:120911 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R120895:120897 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R120881:120883 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120867:120880 compcert.lib.Integers Int max_signed def
R120884:120894 compcert.lib.Integers Int modulus def
R120898:120908 compcert.lib.Integers Int modulus def
R120850:120859 compcert.lib.Integers Int64 max_signed def
R120850:120859 compcert.lib.Integers Int64 max_signed def
R120909:120911 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R120895:120897 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R120881:120883 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120867:120880 compcert.lib.Integers Int max_signed def
R120884:120894 compcert.lib.Integers Int modulus def
R120898:120908 compcert.lib.Integers Int modulus def
R120925:120935 compcert.lib.Integers Int modulus def
R120925:120935 compcert.lib.Integers Int modulus def
R120971:120982 compcert.lib.Integers Int64 eqm_samerepr thm
R120971:120982 compcert.lib.Integers Int64 eqm_samerepr thm
R120991:120997 compcert.lib.Integers Int64 eqm_add thm
R120991:120997 compcert.lib.Integers Int64 eqm_add thm
R121006:121017 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R121006:121017 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R121026:121048 compcert.lib.Integers Int eqm_signed_unsigned thm
R121026:121048 compcert.lib.Integers Int eqm_signed_unsigned thm
R121057:121064 compcert.lib.Integers Int64 eqm_refl thm
R121057:121064 compcert.lib.Integers Int64 eqm_refl thm
prf 121146:121168 Int64 decompose_bitwise_binop
R121205:121205 Coq.Init.Logic <> :type_scope:x_'->'_x not
R121293:121299 Coq.Init.Logic <> :type_scope:x_'->'_x not
R121300:121300 Coq.Init.Logic <> :type_scope:x_'->'_x not
R121404:121410 Coq.Init.Logic <> :type_scope:x_'->'_x not
R121446:121448 Coq.Init.Logic <> :type_scope:x_'='_x not
R121411:121413 compcert.lib.Integers <> f64 var
R121432:121438 compcert.lib.Integers Int64 ofwords def
R121443:121444 compcert.lib.Integers <> yl var
R121440:121441 compcert.lib.Integers <> yh var
R121416:121422 compcert.lib.Integers Int64 ofwords def
R121427:121428 compcert.lib.Integers <> xl var
R121424:121425 compcert.lib.Integers <> xh var
R121449:121455 compcert.lib.Integers Int64 ofwords def
R121470:121472 compcert.lib.Integers <> f32 var
R121477:121478 compcert.lib.Integers <> yl var
R121474:121475 compcert.lib.Integers <> xl var
R121458:121460 compcert.lib.Integers <> f32 var
R121465:121466 compcert.lib.Integers <> yh var
R121462:121463 compcert.lib.Integers <> xh var
R121337:121340 Coq.Init.Logic <> :type_scope:x_'->'_x not
R121364:121366 Coq.Init.Logic <> :type_scope:x_'='_x not
R121341:121351 compcert.lib.Integers Int testbit def
R121363:121363 compcert.lib.Integers <> i var
R121354:121356 compcert.lib.Integers <> f32 var
R121360:121360 compcert.lib.Integers <> y var
R121358:121358 compcert.lib.Integers <> x var
R121367:121367 compcert.lib.Integers <> f var
R121388:121398 compcert.lib.Integers Int testbit def
R121402:121402 compcert.lib.Integers <> i var
R121400:121400 compcert.lib.Integers <> y var
R121370:121380 compcert.lib.Integers Int testbit def
R121384:121384 compcert.lib.Integers <> i var
R121382:121382 compcert.lib.Integers <> x var
R121316:121319 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R121321:121323 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R121320:121320 compcert.lib.Integers <> i var
R121320:121320 compcert.lib.Integers <> i var
R121324:121336 compcert.lib.Integers Int zwordsize def
R121238:121241 Coq.Init.Logic <> :type_scope:x_'->'_x not
R121261:121263 Coq.Init.Logic <> :type_scope:x_'='_x not
R121242:121248 compcert.lib.Integers Int64 testbit def
R121260:121260 compcert.lib.Integers <> i var
R121251:121253 compcert.lib.Integers <> f64 var
R121257:121257 compcert.lib.Integers <> y var
R121255:121255 compcert.lib.Integers <> x var
R121264:121264 compcert.lib.Integers <> f var
R121281:121287 compcert.lib.Integers Int64 testbit def
R121291:121291 compcert.lib.Integers <> i var
R121289:121289 compcert.lib.Integers <> y var
R121267:121273 compcert.lib.Integers Int64 testbit def
R121277:121277 compcert.lib.Integers <> i var
R121275:121275 compcert.lib.Integers <> x var
R121221:121224 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R121226:121228 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R121225:121225 compcert.lib.Integers <> i var
R121225:121225 compcert.lib.Integers <> i var
R121229:121237 compcert.lib.Integers Int64 zwordsize def
R121505:121522 compcert.lib.Integers Int64 same_bits_eq thm
R121505:121522 compcert.lib.Integers Int64 same_bits_eq thm
R121564:121575 compcert.lib.Integers Int64 bits_ofwords thm
R121564:121575 compcert.lib.Integers Int64 bits_ofwords thm
R121564:121575 compcert.lib.Integers Int64 bits_ofwords thm
R121564:121575 compcert.lib.Integers Int64 bits_ofwords thm
R121564:121575 compcert.lib.Integers Int64 bits_ofwords thm
R121564:121575 compcert.lib.Integers Int64 bits_ofwords thm
R121605:121607 Coq.Init.Logic <> :type_scope:x_'='_x not
R121596:121604 compcert.lib.Integers Int64 zwordsize def
R121609:121611 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R121612:121624 compcert.lib.Integers Int zwordsize def
R121605:121607 Coq.Init.Logic <> :type_scope:x_'='_x not
R121596:121604 compcert.lib.Integers Int64 zwordsize def
R121609:121611 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R121612:121624 compcert.lib.Integers Int zwordsize def
R121655:121657 compcert.lib.Coqlib <> zlt def
R121661:121673 compcert.lib.Integers Int zwordsize def
R121655:121657 compcert.lib.Coqlib <> zlt def
R121661:121673 compcert.lib.Integers Int zwordsize def
prf 121716:121728 Int64 decompose_and
R121790:121792 Coq.Init.Logic <> :type_scope:x_'='_x not
R121755:121757 compcert.lib.Integers Int64 and def
R121776:121782 compcert.lib.Integers Int64 ofwords def
R121787:121788 compcert.lib.Integers <> yl var
R121784:121785 compcert.lib.Integers <> yh var
R121760:121766 compcert.lib.Integers Int64 ofwords def
R121771:121772 compcert.lib.Integers <> xl var
R121768:121769 compcert.lib.Integers <> xh var
R121793:121799 compcert.lib.Integers Int64 ofwords def
R121818:121824 compcert.lib.Integers Int and def
R121829:121830 compcert.lib.Integers <> yl var
R121826:121827 compcert.lib.Integers <> xl var
R121802:121808 compcert.lib.Integers Int and def
R121813:121814 compcert.lib.Integers <> yh var
R121810:121811 compcert.lib.Integers <> xh var
R121886:121889 Coq.Init.Datatypes <> andb def
R121857:121879 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R121886:121889 Coq.Init.Datatypes <> andb def
R121857:121879 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R121900:121907 compcert.lib.Integers Int64 bits_and thm
R121900:121907 compcert.lib.Integers Int64 bits_and thm
R121916:121927 compcert.lib.Integers Int bits_and thm
R121916:121927 compcert.lib.Integers Int bits_and thm
prf 121942:121953 Int64 decompose_or
R122014:122016 Coq.Init.Logic <> :type_scope:x_'='_x not
R121980:121981 compcert.lib.Integers Int64 or def
R122000:122006 compcert.lib.Integers Int64 ofwords def
R122011:122012 compcert.lib.Integers <> yl var
R122008:122009 compcert.lib.Integers <> yh var
R121984:121990 compcert.lib.Integers Int64 ofwords def
R121995:121996 compcert.lib.Integers <> xl var
R121992:121993 compcert.lib.Integers <> xh var
R122017:122023 compcert.lib.Integers Int64 ofwords def
R122041:122046 compcert.lib.Integers Int or def
R122051:122052 compcert.lib.Integers <> yl var
R122048:122049 compcert.lib.Integers <> xl var
R122026:122031 compcert.lib.Integers Int or def
R122036:122037 compcert.lib.Integers <> yh var
R122033:122034 compcert.lib.Integers <> xh var
R122108:122110 Coq.Init.Datatypes <> orb def
R122079:122101 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R122108:122110 Coq.Init.Datatypes <> orb def
R122079:122101 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R122121:122127 compcert.lib.Integers Int64 bits_or thm
R122121:122127 compcert.lib.Integers Int64 bits_or thm
R122136:122146 compcert.lib.Integers Int bits_or thm
R122136:122146 compcert.lib.Integers Int bits_or thm
prf 122161:122173 Int64 decompose_xor
R122235:122237 Coq.Init.Logic <> :type_scope:x_'='_x not
R122200:122202 compcert.lib.Integers Int64 xor def
R122221:122227 compcert.lib.Integers Int64 ofwords def
R122232:122233 compcert.lib.Integers <> yl var
R122229:122230 compcert.lib.Integers <> yh var
R122205:122211 compcert.lib.Integers Int64 ofwords def
R122216:122217 compcert.lib.Integers <> xl var
R122213:122214 compcert.lib.Integers <> xh var
R122238:122244 compcert.lib.Integers Int64 ofwords def
R122263:122269 compcert.lib.Integers Int xor def
R122274:122275 compcert.lib.Integers <> yl var
R122271:122272 compcert.lib.Integers <> xl var
R122247:122253 compcert.lib.Integers Int xor def
R122258:122259 compcert.lib.Integers <> yh var
R122255:122256 compcert.lib.Integers <> xh var
R122331:122334 Coq.Init.Datatypes <> xorb def
R122302:122324 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R122331:122334 Coq.Init.Datatypes <> xorb def
R122302:122324 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R122345:122352 compcert.lib.Integers Int64 bits_xor thm
R122345:122352 compcert.lib.Integers Int64 bits_xor thm
R122361:122372 compcert.lib.Integers Int bits_xor thm
R122361:122372 compcert.lib.Integers Int bits_xor thm
prf 122387:122399 Int64 decompose_not
R122439:122441 Coq.Init.Logic <> :type_scope:x_'='_x not
R122420:122422 compcert.lib.Integers Int64 not def
R122425:122431 compcert.lib.Integers Int64 ofwords def
R122436:122437 compcert.lib.Integers <> xl var
R122433:122434 compcert.lib.Integers <> xh var
R122442:122448 compcert.lib.Integers Int64 ofwords def
R122464:122470 compcert.lib.Integers Int not def
R122472:122473 compcert.lib.Integers <> xl var
R122451:122457 compcert.lib.Integers Int not def
R122459:122460 compcert.lib.Integers <> xh var
R122501:122503 compcert.lib.Integers Int64 not def
R122506:122512 compcert.lib.Integers Int not def
R122526:122538 compcert.lib.Integers Int64 decompose_xor thm
R122526:122538 compcert.lib.Integers Int64 decompose_xor thm
R122526:122538 compcert.lib.Integers Int64 decompose_xor thm
R122559:122571 compcert.lib.Integers Int64 eq_spec thm
R122579:122585 compcert.lib.Integers Int64 ofwords def
R122596:122603 compcert.lib.Integers Int mone def
R122587:122594 compcert.lib.Integers Int mone def
R122573:122576 compcert.lib.Integers Int64 mone def
R122559:122571 compcert.lib.Integers Int64 eq_spec thm
R122579:122585 compcert.lib.Integers Int64 ofwords def
R122596:122603 compcert.lib.Integers Int mone def
R122587:122594 compcert.lib.Integers Int mone def
R122573:122576 compcert.lib.Integers Int64 mone def
prf 122620:122634 Int64 decompose_shl_1
R122692:122697 Coq.Init.Logic <> :type_scope:x_'->'_x not
R122720:122724 Coq.Init.Logic <> :type_scope:x_'='_x not
R122698:122701 compcert.lib.Integers Int64 shl' def
R122719:122719 compcert.lib.Integers <> y var
R122704:122710 compcert.lib.Integers Int64 ofwords def
R122715:122716 compcert.lib.Integers <> xl var
R122712:122713 compcert.lib.Integers <> xh var
R122725:122731 compcert.lib.Integers Int64 ofwords def
R122808:122814 compcert.lib.Integers Int shl def
R122819:122819 compcert.lib.Integers <> y var
R122816:122817 compcert.lib.Integers <> xl var
R122734:122739 compcert.lib.Integers Int or def
R122757:122764 compcert.lib.Integers Int shru def
R122770:122776 compcert.lib.Integers Int sub def
R122792:122792 compcert.lib.Integers <> y var
R122778:122790 compcert.lib.Integers Int iwordsize def
R122766:122767 compcert.lib.Integers <> xl var
R122742:122748 compcert.lib.Integers Int shl def
R122753:122753 compcert.lib.Integers <> y var
R122750:122751 compcert.lib.Integers <> xh var
R122658:122661 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R122676:122678 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R122662:122673 compcert.lib.Integers Int unsigned def
R122675:122675 compcert.lib.Integers <> y var
R122662:122673 compcert.lib.Integers Int unsigned def
R122675:122675 compcert.lib.Integers <> y var
R122679:122691 compcert.lib.Integers Int zwordsize def
R122888:122890 Coq.Init.Logic <> :type_scope:x_'='_x not
R122850:122861 compcert.lib.Integers Int unsigned def
R122864:122870 compcert.lib.Integers Int sub def
R122872:122884 compcert.lib.Integers Int iwordsize def
R122904:122906 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R122891:122903 compcert.lib.Integers Int zwordsize def
R122907:122918 compcert.lib.Integers Int unsigned def
R122888:122890 Coq.Init.Logic <> :type_scope:x_'='_x not
R122850:122861 compcert.lib.Integers Int unsigned def
R122864:122870 compcert.lib.Integers Int sub def
R122872:122884 compcert.lib.Integers Int iwordsize def
R122904:122906 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R122891:122903 compcert.lib.Integers Int zwordsize def
R122907:122918 compcert.lib.Integers Int unsigned def
R122935:122941 compcert.lib.Integers Int sub def
R122952:122968 compcert.lib.Integers Int unsigned_repr thm
R122952:122968 compcert.lib.Integers Int unsigned_repr thm
R122952:122968 compcert.lib.Integers Int unsigned_repr thm
R122952:122968 compcert.lib.Integers Int unsigned_repr thm
R122989:123014 compcert.lib.Integers Int unsigned_repr_wordsize thm
R122989:123014 compcert.lib.Integers Int unsigned_repr_wordsize thm
R122989:123014 compcert.lib.Integers Int unsigned_repr_wordsize thm
R123028:123052 compcert.lib.Integers Int wordsize_max_unsigned thm
R123028:123052 compcert.lib.Integers Int wordsize_max_unsigned thm
R123083:123085 Coq.Init.Logic <> :type_scope:x_'='_x not
R123074:123082 compcert.lib.Integers Int64 zwordsize def
R123087:123089 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R123090:123102 compcert.lib.Integers Int zwordsize def
R123083:123085 Coq.Init.Logic <> :type_scope:x_'='_x not
R123074:123082 compcert.lib.Integers Int64 zwordsize def
R123087:123089 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R123090:123102 compcert.lib.Integers Int zwordsize def
R123129:123146 compcert.lib.Integers Int64 same_bits_eq thm
R123129:123146 compcert.lib.Integers Int64 same_bits_eq thm
R123167:123175 compcert.lib.Integers Int64 bits_shl' thm
R123167:123175 compcert.lib.Integers Int64 bits_shl' thm
R123167:123175 compcert.lib.Integers Int64 bits_shl' thm
R123204:123215 compcert.lib.Integers Int64 bits_ofwords thm
R123204:123215 compcert.lib.Integers Int64 bits_ofwords thm
R123204:123215 compcert.lib.Integers Int64 bits_ofwords thm
R123238:123240 compcert.lib.Coqlib <> zlt def
R123244:123256 compcert.lib.Integers Int zwordsize def
R123238:123240 compcert.lib.Coqlib <> zlt def
R123244:123256 compcert.lib.Integers Int zwordsize def
R123268:123279 compcert.lib.Integers Int bits_shl thm
R123268:123279 compcert.lib.Integers Int bits_shl thm
R123268:123279 compcert.lib.Integers Int bits_shl thm
R123303:123305 compcert.lib.Coqlib <> zlt def
R123310:123321 compcert.lib.Integers Int unsigned def
R123303:123305 compcert.lib.Coqlib <> zlt def
R123310:123321 compcert.lib.Integers Int unsigned def
R123344:123355 compcert.lib.Integers Int64 bits_ofwords thm
R123344:123355 compcert.lib.Integers Int64 bits_ofwords thm
R123344:123355 compcert.lib.Integers Int64 bits_ofwords thm
R123375:123382 compcert.lib.Coqlib <> zlt_true thm
R123375:123382 compcert.lib.Coqlib <> zlt_true thm
R123375:123382 compcert.lib.Coqlib <> zlt_true thm
R123410:123418 compcert.lib.Coqlib <> zlt_false thm
R123410:123418 compcert.lib.Coqlib <> zlt_false thm
R123410:123418 compcert.lib.Coqlib <> zlt_false thm
R123438:123449 compcert.lib.Integers Int64 bits_ofwords thm
R123438:123449 compcert.lib.Integers Int64 bits_ofwords thm
R123438:123449 compcert.lib.Integers Int64 bits_ofwords thm
R123471:123481 compcert.lib.Integers Int bits_or thm
R123471:123481 compcert.lib.Integers Int bits_or thm
R123471:123481 compcert.lib.Integers Int bits_or thm
R123501:123512 compcert.lib.Integers Int bits_shl thm
R123501:123512 compcert.lib.Integers Int bits_shl thm
R123501:123512 compcert.lib.Integers Int bits_shl thm
R123534:123546 compcert.lib.Integers Int bits_shru thm
R123534:123546 compcert.lib.Integers Int bits_shru thm
R123534:123546 compcert.lib.Integers Int bits_shru thm
R123582:123584 compcert.lib.Coqlib <> zlt def
R123608:123620 compcert.lib.Integers Int zwordsize def
R123588:123590 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R123591:123602 compcert.lib.Integers Int unsigned def
R123582:123584 compcert.lib.Coqlib <> zlt def
R123608:123620 compcert.lib.Integers Int zwordsize def
R123588:123590 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R123591:123602 compcert.lib.Integers Int unsigned def
R123635:123642 compcert.lib.Coqlib <> zlt_true thm
R123635:123642 compcert.lib.Coqlib <> zlt_true thm
R123635:123642 compcert.lib.Coqlib <> zlt_true thm
R123662:123669 compcert.lib.Coqlib <> zlt_true thm
R123662:123669 compcert.lib.Coqlib <> zlt_true thm
R123662:123669 compcert.lib.Coqlib <> zlt_true thm
R123691:123701 Coq.Bool.Bool <> orb_false_l thm
R123691:123701 Coq.Bool.Bool <> orb_false_l thm
R123691:123701 Coq.Bool.Bool <> orb_false_l thm
R123730:123738 compcert.lib.Coqlib <> zlt_false thm
R123730:123738 compcert.lib.Coqlib <> zlt_false thm
R123730:123738 compcert.lib.Coqlib <> zlt_false thm
R123758:123766 compcert.lib.Coqlib <> zlt_false thm
R123758:123766 compcert.lib.Coqlib <> zlt_false thm
R123758:123766 compcert.lib.Coqlib <> zlt_false thm
R123788:123798 Coq.Bool.Bool <> orb_false_r thm
R123788:123798 Coq.Bool.Bool <> orb_false_r thm
R123788:123798 Coq.Bool.Bool <> orb_false_r thm
prf 123829:123843 Int64 decompose_shl_2
R123909:123914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R123937:123941 Coq.Init.Logic <> :type_scope:x_'='_x not
R123915:123918 compcert.lib.Integers Int64 shl' def
R123936:123936 compcert.lib.Integers <> y var
R123921:123927 compcert.lib.Integers Int64 ofwords def
R123932:123933 compcert.lib.Integers <> xl var
R123929:123930 compcert.lib.Integers <> xh var
R123942:123948 compcert.lib.Integers Int64 ofwords def
R123989:123996 compcert.lib.Integers Int zero def
R123951:123957 compcert.lib.Integers Int shl def
R123963:123969 compcert.lib.Integers Int sub def
R123973:123985 compcert.lib.Integers Int iwordsize def
R123971:123971 compcert.lib.Integers <> y var
R123959:123960 compcert.lib.Integers <> xl var
R123879:123882 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R123897:123899 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R123866:123878 compcert.lib.Integers Int zwordsize def
R123883:123894 compcert.lib.Integers Int unsigned def
R123896:123896 compcert.lib.Integers <> y var
R123883:123894 compcert.lib.Integers Int unsigned def
R123896:123896 compcert.lib.Integers <> y var
R123900:123908 compcert.lib.Integers Int64 zwordsize def
R124035:124037 Coq.Init.Logic <> :type_scope:x_'='_x not
R124026:124034 compcert.lib.Integers Int64 zwordsize def
R124039:124041 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R124042:124054 compcert.lib.Integers Int zwordsize def
R124035:124037 Coq.Init.Logic <> :type_scope:x_'='_x not
R124026:124034 compcert.lib.Integers Int64 zwordsize def
R124039:124041 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R124042:124054 compcert.lib.Integers Int zwordsize def
R124121:124123 Coq.Init.Logic <> :type_scope:x_'='_x not
R124083:124094 compcert.lib.Integers Int unsigned def
R124097:124103 compcert.lib.Integers Int sub def
R124107:124119 compcert.lib.Integers Int iwordsize def
R124138:124140 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R124124:124135 compcert.lib.Integers Int unsigned def
R124141:124153 compcert.lib.Integers Int zwordsize def
R124121:124123 Coq.Init.Logic <> :type_scope:x_'='_x not
R124083:124094 compcert.lib.Integers Int unsigned def
R124097:124103 compcert.lib.Integers Int sub def
R124107:124119 compcert.lib.Integers Int iwordsize def
R124138:124140 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R124124:124135 compcert.lib.Integers Int unsigned def
R124141:124153 compcert.lib.Integers Int zwordsize def
R124168:124174 compcert.lib.Integers Int sub def
R124185:124201 compcert.lib.Integers Int unsigned_repr thm
R124185:124201 compcert.lib.Integers Int unsigned_repr thm
R124185:124201 compcert.lib.Integers Int unsigned_repr thm
R124185:124201 compcert.lib.Integers Int unsigned_repr thm
R124222:124247 compcert.lib.Integers Int unsigned_repr_wordsize thm
R124222:124247 compcert.lib.Integers Int unsigned_repr_wordsize thm
R124222:124247 compcert.lib.Integers Int unsigned_repr_wordsize thm
R124262:124281 compcert.lib.Integers Int unsigned_range_2 thm
R124262:124281 compcert.lib.Integers Int unsigned_range_2 thm
R124304:124321 compcert.lib.Integers Int64 same_bits_eq thm
R124304:124321 compcert.lib.Integers Int64 same_bits_eq thm
R124342:124350 compcert.lib.Integers Int64 bits_shl' thm
R124342:124350 compcert.lib.Integers Int64 bits_shl' thm
R124342:124350 compcert.lib.Integers Int64 bits_shl' thm
R124379:124390 compcert.lib.Integers Int64 bits_ofwords thm
R124379:124390 compcert.lib.Integers Int64 bits_ofwords thm
R124379:124390 compcert.lib.Integers Int64 bits_ofwords thm
R124413:124415 compcert.lib.Coqlib <> zlt def
R124419:124431 compcert.lib.Integers Int zwordsize def
R124413:124415 compcert.lib.Coqlib <> zlt def
R124419:124431 compcert.lib.Integers Int zwordsize def
R124443:124450 compcert.lib.Coqlib <> zlt_true thm
R124443:124450 compcert.lib.Coqlib <> zlt_true thm
R124443:124450 compcert.lib.Coqlib <> zlt_true thm
R124468:124480 compcert.lib.Integers Int bits_zero thm
R124468:124480 compcert.lib.Integers Int bits_zero thm
R124493:124504 compcert.lib.Integers Int bits_shl thm
R124493:124504 compcert.lib.Integers Int bits_shl thm
R124493:124504 compcert.lib.Integers Int bits_shl thm
R124528:124530 compcert.lib.Coqlib <> zlt def
R124535:124546 compcert.lib.Integers Int unsigned def
R124528:124530 compcert.lib.Coqlib <> zlt def
R124535:124546 compcert.lib.Integers Int unsigned def
R124563:124570 compcert.lib.Coqlib <> zlt_true thm
R124563:124570 compcert.lib.Coqlib <> zlt_true thm
R124563:124570 compcert.lib.Coqlib <> zlt_true thm
R124598:124606 compcert.lib.Coqlib <> zlt_false thm
R124598:124606 compcert.lib.Coqlib <> zlt_false thm
R124598:124606 compcert.lib.Coqlib <> zlt_false thm
R124628:124639 compcert.lib.Integers Int64 bits_ofwords thm
R124628:124639 compcert.lib.Integers Int64 bits_ofwords thm
R124628:124639 compcert.lib.Integers Int64 bits_ofwords thm
R124659:124666 compcert.lib.Coqlib <> zlt_true thm
R124659:124666 compcert.lib.Coqlib <> zlt_true thm
R124659:124666 compcert.lib.Coqlib <> zlt_true thm
prf 124706:124721 Int64 decompose_shru_1
R124779:124784 Coq.Init.Logic <> :type_scope:x_'->'_x not
R124808:124812 Coq.Init.Logic <> :type_scope:x_'='_x not
R124785:124789 compcert.lib.Integers Int64 shru' def
R124807:124807 compcert.lib.Integers <> y var
R124792:124798 compcert.lib.Integers Int64 ofwords def
R124803:124804 compcert.lib.Integers <> xl var
R124800:124801 compcert.lib.Integers <> xh var
R124813:124819 compcert.lib.Integers Int64 ofwords def
R124848:124853 compcert.lib.Integers Int or def
R124872:124878 compcert.lib.Integers Int shl def
R124884:124890 compcert.lib.Integers Int sub def
R124906:124906 compcert.lib.Integers <> y var
R124892:124904 compcert.lib.Integers Int iwordsize def
R124880:124881 compcert.lib.Integers <> xh var
R124856:124863 compcert.lib.Integers Int shru def
R124868:124868 compcert.lib.Integers <> y var
R124865:124866 compcert.lib.Integers <> xl var
R124822:124829 compcert.lib.Integers Int shru def
R124834:124834 compcert.lib.Integers <> y var
R124831:124832 compcert.lib.Integers <> xh var
R124745:124748 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R124763:124765 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R124749:124760 compcert.lib.Integers Int unsigned def
R124762:124762 compcert.lib.Integers <> y var
R124749:124760 compcert.lib.Integers Int unsigned def
R124762:124762 compcert.lib.Integers <> y var
R124766:124778 compcert.lib.Integers Int zwordsize def
R124977:124979 Coq.Init.Logic <> :type_scope:x_'='_x not
R124939:124950 compcert.lib.Integers Int unsigned def
R124953:124959 compcert.lib.Integers Int sub def
R124961:124973 compcert.lib.Integers Int iwordsize def
R124993:124995 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R124980:124992 compcert.lib.Integers Int zwordsize def
R124996:125007 compcert.lib.Integers Int unsigned def
R124977:124979 Coq.Init.Logic <> :type_scope:x_'='_x not
R124939:124950 compcert.lib.Integers Int unsigned def
R124953:124959 compcert.lib.Integers Int sub def
R124961:124973 compcert.lib.Integers Int iwordsize def
R124993:124995 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R124980:124992 compcert.lib.Integers Int zwordsize def
R124996:125007 compcert.lib.Integers Int unsigned def
R125024:125030 compcert.lib.Integers Int sub def
R125041:125057 compcert.lib.Integers Int unsigned_repr thm
R125041:125057 compcert.lib.Integers Int unsigned_repr thm
R125041:125057 compcert.lib.Integers Int unsigned_repr thm
R125041:125057 compcert.lib.Integers Int unsigned_repr thm
R125078:125103 compcert.lib.Integers Int unsigned_repr_wordsize thm
R125078:125103 compcert.lib.Integers Int unsigned_repr_wordsize thm
R125078:125103 compcert.lib.Integers Int unsigned_repr_wordsize thm
R125117:125141 compcert.lib.Integers Int wordsize_max_unsigned thm
R125117:125141 compcert.lib.Integers Int wordsize_max_unsigned thm
R125172:125174 Coq.Init.Logic <> :type_scope:x_'='_x not
R125163:125171 compcert.lib.Integers Int64 zwordsize def
R125176:125178 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R125179:125191 compcert.lib.Integers Int zwordsize def
R125172:125174 Coq.Init.Logic <> :type_scope:x_'='_x not
R125163:125171 compcert.lib.Integers Int64 zwordsize def
R125176:125178 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R125179:125191 compcert.lib.Integers Int zwordsize def
R125218:125235 compcert.lib.Integers Int64 same_bits_eq thm
R125218:125235 compcert.lib.Integers Int64 same_bits_eq thm
R125256:125265 compcert.lib.Integers Int64 bits_shru' thm
R125256:125265 compcert.lib.Integers Int64 bits_shru' thm
R125256:125265 compcert.lib.Integers Int64 bits_shru' thm
R125294:125305 compcert.lib.Integers Int64 bits_ofwords thm
R125294:125305 compcert.lib.Integers Int64 bits_ofwords thm
R125294:125305 compcert.lib.Integers Int64 bits_ofwords thm
R125328:125330 compcert.lib.Coqlib <> zlt def
R125334:125346 compcert.lib.Integers Int zwordsize def
R125328:125330 compcert.lib.Coqlib <> zlt def
R125334:125346 compcert.lib.Integers Int zwordsize def
R125360:125367 compcert.lib.Coqlib <> zlt_true thm
R125360:125367 compcert.lib.Coqlib <> zlt_true thm
R125360:125367 compcert.lib.Coqlib <> zlt_true thm
R125389:125400 compcert.lib.Integers Int64 bits_ofwords thm
R125389:125400 compcert.lib.Integers Int64 bits_ofwords thm
R125389:125400 compcert.lib.Integers Int64 bits_ofwords thm
R125422:125432 compcert.lib.Integers Int bits_or thm
R125422:125432 compcert.lib.Integers Int bits_or thm
R125422:125432 compcert.lib.Integers Int bits_or thm
R125452:125463 compcert.lib.Integers Int bits_shl thm
R125452:125463 compcert.lib.Integers Int bits_shl thm
R125452:125463 compcert.lib.Integers Int bits_shl thm
R125485:125497 compcert.lib.Integers Int bits_shru thm
R125485:125497 compcert.lib.Integers Int bits_shru thm
R125485:125497 compcert.lib.Integers Int bits_shru thm
R125533:125535 compcert.lib.Coqlib <> zlt def
R125559:125571 compcert.lib.Integers Int zwordsize def
R125539:125541 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R125542:125553 compcert.lib.Integers Int unsigned def
R125533:125535 compcert.lib.Coqlib <> zlt def
R125559:125571 compcert.lib.Integers Int zwordsize def
R125539:125541 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R125542:125553 compcert.lib.Integers Int unsigned def
R125586:125593 compcert.lib.Coqlib <> zlt_true thm
R125586:125593 compcert.lib.Coqlib <> zlt_true thm
R125586:125593 compcert.lib.Coqlib <> zlt_true thm
R125615:125625 Coq.Bool.Bool <> orb_false_r thm
R125615:125625 Coq.Bool.Bool <> orb_false_r thm
R125615:125625 Coq.Bool.Bool <> orb_false_r thm
R125644:125652 compcert.lib.Coqlib <> zlt_false thm
R125644:125652 compcert.lib.Coqlib <> zlt_false thm
R125644:125652 compcert.lib.Coqlib <> zlt_false thm
R125674:125684 Coq.Bool.Bool <> orb_false_l thm
R125674:125684 Coq.Bool.Bool <> orb_false_l thm
R125674:125684 Coq.Bool.Bool <> orb_false_l thm
R125713:125725 compcert.lib.Integers Int bits_shru thm
R125713:125725 compcert.lib.Integers Int bits_shru thm
R125713:125725 compcert.lib.Integers Int bits_shru thm
R125749:125751 compcert.lib.Coqlib <> zlt def
R125774:125782 compcert.lib.Integers Int64 zwordsize def
R125755:125757 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R125758:125769 compcert.lib.Integers Int unsigned def
R125749:125751 compcert.lib.Coqlib <> zlt def
R125774:125782 compcert.lib.Integers Int64 zwordsize def
R125755:125757 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R125758:125769 compcert.lib.Integers Int unsigned def
R125796:125807 compcert.lib.Integers Int64 bits_ofwords thm
R125796:125807 compcert.lib.Integers Int64 bits_ofwords thm
R125796:125807 compcert.lib.Integers Int64 bits_ofwords thm
R125829:125836 compcert.lib.Coqlib <> zlt_true thm
R125829:125836 compcert.lib.Coqlib <> zlt_true thm
R125829:125836 compcert.lib.Coqlib <> zlt_true thm
R125856:125864 compcert.lib.Coqlib <> zlt_false thm
R125856:125864 compcert.lib.Coqlib <> zlt_false thm
R125856:125864 compcert.lib.Coqlib <> zlt_false thm
R125902:125910 compcert.lib.Coqlib <> zlt_false thm
R125902:125910 compcert.lib.Coqlib <> zlt_false thm
R125902:125910 compcert.lib.Coqlib <> zlt_false thm
prf 125940:125955 Int64 decompose_shru_2
R126021:126026 Coq.Init.Logic <> :type_scope:x_'->'_x not
R126050:126054 Coq.Init.Logic <> :type_scope:x_'='_x not
R126027:126031 compcert.lib.Integers Int64 shru' def
R126049:126049 compcert.lib.Integers <> y var
R126034:126040 compcert.lib.Integers Int64 ofwords def
R126045:126046 compcert.lib.Integers <> xl var
R126042:126043 compcert.lib.Integers <> xh var
R126055:126061 compcert.lib.Integers Int64 ofwords def
R126073:126080 compcert.lib.Integers Int shru def
R126086:126092 compcert.lib.Integers Int sub def
R126096:126108 compcert.lib.Integers Int iwordsize def
R126094:126094 compcert.lib.Integers <> y var
R126082:126083 compcert.lib.Integers <> xh var
R126063:126070 compcert.lib.Integers Int zero def
R125991:125994 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R126009:126011 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R125978:125990 compcert.lib.Integers Int zwordsize def
R125995:126006 compcert.lib.Integers Int unsigned def
R126008:126008 compcert.lib.Integers <> y var
R125995:126006 compcert.lib.Integers Int unsigned def
R126008:126008 compcert.lib.Integers <> y var
R126012:126020 compcert.lib.Integers Int64 zwordsize def
R126149:126151 Coq.Init.Logic <> :type_scope:x_'='_x not
R126140:126148 compcert.lib.Integers Int64 zwordsize def
R126153:126155 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R126156:126168 compcert.lib.Integers Int zwordsize def
R126149:126151 Coq.Init.Logic <> :type_scope:x_'='_x not
R126140:126148 compcert.lib.Integers Int64 zwordsize def
R126153:126155 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R126156:126168 compcert.lib.Integers Int zwordsize def
R126235:126237 Coq.Init.Logic <> :type_scope:x_'='_x not
R126197:126208 compcert.lib.Integers Int unsigned def
R126211:126217 compcert.lib.Integers Int sub def
R126221:126233 compcert.lib.Integers Int iwordsize def
R126252:126254 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R126238:126249 compcert.lib.Integers Int unsigned def
R126255:126267 compcert.lib.Integers Int zwordsize def
R126235:126237 Coq.Init.Logic <> :type_scope:x_'='_x not
R126197:126208 compcert.lib.Integers Int unsigned def
R126211:126217 compcert.lib.Integers Int sub def
R126221:126233 compcert.lib.Integers Int iwordsize def
R126252:126254 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R126238:126249 compcert.lib.Integers Int unsigned def
R126255:126267 compcert.lib.Integers Int zwordsize def
R126282:126288 compcert.lib.Integers Int sub def
R126299:126315 compcert.lib.Integers Int unsigned_repr thm
R126299:126315 compcert.lib.Integers Int unsigned_repr thm
R126299:126315 compcert.lib.Integers Int unsigned_repr thm
R126299:126315 compcert.lib.Integers Int unsigned_repr thm
R126336:126361 compcert.lib.Integers Int unsigned_repr_wordsize thm
R126336:126361 compcert.lib.Integers Int unsigned_repr_wordsize thm
R126336:126361 compcert.lib.Integers Int unsigned_repr_wordsize thm
R126376:126395 compcert.lib.Integers Int unsigned_range_2 thm
R126376:126395 compcert.lib.Integers Int unsigned_range_2 thm
R126418:126435 compcert.lib.Integers Int64 same_bits_eq thm
R126418:126435 compcert.lib.Integers Int64 same_bits_eq thm
R126456:126465 compcert.lib.Integers Int64 bits_shru' thm
R126456:126465 compcert.lib.Integers Int64 bits_shru' thm
R126456:126465 compcert.lib.Integers Int64 bits_shru' thm
R126494:126505 compcert.lib.Integers Int64 bits_ofwords thm
R126494:126505 compcert.lib.Integers Int64 bits_ofwords thm
R126494:126505 compcert.lib.Integers Int64 bits_ofwords thm
R126528:126530 compcert.lib.Coqlib <> zlt def
R126534:126546 compcert.lib.Integers Int zwordsize def
R126528:126530 compcert.lib.Coqlib <> zlt def
R126534:126546 compcert.lib.Integers Int zwordsize def
R126560:126572 compcert.lib.Integers Int bits_shru thm
R126560:126572 compcert.lib.Integers Int bits_shru thm
R126560:126572 compcert.lib.Integers Int bits_shru thm
R126608:126610 compcert.lib.Coqlib <> zlt def
R126633:126641 compcert.lib.Integers Int64 zwordsize def
R126614:126616 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R126617:126628 compcert.lib.Integers Int unsigned def
R126608:126610 compcert.lib.Coqlib <> zlt def
R126633:126641 compcert.lib.Integers Int64 zwordsize def
R126614:126616 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R126617:126628 compcert.lib.Integers Int unsigned def
R126655:126662 compcert.lib.Coqlib <> zlt_true thm
R126655:126662 compcert.lib.Coqlib <> zlt_true thm
R126655:126662 compcert.lib.Coqlib <> zlt_true thm
R126682:126693 compcert.lib.Integers Int64 bits_ofwords thm
R126682:126693 compcert.lib.Integers Int64 bits_ofwords thm
R126682:126693 compcert.lib.Integers Int64 bits_ofwords thm
R126715:126723 compcert.lib.Coqlib <> zlt_false thm
R126715:126723 compcert.lib.Coqlib <> zlt_false thm
R126715:126723 compcert.lib.Coqlib <> zlt_false thm
R126761:126769 compcert.lib.Coqlib <> zlt_false thm
R126761:126769 compcert.lib.Coqlib <> zlt_false thm
R126761:126769 compcert.lib.Coqlib <> zlt_false thm
R126797:126805 compcert.lib.Coqlib <> zlt_false thm
R126797:126805 compcert.lib.Coqlib <> zlt_false thm
R126797:126805 compcert.lib.Coqlib <> zlt_false thm
R126823:126835 compcert.lib.Integers Int bits_zero thm
R126823:126835 compcert.lib.Integers Int bits_zero thm
prf 126850:126864 Int64 decompose_shr_1
R126922:126927 Coq.Init.Logic <> :type_scope:x_'->'_x not
R126950:126954 Coq.Init.Logic <> :type_scope:x_'='_x not
R126928:126931 compcert.lib.Integers Int64 shr' def
R126949:126949 compcert.lib.Integers <> y var
R126934:126940 compcert.lib.Integers Int64 ofwords def
R126945:126946 compcert.lib.Integers <> xl var
R126942:126943 compcert.lib.Integers <> xh var
R126955:126961 compcert.lib.Integers Int64 ofwords def
R126989:126994 compcert.lib.Integers Int or def
R127013:127019 compcert.lib.Integers Int shl def
R127025:127031 compcert.lib.Integers Int sub def
R127047:127047 compcert.lib.Integers <> y var
R127033:127045 compcert.lib.Integers Int iwordsize def
R127021:127022 compcert.lib.Integers <> xh var
R126997:127004 compcert.lib.Integers Int shru def
R127009:127009 compcert.lib.Integers <> y var
R127006:127007 compcert.lib.Integers <> xl var
R126964:126970 compcert.lib.Integers Int shr def
R126975:126975 compcert.lib.Integers <> y var
R126972:126973 compcert.lib.Integers <> xh var
R126888:126891 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R126906:126908 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R126892:126903 compcert.lib.Integers Int unsigned def
R126905:126905 compcert.lib.Integers <> y var
R126892:126903 compcert.lib.Integers Int unsigned def
R126905:126905 compcert.lib.Integers <> y var
R126909:126921 compcert.lib.Integers Int zwordsize def
R127118:127120 Coq.Init.Logic <> :type_scope:x_'='_x not
R127080:127091 compcert.lib.Integers Int unsigned def
R127094:127100 compcert.lib.Integers Int sub def
R127102:127114 compcert.lib.Integers Int iwordsize def
R127134:127136 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R127121:127133 compcert.lib.Integers Int zwordsize def
R127137:127148 compcert.lib.Integers Int unsigned def
R127118:127120 Coq.Init.Logic <> :type_scope:x_'='_x not
R127080:127091 compcert.lib.Integers Int unsigned def
R127094:127100 compcert.lib.Integers Int sub def
R127102:127114 compcert.lib.Integers Int iwordsize def
R127134:127136 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R127121:127133 compcert.lib.Integers Int zwordsize def
R127137:127148 compcert.lib.Integers Int unsigned def
R127165:127171 compcert.lib.Integers Int sub def
R127182:127198 compcert.lib.Integers Int unsigned_repr thm
R127182:127198 compcert.lib.Integers Int unsigned_repr thm
R127182:127198 compcert.lib.Integers Int unsigned_repr thm
R127182:127198 compcert.lib.Integers Int unsigned_repr thm
R127219:127244 compcert.lib.Integers Int unsigned_repr_wordsize thm
R127219:127244 compcert.lib.Integers Int unsigned_repr_wordsize thm
R127219:127244 compcert.lib.Integers Int unsigned_repr_wordsize thm
R127258:127282 compcert.lib.Integers Int wordsize_max_unsigned thm
R127258:127282 compcert.lib.Integers Int wordsize_max_unsigned thm
R127313:127315 Coq.Init.Logic <> :type_scope:x_'='_x not
R127304:127312 compcert.lib.Integers Int64 zwordsize def
R127317:127319 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R127320:127332 compcert.lib.Integers Int zwordsize def
R127313:127315 Coq.Init.Logic <> :type_scope:x_'='_x not
R127304:127312 compcert.lib.Integers Int64 zwordsize def
R127317:127319 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R127320:127332 compcert.lib.Integers Int zwordsize def
R127359:127376 compcert.lib.Integers Int64 same_bits_eq thm
R127359:127376 compcert.lib.Integers Int64 same_bits_eq thm
R127397:127405 compcert.lib.Integers Int64 bits_shr' thm
R127397:127405 compcert.lib.Integers Int64 bits_shr' thm
R127397:127405 compcert.lib.Integers Int64 bits_shr' thm
R127434:127445 compcert.lib.Integers Int64 bits_ofwords thm
R127434:127445 compcert.lib.Integers Int64 bits_ofwords thm
R127434:127445 compcert.lib.Integers Int64 bits_ofwords thm
R127468:127470 compcert.lib.Coqlib <> zlt def
R127474:127486 compcert.lib.Integers Int zwordsize def
R127468:127470 compcert.lib.Coqlib <> zlt def
R127474:127486 compcert.lib.Integers Int zwordsize def
R127500:127507 compcert.lib.Coqlib <> zlt_true thm
R127500:127507 compcert.lib.Coqlib <> zlt_true thm
R127500:127507 compcert.lib.Coqlib <> zlt_true thm
R127529:127540 compcert.lib.Integers Int64 bits_ofwords thm
R127529:127540 compcert.lib.Integers Int64 bits_ofwords thm
R127529:127540 compcert.lib.Integers Int64 bits_ofwords thm
R127562:127572 compcert.lib.Integers Int bits_or thm
R127562:127572 compcert.lib.Integers Int bits_or thm
R127562:127572 compcert.lib.Integers Int bits_or thm
R127592:127603 compcert.lib.Integers Int bits_shl thm
R127592:127603 compcert.lib.Integers Int bits_shl thm
R127592:127603 compcert.lib.Integers Int bits_shl thm
R127625:127637 compcert.lib.Integers Int bits_shru thm
R127625:127637 compcert.lib.Integers Int bits_shru thm
R127625:127637 compcert.lib.Integers Int bits_shru thm
R127673:127675 compcert.lib.Coqlib <> zlt def
R127699:127711 compcert.lib.Integers Int zwordsize def
R127679:127681 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R127682:127693 compcert.lib.Integers Int unsigned def
R127673:127675 compcert.lib.Coqlib <> zlt def
R127699:127711 compcert.lib.Integers Int zwordsize def
R127679:127681 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R127682:127693 compcert.lib.Integers Int unsigned def
R127726:127733 compcert.lib.Coqlib <> zlt_true thm
R127726:127733 compcert.lib.Coqlib <> zlt_true thm
R127726:127733 compcert.lib.Coqlib <> zlt_true thm
R127755:127765 Coq.Bool.Bool <> orb_false_r thm
R127755:127765 Coq.Bool.Bool <> orb_false_r thm
R127755:127765 Coq.Bool.Bool <> orb_false_r thm
R127784:127792 compcert.lib.Coqlib <> zlt_false thm
R127784:127792 compcert.lib.Coqlib <> zlt_false thm
R127784:127792 compcert.lib.Coqlib <> zlt_false thm
R127814:127824 Coq.Bool.Bool <> orb_false_l thm
R127814:127824 Coq.Bool.Bool <> orb_false_l thm
R127814:127824 Coq.Bool.Bool <> orb_false_l thm
R127853:127864 compcert.lib.Integers Int bits_shr thm
R127853:127864 compcert.lib.Integers Int bits_shr thm
R127853:127864 compcert.lib.Integers Int bits_shr thm
R127888:127890 compcert.lib.Coqlib <> zlt def
R127913:127921 compcert.lib.Integers Int64 zwordsize def
R127894:127896 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R127897:127908 compcert.lib.Integers Int unsigned def
R127888:127890 compcert.lib.Coqlib <> zlt def
R127913:127921 compcert.lib.Integers Int64 zwordsize def
R127894:127896 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R127897:127908 compcert.lib.Integers Int unsigned def
R127935:127946 compcert.lib.Integers Int64 bits_ofwords thm
R127935:127946 compcert.lib.Integers Int64 bits_ofwords thm
R127935:127946 compcert.lib.Integers Int64 bits_ofwords thm
R127968:127975 compcert.lib.Coqlib <> zlt_true thm
R127968:127975 compcert.lib.Coqlib <> zlt_true thm
R127968:127975 compcert.lib.Coqlib <> zlt_true thm
R127995:128003 compcert.lib.Coqlib <> zlt_false thm
R127995:128003 compcert.lib.Coqlib <> zlt_false thm
R127995:128003 compcert.lib.Coqlib <> zlt_false thm
R128041:128049 compcert.lib.Coqlib <> zlt_false thm
R128041:128049 compcert.lib.Coqlib <> zlt_false thm
R128041:128049 compcert.lib.Coqlib <> zlt_false thm
R128069:128080 compcert.lib.Integers Int64 bits_ofwords thm
R128069:128080 compcert.lib.Integers Int64 bits_ofwords thm
R128069:128080 compcert.lib.Integers Int64 bits_ofwords thm
R128102:128110 compcert.lib.Coqlib <> zlt_false thm
R128102:128110 compcert.lib.Coqlib <> zlt_false thm
R128102:128110 compcert.lib.Coqlib <> zlt_false thm
prf 128143:128157 Int64 decompose_shr_2
R128223:128228 Coq.Init.Logic <> :type_scope:x_'->'_x not
R128251:128255 Coq.Init.Logic <> :type_scope:x_'='_x not
R128229:128232 compcert.lib.Integers Int64 shr' def
R128250:128250 compcert.lib.Integers <> y var
R128235:128241 compcert.lib.Integers Int64 ofwords def
R128246:128247 compcert.lib.Integers <> xl var
R128243:128244 compcert.lib.Integers <> xh var
R128256:128262 compcert.lib.Integers Int64 ofwords def
R128320:128326 compcert.lib.Integers Int shr def
R128332:128338 compcert.lib.Integers Int sub def
R128342:128354 compcert.lib.Integers Int iwordsize def
R128340:128340 compcert.lib.Integers <> y var
R128328:128329 compcert.lib.Integers <> xh var
R128265:128271 compcert.lib.Integers Int shr def
R128277:128283 compcert.lib.Integers Int sub def
R128299:128305 compcert.lib.Integers Int one def
R128285:128297 compcert.lib.Integers Int iwordsize def
R128273:128274 compcert.lib.Integers <> xh var
R128193:128196 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R128211:128213 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R128180:128192 compcert.lib.Integers Int zwordsize def
R128197:128208 compcert.lib.Integers Int unsigned def
R128210:128210 compcert.lib.Integers <> y var
R128197:128208 compcert.lib.Integers Int unsigned def
R128210:128210 compcert.lib.Integers <> y var
R128214:128222 compcert.lib.Integers Int64 zwordsize def
R128395:128397 Coq.Init.Logic <> :type_scope:x_'='_x not
R128386:128394 compcert.lib.Integers Int64 zwordsize def
R128399:128401 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R128402:128414 compcert.lib.Integers Int zwordsize def
R128395:128397 Coq.Init.Logic <> :type_scope:x_'='_x not
R128386:128394 compcert.lib.Integers Int64 zwordsize def
R128399:128401 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R128402:128414 compcert.lib.Integers Int zwordsize def
R128481:128483 Coq.Init.Logic <> :type_scope:x_'='_x not
R128443:128454 compcert.lib.Integers Int unsigned def
R128457:128463 compcert.lib.Integers Int sub def
R128467:128479 compcert.lib.Integers Int iwordsize def
R128498:128500 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R128484:128495 compcert.lib.Integers Int unsigned def
R128501:128513 compcert.lib.Integers Int zwordsize def
R128481:128483 Coq.Init.Logic <> :type_scope:x_'='_x not
R128443:128454 compcert.lib.Integers Int unsigned def
R128457:128463 compcert.lib.Integers Int sub def
R128467:128479 compcert.lib.Integers Int iwordsize def
R128498:128500 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R128484:128495 compcert.lib.Integers Int unsigned def
R128501:128513 compcert.lib.Integers Int zwordsize def
R128528:128534 compcert.lib.Integers Int sub def
R128545:128561 compcert.lib.Integers Int unsigned_repr thm
R128545:128561 compcert.lib.Integers Int unsigned_repr thm
R128545:128561 compcert.lib.Integers Int unsigned_repr thm
R128545:128561 compcert.lib.Integers Int unsigned_repr thm
R128582:128607 compcert.lib.Integers Int unsigned_repr_wordsize thm
R128582:128607 compcert.lib.Integers Int unsigned_repr_wordsize thm
R128582:128607 compcert.lib.Integers Int unsigned_repr_wordsize thm
R128622:128641 compcert.lib.Integers Int unsigned_range_2 thm
R128622:128641 compcert.lib.Integers Int unsigned_range_2 thm
R128664:128681 compcert.lib.Integers Int64 same_bits_eq thm
R128664:128681 compcert.lib.Integers Int64 same_bits_eq thm
R128702:128710 compcert.lib.Integers Int64 bits_shr' thm
R128702:128710 compcert.lib.Integers Int64 bits_shr' thm
R128702:128710 compcert.lib.Integers Int64 bits_shr' thm
R128739:128750 compcert.lib.Integers Int64 bits_ofwords thm
R128739:128750 compcert.lib.Integers Int64 bits_ofwords thm
R128739:128750 compcert.lib.Integers Int64 bits_ofwords thm
R128773:128775 compcert.lib.Coqlib <> zlt def
R128779:128791 compcert.lib.Integers Int zwordsize def
R128773:128775 compcert.lib.Coqlib <> zlt def
R128779:128791 compcert.lib.Integers Int zwordsize def
R128805:128816 compcert.lib.Integers Int bits_shr thm
R128805:128816 compcert.lib.Integers Int bits_shr thm
R128805:128816 compcert.lib.Integers Int bits_shr thm
R128852:128854 compcert.lib.Coqlib <> zlt def
R128877:128885 compcert.lib.Integers Int64 zwordsize def
R128858:128860 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R128861:128872 compcert.lib.Integers Int unsigned def
R128852:128854 compcert.lib.Coqlib <> zlt def
R128877:128885 compcert.lib.Integers Int64 zwordsize def
R128858:128860 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R128861:128872 compcert.lib.Integers Int unsigned def
R128899:128906 compcert.lib.Coqlib <> zlt_true thm
R128899:128906 compcert.lib.Coqlib <> zlt_true thm
R128899:128906 compcert.lib.Coqlib <> zlt_true thm
R128926:128937 compcert.lib.Integers Int64 bits_ofwords thm
R128926:128937 compcert.lib.Integers Int64 bits_ofwords thm
R128926:128937 compcert.lib.Integers Int64 bits_ofwords thm
R128959:128967 compcert.lib.Coqlib <> zlt_false thm
R128959:128967 compcert.lib.Coqlib <> zlt_false thm
R128959:128967 compcert.lib.Coqlib <> zlt_false thm
R129005:129013 compcert.lib.Coqlib <> zlt_false thm
R129005:129013 compcert.lib.Coqlib <> zlt_false thm
R129005:129013 compcert.lib.Coqlib <> zlt_false thm
R129033:129044 compcert.lib.Integers Int64 bits_ofwords thm
R129033:129044 compcert.lib.Integers Int64 bits_ofwords thm
R129033:129044 compcert.lib.Integers Int64 bits_ofwords thm
R129066:129074 compcert.lib.Coqlib <> zlt_false thm
R129066:129074 compcert.lib.Coqlib <> zlt_false thm
R129066:129074 compcert.lib.Coqlib <> zlt_false thm
R129102:129113 compcert.lib.Integers Int bits_shr thm
R129102:129113 compcert.lib.Integers Int bits_shr thm
R129102:129113 compcert.lib.Integers Int bits_shr thm
R129200:129202 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129187:129199 compcert.lib.Integers Int zwordsize def
R129135:129146 compcert.lib.Integers Int unsigned def
R129149:129155 compcert.lib.Integers Int sub def
R129171:129177 compcert.lib.Integers Int one def
R129157:129169 compcert.lib.Integers Int iwordsize def
R129135:129146 compcert.lib.Integers Int unsigned def
R129149:129155 compcert.lib.Integers Int sub def
R129171:129177 compcert.lib.Integers Int one def
R129157:129169 compcert.lib.Integers Int iwordsize def
R129200:129202 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129187:129199 compcert.lib.Integers Int zwordsize def
R129200:129202 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129187:129199 compcert.lib.Integers Int zwordsize def
R129200:129202 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129187:129199 compcert.lib.Integers Int zwordsize def
R129200:129202 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129187:129199 compcert.lib.Integers Int zwordsize def
R129200:129202 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129187:129199 compcert.lib.Integers Int zwordsize def
R129200:129202 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129187:129199 compcert.lib.Integers Int zwordsize def
R129219:129221 compcert.lib.Coqlib <> zlt def
R129244:129252 compcert.lib.Integers Int64 zwordsize def
R129225:129227 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129228:129239 compcert.lib.Integers Int unsigned def
R129266:129277 compcert.lib.Integers Int64 bits_ofwords thm
R129219:129221 compcert.lib.Coqlib <> zlt def
R129244:129252 compcert.lib.Integers Int64 zwordsize def
R129225:129227 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129228:129239 compcert.lib.Integers Int unsigned def
R129266:129277 compcert.lib.Integers Int64 bits_ofwords thm
R129266:129277 compcert.lib.Integers Int64 bits_ofwords thm
R129266:129277 compcert.lib.Integers Int64 bits_ofwords thm
R129266:129277 compcert.lib.Integers Int64 bits_ofwords thm
R129309:129317 compcert.lib.Coqlib <> zlt_false thm
R129309:129317 compcert.lib.Coqlib <> zlt_false thm
R129309:129317 compcert.lib.Coqlib <> zlt_false thm
R129350:129352 compcert.lib.Coqlib <> zlt def
R129396:129408 compcert.lib.Integers Int zwordsize def
R129372:129375 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129393:129393 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129356:129358 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129359:129371 compcert.lib.Integers Int zwordsize def
R129389:129391 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129376:129388 compcert.lib.Integers Int zwordsize def
R129350:129352 compcert.lib.Coqlib <> zlt def
R129396:129408 compcert.lib.Integers Int zwordsize def
R129372:129375 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129393:129393 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129356:129358 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129359:129371 compcert.lib.Integers Int zwordsize def
R129389:129391 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129376:129388 compcert.lib.Integers Int zwordsize def
R129439:129447 compcert.lib.Coqlib <> zlt_false thm
R129439:129447 compcert.lib.Coqlib <> zlt_false thm
R129439:129447 compcert.lib.Coqlib <> zlt_false thm
R129480:129482 compcert.lib.Coqlib <> zlt def
R129526:129538 compcert.lib.Integers Int zwordsize def
R129502:129505 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129523:129523 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129486:129488 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129489:129501 compcert.lib.Integers Int zwordsize def
R129519:129521 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129506:129518 compcert.lib.Integers Int zwordsize def
R129480:129482 compcert.lib.Coqlib <> zlt def
R129526:129538 compcert.lib.Integers Int zwordsize def
R129502:129505 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129523:129523 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129486:129488 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129489:129501 compcert.lib.Integers Int zwordsize def
R129519:129521 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129506:129518 compcert.lib.Integers Int zwordsize def
prf 129561:129573 Int64 decompose_add
R129635:129639 Coq.Init.Logic <> :type_scope:x_'='_x not
R129600:129602 compcert.lib.Integers Int64 add def
R129621:129627 compcert.lib.Integers Int64 ofwords def
R129632:129633 compcert.lib.Integers <> yl var
R129629:129630 compcert.lib.Integers <> yh var
R129605:129611 compcert.lib.Integers Int64 ofwords def
R129616:129617 compcert.lib.Integers <> xl var
R129613:129614 compcert.lib.Integers <> xh var
R129640:129646 compcert.lib.Integers Int64 ofwords def
R129716:129722 compcert.lib.Integers Int add def
R129727:129728 compcert.lib.Integers <> yl var
R129724:129725 compcert.lib.Integers <> xl var
R129649:129655 compcert.lib.Integers Int add def
R129674:129686 compcert.lib.Integers Int add_carry def
R129694:129701 compcert.lib.Integers Int zero def
R129691:129692 compcert.lib.Integers <> yl var
R129688:129689 compcert.lib.Integers <> xl var
R129658:129664 compcert.lib.Integers Int add def
R129669:129670 compcert.lib.Integers <> yh var
R129666:129667 compcert.lib.Integers <> xh var
R129767:129777 compcert.lib.Integers Int64 ofwords_add thm
R129767:129777 compcert.lib.Integers Int64 ofwords_add thm
R129767:129777 compcert.lib.Integers Int64 ofwords_add thm
R129788:129799 compcert.lib.Integers Int64 add_unsigned thm
R129788:129799 compcert.lib.Integers Int64 add_unsigned thm
R129788:129799 compcert.lib.Integers Int64 add_unsigned thm
R129810:129821 compcert.lib.Integers Int64 eqm_samerepr thm
R129810:129821 compcert.lib.Integers Int64 eqm_samerepr thm
R129836:129847 compcert.lib.Integers Int64 ofwords_add' thm
R129836:129847 compcert.lib.Integers Int64 ofwords_add' thm
R129836:129847 compcert.lib.Integers Int64 ofwords_add' thm
R129836:129847 compcert.lib.Integers Int64 ofwords_add' thm
R129836:129847 compcert.lib.Integers Int64 ofwords_add' thm
R129859:129880 compcert.lib.Integers Int unsigned_add_carry thm
R129859:129880 compcert.lib.Integers Int unsigned_add_carry thm
R129859:129880 compcert.lib.Integers Int unsigned_add_carry thm
R129903:129915 compcert.lib.Integers Int add_carry def
R129923:129930 compcert.lib.Integers Int zero def
R129903:129915 compcert.lib.Integers Int add_carry def
R129923:129930 compcert.lib.Integers Int zero def
R129947:129958 compcert.lib.Integers Int unsigned def
R129976:129987 compcert.lib.Integers Int unsigned def
R130007:130018 compcert.lib.Integers Int unsigned def
R130036:130047 compcert.lib.Integers Int unsigned def
R129947:129958 compcert.lib.Integers Int unsigned def
R129976:129987 compcert.lib.Integers Int unsigned def
R130007:130018 compcert.lib.Integers Int unsigned def
R130036:130047 compcert.lib.Integers Int unsigned def
R130081:130085 Coq.ZArith.Zpower <> two_p def
R130063:130073 compcert.lib.Integers Int modulus def
R130063:130073 compcert.lib.Integers Int modulus def
R130081:130085 Coq.ZArith.Zpower <> two_p def
R130121:130124 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130143:130143 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130116:130118 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130105:130107 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130108:130112 Coq.ZArith.Zpower <> two_p def
R130138:130140 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130127:130129 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130130:130134 Coq.ZArith.Zpower <> two_p def
R130177:130180 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130188:130188 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130157:130157 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130165:130168 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130160:130162 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130169:130173 Coq.ZArith.Zpower <> two_p def
R130183:130185 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130177:130180 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130188:130188 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130157:130157 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130165:130168 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130160:130162 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130169:130173 Coq.ZArith.Zpower <> two_p def
R130183:130185 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130121:130124 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130143:130143 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130116:130118 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130105:130107 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130108:130112 Coq.ZArith.Zpower <> two_p def
R130138:130140 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130127:130129 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130130:130134 Coq.ZArith.Zpower <> two_p def
R130263:130280 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130317:130317 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130252:130254 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130211:130222 compcert.lib.Integers Int unsigned def
R130225:130231 compcert.lib.Integers Int add def
R130234:130240 compcert.lib.Integers Int add def
R130255:130259 Coq.ZArith.Zpower <> two_p def
R130288:130290 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130283:130285 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130306:130308 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130291:130302 compcert.lib.Integers Int unsigned def
R130309:130313 Coq.ZArith.Zpower <> two_p def
R130403:130417 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130425:130425 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130331:130331 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130391:130394 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130373:130375 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130332:130343 compcert.lib.Integers Int unsigned def
R130346:130352 compcert.lib.Integers Int add def
R130355:130361 compcert.lib.Integers Int add def
R130376:130387 compcert.lib.Integers Int unsigned def
R130395:130399 Coq.ZArith.Zpower <> two_p def
R130420:130422 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130403:130417 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130425:130425 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130331:130331 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130391:130394 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130373:130375 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130332:130343 compcert.lib.Integers Int unsigned def
R130346:130352 compcert.lib.Integers Int add def
R130355:130361 compcert.lib.Integers Int add def
R130376:130387 compcert.lib.Integers Int unsigned def
R130395:130399 Coq.ZArith.Zpower <> two_p def
R130420:130422 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130263:130280 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130317:130317 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130252:130254 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130211:130222 compcert.lib.Integers Int unsigned def
R130225:130231 compcert.lib.Integers Int add def
R130234:130240 compcert.lib.Integers Int add def
R130255:130259 Coq.ZArith.Zpower <> two_p def
R130288:130290 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130283:130285 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130306:130308 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130291:130302 compcert.lib.Integers Int unsigned def
R130309:130313 Coq.ZArith.Zpower <> two_p def
R130445:130451 compcert.lib.Integers Int64 eqm_add thm
R130445:130451 compcert.lib.Integers Int64 eqm_add thm
R130463:130470 compcert.lib.Integers Int64 eqm_refl thm
R130463:130470 compcert.lib.Integers Int64 eqm_refl thm
R130479:130490 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R130479:130490 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R130506:130508 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130519:130519 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130545:130548 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130527:130529 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130522:130524 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130530:130541 compcert.lib.Integers Int unsigned def
R130549:130560 compcert.lib.Integers Int unsigned def
R130519:130519 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130545:130548 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130527:130529 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130522:130524 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130530:130541 compcert.lib.Integers Int unsigned def
R130549:130560 compcert.lib.Integers Int unsigned def
R130506:130508 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130583:130593 compcert.lib.Integers Int eqm_sub thm
R130583:130593 compcert.lib.Integers Int eqm_sub thm
R130605:130616 compcert.lib.Integers Int eqm_refl thm
R130605:130616 compcert.lib.Integers Int eqm_refl thm
R130627:130649 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R130627:130649 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R130658:130668 compcert.lib.Integers Int eqm_add thm
R130658:130668 compcert.lib.Integers Int eqm_add thm
R130680:130691 compcert.lib.Integers Int eqm_refl thm
R130680:130691 compcert.lib.Integers Int eqm_refl thm
R130702:130724 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R130702:130724 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R130733:130744 compcert.lib.Integers Int eqm_refl thm
R130733:130744 compcert.lib.Integers Int eqm_refl thm
prf 130759:130771 Int64 decompose_sub
R130833:130837 Coq.Init.Logic <> :type_scope:x_'='_x not
R130798:130800 compcert.lib.Integers Int64 sub def
R130819:130825 compcert.lib.Integers Int64 ofwords def
R130830:130831 compcert.lib.Integers <> yl var
R130827:130828 compcert.lib.Integers <> yh var
R130803:130809 compcert.lib.Integers Int64 ofwords def
R130814:130815 compcert.lib.Integers <> xl var
R130811:130812 compcert.lib.Integers <> xh var
R130838:130844 compcert.lib.Integers Int64 ofwords def
R130915:130921 compcert.lib.Integers Int sub def
R130926:130927 compcert.lib.Integers <> yl var
R130923:130924 compcert.lib.Integers <> xl var
R130847:130853 compcert.lib.Integers Int sub def
R130872:130885 compcert.lib.Integers Int sub_borrow def
R130893:130900 compcert.lib.Integers Int zero def
R130890:130891 compcert.lib.Integers <> yl var
R130887:130888 compcert.lib.Integers <> xl var
R130856:130862 compcert.lib.Integers Int sub def
R130867:130868 compcert.lib.Integers <> yh var
R130864:130865 compcert.lib.Integers <> xh var
R130966:130976 compcert.lib.Integers Int64 ofwords_add thm
R130966:130976 compcert.lib.Integers Int64 ofwords_add thm
R130966:130976 compcert.lib.Integers Int64 ofwords_add thm
R130987:130998 compcert.lib.Integers Int64 eqm_samerepr thm
R130987:130998 compcert.lib.Integers Int64 eqm_samerepr thm
R131013:131024 compcert.lib.Integers Int64 ofwords_add' thm
R131013:131024 compcert.lib.Integers Int64 ofwords_add' thm
R131013:131024 compcert.lib.Integers Int64 ofwords_add' thm
R131013:131024 compcert.lib.Integers Int64 ofwords_add' thm
R131013:131024 compcert.lib.Integers Int64 ofwords_add' thm
R131036:131058 compcert.lib.Integers Int unsigned_sub_borrow thm
R131036:131058 compcert.lib.Integers Int unsigned_sub_borrow thm
R131036:131058 compcert.lib.Integers Int unsigned_sub_borrow thm
R131081:131094 compcert.lib.Integers Int sub_borrow def
R131102:131109 compcert.lib.Integers Int zero def
R131081:131094 compcert.lib.Integers Int sub_borrow def
R131102:131109 compcert.lib.Integers Int zero def
R131126:131137 compcert.lib.Integers Int unsigned def
R131155:131166 compcert.lib.Integers Int unsigned def
R131186:131197 compcert.lib.Integers Int unsigned def
R131215:131226 compcert.lib.Integers Int unsigned def
R131126:131137 compcert.lib.Integers Int unsigned def
R131155:131166 compcert.lib.Integers Int unsigned def
R131186:131197 compcert.lib.Integers Int unsigned def
R131215:131226 compcert.lib.Integers Int unsigned def
R131260:131264 Coq.ZArith.Zpower <> two_p def
R131242:131252 compcert.lib.Integers Int modulus def
R131242:131252 compcert.lib.Integers Int modulus def
R131260:131264 Coq.ZArith.Zpower <> two_p def
R131300:131303 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131322:131322 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131295:131297 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131284:131286 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131287:131291 Coq.ZArith.Zpower <> two_p def
R131317:131319 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131306:131308 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131309:131313 Coq.ZArith.Zpower <> two_p def
R131356:131359 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131367:131367 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131336:131336 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131344:131347 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131339:131341 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131348:131352 Coq.ZArith.Zpower <> two_p def
R131362:131364 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131356:131359 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131367:131367 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131336:131336 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131344:131347 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131339:131341 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131348:131352 Coq.ZArith.Zpower <> two_p def
R131362:131364 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131300:131303 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131322:131322 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131295:131297 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131284:131286 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131287:131291 Coq.ZArith.Zpower <> two_p def
R131317:131319 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131306:131308 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131309:131313 Coq.ZArith.Zpower <> two_p def
R131442:131459 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131496:131496 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131431:131433 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131390:131401 compcert.lib.Integers Int unsigned def
R131404:131410 compcert.lib.Integers Int sub def
R131413:131419 compcert.lib.Integers Int sub def
R131434:131438 Coq.ZArith.Zpower <> two_p def
R131467:131469 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131462:131464 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131485:131487 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131470:131481 compcert.lib.Integers Int unsigned def
R131488:131492 Coq.ZArith.Zpower <> two_p def
R131582:131596 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131604:131604 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131510:131510 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131570:131573 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131552:131554 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131511:131522 compcert.lib.Integers Int unsigned def
R131525:131531 compcert.lib.Integers Int sub def
R131534:131540 compcert.lib.Integers Int sub def
R131555:131566 compcert.lib.Integers Int unsigned def
R131574:131578 Coq.ZArith.Zpower <> two_p def
R131599:131601 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131582:131596 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131604:131604 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131510:131510 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131570:131573 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131552:131554 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131511:131522 compcert.lib.Integers Int unsigned def
R131525:131531 compcert.lib.Integers Int sub def
R131534:131540 compcert.lib.Integers Int sub def
R131555:131566 compcert.lib.Integers Int unsigned def
R131574:131578 Coq.ZArith.Zpower <> two_p def
R131599:131601 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131442:131459 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131496:131496 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131431:131433 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131390:131401 compcert.lib.Integers Int unsigned def
R131404:131410 compcert.lib.Integers Int sub def
R131413:131419 compcert.lib.Integers Int sub def
R131434:131438 Coq.ZArith.Zpower <> two_p def
R131467:131469 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131462:131464 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131485:131487 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131470:131481 compcert.lib.Integers Int unsigned def
R131488:131492 Coq.ZArith.Zpower <> two_p def
R131624:131630 compcert.lib.Integers Int64 eqm_add thm
R131624:131630 compcert.lib.Integers Int64 eqm_add thm
R131642:131649 compcert.lib.Integers Int64 eqm_refl thm
R131642:131649 compcert.lib.Integers Int64 eqm_refl thm
R131658:131669 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R131658:131669 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R131685:131687 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131698:131698 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131724:131727 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131706:131708 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131701:131703 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131709:131720 compcert.lib.Integers Int unsigned def
R131728:131739 compcert.lib.Integers Int unsigned def
R131698:131698 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131724:131727 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131706:131708 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131701:131703 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131709:131720 compcert.lib.Integers Int unsigned def
R131728:131739 compcert.lib.Integers Int unsigned def
R131685:131687 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131762:131772 compcert.lib.Integers Int eqm_add thm
R131762:131772 compcert.lib.Integers Int eqm_add thm
R131784:131795 compcert.lib.Integers Int eqm_refl thm
R131784:131795 compcert.lib.Integers Int eqm_refl thm
R131806:131828 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R131806:131828 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R131837:131847 compcert.lib.Integers Int eqm_add thm
R131837:131847 compcert.lib.Integers Int eqm_add thm
R131859:131870 compcert.lib.Integers Int eqm_refl thm
R131859:131870 compcert.lib.Integers Int eqm_refl thm
R131881:131903 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R131881:131903 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R131912:131923 compcert.lib.Integers Int eqm_refl thm
R131912:131923 compcert.lib.Integers Int eqm_refl thm
prf 131938:131951 Int64 decompose_sub'
R132013:132017 Coq.Init.Logic <> :type_scope:x_'='_x not
R131978:131980 compcert.lib.Integers Int64 sub def
R131999:132005 compcert.lib.Integers Int64 ofwords def
R132010:132011 compcert.lib.Integers <> yl var
R132007:132008 compcert.lib.Integers <> yh var
R131983:131989 compcert.lib.Integers Int64 ofwords def
R131994:131995 compcert.lib.Integers <> xl var
R131991:131992 compcert.lib.Integers <> xh var
R132018:132024 compcert.lib.Integers Int64 ofwords def
R132113:132119 compcert.lib.Integers Int sub def
R132124:132125 compcert.lib.Integers <> yl var
R132121:132122 compcert.lib.Integers <> xl var
R132027:132033 compcert.lib.Integers Int add def
R132062:132074 compcert.lib.Integers Int add_carry def
R132092:132098 compcert.lib.Integers Int one def
R132080:132086 compcert.lib.Integers Int not def
R132088:132089 compcert.lib.Integers <> yl var
R132076:132077 compcert.lib.Integers <> xl var
R132036:132042 compcert.lib.Integers Int add def
R132048:132054 compcert.lib.Integers Int not def
R132056:132057 compcert.lib.Integers <> yh var
R132044:132045 compcert.lib.Integers <> xh var
R132154:132166 compcert.lib.Integers Int64 decompose_sub thm
R132154:132166 compcert.lib.Integers Int64 decompose_sub thm
R132154:132166 compcert.lib.Integers Int64 decompose_sub thm
R132188:132211 compcert.lib.Integers Int sub_borrow_add_carry thm
R132188:132211 compcert.lib.Integers Int sub_borrow_add_carry thm
R132188:132211 compcert.lib.Integers Int sub_borrow_add_carry thm
R132232:132248 compcert.lib.Integers Int sub_add_not_3 thm
R132232:132248 compcert.lib.Integers Int sub_add_not_3 thm
R132232:132248 compcert.lib.Integers Int sub_add_not_3 thm
R132232:132248 compcert.lib.Integers Int sub_add_not_3 thm
R132259:132271 compcert.lib.Integers Int xor_assoc thm
R132259:132271 compcert.lib.Integers Int xor_assoc thm
R132259:132271 compcert.lib.Integers Int xor_assoc thm
R132282:132293 compcert.lib.Integers Int xor_idem thm
R132282:132293 compcert.lib.Integers Int xor_idem thm
R132282:132293 compcert.lib.Integers Int xor_idem thm
R132306:132317 compcert.lib.Integers Int xor_zero thm
R132306:132317 compcert.lib.Integers Int xor_zero thm
R132306:132317 compcert.lib.Integers Int xor_zero thm
R132336:132349 compcert.lib.Integers Int xor_zero_l thm
R132336:132349 compcert.lib.Integers Int xor_zero_l thm
R132336:132349 compcert.lib.Integers Int xor_zero_l thm
R132359:132371 compcert.lib.Integers Int add_carry def
R132386:132388 compcert.lib.Coqlib <> zlt def
R132459:132469 compcert.lib.Integers Int modulus def
R132434:132436 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132406:132408 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132391:132402 compcert.lib.Integers Int unsigned def
R132409:132420 compcert.lib.Integers Int unsigned def
R132423:132429 compcert.lib.Integers Int not def
R132437:132448 compcert.lib.Integers Int unsigned def
R132450:132456 compcert.lib.Integers Int one def
R132504:132515 compcert.lib.Integers Int mkint_eq thm
R132386:132388 compcert.lib.Coqlib <> zlt def
R132459:132469 compcert.lib.Integers Int modulus def
R132434:132436 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132406:132408 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132391:132402 compcert.lib.Integers Int unsigned def
R132409:132420 compcert.lib.Integers Int unsigned def
R132423:132429 compcert.lib.Integers Int not def
R132437:132448 compcert.lib.Integers Int unsigned def
R132450:132456 compcert.lib.Integers Int one def
R132504:132515 compcert.lib.Integers Int mkint_eq thm
R132504:132515 compcert.lib.Integers Int mkint_eq thm
def 132541:132544 Int64 mul'
R132552:132558 compcert.lib.Integers Int int rec
R132563:132565 compcert.lib.Integers Int64 int rec
R132570:132573 compcert.lib.Integers Int64 repr def
R132590:132592 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R132576:132587 compcert.lib.Integers Int unsigned def
R132589:132589 compcert.lib.Integers <> x var
R132593:132604 compcert.lib.Integers Int unsigned def
R132606:132606 compcert.lib.Integers <> y var
prf 132617:132626 Int64 mul'_mulhu
R132651:132653 Coq.Init.Logic <> :type_scope:x_'='_x not
R132643:132646 compcert.lib.Integers Int64 mul' def
R132650:132650 compcert.lib.Integers <> y var
R132648:132648 compcert.lib.Integers <> x var
R132654:132660 compcert.lib.Integers Int64 ofwords def
R132679:132685 compcert.lib.Integers Int mul def
R132689:132689 compcert.lib.Integers <> y var
R132687:132687 compcert.lib.Integers <> x var
R132663:132671 compcert.lib.Integers Int mulhu def
R132675:132675 compcert.lib.Integers <> y var
R132673:132673 compcert.lib.Integers <> x var
R132720:132730 compcert.lib.Integers Int64 ofwords_add thm
R132720:132730 compcert.lib.Integers Int64 ofwords_add thm
R132720:132730 compcert.lib.Integers Int64 ofwords_add thm
R132740:132743 compcert.lib.Integers Int64 mul' def
R132746:132754 compcert.lib.Integers Int mulhu def
R132757:132763 compcert.lib.Integers Int mul def
R132792:132794 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R132778:132789 compcert.lib.Integers Int unsigned def
R132795:132806 compcert.lib.Integers Int unsigned def
R132792:132794 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R132778:132789 compcert.lib.Integers Int unsigned def
R132795:132806 compcert.lib.Integers Int unsigned def
R132826:132828 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R132829:132839 compcert.lib.Integers Int modulus def
R132826:132828 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R132829:132839 compcert.lib.Integers Int modulus def
R132855:132859 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R132860:132870 compcert.lib.Integers Int modulus def
R132855:132859 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R132860:132870 compcert.lib.Integers Int modulus def
R132890:132893 compcert.lib.Integers Int64 repr def
R132912:132914 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132898:132900 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R132901:132911 compcert.lib.Integers Int modulus def
R132890:132893 compcert.lib.Integers Int64 repr def
R132912:132914 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132898:132900 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R132901:132911 compcert.lib.Integers Int modulus def
R132940:132949 Coq.ZArith.BinInt <> Zmult_comm syndef
R132940:132949 Coq.ZArith.BinInt <> Zmult_comm syndef
R132940:132949 Coq.ZArith.BinInt <> Zmult_comm syndef
R132958:132969 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R132958:132969 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R132978:132992 compcert.lib.Integers Int modulus_pos thm
R132978:132992 compcert.lib.Integers Int modulus_pos thm
R133003:133014 compcert.lib.Integers Int64 eqm_samerepr thm
R133003:133014 compcert.lib.Integers Int64 eqm_samerepr thm
R133023:133029 compcert.lib.Integers Int64 eqm_add thm
R133023:133029 compcert.lib.Integers Int64 eqm_add thm
R133038:133049 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R133038:133049 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R133078:133097 compcert.lib.Integers Int unsigned_repr_eq thm
R133078:133097 compcert.lib.Integers Int unsigned_repr_eq thm
R133078:133097 compcert.lib.Integers Int unsigned_repr_eq thm
R133106:133113 compcert.lib.Integers Int64 eqm_refl thm
R133106:133113 compcert.lib.Integers Int64 eqm_refl thm
prf 133128:133140 Int64 decompose_mul
R133202:133206 Coq.Init.Logic <> :type_scope:x_'='_x not
R133167:133169 compcert.lib.Integers Int64 mul def
R133188:133194 compcert.lib.Integers Int64 ofwords def
R133199:133200 compcert.lib.Integers <> yl var
R133196:133197 compcert.lib.Integers <> yh var
R133172:133178 compcert.lib.Integers Int64 ofwords def
R133183:133184 compcert.lib.Integers <> xl var
R133180:133181 compcert.lib.Integers <> xh var
R133207:133213 compcert.lib.Integers Int64 ofwords def
R133300:133305 compcert.lib.Integers Int64 loword def
R133308:133311 compcert.lib.Integers Int64 mul' def
R133316:133317 compcert.lib.Integers <> yl var
R133313:133314 compcert.lib.Integers <> xl var
R133216:133222 compcert.lib.Integers Int add def
R133273:133279 compcert.lib.Integers Int mul def
R133284:133285 compcert.lib.Integers <> yl var
R133281:133282 compcert.lib.Integers <> xh var
R133225:133231 compcert.lib.Integers Int add def
R133256:133262 compcert.lib.Integers Int mul def
R133267:133268 compcert.lib.Integers <> yh var
R133264:133265 compcert.lib.Integers <> xl var
R133234:133239 compcert.lib.Integers Int64 hiword def
R133242:133245 compcert.lib.Integers Int64 mul' def
R133250:133251 compcert.lib.Integers <> yl var
R133247:133248 compcert.lib.Integers <> xl var
R133352:133357 compcert.lib.Integers Int64 loword def
R133360:133363 compcert.lib.Integers Int64 mul' def
R133385:133390 compcert.lib.Integers Int64 hiword def
R133393:133396 compcert.lib.Integers Int64 mul' def
R133352:133357 compcert.lib.Integers Int64 loword def
R133360:133363 compcert.lib.Integers Int64 mul' def
R133385:133390 compcert.lib.Integers Int64 hiword def
R133393:133396 compcert.lib.Integers Int64 mul' def
R133443:133445 Coq.Init.Logic <> :type_scope:x_'='_x not
R133422:133429 compcert.lib.Integers Int64 unsigned def
R133432:133435 compcert.lib.Integers Int64 mul' def
R133472:133474 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R133461:133463 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133446:133457 compcert.lib.Integers Int unsigned def
R133464:133468 Coq.ZArith.Zpower <> two_p def
R133475:133486 compcert.lib.Integers Int unsigned def
R133443:133445 Coq.Init.Logic <> :type_scope:x_'='_x not
R133422:133429 compcert.lib.Integers Int64 unsigned def
R133432:133435 compcert.lib.Integers Int64 mul' def
R133472:133474 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R133461:133463 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133446:133457 compcert.lib.Integers Int unsigned def
R133464:133468 Coq.ZArith.Zpower <> two_p def
R133475:133486 compcert.lib.Integers Int unsigned def
R133509:133525 compcert.lib.Integers Int64 ofwords_recompose thm
R133528:133531 compcert.lib.Integers Int64 mul' def
R133509:133525 compcert.lib.Integers Int64 ofwords_recompose thm
R133528:133531 compcert.lib.Integers Int64 mul' def
R133509:133525 compcert.lib.Integers Int64 ofwords_recompose thm
R133528:133531 compcert.lib.Integers Int64 mul' def
R133548:133559 compcert.lib.Integers Int64 ofwords_add' thm
R133548:133559 compcert.lib.Integers Int64 ofwords_add' thm
R133584:133594 compcert.lib.Integers Int64 ofwords_add thm
R133584:133594 compcert.lib.Integers Int64 ofwords_add thm
R133584:133594 compcert.lib.Integers Int64 ofwords_add thm
R133604:133606 compcert.lib.Integers Int64 mul def
R133618:133629 compcert.lib.Integers Int64 ofwords_add' thm
R133618:133629 compcert.lib.Integers Int64 ofwords_add' thm
R133618:133629 compcert.lib.Integers Int64 ofwords_add' thm
R133618:133629 compcert.lib.Integers Int64 ofwords_add' thm
R133618:133629 compcert.lib.Integers Int64 ofwords_add' thm
R133645:133656 compcert.lib.Integers Int unsigned def
R133674:133685 compcert.lib.Integers Int unsigned def
R133705:133716 compcert.lib.Integers Int unsigned def
R133734:133745 compcert.lib.Integers Int unsigned def
R133645:133656 compcert.lib.Integers Int unsigned def
R133674:133685 compcert.lib.Integers Int unsigned def
R133705:133716 compcert.lib.Integers Int unsigned def
R133734:133745 compcert.lib.Integers Int unsigned def
R133765:133776 compcert.lib.Integers Int unsigned def
R133765:133776 compcert.lib.Integers Int unsigned def
R133799:133810 compcert.lib.Integers Int unsigned def
R133799:133810 compcert.lib.Integers Int unsigned def
R133838:133841 compcert.lib.Integers Int64 repr def
R133881:133883 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R133844:133844 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133869:133872 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133845:133845 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R133858:133861 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R133848:133850 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R133853:133855 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133864:133866 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133873:133877 Coq.ZArith.Zpower <> two_p def
R133838:133841 compcert.lib.Integers Int64 repr def
R133881:133883 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R133844:133844 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133869:133872 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133845:133845 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R133858:133861 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R133848:133850 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R133853:133855 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133864:133866 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133873:133877 Coq.ZArith.Zpower <> two_p def
R133898:133909 compcert.lib.Integers Int64 eqm_samerepr thm
R133898:133909 compcert.lib.Integers Int64 eqm_samerepr thm
R133918:133924 compcert.lib.Integers Int64 eqm_add thm
R133918:133924 compcert.lib.Integers Int64 eqm_add thm
R133936:133943 compcert.lib.Integers Int64 eqm_refl thm
R133936:133943 compcert.lib.Integers Int64 eqm_refl thm
R133954:133965 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R133954:133965 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R133978:133993 compcert.lib.Integers Int add_unsigned thm
R133978:133993 compcert.lib.Integers Int add_unsigned thm
R133978:133993 compcert.lib.Integers Int add_unsigned thm
R134002:134024 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134002:134024 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134033:134043 compcert.lib.Integers Int eqm_add thm
R134033:134043 compcert.lib.Integers Int eqm_add thm
R134056:134071 compcert.lib.Integers Int add_unsigned thm
R134056:134071 compcert.lib.Integers Int add_unsigned thm
R134056:134071 compcert.lib.Integers Int add_unsigned thm
R134080:134102 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134080:134102 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134111:134121 compcert.lib.Integers Int eqm_add thm
R134111:134121 compcert.lib.Integers Int eqm_add thm
R134132:134143 compcert.lib.Integers Int eqm_refl thm
R134132:134143 compcert.lib.Integers Int eqm_refl thm
R134155:134161 compcert.lib.Integers Int mul def
R134170:134192 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134170:134192 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134201:134212 compcert.lib.Integers Int eqm_refl thm
R134201:134212 compcert.lib.Integers Int eqm_refl thm
R134224:134230 compcert.lib.Integers Int mul def
R134239:134261 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134239:134261 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134270:134281 compcert.lib.Integers Int eqm_refl thm
R134270:134281 compcert.lib.Integers Int eqm_refl thm
R134300:134303 compcert.lib.Integers Int64 repr def
R134327:134329 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134306:134313 compcert.lib.Integers Int64 unsigned def
R134316:134319 compcert.lib.Integers Int64 mul' def
R134330:134330 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134348:134351 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134338:134340 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134333:134335 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134343:134345 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134352:134356 Coq.ZArith.Zpower <> two_p def
R134300:134303 compcert.lib.Integers Int64 repr def
R134327:134329 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134306:134313 compcert.lib.Integers Int64 unsigned def
R134316:134319 compcert.lib.Integers Int64 mul' def
R134330:134330 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134348:134351 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134338:134340 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134333:134335 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134343:134345 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134352:134356 Coq.ZArith.Zpower <> two_p def
R134410:134413 compcert.lib.Integers Int64 repr def
R134424:134426 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134419:134421 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134427:134427 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134445:134448 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134435:134437 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134430:134432 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134440:134442 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134449:134453 Coq.ZArith.Zpower <> two_p def
R134410:134413 compcert.lib.Integers Int64 repr def
R134424:134426 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134419:134421 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134427:134427 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134445:134448 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134435:134437 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134430:134432 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134440:134442 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134449:134453 Coq.ZArith.Zpower <> two_p def
R134470:134481 compcert.lib.Integers Int64 eqm_samerepr thm
R134470:134481 compcert.lib.Integers Int64 eqm_samerepr thm
R134490:134496 compcert.lib.Integers Int64 eqm_add thm
R134490:134496 compcert.lib.Integers Int64 eqm_add thm
R134508:134515 compcert.lib.Integers Int64 eqm_refl thm
R134508:134515 compcert.lib.Integers Int64 eqm_refl thm
R134527:134530 compcert.lib.Integers Int64 mul' def
R134539:134557 compcert.lib.Integers Int64 eqm_unsigned_repr_l thm
R134539:134557 compcert.lib.Integers Int64 eqm_unsigned_repr_l thm
R134566:134573 compcert.lib.Integers Int64 eqm_refl thm
R134566:134573 compcert.lib.Integers Int64 eqm_refl thm
R134592:134595 compcert.lib.Integers Int64 repr def
R134599:134602 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134643:134643 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134610:134612 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134605:134607 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134613:134613 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134631:134634 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134621:134623 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134616:134618 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134626:134628 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134635:134639 Coq.ZArith.Zpower <> two_p def
R134592:134595 compcert.lib.Integers Int64 repr def
R134599:134602 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134643:134643 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134610:134612 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134605:134607 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134613:134613 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134631:134634 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134621:134623 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134616:134618 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134626:134628 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134635:134639 Coq.ZArith.Zpower <> two_p def
R134658:134666 Coq.ZArith.BinInt <> Zplus_0_l syndef
R134658:134666 Coq.ZArith.BinInt <> Zplus_0_l syndef
R134658:134666 Coq.ZArith.BinInt <> Zplus_0_l syndef
R134691:134694 compcert.lib.Integers Int64 repr def
R134728:134731 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134772:134772 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134704:134707 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134727:134727 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134699:134701 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134716:134718 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134708:134712 Coq.ZArith.Zpower <> two_p def
R134719:134723 Coq.ZArith.Zpower <> two_p def
R134739:134741 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134734:134736 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134742:134742 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134760:134763 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134750:134752 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134745:134747 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134755:134757 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134764:134768 Coq.ZArith.Zpower <> two_p def
R134691:134694 compcert.lib.Integers Int64 repr def
R134728:134731 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134772:134772 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134704:134707 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134727:134727 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134699:134701 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134716:134718 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134708:134712 Coq.ZArith.Zpower <> two_p def
R134719:134723 Coq.ZArith.Zpower <> two_p def
R134739:134741 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134734:134736 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134742:134742 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134760:134763 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134750:134752 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134745:134747 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134755:134757 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134764:134768 Coq.ZArith.Zpower <> two_p def
R134785:134796 compcert.lib.Integers Int64 eqm_samerepr thm
R134785:134796 compcert.lib.Integers Int64 eqm_samerepr thm
R134805:134811 compcert.lib.Integers Int64 eqm_add thm
R134805:134811 compcert.lib.Integers Int64 eqm_add thm
R134823:134830 compcert.lib.Integers Int64 eqm_refl thm
R134823:134830 compcert.lib.Integers Int64 eqm_refl thm
R134869:134875 compcert.lib.Integers Int64 modulus def
R134851:134853 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134843:134847 Coq.ZArith.Zpower <> two_p def
R134854:134858 Coq.ZArith.Zpower <> two_p def
R134851:134853 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134843:134847 Coq.ZArith.Zpower <> two_p def
R134854:134858 Coq.ZArith.Zpower <> two_p def
R134869:134875 compcert.lib.Integers Int64 modulus def
R134890:134892 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134886:134887 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R134890:134892 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134886:134887 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
prf 134933:134947 Int64 decompose_mul_2
R135009:135013 Coq.Init.Logic <> :type_scope:x_'='_x not
R134974:134976 compcert.lib.Integers Int64 mul def
R134995:135001 compcert.lib.Integers Int64 ofwords def
R135006:135007 compcert.lib.Integers <> yl var
R135003:135004 compcert.lib.Integers <> yh var
R134979:134985 compcert.lib.Integers Int64 ofwords def
R134990:134991 compcert.lib.Integers <> xl var
R134987:134988 compcert.lib.Integers <> xh var
R135014:135020 compcert.lib.Integers Int64 ofwords def
R135103:135109 compcert.lib.Integers Int mul def
R135114:135115 compcert.lib.Integers <> yl var
R135111:135112 compcert.lib.Integers <> xl var
R135023:135029 compcert.lib.Integers Int add def
R135076:135082 compcert.lib.Integers Int mul def
R135087:135088 compcert.lib.Integers <> yl var
R135084:135085 compcert.lib.Integers <> xh var
R135032:135038 compcert.lib.Integers Int add def
R135059:135065 compcert.lib.Integers Int mul def
R135070:135071 compcert.lib.Integers <> yh var
R135067:135068 compcert.lib.Integers <> xl var
R135041:135049 compcert.lib.Integers Int mulhu def
R135054:135055 compcert.lib.Integers <> yl var
R135051:135052 compcert.lib.Integers <> xl var
R135144:135156 compcert.lib.Integers Int64 decompose_mul thm
R135144:135156 compcert.lib.Integers Int64 decompose_mul thm
R135144:135156 compcert.lib.Integers Int64 decompose_mul thm
R135167:135176 compcert.lib.Integers Int64 mul'_mulhu thm
R135167:135176 compcert.lib.Integers Int64 mul'_mulhu thm
R135167:135176 compcert.lib.Integers Int64 mul'_mulhu thm
R135189:135198 compcert.lib.Integers Int64 hi_ofwords thm
R135201:135210 compcert.lib.Integers Int64 lo_ofwords thm
R135189:135198 compcert.lib.Integers Int64 hi_ofwords thm
R135189:135198 compcert.lib.Integers Int64 hi_ofwords thm
R135201:135210 compcert.lib.Integers Int64 lo_ofwords thm
R135201:135210 compcert.lib.Integers Int64 lo_ofwords thm
prf 135231:135243 Int64 decompose_ltu
R135305:135307 Coq.Init.Logic <> :type_scope:x_'='_x not
R135270:135272 compcert.lib.Integers Int64 ltu def
R135291:135297 compcert.lib.Integers Int64 ofwords def
R135302:135303 compcert.lib.Integers <> yl var
R135299:135300 compcert.lib.Integers <> yh var
R135275:135281 compcert.lib.Integers Int64 ofwords def
R135286:135287 compcert.lib.Integers <> xl var
R135283:135284 compcert.lib.Integers <> xh var
R135311:135316 compcert.lib.Integers Int eq def
R135321:135322 compcert.lib.Integers <> yh var
R135318:135319 compcert.lib.Integers <> xh var
R135348:135354 compcert.lib.Integers Int ltu def
R135359:135360 compcert.lib.Integers <> yh var
R135356:135357 compcert.lib.Integers <> xh var
R135329:135335 compcert.lib.Integers Int ltu def
R135340:135341 compcert.lib.Integers <> yl var
R135337:135338 compcert.lib.Integers <> xl var
R135387:135389 compcert.lib.Integers Int64 ltu def
R135402:135413 compcert.lib.Integers Int64 ofwords_add' thm
R135402:135413 compcert.lib.Integers Int64 ofwords_add' thm
R135402:135413 compcert.lib.Integers Int64 ofwords_add' thm
R135402:135413 compcert.lib.Integers Int64 ofwords_add' thm
R135402:135413 compcert.lib.Integers Int64 ofwords_add' thm
R135423:135429 compcert.lib.Integers Int ltu def
R135432:135437 compcert.lib.Integers Int eq def
R135452:135454 compcert.lib.Coqlib <> zeq def
R135475:135486 compcert.lib.Integers Int unsigned def
R135457:135468 compcert.lib.Integers Int unsigned def
R135452:135454 compcert.lib.Coqlib <> zeq def
R135475:135486 compcert.lib.Integers Int unsigned def
R135457:135468 compcert.lib.Integers Int unsigned def
R135517:135519 compcert.lib.Coqlib <> zlt def
R135540:135551 compcert.lib.Integers Int unsigned def
R135522:135533 compcert.lib.Integers Int unsigned def
R135517:135519 compcert.lib.Coqlib <> zlt def
R135540:135551 compcert.lib.Integers Int unsigned def
R135522:135533 compcert.lib.Integers Int unsigned def
R135567:135574 compcert.lib.Coqlib <> zlt_true thm
R135567:135574 compcert.lib.Coqlib <> zlt_true thm
R135592:135600 compcert.lib.Coqlib <> zlt_false thm
R135592:135600 compcert.lib.Coqlib <> zlt_false thm
R135635:135645 compcert.lib.Integers Int modulus def
R135620:135624 Coq.ZArith.Zpower <> two_p def
R135620:135624 Coq.ZArith.Zpower <> two_p def
R135635:135645 compcert.lib.Integers Int modulus def
R135635:135645 compcert.lib.Integers Int modulus def
R135635:135645 compcert.lib.Integers Int modulus def
R135635:135645 compcert.lib.Integers Int modulus def
R135635:135645 compcert.lib.Integers Int modulus def
R135635:135645 compcert.lib.Integers Int modulus def
R135635:135645 compcert.lib.Integers Int modulus def
R135635:135645 compcert.lib.Integers Int modulus def
R135635:135645 compcert.lib.Integers Int modulus def
R135635:135645 compcert.lib.Integers Int modulus def
R135662:135679 compcert.lib.Integers Int unsigned_range thm
R135686:135703 compcert.lib.Integers Int unsigned_range thm
R135662:135679 compcert.lib.Integers Int unsigned_range thm
R135686:135703 compcert.lib.Integers Int unsigned_range thm
R135719:135729 compcert.lib.Integers Int modulus def
R135719:135729 compcert.lib.Integers Int modulus def
R135768:135770 compcert.lib.Coqlib <> zlt def
R135791:135802 compcert.lib.Integers Int unsigned def
R135773:135784 compcert.lib.Integers Int unsigned def
R135768:135770 compcert.lib.Coqlib <> zlt def
R135791:135802 compcert.lib.Integers Int unsigned def
R135773:135784 compcert.lib.Integers Int unsigned def
R135818:135825 compcert.lib.Coqlib <> zlt_true thm
R135818:135825 compcert.lib.Coqlib <> zlt_true thm
R135843:135851 compcert.lib.Coqlib <> zlt_false thm
R135843:135851 compcert.lib.Coqlib <> zlt_false thm
prf 135873:135885 Int64 decompose_leu
R135954:135958 Coq.Init.Logic <> :type_scope:x_'='_x not
R135912:135915 Coq.Init.Datatypes <> negb def
R135918:135920 compcert.lib.Integers Int64 ltu def
R135939:135945 compcert.lib.Integers Int64 ofwords def
R135950:135951 compcert.lib.Integers <> xl var
R135947:135948 compcert.lib.Integers <> xh var
R135923:135929 compcert.lib.Integers Int64 ofwords def
R135934:135935 compcert.lib.Integers <> yl var
R135931:135932 compcert.lib.Integers <> yh var
R135962:135967 compcert.lib.Integers Int eq def
R135972:135973 compcert.lib.Integers <> yh var
R135969:135970 compcert.lib.Integers <> xh var
R136006:136012 compcert.lib.Integers Int ltu def
R136017:136018 compcert.lib.Integers <> yh var
R136014:136015 compcert.lib.Integers <> xh var
R135980:135983 Coq.Init.Datatypes <> negb def
R135986:135992 compcert.lib.Integers Int ltu def
R135997:135998 compcert.lib.Integers <> xl var
R135994:135995 compcert.lib.Integers <> yl var
R136046:136058 compcert.lib.Integers Int64 decompose_ltu thm
R136046:136058 compcert.lib.Integers Int64 decompose_ltu thm
R136046:136058 compcert.lib.Integers Int64 decompose_ltu thm
R136069:136078 compcert.lib.Integers Int eq_sym thm
R136069:136078 compcert.lib.Integers Int eq_sym thm
R136069:136078 compcert.lib.Integers Int eq_sym thm
R136090:136095 compcert.lib.Integers Int eq def
R136108:136110 compcert.lib.Coqlib <> zeq def
R136131:136142 compcert.lib.Integers Int unsigned def
R136113:136124 compcert.lib.Integers Int unsigned def
R136108:136110 compcert.lib.Coqlib <> zeq def
R136131:136142 compcert.lib.Integers Int unsigned def
R136113:136124 compcert.lib.Integers Int unsigned def
R136167:136173 compcert.lib.Integers Int ltu def
R136186:136188 compcert.lib.Coqlib <> zlt def
R136209:136220 compcert.lib.Integers Int unsigned def
R136191:136202 compcert.lib.Integers Int unsigned def
R136186:136188 compcert.lib.Coqlib <> zlt def
R136209:136220 compcert.lib.Integers Int unsigned def
R136191:136202 compcert.lib.Integers Int unsigned def
R136238:136246 compcert.lib.Coqlib <> zlt_false thm
R136238:136246 compcert.lib.Coqlib <> zlt_false thm
R136238:136246 compcert.lib.Coqlib <> zlt_false thm
R136274:136281 compcert.lib.Coqlib <> zlt_true thm
R136274:136281 compcert.lib.Coqlib <> zlt_true thm
R136274:136281 compcert.lib.Coqlib <> zlt_true thm
prf 136311:136322 Int64 decompose_lt
R136383:136385 Coq.Init.Logic <> :type_scope:x_'='_x not
R136349:136350 compcert.lib.Integers Int64 lt def
R136369:136375 compcert.lib.Integers Int64 ofwords def
R136380:136381 compcert.lib.Integers <> yl var
R136377:136378 compcert.lib.Integers <> yh var
R136353:136359 compcert.lib.Integers Int64 ofwords def
R136364:136365 compcert.lib.Integers <> xl var
R136361:136362 compcert.lib.Integers <> xh var
R136389:136394 compcert.lib.Integers Int eq def
R136399:136400 compcert.lib.Integers <> yh var
R136396:136397 compcert.lib.Integers <> xh var
R136426:136431 compcert.lib.Integers Int lt def
R136436:136437 compcert.lib.Integers <> yh var
R136433:136434 compcert.lib.Integers <> xh var
R136407:136413 compcert.lib.Integers Int ltu def
R136418:136419 compcert.lib.Integers <> yl var
R136415:136416 compcert.lib.Integers <> xl var
R136464:136465 compcert.lib.Integers Int64 lt def
R136478:136490 compcert.lib.Integers Int64 ofwords_add'' thm
R136478:136490 compcert.lib.Integers Int64 ofwords_add'' thm
R136478:136490 compcert.lib.Integers Int64 ofwords_add'' thm
R136478:136490 compcert.lib.Integers Int64 ofwords_add'' thm
R136478:136490 compcert.lib.Integers Int64 ofwords_add'' thm
R136501:136513 compcert.lib.Integers Int eq_signed thm
R136501:136513 compcert.lib.Integers Int eq_signed thm
R136501:136513 compcert.lib.Integers Int eq_signed thm
R136528:136530 compcert.lib.Coqlib <> zeq def
R136549:136558 compcert.lib.Integers Int signed def
R136533:136542 compcert.lib.Integers Int signed def
R136528:136530 compcert.lib.Coqlib <> zeq def
R136549:136558 compcert.lib.Integers Int signed def
R136533:136542 compcert.lib.Integers Int signed def
R136586:136592 compcert.lib.Integers Int ltu def
R136605:136607 compcert.lib.Coqlib <> zlt def
R136628:136639 compcert.lib.Integers Int unsigned def
R136610:136621 compcert.lib.Integers Int unsigned def
R136605:136607 compcert.lib.Coqlib <> zlt def
R136628:136639 compcert.lib.Integers Int unsigned def
R136610:136621 compcert.lib.Integers Int unsigned def
R136655:136662 compcert.lib.Coqlib <> zlt_true thm
R136655:136662 compcert.lib.Coqlib <> zlt_true thm
R136680:136688 compcert.lib.Coqlib <> zlt_false thm
R136680:136688 compcert.lib.Coqlib <> zlt_false thm
R136723:136733 compcert.lib.Integers Int modulus def
R136708:136712 Coq.ZArith.Zpower <> two_p def
R136708:136712 Coq.ZArith.Zpower <> two_p def
R136723:136733 compcert.lib.Integers Int modulus def
R136723:136733 compcert.lib.Integers Int modulus def
R136723:136733 compcert.lib.Integers Int modulus def
R136723:136733 compcert.lib.Integers Int modulus def
R136723:136733 compcert.lib.Integers Int modulus def
R136723:136733 compcert.lib.Integers Int modulus def
R136723:136733 compcert.lib.Integers Int modulus def
R136723:136733 compcert.lib.Integers Int modulus def
R136723:136733 compcert.lib.Integers Int modulus def
R136723:136733 compcert.lib.Integers Int modulus def
R136750:136767 compcert.lib.Integers Int unsigned_range thm
R136774:136791 compcert.lib.Integers Int unsigned_range thm
R136750:136767 compcert.lib.Integers Int unsigned_range thm
R136774:136791 compcert.lib.Integers Int unsigned_range thm
R136807:136817 compcert.lib.Integers Int modulus def
R136807:136817 compcert.lib.Integers Int modulus def
R136853:136858 compcert.lib.Integers Int lt def
R136871:136873 compcert.lib.Coqlib <> zlt def
R136892:136901 compcert.lib.Integers Int signed def
R136876:136885 compcert.lib.Integers Int signed def
R136871:136873 compcert.lib.Coqlib <> zlt def
R136892:136901 compcert.lib.Integers Int signed def
R136876:136885 compcert.lib.Integers Int signed def
R136917:136924 compcert.lib.Coqlib <> zlt_true thm
R136917:136924 compcert.lib.Coqlib <> zlt_true thm
R136942:136950 compcert.lib.Coqlib <> zlt_false thm
R136942:136950 compcert.lib.Coqlib <> zlt_false thm
prf 136972:136983 Int64 decompose_le
R137051:137055 Coq.Init.Logic <> :type_scope:x_'='_x not
R137010:137013 Coq.Init.Datatypes <> negb def
R137016:137017 compcert.lib.Integers Int64 lt def
R137036:137042 compcert.lib.Integers Int64 ofwords def
R137047:137048 compcert.lib.Integers <> xl var
R137044:137045 compcert.lib.Integers <> xh var
R137020:137026 compcert.lib.Integers Int64 ofwords def
R137031:137032 compcert.lib.Integers <> yl var
R137028:137029 compcert.lib.Integers <> yh var
R137059:137064 compcert.lib.Integers Int eq def
R137069:137070 compcert.lib.Integers <> yh var
R137066:137067 compcert.lib.Integers <> xh var
R137103:137108 compcert.lib.Integers Int lt def
R137113:137114 compcert.lib.Integers <> yh var
R137110:137111 compcert.lib.Integers <> xh var
R137077:137080 Coq.Init.Datatypes <> negb def
R137083:137089 compcert.lib.Integers Int ltu def
R137094:137095 compcert.lib.Integers <> xl var
R137091:137092 compcert.lib.Integers <> yl var
R137142:137153 compcert.lib.Integers Int64 decompose_lt thm
R137142:137153 compcert.lib.Integers Int64 decompose_lt thm
R137142:137153 compcert.lib.Integers Int64 decompose_lt thm
R137164:137173 compcert.lib.Integers Int eq_sym thm
R137164:137173 compcert.lib.Integers Int eq_sym thm
R137164:137173 compcert.lib.Integers Int eq_sym thm
R137186:137198 compcert.lib.Integers Int eq_signed thm
R137186:137198 compcert.lib.Integers Int eq_signed thm
R137186:137198 compcert.lib.Integers Int eq_signed thm
R137211:137213 compcert.lib.Coqlib <> zeq def
R137232:137241 compcert.lib.Integers Int signed def
R137216:137225 compcert.lib.Integers Int signed def
R137211:137213 compcert.lib.Coqlib <> zeq def
R137232:137241 compcert.lib.Integers Int signed def
R137216:137225 compcert.lib.Integers Int signed def
R137266:137271 compcert.lib.Integers Int lt def
R137284:137286 compcert.lib.Coqlib <> zlt def
R137305:137314 compcert.lib.Integers Int signed def
R137289:137298 compcert.lib.Integers Int signed def
R137284:137286 compcert.lib.Coqlib <> zlt def
R137305:137314 compcert.lib.Integers Int signed def
R137289:137298 compcert.lib.Integers Int signed def
R137332:137340 compcert.lib.Coqlib <> zlt_false thm
R137332:137340 compcert.lib.Coqlib <> zlt_false thm
R137332:137340 compcert.lib.Coqlib <> zlt_false thm
R137368:137375 compcert.lib.Coqlib <> zlt_true thm
R137368:137375 compcert.lib.Coqlib <> zlt_true thm
R137368:137375 compcert.lib.Coqlib <> zlt_true thm
R137403:137407 compcert.lib.Integers Int64 <> mod
R137423:137442 compcert.lib.Integers Wordsize_64 wordsize def
syndef 137456:137460 <> int64
R137465:137473 compcert.lib.Integers Int64 int rec
R137491:137498 compcert.lib.Integers Int repr def
R137500:137509 compcert.lib.Integers Int64 repr def
R137511:137519 compcert.lib.Integers Byte repr def
