DIGEST NO
Fcompcert.common.Memtype
R1498:1503 compcert.lib.Coqlib <> <> lib
R1521:1523 compcert.common.AST <> <> lib
R1541:1548 compcert.lib.Integers <> <> lib
R1566:1571 compcert.lib.Floats <> <> lib
R1589:1594 compcert.common.Values <> <> lib
R1612:1618 compcert.common.Memdata <> <> lib
ind 2380:2389 <> permission
constr 2404:2411 <> Freeable
constr 2429:2436 <> Writable
constr 2454:2461 <> Readable
constr 2479:2486 <> Nonempty
R2414:2423 compcert.common.Memtype <> permission ind
R2439:2448 compcert.common.Memtype <> permission ind
R2464:2473 compcert.common.Memtype <> permission ind
R2489:2498 compcert.common.Memtype <> permission ind
ind 2669:2678 <> perm_order
constr 2721:2729 <> perm_refl
constr 2762:2771 <> perm_F_any
constr 2810:2817 <> perm_W_R
constr 2855:2864 <> perm_any_N
R2691:2694 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2705:2708 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2695:2704 compcert.common.Memtype <> permission ind
R2681:2690 compcert.common.Memtype <> permission ind
R2743:2752 compcert.common.Memtype <> perm_order ind
R2756:2756 compcert.common.Memtype <> p var
R2754:2754 compcert.common.Memtype <> p var
R2784:2793 compcert.common.Memtype <> perm_order ind
R2804:2804 compcert.common.Memtype <> p var
R2795:2802 compcert.common.Memtype <> Freeable constr
R2822:2831 compcert.common.Memtype <> perm_order ind
R2842:2849 compcert.common.Memtype <> Readable constr
R2833:2840 compcert.common.Memtype <> Writable constr
R2877:2886 compcert.common.Memtype <> perm_order ind
R2890:2897 compcert.common.Memtype <> Nonempty constr
R2888:2888 compcert.common.Memtype <> p var
R2919:2928 compcert.common.Memtype <> perm_order ind
prf 2943:2958 <> perm_order_trans
R2996:2999 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3016:3019 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3020:3029 compcert.common.Memtype <> perm_order ind
R3034:3035 compcert.common.Memtype <> p3 var
R3031:3032 compcert.common.Memtype <> p1 var
R3000:3009 compcert.common.Memtype <> perm_order ind
R3014:3015 compcert.common.Memtype <> p3 var
R3011:3012 compcert.common.Memtype <> p2 var
R2980:2989 compcert.common.Memtype <> perm_order ind
R2994:2995 compcert.common.Memtype <> p2 var
R2991:2992 compcert.common.Memtype <> p1 var
ind 3733:3741 <> perm_kind
constr 3756:3758 <> Max
constr 3775:3777 <> Cur
R3761:3769 compcert.common.Memtype <> perm_kind ind
R3780:3788 compcert.common.Memtype <> perm_kind ind
modtype 3804:3806 <> MEM
ax 3863:3865 MEM mem
ax 3967:3971 MEM empty
R3974:3976 compcert.common.Memtype MEM mem defax
ax 4451:4455 MEM alloc
R4469:4471 compcert.common.Memtype MEM mem defax
R4482:4482 Coq.Numbers.BinNums <> Z ind
R4489:4491 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R4486:4488 compcert.common.Memtype MEM mem defax
R4492:4496 compcert.common.Values <> block def
ax 4715:4718 MEM free
R4732:4734 compcert.common.Memtype MEM mem defax
R4741:4745 compcert.common.Values <> block def
R4756:4756 Coq.Numbers.BinNums <> Z ind
R4760:4765 Coq.Init.Datatypes <> option ind
R4767:4769 compcert.common.Memtype MEM mem defax
ax 5008:5011 MEM load
R5029:5040 compcert.common.AST <> memory_chunk ind
R5047:5049 compcert.common.Memtype MEM mem defax
R5056:5060 compcert.common.Values <> block def
R5069:5069 Coq.Numbers.BinNums <> Z ind
R5073:5078 Coq.Init.Datatypes <> option ind
R5080:5082 compcert.common.Values <> val ind
ax 5346:5350 MEM store
R5368:5379 compcert.common.AST <> memory_chunk ind
R5386:5388 compcert.common.Memtype MEM mem defax
R5395:5399 compcert.common.Values <> block def
R5408:5408 Coq.Numbers.BinNums <> Z ind
R5415:5417 compcert.common.Values <> val ind
R5421:5426 Coq.Init.Datatypes <> option ind
R5428:5430 compcert.common.Memtype MEM mem defax
def 5587:5591 MEM loadv
R5601:5612 compcert.common.AST <> memory_chunk ind
R5619:5621 compcert.common.Memtype MEM mem defax
R5631:5633 compcert.common.Values <> val ind
R5638:5643 Coq.Init.Datatypes <> option ind
R5645:5647 compcert.common.Values <> val ind
R5660:5663 compcert.common.Memtype <> addr var
R5674:5677 compcert.common.Values <> Vptr constr
R5688:5691 compcert.common.Memtype MEM load defax
R5704:5715 compcert.lib.Integers Int unsigned def
R5699:5699 compcert.common.Memtype <> m var
R5693:5697 compcert.common.Memtype <> chunk var
R5731:5734 Coq.Init.Datatypes <> None constr
def 5755:5760 MEM storev
R5770:5781 compcert.common.AST <> memory_chunk ind
R5788:5790 compcert.common.Memtype MEM mem defax
R5802:5804 compcert.common.Values <> val ind
R5809:5814 Coq.Init.Datatypes <> option ind
R5816:5818 compcert.common.Memtype MEM mem defax
R5831:5834 compcert.common.Memtype <> addr var
R5845:5848 compcert.common.Values <> Vptr constr
R5859:5863 compcert.common.Memtype MEM store defax
R5894:5894 compcert.common.Memtype <> v var
R5876:5887 compcert.lib.Integers Int unsigned def
R5871:5871 compcert.common.Memtype <> m var
R5865:5869 compcert.common.Memtype <> chunk var
R5905:5908 Coq.Init.Datatypes <> None constr
ax 6170:6178 MEM loadbytes
R6192:6194 compcert.common.Memtype MEM mem defax
R6201:6205 compcert.common.Values <> block def
R6216:6216 Coq.Numbers.BinNums <> Z ind
R6220:6225 Coq.Init.Datatypes <> option ind
R6228:6231 Coq.Init.Datatypes <> list ind
R6233:6238 compcert.common.Memdata <> memval ind
ax 6447:6456 MEM storebytes
R6470:6472 compcert.common.Memtype MEM mem defax
R6479:6483 compcert.common.Values <> block def
R6492:6492 Coq.Numbers.BinNums <> Z ind
R6503:6506 Coq.Init.Datatypes <> list ind
R6508:6513 compcert.common.Memdata <> memval ind
R6517:6522 Coq.Init.Datatypes <> option ind
R6524:6526 compcert.common.Memtype MEM mem defax
def 6603:6611 MEM free_list
R6617:6619 compcert.common.Memtype MEM mem defax
R6626:6629 Coq.Init.Datatypes <> list ind
R6641:6643 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6637:6639 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6632:6636 compcert.common.Values <> block def
R6640:6640 Coq.Numbers.BinNums <> Z ind
R6644:6644 Coq.Numbers.BinNums <> Z ind
R6660:6665 Coq.Init.Datatypes <> option ind
R6667:6669 compcert.common.Memtype MEM mem defax
R6682:6682 compcert.common.Memtype <> l var
R6693:6695 Coq.Init.Datatypes <> nil constr
R6700:6703 Coq.Init.Datatypes <> Some constr
R6705:6705 compcert.common.Memtype <> m var
R6722:6725 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6711:6711 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6713:6714 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6717:6718 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6721:6721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6744:6747 compcert.common.Memtype MEM free defax
R6749:6749 compcert.common.Memtype <> m var
R6772:6775 Coq.Init.Datatypes <> None constr
R6780:6783 Coq.Init.Datatypes <> None constr
R6793:6796 Coq.Init.Datatypes <> Some constr
R6804:6812 compcert.common.Memtype <> free_list def
ax 7113:7121 MEM drop_perm
R7135:7137 compcert.common.Memtype MEM mem defax
R7144:7148 compcert.common.Values <> block def
R7159:7159 Coq.Numbers.BinNums <> Z ind
R7166:7175 compcert.common.Memtype MEM permission ind
R7179:7184 Coq.Init.Datatypes <> option ind
R7186:7188 compcert.common.Memtype MEM mem defax
ax 7689:7697 MEM nextblock
R7703:7706 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7707:7711 compcert.common.Values <> block def
R7700:7702 compcert.common.Memtype MEM mem defax
def 7726:7736 MEM valid_block
R7742:7744 compcert.common.Memtype MEM mem defax
R7751:7755 compcert.common.Values <> block def
R7761:7763 compcert.lib.Coqlib <> Plt def
R7768:7776 compcert.common.Memtype MEM nextblock defax
R7778:7778 compcert.common.Memtype <> m var
R7765:7765 compcert.common.Memtype <> b var
ax 7789:7808 MEM valid_not_valid_diff
R7843:7846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7866:7869 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7871:7874 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R7870:7870 compcert.common.Memtype <> b var
R7875:7876 compcert.common.Memtype <> b' var
R7847:7848 Coq.Init.Logic <> :type_scope:'~'_x not
R7865:7865 Coq.Init.Logic <> :type_scope:'~'_x not
R7849:7859 compcert.common.Memtype MEM valid_block def
R7863:7864 compcert.common.Memtype <> b' var
R7861:7861 compcert.common.Memtype <> m var
R7828:7838 compcert.common.Memtype MEM valid_block def
R7842:7842 compcert.common.Memtype <> b var
R7840:7840 compcert.common.Memtype <> m var
ax 8230:8233 MEM perm
R8247:8249 compcert.common.Memtype MEM mem defax
R8256:8260 compcert.common.Values <> block def
R8269:8269 Coq.Numbers.BinNums <> Z ind
R8276:8284 compcert.common.Memtype MEM perm_kind ind
R8291:8300 compcert.common.Memtype MEM permission ind
ax 8366:8377 MEM perm_implies
R8423:8426 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8443:8446 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8447:8450 compcert.common.Memtype MEM perm defax
R8462:8463 compcert.common.Memtype <> p2 var
R8460:8460 compcert.common.Memtype <> k var
R8456:8458 compcert.common.Memtype <> ofs var
R8454:8454 compcert.common.Memtype <> b var
R8452:8452 compcert.common.Memtype <> m var
R8427:8436 compcert.common.Memtype MEM perm_order ind
R8441:8442 compcert.common.Memtype <> p2 var
R8438:8439 compcert.common.Memtype <> p1 var
R8406:8409 compcert.common.Memtype MEM perm defax
R8421:8422 compcert.common.Memtype <> p1 var
R8419:8419 compcert.common.Memtype <> k var
R8415:8417 compcert.common.Memtype <> ofs var
R8413:8413 compcert.common.Memtype <> b var
R8411:8411 compcert.common.Memtype <> m var
ax 8560:8571 MEM perm_cur_max
R8612:8615 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8616:8619 compcert.common.Memtype MEM perm defax
R8633:8633 compcert.common.Memtype <> p var
R8629:8631 compcert.common.Memtype MEM Max constr
R8625:8627 compcert.common.Memtype <> ofs var
R8623:8623 compcert.common.Memtype <> b var
R8621:8621 compcert.common.Memtype <> m var
R8594:8597 compcert.common.Memtype MEM perm defax
R8611:8611 compcert.common.Memtype <> p var
R8607:8609 compcert.common.Memtype MEM Cur constr
R8603:8605 compcert.common.Memtype <> ofs var
R8601:8601 compcert.common.Memtype <> b var
R8599:8599 compcert.common.Memtype <> m var
ax 8642:8649 MEM perm_cur
R8692:8695 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8696:8699 compcert.common.Memtype MEM perm defax
R8711:8711 compcert.common.Memtype <> p var
R8709:8709 compcert.common.Memtype <> k var
R8705:8707 compcert.common.Memtype <> ofs var
R8703:8703 compcert.common.Memtype <> b var
R8701:8701 compcert.common.Memtype <> m var
R8674:8677 compcert.common.Memtype MEM perm defax
R8691:8691 compcert.common.Memtype <> p var
R8687:8689 compcert.common.Memtype MEM Cur constr
R8683:8685 compcert.common.Memtype <> ofs var
R8681:8681 compcert.common.Memtype <> b var
R8679:8679 compcert.common.Memtype <> m var
ax 8720:8727 MEM perm_max
R8768:8771 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8772:8775 compcert.common.Memtype MEM perm defax
R8789:8789 compcert.common.Memtype <> p var
R8785:8787 compcert.common.Memtype MEM Max constr
R8781:8783 compcert.common.Memtype <> ofs var
R8779:8779 compcert.common.Memtype <> b var
R8777:8777 compcert.common.Memtype <> m var
R8752:8755 compcert.common.Memtype MEM perm defax
R8767:8767 compcert.common.Memtype <> p var
R8765:8765 compcert.common.Memtype <> k var
R8761:8763 compcert.common.Memtype <> ofs var
R8759:8759 compcert.common.Memtype <> b var
R8757:8757 compcert.common.Memtype <> m var
ax 8938:8953 MEM perm_valid_block
R8994:8997 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8998:9008 compcert.common.Memtype MEM valid_block def
R9012:9012 compcert.common.Memtype <> b var
R9010:9010 compcert.common.Memtype <> m var
R8978:8981 compcert.common.Memtype MEM perm defax
R8993:8993 compcert.common.Memtype <> p var
R8991:8991 compcert.common.Memtype <> k var
R8987:8989 compcert.common.Memtype <> ofs var
R8985:8985 compcert.common.Memtype <> b var
R8983:8983 compcert.common.Memtype <> m var
def 9285:9294 MEM range_perm
R9300:9302 compcert.common.Memtype MEM mem defax
R9309:9313 compcert.common.Values <> block def
R9324:9324 Coq.Numbers.BinNums <> Z ind
R9331:9339 compcert.common.Memtype MEM perm_kind ind
R9346:9355 compcert.common.Memtype MEM permission ind
R9396:9399 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9400:9403 compcert.common.Memtype MEM perm defax
R9415:9415 compcert.common.Memtype <> p var
R9413:9413 compcert.common.Memtype <> k var
R9409:9411 compcert.common.Memtype <> ofs var
R9407:9407 compcert.common.Memtype <> b var
R9405:9405 compcert.common.Memtype <> m var
R9384:9387 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R9391:9393 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R9382:9383 compcert.common.Memtype <> lo var
R9388:9390 compcert.common.Memtype <> ofs var
R9388:9390 compcert.common.Memtype <> ofs var
R9394:9395 compcert.common.Memtype <> hi var
ax 9425:9442 MEM range_perm_implies
R9500:9503 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9520:9523 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9524:9533 compcert.common.Memtype MEM range_perm def
R9547:9548 compcert.common.Memtype <> p2 var
R9545:9545 compcert.common.Memtype <> k var
R9542:9543 compcert.common.Memtype <> hi var
R9539:9540 compcert.common.Memtype <> lo var
R9537:9537 compcert.common.Memtype <> b var
R9535:9535 compcert.common.Memtype <> m var
R9504:9513 compcert.common.Memtype MEM perm_order ind
R9518:9519 compcert.common.Memtype <> p2 var
R9515:9516 compcert.common.Memtype <> p1 var
R9475:9484 compcert.common.Memtype MEM range_perm def
R9498:9499 compcert.common.Memtype <> p1 var
R9496:9496 compcert.common.Memtype <> k var
R9493:9494 compcert.common.Memtype <> hi var
R9490:9491 compcert.common.Memtype <> lo var
R9488:9488 compcert.common.Memtype <> b var
R9486:9486 compcert.common.Memtype <> m var
def 9772:9783 MEM valid_access
R9789:9791 compcert.common.Memtype MEM mem defax
R9802:9813 compcert.common.AST <> memory_chunk ind
R9820:9824 compcert.common.Values <> block def
R9833:9833 Coq.Numbers.BinNums <> Z ind
R9840:9849 compcert.common.Memtype MEM permission ind
R9912:9917 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9863:9872 compcert.common.Memtype MEM range_perm def
R9911:9911 compcert.common.Memtype <> p var
R9907:9909 compcert.common.Memtype MEM Cur constr
R9886:9888 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9883:9885 compcert.common.Memtype <> ofs var
R9889:9898 compcert.common.Memdata <> size_chunk def
R9900:9904 compcert.common.Memtype <> chunk var
R9878:9880 compcert.common.Memtype <> ofs var
R9876:9876 compcert.common.Memtype <> b var
R9874:9874 compcert.common.Memtype <> m var
R9918:9918 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R9936:9938 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R9942:9942 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R9919:9929 compcert.common.Memdata <> align_chunk def
R9931:9935 compcert.common.Memtype <> chunk var
R9939:9941 compcert.common.Memtype <> ofs var
ax 9952:9971 MEM valid_access_implies
R10035:10038 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10055:10060 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10061:10072 compcert.common.Memtype MEM valid_access def
R10088:10089 compcert.common.Memtype <> p2 var
R10084:10086 compcert.common.Memtype <> ofs var
R10082:10082 compcert.common.Memtype <> b var
R10076:10080 compcert.common.Memtype <> chunk var
R10074:10074 compcert.common.Memtype <> m var
R10039:10048 compcert.common.Memtype MEM perm_order ind
R10053:10054 compcert.common.Memtype <> p2 var
R10050:10051 compcert.common.Memtype <> p1 var
R10006:10017 compcert.common.Memtype MEM valid_access def
R10033:10034 compcert.common.Memtype <> p1 var
R10029:10031 compcert.common.Memtype <> ofs var
R10027:10027 compcert.common.Memtype <> b var
R10021:10025 compcert.common.Memtype <> chunk var
R10019:10019 compcert.common.Memtype <> m var
ax 10099:10122 MEM valid_access_valid_block
R10186:10191 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10192:10202 compcert.common.Memtype MEM valid_block def
R10206:10206 compcert.common.Memtype <> b var
R10204:10204 compcert.common.Memtype <> m var
R10151:10162 compcert.common.Memtype MEM valid_access def
R10178:10185 compcert.common.Memtype MEM Nonempty constr
R10174:10176 compcert.common.Memtype <> ofs var
R10172:10172 compcert.common.Memtype <> b var
R10166:10170 compcert.common.Memtype <> chunk var
R10164:10164 compcert.common.Memtype <> m var
ax 10216:10232 MEM valid_access_perm
R10293:10298 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10299:10302 compcert.common.Memtype MEM perm defax
R10314:10314 compcert.common.Memtype <> p var
R10312:10312 compcert.common.Memtype <> k var
R10308:10310 compcert.common.Memtype <> ofs var
R10306:10306 compcert.common.Memtype <> b var
R10304:10304 compcert.common.Memtype <> m var
R10265:10276 compcert.common.Memtype MEM valid_access def
R10292:10292 compcert.common.Memtype <> p var
R10288:10290 compcert.common.Memtype <> ofs var
R10286:10286 compcert.common.Memtype <> b var
R10280:10284 compcert.common.Memtype <> chunk var
R10278:10278 compcert.common.Memtype <> m var
ax 10448:10460 MEM valid_pointer
R10474:10476 compcert.common.Memtype MEM mem defax
R10483:10487 compcert.common.Values <> block def
R10496:10496 Coq.Numbers.BinNums <> Z ind
R10500:10503 Coq.Init.Datatypes <> bool ind
ax 10513:10539 MEM valid_pointer_nonempty_perm
R10590:10594 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10583:10585 Coq.Init.Logic <> :type_scope:x_'='_x not
R10562:10574 compcert.common.Memtype MEM valid_pointer defax
R10580:10582 compcert.common.Memtype <> ofs var
R10578:10578 compcert.common.Memtype <> b var
R10576:10576 compcert.common.Memtype <> m var
R10586:10589 Coq.Init.Datatypes <> true constr
R10595:10598 compcert.common.Memtype MEM perm defax
R10612:10619 compcert.common.Memtype MEM Nonempty constr
R10608:10610 compcert.common.Memtype MEM Cur constr
R10604:10606 compcert.common.Memtype <> ofs var
R10602:10602 compcert.common.Memtype <> b var
R10600:10600 compcert.common.Memtype <> m var
ax 10628:10653 MEM valid_pointer_valid_access
R10704:10708 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10697:10699 Coq.Init.Logic <> :type_scope:x_'='_x not
R10676:10688 compcert.common.Memtype MEM valid_pointer defax
R10694:10696 compcert.common.Memtype <> ofs var
R10692:10692 compcert.common.Memtype <> b var
R10690:10690 compcert.common.Memtype <> m var
R10700:10703 Coq.Init.Datatypes <> true constr
R10709:10720 compcert.common.Memtype MEM valid_access def
R10744:10751 compcert.common.Memtype MEM Nonempty constr
R10740:10742 compcert.common.Memtype <> ofs var
R10738:10738 compcert.common.Memtype <> b var
R10724:10736 compcert.common.AST <> Mint8unsigned constr
R10722:10722 compcert.common.Memtype <> m var
def 11051:11068 MEM weak_valid_pointer
R11074:11076 compcert.common.Memtype MEM mem defax
R11083:11087 compcert.common.Values <> block def
R11096:11096 Coq.Numbers.BinNums <> Z ind
R11125:11128 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R11104:11116 compcert.common.Memtype MEM valid_pointer defax
R11122:11124 compcert.common.Memtype <> ofs var
R11120:11120 compcert.common.Memtype <> b var
R11118:11118 compcert.common.Memtype <> m var
R11129:11141 compcert.common.Memtype MEM valid_pointer defax
R11151:11153 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R11148:11150 compcert.common.Memtype <> ofs var
R11145:11145 compcert.common.Memtype <> b var
R11143:11143 compcert.common.Memtype <> m var
ax 11165:11187 MEM weak_valid_pointer_spec
R11243:11251 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11236:11238 Coq.Init.Logic <> :type_scope:x_'='_x not
R11210:11227 compcert.common.Memtype MEM weak_valid_pointer def
R11233:11235 compcert.common.Memtype <> ofs var
R11231:11231 compcert.common.Memtype <> b var
R11229:11229 compcert.common.Memtype <> m var
R11239:11242 Coq.Init.Datatypes <> true constr
R11280:11283 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11273:11275 Coq.Init.Logic <> :type_scope:x_'='_x not
R11252:11264 compcert.common.Memtype MEM valid_pointer defax
R11270:11272 compcert.common.Memtype <> ofs var
R11268:11268 compcert.common.Memtype <> b var
R11266:11266 compcert.common.Memtype <> m var
R11276:11279 Coq.Init.Datatypes <> true constr
R11311:11313 Coq.Init.Logic <> :type_scope:x_'='_x not
R11284:11296 compcert.common.Memtype MEM valid_pointer defax
R11306:11308 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R11303:11305 compcert.common.Memtype <> ofs var
R11300:11300 compcert.common.Memtype <> b var
R11298:11298 compcert.common.Memtype <> m var
R11314:11317 Coq.Init.Datatypes <> true constr
ax 11326:11346 MEM valid_pointer_implies
R11397:11400 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11427:11429 Coq.Init.Logic <> :type_scope:x_'='_x not
R11401:11418 compcert.common.Memtype MEM weak_valid_pointer def
R11424:11426 compcert.common.Memtype <> ofs var
R11422:11422 compcert.common.Memtype <> b var
R11420:11420 compcert.common.Memtype <> m var
R11430:11433 Coq.Init.Datatypes <> true constr
R11390:11392 Coq.Init.Logic <> :type_scope:x_'='_x not
R11369:11381 compcert.common.Memtype MEM valid_pointer defax
R11387:11389 compcert.common.Memtype <> ofs var
R11385:11385 compcert.common.Memtype <> b var
R11383:11383 compcert.common.Memtype <> m var
R11393:11396 Coq.Init.Datatypes <> true constr
ax 11540:11554 MEM nextblock_empty
R11572:11574 Coq.Init.Logic <> :type_scope:x_'='_x not
R11557:11565 compcert.common.Memtype MEM nextblock defax
R11567:11571 compcert.common.Memtype MEM empty defax
ax 11593:11602 MEM perm_empty
R11623:11623 Coq.Init.Logic <> :type_scope:'~'_x not
R11624:11627 compcert.common.Memtype MEM perm defax
R11643:11643 compcert.common.Memtype <> p var
R11641:11641 compcert.common.Memtype <> k var
R11637:11639 compcert.common.Memtype <> ofs var
R11635:11635 compcert.common.Memtype <> b var
R11629:11633 compcert.common.Memtype MEM empty defax
ax 11652:11669 MEM valid_access_empty
R11696:11696 Coq.Init.Logic <> :type_scope:'~'_x not
R11697:11708 compcert.common.Memtype MEM valid_access def
R11728:11728 compcert.common.Memtype <> p var
R11724:11726 compcert.common.Memtype <> ofs var
R11722:11722 compcert.common.Memtype <> b var
R11716:11720 compcert.common.Memtype <> chunk var
R11710:11714 compcert.common.Memtype MEM empty defax
ax 11841:11857 MEM valid_access_load
R11921:11926 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11927:11933 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11935:11936 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11955:11957 Coq.Init.Logic <> :type_scope:x_'='_x not
R11937:11940 compcert.common.Memtype MEM load defax
R11952:11954 compcert.common.Memtype <> ofs var
R11950:11950 compcert.common.Memtype <> b var
R11948:11948 compcert.common.Memtype <> m var
R11942:11946 compcert.common.Memtype <> chunk var
R11958:11961 Coq.Init.Datatypes <> Some constr
R11963:11963 compcert.common.Memtype <> v var
R11886:11897 compcert.common.Memtype MEM valid_access def
R11913:11920 compcert.common.Memtype MEM Readable constr
R11909:11911 compcert.common.Memtype <> ofs var
R11907:11907 compcert.common.Memtype <> b var
R11901:11905 compcert.common.Memtype <> chunk var
R11899:11899 compcert.common.Memtype <> m var
ax 11972:11988 MEM load_valid_access
R12046:12051 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12052:12063 compcert.common.Memtype MEM valid_access def
R12079:12086 compcert.common.Memtype MEM Readable constr
R12075:12077 compcert.common.Memtype <> ofs var
R12073:12073 compcert.common.Memtype <> b var
R12067:12071 compcert.common.Memtype <> chunk var
R12065:12065 compcert.common.Memtype <> m var
R12037:12039 Coq.Init.Logic <> :type_scope:x_'='_x not
R12019:12022 compcert.common.Memtype MEM load defax
R12034:12036 compcert.common.Memtype <> ofs var
R12032:12032 compcert.common.Memtype <> b var
R12030:12030 compcert.common.Memtype <> m var
R12024:12028 compcert.common.Memtype <> chunk var
R12040:12043 Coq.Init.Datatypes <> Some constr
R12045:12045 compcert.common.Memtype <> v var
ax 12284:12292 MEM load_type
R12350:12355 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12356:12367 compcert.common.Values Val has_type def
R12372:12384 compcert.common.AST <> type_of_chunk def
R12386:12390 compcert.common.Memtype <> chunk var
R12369:12369 compcert.common.Memtype <> v var
R12341:12343 Coq.Init.Logic <> :type_scope:x_'='_x not
R12323:12326 compcert.common.Memtype MEM load defax
R12338:12340 compcert.common.Memtype <> ofs var
R12336:12336 compcert.common.Memtype <> b var
R12334:12334 compcert.common.Memtype <> m var
R12328:12332 compcert.common.Memtype <> chunk var
R12344:12347 Coq.Init.Datatypes <> Some constr
R12349:12349 compcert.common.Memtype <> v var
ax 12517:12525 MEM load_cast
R12583:12588 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12595:12599 compcert.common.Memtype <> chunk var
R12610:12620 compcert.common.AST <> Mint8signed constr
R12626:12628 Coq.Init.Logic <> :type_scope:x_'='_x not
R12625:12625 compcert.common.Memtype <> v var
R12629:12640 compcert.common.Values Val sign_ext def
R12644:12644 compcert.common.Memtype <> v var
R12650:12662 compcert.common.AST <> Mint8unsigned constr
R12668:12670 Coq.Init.Logic <> :type_scope:x_'='_x not
R12667:12667 compcert.common.Memtype <> v var
R12671:12682 compcert.common.Values Val zero_ext def
R12686:12686 compcert.common.Memtype <> v var
R12692:12703 compcert.common.AST <> Mint16signed constr
R12709:12711 Coq.Init.Logic <> :type_scope:x_'='_x not
R12708:12708 compcert.common.Memtype <> v var
R12712:12723 compcert.common.Values Val sign_ext def
R12728:12728 compcert.common.Memtype <> v var
R12734:12747 compcert.common.AST <> Mint16unsigned constr
R12753:12755 Coq.Init.Logic <> :type_scope:x_'='_x not
R12752:12752 compcert.common.Memtype <> v var
R12756:12767 compcert.common.Values Val zero_ext def
R12772:12772 compcert.common.Memtype <> v var
R12783:12786 Coq.Init.Logic <> True ind
R12574:12576 Coq.Init.Logic <> :type_scope:x_'='_x not
R12556:12559 compcert.common.Memtype MEM load defax
R12571:12573 compcert.common.Memtype <> ofs var
R12569:12569 compcert.common.Memtype <> b var
R12567:12567 compcert.common.Memtype <> m var
R12561:12565 compcert.common.Memtype <> chunk var
R12577:12580 Coq.Init.Datatypes <> Some constr
R12582:12582 compcert.common.Memtype <> v var
ax 12802:12826 MEM load_int8_signed_unsigned
R12873:12875 Coq.Init.Logic <> :type_scope:x_'='_x not
R12849:12852 compcert.common.Memtype MEM load defax
R12870:12872 compcert.common.Memtype <> ofs var
R12868:12868 compcert.common.Memtype <> b var
R12866:12866 compcert.common.Memtype <> m var
R12854:12864 compcert.common.AST <> Mint8signed constr
R12876:12885 compcert.lib.Coqlib <> option_map def
R12905:12908 compcert.common.Memtype MEM load defax
R12928:12930 compcert.common.Memtype <> ofs var
R12926:12926 compcert.common.Memtype <> b var
R12924:12924 compcert.common.Memtype <> m var
R12910:12922 compcert.common.AST <> Mint8unsigned constr
R12888:12899 compcert.common.Values Val sign_ext def
ax 12941:12966 MEM load_int16_signed_unsigned
R13014:13016 Coq.Init.Logic <> :type_scope:x_'='_x not
R12989:12992 compcert.common.Memtype MEM load defax
R13011:13013 compcert.common.Memtype <> ofs var
R13009:13009 compcert.common.Memtype <> b var
R13007:13007 compcert.common.Memtype <> m var
R12994:13005 compcert.common.AST <> Mint16signed constr
R13017:13026 compcert.lib.Coqlib <> option_map def
R13047:13050 compcert.common.Memtype MEM load defax
R13071:13073 compcert.common.Memtype <> ofs var
R13069:13069 compcert.common.Memtype <> b var
R13067:13067 compcert.common.Memtype <> m var
R13052:13065 compcert.common.AST <> Mint16unsigned constr
R13029:13040 compcert.common.Values Val sign_ext def
ax 13225:13244 MEM range_perm_loadbytes
R13314:13319 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13320:13326 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R13332:13333 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R13355:13357 Coq.Init.Logic <> :type_scope:x_'='_x not
R13334:13342 compcert.common.Memtype MEM loadbytes defax
R13352:13354 compcert.common.Memtype <> len var
R13348:13350 compcert.common.Memtype <> ofs var
R13346:13346 compcert.common.Memtype <> b var
R13344:13344 compcert.common.Memtype <> m var
R13358:13361 Coq.Init.Datatypes <> Some constr
R13363:13367 compcert.common.Memtype <> bytes var
R13271:13280 compcert.common.Memtype MEM range_perm def
R13306:13313 compcert.common.Memtype MEM Readable constr
R13302:13304 compcert.common.Memtype MEM Cur constr
R13294:13296 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R13291:13293 compcert.common.Memtype <> ofs var
R13297:13299 compcert.common.Memtype <> len var
R13286:13288 compcert.common.Memtype <> ofs var
R13284:13284 compcert.common.Memtype <> b var
R13282:13282 compcert.common.Memtype <> m var
ax 13376:13395 MEM loadbytes_range_perm
R13462:13467 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13468:13477 compcert.common.Memtype MEM range_perm def
R13503:13510 compcert.common.Memtype MEM Readable constr
R13499:13501 compcert.common.Memtype MEM Cur constr
R13491:13493 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R13488:13490 compcert.common.Memtype <> ofs var
R13494:13496 compcert.common.Memtype <> len var
R13483:13485 compcert.common.Memtype <> ofs var
R13481:13481 compcert.common.Memtype <> b var
R13479:13479 compcert.common.Memtype <> m var
R13449:13451 Coq.Init.Logic <> :type_scope:x_'='_x not
R13428:13436 compcert.common.Memtype MEM loadbytes defax
R13446:13448 compcert.common.Memtype <> len var
R13442:13444 compcert.common.Memtype <> ofs var
R13440:13440 compcert.common.Memtype <> b var
R13438:13438 compcert.common.Memtype <> m var
R13452:13455 Coq.Init.Datatypes <> Some constr
R13457:13461 compcert.common.Memtype <> bytes var
ax 13663:13676 MEM loadbytes_load
R13760:13765 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13791:13796 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13815:13817 Coq.Init.Logic <> :type_scope:x_'='_x not
R13797:13800 compcert.common.Memtype MEM load defax
R13812:13814 compcert.common.Memtype <> ofs var
R13810:13810 compcert.common.Memtype <> b var
R13808:13808 compcert.common.Memtype <> m var
R13802:13806 compcert.common.Memtype <> chunk var
R13818:13821 Coq.Init.Datatypes <> Some constr
R13823:13832 compcert.common.Memdata <> decode_val def
R13840:13844 compcert.common.Memtype <> bytes var
R13834:13838 compcert.common.Memtype <> chunk var
R13766:13766 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R13784:13786 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R13790:13790 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R13767:13777 compcert.common.Memdata <> align_chunk def
R13779:13783 compcert.common.Memtype <> chunk var
R13787:13789 compcert.common.Memtype <> ofs var
R13747:13749 Coq.Init.Logic <> :type_scope:x_'='_x not
R13711:13719 compcert.common.Memtype MEM loadbytes defax
R13730:13739 compcert.common.Memdata <> size_chunk def
R13741:13745 compcert.common.Memtype <> chunk var
R13725:13727 compcert.common.Memtype <> ofs var
R13723:13723 compcert.common.Memtype <> b var
R13721:13721 compcert.common.Memtype <> m var
R13750:13753 Coq.Init.Datatypes <> Some constr
R13755:13759 compcert.common.Memtype <> bytes var
ax 14013:14026 MEM load_loadbytes
R14084:14089 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14090:14096 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14102:14103 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14153:14169 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14140:14142 Coq.Init.Logic <> :type_scope:x_'='_x not
R14104:14112 compcert.common.Memtype MEM loadbytes defax
R14123:14132 compcert.common.Memdata <> size_chunk def
R14134:14138 compcert.common.Memtype <> chunk var
R14118:14120 compcert.common.Memtype <> ofs var
R14116:14116 compcert.common.Memtype <> b var
R14114:14114 compcert.common.Memtype <> m var
R14143:14146 Coq.Init.Datatypes <> Some constr
R14148:14152 compcert.common.Memtype <> bytes var
R14171:14173 Coq.Init.Logic <> :type_scope:x_'='_x not
R14170:14170 compcert.common.Memtype <> v var
R14174:14183 compcert.common.Memdata <> decode_val def
R14191:14195 compcert.common.Memtype <> bytes var
R14185:14189 compcert.common.Memtype <> chunk var
R14075:14077 Coq.Init.Logic <> :type_scope:x_'='_x not
R14057:14060 compcert.common.Memtype MEM load defax
R14072:14074 compcert.common.Memtype <> ofs var
R14070:14070 compcert.common.Memtype <> b var
R14068:14068 compcert.common.Memtype <> m var
R14062:14066 compcert.common.Memtype <> chunk var
R14078:14081 Coq.Init.Datatypes <> Some constr
R14083:14083 compcert.common.Memtype <> v var
ax 14281:14296 MEM loadbytes_length
R14359:14364 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14377:14379 Coq.Init.Logic <> :type_scope:x_'='_x not
R14365:14370 Coq.Init.Datatypes <> length def
R14372:14376 compcert.common.Memtype <> bytes var
R14380:14387 compcert.lib.Coqlib <> nat_of_Z def
R14389:14389 compcert.common.Memtype <> n var
R14346:14348 Coq.Init.Logic <> :type_scope:x_'='_x not
R14327:14335 compcert.common.Memtype MEM loadbytes defax
R14345:14345 compcert.common.Memtype <> n var
R14341:14343 compcert.common.Memtype <> ofs var
R14339:14339 compcert.common.Memtype <> b var
R14337:14337 compcert.common.Memtype <> m var
R14349:14352 Coq.Init.Datatypes <> Some constr
R14354:14358 compcert.common.Memtype <> bytes var
ax 14399:14413 MEM loadbytes_empty
R14444:14447 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14467:14469 Coq.Init.Logic <> :type_scope:x_'='_x not
R14448:14456 compcert.common.Memtype MEM loadbytes defax
R14466:14466 compcert.common.Memtype <> n var
R14462:14464 compcert.common.Memtype <> ofs var
R14460:14460 compcert.common.Memtype <> b var
R14458:14458 compcert.common.Memtype <> m var
R14470:14473 Coq.Init.Datatypes <> Some constr
R14475:14477 Coq.Init.Datatypes <> nil constr
R14439:14442 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R14438:14438 compcert.common.Memtype <> n var
ax 14565:14580 MEM loadbytes_concat
R14657:14662 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14704:14709 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14717:14720 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14728:14733 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14761:14763 Coq.Init.Logic <> :type_scope:x_'='_x not
R14734:14742 compcert.common.Memtype MEM loadbytes defax
R14755:14757 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14753:14754 compcert.common.Memtype <> n1 var
R14758:14759 compcert.common.Memtype <> n2 var
R14748:14750 compcert.common.Memtype <> ofs var
R14746:14746 compcert.common.Memtype <> b var
R14744:14744 compcert.common.Memtype <> m var
R14764:14767 Coq.Init.Datatypes <> Some constr
R14775:14778 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14769:14774 compcert.common.Memtype <> bytes1 var
R14779:14784 compcert.common.Memtype <> bytes2 var
R14723:14726 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R14721:14722 compcert.common.Memtype <> n2 var
R14712:14715 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R14710:14711 compcert.common.Memtype <> n1 var
R14690:14692 Coq.Init.Logic <> :type_scope:x_'='_x not
R14663:14671 compcert.common.Memtype MEM loadbytes defax
R14688:14689 compcert.common.Memtype <> n2 var
R14681:14683 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14678:14680 compcert.common.Memtype <> ofs var
R14684:14685 compcert.common.Memtype <> n1 var
R14675:14675 compcert.common.Memtype <> b var
R14673:14673 compcert.common.Memtype <> m var
R14693:14696 Coq.Init.Datatypes <> Some constr
R14698:14703 compcert.common.Memtype <> bytes2 var
R14643:14645 Coq.Init.Logic <> :type_scope:x_'='_x not
R14623:14631 compcert.common.Memtype MEM loadbytes defax
R14641:14642 compcert.common.Memtype <> n1 var
R14637:14639 compcert.common.Memtype <> ofs var
R14635:14635 compcert.common.Memtype <> b var
R14633:14633 compcert.common.Memtype <> m var
R14646:14649 Coq.Init.Datatypes <> Some constr
R14651:14656 compcert.common.Memtype <> bytes1 var
ax 14794:14808 MEM loadbytes_split
R14883:14888 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14896:14899 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14907:14912 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14913:14919 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14926:14927 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14928:14934 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14941:14947 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14982:14987 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14968:14970 Coq.Init.Logic <> :type_scope:x_'='_x not
R14948:14956 compcert.common.Memtype MEM loadbytes defax
R14966:14967 compcert.common.Memtype <> n1 var
R14962:14964 compcert.common.Memtype <> ofs var
R14960:14960 compcert.common.Memtype <> b var
R14958:14958 compcert.common.Memtype <> m var
R14971:14974 Coq.Init.Datatypes <> Some constr
R14976:14981 compcert.common.Memtype <> bytes1 var
R15029:15034 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15015:15017 Coq.Init.Logic <> :type_scope:x_'='_x not
R14988:14996 compcert.common.Memtype MEM loadbytes defax
R15013:15014 compcert.common.Memtype <> n2 var
R15006:15008 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15003:15005 compcert.common.Memtype <> ofs var
R15009:15010 compcert.common.Memtype <> n1 var
R15000:15000 compcert.common.Memtype <> b var
R14998:14998 compcert.common.Memtype <> m var
R15018:15021 Coq.Init.Datatypes <> Some constr
R15023:15028 compcert.common.Memtype <> bytes2 var
R15040:15042 Coq.Init.Logic <> :type_scope:x_'='_x not
R15035:15039 compcert.common.Memtype <> bytes var
R15049:15052 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R15043:15048 compcert.common.Memtype <> bytes1 var
R15053:15058 compcert.common.Memtype <> bytes2 var
R14902:14905 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R14900:14901 compcert.common.Memtype <> n2 var
R14891:14894 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R14889:14890 compcert.common.Memtype <> n1 var
R14870:14872 Coq.Init.Logic <> :type_scope:x_'='_x not
R14843:14851 compcert.common.Memtype MEM loadbytes defax
R14864:14866 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14862:14863 compcert.common.Memtype <> n1 var
R14867:14868 compcert.common.Memtype <> n2 var
R14857:14859 compcert.common.Memtype <> ofs var
R14855:14855 compcert.common.Memtype <> b var
R14853:14853 compcert.common.Memtype <> m var
R14873:14876 Coq.Init.Datatypes <> Some constr
R14878:14882 compcert.common.Memtype <> bytes var
ax 15281:15295 MEM nextblock_store
R15360:15365 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15378:15380 Coq.Init.Logic <> :type_scope:x_'='_x not
R15366:15374 compcert.common.Memtype MEM nextblock defax
R15376:15377 compcert.common.Memtype <> m2 var
R15381:15389 compcert.common.Memtype MEM nextblock defax
R15391:15392 compcert.common.Memtype <> m1 var
R15350:15352 Coq.Init.Logic <> :type_scope:x_'='_x not
R15328:15332 compcert.common.Memtype MEM store defax
R15349:15349 compcert.common.Memtype <> v var
R15345:15347 compcert.common.Memtype <> ofs var
R15343:15343 compcert.common.Memtype <> b var
R15340:15341 compcert.common.Memtype <> m1 var
R15334:15338 compcert.common.Memtype <> chunk var
R15353:15356 Coq.Init.Datatypes <> Some constr
R15358:15359 compcert.common.Memtype <> m2 var
ax 15401:15419 MEM store_valid_block_1
R15484:15489 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15518:15521 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15522:15532 compcert.common.Memtype MEM valid_block def
R15537:15538 compcert.common.Memtype <> b' var
R15534:15535 compcert.common.Memtype <> m2 var
R15501:15511 compcert.common.Memtype MEM valid_block def
R15516:15517 compcert.common.Memtype <> b' var
R15513:15514 compcert.common.Memtype <> m1 var
R15474:15476 Coq.Init.Logic <> :type_scope:x_'='_x not
R15452:15456 compcert.common.Memtype MEM store defax
R15473:15473 compcert.common.Memtype <> v var
R15469:15471 compcert.common.Memtype <> ofs var
R15467:15467 compcert.common.Memtype <> b var
R15464:15465 compcert.common.Memtype <> m1 var
R15458:15462 compcert.common.Memtype <> chunk var
R15477:15480 Coq.Init.Datatypes <> Some constr
R15482:15483 compcert.common.Memtype <> m2 var
ax 15547:15565 MEM store_valid_block_2
R15630:15635 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15664:15667 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15668:15678 compcert.common.Memtype MEM valid_block def
R15683:15684 compcert.common.Memtype <> b' var
R15680:15681 compcert.common.Memtype <> m1 var
R15647:15657 compcert.common.Memtype MEM valid_block def
R15662:15663 compcert.common.Memtype <> b' var
R15659:15660 compcert.common.Memtype <> m2 var
R15620:15622 Coq.Init.Logic <> :type_scope:x_'='_x not
R15598:15602 compcert.common.Memtype MEM store defax
R15619:15619 compcert.common.Memtype <> v var
R15615:15617 compcert.common.Memtype <> ofs var
R15613:15613 compcert.common.Memtype <> b var
R15610:15611 compcert.common.Memtype <> m1 var
R15604:15608 compcert.common.Memtype <> chunk var
R15623:15626 Coq.Init.Datatypes <> Some constr
R15628:15629 compcert.common.Memtype <> m2 var
ax 15694:15705 MEM perm_store_1
R15770:15775 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15815:15818 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15819:15822 compcert.common.Memtype MEM perm defax
R15837:15837 compcert.common.Memtype <> p var
R15835:15835 compcert.common.Memtype <> k var
R15830:15833 compcert.common.Memtype <> ofs' var
R15827:15828 compcert.common.Memtype <> b' var
R15824:15825 compcert.common.Memtype <> m2 var
R15796:15799 compcert.common.Memtype MEM perm defax
R15814:15814 compcert.common.Memtype <> p var
R15812:15812 compcert.common.Memtype <> k var
R15807:15810 compcert.common.Memtype <> ofs' var
R15804:15805 compcert.common.Memtype <> b' var
R15801:15802 compcert.common.Memtype <> m1 var
R15760:15762 Coq.Init.Logic <> :type_scope:x_'='_x not
R15738:15742 compcert.common.Memtype MEM store defax
R15759:15759 compcert.common.Memtype <> v var
R15755:15757 compcert.common.Memtype <> ofs var
R15753:15753 compcert.common.Memtype <> b var
R15750:15751 compcert.common.Memtype <> m1 var
R15744:15748 compcert.common.Memtype <> chunk var
R15763:15766 Coq.Init.Datatypes <> Some constr
R15768:15769 compcert.common.Memtype <> m2 var
ax 15846:15857 MEM perm_store_2
R15922:15927 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15967:15970 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15971:15974 compcert.common.Memtype MEM perm defax
R15989:15989 compcert.common.Memtype <> p var
R15987:15987 compcert.common.Memtype <> k var
R15982:15985 compcert.common.Memtype <> ofs' var
R15979:15980 compcert.common.Memtype <> b' var
R15976:15977 compcert.common.Memtype <> m1 var
R15948:15951 compcert.common.Memtype MEM perm defax
R15966:15966 compcert.common.Memtype <> p var
R15964:15964 compcert.common.Memtype <> k var
R15959:15962 compcert.common.Memtype <> ofs' var
R15956:15957 compcert.common.Memtype <> b' var
R15953:15954 compcert.common.Memtype <> m2 var
R15912:15914 Coq.Init.Logic <> :type_scope:x_'='_x not
R15890:15894 compcert.common.Memtype MEM store defax
R15911:15911 compcert.common.Memtype <> v var
R15907:15909 compcert.common.Memtype <> ofs var
R15905:15905 compcert.common.Memtype <> b var
R15902:15903 compcert.common.Memtype <> m1 var
R15896:15900 compcert.common.Memtype <> chunk var
R15915:15918 Coq.Init.Datatypes <> Some constr
R15920:15921 compcert.common.Memtype <> m2 var
ax 15999:16016 MEM valid_access_store
R16084:16089 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16090:16091 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R16094:16095 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R16099:16101 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R16134:16135 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R16096:16098 compcert.common.Memtype MEM mem defax
R16124:16126 Coq.Init.Logic <> :type_scope:x_'='_x not
R16102:16106 compcert.common.Memtype MEM store defax
R16123:16123 compcert.common.Memtype <> v var
R16119:16121 compcert.common.Memtype <> ofs var
R16117:16117 compcert.common.Memtype <> b var
R16114:16115 compcert.common.Memtype <> m1 var
R16108:16112 compcert.common.Memtype <> chunk var
R16127:16130 Coq.Init.Datatypes <> Some constr
R16048:16059 compcert.common.Memtype MEM valid_access def
R16076:16083 compcert.common.Memtype MEM Writable constr
R16072:16074 compcert.common.Memtype <> ofs var
R16070:16070 compcert.common.Memtype <> b var
R16064:16068 compcert.common.Memtype <> chunk var
R16061:16062 compcert.common.Memtype <> m1 var
ax 16144:16163 MEM store_valid_access_1
R16228:16233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16293:16296 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16297:16308 compcert.common.Memtype MEM valid_access def
R16328:16328 compcert.common.Memtype <> p var
R16323:16326 compcert.common.Memtype <> ofs' var
R16320:16321 compcert.common.Memtype <> b' var
R16313:16318 compcert.common.Memtype <> chunk' var
R16310:16311 compcert.common.Memtype <> m2 var
R16261:16272 compcert.common.Memtype MEM valid_access def
R16292:16292 compcert.common.Memtype <> p var
R16287:16290 compcert.common.Memtype <> ofs' var
R16284:16285 compcert.common.Memtype <> b' var
R16277:16282 compcert.common.Memtype <> chunk' var
R16274:16275 compcert.common.Memtype <> m1 var
R16218:16220 Coq.Init.Logic <> :type_scope:x_'='_x not
R16196:16200 compcert.common.Memtype MEM store defax
R16217:16217 compcert.common.Memtype <> v var
R16213:16215 compcert.common.Memtype <> ofs var
R16211:16211 compcert.common.Memtype <> b var
R16208:16209 compcert.common.Memtype <> m1 var
R16202:16206 compcert.common.Memtype <> chunk var
R16221:16224 Coq.Init.Datatypes <> Some constr
R16226:16227 compcert.common.Memtype <> m2 var
ax 16337:16356 MEM store_valid_access_2
R16421:16426 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16486:16489 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16490:16501 compcert.common.Memtype MEM valid_access def
R16521:16521 compcert.common.Memtype <> p var
R16516:16519 compcert.common.Memtype <> ofs' var
R16513:16514 compcert.common.Memtype <> b' var
R16506:16511 compcert.common.Memtype <> chunk' var
R16503:16504 compcert.common.Memtype <> m1 var
R16454:16465 compcert.common.Memtype MEM valid_access def
R16485:16485 compcert.common.Memtype <> p var
R16480:16483 compcert.common.Memtype <> ofs' var
R16477:16478 compcert.common.Memtype <> b' var
R16470:16475 compcert.common.Memtype <> chunk' var
R16467:16468 compcert.common.Memtype <> m2 var
R16411:16413 Coq.Init.Logic <> :type_scope:x_'='_x not
R16389:16393 compcert.common.Memtype MEM store defax
R16410:16410 compcert.common.Memtype <> v var
R16406:16408 compcert.common.Memtype <> ofs var
R16404:16404 compcert.common.Memtype <> b var
R16401:16402 compcert.common.Memtype <> m1 var
R16395:16399 compcert.common.Memtype <> chunk var
R16414:16417 Coq.Init.Datatypes <> Some constr
R16419:16420 compcert.common.Memtype <> m2 var
ax 16530:16549 MEM store_valid_access_3
R16614:16619 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16620:16631 compcert.common.Memtype MEM valid_access def
R16648:16655 compcert.common.Memtype MEM Writable constr
R16644:16646 compcert.common.Memtype <> ofs var
R16642:16642 compcert.common.Memtype <> b var
R16636:16640 compcert.common.Memtype <> chunk var
R16633:16634 compcert.common.Memtype <> m1 var
R16604:16606 Coq.Init.Logic <> :type_scope:x_'='_x not
R16582:16586 compcert.common.Memtype MEM store defax
R16603:16603 compcert.common.Memtype <> v var
R16599:16601 compcert.common.Memtype <> ofs var
R16597:16597 compcert.common.Memtype <> b var
R16594:16595 compcert.common.Memtype <> m1 var
R16588:16592 compcert.common.Memtype <> chunk var
R16607:16610 Coq.Init.Datatypes <> Some constr
R16612:16613 compcert.common.Memtype <> m2 var
ax 16696:16713 MEM load_store_similar
R16778:16783 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16837:16842 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16882:16887 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16888:16894 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16897:16898 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16929:16932 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16919:16921 Coq.Init.Logic <> :type_scope:x_'='_x not
R16899:16902 compcert.common.Memtype MEM load defax
R16916:16918 compcert.common.Memtype <> ofs var
R16914:16914 compcert.common.Memtype <> b var
R16911:16912 compcert.common.Memtype <> m2 var
R16904:16909 compcert.common.Memtype <> chunk' var
R16922:16925 Coq.Init.Datatypes <> Some constr
R16927:16928 compcert.common.Memtype <> v' var
R16933:16949 compcert.common.Memdata <> decode_encode_val def
R16966:16967 compcert.common.Memtype <> v' var
R16959:16964 compcert.common.Memtype <> chunk' var
R16953:16957 compcert.common.Memtype <> chunk var
R16951:16951 compcert.common.Memtype <> v var
R16861:16864 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R16843:16853 compcert.common.Memdata <> align_chunk def
R16855:16860 compcert.common.Memtype <> chunk' var
R16865:16875 compcert.common.Memdata <> align_chunk def
R16877:16881 compcert.common.Memtype <> chunk var
R16818:16820 Coq.Init.Logic <> :type_scope:x_'='_x not
R16801:16810 compcert.common.Memdata <> size_chunk def
R16812:16817 compcert.common.Memtype <> chunk' var
R16821:16830 compcert.common.Memdata <> size_chunk def
R16832:16836 compcert.common.Memtype <> chunk var
R16768:16770 Coq.Init.Logic <> :type_scope:x_'='_x not
R16746:16750 compcert.common.Memtype MEM store defax
R16767:16767 compcert.common.Memtype <> v var
R16763:16765 compcert.common.Memtype <> ofs var
R16761:16761 compcert.common.Memtype <> b var
R16758:16759 compcert.common.Memtype <> m1 var
R16752:16756 compcert.common.Memtype <> chunk var
R16771:16774 Coq.Init.Datatypes <> Some constr
R16776:16777 compcert.common.Memtype <> m2 var
ax 16977:16991 MEM load_store_same
R17056:17061 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17081:17083 Coq.Init.Logic <> :type_scope:x_'='_x not
R17062:17065 compcert.common.Memtype MEM load defax
R17078:17080 compcert.common.Memtype <> ofs var
R17076:17076 compcert.common.Memtype <> b var
R17073:17074 compcert.common.Memtype <> m2 var
R17067:17071 compcert.common.Memtype <> chunk var
R17084:17087 Coq.Init.Datatypes <> Some constr
R17090:17104 compcert.common.Values Val load_result def
R17112:17112 compcert.common.Memtype <> v var
R17106:17110 compcert.common.Memtype <> chunk var
R17046:17048 Coq.Init.Logic <> :type_scope:x_'='_x not
R17024:17028 compcert.common.Memtype MEM store defax
R17045:17045 compcert.common.Memtype <> v var
R17041:17043 compcert.common.Memtype <> ofs var
R17039:17039 compcert.common.Memtype <> b var
R17036:17037 compcert.common.Memtype <> m1 var
R17030:17034 compcert.common.Memtype <> chunk var
R17049:17052 Coq.Init.Datatypes <> Some constr
R17054:17055 compcert.common.Memtype <> m2 var
ax 17123:17138 MEM load_store_other
R17203:17208 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17314:17319 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17342:17344 Coq.Init.Logic <> :type_scope:x_'='_x not
R17320:17323 compcert.common.Memtype MEM load defax
R17338:17341 compcert.common.Memtype <> ofs' var
R17335:17336 compcert.common.Memtype <> b' var
R17332:17333 compcert.common.Memtype <> m2 var
R17325:17330 compcert.common.Memtype <> chunk' var
R17345:17348 compcert.common.Memtype MEM load defax
R17363:17366 compcert.common.Memtype <> ofs' var
R17360:17361 compcert.common.Memtype <> b' var
R17357:17358 compcert.common.Memtype <> m1 var
R17350:17355 compcert.common.Memtype <> chunk' var
R17241:17246 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17236:17239 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17234:17235 compcert.common.Memtype <> b' var
R17240:17240 compcert.common.Memtype <> b var
R17278:17283 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17271:17274 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R17251:17253 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17247:17250 compcert.common.Memtype <> ofs' var
R17254:17263 compcert.common.Memdata <> size_chunk def
R17265:17270 compcert.common.Memtype <> chunk' var
R17275:17277 compcert.common.Memtype <> ofs var
R17306:17309 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R17287:17289 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17284:17286 compcert.common.Memtype <> ofs var
R17290:17299 compcert.common.Memdata <> size_chunk def
R17301:17305 compcert.common.Memtype <> chunk var
R17310:17313 compcert.common.Memtype <> ofs' var
R17193:17195 Coq.Init.Logic <> :type_scope:x_'='_x not
R17171:17175 compcert.common.Memtype MEM store defax
R17192:17192 compcert.common.Memtype <> v var
R17188:17190 compcert.common.Memtype <> ofs var
R17186:17186 compcert.common.Memtype <> b var
R17183:17184 compcert.common.Memtype <> m1 var
R17177:17181 compcert.common.Memtype <> chunk var
R17196:17199 Coq.Init.Datatypes <> Some constr
R17201:17202 compcert.common.Memtype <> m2 var
def 17418:17438 MEM compat_pointer_chunks
R17456:17467 compcert.common.AST <> memory_chunk ind
R17496:17501 compcert.common.Memtype <> chunk2 var
R17488:17493 compcert.common.Memtype <> chunk1 var
R17513:17518 compcert.common.AST <> Mint32 constr
R17522:17527 compcert.common.AST <> Many32 constr
R17532:17537 compcert.common.AST <> Mint32 constr
R17541:17546 compcert.common.AST <> Many32 constr
R17552:17555 Coq.Init.Logic <> True ind
R17552:17555 Coq.Init.Logic <> True ind
R17552:17555 Coq.Init.Logic <> True ind
R17552:17555 Coq.Init.Logic <> True ind
R17561:17566 compcert.common.AST <> Many64 constr
R17569:17574 compcert.common.AST <> Many64 constr
R17579:17582 Coq.Init.Logic <> True ind
R17596:17600 Coq.Init.Logic <> False ind
ax 17616:17641 MEM load_store_pointer_overlap
R17741:17746 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17777:17782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17794:17799 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17830:17835 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17865:17870 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17872:17874 Coq.Init.Logic <> :type_scope:x_'='_x not
R17871:17871 compcert.common.Memtype <> v var
R17875:17880 compcert.common.Values <> Vundef constr
R17858:17860 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R17839:17841 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17836:17838 compcert.common.Memtype <> ofs var
R17842:17851 compcert.common.Memdata <> size_chunk def
R17853:17857 compcert.common.Memtype <> chunk var
R17861:17864 compcert.common.Memtype <> ofs' var
R17824:17826 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R17804:17806 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17800:17803 compcert.common.Memtype <> ofs' var
R17807:17816 compcert.common.Memdata <> size_chunk def
R17818:17823 compcert.common.Memtype <> chunk' var
R17827:17829 compcert.common.Memtype <> ofs var
R17787:17790 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17783:17786 compcert.common.Memtype <> ofs' var
R17791:17793 compcert.common.Memtype <> ofs var
R17768:17770 Coq.Init.Logic <> :type_scope:x_'='_x not
R17747:17750 compcert.common.Memtype MEM load defax
R17764:17767 compcert.common.Memtype <> ofs' var
R17762:17762 compcert.common.Memtype <> b var
R17759:17760 compcert.common.Memtype <> m2 var
R17752:17757 compcert.common.Memtype <> chunk' var
R17771:17774 Coq.Init.Datatypes <> Some constr
R17776:17776 compcert.common.Memtype <> v var
R17731:17733 Coq.Init.Logic <> :type_scope:x_'='_x not
R17696:17700 compcert.common.Memtype MEM store defax
R17718:17721 compcert.common.Values <> Vptr constr
R17727:17729 compcert.common.Memtype <> v_o var
R17723:17725 compcert.common.Memtype <> v_b var
R17713:17715 compcert.common.Memtype <> ofs var
R17711:17711 compcert.common.Memtype <> b var
R17708:17709 compcert.common.Memtype <> m1 var
R17702:17706 compcert.common.Memtype <> chunk var
R17734:17737 Coq.Init.Datatypes <> Some constr
R17739:17740 compcert.common.Memtype <> m2 var
ax 17889:17915 MEM load_store_pointer_mismatch
R18010:18015 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18045:18050 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18086:18091 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18093:18095 Coq.Init.Logic <> :type_scope:x_'='_x not
R18092:18092 compcert.common.Memtype <> v var
R18096:18101 compcert.common.Values <> Vundef constr
R18051:18051 Coq.Init.Logic <> :type_scope:'~'_x not
R18052:18072 compcert.common.Memtype MEM compat_pointer_chunks def
R18080:18085 compcert.common.Memtype <> chunk' var
R18074:18078 compcert.common.Memtype <> chunk var
R18036:18038 Coq.Init.Logic <> :type_scope:x_'='_x not
R18016:18019 compcert.common.Memtype MEM load defax
R18033:18035 compcert.common.Memtype <> ofs var
R18031:18031 compcert.common.Memtype <> b var
R18028:18029 compcert.common.Memtype <> m2 var
R18021:18026 compcert.common.Memtype <> chunk' var
R18039:18042 Coq.Init.Datatypes <> Some constr
R18044:18044 compcert.common.Memtype <> v var
R18000:18002 Coq.Init.Logic <> :type_scope:x_'='_x not
R17965:17969 compcert.common.Memtype MEM store defax
R17987:17990 compcert.common.Values <> Vptr constr
R17996:17998 compcert.common.Memtype <> v_o var
R17992:17994 compcert.common.Memtype <> v_b var
R17982:17984 compcert.common.Memtype <> ofs var
R17980:17980 compcert.common.Memtype <> b var
R17977:17978 compcert.common.Memtype <> m1 var
R17971:17975 compcert.common.Memtype <> chunk var
R18003:18006 Coq.Init.Datatypes <> Some constr
R18008:18009 compcert.common.Memtype <> m2 var
ax 18110:18127 MEM load_pointer_store
R18217:18222 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18266:18271 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18272:18272 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18351:18358 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18435:18435 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18289:18292 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18274:18276 Coq.Init.Logic <> :type_scope:x_'='_x not
R18273:18273 compcert.common.Memtype <> v var
R18277:18280 compcert.common.Values <> Vptr constr
R18286:18288 compcert.common.Memtype <> v_o var
R18282:18284 compcert.common.Memtype <> v_b var
R18327:18330 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18293:18313 compcert.common.Memtype MEM compat_pointer_chunks def
R18321:18326 compcert.common.Memtype <> chunk' var
R18315:18319 compcert.common.Memtype <> chunk var
R18337:18340 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18333:18335 Coq.Init.Logic <> :type_scope:x_'='_x not
R18331:18332 compcert.common.Memtype <> b' var
R18336:18336 compcert.common.Memtype <> b var
R18345:18347 Coq.Init.Logic <> :type_scope:x_'='_x not
R18341:18344 compcert.common.Memtype <> ofs' var
R18348:18350 compcert.common.Memtype <> ofs var
R18366:18369 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18361:18364 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R18359:18360 compcert.common.Memtype <> b' var
R18365:18365 compcert.common.Memtype <> b var
R18401:18404 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18394:18397 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18374:18376 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18370:18373 compcert.common.Memtype <> ofs' var
R18377:18386 compcert.common.Memdata <> size_chunk def
R18388:18393 compcert.common.Memtype <> chunk' var
R18398:18400 compcert.common.Memtype <> ofs var
R18427:18430 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18408:18410 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18405:18407 compcert.common.Memtype <> ofs var
R18411:18420 compcert.common.Memdata <> size_chunk def
R18422:18426 compcert.common.Memtype <> chunk var
R18431:18434 compcert.common.Memtype <> ofs' var
R18245:18247 Coq.Init.Logic <> :type_scope:x_'='_x not
R18223:18226 compcert.common.Memtype MEM load defax
R18241:18244 compcert.common.Memtype <> ofs' var
R18238:18239 compcert.common.Memtype <> b' var
R18235:18236 compcert.common.Memtype <> m2 var
R18228:18233 compcert.common.Memtype <> chunk' var
R18248:18251 Coq.Init.Datatypes <> Some constr
R18253:18256 compcert.common.Values <> Vptr constr
R18262:18264 compcert.common.Memtype <> v_o var
R18258:18260 compcert.common.Memtype <> v_b var
R18207:18209 Coq.Init.Logic <> :type_scope:x_'='_x not
R18185:18189 compcert.common.Memtype MEM store defax
R18206:18206 compcert.common.Memtype <> v var
R18202:18204 compcert.common.Memtype <> ofs var
R18200:18200 compcert.common.Memtype <> b var
R18197:18198 compcert.common.Memtype <> m1 var
R18191:18195 compcert.common.Memtype <> chunk var
R18210:18213 Coq.Init.Datatypes <> Some constr
R18215:18216 compcert.common.Memtype <> m2 var
ax 18492:18511 MEM loadbytes_store_same
R18576:18581 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18619:18621 Coq.Init.Logic <> :type_scope:x_'='_x not
R18582:18590 compcert.common.Memtype MEM loadbytes defax
R18602:18611 compcert.common.Memdata <> size_chunk def
R18613:18617 compcert.common.Memtype <> chunk var
R18597:18599 compcert.common.Memtype <> ofs var
R18595:18595 compcert.common.Memtype <> b var
R18592:18593 compcert.common.Memtype <> m2 var
R18622:18625 Coq.Init.Datatypes <> Some constr
R18627:18636 compcert.common.Memdata <> encode_val def
R18644:18644 compcert.common.Memtype <> v var
R18638:18642 compcert.common.Memtype <> chunk var
R18566:18568 Coq.Init.Logic <> :type_scope:x_'='_x not
R18544:18548 compcert.common.Memtype MEM store defax
R18565:18565 compcert.common.Memtype <> v var
R18561:18563 compcert.common.Memtype <> ofs var
R18559:18559 compcert.common.Memtype <> b var
R18556:18557 compcert.common.Memtype <> m1 var
R18550:18554 compcert.common.Memtype <> chunk var
R18569:18572 Coq.Init.Datatypes <> Some constr
R18574:18575 compcert.common.Memtype <> m2 var
ax 18654:18674 MEM loadbytes_store_other
R18739:18744 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18835:18840 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18863:18865 Coq.Init.Logic <> :type_scope:x_'='_x not
R18841:18849 compcert.common.Memtype MEM loadbytes defax
R18862:18862 compcert.common.Memtype <> n var
R18857:18860 compcert.common.Memtype <> ofs' var
R18854:18855 compcert.common.Memtype <> b' var
R18851:18852 compcert.common.Memtype <> m2 var
R18866:18874 compcert.common.Memtype MEM loadbytes defax
R18887:18887 compcert.common.Memtype <> n var
R18882:18885 compcert.common.Memtype <> ofs' var
R18879:18880 compcert.common.Memtype <> b' var
R18876:18877 compcert.common.Memtype <> m1 var
R18772:18775 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18767:18770 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R18765:18766 compcert.common.Memtype <> b' var
R18771:18771 compcert.common.Memtype <> b var
R18782:18785 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18777:18780 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18776:18776 compcert.common.Memtype <> n var
R18801:18804 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18794:18797 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18790:18792 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18786:18789 compcert.common.Memtype <> ofs' var
R18793:18793 compcert.common.Memtype <> n var
R18798:18800 compcert.common.Memtype <> ofs var
R18827:18830 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18808:18810 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18805:18807 compcert.common.Memtype <> ofs var
R18811:18820 compcert.common.Memdata <> size_chunk def
R18822:18826 compcert.common.Memtype <> chunk var
R18831:18834 compcert.common.Memtype <> ofs' var
R18729:18731 Coq.Init.Logic <> :type_scope:x_'='_x not
R18707:18711 compcert.common.Memtype MEM store defax
R18728:18728 compcert.common.Memtype <> v var
R18724:18726 compcert.common.Memtype <> ofs var
R18722:18722 compcert.common.Memtype <> b var
R18719:18720 compcert.common.Memtype <> m1 var
R18713:18717 compcert.common.Memtype <> chunk var
R18732:18735 Coq.Init.Datatypes <> Some constr
R18737:18738 compcert.common.Memtype <> m2 var
ax 18994:19016 MEM store_signed_unsigned_8
R19068:19070 Coq.Init.Logic <> :type_scope:x_'='_x not
R19041:19045 compcert.common.Memtype MEM store defax
R19067:19067 compcert.common.Memtype <> v var
R19063:19065 compcert.common.Memtype <> ofs var
R19061:19061 compcert.common.Memtype <> b var
R19059:19059 compcert.common.Memtype <> m var
R19047:19057 compcert.common.AST <> Mint8signed constr
R19071:19075 compcert.common.Memtype MEM store defax
R19099:19099 compcert.common.Memtype <> v var
R19095:19097 compcert.common.Memtype <> ofs var
R19093:19093 compcert.common.Memtype <> b var
R19091:19091 compcert.common.Memtype <> m var
R19077:19089 compcert.common.AST <> Mint8unsigned constr
ax 19108:19131 MEM store_signed_unsigned_16
R19184:19186 Coq.Init.Logic <> :type_scope:x_'='_x not
R19156:19160 compcert.common.Memtype MEM store defax
R19183:19183 compcert.common.Memtype <> v var
R19179:19181 compcert.common.Memtype <> ofs var
R19177:19177 compcert.common.Memtype <> b var
R19175:19175 compcert.common.Memtype <> m var
R19162:19173 compcert.common.AST <> Mint16signed constr
R19187:19191 compcert.common.Memtype MEM store defax
R19216:19216 compcert.common.Memtype <> v var
R19212:19214 compcert.common.Memtype <> ofs var
R19210:19210 compcert.common.Memtype <> b var
R19208:19208 compcert.common.Memtype <> m var
R19193:19206 compcert.common.AST <> Mint16unsigned constr
ax 19225:19243 MEM store_int8_zero_ext
R19321:19325 Coq.Init.Logic <> :type_scope:x_'='_x not
R19268:19272 compcert.common.Memtype MEM store defax
R19297:19300 compcert.common.Values <> Vint constr
R19303:19314 compcert.lib.Integers Int zero_ext def
R19318:19318 compcert.common.Memtype <> n var
R19292:19294 compcert.common.Memtype <> ofs var
R19290:19290 compcert.common.Memtype <> b var
R19288:19288 compcert.common.Memtype <> m var
R19274:19286 compcert.common.AST <> Mint8unsigned constr
R19326:19330 compcert.common.Memtype MEM store defax
R19355:19358 compcert.common.Values <> Vint constr
R19360:19360 compcert.common.Memtype <> n var
R19350:19352 compcert.common.Memtype <> ofs var
R19348:19348 compcert.common.Memtype <> b var
R19346:19346 compcert.common.Memtype <> m var
R19332:19344 compcert.common.AST <> Mint8unsigned constr
ax 19370:19388 MEM store_int8_sign_ext
R19464:19468 Coq.Init.Logic <> :type_scope:x_'='_x not
R19413:19417 compcert.common.Memtype MEM store defax
R19440:19443 compcert.common.Values <> Vint constr
R19446:19457 compcert.lib.Integers Int sign_ext def
R19461:19461 compcert.common.Memtype <> n var
R19435:19437 compcert.common.Memtype <> ofs var
R19433:19433 compcert.common.Memtype <> b var
R19431:19431 compcert.common.Memtype <> m var
R19419:19429 compcert.common.AST <> Mint8signed constr
R19469:19473 compcert.common.Memtype MEM store defax
R19496:19499 compcert.common.Values <> Vint constr
R19501:19501 compcert.common.Memtype <> n var
R19491:19493 compcert.common.Memtype <> ofs var
R19489:19489 compcert.common.Memtype <> b var
R19487:19487 compcert.common.Memtype <> m var
R19475:19485 compcert.common.AST <> Mint8signed constr
ax 19511:19530 MEM store_int16_zero_ext
R19610:19614 Coq.Init.Logic <> :type_scope:x_'='_x not
R19555:19559 compcert.common.Memtype MEM store defax
R19585:19588 compcert.common.Values <> Vint constr
R19591:19602 compcert.lib.Integers Int zero_ext def
R19607:19607 compcert.common.Memtype <> n var
R19580:19582 compcert.common.Memtype <> ofs var
R19578:19578 compcert.common.Memtype <> b var
R19576:19576 compcert.common.Memtype <> m var
R19561:19574 compcert.common.AST <> Mint16unsigned constr
R19615:19619 compcert.common.Memtype MEM store defax
R19645:19648 compcert.common.Values <> Vint constr
R19650:19650 compcert.common.Memtype <> n var
R19640:19642 compcert.common.Memtype <> ofs var
R19638:19638 compcert.common.Memtype <> b var
R19636:19636 compcert.common.Memtype <> m var
R19621:19634 compcert.common.AST <> Mint16unsigned constr
ax 19660:19679 MEM store_int16_sign_ext
R19757:19761 Coq.Init.Logic <> :type_scope:x_'='_x not
R19704:19708 compcert.common.Memtype MEM store defax
R19732:19735 compcert.common.Values <> Vint constr
R19738:19749 compcert.lib.Integers Int sign_ext def
R19754:19754 compcert.common.Memtype <> n var
R19727:19729 compcert.common.Memtype <> ofs var
R19725:19725 compcert.common.Memtype <> b var
R19723:19723 compcert.common.Memtype <> m var
R19710:19721 compcert.common.AST <> Mint16signed constr
R19762:19766 compcert.common.Memtype MEM store defax
R19790:19793 compcert.common.Values <> Vint constr
R19795:19795 compcert.common.Memtype <> n var
R19785:19787 compcert.common.Memtype <> ofs var
R19783:19783 compcert.common.Memtype <> b var
R19781:19781 compcert.common.Memtype <> m var
R19768:19779 compcert.common.AST <> Mint16signed constr
ax 20043:20063 MEM range_perm_storebytes
R20157:20162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20163:20164 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R20167:20169 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R20173:20175 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R20211:20212 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R20170:20172 compcert.common.Memtype MEM mem defax
R20201:20203 Coq.Init.Logic <> :type_scope:x_'='_x not
R20176:20185 compcert.common.Memtype MEM storebytes defax
R20196:20200 compcert.common.Memtype <> bytes var
R20192:20194 compcert.common.Memtype <> ofs var
R20190:20190 compcert.common.Memtype <> b var
R20187:20188 compcert.common.Memtype <> m1 var
R20204:20207 Coq.Init.Datatypes <> Some constr
R20093:20102 compcert.common.Memtype MEM range_perm def
R20149:20156 compcert.common.Memtype MEM Writable constr
R20145:20147 compcert.common.Memtype MEM Cur constr
R20117:20119 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20114:20116 compcert.common.Memtype <> ofs var
R20120:20127 Coq.ZArith.BinInt <> Z_of_nat syndef
R20130:20135 Coq.Init.Datatypes <> length def
R20137:20141 compcert.common.Memtype <> bytes var
R20109:20111 compcert.common.Memtype <> ofs var
R20107:20107 compcert.common.Memtype <> b var
R20104:20105 compcert.common.Memtype <> m1 var
ax 20221:20241 MEM storebytes_range_perm
R20307:20312 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20313:20322 compcert.common.Memtype MEM range_perm def
R20369:20376 compcert.common.Memtype MEM Writable constr
R20365:20367 compcert.common.Memtype MEM Cur constr
R20337:20339 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20334:20336 compcert.common.Memtype <> ofs var
R20340:20347 Coq.ZArith.BinInt <> Z_of_nat syndef
R20350:20355 Coq.Init.Datatypes <> length def
R20357:20361 compcert.common.Memtype <> bytes var
R20329:20331 compcert.common.Memtype <> ofs var
R20327:20327 compcert.common.Memtype <> b var
R20324:20325 compcert.common.Memtype <> m1 var
R20297:20299 Coq.Init.Logic <> :type_scope:x_'='_x not
R20272:20281 compcert.common.Memtype MEM storebytes defax
R20292:20296 compcert.common.Memtype <> bytes var
R20288:20290 compcert.common.Memtype <> ofs var
R20286:20286 compcert.common.Memtype <> b var
R20283:20284 compcert.common.Memtype <> m1 var
R20300:20303 Coq.Init.Datatypes <> Some constr
R20305:20306 compcert.common.Memtype <> m2 var
ax 20385:20401 MEM perm_storebytes_1
R20467:20472 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20512:20515 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20516:20519 compcert.common.Memtype MEM perm defax
R20534:20534 compcert.common.Memtype <> p var
R20532:20532 compcert.common.Memtype <> k var
R20527:20530 compcert.common.Memtype <> ofs' var
R20524:20525 compcert.common.Memtype <> b' var
R20521:20522 compcert.common.Memtype <> m2 var
R20493:20496 compcert.common.Memtype MEM perm defax
R20511:20511 compcert.common.Memtype <> p var
R20509:20509 compcert.common.Memtype <> k var
R20504:20507 compcert.common.Memtype <> ofs' var
R20501:20502 compcert.common.Memtype <> b' var
R20498:20499 compcert.common.Memtype <> m1 var
R20457:20459 Coq.Init.Logic <> :type_scope:x_'='_x not
R20432:20441 compcert.common.Memtype MEM storebytes defax
R20452:20456 compcert.common.Memtype <> bytes var
R20448:20450 compcert.common.Memtype <> ofs var
R20446:20446 compcert.common.Memtype <> b var
R20443:20444 compcert.common.Memtype <> m1 var
R20460:20463 Coq.Init.Datatypes <> Some constr
R20465:20466 compcert.common.Memtype <> m2 var
ax 20543:20559 MEM perm_storebytes_2
R20625:20630 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20670:20673 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20674:20677 compcert.common.Memtype MEM perm defax
R20692:20692 compcert.common.Memtype <> p var
R20690:20690 compcert.common.Memtype <> k var
R20685:20688 compcert.common.Memtype <> ofs' var
R20682:20683 compcert.common.Memtype <> b' var
R20679:20680 compcert.common.Memtype <> m1 var
R20651:20654 compcert.common.Memtype MEM perm defax
R20669:20669 compcert.common.Memtype <> p var
R20667:20667 compcert.common.Memtype <> k var
R20662:20665 compcert.common.Memtype <> ofs' var
R20659:20660 compcert.common.Memtype <> b' var
R20656:20657 compcert.common.Memtype <> m2 var
R20615:20617 Coq.Init.Logic <> :type_scope:x_'='_x not
R20590:20599 compcert.common.Memtype MEM storebytes defax
R20610:20614 compcert.common.Memtype <> bytes var
R20606:20608 compcert.common.Memtype <> ofs var
R20604:20604 compcert.common.Memtype <> b var
R20601:20602 compcert.common.Memtype <> m1 var
R20618:20621 Coq.Init.Datatypes <> Some constr
R20623:20624 compcert.common.Memtype <> m2 var
ax 20701:20725 MEM storebytes_valid_access_1
R20791:20796 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20856:20859 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20860:20871 compcert.common.Memtype MEM valid_access def
R20891:20891 compcert.common.Memtype <> p var
R20886:20889 compcert.common.Memtype <> ofs' var
R20883:20884 compcert.common.Memtype <> b' var
R20876:20881 compcert.common.Memtype <> chunk' var
R20873:20874 compcert.common.Memtype <> m2 var
R20824:20835 compcert.common.Memtype MEM valid_access def
R20855:20855 compcert.common.Memtype <> p var
R20850:20853 compcert.common.Memtype <> ofs' var
R20847:20848 compcert.common.Memtype <> b' var
R20840:20845 compcert.common.Memtype <> chunk' var
R20837:20838 compcert.common.Memtype <> m1 var
R20781:20783 Coq.Init.Logic <> :type_scope:x_'='_x not
R20756:20765 compcert.common.Memtype MEM storebytes defax
R20776:20780 compcert.common.Memtype <> bytes var
R20772:20774 compcert.common.Memtype <> ofs var
R20770:20770 compcert.common.Memtype <> b var
R20767:20768 compcert.common.Memtype <> m1 var
R20784:20787 Coq.Init.Datatypes <> Some constr
R20789:20790 compcert.common.Memtype <> m2 var
ax 20900:20924 MEM storebytes_valid_access_2
R20990:20995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21055:21058 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21059:21070 compcert.common.Memtype MEM valid_access def
R21090:21090 compcert.common.Memtype <> p var
R21085:21088 compcert.common.Memtype <> ofs' var
R21082:21083 compcert.common.Memtype <> b' var
R21075:21080 compcert.common.Memtype <> chunk' var
R21072:21073 compcert.common.Memtype <> m1 var
R21023:21034 compcert.common.Memtype MEM valid_access def
R21054:21054 compcert.common.Memtype <> p var
R21049:21052 compcert.common.Memtype <> ofs' var
R21046:21047 compcert.common.Memtype <> b' var
R21039:21044 compcert.common.Memtype <> chunk' var
R21036:21037 compcert.common.Memtype <> m2 var
R20980:20982 Coq.Init.Logic <> :type_scope:x_'='_x not
R20955:20964 compcert.common.Memtype MEM storebytes defax
R20975:20979 compcert.common.Memtype <> bytes var
R20971:20973 compcert.common.Memtype <> ofs var
R20969:20969 compcert.common.Memtype <> b var
R20966:20967 compcert.common.Memtype <> m1 var
R20983:20986 Coq.Init.Datatypes <> Some constr
R20988:20989 compcert.common.Memtype <> m2 var
ax 21099:21118 MEM nextblock_storebytes
R21184:21189 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21202:21204 Coq.Init.Logic <> :type_scope:x_'='_x not
R21190:21198 compcert.common.Memtype MEM nextblock defax
R21200:21201 compcert.common.Memtype <> m2 var
R21205:21213 compcert.common.Memtype MEM nextblock defax
R21215:21216 compcert.common.Memtype <> m1 var
R21174:21176 Coq.Init.Logic <> :type_scope:x_'='_x not
R21149:21158 compcert.common.Memtype MEM storebytes defax
R21169:21173 compcert.common.Memtype <> bytes var
R21165:21167 compcert.common.Memtype <> ofs var
R21163:21163 compcert.common.Memtype <> b var
R21160:21161 compcert.common.Memtype <> m1 var
R21177:21180 Coq.Init.Datatypes <> Some constr
R21182:21183 compcert.common.Memtype <> m2 var
ax 21225:21248 MEM storebytes_valid_block_1
R21314:21319 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21348:21351 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21352:21362 compcert.common.Memtype MEM valid_block def
R21367:21368 compcert.common.Memtype <> b' var
R21364:21365 compcert.common.Memtype <> m2 var
R21331:21341 compcert.common.Memtype MEM valid_block def
R21346:21347 compcert.common.Memtype <> b' var
R21343:21344 compcert.common.Memtype <> m1 var
R21304:21306 Coq.Init.Logic <> :type_scope:x_'='_x not
R21279:21288 compcert.common.Memtype MEM storebytes defax
R21299:21303 compcert.common.Memtype <> bytes var
R21295:21297 compcert.common.Memtype <> ofs var
R21293:21293 compcert.common.Memtype <> b var
R21290:21291 compcert.common.Memtype <> m1 var
R21307:21310 Coq.Init.Datatypes <> Some constr
R21312:21313 compcert.common.Memtype <> m2 var
ax 21377:21400 MEM storebytes_valid_block_2
R21466:21471 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21500:21503 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21504:21514 compcert.common.Memtype MEM valid_block def
R21519:21520 compcert.common.Memtype <> b' var
R21516:21517 compcert.common.Memtype <> m1 var
R21483:21493 compcert.common.Memtype MEM valid_block def
R21498:21499 compcert.common.Memtype <> b' var
R21495:21496 compcert.common.Memtype <> m2 var
R21456:21458 Coq.Init.Logic <> :type_scope:x_'='_x not
R21431:21440 compcert.common.Memtype MEM storebytes defax
R21451:21455 compcert.common.Memtype <> bytes var
R21447:21449 compcert.common.Memtype <> ofs var
R21445:21445 compcert.common.Memtype <> b var
R21442:21443 compcert.common.Memtype <> m1 var
R21459:21462 Coq.Init.Datatypes <> Some constr
R21464:21465 compcert.common.Memtype <> m2 var
ax 21584:21599 MEM storebytes_store
R21684:21689 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21715:21720 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21743:21745 Coq.Init.Logic <> :type_scope:x_'='_x not
R21721:21725 compcert.common.Memtype MEM store defax
R21742:21742 compcert.common.Memtype <> v var
R21738:21740 compcert.common.Memtype <> ofs var
R21736:21736 compcert.common.Memtype <> b var
R21733:21734 compcert.common.Memtype <> m1 var
R21727:21731 compcert.common.Memtype <> chunk var
R21746:21749 Coq.Init.Datatypes <> Some constr
R21751:21752 compcert.common.Memtype <> m2 var
R21690:21690 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R21708:21710 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R21714:21714 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R21691:21701 compcert.common.Memdata <> align_chunk def
R21703:21707 compcert.common.Memtype <> chunk var
R21711:21713 compcert.common.Memtype <> ofs var
R21674:21676 Coq.Init.Logic <> :type_scope:x_'='_x not
R21634:21643 compcert.common.Memtype MEM storebytes defax
R21655:21664 compcert.common.Memdata <> encode_val def
R21672:21672 compcert.common.Memtype <> v var
R21666:21670 compcert.common.Memtype <> chunk var
R21650:21652 compcert.common.Memtype <> ofs var
R21648:21648 compcert.common.Memtype <> b var
R21645:21646 compcert.common.Memtype <> m1 var
R21677:21680 Coq.Init.Datatypes <> Some constr
R21682:21683 compcert.common.Memtype <> m2 var
ax 21762:21777 MEM store_storebytes
R21844:21849 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21890:21892 Coq.Init.Logic <> :type_scope:x_'='_x not
R21850:21859 compcert.common.Memtype MEM storebytes defax
R21871:21880 compcert.common.Memdata <> encode_val def
R21888:21888 compcert.common.Memtype <> v var
R21882:21886 compcert.common.Memtype <> chunk var
R21866:21868 compcert.common.Memtype <> ofs var
R21864:21864 compcert.common.Memtype <> b var
R21861:21862 compcert.common.Memtype <> m1 var
R21893:21896 Coq.Init.Datatypes <> Some constr
R21898:21899 compcert.common.Memtype <> m2 var
R21834:21836 Coq.Init.Logic <> :type_scope:x_'='_x not
R21812:21816 compcert.common.Memtype MEM store defax
R21833:21833 compcert.common.Memtype <> v var
R21829:21831 compcert.common.Memtype <> ofs var
R21827:21827 compcert.common.Memtype <> b var
R21824:21825 compcert.common.Memtype <> m1 var
R21818:21822 compcert.common.Memtype <> chunk var
R21837:21840 Coq.Init.Datatypes <> Some constr
R21842:21843 compcert.common.Memtype <> m2 var
ax 21940:21964 MEM loadbytes_storebytes_same
R22030:22035 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22080:22082 Coq.Init.Logic <> :type_scope:x_'='_x not
R22036:22044 compcert.common.Memtype MEM loadbytes defax
R22056:22063 Coq.ZArith.BinInt <> Z_of_nat syndef
R22066:22071 Coq.Init.Datatypes <> length def
R22073:22077 compcert.common.Memtype <> bytes var
R22051:22053 compcert.common.Memtype <> ofs var
R22049:22049 compcert.common.Memtype <> b var
R22046:22047 compcert.common.Memtype <> m2 var
R22083:22086 Coq.Init.Datatypes <> Some constr
R22088:22092 compcert.common.Memtype <> bytes var
R22020:22022 Coq.Init.Logic <> :type_scope:x_'='_x not
R21995:22004 compcert.common.Memtype MEM storebytes defax
R22015:22019 compcert.common.Memtype <> bytes var
R22011:22013 compcert.common.Memtype <> ofs var
R22009:22009 compcert.common.Memtype <> b var
R22006:22007 compcert.common.Memtype <> m1 var
R22023:22026 Coq.Init.Datatypes <> Some constr
R22028:22029 compcert.common.Memtype <> m2 var
ax 22101:22126 MEM loadbytes_storebytes_other
R22192:22197 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22228:22233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22307:22312 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22337:22339 Coq.Init.Logic <> :type_scope:x_'='_x not
R22313:22321 compcert.common.Memtype MEM loadbytes defax
R22334:22336 compcert.common.Memtype <> len var
R22329:22332 compcert.common.Memtype <> ofs' var
R22326:22327 compcert.common.Memtype <> b' var
R22323:22324 compcert.common.Memtype <> m2 var
R22340:22348 compcert.common.Memtype MEM loadbytes defax
R22361:22363 compcert.common.Memtype <> len var
R22356:22359 compcert.common.Memtype <> ofs' var
R22353:22354 compcert.common.Memtype <> b' var
R22350:22351 compcert.common.Memtype <> m1 var
R22241:22246 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22236:22239 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R22234:22235 compcert.common.Memtype <> b' var
R22240:22240 compcert.common.Memtype <> b var
R22264:22269 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22257:22260 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R22251:22253 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22247:22250 compcert.common.Memtype <> ofs' var
R22254:22256 compcert.common.Memtype <> len var
R22261:22263 compcert.common.Memtype <> ofs var
R22299:22302 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R22273:22275 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22270:22272 compcert.common.Memtype <> ofs var
R22276:22283 Coq.ZArith.BinInt <> Z_of_nat syndef
R22286:22291 Coq.Init.Datatypes <> length def
R22293:22297 compcert.common.Memtype <> bytes var
R22303:22306 compcert.common.Memtype <> ofs' var
R22223:22226 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R22220:22222 compcert.common.Memtype <> len var
R22182:22184 Coq.Init.Logic <> :type_scope:x_'='_x not
R22157:22166 compcert.common.Memtype MEM storebytes defax
R22177:22181 compcert.common.Memtype <> bytes var
R22173:22175 compcert.common.Memtype <> ofs var
R22171:22171 compcert.common.Memtype <> b var
R22168:22169 compcert.common.Memtype <> m1 var
R22185:22188 Coq.Init.Datatypes <> Some constr
R22190:22191 compcert.common.Memtype <> m2 var
ax 22372:22392 MEM load_storebytes_other
R22458:22463 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22574:22579 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22601:22603 Coq.Init.Logic <> :type_scope:x_'='_x not
R22580:22583 compcert.common.Memtype MEM load defax
R22597:22600 compcert.common.Memtype <> ofs' var
R22594:22595 compcert.common.Memtype <> b' var
R22591:22592 compcert.common.Memtype <> m2 var
R22585:22589 compcert.common.Memtype <> chunk var
R22604:22607 compcert.common.Memtype MEM load defax
R22621:22624 compcert.common.Memtype <> ofs' var
R22618:22619 compcert.common.Memtype <> b' var
R22615:22616 compcert.common.Memtype <> m1 var
R22609:22613 compcert.common.Memtype <> chunk var
R22495:22500 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22490:22493 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R22488:22489 compcert.common.Memtype <> b' var
R22494:22494 compcert.common.Memtype <> b var
R22531:22536 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22524:22527 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R22505:22507 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22501:22504 compcert.common.Memtype <> ofs' var
R22508:22517 compcert.common.Memdata <> size_chunk def
R22519:22523 compcert.common.Memtype <> chunk var
R22528:22530 compcert.common.Memtype <> ofs var
R22566:22569 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R22540:22542 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22537:22539 compcert.common.Memtype <> ofs var
R22543:22550 Coq.ZArith.BinInt <> Z_of_nat syndef
R22553:22558 Coq.Init.Datatypes <> length def
R22560:22564 compcert.common.Memtype <> bytes var
R22570:22573 compcert.common.Memtype <> ofs' var
R22448:22450 Coq.Init.Logic <> :type_scope:x_'='_x not
R22423:22432 compcert.common.Memtype MEM storebytes defax
R22443:22447 compcert.common.Memtype <> bytes var
R22439:22441 compcert.common.Memtype <> ofs var
R22437:22437 compcert.common.Memtype <> b var
R22434:22435 compcert.common.Memtype <> m1 var
R22451:22454 Coq.Init.Datatypes <> Some constr
R22456:22457 compcert.common.Memtype <> m2 var
ax 22714:22730 MEM storebytes_concat
R22808:22813 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22878:22883 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22921:22923 Coq.Init.Logic <> :type_scope:x_'='_x not
R22884:22893 compcert.common.Memtype MEM storebytes defax
R22910:22913 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R22904:22909 compcert.common.Memtype <> bytes1 var
R22914:22919 compcert.common.Memtype <> bytes2 var
R22899:22901 compcert.common.Memtype <> ofs var
R22897:22897 compcert.common.Memtype <> b var
R22895:22895 compcert.common.Memtype <> m var
R22924:22927 Coq.Init.Datatypes <> Some constr
R22929:22930 compcert.common.Memtype <> m2 var
R22868:22870 Coq.Init.Logic <> :type_scope:x_'='_x not
R22814:22823 compcert.common.Memtype MEM storebytes defax
R22862:22867 compcert.common.Memtype <> bytes2 var
R22834:22836 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22831:22833 compcert.common.Memtype <> ofs var
R22837:22844 Coq.ZArith.BinInt <> Z_of_nat syndef
R22846:22851 Coq.Init.Datatypes <> length def
R22853:22858 compcert.common.Memtype <> bytes1 var
R22828:22828 compcert.common.Memtype <> b var
R22825:22826 compcert.common.Memtype <> m1 var
R22871:22874 Coq.Init.Datatypes <> Some constr
R22876:22877 compcert.common.Memtype <> m2 var
R22798:22800 Coq.Init.Logic <> :type_scope:x_'='_x not
R22773:22782 compcert.common.Memtype MEM storebytes defax
R22792:22797 compcert.common.Memtype <> bytes1 var
R22788:22790 compcert.common.Memtype <> ofs var
R22786:22786 compcert.common.Memtype <> b var
R22784:22784 compcert.common.Memtype <> m var
R22801:22804 Coq.Init.Datatypes <> Some constr
R22806:22807 compcert.common.Memtype <> m1 var
ax 22939:22954 MEM storebytes_split
R23041:23046 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23047:23053 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23056:23062 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23098:23103 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23088:23090 Coq.Init.Logic <> :type_scope:x_'='_x not
R23063:23072 compcert.common.Memtype MEM storebytes defax
R23082:23087 compcert.common.Memtype <> bytes1 var
R23078:23080 compcert.common.Memtype <> ofs var
R23076:23076 compcert.common.Memtype <> b var
R23074:23074 compcert.common.Memtype <> m var
R23091:23094 Coq.Init.Datatypes <> Some constr
R23096:23097 compcert.common.Memtype <> m1 var
R23158:23160 Coq.Init.Logic <> :type_scope:x_'='_x not
R23104:23113 compcert.common.Memtype MEM storebytes defax
R23152:23157 compcert.common.Memtype <> bytes2 var
R23124:23126 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R23121:23123 compcert.common.Memtype <> ofs var
R23127:23134 Coq.ZArith.BinInt <> Z_of_nat syndef
R23136:23141 Coq.Init.Datatypes <> length def
R23143:23148 compcert.common.Memtype <> bytes1 var
R23118:23118 compcert.common.Memtype <> b var
R23115:23116 compcert.common.Memtype <> m1 var
R23161:23164 Coq.Init.Datatypes <> Some constr
R23166:23167 compcert.common.Memtype <> m2 var
R23031:23033 Coq.Init.Logic <> :type_scope:x_'='_x not
R22994:23003 compcert.common.Memtype MEM storebytes defax
R23020:23023 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R23014:23019 compcert.common.Memtype <> bytes1 var
R23024:23029 compcert.common.Memtype <> bytes2 var
R23009:23011 compcert.common.Memtype <> ofs var
R23007:23007 compcert.common.Memtype <> b var
R23005:23005 compcert.common.Memtype <> m var
R23034:23037 Coq.Init.Datatypes <> Some constr
R23039:23040 compcert.common.Memtype <> m2 var
ax 23314:23325 MEM alloc_result
R23376:23381 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23383:23385 Coq.Init.Logic <> :type_scope:x_'='_x not
R23382:23382 compcert.common.Memtype <> b var
R23386:23394 compcert.common.Memtype MEM nextblock defax
R23396:23397 compcert.common.Memtype <> m1 var
R23366:23368 Coq.Init.Logic <> :type_scope:x_'='_x not
R23352:23356 compcert.common.Memtype MEM alloc defax
R23364:23365 compcert.common.Memtype <> hi var
R23361:23362 compcert.common.Memtype <> lo var
R23358:23359 compcert.common.Memtype <> m1 var
R23369:23369 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23372:23373 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23375:23375 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23370:23371 compcert.common.Memtype <> m2 var
R23374:23374 compcert.common.Memtype <> b var
ax 23452:23466 MEM nextblock_alloc
R23517:23522 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23535:23537 Coq.Init.Logic <> :type_scope:x_'='_x not
R23523:23531 compcert.common.Memtype MEM nextblock defax
R23533:23534 compcert.common.Memtype <> m2 var
R23538:23542 Coq.PArith.BinPos <> Psucc syndef
R23545:23553 compcert.common.Memtype MEM nextblock defax
R23555:23556 compcert.common.Memtype <> m1 var
R23507:23509 Coq.Init.Logic <> :type_scope:x_'='_x not
R23493:23497 compcert.common.Memtype MEM alloc defax
R23505:23506 compcert.common.Memtype <> hi var
R23502:23503 compcert.common.Memtype <> lo var
R23499:23500 compcert.common.Memtype <> m1 var
R23510:23510 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23513:23514 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23516:23516 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23511:23512 compcert.common.Memtype <> m2 var
R23515:23515 compcert.common.Memtype <> b var
ax 23567:23583 MEM valid_block_alloc
R23634:23639 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23668:23671 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23672:23682 compcert.common.Memtype MEM valid_block def
R23687:23688 compcert.common.Memtype <> b' var
R23684:23685 compcert.common.Memtype <> m2 var
R23651:23661 compcert.common.Memtype MEM valid_block def
R23666:23667 compcert.common.Memtype <> b' var
R23663:23664 compcert.common.Memtype <> m1 var
R23624:23626 Coq.Init.Logic <> :type_scope:x_'='_x not
R23610:23614 compcert.common.Memtype MEM alloc defax
R23622:23623 compcert.common.Memtype <> hi var
R23619:23620 compcert.common.Memtype <> lo var
R23616:23617 compcert.common.Memtype <> m1 var
R23627:23627 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23630:23631 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23633:23633 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23628:23629 compcert.common.Memtype <> m2 var
R23632:23632 compcert.common.Memtype <> b var
ax 23697:23713 MEM fresh_block_alloc
R23764:23769 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23770:23771 Coq.Init.Logic <> :type_scope:'~'_x not
R23788:23788 Coq.Init.Logic <> :type_scope:'~'_x not
R23772:23782 compcert.common.Memtype MEM valid_block def
R23787:23787 compcert.common.Memtype <> b var
R23784:23785 compcert.common.Memtype <> m1 var
R23754:23756 Coq.Init.Logic <> :type_scope:x_'='_x not
R23740:23744 compcert.common.Memtype MEM alloc defax
R23752:23753 compcert.common.Memtype <> hi var
R23749:23750 compcert.common.Memtype <> lo var
R23746:23747 compcert.common.Memtype <> m1 var
R23757:23757 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23760:23761 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23763:23763 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23758:23759 compcert.common.Memtype <> m2 var
R23762:23762 compcert.common.Memtype <> b var
ax 23797:23811 MEM valid_new_block
R23862:23867 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23868:23878 compcert.common.Memtype MEM valid_block def
R23883:23883 compcert.common.Memtype <> b var
R23880:23881 compcert.common.Memtype <> m2 var
R23852:23854 Coq.Init.Logic <> :type_scope:x_'='_x not
R23838:23842 compcert.common.Memtype MEM alloc defax
R23850:23851 compcert.common.Memtype <> hi var
R23847:23848 compcert.common.Memtype <> lo var
R23844:23845 compcert.common.Memtype <> m1 var
R23855:23855 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23858:23859 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23861:23861 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23856:23857 compcert.common.Memtype <> m2 var
R23860:23860 compcert.common.Memtype <> b var
ax 23892:23912 MEM valid_block_alloc_inv
R23963:23968 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23997:24000 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24007:24010 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R24003:24005 Coq.Init.Logic <> :type_scope:x_'='_x not
R24001:24002 compcert.common.Memtype <> b' var
R24006:24006 compcert.common.Memtype <> b var
R24011:24021 compcert.common.Memtype MEM valid_block def
R24026:24027 compcert.common.Memtype <> b' var
R24023:24024 compcert.common.Memtype <> m1 var
R23980:23990 compcert.common.Memtype MEM valid_block def
R23995:23996 compcert.common.Memtype <> b' var
R23992:23993 compcert.common.Memtype <> m2 var
R23953:23955 Coq.Init.Logic <> :type_scope:x_'='_x not
R23939:23943 compcert.common.Memtype MEM alloc defax
R23951:23952 compcert.common.Memtype <> hi var
R23948:23949 compcert.common.Memtype <> lo var
R23945:23946 compcert.common.Memtype <> m1 var
R23956:23956 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23959:23960 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23962:23962 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23957:23958 compcert.common.Memtype <> m2 var
R23961:23961 compcert.common.Memtype <> b var
ax 24079:24090 MEM perm_alloc_1
R24141:24146 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24184:24187 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24188:24191 compcert.common.Memtype MEM perm defax
R24205:24205 compcert.common.Memtype <> p var
R24203:24203 compcert.common.Memtype <> k var
R24199:24201 compcert.common.Memtype <> ofs var
R24196:24197 compcert.common.Memtype <> b' var
R24193:24194 compcert.common.Memtype <> m2 var
R24166:24169 compcert.common.Memtype MEM perm defax
R24183:24183 compcert.common.Memtype <> p var
R24181:24181 compcert.common.Memtype <> k var
R24177:24179 compcert.common.Memtype <> ofs var
R24174:24175 compcert.common.Memtype <> b' var
R24171:24172 compcert.common.Memtype <> m1 var
R24131:24133 Coq.Init.Logic <> :type_scope:x_'='_x not
R24117:24121 compcert.common.Memtype MEM alloc defax
R24129:24130 compcert.common.Memtype <> hi var
R24126:24127 compcert.common.Memtype <> lo var
R24123:24124 compcert.common.Memtype <> m1 var
R24134:24134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24137:24138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24140:24140 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24135:24136 compcert.common.Memtype <> m2 var
R24139:24139 compcert.common.Memtype <> b var
ax 24214:24225 MEM perm_alloc_2
R24276:24281 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24310:24313 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24314:24317 compcert.common.Memtype MEM perm defax
R24330:24337 compcert.common.Memtype MEM Freeable constr
R24328:24328 compcert.common.Memtype <> k var
R24324:24326 compcert.common.Memtype <> ofs var
R24322:24322 compcert.common.Memtype <> b var
R24319:24320 compcert.common.Memtype <> m2 var
R24298:24301 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24305:24307 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24296:24297 compcert.common.Memtype <> lo var
R24302:24304 compcert.common.Memtype <> ofs var
R24302:24304 compcert.common.Memtype <> ofs var
R24308:24309 compcert.common.Memtype <> hi var
R24266:24268 Coq.Init.Logic <> :type_scope:x_'='_x not
R24252:24256 compcert.common.Memtype MEM alloc defax
R24264:24265 compcert.common.Memtype <> hi var
R24261:24262 compcert.common.Memtype <> lo var
R24258:24259 compcert.common.Memtype <> m1 var
R24269:24269 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24272:24273 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24275:24275 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24270:24271 compcert.common.Memtype <> m2 var
R24274:24274 compcert.common.Memtype <> b var
ax 24346:24357 MEM perm_alloc_3
R24408:24413 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24447:24450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24453:24456 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24460:24462 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24451:24452 compcert.common.Memtype <> lo var
R24457:24459 compcert.common.Memtype <> ofs var
R24457:24459 compcert.common.Memtype <> ofs var
R24463:24464 compcert.common.Memtype <> hi var
R24430:24433 compcert.common.Memtype MEM perm defax
R24446:24446 compcert.common.Memtype <> p var
R24444:24444 compcert.common.Memtype <> k var
R24440:24442 compcert.common.Memtype <> ofs var
R24438:24438 compcert.common.Memtype <> b var
R24435:24436 compcert.common.Memtype <> m2 var
R24398:24400 Coq.Init.Logic <> :type_scope:x_'='_x not
R24384:24388 compcert.common.Memtype MEM alloc defax
R24396:24397 compcert.common.Memtype <> hi var
R24393:24394 compcert.common.Memtype <> lo var
R24390:24391 compcert.common.Memtype <> m1 var
R24401:24401 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24404:24405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24407:24407 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24402:24403 compcert.common.Memtype <> m2 var
R24406:24406 compcert.common.Memtype <> b var
ax 24473:24484 MEM perm_alloc_4
R24535:24540 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24578:24581 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24589:24592 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24593:24596 compcert.common.Memtype MEM perm defax
R24610:24610 compcert.common.Memtype <> p var
R24608:24608 compcert.common.Memtype <> k var
R24604:24606 compcert.common.Memtype <> ofs var
R24601:24602 compcert.common.Memtype <> b' var
R24598:24599 compcert.common.Memtype <> m1 var
R24584:24587 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R24582:24583 compcert.common.Memtype <> b' var
R24588:24588 compcert.common.Memtype <> b var
R24560:24563 compcert.common.Memtype MEM perm defax
R24577:24577 compcert.common.Memtype <> p var
R24575:24575 compcert.common.Memtype <> k var
R24571:24573 compcert.common.Memtype <> ofs var
R24568:24569 compcert.common.Memtype <> b' var
R24565:24566 compcert.common.Memtype <> m2 var
R24525:24527 Coq.Init.Logic <> :type_scope:x_'='_x not
R24511:24515 compcert.common.Memtype MEM alloc defax
R24523:24524 compcert.common.Memtype <> hi var
R24520:24521 compcert.common.Memtype <> lo var
R24517:24518 compcert.common.Memtype <> m1 var
R24528:24528 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24531:24532 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24534:24534 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24529:24530 compcert.common.Memtype <> m2 var
R24533:24533 compcert.common.Memtype <> b var
ax 24619:24632 MEM perm_alloc_inv
R24683:24688 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24728:24733 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24737:24744 compcert.common.Values <> eq_block def
R24749:24749 compcert.common.Memtype <> b var
R24746:24747 compcert.common.Memtype <> b' var
R24776:24779 compcert.common.Memtype MEM perm defax
R24793:24793 compcert.common.Memtype <> p var
R24791:24791 compcert.common.Memtype <> k var
R24787:24789 compcert.common.Memtype <> ofs var
R24784:24785 compcert.common.Memtype <> b' var
R24781:24782 compcert.common.Memtype <> m1 var
R24758:24761 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24765:24767 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24756:24757 compcert.common.Memtype <> lo var
R24762:24764 compcert.common.Memtype <> ofs var
R24762:24764 compcert.common.Memtype <> ofs var
R24768:24769 compcert.common.Memtype <> hi var
R24710:24713 compcert.common.Memtype MEM perm defax
R24727:24727 compcert.common.Memtype <> p var
R24725:24725 compcert.common.Memtype <> k var
R24721:24723 compcert.common.Memtype <> ofs var
R24718:24719 compcert.common.Memtype <> b' var
R24715:24716 compcert.common.Memtype <> m2 var
R24673:24675 Coq.Init.Logic <> :type_scope:x_'='_x not
R24659:24663 compcert.common.Memtype MEM alloc defax
R24671:24672 compcert.common.Memtype <> hi var
R24668:24669 compcert.common.Memtype <> lo var
R24665:24666 compcert.common.Memtype <> m1 var
R24676:24676 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24679:24680 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24682:24682 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24677:24678 compcert.common.Memtype <> m2 var
R24681:24681 compcert.common.Memtype <> b var
ax 24849:24872 MEM valid_access_alloc_other
R24923:24928 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24984:24989 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24990:25001 compcert.common.Memtype MEM valid_access def
R25019:25019 compcert.common.Memtype <> p var
R25015:25017 compcert.common.Memtype <> ofs var
R25012:25013 compcert.common.Memtype <> b' var
R25006:25010 compcert.common.Memtype <> chunk var
R25003:25004 compcert.common.Memtype <> m2 var
R24954:24965 compcert.common.Memtype MEM valid_access def
R24983:24983 compcert.common.Memtype <> p var
R24979:24981 compcert.common.Memtype <> ofs var
R24976:24977 compcert.common.Memtype <> b' var
R24970:24974 compcert.common.Memtype <> chunk var
R24967:24968 compcert.common.Memtype <> m1 var
R24913:24915 Coq.Init.Logic <> :type_scope:x_'='_x not
R24899:24903 compcert.common.Memtype MEM alloc defax
R24911:24912 compcert.common.Memtype <> hi var
R24908:24909 compcert.common.Memtype <> lo var
R24905:24906 compcert.common.Memtype <> m1 var
R24916:24916 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24919:24920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24922:24922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24917:24918 compcert.common.Memtype <> m2 var
R24921:24921 compcert.common.Memtype <> b var
ax 25028:25050 MEM valid_access_alloc_same
R25101:25106 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25136:25139 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25168:25171 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25197:25202 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25203:25214 compcert.common.Memtype MEM valid_access def
R25231:25238 compcert.common.Memtype MEM Freeable constr
R25227:25229 compcert.common.Memtype <> ofs var
R25225:25225 compcert.common.Memtype <> b var
R25219:25223 compcert.common.Memtype <> chunk var
R25216:25217 compcert.common.Memtype <> m2 var
R25172:25172 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25190:25192 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25196:25196 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25173:25183 compcert.common.Memdata <> align_chunk def
R25185:25189 compcert.common.Memtype <> chunk var
R25193:25195 compcert.common.Memtype <> ofs var
R25162:25165 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R25143:25145 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25140:25142 compcert.common.Memtype <> ofs var
R25146:25155 compcert.common.Memdata <> size_chunk def
R25157:25161 compcert.common.Memtype <> chunk var
R25166:25167 compcert.common.Memtype <> hi var
R25129:25132 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R25127:25128 compcert.common.Memtype <> lo var
R25133:25135 compcert.common.Memtype <> ofs var
R25091:25093 Coq.Init.Logic <> :type_scope:x_'='_x not
R25077:25081 compcert.common.Memtype MEM alloc defax
R25089:25090 compcert.common.Memtype <> hi var
R25086:25087 compcert.common.Memtype <> lo var
R25083:25084 compcert.common.Memtype <> m1 var
R25094:25094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25097:25098 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25100:25100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25095:25096 compcert.common.Memtype <> m2 var
R25099:25099 compcert.common.Memtype <> b var
ax 25247:25268 MEM valid_access_alloc_inv
R25319:25324 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25380:25385 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25389:25396 compcert.common.Values <> eq_block def
R25401:25401 compcert.common.Memtype <> b var
R25398:25399 compcert.common.Memtype <> b' var
R25488:25499 compcert.common.Memtype MEM valid_access def
R25517:25517 compcert.common.Memtype <> p var
R25513:25515 compcert.common.Memtype <> ofs var
R25510:25511 compcert.common.Memtype <> b' var
R25504:25508 compcert.common.Memtype <> chunk var
R25501:25502 compcert.common.Memtype <> m1 var
R25419:25422 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25412:25415 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R25410:25411 compcert.common.Memtype <> lo var
R25416:25418 compcert.common.Memtype <> ofs var
R25451:25454 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25445:25448 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R25426:25428 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25423:25425 compcert.common.Memtype <> ofs var
R25429:25438 compcert.common.Memdata <> size_chunk def
R25440:25444 compcert.common.Memtype <> chunk var
R25449:25450 compcert.common.Memtype <> hi var
R25455:25455 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25473:25475 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25479:25479 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25456:25466 compcert.common.Memdata <> align_chunk def
R25468:25472 compcert.common.Memtype <> chunk var
R25476:25478 compcert.common.Memtype <> ofs var
R25350:25361 compcert.common.Memtype MEM valid_access def
R25379:25379 compcert.common.Memtype <> p var
R25375:25377 compcert.common.Memtype <> ofs var
R25372:25373 compcert.common.Memtype <> b' var
R25366:25370 compcert.common.Memtype <> chunk var
R25363:25364 compcert.common.Memtype <> m2 var
R25309:25311 Coq.Init.Logic <> :type_scope:x_'='_x not
R25295:25299 compcert.common.Memtype MEM alloc defax
R25307:25308 compcert.common.Memtype <> hi var
R25304:25305 compcert.common.Memtype <> lo var
R25301:25302 compcert.common.Memtype <> m1 var
R25312:25312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25315:25316 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25318:25318 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25313:25314 compcert.common.Memtype <> m2 var
R25317:25317 compcert.common.Memtype <> b var
ax 25558:25577 MEM load_alloc_unchanged
R25628:25633 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25674:25679 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25700:25702 Coq.Init.Logic <> :type_scope:x_'='_x not
R25680:25683 compcert.common.Memtype MEM load defax
R25697:25699 compcert.common.Memtype <> ofs var
R25694:25695 compcert.common.Memtype <> b' var
R25691:25692 compcert.common.Memtype <> m2 var
R25685:25689 compcert.common.Memtype <> chunk var
R25703:25706 compcert.common.Memtype MEM load defax
R25720:25722 compcert.common.Memtype <> ofs var
R25717:25718 compcert.common.Memtype <> b' var
R25714:25715 compcert.common.Memtype <> m1 var
R25708:25712 compcert.common.Memtype <> chunk var
R25657:25667 compcert.common.Memtype MEM valid_block def
R25672:25673 compcert.common.Memtype <> b' var
R25669:25670 compcert.common.Memtype <> m1 var
R25618:25620 Coq.Init.Logic <> :type_scope:x_'='_x not
R25604:25608 compcert.common.Memtype MEM alloc defax
R25616:25617 compcert.common.Memtype <> hi var
R25613:25614 compcert.common.Memtype <> lo var
R25610:25611 compcert.common.Memtype <> m1 var
R25621:25621 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25624:25625 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25627:25627 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25622:25623 compcert.common.Memtype <> m2 var
R25626:25626 compcert.common.Memtype <> b var
ax 25731:25746 MEM load_alloc_other
R25797:25802 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25857:25862 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25883:25885 Coq.Init.Logic <> :type_scope:x_'='_x not
R25863:25866 compcert.common.Memtype MEM load defax
R25880:25882 compcert.common.Memtype <> ofs var
R25877:25878 compcert.common.Memtype <> b' var
R25874:25875 compcert.common.Memtype <> m2 var
R25868:25872 compcert.common.Memtype <> chunk var
R25886:25889 Coq.Init.Datatypes <> Some constr
R25891:25891 compcert.common.Memtype <> v var
R25848:25850 Coq.Init.Logic <> :type_scope:x_'='_x not
R25828:25831 compcert.common.Memtype MEM load defax
R25845:25847 compcert.common.Memtype <> ofs var
R25842:25843 compcert.common.Memtype <> b' var
R25839:25840 compcert.common.Memtype <> m1 var
R25833:25837 compcert.common.Memtype <> chunk var
R25851:25854 Coq.Init.Datatypes <> Some constr
R25856:25856 compcert.common.Memtype <> v var
R25787:25789 Coq.Init.Logic <> :type_scope:x_'='_x not
R25773:25777 compcert.common.Memtype MEM alloc defax
R25785:25786 compcert.common.Memtype <> hi var
R25782:25783 compcert.common.Memtype <> lo var
R25779:25780 compcert.common.Memtype <> m1 var
R25790:25790 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25793:25794 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25796:25796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25791:25792 compcert.common.Memtype <> m2 var
R25795:25795 compcert.common.Memtype <> b var
ax 25900:25914 MEM load_alloc_same
R25965:25970 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26021:26026 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26028:26030 Coq.Init.Logic <> :type_scope:x_'='_x not
R26027:26027 compcert.common.Memtype <> v var
R26031:26036 compcert.common.Values <> Vundef constr
R26012:26014 Coq.Init.Logic <> :type_scope:x_'='_x not
R25993:25996 compcert.common.Memtype MEM load defax
R26009:26011 compcert.common.Memtype <> ofs var
R26007:26007 compcert.common.Memtype <> b var
R26004:26005 compcert.common.Memtype <> m2 var
R25998:26002 compcert.common.Memtype <> chunk var
R26015:26018 Coq.Init.Datatypes <> Some constr
R26020:26020 compcert.common.Memtype <> v var
R25955:25957 Coq.Init.Logic <> :type_scope:x_'='_x not
R25941:25945 compcert.common.Memtype MEM alloc defax
R25953:25954 compcert.common.Memtype <> hi var
R25950:25951 compcert.common.Memtype <> lo var
R25947:25948 compcert.common.Memtype <> m1 var
R25958:25958 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25961:25962 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25964:25964 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25959:25960 compcert.common.Memtype <> m2 var
R25963:25963 compcert.common.Memtype <> b var
ax 26045:26060 MEM load_alloc_same'
R26111:26116 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26146:26149 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26178:26181 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26207:26212 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26232:26234 Coq.Init.Logic <> :type_scope:x_'='_x not
R26213:26216 compcert.common.Memtype MEM load defax
R26229:26231 compcert.common.Memtype <> ofs var
R26227:26227 compcert.common.Memtype <> b var
R26224:26225 compcert.common.Memtype <> m2 var
R26218:26222 compcert.common.Memtype <> chunk var
R26235:26238 Coq.Init.Datatypes <> Some constr
R26240:26245 compcert.common.Values <> Vundef constr
R26182:26182 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R26200:26202 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R26206:26206 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R26183:26193 compcert.common.Memdata <> align_chunk def
R26195:26199 compcert.common.Memtype <> chunk var
R26203:26205 compcert.common.Memtype <> ofs var
R26172:26175 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R26153:26155 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26150:26152 compcert.common.Memtype <> ofs var
R26156:26165 compcert.common.Memdata <> size_chunk def
R26167:26171 compcert.common.Memtype <> chunk var
R26176:26177 compcert.common.Memtype <> hi var
R26139:26142 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R26137:26138 compcert.common.Memtype <> lo var
R26143:26145 compcert.common.Memtype <> ofs var
R26101:26103 Coq.Init.Logic <> :type_scope:x_'='_x not
R26087:26091 compcert.common.Memtype MEM alloc defax
R26099:26100 compcert.common.Memtype <> hi var
R26096:26097 compcert.common.Memtype <> lo var
R26093:26094 compcert.common.Memtype <> m1 var
R26104:26104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26107:26108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26110:26110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26105:26106 compcert.common.Memtype <> m2 var
R26109:26109 compcert.common.Memtype <> b var
ax 26398:26412 MEM range_perm_free
R26472:26477 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26478:26479 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R26482:26483 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R26487:26489 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R26515:26516 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R26484:26486 compcert.common.Memtype MEM mem defax
R26505:26507 Coq.Init.Logic <> :type_scope:x_'='_x not
R26490:26493 compcert.common.Memtype MEM free defax
R26503:26504 compcert.common.Memtype <> hi var
R26500:26501 compcert.common.Memtype <> lo var
R26498:26498 compcert.common.Memtype <> b var
R26495:26496 compcert.common.Memtype <> m1 var
R26508:26511 Coq.Init.Datatypes <> Some constr
R26438:26447 compcert.common.Memtype MEM range_perm def
R26464:26471 compcert.common.Memtype MEM Freeable constr
R26460:26462 compcert.common.Memtype MEM Cur constr
R26457:26458 compcert.common.Memtype <> hi var
R26454:26455 compcert.common.Memtype <> lo var
R26452:26452 compcert.common.Memtype <> b var
R26449:26450 compcert.common.Memtype <> m1 var
ax 26525:26539 MEM free_range_perm
R26593:26598 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26599:26608 compcert.common.Memtype MEM range_perm def
R26626:26633 compcert.common.Memtype MEM Freeable constr
R26622:26624 compcert.common.Memtype MEM Cur constr
R26619:26620 compcert.common.Memtype <> hi var
R26616:26617 compcert.common.Memtype <> lo var
R26613:26614 compcert.common.Memtype <> bf var
R26610:26611 compcert.common.Memtype <> m1 var
R26583:26585 Coq.Init.Logic <> :type_scope:x_'='_x not
R26567:26570 compcert.common.Memtype MEM free defax
R26581:26582 compcert.common.Memtype <> hi var
R26578:26579 compcert.common.Memtype <> lo var
R26575:26576 compcert.common.Memtype <> bf var
R26572:26573 compcert.common.Memtype <> m1 var
R26586:26589 Coq.Init.Datatypes <> Some constr
R26591:26592 compcert.common.Memtype <> m2 var
ax 26690:26703 MEM nextblock_free
R26757:26762 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26775:26777 Coq.Init.Logic <> :type_scope:x_'='_x not
R26763:26771 compcert.common.Memtype MEM nextblock defax
R26773:26774 compcert.common.Memtype <> m2 var
R26778:26786 compcert.common.Memtype MEM nextblock defax
R26788:26789 compcert.common.Memtype <> m1 var
R26747:26749 Coq.Init.Logic <> :type_scope:x_'='_x not
R26731:26734 compcert.common.Memtype MEM free defax
R26745:26746 compcert.common.Memtype <> hi var
R26742:26743 compcert.common.Memtype <> lo var
R26739:26740 compcert.common.Memtype <> bf var
R26736:26737 compcert.common.Memtype <> m1 var
R26750:26753 Coq.Init.Datatypes <> Some constr
R26755:26756 compcert.common.Memtype <> m2 var
ax 26798:26815 MEM valid_block_free_1
R26869:26874 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26901:26904 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26905:26915 compcert.common.Memtype MEM valid_block def
R26920:26920 compcert.common.Memtype <> b var
R26917:26918 compcert.common.Memtype <> m2 var
R26885:26895 compcert.common.Memtype MEM valid_block def
R26900:26900 compcert.common.Memtype <> b var
R26897:26898 compcert.common.Memtype <> m1 var
R26859:26861 Coq.Init.Logic <> :type_scope:x_'='_x not
R26843:26846 compcert.common.Memtype MEM free defax
R26857:26858 compcert.common.Memtype <> hi var
R26854:26855 compcert.common.Memtype <> lo var
R26851:26852 compcert.common.Memtype <> bf var
R26848:26849 compcert.common.Memtype <> m1 var
R26862:26865 Coq.Init.Datatypes <> Some constr
R26867:26868 compcert.common.Memtype <> m2 var
ax 26929:26946 MEM valid_block_free_2
R27000:27005 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27032:27035 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27036:27046 compcert.common.Memtype MEM valid_block def
R27051:27051 compcert.common.Memtype <> b var
R27048:27049 compcert.common.Memtype <> m1 var
R27016:27026 compcert.common.Memtype MEM valid_block def
R27031:27031 compcert.common.Memtype <> b var
R27028:27029 compcert.common.Memtype <> m2 var
R26990:26992 Coq.Init.Logic <> :type_scope:x_'='_x not
R26974:26977 compcert.common.Memtype MEM free defax
R26988:26989 compcert.common.Memtype <> hi var
R26985:26986 compcert.common.Memtype <> lo var
R26982:26983 compcert.common.Memtype <> bf var
R26979:26980 compcert.common.Memtype <> m1 var
R26993:26996 Coq.Init.Datatypes <> Some constr
R26998:26999 compcert.common.Memtype <> m2 var
ax 27102:27112 MEM perm_free_1
R27166:27171 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27224:27229 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27247:27252 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27253:27256 compcert.common.Memtype MEM perm defax
R27269:27269 compcert.common.Memtype <> p var
R27267:27267 compcert.common.Memtype <> k var
R27263:27265 compcert.common.Memtype <> ofs var
R27261:27261 compcert.common.Memtype <> b var
R27258:27259 compcert.common.Memtype <> m2 var
R27230:27233 compcert.common.Memtype MEM perm defax
R27246:27246 compcert.common.Memtype <> p var
R27244:27244 compcert.common.Memtype <> k var
R27240:27242 compcert.common.Memtype <> ofs var
R27238:27238 compcert.common.Memtype <> b var
R27235:27236 compcert.common.Memtype <> m1 var
R27199:27202 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27193:27196 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R27192:27192 compcert.common.Memtype <> b var
R27197:27198 compcert.common.Memtype <> bf var
R27211:27214 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27206:27208 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R27203:27205 compcert.common.Memtype <> ofs var
R27209:27210 compcert.common.Memtype <> lo var
R27217:27220 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R27215:27216 compcert.common.Memtype <> hi var
R27221:27223 compcert.common.Memtype <> ofs var
R27156:27158 Coq.Init.Logic <> :type_scope:x_'='_x not
R27140:27143 compcert.common.Memtype MEM free defax
R27154:27155 compcert.common.Memtype <> hi var
R27151:27152 compcert.common.Memtype <> lo var
R27148:27149 compcert.common.Memtype <> bf var
R27145:27146 compcert.common.Memtype <> m1 var
R27159:27162 Coq.Init.Datatypes <> Some constr
R27164:27165 compcert.common.Memtype <> m2 var
ax 27278:27288 MEM perm_free_2
R27342:27347 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27378:27381 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27382:27383 Coq.Init.Logic <> :type_scope:'~'_x not
R27384:27387 compcert.common.Memtype MEM perm defax
R27401:27401 compcert.common.Memtype <> p var
R27399:27399 compcert.common.Memtype <> k var
R27395:27397 compcert.common.Memtype <> ofs var
R27392:27393 compcert.common.Memtype <> bf var
R27389:27390 compcert.common.Memtype <> m2 var
R27366:27369 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R27373:27375 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R27364:27365 compcert.common.Memtype <> lo var
R27370:27372 compcert.common.Memtype <> ofs var
R27370:27372 compcert.common.Memtype <> ofs var
R27376:27377 compcert.common.Memtype <> hi var
R27332:27334 Coq.Init.Logic <> :type_scope:x_'='_x not
R27316:27319 compcert.common.Memtype MEM free defax
R27330:27331 compcert.common.Memtype <> hi var
R27327:27328 compcert.common.Memtype <> lo var
R27324:27325 compcert.common.Memtype <> bf var
R27321:27322 compcert.common.Memtype <> m1 var
R27335:27338 Coq.Init.Datatypes <> Some constr
R27340:27341 compcert.common.Memtype <> m2 var
ax 27410:27420 MEM perm_free_3
R27474:27479 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27517:27520 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27521:27524 compcert.common.Memtype MEM perm defax
R27537:27537 compcert.common.Memtype <> p var
R27535:27535 compcert.common.Memtype <> k var
R27531:27533 compcert.common.Memtype <> ofs var
R27529:27529 compcert.common.Memtype <> b var
R27526:27527 compcert.common.Memtype <> m1 var
R27500:27503 compcert.common.Memtype MEM perm defax
R27516:27516 compcert.common.Memtype <> p var
R27514:27514 compcert.common.Memtype <> k var
R27510:27512 compcert.common.Memtype <> ofs var
R27508:27508 compcert.common.Memtype <> b var
R27505:27506 compcert.common.Memtype <> m2 var
R27464:27466 Coq.Init.Logic <> :type_scope:x_'='_x not
R27448:27451 compcert.common.Memtype MEM free defax
R27462:27463 compcert.common.Memtype <> hi var
R27459:27460 compcert.common.Memtype <> lo var
R27456:27457 compcert.common.Memtype <> bf var
R27453:27454 compcert.common.Memtype <> m1 var
R27467:27470 Coq.Init.Datatypes <> Some constr
R27472:27473 compcert.common.Memtype <> m2 var
ax 27592:27610 MEM valid_access_free_1
R27664:27669 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27723:27728 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27793:27798 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27799:27810 compcert.common.Memtype MEM valid_access def
R27827:27827 compcert.common.Memtype <> p var
R27823:27825 compcert.common.Memtype <> ofs var
R27821:27821 compcert.common.Memtype <> b var
R27815:27819 compcert.common.Memtype <> chunk var
R27812:27813 compcert.common.Memtype <> m2 var
R27736:27739 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27730:27733 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R27729:27729 compcert.common.Memtype <> b var
R27734:27735 compcert.common.Memtype <> bf var
R27748:27751 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27742:27745 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R27740:27741 compcert.common.Memtype <> lo var
R27746:27747 compcert.common.Memtype <> hi var
R27780:27783 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27774:27777 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R27755:27757 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27752:27754 compcert.common.Memtype <> ofs var
R27758:27767 compcert.common.Memdata <> size_chunk def
R27769:27773 compcert.common.Memtype <> chunk var
R27778:27779 compcert.common.Memtype <> lo var
R27786:27789 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R27784:27785 compcert.common.Memtype <> hi var
R27790:27792 compcert.common.Memtype <> ofs var
R27694:27705 compcert.common.Memtype MEM valid_access def
R27722:27722 compcert.common.Memtype <> p var
R27718:27720 compcert.common.Memtype <> ofs var
R27716:27716 compcert.common.Memtype <> b var
R27710:27714 compcert.common.Memtype <> chunk var
R27707:27708 compcert.common.Memtype <> m1 var
R27654:27656 Coq.Init.Logic <> :type_scope:x_'='_x not
R27638:27641 compcert.common.Memtype MEM free defax
R27652:27653 compcert.common.Memtype <> hi var
R27649:27650 compcert.common.Memtype <> lo var
R27646:27647 compcert.common.Memtype <> bf var
R27643:27644 compcert.common.Memtype <> m1 var
R27657:27660 Coq.Init.Datatypes <> Some constr
R27662:27663 compcert.common.Memtype <> m2 var
ax 27836:27854 MEM valid_access_free_2
R27908:27913 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27943:27946 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27974:27977 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27986:27991 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27992:27993 Coq.Init.Logic <> :type_scope:'~'_x not
R28024:28024 Coq.Init.Logic <> :type_scope:'~'_x not
R27994:28005 compcert.common.Memtype MEM valid_access def
R28023:28023 compcert.common.Memtype <> p var
R28019:28021 compcert.common.Memtype <> ofs var
R28016:28017 compcert.common.Memtype <> bf var
R28010:28014 compcert.common.Memtype <> chunk var
R28007:28008 compcert.common.Memtype <> m2 var
R27981:27983 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R27978:27980 compcert.common.Memtype <> ofs var
R27984:27985 compcert.common.Memtype <> hi var
R27969:27971 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R27950:27952 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27947:27949 compcert.common.Memtype <> ofs var
R27953:27962 compcert.common.Memdata <> size_chunk def
R27964:27968 compcert.common.Memtype <> chunk var
R27972:27973 compcert.common.Memtype <> lo var
R27938:27940 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R27936:27937 compcert.common.Memtype <> lo var
R27941:27942 compcert.common.Memtype <> hi var
R27898:27900 Coq.Init.Logic <> :type_scope:x_'='_x not
R27882:27885 compcert.common.Memtype MEM free defax
R27896:27897 compcert.common.Memtype <> hi var
R27893:27894 compcert.common.Memtype <> lo var
R27890:27891 compcert.common.Memtype <> bf var
R27887:27888 compcert.common.Memtype <> m1 var
R27901:27904 Coq.Init.Datatypes <> Some constr
R27906:27907 compcert.common.Memtype <> m2 var
ax 28033:28055 MEM valid_access_free_inv_1
R28109:28114 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28168:28173 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28174:28185 compcert.common.Memtype MEM valid_access def
R28202:28202 compcert.common.Memtype <> p var
R28198:28200 compcert.common.Memtype <> ofs var
R28196:28196 compcert.common.Memtype <> b var
R28190:28194 compcert.common.Memtype <> chunk var
R28187:28188 compcert.common.Memtype <> m1 var
R28139:28150 compcert.common.Memtype MEM valid_access def
R28167:28167 compcert.common.Memtype <> p var
R28163:28165 compcert.common.Memtype <> ofs var
R28161:28161 compcert.common.Memtype <> b var
R28155:28159 compcert.common.Memtype <> chunk var
R28152:28153 compcert.common.Memtype <> m2 var
R28099:28101 Coq.Init.Logic <> :type_scope:x_'='_x not
R28083:28086 compcert.common.Memtype MEM free defax
R28097:28098 compcert.common.Memtype <> hi var
R28094:28095 compcert.common.Memtype <> lo var
R28091:28092 compcert.common.Memtype <> bf var
R28088:28089 compcert.common.Memtype <> m1 var
R28102:28105 Coq.Init.Datatypes <> Some constr
R28107:28108 compcert.common.Memtype <> m2 var
ax 28211:28233 MEM valid_access_free_inv_2
R28287:28292 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28345:28350 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28359:28362 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28353:28356 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R28351:28352 compcert.common.Memtype <> lo var
R28357:28358 compcert.common.Memtype <> hi var
R28391:28394 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28385:28388 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R28366:28368 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28363:28365 compcert.common.Memtype <> ofs var
R28369:28378 compcert.common.Memdata <> size_chunk def
R28380:28384 compcert.common.Memtype <> chunk var
R28389:28390 compcert.common.Memtype <> lo var
R28397:28400 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R28395:28396 compcert.common.Memtype <> hi var
R28401:28403 compcert.common.Memtype <> ofs var
R28315:28326 compcert.common.Memtype MEM valid_access def
R28344:28344 compcert.common.Memtype <> p var
R28340:28342 compcert.common.Memtype <> ofs var
R28337:28338 compcert.common.Memtype <> bf var
R28331:28335 compcert.common.Memtype <> chunk var
R28328:28329 compcert.common.Memtype <> m2 var
R28277:28279 Coq.Init.Logic <> :type_scope:x_'='_x not
R28261:28264 compcert.common.Memtype MEM free defax
R28275:28276 compcert.common.Memtype <> hi var
R28272:28273 compcert.common.Memtype <> lo var
R28269:28270 compcert.common.Memtype <> bf var
R28266:28267 compcert.common.Memtype <> m1 var
R28280:28283 Coq.Init.Datatypes <> Some constr
R28285:28286 compcert.common.Memtype <> m2 var
ax 28442:28450 MEM load_free
R28504:28509 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28596:28601 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28621:28623 Coq.Init.Logic <> :type_scope:x_'='_x not
R28602:28605 compcert.common.Memtype MEM load defax
R28618:28620 compcert.common.Memtype <> ofs var
R28616:28616 compcert.common.Memtype <> b var
R28613:28614 compcert.common.Memtype <> m2 var
R28607:28611 compcert.common.Memtype <> chunk var
R28624:28627 compcert.common.Memtype MEM load defax
R28640:28642 compcert.common.Memtype <> ofs var
R28638:28638 compcert.common.Memtype <> b var
R28635:28636 compcert.common.Memtype <> m1 var
R28629:28633 compcert.common.Memtype <> chunk var
R28539:28542 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28533:28536 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R28532:28532 compcert.common.Memtype <> b var
R28537:28538 compcert.common.Memtype <> bf var
R28551:28554 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28545:28548 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R28543:28544 compcert.common.Memtype <> lo var
R28549:28550 compcert.common.Memtype <> hi var
R28583:28586 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28577:28580 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R28558:28560 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28555:28557 compcert.common.Memtype <> ofs var
R28561:28570 compcert.common.Memdata <> size_chunk def
R28572:28576 compcert.common.Memtype <> chunk var
R28581:28582 compcert.common.Memtype <> lo var
R28589:28592 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R28587:28588 compcert.common.Memtype <> hi var
R28593:28595 compcert.common.Memtype <> ofs var
R28494:28496 Coq.Init.Logic <> :type_scope:x_'='_x not
R28478:28481 compcert.common.Memtype MEM free defax
R28492:28493 compcert.common.Memtype <> hi var
R28489:28490 compcert.common.Memtype <> lo var
R28486:28487 compcert.common.Memtype <> bf var
R28483:28484 compcert.common.Memtype <> m1 var
R28497:28500 Coq.Init.Datatypes <> Some constr
R28502:28503 compcert.common.Memtype <> m2 var
ax 28690:28703 MEM nextblock_drop
R28762:28767 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28780:28782 Coq.Init.Logic <> :type_scope:x_'='_x not
R28768:28776 compcert.common.Memtype MEM nextblock defax
R28778:28779 compcert.common.Memtype <> m' var
R28783:28791 compcert.common.Memtype MEM nextblock defax
R28793:28793 compcert.common.Memtype <> m var
R28752:28754 Coq.Init.Logic <> :type_scope:x_'='_x not
R28731:28739 compcert.common.Memtype MEM drop_perm defax
R28751:28751 compcert.common.Memtype <> p var
R28748:28749 compcert.common.Memtype <> hi var
R28745:28746 compcert.common.Memtype <> lo var
R28743:28743 compcert.common.Memtype <> b var
R28741:28741 compcert.common.Memtype <> m var
R28755:28758 Coq.Init.Datatypes <> Some constr
R28760:28761 compcert.common.Memtype <> m' var
ax 28802:28824 MEM drop_perm_valid_block_1
R28883:28888 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28916:28919 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28920:28930 compcert.common.Memtype MEM valid_block def
R28935:28936 compcert.common.Memtype <> b' var
R28932:28933 compcert.common.Memtype <> m' var
R28900:28910 compcert.common.Memtype MEM valid_block def
R28914:28915 compcert.common.Memtype <> b' var
R28912:28912 compcert.common.Memtype <> m var
R28873:28875 Coq.Init.Logic <> :type_scope:x_'='_x not
R28852:28860 compcert.common.Memtype MEM drop_perm defax
R28872:28872 compcert.common.Memtype <> p var
R28869:28870 compcert.common.Memtype <> hi var
R28866:28867 compcert.common.Memtype <> lo var
R28864:28864 compcert.common.Memtype <> b var
R28862:28862 compcert.common.Memtype <> m var
R28876:28879 Coq.Init.Datatypes <> Some constr
R28881:28882 compcert.common.Memtype <> m' var
ax 28945:28967 MEM drop_perm_valid_block_2
R29026:29031 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29060:29063 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29064:29074 compcert.common.Memtype MEM valid_block def
R29078:29079 compcert.common.Memtype <> b' var
R29076:29076 compcert.common.Memtype <> m var
R29043:29053 compcert.common.Memtype MEM valid_block def
R29058:29059 compcert.common.Memtype <> b' var
R29055:29056 compcert.common.Memtype <> m' var
R29016:29018 Coq.Init.Logic <> :type_scope:x_'='_x not
R28995:29003 compcert.common.Memtype MEM drop_perm defax
R29015:29015 compcert.common.Memtype <> p var
R29012:29013 compcert.common.Memtype <> hi var
R29009:29010 compcert.common.Memtype <> lo var
R29007:29007 compcert.common.Memtype <> b var
R29005:29005 compcert.common.Memtype <> m var
R29019:29022 Coq.Init.Datatypes <> Some constr
R29024:29025 compcert.common.Memtype <> m' var
ax 29089:29105 MEM range_perm_drop_1
R29164:29169 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29170:29179 compcert.common.Memtype MEM range_perm def
R29195:29202 compcert.common.Memtype MEM Freeable constr
R29191:29193 compcert.common.Memtype MEM Cur constr
R29188:29189 compcert.common.Memtype <> hi var
R29185:29186 compcert.common.Memtype <> lo var
R29183:29183 compcert.common.Memtype <> b var
R29181:29181 compcert.common.Memtype <> m var
R29154:29156 Coq.Init.Logic <> :type_scope:x_'='_x not
R29133:29141 compcert.common.Memtype MEM drop_perm defax
R29153:29153 compcert.common.Memtype <> p var
R29150:29151 compcert.common.Memtype <> hi var
R29147:29148 compcert.common.Memtype <> lo var
R29145:29145 compcert.common.Memtype <> b var
R29143:29143 compcert.common.Memtype <> m var
R29157:29160 Coq.Init.Datatypes <> Some constr
R29162:29163 compcert.common.Memtype <> m' var
ax 29211:29227 MEM range_perm_drop_2
R29287:29290 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29291:29292 Coq.Init.Specif <> :type_scope:'{'_x_'|'_x_'}' not
R29295:29297 Coq.Init.Specif <> :type_scope:'{'_x_'|'_x_'}' not
R29329:29330 Coq.Init.Specif <> :type_scope:'{'_x_'|'_x_'}' not
R29319:29321 Coq.Init.Logic <> :type_scope:x_'='_x not
R29298:29306 compcert.common.Memtype MEM drop_perm defax
R29318:29318 compcert.common.Memtype <> p var
R29315:29316 compcert.common.Memtype <> hi var
R29312:29313 compcert.common.Memtype <> lo var
R29310:29310 compcert.common.Memtype <> b var
R29308:29308 compcert.common.Memtype <> m var
R29322:29325 Coq.Init.Datatypes <> Some constr
R29254:29263 compcert.common.Memtype MEM range_perm def
R29279:29286 compcert.common.Memtype MEM Freeable constr
R29275:29277 compcert.common.Memtype MEM Cur constr
R29272:29273 compcert.common.Memtype <> hi var
R29269:29270 compcert.common.Memtype <> lo var
R29267:29267 compcert.common.Memtype <> b var
R29265:29265 compcert.common.Memtype <> m var
ax 29340:29350 MEM perm_drop_1
R29409:29414 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29443:29446 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29447:29450 compcert.common.Memtype MEM perm defax
R29463:29463 compcert.common.Memtype <> p var
R29461:29461 compcert.common.Memtype <> k var
R29457:29459 compcert.common.Memtype <> ofs var
R29455:29455 compcert.common.Memtype <> b var
R29452:29453 compcert.common.Memtype <> m' var
R29431:29434 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R29438:29440 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R29429:29430 compcert.common.Memtype <> lo var
R29435:29437 compcert.common.Memtype <> ofs var
R29435:29437 compcert.common.Memtype <> ofs var
R29441:29442 compcert.common.Memtype <> hi var
R29399:29401 Coq.Init.Logic <> :type_scope:x_'='_x not
R29378:29386 compcert.common.Memtype MEM drop_perm defax
R29398:29398 compcert.common.Memtype <> p var
R29395:29396 compcert.common.Memtype <> hi var
R29392:29393 compcert.common.Memtype <> lo var
R29390:29390 compcert.common.Memtype <> b var
R29388:29388 compcert.common.Memtype <> m var
R29402:29405 Coq.Init.Datatypes <> Some constr
R29407:29408 compcert.common.Memtype <> m' var
ax 29472:29482 MEM perm_drop_2
R29541:29546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29578:29581 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29600:29603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29604:29613 compcert.common.Memtype MEM perm_order ind
R29617:29618 compcert.common.Memtype <> p' var
R29615:29615 compcert.common.Memtype <> p var
R29582:29585 compcert.common.Memtype MEM perm defax
R29598:29599 compcert.common.Memtype <> p' var
R29596:29596 compcert.common.Memtype <> k var
R29592:29594 compcert.common.Memtype <> ofs var
R29590:29590 compcert.common.Memtype <> b var
R29587:29588 compcert.common.Memtype <> m' var
R29566:29569 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R29573:29575 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R29564:29565 compcert.common.Memtype <> lo var
R29570:29572 compcert.common.Memtype <> ofs var
R29570:29572 compcert.common.Memtype <> ofs var
R29576:29577 compcert.common.Memtype <> hi var
R29531:29533 Coq.Init.Logic <> :type_scope:x_'='_x not
R29510:29518 compcert.common.Memtype MEM drop_perm defax
R29530:29530 compcert.common.Memtype <> p var
R29527:29528 compcert.common.Memtype <> hi var
R29524:29525 compcert.common.Memtype <> lo var
R29522:29522 compcert.common.Memtype <> b var
R29520:29520 compcert.common.Memtype <> m var
R29534:29537 Coq.Init.Datatypes <> Some constr
R29539:29540 compcert.common.Memtype <> m' var
ax 29627:29637 MEM perm_drop_3
R29696:29701 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29754:29757 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29776:29779 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29780:29783 compcert.common.Memtype MEM perm defax
R29797:29798 compcert.common.Memtype <> p' var
R29795:29795 compcert.common.Memtype <> k var
R29791:29793 compcert.common.Memtype <> ofs var
R29788:29789 compcert.common.Memtype <> b' var
R29785:29786 compcert.common.Memtype <> m' var
R29758:29761 compcert.common.Memtype MEM perm defax
R29774:29775 compcert.common.Memtype <> p' var
R29772:29772 compcert.common.Memtype <> k var
R29768:29770 compcert.common.Memtype <> ofs var
R29765:29766 compcert.common.Memtype <> b' var
R29763:29763 compcert.common.Memtype <> m var
R29729:29732 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R29724:29727 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R29722:29723 compcert.common.Memtype <> b' var
R29728:29728 compcert.common.Memtype <> b var
R29741:29744 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R29736:29738 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R29733:29735 compcert.common.Memtype <> ofs var
R29739:29740 compcert.common.Memtype <> lo var
R29747:29750 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R29745:29746 compcert.common.Memtype <> hi var
R29751:29753 compcert.common.Memtype <> ofs var
R29686:29688 Coq.Init.Logic <> :type_scope:x_'='_x not
R29665:29673 compcert.common.Memtype MEM drop_perm defax
R29685:29685 compcert.common.Memtype <> p var
R29682:29683 compcert.common.Memtype <> hi var
R29679:29680 compcert.common.Memtype <> lo var
R29677:29677 compcert.common.Memtype <> b var
R29675:29675 compcert.common.Memtype <> m var
R29689:29692 Coq.Init.Datatypes <> Some constr
R29694:29695 compcert.common.Memtype <> m' var
ax 29807:29817 MEM perm_drop_4
R29876:29881 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29921:29924 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29925:29928 compcert.common.Memtype MEM perm defax
R29941:29942 compcert.common.Memtype <> p' var
R29939:29939 compcert.common.Memtype <> k var
R29935:29937 compcert.common.Memtype <> ofs var
R29932:29933 compcert.common.Memtype <> b' var
R29930:29930 compcert.common.Memtype <> m var
R29902:29905 compcert.common.Memtype MEM perm defax
R29919:29920 compcert.common.Memtype <> p' var
R29917:29917 compcert.common.Memtype <> k var
R29913:29915 compcert.common.Memtype <> ofs var
R29910:29911 compcert.common.Memtype <> b' var
R29907:29908 compcert.common.Memtype <> m' var
R29866:29868 Coq.Init.Logic <> :type_scope:x_'='_x not
R29845:29853 compcert.common.Memtype MEM drop_perm defax
R29865:29865 compcert.common.Memtype <> p var
R29862:29863 compcert.common.Memtype <> hi var
R29859:29860 compcert.common.Memtype <> lo var
R29857:29857 compcert.common.Memtype <> b var
R29855:29855 compcert.common.Memtype <> m var
R29869:29872 Coq.Init.Datatypes <> Some constr
R29874:29875 compcert.common.Memtype <> m' var
ax 29952:29960 MEM load_drop
R30019:30024 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30125:30130 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30151:30153 Coq.Init.Logic <> :type_scope:x_'='_x not
R30131:30134 compcert.common.Memtype MEM load defax
R30148:30150 compcert.common.Memtype <> ofs var
R30145:30146 compcert.common.Memtype <> b' var
R30142:30143 compcert.common.Memtype <> m' var
R30136:30140 compcert.common.Memtype <> chunk var
R30154:30157 compcert.common.Memtype MEM load defax
R30170:30172 compcert.common.Memtype <> ofs var
R30167:30168 compcert.common.Memtype <> b' var
R30165:30165 compcert.common.Memtype <> m var
R30159:30163 compcert.common.Memtype <> chunk var
R30055:30058 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30050:30053 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R30048:30049 compcert.common.Memtype <> b' var
R30054:30054 compcert.common.Memtype <> b var
R30087:30090 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30081:30084 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R30062:30064 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R30059:30061 compcert.common.Memtype <> ofs var
R30065:30074 compcert.common.Memdata <> size_chunk def
R30076:30080 compcert.common.Memtype <> chunk var
R30085:30086 compcert.common.Memtype <> lo var
R30100:30103 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30093:30096 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R30091:30092 compcert.common.Memtype <> hi var
R30097:30099 compcert.common.Memtype <> ofs var
R30104:30113 compcert.common.Memtype MEM perm_order ind
R30117:30124 compcert.common.Memtype MEM Readable constr
R30115:30115 compcert.common.Memtype <> p var
R30009:30011 Coq.Init.Logic <> :type_scope:x_'='_x not
R29988:29996 compcert.common.Memtype MEM drop_perm defax
R30008:30008 compcert.common.Memtype <> p var
R30005:30006 compcert.common.Memtype <> hi var
R30002:30003 compcert.common.Memtype <> lo var
R30000:30000 compcert.common.Memtype <> b var
R29998:29998 compcert.common.Memtype <> m var
R30012:30015 Coq.Init.Datatypes <> Some constr
R30017:30018 compcert.common.Memtype <> m' var
ax 30531:30537 MEM extends
R30543:30546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30550:30553 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30547:30549 compcert.common.Memtype MEM mem defax
R30540:30542 compcert.common.Memtype MEM mem defax
ax 30567:30578 MEM extends_refl
R30593:30599 compcert.common.Memtype MEM extends defax
R30603:30603 compcert.common.Memtype <> m var
R30601:30601 compcert.common.Memtype <> m var
ax 30613:30624 MEM load_extends
R30673:30678 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30708:30713 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30714:30720 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30723:30724 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30754:30757 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30744:30746 Coq.Init.Logic <> :type_scope:x_'='_x not
R30725:30728 compcert.common.Memtype MEM load defax
R30741:30743 compcert.common.Memtype <> ofs var
R30739:30739 compcert.common.Memtype <> b var
R30736:30737 compcert.common.Memtype <> m2 var
R30730:30734 compcert.common.Memtype <> chunk var
R30747:30750 Coq.Init.Datatypes <> Some constr
R30752:30753 compcert.common.Memtype <> v2 var
R30758:30768 compcert.common.Values Val lessdef ind
R30773:30774 compcert.common.Memtype <> v2 var
R30770:30771 compcert.common.Memtype <> v1 var
R30698:30700 Coq.Init.Logic <> :type_scope:x_'='_x not
R30679:30682 compcert.common.Memtype MEM load defax
R30695:30697 compcert.common.Memtype <> ofs var
R30693:30693 compcert.common.Memtype <> b var
R30690:30691 compcert.common.Memtype <> m1 var
R30684:30688 compcert.common.Memtype <> chunk var
R30701:30704 Coq.Init.Datatypes <> Some constr
R30706:30707 compcert.common.Memtype <> v1 var
R30660:30666 compcert.common.Memtype MEM extends defax
R30671:30672 compcert.common.Memtype <> m2 var
R30668:30669 compcert.common.Memtype <> m1 var
ax 30784:30796 MEM loadv_extends
R30851:30856 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30887:30892 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30916:30921 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30922:30928 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30931:30932 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30963:30966 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30953:30955 Coq.Init.Logic <> :type_scope:x_'='_x not
R30933:30937 compcert.common.Memtype MEM loadv def
R30948:30952 compcert.common.Memtype <> addr2 var
R30945:30946 compcert.common.Memtype <> m2 var
R30939:30943 compcert.common.Memtype <> chunk var
R30956:30959 Coq.Init.Datatypes <> Some constr
R30961:30962 compcert.common.Memtype <> v2 var
R30967:30977 compcert.common.Values Val lessdef ind
R30982:30983 compcert.common.Memtype <> v2 var
R30979:30980 compcert.common.Memtype <> v1 var
R30893:30903 compcert.common.Values Val lessdef ind
R30911:30915 compcert.common.Memtype <> addr2 var
R30905:30909 compcert.common.Memtype <> addr1 var
R30877:30879 Coq.Init.Logic <> :type_scope:x_'='_x not
R30857:30861 compcert.common.Memtype MEM loadv def
R30872:30876 compcert.common.Memtype <> addr1 var
R30869:30870 compcert.common.Memtype <> m1 var
R30863:30867 compcert.common.Memtype <> chunk var
R30880:30883 Coq.Init.Datatypes <> Some constr
R30885:30886 compcert.common.Memtype <> v1 var
R30838:30844 compcert.common.Memtype MEM extends defax
R30849:30850 compcert.common.Memtype <> m2 var
R30846:30847 compcert.common.Memtype <> m1 var
ax 30993:31009 MEM loadbytes_extends
R31060:31065 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31102:31107 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31108:31114 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31121:31122 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31159:31176 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31145:31147 Coq.Init.Logic <> :type_scope:x_'='_x not
R31123:31131 compcert.common.Memtype MEM loadbytes defax
R31142:31144 compcert.common.Memtype <> len var
R31138:31140 compcert.common.Memtype <> ofs var
R31136:31136 compcert.common.Memtype <> b var
R31133:31134 compcert.common.Memtype <> m2 var
R31148:31151 Coq.Init.Datatypes <> Some constr
R31153:31158 compcert.common.Memtype <> bytes2 var
R31177:31188 compcert.lib.Coqlib <> list_forall2 ind
R31212:31217 compcert.common.Memtype <> bytes2 var
R31205:31210 compcert.common.Memtype <> bytes1 var
R31190:31203 compcert.common.Memdata <> memval_lessdef def
R31088:31090 Coq.Init.Logic <> :type_scope:x_'='_x not
R31066:31074 compcert.common.Memtype MEM loadbytes defax
R31085:31087 compcert.common.Memtype <> len var
R31081:31083 compcert.common.Memtype <> ofs var
R31079:31079 compcert.common.Memtype <> b var
R31076:31077 compcert.common.Memtype <> m1 var
R31091:31094 Coq.Init.Datatypes <> Some constr
R31096:31101 compcert.common.Memtype <> bytes1 var
R31047:31053 compcert.common.Memtype MEM extends defax
R31058:31059 compcert.common.Memtype <> m2 var
R31055:31056 compcert.common.Memtype <> m1 var
ax 31227:31246 MEM store_within_extends
R31302:31307 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31342:31347 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31365:31370 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31371:31377 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31381:31387 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31422:31427 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31411:31413 Coq.Init.Logic <> :type_scope:x_'='_x not
R31388:31392 compcert.common.Memtype MEM store defax
R31409:31410 compcert.common.Memtype <> v2 var
R31405:31407 compcert.common.Memtype <> ofs var
R31403:31403 compcert.common.Memtype <> b var
R31400:31401 compcert.common.Memtype <> m2 var
R31394:31398 compcert.common.Memtype <> chunk var
R31414:31417 Coq.Init.Datatypes <> Some constr
R31419:31421 compcert.common.Memtype <> m2' var
R31428:31434 compcert.common.Memtype MEM extends defax
R31440:31442 compcert.common.Memtype <> m2' var
R31436:31438 compcert.common.Memtype <> m1' var
R31348:31358 compcert.common.Values Val lessdef ind
R31363:31364 compcert.common.Memtype <> v2 var
R31360:31361 compcert.common.Memtype <> v1 var
R31331:31333 Coq.Init.Logic <> :type_scope:x_'='_x not
R31308:31312 compcert.common.Memtype MEM store defax
R31329:31330 compcert.common.Memtype <> v1 var
R31325:31327 compcert.common.Memtype <> ofs var
R31323:31323 compcert.common.Memtype <> b var
R31320:31321 compcert.common.Memtype <> m1 var
R31314:31318 compcert.common.Memtype <> chunk var
R31334:31337 Coq.Init.Datatypes <> Some constr
R31339:31341 compcert.common.Memtype <> m1' var
R31289:31295 compcert.common.Memtype MEM extends defax
R31300:31301 compcert.common.Memtype <> m2 var
R31297:31298 compcert.common.Memtype <> m1 var
ax 31452:31472 MEM store_outside_extends
R31524:31529 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31563:31568 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31569:31569 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31659:31665 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31666:31672 compcert.common.Memtype MEM extends defax
R31677:31679 compcert.common.Memtype <> m2' var
R31674:31675 compcert.common.Memtype <> m1 var
R31610:31613 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31650:31653 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31654:31658 Coq.Init.Logic <> False ind
R31617:31620 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R31625:31627 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R31614:31616 compcert.common.Memtype <> ofs var
R31621:31624 compcert.common.Memtype <> ofs' var
R31621:31624 compcert.common.Memtype <> ofs' var
R31631:31633 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R31628:31630 compcert.common.Memtype <> ofs var
R31634:31643 compcert.common.Memdata <> size_chunk def
R31645:31649 compcert.common.Memtype <> chunk var
R31583:31586 compcert.common.Memtype MEM perm defax
R31602:31609 compcert.common.Memtype MEM Readable constr
R31598:31600 compcert.common.Memtype MEM Cur constr
R31593:31596 compcert.common.Memtype <> ofs' var
R31591:31591 compcert.common.Memtype <> b var
R31588:31589 compcert.common.Memtype <> m1 var
R31552:31554 Coq.Init.Logic <> :type_scope:x_'='_x not
R31530:31534 compcert.common.Memtype MEM store defax
R31551:31551 compcert.common.Memtype <> v var
R31547:31549 compcert.common.Memtype <> ofs var
R31545:31545 compcert.common.Memtype <> b var
R31542:31543 compcert.common.Memtype <> m2 var
R31536:31540 compcert.common.Memtype <> chunk var
R31555:31558 Coq.Init.Datatypes <> Some constr
R31560:31562 compcert.common.Memtype <> m2' var
R31511:31517 compcert.common.Memtype MEM extends defax
R31522:31523 compcert.common.Memtype <> m2 var
R31519:31520 compcert.common.Memtype <> m1 var
ax 31689:31702 MEM storev_extends
R31764:31769 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31805:31810 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31834:31839 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31857:31862 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31863:31869 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31873:31879 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31915:31920 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31904:31906 Coq.Init.Logic <> :type_scope:x_'='_x not
R31880:31885 compcert.common.Memtype MEM storev def
R31902:31903 compcert.common.Memtype <> v2 var
R31896:31900 compcert.common.Memtype <> addr2 var
R31893:31894 compcert.common.Memtype <> m2 var
R31887:31891 compcert.common.Memtype <> chunk var
R31907:31910 Coq.Init.Datatypes <> Some constr
R31912:31914 compcert.common.Memtype <> m2' var
R31921:31927 compcert.common.Memtype MEM extends defax
R31933:31935 compcert.common.Memtype <> m2' var
R31929:31931 compcert.common.Memtype <> m1' var
R31840:31850 compcert.common.Values Val lessdef ind
R31855:31856 compcert.common.Memtype <> v2 var
R31852:31853 compcert.common.Memtype <> v1 var
R31811:31821 compcert.common.Values Val lessdef ind
R31829:31833 compcert.common.Memtype <> addr2 var
R31823:31827 compcert.common.Memtype <> addr1 var
R31794:31796 Coq.Init.Logic <> :type_scope:x_'='_x not
R31770:31775 compcert.common.Memtype MEM storev def
R31792:31793 compcert.common.Memtype <> v1 var
R31786:31790 compcert.common.Memtype <> addr1 var
R31783:31784 compcert.common.Memtype <> m1 var
R31777:31781 compcert.common.Memtype <> chunk var
R31797:31800 Coq.Init.Datatypes <> Some constr
R31802:31804 compcert.common.Memtype <> m1' var
R31751:31757 compcert.common.Memtype MEM extends defax
R31762:31763 compcert.common.Memtype <> m2 var
R31759:31760 compcert.common.Memtype <> m1 var
ax 31945:31969 MEM storebytes_within_extends
R32027:32032 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32070:32075 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32117:32122 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32123:32129 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32133:32139 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32177:32182 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R32166:32168 Coq.Init.Logic <> :type_scope:x_'='_x not
R32140:32149 compcert.common.Memtype MEM storebytes defax
R32160:32165 compcert.common.Memtype <> bytes2 var
R32156:32158 compcert.common.Memtype <> ofs var
R32154:32154 compcert.common.Memtype <> b var
R32151:32152 compcert.common.Memtype <> m2 var
R32169:32172 Coq.Init.Datatypes <> Some constr
R32174:32176 compcert.common.Memtype <> m2' var
R32183:32189 compcert.common.Memtype MEM extends defax
R32195:32197 compcert.common.Memtype <> m2' var
R32191:32193 compcert.common.Memtype <> m1' var
R32076:32087 compcert.lib.Coqlib <> list_forall2 ind
R32111:32116 compcert.common.Memtype <> bytes2 var
R32104:32109 compcert.common.Memtype <> bytes1 var
R32089:32102 compcert.common.Memdata <> memval_lessdef def
R32059:32061 Coq.Init.Logic <> :type_scope:x_'='_x not
R32033:32042 compcert.common.Memtype MEM storebytes defax
R32053:32058 compcert.common.Memtype <> bytes1 var
R32049:32051 compcert.common.Memtype <> ofs var
R32047:32047 compcert.common.Memtype <> b var
R32044:32045 compcert.common.Memtype <> m1 var
R32062:32065 Coq.Init.Datatypes <> Some constr
R32067:32069 compcert.common.Memtype <> m1' var
R32014:32020 compcert.common.Memtype MEM extends defax
R32025:32026 compcert.common.Memtype <> m2 var
R32022:32023 compcert.common.Memtype <> m1 var
ax 32207:32232 MEM storebytes_outside_extends
R32283:32288 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32326:32331 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32332:32332 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32430:32436 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32437:32443 compcert.common.Memtype MEM extends defax
R32448:32450 compcert.common.Memtype <> m2' var
R32445:32446 compcert.common.Memtype <> m1 var
R32373:32376 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32421:32424 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32425:32429 Coq.Init.Logic <> False ind
R32380:32383 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R32388:32390 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R32377:32379 compcert.common.Memtype <> ofs var
R32384:32387 compcert.common.Memtype <> ofs' var
R32384:32387 compcert.common.Memtype <> ofs' var
R32394:32396 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R32391:32393 compcert.common.Memtype <> ofs var
R32397:32404 Coq.ZArith.BinInt <> Z_of_nat syndef
R32407:32412 Coq.Init.Datatypes <> length def
R32414:32419 compcert.common.Memtype <> bytes2 var
R32346:32349 compcert.common.Memtype MEM perm defax
R32365:32372 compcert.common.Memtype MEM Readable constr
R32361:32363 compcert.common.Memtype MEM Cur constr
R32356:32359 compcert.common.Memtype <> ofs' var
R32354:32354 compcert.common.Memtype <> b var
R32351:32352 compcert.common.Memtype <> m1 var
R32315:32317 Coq.Init.Logic <> :type_scope:x_'='_x not
R32289:32298 compcert.common.Memtype MEM storebytes defax
R32309:32314 compcert.common.Memtype <> bytes2 var
R32305:32307 compcert.common.Memtype <> ofs var
R32303:32303 compcert.common.Memtype <> b var
R32300:32301 compcert.common.Memtype <> m2 var
R32318:32321 Coq.Init.Datatypes <> Some constr
R32323:32325 compcert.common.Memtype <> m2' var
R32270:32276 compcert.common.Memtype MEM extends defax
R32281:32282 compcert.common.Memtype <> m2 var
R32278:32279 compcert.common.Memtype <> m1 var
ax 32460:32472 MEM alloc_extends
R32528:32533 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32561:32566 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32577:32580 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32591:32596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32597:32603 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32607:32613 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32641:32646 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R32630:32632 Coq.Init.Logic <> :type_scope:x_'='_x not
R32614:32618 compcert.common.Memtype MEM alloc defax
R32627:32629 compcert.common.Memtype <> hi2 var
R32623:32625 compcert.common.Memtype <> lo2 var
R32620:32621 compcert.common.Memtype <> m2 var
R32633:32633 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32637:32638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32640:32640 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32634:32636 compcert.common.Memtype <> m2' var
R32639:32639 compcert.common.Memtype <> b var
R32647:32653 compcert.common.Memtype MEM extends defax
R32659:32661 compcert.common.Memtype <> m2' var
R32655:32657 compcert.common.Memtype <> m1' var
R32584:32587 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R32581:32583 compcert.common.Memtype <> hi1 var
R32588:32590 compcert.common.Memtype <> hi2 var
R32570:32573 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R32567:32569 compcert.common.Memtype <> lo2 var
R32574:32576 compcert.common.Memtype <> lo1 var
R32550:32552 Coq.Init.Logic <> :type_scope:x_'='_x not
R32534:32538 compcert.common.Memtype MEM alloc defax
R32547:32549 compcert.common.Memtype <> hi1 var
R32543:32545 compcert.common.Memtype <> lo1 var
R32540:32541 compcert.common.Memtype <> m1 var
R32553:32553 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32557:32558 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32560:32560 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32554:32556 compcert.common.Memtype <> m1' var
R32559:32559 compcert.common.Memtype <> b var
R32515:32521 compcert.common.Memtype MEM extends defax
R32526:32527 compcert.common.Memtype <> m2 var
R32523:32524 compcert.common.Memtype <> m1 var
ax 32671:32687 MEM free_left_extends
R32733:32738 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32765:32770 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32771:32777 compcert.common.Memtype MEM extends defax
R32783:32784 compcert.common.Memtype <> m2 var
R32779:32781 compcert.common.Memtype <> m1' var
R32754:32756 Coq.Init.Logic <> :type_scope:x_'='_x not
R32739:32742 compcert.common.Memtype MEM free defax
R32752:32753 compcert.common.Memtype <> hi var
R32749:32750 compcert.common.Memtype <> lo var
R32747:32747 compcert.common.Memtype <> b var
R32744:32745 compcert.common.Memtype <> m1 var
R32757:32760 Coq.Init.Datatypes <> Some constr
R32762:32764 compcert.common.Memtype <> m1' var
R32720:32726 compcert.common.Memtype MEM extends defax
R32731:32732 compcert.common.Memtype <> m2 var
R32728:32729 compcert.common.Memtype <> m1 var
ax 32794:32811 MEM free_right_extends
R32857:32862 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32889:32894 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32895:32895 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32956:32962 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32963:32969 compcert.common.Memtype MEM extends defax
R32974:32976 compcert.common.Memtype <> m2' var
R32971:32972 compcert.common.Memtype <> m1 var
R32929:32932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32947:32950 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32951:32955 Coq.Init.Logic <> False ind
R32935:32938 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R32942:32944 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R32933:32934 compcert.common.Memtype <> lo var
R32939:32941 compcert.common.Memtype <> ofs var
R32939:32941 compcert.common.Memtype <> ofs var
R32945:32946 compcert.common.Memtype <> hi var
R32912:32915 compcert.common.Memtype MEM perm defax
R32928:32928 compcert.common.Memtype <> p var
R32926:32926 compcert.common.Memtype <> k var
R32922:32924 compcert.common.Memtype <> ofs var
R32920:32920 compcert.common.Memtype <> b var
R32917:32918 compcert.common.Memtype <> m1 var
R32878:32880 Coq.Init.Logic <> :type_scope:x_'='_x not
R32863:32866 compcert.common.Memtype MEM free defax
R32876:32877 compcert.common.Memtype <> hi var
R32873:32874 compcert.common.Memtype <> lo var
R32871:32871 compcert.common.Memtype <> b var
R32868:32869 compcert.common.Memtype <> m2 var
R32881:32884 Coq.Init.Datatypes <> Some constr
R32886:32888 compcert.common.Memtype <> m2' var
R32844:32850 compcert.common.Memtype MEM extends defax
R32855:32856 compcert.common.Memtype <> m2 var
R32852:32853 compcert.common.Memtype <> m1 var
ax 32986:33006 MEM free_parallel_extends
R33052:33057 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33084:33089 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33090:33096 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R33100:33106 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R33133:33138 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R33122:33124 Coq.Init.Logic <> :type_scope:x_'='_x not
R33107:33110 compcert.common.Memtype MEM free defax
R33120:33121 compcert.common.Memtype <> hi var
R33117:33118 compcert.common.Memtype <> lo var
R33115:33115 compcert.common.Memtype <> b var
R33112:33113 compcert.common.Memtype <> m2 var
R33125:33128 Coq.Init.Datatypes <> Some constr
R33130:33132 compcert.common.Memtype <> m2' var
R33139:33145 compcert.common.Memtype MEM extends defax
R33151:33153 compcert.common.Memtype <> m2' var
R33147:33149 compcert.common.Memtype <> m1' var
R33073:33075 Coq.Init.Logic <> :type_scope:x_'='_x not
R33058:33061 compcert.common.Memtype MEM free defax
R33071:33072 compcert.common.Memtype <> hi var
R33068:33069 compcert.common.Memtype <> lo var
R33066:33066 compcert.common.Memtype <> b var
R33063:33064 compcert.common.Memtype <> m1 var
R33076:33079 Coq.Init.Datatypes <> Some constr
R33081:33083 compcert.common.Memtype <> m1' var
R33039:33045 compcert.common.Memtype MEM extends defax
R33050:33051 compcert.common.Memtype <> m2 var
R33047:33048 compcert.common.Memtype <> m1 var
ax 33163:33181 MEM valid_block_extends
R33217:33223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33261:33261 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33240:33244 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R33224:33234 compcert.common.Memtype MEM valid_block def
R33239:33239 compcert.common.Memtype <> b var
R33236:33237 compcert.common.Memtype <> m1 var
R33245:33255 compcert.common.Memtype MEM valid_block def
R33260:33260 compcert.common.Memtype <> b var
R33257:33258 compcert.common.Memtype <> m2 var
R33204:33210 compcert.common.Memtype MEM extends defax
R33215:33216 compcert.common.Memtype <> m2 var
R33212:33213 compcert.common.Memtype <> m1 var
ax 33270:33281 MEM perm_extends
R33325:33328 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33346:33349 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33350:33353 compcert.common.Memtype MEM perm defax
R33366:33366 compcert.common.Memtype <> p var
R33364:33364 compcert.common.Memtype <> k var
R33360:33362 compcert.common.Memtype <> ofs var
R33358:33358 compcert.common.Memtype <> b var
R33355:33356 compcert.common.Memtype <> m2 var
R33329:33332 compcert.common.Memtype MEM perm defax
R33345:33345 compcert.common.Memtype <> p var
R33343:33343 compcert.common.Memtype <> k var
R33339:33341 compcert.common.Memtype <> ofs var
R33337:33337 compcert.common.Memtype <> b var
R33334:33335 compcert.common.Memtype <> m1 var
R33312:33318 compcert.common.Memtype MEM extends defax
R33323:33324 compcert.common.Memtype <> m2 var
R33320:33321 compcert.common.Memtype <> m1 var
ax 33375:33394 MEM valid_access_extends
R33442:33445 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33475:33478 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33479:33490 compcert.common.Memtype MEM valid_access def
R33507:33507 compcert.common.Memtype <> p var
R33503:33505 compcert.common.Memtype <> ofs var
R33501:33501 compcert.common.Memtype <> b var
R33495:33499 compcert.common.Memtype <> chunk var
R33492:33493 compcert.common.Memtype <> m2 var
R33446:33457 compcert.common.Memtype MEM valid_access def
R33474:33474 compcert.common.Memtype <> p var
R33470:33472 compcert.common.Memtype <> ofs var
R33468:33468 compcert.common.Memtype <> b var
R33462:33466 compcert.common.Memtype <> chunk var
R33459:33460 compcert.common.Memtype <> m1 var
R33429:33435 compcert.common.Memtype MEM extends defax
R33440:33441 compcert.common.Memtype <> m2 var
R33437:33438 compcert.common.Memtype <> m1 var
ax 33516:33536 MEM valid_pointer_extends
R33576:33579 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33609:33612 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33635:33637 Coq.Init.Logic <> :type_scope:x_'='_x not
R33613:33625 compcert.common.Memtype MEM valid_pointer defax
R33632:33634 compcert.common.Memtype <> ofs var
R33630:33630 compcert.common.Memtype <> b var
R33627:33628 compcert.common.Memtype <> m2 var
R33638:33641 Coq.Init.Datatypes <> true constr
R33602:33604 Coq.Init.Logic <> :type_scope:x_'='_x not
R33580:33592 compcert.common.Memtype MEM valid_pointer defax
R33599:33601 compcert.common.Memtype <> ofs var
R33597:33597 compcert.common.Memtype <> b var
R33594:33595 compcert.common.Memtype <> m1 var
R33605:33608 Coq.Init.Datatypes <> true constr
R33563:33569 compcert.common.Memtype MEM extends defax
R33574:33575 compcert.common.Memtype <> m2 var
R33571:33572 compcert.common.Memtype <> m1 var
ax 33650:33675 MEM weak_valid_pointer_extends
R33715:33720 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33755:33758 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33786:33788 Coq.Init.Logic <> :type_scope:x_'='_x not
R33759:33776 compcert.common.Memtype MEM weak_valid_pointer def
R33783:33785 compcert.common.Memtype <> ofs var
R33781:33781 compcert.common.Memtype <> b var
R33778:33779 compcert.common.Memtype <> m2 var
R33789:33792 Coq.Init.Datatypes <> true constr
R33748:33750 Coq.Init.Logic <> :type_scope:x_'='_x not
R33721:33738 compcert.common.Memtype MEM weak_valid_pointer def
R33745:33747 compcert.common.Memtype <> ofs var
R33743:33743 compcert.common.Memtype <> b var
R33740:33741 compcert.common.Memtype <> m1 var
R33751:33754 Coq.Init.Datatypes <> true constr
R33702:33708 compcert.common.Memtype MEM extends defax
R33713:33714 compcert.common.Memtype <> m2 var
R33710:33711 compcert.common.Memtype <> m1 var
ax 34524:34529 MEM inject
R34538:34541 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34545:34548 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34552:34555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34549:34551 compcert.common.Memtype MEM mem defax
R34542:34544 compcert.common.Memtype MEM mem defax
R34532:34537 compcert.common.Values <> meminj syndef
ax 34569:34588 MEM valid_block_inject_1
R34645:34650 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34665:34670 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34671:34681 compcert.common.Memtype MEM valid_block def
R34686:34687 compcert.common.Memtype <> b1 var
R34683:34684 compcert.common.Memtype <> m1 var
R34651:34656 compcert.common.Memtype MEM inject defax
R34663:34664 compcert.common.Memtype <> m2 var
R34660:34661 compcert.common.Memtype <> m1 var
R34658:34658 compcert.common.Memtype <> f var
R34627:34629 Coq.Init.Logic <> :type_scope:x_'='_x not
R34623:34623 compcert.common.Memtype <> f var
R34625:34626 compcert.common.Memtype <> b1 var
R34630:34633 Coq.Init.Datatypes <> Some constr
R34634:34634 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34637:34638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34644:34644 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34635:34636 compcert.common.Memtype <> b2 var
R34639:34643 compcert.common.Memtype <> delta var
ax 34697:34716 MEM valid_block_inject_2
R34773:34778 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34793:34798 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34799:34809 compcert.common.Memtype MEM valid_block def
R34814:34815 compcert.common.Memtype <> b2 var
R34811:34812 compcert.common.Memtype <> m2 var
R34779:34784 compcert.common.Memtype MEM inject defax
R34791:34792 compcert.common.Memtype <> m2 var
R34788:34789 compcert.common.Memtype <> m1 var
R34786:34786 compcert.common.Memtype <> f var
R34755:34757 Coq.Init.Logic <> :type_scope:x_'='_x not
R34751:34751 compcert.common.Memtype <> f var
R34753:34754 compcert.common.Memtype <> b1 var
R34758:34761 Coq.Init.Datatypes <> Some constr
R34762:34762 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34765:34766 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34772:34772 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34763:34764 compcert.common.Memtype <> b2 var
R34767:34771 compcert.common.Memtype <> delta var
ax 34825:34835 MEM perm_inject
R34900:34905 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34920:34925 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34944:34947 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34948:34951 compcert.common.Memtype MEM perm defax
R34975:34975 compcert.common.Memtype <> p var
R34973:34973 compcert.common.Memtype <> k var
R34963:34965 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R34960:34962 compcert.common.Memtype <> ofs var
R34966:34970 compcert.common.Memtype <> delta var
R34956:34957 compcert.common.Memtype <> b2 var
R34953:34954 compcert.common.Memtype <> m2 var
R34926:34929 compcert.common.Memtype MEM perm defax
R34943:34943 compcert.common.Memtype <> p var
R34941:34941 compcert.common.Memtype <> k var
R34937:34939 compcert.common.Memtype <> ofs var
R34934:34935 compcert.common.Memtype <> b1 var
R34931:34932 compcert.common.Memtype <> m1 var
R34906:34911 compcert.common.Memtype MEM inject defax
R34918:34919 compcert.common.Memtype <> m2 var
R34915:34916 compcert.common.Memtype <> m1 var
R34913:34913 compcert.common.Memtype <> f var
R34882:34884 Coq.Init.Logic <> :type_scope:x_'='_x not
R34878:34878 compcert.common.Memtype <> f var
R34880:34881 compcert.common.Memtype <> b1 var
R34885:34888 Coq.Init.Datatypes <> Some constr
R34889:34889 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34892:34893 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34899:34899 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34890:34891 compcert.common.Memtype <> b2 var
R34894:34898 compcert.common.Memtype <> delta var
ax 34985:35003 MEM valid_access_inject
R35072:35077 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35092:35097 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35128:35133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35134:35145 compcert.common.Memtype MEM valid_access def
R35173:35173 compcert.common.Memtype <> p var
R35163:35165 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35160:35162 compcert.common.Memtype <> ofs var
R35166:35170 compcert.common.Memtype <> delta var
R35156:35157 compcert.common.Memtype <> b2 var
R35150:35154 compcert.common.Memtype <> chunk var
R35147:35148 compcert.common.Memtype <> m2 var
R35098:35109 compcert.common.Memtype MEM valid_access def
R35127:35127 compcert.common.Memtype <> p var
R35123:35125 compcert.common.Memtype <> ofs var
R35120:35121 compcert.common.Memtype <> b1 var
R35114:35118 compcert.common.Memtype <> chunk var
R35111:35112 compcert.common.Memtype <> m1 var
R35078:35083 compcert.common.Memtype MEM inject defax
R35090:35091 compcert.common.Memtype <> m2 var
R35087:35088 compcert.common.Memtype <> m1 var
R35085:35085 compcert.common.Memtype <> f var
R35054:35056 Coq.Init.Logic <> :type_scope:x_'='_x not
R35050:35050 compcert.common.Memtype <> f var
R35052:35053 compcert.common.Memtype <> b1 var
R35057:35060 Coq.Init.Datatypes <> Some constr
R35061:35061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35064:35065 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35071:35071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35062:35063 compcert.common.Memtype <> b2 var
R35066:35070 compcert.common.Memtype <> delta var
ax 35183:35202 MEM valid_pointer_inject
R35263:35268 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35283:35288 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35319:35324 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35358:35360 Coq.Init.Logic <> :type_scope:x_'='_x not
R35325:35337 compcert.common.Memtype MEM valid_pointer defax
R35349:35351 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35346:35348 compcert.common.Memtype <> ofs var
R35352:35356 compcert.common.Memtype <> delta var
R35342:35343 compcert.common.Memtype <> b2 var
R35339:35340 compcert.common.Memtype <> m2 var
R35361:35364 Coq.Init.Datatypes <> true constr
R35312:35314 Coq.Init.Logic <> :type_scope:x_'='_x not
R35289:35301 compcert.common.Memtype MEM valid_pointer defax
R35309:35311 compcert.common.Memtype <> ofs var
R35306:35307 compcert.common.Memtype <> b1 var
R35303:35304 compcert.common.Memtype <> m1 var
R35315:35318 Coq.Init.Datatypes <> true constr
R35269:35274 compcert.common.Memtype MEM inject defax
R35281:35282 compcert.common.Memtype <> m2 var
R35278:35279 compcert.common.Memtype <> m1 var
R35276:35276 compcert.common.Memtype <> f var
R35245:35247 Coq.Init.Logic <> :type_scope:x_'='_x not
R35241:35241 compcert.common.Memtype <> f var
R35243:35244 compcert.common.Memtype <> b1 var
R35248:35251 Coq.Init.Datatypes <> Some constr
R35252:35252 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35255:35256 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35262:35262 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35253:35254 compcert.common.Memtype <> b2 var
R35257:35261 compcert.common.Memtype <> delta var
ax 35374:35398 MEM weak_valid_pointer_inject
R35459:35464 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35479:35484 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35520:35525 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35564:35566 Coq.Init.Logic <> :type_scope:x_'='_x not
R35526:35543 compcert.common.Memtype MEM weak_valid_pointer def
R35555:35557 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35552:35554 compcert.common.Memtype <> ofs var
R35558:35562 compcert.common.Memtype <> delta var
R35548:35549 compcert.common.Memtype <> b2 var
R35545:35546 compcert.common.Memtype <> m2 var
R35567:35570 Coq.Init.Datatypes <> true constr
R35513:35515 Coq.Init.Logic <> :type_scope:x_'='_x not
R35485:35502 compcert.common.Memtype MEM weak_valid_pointer def
R35510:35512 compcert.common.Memtype <> ofs var
R35507:35508 compcert.common.Memtype <> b1 var
R35504:35505 compcert.common.Memtype <> m1 var
R35516:35519 Coq.Init.Datatypes <> true constr
R35465:35470 compcert.common.Memtype MEM inject defax
R35477:35478 compcert.common.Memtype <> m2 var
R35474:35475 compcert.common.Memtype <> m1 var
R35472:35472 compcert.common.Memtype <> f var
R35441:35443 Coq.Init.Logic <> :type_scope:x_'='_x not
R35437:35437 compcert.common.Memtype <> f var
R35439:35440 compcert.common.Memtype <> b1 var
R35444:35447 Coq.Init.Datatypes <> Some constr
R35448:35448 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35451:35452 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35458:35458 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35449:35450 compcert.common.Memtype <> b2 var
R35453:35457 compcert.common.Memtype <> delta var
ax 35580:35593 MEM address_inject
R35649:35654 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35691:35696 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35720:35725 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35770:35772 Coq.Init.Logic <> :type_scope:x_'='_x not
R35726:35737 compcert.lib.Integers Int unsigned def
R35740:35746 compcert.lib.Integers Int add def
R35754:35761 compcert.lib.Integers Int repr def
R35763:35767 compcert.common.Memtype <> delta var
R35748:35751 compcert.common.Memtype <> ofs1 var
R35790:35792 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35773:35784 compcert.lib.Integers Int unsigned def
R35786:35789 compcert.common.Memtype <> ofs1 var
R35793:35797 compcert.common.Memtype <> delta var
R35701:35703 Coq.Init.Logic <> :type_scope:x_'='_x not
R35697:35697 compcert.common.Memtype <> f var
R35699:35700 compcert.common.Memtype <> b1 var
R35704:35707 Coq.Init.Datatypes <> Some constr
R35709:35709 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35712:35713 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35719:35719 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35710:35711 compcert.common.Memtype <> b2 var
R35714:35718 compcert.common.Memtype <> delta var
R35655:35658 compcert.common.Memtype MEM perm defax
R35690:35690 compcert.common.Memtype <> p var
R35686:35688 compcert.common.Memtype MEM Cur constr
R35667:35678 compcert.lib.Integers Int unsigned def
R35680:35683 compcert.common.Memtype <> ofs1 var
R35663:35664 compcert.common.Memtype <> b1 var
R35660:35661 compcert.common.Memtype <> m1 var
R35635:35640 compcert.common.Memtype MEM inject defax
R35647:35648 compcert.common.Memtype <> m2 var
R35644:35645 compcert.common.Memtype <> m1 var
R35642:35642 compcert.common.Memtype <> f var
ax 35807:35838 MEM valid_pointer_inject_no_overflow
R35890:35895 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35940:35945 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35967:35972 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35974:35977 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R36026:36029 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R35994:35996 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35978:35989 compcert.lib.Integers Int unsigned def
R35991:35993 compcert.common.Memtype <> ofs var
R35997:36008 compcert.lib.Integers Int unsigned def
R36011:36018 compcert.lib.Integers Int repr def
R36020:36024 compcert.common.Memtype <> delta var
R35994:35996 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35978:35989 compcert.lib.Integers Int unsigned def
R35991:35993 compcert.common.Memtype <> ofs var
R35997:36008 compcert.lib.Integers Int unsigned def
R36011:36018 compcert.lib.Integers Int repr def
R36020:36024 compcert.common.Memtype <> delta var
R36030:36045 compcert.lib.Integers Int max_unsigned def
R35949:35951 Coq.Init.Logic <> :type_scope:x_'='_x not
R35946:35946 compcert.common.Memtype <> f var
R35948:35948 compcert.common.Memtype <> b var
R35952:35955 Coq.Init.Datatypes <> Some constr
R35956:35956 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35959:35960 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35966:35966 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35957:35958 compcert.common.Memtype <> b' var
R35961:35965 compcert.common.Memtype <> delta var
R35933:35935 Coq.Init.Logic <> :type_scope:x_'='_x not
R35896:35908 compcert.common.Memtype MEM valid_pointer defax
R35916:35927 compcert.lib.Integers Int unsigned def
R35929:35931 compcert.common.Memtype <> ofs var
R35913:35913 compcert.common.Memtype <> b var
R35910:35911 compcert.common.Memtype <> m1 var
R35936:35939 Coq.Init.Datatypes <> true constr
R35876:35881 compcert.common.Memtype MEM inject defax
R35888:35889 compcert.common.Memtype <> m2 var
R35885:35886 compcert.common.Memtype <> m1 var
R35883:35883 compcert.common.Memtype <> f var
ax 36055:36091 MEM weak_valid_pointer_inject_no_overflow
R36143:36148 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36198:36203 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36225:36230 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36232:36235 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R36284:36287 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R36252:36254 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R36236:36247 compcert.lib.Integers Int unsigned def
R36249:36251 compcert.common.Memtype <> ofs var
R36255:36266 compcert.lib.Integers Int unsigned def
R36269:36276 compcert.lib.Integers Int repr def
R36278:36282 compcert.common.Memtype <> delta var
R36252:36254 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R36236:36247 compcert.lib.Integers Int unsigned def
R36249:36251 compcert.common.Memtype <> ofs var
R36255:36266 compcert.lib.Integers Int unsigned def
R36269:36276 compcert.lib.Integers Int repr def
R36278:36282 compcert.common.Memtype <> delta var
R36288:36303 compcert.lib.Integers Int max_unsigned def
R36207:36209 Coq.Init.Logic <> :type_scope:x_'='_x not
R36204:36204 compcert.common.Memtype <> f var
R36206:36206 compcert.common.Memtype <> b var
R36210:36213 Coq.Init.Datatypes <> Some constr
R36214:36214 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36217:36218 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36224:36224 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36215:36216 compcert.common.Memtype <> b' var
R36219:36223 compcert.common.Memtype <> delta var
R36191:36193 Coq.Init.Logic <> :type_scope:x_'='_x not
R36149:36166 compcert.common.Memtype MEM weak_valid_pointer def
R36174:36185 compcert.lib.Integers Int unsigned def
R36187:36189 compcert.common.Memtype <> ofs var
R36171:36171 compcert.common.Memtype <> b var
R36168:36169 compcert.common.Memtype <> m1 var
R36194:36197 Coq.Init.Datatypes <> true constr
R36129:36134 compcert.common.Memtype MEM inject defax
R36141:36142 compcert.common.Memtype <> m2 var
R36138:36139 compcert.common.Memtype <> m1 var
R36136:36136 compcert.common.Memtype <> f var
ax 36313:36336 MEM valid_pointer_inject_val
R36387:36392 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36437:36442 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36483:36488 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36528:36530 Coq.Init.Logic <> :type_scope:x_'='_x not
R36489:36501 compcert.common.Memtype MEM valid_pointer defax
R36510:36521 compcert.lib.Integers Int unsigned def
R36523:36526 compcert.common.Memtype <> ofs' var
R36506:36507 compcert.common.Memtype <> b' var
R36503:36504 compcert.common.Memtype <> m2 var
R36531:36534 Coq.Init.Datatypes <> true constr
R36443:36452 compcert.common.Values Val inject ind
R36470:36473 compcert.common.Values <> Vptr constr
R36478:36481 compcert.common.Memtype <> ofs' var
R36475:36476 compcert.common.Memtype <> b' var
R36457:36460 compcert.common.Values <> Vptr constr
R36464:36466 compcert.common.Memtype <> ofs var
R36462:36462 compcert.common.Memtype <> b var
R36454:36454 compcert.common.Memtype <> f var
R36430:36432 Coq.Init.Logic <> :type_scope:x_'='_x not
R36393:36405 compcert.common.Memtype MEM valid_pointer defax
R36413:36424 compcert.lib.Integers Int unsigned def
R36426:36428 compcert.common.Memtype <> ofs var
R36410:36410 compcert.common.Memtype <> b var
R36407:36408 compcert.common.Memtype <> m1 var
R36433:36436 Coq.Init.Datatypes <> true constr
R36373:36378 compcert.common.Memtype MEM inject defax
R36385:36386 compcert.common.Memtype <> m2 var
R36382:36383 compcert.common.Memtype <> m1 var
R36380:36380 compcert.common.Memtype <> f var
ax 36544:36572 MEM weak_valid_pointer_inject_val
R36623:36628 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36678:36683 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36724:36729 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36774:36776 Coq.Init.Logic <> :type_scope:x_'='_x not
R36730:36747 compcert.common.Memtype MEM weak_valid_pointer def
R36756:36767 compcert.lib.Integers Int unsigned def
R36769:36772 compcert.common.Memtype <> ofs' var
R36752:36753 compcert.common.Memtype <> b' var
R36749:36750 compcert.common.Memtype <> m2 var
R36777:36780 Coq.Init.Datatypes <> true constr
R36684:36693 compcert.common.Values Val inject ind
R36711:36714 compcert.common.Values <> Vptr constr
R36719:36722 compcert.common.Memtype <> ofs' var
R36716:36717 compcert.common.Memtype <> b' var
R36698:36701 compcert.common.Values <> Vptr constr
R36705:36707 compcert.common.Memtype <> ofs var
R36703:36703 compcert.common.Memtype <> b var
R36695:36695 compcert.common.Memtype <> f var
R36671:36673 Coq.Init.Logic <> :type_scope:x_'='_x not
R36629:36646 compcert.common.Memtype MEM weak_valid_pointer def
R36654:36665 compcert.lib.Integers Int unsigned def
R36667:36669 compcert.common.Memtype <> ofs var
R36651:36651 compcert.common.Memtype <> b var
R36648:36649 compcert.common.Memtype <> m1 var
R36674:36677 Coq.Init.Datatypes <> true constr
R36609:36614 compcert.common.Memtype MEM inject defax
R36621:36622 compcert.common.Memtype <> m2 var
R36618:36619 compcert.common.Memtype <> m1 var
R36616:36616 compcert.common.Memtype <> f var
ax 36790:36806 MEM inject_no_overlap
R36881:36886 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36895:36900 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36926:36931 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36957:36962 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36991:36996 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37025:37030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37041:37044 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R37034:37037 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37031:37033 compcert.common.Memtype <> b1' var
R37038:37040 compcert.common.Memtype <> b2' var
R37058:37061 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37049:37051 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R37045:37048 compcert.common.Memtype <> ofs1 var
R37052:37057 compcert.common.Memtype <> delta1 var
R37066:37068 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R37062:37065 compcert.common.Memtype <> ofs2 var
R37069:37074 compcert.common.Memtype <> delta2 var
R36997:37000 compcert.common.Memtype MEM perm defax
R37017:37024 compcert.common.Memtype MEM Nonempty constr
R37013:37015 compcert.common.Memtype MEM Max constr
R37008:37011 compcert.common.Memtype <> ofs2 var
R37005:37006 compcert.common.Memtype <> b2 var
R37002:37003 compcert.common.Memtype <> m1 var
R36963:36966 compcert.common.Memtype MEM perm defax
R36983:36990 compcert.common.Memtype MEM Nonempty constr
R36979:36981 compcert.common.Memtype MEM Max constr
R36974:36977 compcert.common.Memtype <> ofs1 var
R36971:36972 compcert.common.Memtype <> b1 var
R36968:36969 compcert.common.Memtype <> m1 var
R36936:36938 Coq.Init.Logic <> :type_scope:x_'='_x not
R36932:36932 compcert.common.Memtype <> f var
R36934:36935 compcert.common.Memtype <> b2 var
R36939:36942 Coq.Init.Datatypes <> Some constr
R36944:36944 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36948:36949 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36956:36956 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36945:36947 compcert.common.Memtype <> b2' var
R36950:36955 compcert.common.Memtype <> delta2 var
R36905:36907 Coq.Init.Logic <> :type_scope:x_'='_x not
R36901:36901 compcert.common.Memtype <> f var
R36903:36904 compcert.common.Memtype <> b1 var
R36908:36911 Coq.Init.Datatypes <> Some constr
R36913:36913 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36917:36918 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36925:36925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36914:36916 compcert.common.Memtype <> b1' var
R36919:36924 compcert.common.Memtype <> delta1 var
R36889:36892 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R36887:36888 compcert.common.Memtype <> b1 var
R36893:36894 compcert.common.Memtype <> b2 var
R36867:36872 compcert.common.Memtype MEM inject defax
R36879:36880 compcert.common.Memtype <> m2 var
R36876:36877 compcert.common.Memtype <> m1 var
R36874:36874 compcert.common.Memtype <> f var
ax 37084:37108 MEM different_pointers_inject
R37181:37186 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37195:37200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37246:37251 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37297:37302 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37328:37333 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37359:37364 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37375:37380 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R37368:37371 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37365:37367 compcert.common.Memtype <> b1' var
R37372:37374 compcert.common.Memtype <> b2' var
R37426:37431 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37381:37392 compcert.lib.Integers Int unsigned def
R37395:37401 compcert.lib.Integers Int add def
R37409:37416 compcert.lib.Integers Int repr def
R37418:37423 compcert.common.Memtype <> delta1 var
R37403:37406 compcert.common.Memtype <> ofs1 var
R37432:37443 compcert.lib.Integers Int unsigned def
R37446:37452 compcert.lib.Integers Int add def
R37460:37467 compcert.lib.Integers Int repr def
R37469:37474 compcert.common.Memtype <> delta2 var
R37454:37457 compcert.common.Memtype <> ofs2 var
R37338:37340 Coq.Init.Logic <> :type_scope:x_'='_x not
R37334:37334 compcert.common.Memtype <> f var
R37336:37337 compcert.common.Memtype <> b2 var
R37341:37344 Coq.Init.Datatypes <> Some constr
R37346:37346 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37350:37351 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37358:37358 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37347:37349 compcert.common.Memtype <> b2' var
R37352:37357 compcert.common.Memtype <> delta2 var
R37307:37309 Coq.Init.Logic <> :type_scope:x_'='_x not
R37303:37303 compcert.common.Memtype <> f var
R37305:37306 compcert.common.Memtype <> b1 var
R37310:37313 Coq.Init.Datatypes <> Some constr
R37315:37315 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37319:37320 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37327:37327 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37316:37318 compcert.common.Memtype <> b1' var
R37321:37326 compcert.common.Memtype <> delta1 var
R37290:37292 Coq.Init.Logic <> :type_scope:x_'='_x not
R37252:37264 compcert.common.Memtype MEM valid_pointer defax
R37272:37283 compcert.lib.Integers Int unsigned def
R37285:37288 compcert.common.Memtype <> ofs2 var
R37268:37269 compcert.common.Memtype <> b2 var
R37266:37266 compcert.common.Memtype <> m var
R37293:37296 Coq.Init.Datatypes <> true constr
R37239:37241 Coq.Init.Logic <> :type_scope:x_'='_x not
R37201:37213 compcert.common.Memtype MEM valid_pointer defax
R37221:37232 compcert.lib.Integers Int unsigned def
R37234:37237 compcert.common.Memtype <> ofs1 var
R37217:37218 compcert.common.Memtype <> b1 var
R37215:37215 compcert.common.Memtype <> m var
R37242:37245 Coq.Init.Datatypes <> true constr
R37189:37192 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37187:37188 compcert.common.Memtype <> b1 var
R37193:37194 compcert.common.Memtype <> b2 var
R37168:37173 compcert.common.Memtype MEM inject defax
R37179:37180 compcert.common.Memtype <> m' var
R37177:37177 compcert.common.Memtype <> m var
R37175:37175 compcert.common.Memtype <> f var
ax 37486:37496 MEM load_inject
R37558:37563 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37594:37599 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37623:37628 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37629:37635 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37638:37639 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37680:37683 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R37670:37672 Coq.Init.Logic <> :type_scope:x_'='_x not
R37640:37643 compcert.common.Memtype MEM load defax
R37661:37663 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R37658:37660 compcert.common.Memtype <> ofs var
R37664:37668 compcert.common.Memtype <> delta var
R37654:37655 compcert.common.Memtype <> b2 var
R37651:37652 compcert.common.Memtype <> m2 var
R37645:37649 compcert.common.Memtype <> chunk var
R37673:37676 Coq.Init.Datatypes <> Some constr
R37678:37679 compcert.common.Memtype <> v2 var
R37684:37693 compcert.common.Values Val inject ind
R37700:37701 compcert.common.Memtype <> v2 var
R37697:37698 compcert.common.Memtype <> v1 var
R37695:37695 compcert.common.Memtype <> f var
R37604:37606 Coq.Init.Logic <> :type_scope:x_'='_x not
R37600:37600 compcert.common.Memtype <> f var
R37602:37603 compcert.common.Memtype <> b1 var
R37607:37610 Coq.Init.Datatypes <> Some constr
R37612:37612 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37615:37616 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37622:37622 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37613:37614 compcert.common.Memtype <> b2 var
R37617:37621 compcert.common.Memtype <> delta var
R37584:37586 Coq.Init.Logic <> :type_scope:x_'='_x not
R37564:37567 compcert.common.Memtype MEM load defax
R37581:37583 compcert.common.Memtype <> ofs var
R37578:37579 compcert.common.Memtype <> b1 var
R37575:37576 compcert.common.Memtype <> m1 var
R37569:37573 compcert.common.Memtype <> chunk var
R37587:37590 Coq.Init.Datatypes <> Some constr
R37592:37593 compcert.common.Memtype <> v1 var
R37544:37549 compcert.common.Memtype MEM inject defax
R37556:37557 compcert.common.Memtype <> m2 var
R37553:37554 compcert.common.Memtype <> m1 var
R37551:37551 compcert.common.Memtype <> f var
ax 37711:37722 MEM loadv_inject
R37774:37779 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37807:37812 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37831:37836 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37837:37843 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37846:37847 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37875:37878 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R37865:37867 Coq.Init.Logic <> :type_scope:x_'='_x not
R37848:37852 compcert.common.Memtype MEM loadv def
R37863:37864 compcert.common.Memtype <> a2 var
R37860:37861 compcert.common.Memtype <> m2 var
R37854:37858 compcert.common.Memtype <> chunk var
R37868:37871 Coq.Init.Datatypes <> Some constr
R37873:37874 compcert.common.Memtype <> v2 var
R37879:37888 compcert.common.Values Val inject ind
R37895:37896 compcert.common.Memtype <> v2 var
R37892:37893 compcert.common.Memtype <> v1 var
R37890:37890 compcert.common.Memtype <> f var
R37813:37822 compcert.common.Values Val inject ind
R37829:37830 compcert.common.Memtype <> a2 var
R37826:37827 compcert.common.Memtype <> a1 var
R37824:37824 compcert.common.Memtype <> f var
R37797:37799 Coq.Init.Logic <> :type_scope:x_'='_x not
R37780:37784 compcert.common.Memtype MEM loadv def
R37795:37796 compcert.common.Memtype <> a1 var
R37792:37793 compcert.common.Memtype <> m1 var
R37786:37790 compcert.common.Memtype <> chunk var
R37800:37803 Coq.Init.Datatypes <> Some constr
R37805:37806 compcert.common.Memtype <> v1 var
R37760:37765 compcert.common.Memtype MEM inject defax
R37772:37773 compcert.common.Memtype <> m2 var
R37769:37770 compcert.common.Memtype <> m1 var
R37767:37767 compcert.common.Memtype <> f var
ax 37906:37921 MEM loadbytes_inject
R37985:37990 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38028:38033 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38057:38062 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38063:38069 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38076:38077 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38125:38142 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R38111:38113 Coq.Init.Logic <> :type_scope:x_'='_x not
R38078:38086 compcert.common.Memtype MEM loadbytes defax
R38108:38110 compcert.common.Memtype <> len var
R38098:38100 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38095:38097 compcert.common.Memtype <> ofs var
R38101:38105 compcert.common.Memtype <> delta var
R38091:38092 compcert.common.Memtype <> b2 var
R38088:38089 compcert.common.Memtype <> m2 var
R38114:38117 Coq.Init.Datatypes <> Some constr
R38119:38124 compcert.common.Memtype <> bytes2 var
R38143:38154 compcert.lib.Coqlib <> list_forall2 ind
R38181:38186 compcert.common.Memtype <> bytes2 var
R38174:38179 compcert.common.Memtype <> bytes1 var
R38157:38169 compcert.common.Memdata <> memval_inject ind
R38171:38171 compcert.common.Memtype <> f var
R38038:38040 Coq.Init.Logic <> :type_scope:x_'='_x not
R38034:38034 compcert.common.Memtype <> f var
R38036:38037 compcert.common.Memtype <> b1 var
R38041:38044 Coq.Init.Datatypes <> Some constr
R38046:38046 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38049:38050 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38056:38056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38047:38048 compcert.common.Memtype <> b2 var
R38051:38055 compcert.common.Memtype <> delta var
R38014:38016 Coq.Init.Logic <> :type_scope:x_'='_x not
R37991:37999 compcert.common.Memtype MEM loadbytes defax
R38011:38013 compcert.common.Memtype <> len var
R38007:38009 compcert.common.Memtype <> ofs var
R38004:38005 compcert.common.Memtype <> b1 var
R38001:38002 compcert.common.Memtype <> m1 var
R38017:38020 Coq.Init.Datatypes <> Some constr
R38022:38027 compcert.common.Memtype <> bytes1 var
R37971:37976 compcert.common.Memtype MEM inject defax
R37983:37984 compcert.common.Memtype <> m2 var
R37980:37981 compcert.common.Memtype <> m1 var
R37978:37978 compcert.common.Memtype <> f var
ax 38196:38214 MEM store_mapped_inject
R38282:38287 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38322:38327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38351:38356 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38375:38380 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38381:38387 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38390:38395 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38440:38447 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R38430:38432 Coq.Init.Logic <> :type_scope:x_'='_x not
R38396:38400 compcert.common.Memtype MEM store defax
R38428:38429 compcert.common.Memtype <> v2 var
R38418:38420 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38415:38417 compcert.common.Memtype <> ofs var
R38421:38425 compcert.common.Memtype <> delta var
R38411:38412 compcert.common.Memtype <> b2 var
R38408:38409 compcert.common.Memtype <> m2 var
R38402:38406 compcert.common.Memtype <> chunk var
R38433:38436 Coq.Init.Datatypes <> Some constr
R38438:38439 compcert.common.Memtype <> n2 var
R38448:38453 compcert.common.Memtype MEM inject defax
R38460:38461 compcert.common.Memtype <> n2 var
R38457:38458 compcert.common.Memtype <> n1 var
R38455:38455 compcert.common.Memtype <> f var
R38357:38366 compcert.common.Values Val inject ind
R38373:38374 compcert.common.Memtype <> v2 var
R38370:38371 compcert.common.Memtype <> v1 var
R38368:38368 compcert.common.Memtype <> f var
R38332:38334 Coq.Init.Logic <> :type_scope:x_'='_x not
R38328:38328 compcert.common.Memtype <> f var
R38330:38331 compcert.common.Memtype <> b1 var
R38335:38338 Coq.Init.Datatypes <> Some constr
R38340:38340 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38343:38344 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38350:38350 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38341:38342 compcert.common.Memtype <> b2 var
R38345:38349 compcert.common.Memtype <> delta var
R38312:38314 Coq.Init.Logic <> :type_scope:x_'='_x not
R38288:38292 compcert.common.Memtype MEM store defax
R38310:38311 compcert.common.Memtype <> v1 var
R38306:38308 compcert.common.Memtype <> ofs var
R38303:38304 compcert.common.Memtype <> b1 var
R38300:38301 compcert.common.Memtype <> m1 var
R38294:38298 compcert.common.Memtype <> chunk var
R38315:38318 Coq.Init.Datatypes <> Some constr
R38320:38321 compcert.common.Memtype <> n1 var
R38268:38273 compcert.common.Memtype MEM inject defax
R38280:38281 compcert.common.Memtype <> m2 var
R38277:38278 compcert.common.Memtype <> m1 var
R38275:38275 compcert.common.Memtype <> f var
ax 38471:38491 MEM store_unmapped_inject
R38547:38552 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38587:38592 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38604:38609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38610:38615 compcert.common.Memtype MEM inject defax
R38622:38623 compcert.common.Memtype <> m2 var
R38619:38620 compcert.common.Memtype <> n1 var
R38617:38617 compcert.common.Memtype <> f var
R38597:38599 Coq.Init.Logic <> :type_scope:x_'='_x not
R38593:38593 compcert.common.Memtype <> f var
R38595:38596 compcert.common.Memtype <> b1 var
R38600:38603 Coq.Init.Datatypes <> None constr
R38577:38579 Coq.Init.Logic <> :type_scope:x_'='_x not
R38553:38557 compcert.common.Memtype MEM store defax
R38575:38576 compcert.common.Memtype <> v1 var
R38571:38573 compcert.common.Memtype <> ofs var
R38568:38569 compcert.common.Memtype <> b1 var
R38565:38566 compcert.common.Memtype <> m1 var
R38559:38563 compcert.common.Memtype <> chunk var
R38580:38583 Coq.Init.Datatypes <> Some constr
R38585:38586 compcert.common.Memtype <> n1 var
R38533:38538 compcert.common.Memtype MEM inject defax
R38545:38546 compcert.common.Memtype <> m2 var
R38542:38543 compcert.common.Memtype <> m1 var
R38540:38540 compcert.common.Memtype <> f var
ax 38633:38652 MEM store_outside_inject
R38707:38712 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38713:38713 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38858:38864 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38898:38903 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38904:38909 compcert.common.Memtype MEM inject defax
R38916:38918 compcert.common.Memtype <> m2' var
R38913:38914 compcert.common.Memtype <> m1 var
R38911:38911 compcert.common.Memtype <> f var
R38887:38889 Coq.Init.Logic <> :type_scope:x_'='_x not
R38865:38869 compcert.common.Memtype MEM store defax
R38886:38886 compcert.common.Memtype <> v var
R38882:38884 compcert.common.Memtype <> ofs var
R38880:38880 compcert.common.Memtype <> b var
R38877:38878 compcert.common.Memtype <> m2 var
R38871:38875 compcert.common.Memtype <> chunk var
R38890:38893 Coq.Init.Datatypes <> Some constr
R38895:38897 compcert.common.Memtype <> m2' var
R38761:38768 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38797:38804 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38849:38852 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38853:38857 Coq.Init.Logic <> False ind
R38808:38811 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R38824:38826 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R38805:38807 compcert.common.Memtype <> ofs var
R38816:38818 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38812:38815 compcert.common.Memtype <> ofs' var
R38819:38823 compcert.common.Memtype <> delta var
R38816:38818 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38812:38815 compcert.common.Memtype <> ofs' var
R38819:38823 compcert.common.Memtype <> delta var
R38830:38832 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38827:38829 compcert.common.Memtype <> ofs var
R38833:38842 compcert.common.Memdata <> size_chunk def
R38844:38848 compcert.common.Memtype <> chunk var
R38769:38772 compcert.common.Memtype MEM perm defax
R38789:38796 compcert.common.Memtype MEM Readable constr
R38785:38787 compcert.common.Memtype MEM Cur constr
R38780:38783 compcert.common.Memtype <> ofs' var
R38777:38778 compcert.common.Memtype <> b' var
R38774:38775 compcert.common.Memtype <> m1 var
R38744:38746 Coq.Init.Logic <> :type_scope:x_'='_x not
R38740:38740 compcert.common.Memtype <> f var
R38742:38743 compcert.common.Memtype <> b' var
R38747:38750 Coq.Init.Datatypes <> Some constr
R38751:38751 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38753:38754 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38760:38760 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38752:38752 compcert.common.Memtype <> b var
R38755:38759 compcert.common.Memtype <> delta var
R38693:38698 compcert.common.Memtype MEM inject defax
R38705:38706 compcert.common.Memtype <> m2 var
R38702:38703 compcert.common.Memtype <> m1 var
R38700:38700 compcert.common.Memtype <> f var
ax 38928:38947 MEM storev_mapped_inject
R39005:39010 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39042:39047 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39066:39071 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39090:39095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39096:39102 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39105:39110 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39142:39145 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39132:39134 Coq.Init.Logic <> :type_scope:x_'='_x not
R39111:39116 compcert.common.Memtype MEM storev def
R39130:39131 compcert.common.Memtype <> v2 var
R39127:39128 compcert.common.Memtype <> a2 var
R39124:39125 compcert.common.Memtype <> m2 var
R39118:39122 compcert.common.Memtype <> chunk var
R39135:39138 Coq.Init.Datatypes <> Some constr
R39140:39141 compcert.common.Memtype <> n2 var
R39146:39151 compcert.common.Memtype MEM inject defax
R39158:39159 compcert.common.Memtype <> n2 var
R39155:39156 compcert.common.Memtype <> n1 var
R39153:39153 compcert.common.Memtype <> f var
R39072:39081 compcert.common.Values Val inject ind
R39088:39089 compcert.common.Memtype <> v2 var
R39085:39086 compcert.common.Memtype <> v1 var
R39083:39083 compcert.common.Memtype <> f var
R39048:39057 compcert.common.Values Val inject ind
R39064:39065 compcert.common.Memtype <> a2 var
R39061:39062 compcert.common.Memtype <> a1 var
R39059:39059 compcert.common.Memtype <> f var
R39032:39034 Coq.Init.Logic <> :type_scope:x_'='_x not
R39011:39016 compcert.common.Memtype MEM storev def
R39030:39031 compcert.common.Memtype <> v1 var
R39027:39028 compcert.common.Memtype <> a1 var
R39024:39025 compcert.common.Memtype <> m1 var
R39018:39022 compcert.common.Memtype <> chunk var
R39035:39038 Coq.Init.Datatypes <> Some constr
R39040:39041 compcert.common.Memtype <> n1 var
R38991:38996 compcert.common.Memtype MEM inject defax
R39003:39004 compcert.common.Memtype <> m2 var
R39000:39001 compcert.common.Memtype <> m1 var
R38998:38998 compcert.common.Memtype <> f var
ax 39169:39192 MEM storebytes_mapped_inject
R39262:39267 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39305:39310 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39334:39339 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39384:39389 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39390:39396 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39399:39404 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39452:39459 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39442:39444 Coq.Init.Logic <> :type_scope:x_'='_x not
R39405:39414 compcert.common.Memtype MEM storebytes defax
R39436:39441 compcert.common.Memtype <> bytes2 var
R39426:39428 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R39423:39425 compcert.common.Memtype <> ofs var
R39429:39433 compcert.common.Memtype <> delta var
R39419:39420 compcert.common.Memtype <> b2 var
R39416:39417 compcert.common.Memtype <> m2 var
R39445:39448 Coq.Init.Datatypes <> Some constr
R39450:39451 compcert.common.Memtype <> n2 var
R39460:39465 compcert.common.Memtype MEM inject defax
R39472:39473 compcert.common.Memtype <> n2 var
R39469:39470 compcert.common.Memtype <> n1 var
R39467:39467 compcert.common.Memtype <> f var
R39340:39351 compcert.lib.Coqlib <> list_forall2 ind
R39378:39383 compcert.common.Memtype <> bytes2 var
R39371:39376 compcert.common.Memtype <> bytes1 var
R39354:39366 compcert.common.Memdata <> memval_inject ind
R39368:39368 compcert.common.Memtype <> f var
R39315:39317 Coq.Init.Logic <> :type_scope:x_'='_x not
R39311:39311 compcert.common.Memtype <> f var
R39313:39314 compcert.common.Memtype <> b1 var
R39318:39321 Coq.Init.Datatypes <> Some constr
R39323:39323 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39326:39327 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39333:39333 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39324:39325 compcert.common.Memtype <> b2 var
R39328:39332 compcert.common.Memtype <> delta var
R39295:39297 Coq.Init.Logic <> :type_scope:x_'='_x not
R39268:39277 compcert.common.Memtype MEM storebytes defax
R39289:39294 compcert.common.Memtype <> bytes1 var
R39285:39287 compcert.common.Memtype <> ofs var
R39282:39283 compcert.common.Memtype <> b1 var
R39279:39280 compcert.common.Memtype <> m1 var
R39298:39301 Coq.Init.Datatypes <> Some constr
R39303:39304 compcert.common.Memtype <> n1 var
R39248:39253 compcert.common.Memtype MEM inject defax
R39260:39261 compcert.common.Memtype <> m2 var
R39257:39258 compcert.common.Memtype <> m1 var
R39255:39255 compcert.common.Memtype <> f var
ax 39483:39508 MEM storebytes_unmapped_inject
R39562:39567 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39605:39610 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39622:39627 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39628:39633 compcert.common.Memtype MEM inject defax
R39640:39641 compcert.common.Memtype <> m2 var
R39637:39638 compcert.common.Memtype <> n1 var
R39635:39635 compcert.common.Memtype <> f var
R39615:39617 Coq.Init.Logic <> :type_scope:x_'='_x not
R39611:39611 compcert.common.Memtype <> f var
R39613:39614 compcert.common.Memtype <> b1 var
R39618:39621 Coq.Init.Datatypes <> None constr
R39595:39597 Coq.Init.Logic <> :type_scope:x_'='_x not
R39568:39577 compcert.common.Memtype MEM storebytes defax
R39589:39594 compcert.common.Memtype <> bytes1 var
R39585:39587 compcert.common.Memtype <> ofs var
R39582:39583 compcert.common.Memtype <> b1 var
R39579:39580 compcert.common.Memtype <> m1 var
R39598:39601 Coq.Init.Datatypes <> Some constr
R39603:39604 compcert.common.Memtype <> n1 var
R39548:39553 compcert.common.Memtype MEM inject defax
R39560:39561 compcert.common.Memtype <> m2 var
R39557:39558 compcert.common.Memtype <> m1 var
R39555:39555 compcert.common.Memtype <> f var
ax 39651:39675 MEM storebytes_outside_inject
R39729:39734 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39735:39735 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39888:39894 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39932:39937 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39938:39943 compcert.common.Memtype MEM inject defax
R39950:39952 compcert.common.Memtype <> m2' var
R39947:39948 compcert.common.Memtype <> m1 var
R39945:39945 compcert.common.Memtype <> f var
R39921:39923 Coq.Init.Logic <> :type_scope:x_'='_x not
R39895:39904 compcert.common.Memtype MEM storebytes defax
R39915:39920 compcert.common.Memtype <> bytes2 var
R39911:39913 compcert.common.Memtype <> ofs var
R39909:39909 compcert.common.Memtype <> b var
R39906:39907 compcert.common.Memtype <> m2 var
R39924:39927 Coq.Init.Datatypes <> Some constr
R39929:39931 compcert.common.Memtype <> m2' var
R39783:39790 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39819:39826 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39879:39882 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39883:39887 Coq.Init.Logic <> False ind
R39830:39833 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R39846:39848 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R39827:39829 compcert.common.Memtype <> ofs var
R39838:39840 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R39834:39837 compcert.common.Memtype <> ofs' var
R39841:39845 compcert.common.Memtype <> delta var
R39838:39840 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R39834:39837 compcert.common.Memtype <> ofs' var
R39841:39845 compcert.common.Memtype <> delta var
R39852:39854 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R39849:39851 compcert.common.Memtype <> ofs var
R39855:39862 Coq.ZArith.BinInt <> Z_of_nat syndef
R39865:39870 Coq.Init.Datatypes <> length def
R39872:39877 compcert.common.Memtype <> bytes2 var
R39791:39794 compcert.common.Memtype MEM perm defax
R39811:39818 compcert.common.Memtype MEM Readable constr
R39807:39809 compcert.common.Memtype MEM Cur constr
R39802:39805 compcert.common.Memtype <> ofs' var
R39799:39800 compcert.common.Memtype <> b' var
R39796:39797 compcert.common.Memtype <> m1 var
R39766:39768 Coq.Init.Logic <> :type_scope:x_'='_x not
R39762:39762 compcert.common.Memtype <> f var
R39764:39765 compcert.common.Memtype <> b' var
R39769:39772 Coq.Init.Datatypes <> Some constr
R39773:39773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39775:39776 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39782:39782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39774:39774 compcert.common.Memtype <> b var
R39777:39781 compcert.common.Memtype <> delta var
R39715:39720 compcert.common.Memtype MEM inject defax
R39727:39728 compcert.common.Memtype <> m2 var
R39724:39725 compcert.common.Memtype <> m1 var
R39722:39722 compcert.common.Memtype <> f var
ax 39962:39979 MEM alloc_right_inject
R40029:40034 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40061:40066 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40067:40072 compcert.common.Memtype MEM inject defax
R40079:40081 compcert.common.Memtype <> m2' var
R40076:40077 compcert.common.Memtype <> m1 var
R40074:40074 compcert.common.Memtype <> f var
R40049:40051 Coq.Init.Logic <> :type_scope:x_'='_x not
R40035:40039 compcert.common.Memtype MEM alloc defax
R40047:40048 compcert.common.Memtype <> hi var
R40044:40045 compcert.common.Memtype <> lo var
R40041:40042 compcert.common.Memtype <> m2 var
R40052:40052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40056:40057 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40060:40060 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40053:40055 compcert.common.Memtype <> m2' var
R40058:40059 compcert.common.Memtype <> b2 var
R40015:40020 compcert.common.Memtype MEM inject defax
R40027:40028 compcert.common.Memtype <> m2 var
R40024:40025 compcert.common.Memtype <> m1 var
R40022:40022 compcert.common.Memtype <> f var
ax 40091:40116 MEM alloc_left_unmapped_inject
R40166:40171 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40198:40203 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40204:40210 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40213:40219 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40236:40241 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40220:40225 compcert.common.Memtype MEM inject defax
R40234:40235 compcert.common.Memtype <> m2 var
R40230:40232 compcert.common.Memtype <> m1' var
R40227:40228 compcert.common.Memtype <> f' var
R40258:40263 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40242:40252 compcert.common.Values <> inject_incr def
R40256:40257 compcert.common.Memtype <> f' var
R40254:40254 compcert.common.Memtype <> f var
R40276:40282 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40314:40314 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40269:40271 Coq.Init.Logic <> :type_scope:x_'='_x not
R40264:40265 compcert.common.Memtype <> f' var
R40267:40268 compcert.common.Memtype <> b1 var
R40272:40275 Coq.Init.Datatypes <> None constr
R40300:40303 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40308:40310 Coq.Init.Logic <> :type_scope:x_'='_x not
R40304:40305 compcert.common.Memtype <> f' var
R40307:40307 compcert.common.Memtype <> b var
R40311:40311 compcert.common.Memtype <> f var
R40313:40313 compcert.common.Memtype <> b var
R40294:40297 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40293:40293 compcert.common.Memtype <> b var
R40298:40299 compcert.common.Memtype <> b1 var
R40186:40188 Coq.Init.Logic <> :type_scope:x_'='_x not
R40172:40176 compcert.common.Memtype MEM alloc defax
R40184:40185 compcert.common.Memtype <> hi var
R40181:40182 compcert.common.Memtype <> lo var
R40178:40179 compcert.common.Memtype <> m1 var
R40189:40189 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40193:40194 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40197:40197 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40190:40192 compcert.common.Memtype <> m1' var
R40195:40196 compcert.common.Memtype <> b1 var
R40152:40157 compcert.common.Memtype MEM inject defax
R40164:40165 compcert.common.Memtype <> m2 var
R40161:40162 compcert.common.Memtype <> m1 var
R40159:40159 compcert.common.Memtype <> f var
def 40329:40346 MEM inj_offset_aligned
R40356:40356 Coq.Numbers.BinNums <> Z ind
R40366:40366 Coq.Numbers.BinNums <> Z ind
R40419:40422 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40423:40423 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R40441:40443 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R40449:40449 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R40424:40434 compcert.common.Memdata <> align_chunk def
R40436:40440 compcert.common.Memtype <> chunk var
R40444:40448 compcert.common.Memtype <> delta var
R40411:40414 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R40395:40404 compcert.common.Memdata <> size_chunk def
R40406:40410 compcert.common.Memtype <> chunk var
R40415:40418 compcert.common.Memtype <> size var
ax 40459:40482 MEM alloc_left_mapped_inject
R40541:40546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40573:40578 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40596:40601 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40632:40637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40638:40638 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40717:40723 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40724:40724 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40787:40793 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40826:40831 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40832:40832 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40963:40969 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40970:40976 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40979:40985 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41002:41007 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40986:40991 compcert.common.Memtype MEM inject defax
R41000:41001 compcert.common.Memtype <> m2 var
R40996:40998 compcert.common.Memtype <> m1' var
R40993:40994 compcert.common.Memtype <> f' var
R41024:41029 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41008:41018 compcert.common.Values <> inject_incr def
R41022:41023 compcert.common.Memtype <> f' var
R41020:41020 compcert.common.Memtype <> f var
R41053:41059 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41091:41091 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41035:41037 Coq.Init.Logic <> :type_scope:x_'='_x not
R41030:41031 compcert.common.Memtype <> f' var
R41033:41034 compcert.common.Memtype <> b1 var
R41038:41041 Coq.Init.Datatypes <> Some constr
R41042:41042 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41045:41046 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41052:41052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41043:41044 compcert.common.Memtype <> b2 var
R41047:41051 compcert.common.Memtype <> delta var
R41077:41080 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41085:41087 Coq.Init.Logic <> :type_scope:x_'='_x not
R41081:41082 compcert.common.Memtype <> f' var
R41084:41084 compcert.common.Memtype <> b var
R41088:41088 compcert.common.Memtype <> f var
R41090:41090 compcert.common.Memtype <> b var
R41071:41074 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41070:41070 compcert.common.Memtype <> b var
R41075:41076 compcert.common.Memtype <> b1 var
R40884:40890 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40908:40914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40954:40957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40958:40962 Coq.Init.Logic <> False ind
R40925:40928 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40941:40943 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40917:40919 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40915:40916 compcert.common.Memtype <> lo var
R40920:40924 compcert.common.Memtype <> delta var
R40932:40934 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40929:40931 compcert.common.Memtype <> ofs var
R40935:40940 compcert.common.Memtype <> delta' var
R40932:40934 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40929:40931 compcert.common.Memtype <> ofs var
R40935:40940 compcert.common.Memtype <> delta' var
R40946:40948 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40944:40945 compcert.common.Memtype <> hi var
R40949:40953 compcert.common.Memtype <> delta var
R40891:40894 compcert.common.Memtype MEM perm defax
R40907:40907 compcert.common.Memtype <> p var
R40905:40905 compcert.common.Memtype <> k var
R40901:40903 compcert.common.Memtype <> ofs var
R40899:40899 compcert.common.Memtype <> b var
R40896:40897 compcert.common.Memtype <> m1 var
R40864:40866 Coq.Init.Logic <> :type_scope:x_'='_x not
R40861:40861 compcert.common.Memtype <> f var
R40863:40863 compcert.common.Memtype <> b var
R40867:40870 Coq.Init.Datatypes <> Some constr
R40872:40872 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40875:40876 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40883:40883 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40873:40874 compcert.common.Memtype <> b2 var
R40877:40882 compcert.common.Memtype <> delta' var
R40794:40811 compcert.common.Memtype MEM inj_offset_aligned def
R40822:40822 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R40820:40821 compcert.common.Memtype <> hi var
R40823:40824 compcert.common.Memtype <> lo var
R40813:40817 compcert.common.Memtype <> delta var
R40755:40758 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40759:40762 compcert.common.Memtype MEM perm defax
R40786:40786 compcert.common.Memtype <> p var
R40784:40784 compcert.common.Memtype <> k var
R40774:40776 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40771:40773 compcert.common.Memtype <> ofs var
R40777:40781 compcert.common.Memtype <> delta var
R40767:40768 compcert.common.Memtype <> b2 var
R40764:40765 compcert.common.Memtype <> m2 var
R40743:40746 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40750:40752 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40741:40742 compcert.common.Memtype <> lo var
R40747:40749 compcert.common.Memtype <> ofs var
R40747:40749 compcert.common.Memtype <> ofs var
R40753:40754 compcert.common.Memtype <> hi var
R40673:40676 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40686:40689 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R40682:40684 Coq.Init.Logic <> :type_scope:x_'='_x not
R40677:40681 compcert.common.Memtype <> delta var
R40691:40694 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40698:40700 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40695:40697 compcert.common.Memtype <> ofs var
R40695:40697 compcert.common.Memtype <> ofs var
R40701:40716 compcert.lib.Integers Int max_unsigned def
R40655:40658 compcert.common.Memtype MEM perm defax
R40672:40672 compcert.common.Memtype <> p var
R40670:40670 compcert.common.Memtype <> k var
R40666:40668 compcert.common.Memtype <> ofs var
R40663:40664 compcert.common.Memtype <> b2 var
R40660:40661 compcert.common.Memtype <> m2 var
R40603:40606 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R40612:40615 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R40607:40611 compcert.common.Memtype <> delta var
R40607:40611 compcert.common.Memtype <> delta var
R40616:40631 compcert.lib.Integers Int max_unsigned def
R40579:40589 compcert.common.Memtype MEM valid_block def
R40594:40595 compcert.common.Memtype <> b2 var
R40591:40592 compcert.common.Memtype <> m2 var
R40561:40563 Coq.Init.Logic <> :type_scope:x_'='_x not
R40547:40551 compcert.common.Memtype MEM alloc defax
R40559:40560 compcert.common.Memtype <> hi var
R40556:40557 compcert.common.Memtype <> lo var
R40553:40554 compcert.common.Memtype <> m1 var
R40564:40564 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40568:40569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40572:40572 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40565:40567 compcert.common.Memtype <> m1' var
R40570:40571 compcert.common.Memtype <> b1 var
R40527:40532 compcert.common.Memtype MEM inject defax
R40539:40540 compcert.common.Memtype <> m2 var
R40536:40537 compcert.common.Memtype <> m1 var
R40534:40534 compcert.common.Memtype <> f var
ax 41101:41121 MEM alloc_parallel_inject
R41181:41186 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41215:41220 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41231:41234 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41245:41250 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41251:41257 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41260:41261 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41262:41268 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41272:41273 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41274:41280 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41283:41286 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41315:41320 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41303:41305 Coq.Init.Logic <> :type_scope:x_'='_x not
R41287:41291 compcert.common.Memtype MEM alloc defax
R41300:41302 compcert.common.Memtype <> hi2 var
R41296:41298 compcert.common.Memtype <> lo2 var
R41293:41294 compcert.common.Memtype <> m2 var
R41306:41306 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41310:41311 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41314:41314 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41307:41309 compcert.common.Memtype <> m2' var
R41312:41313 compcert.common.Memtype <> b2 var
R41338:41343 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41321:41326 compcert.common.Memtype MEM inject defax
R41335:41337 compcert.common.Memtype <> m2' var
R41331:41333 compcert.common.Memtype <> m1' var
R41328:41329 compcert.common.Memtype <> f' var
R41360:41365 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41344:41354 compcert.common.Values <> inject_incr def
R41358:41359 compcert.common.Memtype <> f' var
R41356:41356 compcert.common.Memtype <> f var
R41385:41391 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41423:41423 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41371:41373 Coq.Init.Logic <> :type_scope:x_'='_x not
R41366:41367 compcert.common.Memtype <> f' var
R41369:41370 compcert.common.Memtype <> b1 var
R41374:41377 Coq.Init.Datatypes <> Some constr
R41378:41378 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41381:41382 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41384:41384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41379:41380 compcert.common.Memtype <> b2 var
R41409:41412 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41417:41419 Coq.Init.Logic <> :type_scope:x_'='_x not
R41413:41414 compcert.common.Memtype <> f' var
R41416:41416 compcert.common.Memtype <> b var
R41420:41420 compcert.common.Memtype <> f var
R41422:41422 compcert.common.Memtype <> b var
R41403:41406 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41402:41402 compcert.common.Memtype <> b var
R41407:41408 compcert.common.Memtype <> b1 var
R41238:41241 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R41235:41237 compcert.common.Memtype <> hi1 var
R41242:41244 compcert.common.Memtype <> hi2 var
R41224:41227 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R41221:41223 compcert.common.Memtype <> lo2 var
R41228:41230 compcert.common.Memtype <> lo1 var
R41203:41205 Coq.Init.Logic <> :type_scope:x_'='_x not
R41187:41191 compcert.common.Memtype MEM alloc defax
R41200:41202 compcert.common.Memtype <> hi1 var
R41196:41198 compcert.common.Memtype <> lo1 var
R41193:41194 compcert.common.Memtype <> m1 var
R41206:41206 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41210:41211 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41214:41214 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41207:41209 compcert.common.Memtype <> m1' var
R41212:41213 compcert.common.Memtype <> b1 var
R41167:41172 compcert.common.Memtype MEM inject defax
R41179:41180 compcert.common.Memtype <> m2 var
R41176:41177 compcert.common.Memtype <> m1 var
R41174:41174 compcert.common.Memtype <> f var
ax 41433:41443 MEM free_inject
R41498:41503 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41529:41534 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41561:41566 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41567:41567 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41737:41743 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41744:41749 compcert.common.Memtype MEM inject defax
R41757:41759 compcert.common.Memtype <> m2' var
R41753:41755 compcert.common.Memtype <> m1' var
R41751:41751 compcert.common.Memtype <> f var
R41618:41621 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41640:41643 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41666:41673 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41674:41680 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41684:41685 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41686:41692 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41696:41697 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41717:41720 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41698:41699 Coq.Lists.List <> In def
R41716:41716 compcert.common.Memtype <> l var
R41701:41701 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41704:41705 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41709:41710 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41714:41714 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41702:41703 compcert.common.Memtype <> b1 var
R41706:41708 compcert.common.Memtype <> lo1 var
R41711:41713 compcert.common.Memtype <> hi1 var
R41724:41727 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41731:41733 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41721:41723 compcert.common.Memtype <> lo1 var
R41728:41730 compcert.common.Memtype <> ofs var
R41728:41730 compcert.common.Memtype <> ofs var
R41734:41736 compcert.common.Memtype <> hi1 var
R41646:41649 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41661:41663 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41644:41645 compcert.common.Memtype <> lo var
R41653:41655 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41650:41652 compcert.common.Memtype <> ofs var
R41656:41660 compcert.common.Memtype <> delta var
R41653:41655 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41650:41652 compcert.common.Memtype <> ofs var
R41656:41660 compcert.common.Memtype <> delta var
R41664:41665 compcert.common.Memtype <> hi var
R41622:41625 compcert.common.Memtype MEM perm defax
R41639:41639 compcert.common.Memtype <> p var
R41637:41637 compcert.common.Memtype <> k var
R41633:41635 compcert.common.Memtype <> ofs var
R41630:41631 compcert.common.Memtype <> b1 var
R41627:41628 compcert.common.Memtype <> m1 var
R41601:41603 Coq.Init.Logic <> :type_scope:x_'='_x not
R41597:41597 compcert.common.Memtype <> f var
R41599:41600 compcert.common.Memtype <> b1 var
R41604:41607 Coq.Init.Datatypes <> Some constr
R41608:41608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41610:41611 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41617:41617 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41609:41609 compcert.common.Memtype <> b var
R41612:41616 compcert.common.Memtype <> delta var
R41550:41552 Coq.Init.Logic <> :type_scope:x_'='_x not
R41535:41538 compcert.common.Memtype MEM free defax
R41548:41549 compcert.common.Memtype <> hi var
R41545:41546 compcert.common.Memtype <> lo var
R41543:41543 compcert.common.Memtype <> b var
R41540:41541 compcert.common.Memtype <> m2 var
R41553:41556 Coq.Init.Datatypes <> Some constr
R41558:41560 compcert.common.Memtype <> m2' var
R41518:41520 Coq.Init.Logic <> :type_scope:x_'='_x not
R41504:41512 compcert.common.Memtype MEM free_list def
R41517:41517 compcert.common.Memtype <> l var
R41514:41515 compcert.common.Memtype <> m1 var
R41521:41524 Coq.Init.Datatypes <> Some constr
R41526:41528 compcert.common.Memtype <> m1' var
R41484:41489 compcert.common.Memtype MEM inject defax
R41496:41497 compcert.common.Memtype <> m2 var
R41493:41494 compcert.common.Memtype <> m1 var
R41491:41491 compcert.common.Memtype <> f var
ax 41769:41788 MEM free_parallel_inject
R41846:41851 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41878:41883 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41905:41910 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41911:41917 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41921:41927 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41975:41980 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41964:41966 Coq.Init.Logic <> :type_scope:x_'='_x not
R41928:41931 compcert.common.Memtype MEM free defax
R41955:41957 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41953:41954 compcert.common.Memtype <> hi var
R41958:41962 compcert.common.Memtype <> delta var
R41942:41944 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41940:41941 compcert.common.Memtype <> lo var
R41945:41949 compcert.common.Memtype <> delta var
R41936:41937 compcert.common.Memtype <> b' var
R41933:41934 compcert.common.Memtype <> m2 var
R41967:41970 Coq.Init.Datatypes <> Some constr
R41972:41974 compcert.common.Memtype <> m2' var
R41981:41986 compcert.common.Memtype MEM inject defax
R41994:41996 compcert.common.Memtype <> m2' var
R41990:41992 compcert.common.Memtype <> m1' var
R41988:41988 compcert.common.Memtype <> f var
R41887:41889 Coq.Init.Logic <> :type_scope:x_'='_x not
R41884:41884 compcert.common.Memtype <> f var
R41886:41886 compcert.common.Memtype <> b var
R41890:41893 Coq.Init.Datatypes <> Some constr
R41894:41894 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41897:41898 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41904:41904 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41895:41896 compcert.common.Memtype <> b' var
R41899:41903 compcert.common.Memtype <> delta var
R41867:41869 Coq.Init.Logic <> :type_scope:x_'='_x not
R41852:41855 compcert.common.Memtype MEM free defax
R41865:41866 compcert.common.Memtype <> hi var
R41862:41863 compcert.common.Memtype <> lo var
R41860:41860 compcert.common.Memtype <> b var
R41857:41858 compcert.common.Memtype <> m1 var
R41870:41873 Coq.Init.Datatypes <> Some constr
R41875:41877 compcert.common.Memtype <> m1' var
R41832:41837 compcert.common.Memtype MEM inject defax
R41844:41845 compcert.common.Memtype <> m2 var
R41841:41842 compcert.common.Memtype <> m1 var
R41839:41839 compcert.common.Memtype <> f var
ax 42006:42024 MEM drop_outside_inject
R42075:42080 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42114:42119 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42120:42120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42232:42238 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42239:42244 compcert.common.Memtype MEM inject defax
R42251:42253 compcert.common.Memtype <> m2' var
R42248:42249 compcert.common.Memtype <> m1 var
R42246:42246 compcert.common.Memtype <> f var
R42171:42178 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42197:42200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42223:42226 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42227:42231 Coq.Init.Logic <> False ind
R42203:42206 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R42218:42220 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R42201:42202 compcert.common.Memtype <> lo var
R42210:42212 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R42207:42209 compcert.common.Memtype <> ofs var
R42213:42217 compcert.common.Memtype <> delta var
R42210:42212 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R42207:42209 compcert.common.Memtype <> ofs var
R42213:42217 compcert.common.Memtype <> delta var
R42221:42222 compcert.common.Memtype <> hi var
R42179:42182 compcert.common.Memtype MEM perm defax
R42196:42196 compcert.common.Memtype <> p var
R42194:42194 compcert.common.Memtype <> k var
R42190:42192 compcert.common.Memtype <> ofs var
R42187:42188 compcert.common.Memtype <> b' var
R42184:42185 compcert.common.Memtype <> m1 var
R42154:42156 Coq.Init.Logic <> :type_scope:x_'='_x not
R42150:42150 compcert.common.Memtype <> f var
R42152:42153 compcert.common.Memtype <> b' var
R42157:42160 Coq.Init.Datatypes <> Some constr
R42161:42161 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42163:42164 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42170:42170 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42162:42162 compcert.common.Memtype <> b var
R42165:42169 compcert.common.Memtype <> delta var
R42103:42105 Coq.Init.Logic <> :type_scope:x_'='_x not
R42081:42089 compcert.common.Memtype MEM drop_perm defax
R42102:42102 compcert.common.Memtype <> p var
R42099:42100 compcert.common.Memtype <> hi var
R42096:42097 compcert.common.Memtype <> lo var
R42094:42094 compcert.common.Memtype <> b var
R42091:42092 compcert.common.Memtype <> m2 var
R42106:42109 Coq.Init.Datatypes <> Some constr
R42111:42113 compcert.common.Memtype <> m2' var
R42061:42066 compcert.common.Memtype MEM inject defax
R42073:42074 compcert.common.Memtype <> m2 var
R42070:42071 compcert.common.Memtype <> m1 var
R42068:42068 compcert.common.Memtype <> f var
def 42319:42326 MEM flat_inj
R42334:42338 compcert.common.Values <> block def
R42343:42348 compcert.common.Values <> meminj syndef
R42363:42367 compcert.common.Values <> block def
R42376:42378 compcert.lib.Coqlib <> plt def
R42382:42384 compcert.common.Memtype <> thr var
R42380:42380 compcert.common.Memtype <> b var
R42407:42410 Coq.Init.Datatypes <> None constr
R42391:42394 Coq.Init.Datatypes <> Some constr
R42395:42395 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42397:42398 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42400:42400 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42396:42396 compcert.common.Memtype <> b var
ax 42424:42437 MEM inject_neutral
R42453:42457 compcert.common.Values <> block def
R42464:42466 compcert.common.Memtype MEM mem defax
ax 42483:42496 MEM neutral_inject
R42541:42546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42547:42552 compcert.common.Memtype MEM inject defax
R42581:42581 compcert.common.Memtype <> m var
R42579:42579 compcert.common.Memtype <> m var
R42555:42562 compcert.common.Memtype MEM flat_inj def
R42565:42573 compcert.common.Memtype MEM nextblock defax
R42575:42575 compcert.common.Memtype <> m var
R42511:42524 compcert.common.Memtype MEM inject_neutral defax
R42540:42540 compcert.common.Memtype <> m var
R42527:42535 compcert.common.Memtype MEM nextblock defax
R42537:42537 compcert.common.Memtype <> m var
ax 42591:42610 MEM empty_inject_neutral
R42627:42640 compcert.common.Memtype MEM inject_neutral defax
R42646:42650 compcert.common.Memtype MEM empty defax
R42642:42644 compcert.common.Memtype <> thr var
ax 42660:42679 MEM alloc_inject_neutral
R42734:42739 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42760:42765 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42787:42792 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42793:42806 compcert.common.Memtype MEM inject_neutral defax
R42812:42813 compcert.common.Memtype <> m' var
R42808:42810 compcert.common.Memtype <> thr var
R42766:42768 compcert.lib.Coqlib <> Plt def
R42784:42786 compcert.common.Memtype <> thr var
R42771:42779 compcert.common.Memtype MEM nextblock defax
R42781:42781 compcert.common.Memtype <> m var
R42740:42753 compcert.common.Memtype MEM inject_neutral defax
R42759:42759 compcert.common.Memtype <> m var
R42755:42757 compcert.common.Memtype <> thr var
R42724:42726 Coq.Init.Logic <> :type_scope:x_'='_x not
R42711:42715 compcert.common.Memtype MEM alloc defax
R42722:42723 compcert.common.Memtype <> hi var
R42719:42720 compcert.common.Memtype <> lo var
R42717:42717 compcert.common.Memtype <> m var
R42727:42727 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42730:42731 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42733:42733 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42728:42729 compcert.common.Memtype <> m' var
R42732:42732 compcert.common.Memtype <> b var
ax 42823:42842 MEM store_inject_neutral
R42911:42916 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42937:42942 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42952:42957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42987:42992 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42993:43006 compcert.common.Memtype MEM inject_neutral defax
R43012:43013 compcert.common.Memtype <> m' var
R43008:43010 compcert.common.Memtype <> thr var
R42958:42967 compcert.common.Values Val inject ind
R42986:42986 compcert.common.Memtype <> v var
R42984:42984 compcert.common.Memtype <> v var
R42970:42977 compcert.common.Memtype MEM flat_inj def
R42979:42981 compcert.common.Memtype <> thr var
R42943:42945 compcert.lib.Coqlib <> Plt def
R42949:42951 compcert.common.Memtype <> thr var
R42947:42947 compcert.common.Memtype <> b var
R42917:42930 compcert.common.Memtype MEM inject_neutral defax
R42936:42936 compcert.common.Memtype <> m var
R42932:42934 compcert.common.Memtype <> thr var
R42901:42903 Coq.Init.Logic <> :type_scope:x_'='_x not
R42880:42884 compcert.common.Memtype MEM store defax
R42900:42900 compcert.common.Memtype <> v var
R42896:42898 compcert.common.Memtype <> ofs var
R42894:42894 compcert.common.Memtype <> b var
R42892:42892 compcert.common.Memtype <> m var
R42886:42890 compcert.common.Memtype <> chunk var
R42904:42907 Coq.Init.Datatypes <> Some constr
R42909:42910 compcert.common.Memtype <> m' var
ax 43023:43041 MEM drop_inject_neutral
R43106:43111 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43132:43137 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43147:43152 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43153:43166 compcert.common.Memtype MEM inject_neutral defax
R43172:43173 compcert.common.Memtype <> m' var
R43168:43170 compcert.common.Memtype <> thr var
R43138:43140 compcert.lib.Coqlib <> Plt def
R43144:43146 compcert.common.Memtype <> thr var
R43142:43142 compcert.common.Memtype <> b var
R43112:43125 compcert.common.Memtype MEM inject_neutral defax
R43131:43131 compcert.common.Memtype <> m var
R43127:43129 compcert.common.Memtype <> thr var
R43096:43098 Coq.Init.Logic <> :type_scope:x_'='_x not
R43075:43083 compcert.common.Memtype MEM drop_perm defax
R43095:43095 compcert.common.Memtype <> p var
R43092:43093 compcert.common.Memtype <> hi var
R43089:43090 compcert.common.Memtype <> lo var
R43087:43087 compcert.common.Memtype <> b var
R43085:43085 compcert.common.Memtype <> m var
R43099:43102 Coq.Init.Datatypes <> Some constr
R43104:43105 compcert.common.Memtype <> m' var
R43181:43183 compcert.common.Memtype MEM <> modtype
