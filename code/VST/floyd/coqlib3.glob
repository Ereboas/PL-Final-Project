DIGEST 88384efdf8645633f6ff0042e0a0f570
FVST.floyd.coqlib3
R8:24 Coq.funind.Recdef <> <> lib
R42:60 compcert.lib.Coqlib <> <> lib
R78:98 compcert.lib.Integers <> <> lib
R116:133 Coq.Strings.String <> <> lib
R151:167 Coq.Strings.Ascii <> <> lib
R185:198 Coq.Lists.List <> <> lib
R216:238 Coq.Sorting.Permutation <> <> lib
R256:270 VST.msl.Coqlib2 <> <> lib
R288:304 VST.veric.coqlib4 <> <> lib
prf 314:339 <> power_nat_one_divede_other
R355:357 Coq.Init.Datatypes <> nat ind
binder 349:349 <> n:1
binder 351:351 <> m:2
R397:400 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R362:362 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R378:380 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R396:396 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R363:375 Coq.ZArith.Zpower <> two_power_nat def
R377:377 VST.floyd.coqlib3 <> n:1 var
R381:393 Coq.ZArith.Zpower <> two_power_nat def
R395:395 VST.floyd.coqlib3 <> m:2 var
R401:401 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R417:419 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R435:435 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R402:414 Coq.ZArith.Zpower <> two_power_nat def
R416:416 VST.floyd.coqlib3 <> m:2 var
R420:432 Coq.ZArith.Zpower <> two_power_nat def
R434:434 VST.floyd.coqlib3 <> n:1 var
R468:476 Coq.ZArith.Zorder <> Zle_0_nat thm
R468:476 Coq.ZArith.Zorder <> Zle_0_nat thm
R494:502 Coq.ZArith.Zorder <> Zle_0_nat thm
R494:502 Coq.ZArith.Zorder <> Zle_0_nat thm
R518:536 compcert.lib.Coqlib <> two_power_nat_two_p thm
R518:536 compcert.lib.Coqlib <> two_power_nat_two_p thm
R518:536 compcert.lib.Coqlib <> two_power_nat_two_p thm
R518:536 compcert.lib.Coqlib <> two_power_nat_two_p thm
R518:536 compcert.lib.Coqlib <> two_power_nat_two_p thm
R551:553 compcert.lib.Coqlib <> zle def
R569:576 Coq.ZArith.BinInt Z of_nat def
R556:563 Coq.ZArith.BinInt Z of_nat def
R551:553 compcert.lib.Coqlib <> zle def
R569:576 Coq.ZArith.BinInt Z of_nat def
R556:563 Coq.ZArith.BinInt Z of_nat def
R605:609 Coq.ZArith.Zpower <> two_p def
R622:624 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R612:619 Coq.ZArith.BinInt Z of_nat def
R625:632 Coq.ZArith.BinInt Z of_nat def
R605:609 Coq.ZArith.Zpower <> two_p def
R622:624 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R612:619 Coq.ZArith.BinInt Z of_nat def
R625:632 Coq.ZArith.BinInt Z of_nat def
R654:665 Coq.ZArith.Zpower <> two_p_is_exp thm
R654:665 Coq.ZArith.Zpower <> two_p_is_exp thm
R654:665 Coq.ZArith.Zpower <> two_p_is_exp thm
R720:724 Coq.ZArith.Zpower <> two_p def
R737:739 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R727:734 Coq.ZArith.BinInt Z of_nat def
R740:747 Coq.ZArith.BinInt Z of_nat def
R720:724 Coq.ZArith.Zpower <> two_p def
R737:739 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R727:734 Coq.ZArith.BinInt Z of_nat def
R740:747 Coq.ZArith.BinInt Z of_nat def
R769:780 Coq.ZArith.Zpower <> two_p_is_exp thm
R769:780 Coq.ZArith.Zpower <> two_p_is_exp thm
R769:780 Coq.ZArith.Zpower <> two_p_is_exp thm
prf 824:842 <> multiple_divide_mod
binder 852:852 <> a:3
binder 854:854 <> b:4
binder 856:856 <> c:5
R864:867 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R868:868 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R887:891 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R892:892 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R894:897 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R909:910 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R893:893 VST.floyd.coqlib3 <> a:3 var
R903:907 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R899:901 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R898:898 VST.floyd.coqlib3 <> c:5 var
R902:902 VST.floyd.coqlib3 <> a:3 var
R908:908 VST.floyd.coqlib3 <> b:4 var
R876:879 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R869:869 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R871:873 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R875:875 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R870:870 VST.floyd.coqlib3 <> a:3 var
R874:874 VST.floyd.coqlib3 <> b:4 var
R880:880 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R882:884 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R886:886 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R881:881 VST.floyd.coqlib3 <> b:4 var
R885:885 VST.floyd.coqlib3 <> a:3 var
R860:862 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R859:859 VST.floyd.coqlib3 <> b:4 var
R984:987 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R997:997 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R993:995 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R989:991 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R955:975 Coq.ZArith.BinInt Z divide_add_cancel_r thm
R984:987 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R997:997 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R993:995 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R989:991 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R955:975 Coq.ZArith.BinInt Z divide_add_cancel_r thm
R1013:1026 Coq.ZArith.BinInt Z divide_mul_l thm
R1013:1026 Coq.ZArith.BinInt Z divide_mul_l thm
R1050:1061 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R1050:1061 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R1050:1061 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R1050:1061 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R1080:1093 Coq.ZArith.BinInt Z divide_mul_r thm
R1096:1108 Coq.ZArith.BinInt Z divide_refl thm
R1080:1093 Coq.ZArith.BinInt Z divide_mul_r thm
R1096:1108 Coq.ZArith.BinInt Z divide_refl thm
R1151:1161 Coq.ZArith.BinInt Z mul_assoc thm
R1164:1173 Coq.ZArith.Zdiv <> Z_mod_mult thm
R1151:1161 Coq.ZArith.BinInt Z mul_assoc thm
R1151:1161 Coq.ZArith.BinInt Z mul_assoc thm
R1164:1173 Coq.ZArith.Zdiv <> Z_mod_mult thm
R1164:1173 Coq.ZArith.Zdiv <> Z_mod_mult thm
R1186:1197 Coq.ZArith.BinInt Z divide_0_r thm
R1186:1197 Coq.ZArith.BinInt Z divide_0_r thm
prf 1212:1223 <> divide_align
R1238:1238 Coq.Numbers.BinNums <> Z ind
binder 1233:1233 <> x:6
binder 1235:1235 <> y:7
R1246:1249 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1262:1265 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1275:1277 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1266:1270 compcert.lib.Coqlib <> align def
R1274:1274 VST.floyd.coqlib3 <> x:6 var
R1272:1272 VST.floyd.coqlib3 <> y:7 var
R1278:1278 VST.floyd.coqlib3 <> y:7 var
R1250:1257 Coq.ZArith.BinInt Z divide def
R1261:1261 VST.floyd.coqlib3 <> y:7 var
R1259:1259 VST.floyd.coqlib3 <> x:6 var
R1242:1244 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R1241:1241 VST.floyd.coqlib3 <> x:6 var
R1307:1311 compcert.lib.Coqlib <> align def
R1356:1366 compcert.lib.Coqlib <> Zdiv_unique thm
R1392:1394 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1379:1381 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1375:1377 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1371:1373 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R1356:1366 compcert.lib.Coqlib <> Zdiv_unique thm
R1392:1394 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1379:1381 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1375:1377 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1371:1373 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R1423:1425 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1419:1421 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1415:1417 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1411:1413 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R1432:1435 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1441:1441 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1428:1430 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R1437:1439 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1423:1425 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1419:1421 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1415:1417 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1411:1413 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R1432:1435 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1441:1441 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1428:1430 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R1437:1439 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1463:1466 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1472:1474 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1468:1470 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1468:1470 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1463:1466 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1472:1474 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1468:1470 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1468:1470 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
prf 1535:1545 <> arith_aux00
binder 1555:1555 <> a:8
binder 1557:1557 <> b:9
R1566:1569 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1594:1597 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1603:1605 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1599:1601 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1598:1598 VST.floyd.coqlib3 <> a:8 var
R1602:1602 VST.floyd.coqlib3 <> b:9 var
R1575:1577 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1578:1585 Coq.ZArith.BinInt Z to_nat def
R1589:1591 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1588:1588 VST.floyd.coqlib3 <> a:8 var
R1592:1592 VST.floyd.coqlib3 <> b:9 var
R1561:1564 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R1560:1560 VST.floyd.coqlib3 <> b:9 var
R1565:1565 VST.floyd.coqlib3 <> a:8 var
R1639:1646 Coq.ZArith.Znat Z2Nat id thm
R1650:1652 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1639:1646 Coq.ZArith.Znat Z2Nat id thm
R1650:1652 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
prf 1723:1733 <> arith_aux01
binder 1743:1743 <> a:10
binder 1745:1745 <> b:11
binder 1747:1747 <> n:12
R1772:1775 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1777:1779 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R1776:1776 VST.floyd.coqlib3 <> b:11 var
R1780:1780 VST.floyd.coqlib3 <> a:10 var
R1753:1755 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1750:1750 Coq.Init.Datatypes <> S constr
R1752:1752 VST.floyd.coqlib3 <> n:12 var
R1756:1763 Coq.ZArith.BinInt Z to_nat def
R1767:1769 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1766:1766 VST.floyd.coqlib3 <> a:10 var
R1770:1770 VST.floyd.coqlib3 <> b:11 var
R1812:1814 compcert.lib.Coqlib <> zlt def
R1812:1814 compcert.lib.Coqlib <> zlt def
R1840:1848 VST.veric.coqlib4 <> Z2Nat_neg thm
R1840:1848 VST.veric.coqlib4 <> Z2Nat_neg thm
R1840:1848 VST.veric.coqlib4 <> Z2Nat_neg thm
R1895:1902 Coq.ZArith.Znat Z2Nat id thm
R1906:1908 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1895:1902 Coq.ZArith.Znat Z2Nat id thm
R1906:1908 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R1971:1984 Coq.ZArith.Znat Nat2Z inj_succ thm
R1971:1984 Coq.ZArith.Znat Nat2Z inj_succ thm
R1971:1984 Coq.ZArith.Znat Nat2Z inj_succ thm
prf 2014:2024 <> arith_aux02
binder 2034:2034 <> n:13
binder 2036:2036 <> a:14
binder 2038:2038 <> b:15
R2063:2066 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2068:2070 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2067:2067 VST.floyd.coqlib3 <> n:13 var
R2071:2078 Coq.ZArith.BinInt Z to_nat def
R2082:2084 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2081:2081 VST.floyd.coqlib3 <> a:14 var
R2085:2090 Coq.ZArith.BinInt Z succ def
R2092:2092 VST.floyd.coqlib3 <> b:15 var
R2044:2046 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2041:2041 Coq.Init.Datatypes <> S constr
R2043:2043 VST.floyd.coqlib3 <> n:13 var
R2047:2054 Coq.ZArith.BinInt Z to_nat def
R2058:2060 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2057:2057 VST.floyd.coqlib3 <> a:14 var
R2061:2061 VST.floyd.coqlib3 <> b:15 var
R2126:2136 VST.floyd.coqlib3 <> arith_aux01 thm
R2126:2136 VST.floyd.coqlib3 <> arith_aux01 thm
R2160:2167 Coq.ZArith.Znat Z2Nat id thm
R2171:2173 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2160:2167 Coq.ZArith.Znat Z2Nat id thm
R2171:2173 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2232:2234 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2235:2240 Coq.ZArith.BinInt Z succ def
R2256:2258 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2252:2254 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2232:2234 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2235:2240 Coq.ZArith.BinInt Z succ def
R2256:2258 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2252:2254 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2297:2310 Coq.ZArith.Znat Nat2Z inj_succ thm
R2297:2310 Coq.ZArith.Znat Nat2Z inj_succ thm
R2297:2310 Coq.ZArith.Znat Nat2Z inj_succ thm
R2343:2345 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2324:2329 Coq.ZArith.BinInt Z succ def
R2332:2339 Coq.ZArith.BinInt Z of_nat def
R2355:2362 Coq.ZArith.BinInt Z of_nat def
R2343:2345 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2324:2329 Coq.ZArith.BinInt Z succ def
R2332:2339 Coq.ZArith.BinInt Z of_nat def
R2355:2362 Coq.ZArith.BinInt Z of_nat def
R2385:2392 Coq.ZArith.Znat Nat2Z id thm
R2385:2392 Coq.ZArith.Znat Nat2Z id thm
R2385:2392 Coq.ZArith.Znat Nat2Z id thm
prf 2415:2425 <> arith_aux03
binder 2435:2435 <> a:16
binder 2437:2437 <> b:17
binder 2439:2439 <> c:18
R2450:2455 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2470:2475 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2477:2480 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2482:2484 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R2481:2481 VST.floyd.coqlib3 <> a:16 var
R2486:2488 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2485:2485 VST.floyd.coqlib3 <> b:17 var
R2489:2494 Coq.ZArith.BinInt Z succ def
R2496:2496 VST.floyd.coqlib3 <> c:18 var
R2457:2460 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2462:2464 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R2461:2461 VST.floyd.coqlib3 <> a:16 var
R2466:2468 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2465:2465 VST.floyd.coqlib3 <> b:17 var
R2469:2469 VST.floyd.coqlib3 <> c:18 var
R2445:2448 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2449:2449 VST.floyd.coqlib3 <> b:17 var
R2531:2534 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2527:2529 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2536:2538 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2539:2544 Coq.ZArith.BinInt Z succ def
R2559:2575 Coq.ZArith.Zorder <> Zmult_le_compat_l thm
R2531:2534 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2527:2529 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2536:2538 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2539:2544 Coq.ZArith.BinInt Z succ def
R2559:2575 Coq.ZArith.Zorder <> Zmult_le_compat_l thm
prf 2603:2613 <> arith_aux04
binder 2623:2623 <> a:19
binder 2625:2625 <> b:20
binder 2627:2627 <> c:21
R2643:2648 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2656:2661 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2662:2662 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R2664:2666 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R2674:2674 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R2663:2663 VST.floyd.coqlib3 <> a:19 var
R2668:2672 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R2667:2667 VST.floyd.coqlib3 <> b:20 var
R2673:2673 VST.floyd.coqlib3 <> c:21 var
R2649:2649 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R2651:2653 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R2655:2655 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R2650:2650 VST.floyd.coqlib3 <> a:19 var
R2654:2654 VST.floyd.coqlib3 <> b:20 var
R2633:2636 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R2638:2641 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R2637:2637 VST.floyd.coqlib3 <> b:20 var
R2637:2637 VST.floyd.coqlib3 <> b:20 var
R2642:2642 VST.floyd.coqlib3 <> c:21 var
R2706:2708 compcert.lib.Coqlib <> zlt def
R2706:2708 compcert.lib.Coqlib <> zlt def
R2728:2737 Coq.ZArith.Zdiv <> Zmod_small thm
R2728:2737 Coq.ZArith.Zdiv <> Zmod_small thm
R2728:2737 Coq.ZArith.Zdiv <> Zmod_small thm
R2770:2772 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2770:2772 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2807:2821 Coq.ZArith.Zdiv <> Z_mod_same_full thm
R2807:2821 Coq.ZArith.Zdiv <> Z_mod_same_full thm
R2807:2821 Coq.ZArith.Zdiv <> Z_mod_same_full thm
R2834:2845 Coq.ZArith.BinInt Z divide_0_r thm
R2834:2845 Coq.ZArith.BinInt Z divide_0_r thm
prf 2860:2870 <> arith_aux05
binder 2880:2881 <> lo:22
binder 2883:2884 <> hi:23
R2894:2897 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2905:2910 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2912:2915 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R2933:2936 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R2916:2920 Coq.ZArith.BinInt Z max def
R2927:2929 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2925:2926 VST.floyd.coqlib3 <> hi:23 var
R2930:2931 VST.floyd.coqlib3 <> lo:22 var
R2916:2920 Coq.ZArith.BinInt Z max def
R2927:2929 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2925:2926 VST.floyd.coqlib3 <> hi:23 var
R2930:2931 VST.floyd.coqlib3 <> lo:22 var
R2937:2938 VST.floyd.coqlib3 <> hi:23 var
R2899:2902 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2903:2904 VST.floyd.coqlib3 <> hi:23 var
R2888:2891 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2892:2893 VST.floyd.coqlib3 <> lo:22 var
R2970:2972 compcert.lib.Coqlib <> zle def
R2970:2972 compcert.lib.Coqlib <> zle def
R2994:3000 Coq.ZArith.BinInt Z max_r thm
R2994:3000 Coq.ZArith.BinInt Z max_r thm
R2994:3000 Coq.ZArith.BinInt Z max_r thm
R3031:3037 Coq.ZArith.BinInt Z max_l thm
R3031:3037 Coq.ZArith.BinInt Z max_l thm
R3031:3037 Coq.ZArith.BinInt Z max_l thm
prf 3068:3078 <> arith_aux06
binder 3088:3089 <> lo:24
binder 3091:3092 <> hi:25
binder 3094:3094 <> n:26
R3109:3112 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3125:3128 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3130:3133 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3156:3159 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3136:3138 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3134:3135 VST.floyd.coqlib3 <> lo:24 var
R3139:3143 Coq.ZArith.BinInt Z max def
R3150:3152 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R3148:3149 VST.floyd.coqlib3 <> hi:25 var
R3153:3154 VST.floyd.coqlib3 <> lo:24 var
R3136:3138 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3134:3135 VST.floyd.coqlib3 <> lo:24 var
R3139:3143 Coq.ZArith.BinInt Z max def
R3150:3152 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R3148:3149 VST.floyd.coqlib3 <> hi:25 var
R3153:3154 VST.floyd.coqlib3 <> lo:24 var
R3160:3160 VST.floyd.coqlib3 <> n:26 var
R3114:3117 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3120:3123 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3118:3119 VST.floyd.coqlib3 <> hi:25 var
R3118:3119 VST.floyd.coqlib3 <> hi:25 var
R3124:3124 VST.floyd.coqlib3 <> n:26 var
R3098:3101 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3104:3107 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R3102:3103 VST.floyd.coqlib3 <> lo:24 var
R3102:3103 VST.floyd.coqlib3 <> lo:24 var
R3108:3108 VST.floyd.coqlib3 <> n:26 var
R3192:3194 compcert.lib.Coqlib <> zle def
R3192:3194 compcert.lib.Coqlib <> zle def
R3216:3222 Coq.ZArith.BinInt Z max_r thm
R3216:3222 Coq.ZArith.BinInt Z max_r thm
R3216:3222 Coq.ZArith.BinInt Z max_r thm
R3253:3259 Coq.ZArith.BinInt Z max_l thm
R3253:3259 Coq.ZArith.BinInt Z max_l thm
R3253:3259 Coq.ZArith.BinInt Z max_l thm
R3429:3431 compcert.lib.Integers <> int syndef
R3429:3431 compcert.lib.Integers <> int syndef
R3610:3615 compcert.lib.Integers <> ptrofs syndef
R3610:3615 compcert.lib.Integers <> ptrofs syndef
R3634:3653 compcert.lib.Integers Ptrofs repr_unsigned thm
R3676:3696 compcert.lib.Integers Ptrofs unsigned_range thm
R3719:3733 compcert.lib.Integers Ptrofs unsigned def
R3450:3466 compcert.lib.Integers Int repr_unsigned thm
R3489:3506 compcert.lib.Integers Int unsigned_range thm
R3529:3540 compcert.lib.Integers Int unsigned def
def 3942:3949 <> int_modm
binder 3951:3951 <> x:27
R3957:3961 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R3956:3956 VST.floyd.coqlib3 <> x:27 var
R3962:3972 compcert.lib.Integers Int modulus def
prf 3982:3996 <> int_modm_mod_eq
binder 4009:4009 <> x:28
binder 4011:4011 <> y:29
R4041:4044 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4062:4064 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4046:4050 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R4045:4045 VST.floyd.coqlib3 <> x:28 var
R4051:4061 compcert.lib.Integers Int modulus def
R4065:4072 VST.floyd.coqlib3 <> int_modm def
R4074:4074 VST.floyd.coqlib3 <> y:29 var
R4014:4024 compcert.lib.Zbits <> eqmod def
R4040:4040 VST.floyd.coqlib3 <> y:29 var
R4038:4038 VST.floyd.coqlib3 <> x:28 var
R4026:4036 compcert.lib.Integers Int modulus def
R4102:4119 compcert.lib.Zbits <> eqmod_mod_eq thm
R4102:4119 compcert.lib.Zbits <> eqmod_mod_eq thm
R4136:4150 compcert.lib.Integers Int modulus_pos thm
R4136:4150 compcert.lib.Integers Int modulus_pos thm
prf 4165:4181 <> int_modm_mod_elim
binder 4191:4191 <> x:30
binder 4193:4193 <> y:31
R4223:4226 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4227:4237 compcert.lib.Zbits <> eqmod def
R4271:4271 VST.floyd.coqlib3 <> y:31 var
R4253:4257 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R4252:4252 VST.floyd.coqlib3 <> x:30 var
R4258:4268 compcert.lib.Integers Int modulus def
R4239:4249 compcert.lib.Integers Int modulus def
R4196:4206 compcert.lib.Zbits <> eqmod def
R4222:4222 VST.floyd.coqlib3 <> y:31 var
R4220:4220 VST.floyd.coqlib3 <> x:30 var
R4208:4218 compcert.lib.Integers Int modulus def
R4300:4316 compcert.lib.Zbits <> eqmod_trans thm
R4300:4316 compcert.lib.Zbits <> eqmod_trans thm
R4334:4348 compcert.lib.Zbits <> eqmod_sym thm
R4351:4365 compcert.lib.Zbits <> eqmod_mod thm
R4334:4348 compcert.lib.Zbits <> eqmod_sym thm
R4351:4365 compcert.lib.Zbits <> eqmod_mod thm
R4376:4390 compcert.lib.Integers Int modulus_pos thm
R4376:4390 compcert.lib.Integers Int modulus_pos thm
def 4410:4418 <> int_reprm
R4423:4430 compcert.lib.Integers Int repr def
prf 4440:4455 <> int_modm_repr_eq
binder 4465:4465 <> x:32
binder 4467:4467 <> y:33
R4497:4500 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4511:4513 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4501:4508 compcert.lib.Integers Int repr def
R4510:4510 VST.floyd.coqlib3 <> x:32 var
R4514:4522 VST.floyd.coqlib3 <> int_reprm def
R4524:4524 VST.floyd.coqlib3 <> y:33 var
R4470:4480 compcert.lib.Zbits <> eqmod def
R4496:4496 VST.floyd.coqlib3 <> y:33 var
R4494:4494 VST.floyd.coqlib3 <> x:32 var
R4482:4492 compcert.lib.Integers Int modulus def
R4552:4567 compcert.lib.Integers Int eqm_samerepr thm
R4552:4567 compcert.lib.Integers Int eqm_samerepr thm
R4680:4682 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4680:4682 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4822:4824 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R4822:4824 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R4964:4966 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R4964:4966 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R5105:5106 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R5105:5106 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R5215:5219 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R5220:5230 compcert.lib.Integers Int modulus def
R5215:5219 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R5220:5230 compcert.lib.Integers Int modulus def
R5322:5329 VST.floyd.coqlib3 <> int_modm def
R5322:5329 VST.floyd.coqlib3 <> int_modm def
R5444:5459 compcert.lib.Zbits <> eqmod_refl thm
R5461:5471 compcert.lib.Integers Int modulus def
R5376:5392 VST.floyd.coqlib3 <> int_modm_mod_elim thm
R5274:5290 VST.floyd.coqlib3 <> int_modm_mod_elim thm
R5155:5169 compcert.lib.Zbits <> eqmod_neg thm
R5171:5181 compcert.lib.Integers Int modulus def
R5035:5050 compcert.lib.Zbits <> eqmod_mult thm
R5052:5062 compcert.lib.Integers Int modulus def
R4893:4907 compcert.lib.Zbits <> eqmod_sub thm
R4909:4919 compcert.lib.Integers Int modulus def
R4751:4765 compcert.lib.Zbits <> eqmod_add thm
R4767:4777 compcert.lib.Integers Int modulus def
def 5500:5510 <> ptrofs_modm
binder 5512:5512 <> x:34
R5518:5522 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R5517:5517 VST.floyd.coqlib3 <> x:34 var
R5523:5536 compcert.lib.Integers Ptrofs modulus def
prf 5546:5563 <> ptrofs_modm_mod_eq
binder 5573:5573 <> x:35
binder 5575:5575 <> y:36
R5608:5611 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5632:5634 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5613:5617 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R5612:5612 VST.floyd.coqlib3 <> x:35 var
R5618:5631 compcert.lib.Integers Ptrofs modulus def
R5635:5645 VST.floyd.coqlib3 <> ptrofs_modm def
R5647:5647 VST.floyd.coqlib3 <> y:36 var
R5578:5588 compcert.lib.Zbits <> eqmod def
R5607:5607 VST.floyd.coqlib3 <> y:36 var
R5605:5605 VST.floyd.coqlib3 <> x:35 var
R5590:5603 compcert.lib.Integers Ptrofs modulus def
R5675:5692 compcert.lib.Zbits <> eqmod_mod_eq thm
R5675:5692 compcert.lib.Zbits <> eqmod_mod_eq thm
R5709:5726 compcert.lib.Integers Ptrofs modulus_pos thm
R5709:5726 compcert.lib.Integers Ptrofs modulus_pos thm
prf 5741:5760 <> ptrofs_modm_mod_elim
binder 5770:5770 <> x:37
binder 5772:5772 <> y:38
R5805:5808 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5809:5819 compcert.lib.Zbits <> eqmod def
R5859:5859 VST.floyd.coqlib3 <> y:38 var
R5838:5842 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R5837:5837 VST.floyd.coqlib3 <> x:37 var
R5843:5856 compcert.lib.Integers Ptrofs modulus def
R5821:5834 compcert.lib.Integers Ptrofs modulus def
R5775:5785 compcert.lib.Zbits <> eqmod def
R5804:5804 VST.floyd.coqlib3 <> y:38 var
R5802:5802 VST.floyd.coqlib3 <> x:37 var
R5787:5800 compcert.lib.Integers Ptrofs modulus def
R5888:5904 compcert.lib.Zbits <> eqmod_trans thm
R5888:5904 compcert.lib.Zbits <> eqmod_trans thm
R5922:5936 compcert.lib.Zbits <> eqmod_sym thm
R5939:5953 compcert.lib.Zbits <> eqmod_mod thm
R5922:5936 compcert.lib.Zbits <> eqmod_sym thm
R5939:5953 compcert.lib.Zbits <> eqmod_mod thm
R5964:5981 compcert.lib.Integers Ptrofs modulus_pos thm
R5964:5981 compcert.lib.Integers Ptrofs modulus_pos thm
def 6001:6012 <> ptrofs_reprm
R6017:6027 compcert.lib.Integers Ptrofs repr def
prf 6037:6055 <> ptrofs_modm_repr_eq
binder 6065:6065 <> x:39
binder 6067:6067 <> y:40
R6100:6103 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6117:6119 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6104:6114 compcert.lib.Integers Ptrofs repr def
R6116:6116 VST.floyd.coqlib3 <> x:39 var
R6120:6131 VST.floyd.coqlib3 <> ptrofs_reprm def
R6133:6133 VST.floyd.coqlib3 <> y:40 var
R6070:6080 compcert.lib.Zbits <> eqmod def
R6099:6099 VST.floyd.coqlib3 <> y:40 var
R6097:6097 VST.floyd.coqlib3 <> x:39 var
R6082:6095 compcert.lib.Integers Ptrofs modulus def
R6161:6179 compcert.lib.Integers Ptrofs eqm_samerepr thm
R6161:6179 compcert.lib.Integers Ptrofs eqm_samerepr thm
R6295:6297 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R6295:6297 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R6446:6448 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R6446:6448 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R6597:6599 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R6597:6599 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R6747:6748 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R6747:6748 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R6863:6867 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R6868:6881 compcert.lib.Integers Ptrofs modulus def
R6863:6867 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R6868:6881 compcert.lib.Integers Ptrofs modulus def
R6979:6989 VST.floyd.coqlib3 <> ptrofs_modm def
R6979:6989 VST.floyd.coqlib3 <> ptrofs_modm def
R7110:7125 compcert.lib.Zbits <> eqmod_refl thm
R7127:7140 compcert.lib.Integers Ptrofs modulus def
R7039:7058 VST.floyd.coqlib3 <> ptrofs_modm_mod_elim thm
R6928:6947 VST.floyd.coqlib3 <> ptrofs_modm_mod_elim thm
R6800:6814 compcert.lib.Zbits <> eqmod_neg thm
R6816:6829 compcert.lib.Integers Ptrofs modulus def
R6674:6689 compcert.lib.Zbits <> eqmod_mult thm
R6691:6704 compcert.lib.Integers Ptrofs modulus def
R6523:6537 compcert.lib.Zbits <> eqmod_sub thm
R6539:6552 compcert.lib.Integers Ptrofs modulus def
R6372:6386 compcert.lib.Zbits <> eqmod_add thm
R6388:6401 compcert.lib.Integers Ptrofs modulus def
R7192:7198 compcert.lib.Integers Int add def
R7210:7229 compcert.lib.Integers Int unsigned_repr_eq thm
R7241:7250 compcert.lib.Integers Ptrofs add def
R7262:7284 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R7332:7336 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R7337:7347 compcert.lib.Integers Int modulus def
R7332:7336 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R7337:7347 compcert.lib.Integers Int modulus def
R7478:7485 compcert.lib.Integers Int repr def
R7478:7485 compcert.lib.Integers Int repr def
R7622:7626 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R7627:7640 compcert.lib.Integers Ptrofs modulus def
R7622:7626 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R7627:7640 compcert.lib.Integers Ptrofs modulus def
R7771:7778 compcert.lib.Integers Int repr def
R7771:7778 compcert.lib.Integers Int repr def
R7915:7919 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R7920:7933 compcert.lib.Integers Ptrofs modulus def
R7915:7919 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R7920:7933 compcert.lib.Integers Ptrofs modulus def
R8070:8080 compcert.lib.Integers Ptrofs repr def
R8070:8080 compcert.lib.Integers Ptrofs repr def
R8223:8227 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R8228:8241 compcert.lib.Integers Ptrofs modulus def
R8223:8227 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R8228:8241 compcert.lib.Integers Ptrofs modulus def
R8378:8388 compcert.lib.Integers Ptrofs repr def
R8378:8388 compcert.lib.Integers Ptrofs repr def
R8468:8486 VST.floyd.coqlib3 <> ptrofs_modm_repr_eq thm
R8318:8335 VST.floyd.coqlib3 <> ptrofs_modm_mod_eq thm
R8160:8178 VST.floyd.coqlib3 <> ptrofs_modm_repr_eq thm
R8010:8027 VST.floyd.coqlib3 <> ptrofs_modm_mod_eq thm
R7855:7870 VST.floyd.coqlib3 <> int_modm_repr_eq thm
R7714:7728 VST.floyd.coqlib3 <> int_modm_mod_eq thm
R7562:7577 VST.floyd.coqlib3 <> int_modm_repr_eq thm
R7421:7435 VST.floyd.coqlib3 <> int_modm_mod_eq thm
R8529:8536 VST.floyd.coqlib3 <> int_modm def
R8539:8547 VST.floyd.coqlib3 <> int_reprm def
R8550:8560 VST.floyd.coqlib3 <> ptrofs_modm def
R8563:8574 VST.floyd.coqlib3 <> ptrofs_reprm def
prf 8710:8717 <> add_repr
binder 8727:8727 <> i:41
binder 8729:8729 <> j:42
R8765:8767 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8732:8738 compcert.lib.Integers Int add def
R8754:8761 compcert.lib.Integers Int repr def
R8763:8763 VST.floyd.coqlib3 <> j:42 var
R8741:8748 compcert.lib.Integers Int repr def
R8750:8750 VST.floyd.coqlib3 <> i:41 var
R8768:8775 compcert.lib.Integers Int repr def
R8779:8779 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R8778:8778 VST.floyd.coqlib3 <> i:41 var
R8780:8780 VST.floyd.coqlib3 <> j:42 var
R8809:8824 compcert.lib.Integers Int add_unsigned thm
R8809:8824 compcert.lib.Integers Int add_unsigned thm
R8809:8824 compcert.lib.Integers Int add_unsigned thm
R8834:8849 compcert.lib.Integers Int eqm_samerepr thm
R8834:8849 compcert.lib.Integers Int eqm_samerepr thm
R8860:8866 compcert.lib.Integers Int eqm def
R8876:8886 compcert.lib.Integers Int eqm_add thm
R8895:8905 compcert.lib.Integers Int eqm_sym thm
R8914:8934 compcert.lib.Integers Int eqm_unsigned_repr thm
R8876:8886 compcert.lib.Integers Int eqm_add thm
R8895:8905 compcert.lib.Integers Int eqm_sym thm
R8895:8905 compcert.lib.Integers Int eqm_sym thm
R8914:8934 compcert.lib.Integers Int eqm_unsigned_repr thm
R8914:8934 compcert.lib.Integers Int eqm_unsigned_repr thm
prf 8949:8956 <> mul_repr
binder 8967:8967 <> x:43
binder 8969:8969 <> y:44
R9005:9007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8972:8978 compcert.lib.Integers Int mul def
R8994:9001 compcert.lib.Integers Int repr def
R9003:9003 VST.floyd.coqlib3 <> y:44 var
R8981:8988 compcert.lib.Integers Int repr def
R8990:8990 VST.floyd.coqlib3 <> x:43 var
R9008:9015 compcert.lib.Integers Int repr def
R9019:9021 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R9018:9018 VST.floyd.coqlib3 <> x:43 var
R9022:9022 VST.floyd.coqlib3 <> y:44 var
R9048:9054 compcert.lib.Integers Int mul def
R9063:9078 compcert.lib.Integers Int eqm_samerepr thm
R9063:9078 compcert.lib.Integers Int eqm_samerepr thm
R9096:9115 compcert.lib.Integers Int unsigned_repr_eq thm
R9096:9115 compcert.lib.Integers Int unsigned_repr_eq thm
R9096:9115 compcert.lib.Integers Int unsigned_repr_eq thm
R9096:9115 compcert.lib.Integers Int unsigned_repr_eq thm
R9096:9115 compcert.lib.Integers Int unsigned_repr_eq thm
R9096:9115 compcert.lib.Integers Int unsigned_repr_eq thm
R9124:9135 compcert.lib.Integers Int eqm_mult thm
R9145:9151 compcert.lib.Integers Int eqm def
R9160:9174 compcert.lib.Zbits <> eqmod_sym thm
R9183:9197 compcert.lib.Zbits <> eqmod_mod thm
R9124:9135 compcert.lib.Integers Int eqm_mult thm
R9160:9174 compcert.lib.Zbits <> eqmod_sym thm
R9160:9174 compcert.lib.Zbits <> eqmod_sym thm
R9183:9197 compcert.lib.Zbits <> eqmod_mod thm
R9183:9197 compcert.lib.Zbits <> eqmod_mod thm
prf 9233:9240 <> sub_repr
binder 9250:9250 <> i:45
binder 9252:9252 <> j:46
R9290:9292 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9257:9263 compcert.lib.Integers Int sub def
R9279:9286 compcert.lib.Integers Int repr def
R9288:9288 VST.floyd.coqlib3 <> j:46 var
R9266:9273 compcert.lib.Integers Int repr def
R9275:9275 VST.floyd.coqlib3 <> i:45 var
R9293:9300 compcert.lib.Integers Int repr def
R9304:9304 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R9303:9303 VST.floyd.coqlib3 <> i:45 var
R9305:9305 VST.floyd.coqlib3 <> j:46 var
R9334:9340 compcert.lib.Integers Int sub def
R9350:9365 compcert.lib.Integers Int eqm_samerepr thm
R9350:9365 compcert.lib.Integers Int eqm_samerepr thm
R9376:9382 compcert.lib.Integers Int eqm def
R9392:9402 compcert.lib.Integers Int eqm_sub thm
R9411:9421 compcert.lib.Integers Int eqm_sym thm
R9430:9450 compcert.lib.Integers Int eqm_unsigned_repr thm
R9392:9402 compcert.lib.Integers Int eqm_sub thm
R9411:9421 compcert.lib.Integers Int eqm_sym thm
R9411:9421 compcert.lib.Integers Int eqm_sym thm
R9430:9450 compcert.lib.Integers Int eqm_unsigned_repr thm
R9430:9450 compcert.lib.Integers Int eqm_unsigned_repr thm
prf 9465:9479 <> ptrofs_add_repr
binder 9489:9489 <> i:47
binder 9491:9491 <> j:48
R9536:9538 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9494:9503 compcert.lib.Integers Ptrofs add def
R9522:9532 compcert.lib.Integers Ptrofs repr def
R9534:9534 VST.floyd.coqlib3 <> j:48 var
R9506:9516 compcert.lib.Integers Ptrofs repr def
R9518:9518 VST.floyd.coqlib3 <> i:47 var
R9539:9549 compcert.lib.Integers Ptrofs repr def
R9553:9553 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R9552:9552 VST.floyd.coqlib3 <> i:47 var
R9554:9554 VST.floyd.coqlib3 <> j:48 var
R9583:9601 compcert.lib.Integers Ptrofs add_unsigned thm
R9583:9601 compcert.lib.Integers Ptrofs add_unsigned thm
R9583:9601 compcert.lib.Integers Ptrofs add_unsigned thm
R9611:9629 compcert.lib.Integers Ptrofs eqm_samerepr thm
R9611:9629 compcert.lib.Integers Ptrofs eqm_samerepr thm
R9640:9649 compcert.lib.Integers Ptrofs eqm def
R9659:9672 compcert.lib.Integers Ptrofs eqm_add thm
R9681:9694 compcert.lib.Integers Ptrofs eqm_sym thm
R9703:9726 compcert.lib.Integers Ptrofs eqm_unsigned_repr thm
R9659:9672 compcert.lib.Integers Ptrofs eqm_add thm
R9681:9694 compcert.lib.Integers Ptrofs eqm_sym thm
R9681:9694 compcert.lib.Integers Ptrofs eqm_sym thm
R9703:9726 compcert.lib.Integers Ptrofs eqm_unsigned_repr thm
R9703:9726 compcert.lib.Integers Ptrofs eqm_unsigned_repr thm
prf 9741:9755 <> ptrofs_mul_repr
binder 9766:9766 <> x:49
binder 9768:9768 <> y:50
R9813:9815 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9771:9780 compcert.lib.Integers Ptrofs mul def
R9799:9809 compcert.lib.Integers Ptrofs repr def
R9811:9811 VST.floyd.coqlib3 <> y:50 var
R9783:9793 compcert.lib.Integers Ptrofs repr def
R9795:9795 VST.floyd.coqlib3 <> x:49 var
R9816:9826 compcert.lib.Integers Ptrofs repr def
R9830:9832 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R9829:9829 VST.floyd.coqlib3 <> x:49 var
R9833:9833 VST.floyd.coqlib3 <> y:50 var
R9859:9868 compcert.lib.Integers Ptrofs mul def
R9877:9895 compcert.lib.Integers Ptrofs eqm_samerepr thm
R9877:9895 compcert.lib.Integers Ptrofs eqm_samerepr thm
R9913:9935 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R9913:9935 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R9913:9935 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R9913:9935 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R9913:9935 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R9913:9935 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R9944:9958 compcert.lib.Integers Ptrofs eqm_mult thm
R9968:9977 compcert.lib.Integers Ptrofs eqm def
R9986:10000 compcert.lib.Zbits <> eqmod_sym thm
R10009:10023 compcert.lib.Zbits <> eqmod_mod thm
R9944:9958 compcert.lib.Integers Ptrofs eqm_mult thm
R9986:10000 compcert.lib.Zbits <> eqmod_sym thm
R9986:10000 compcert.lib.Zbits <> eqmod_sym thm
R10009:10023 compcert.lib.Zbits <> eqmod_mod thm
R10009:10023 compcert.lib.Zbits <> eqmod_mod thm
prf 10059:10073 <> ptrofs_sub_repr
binder 10083:10083 <> i:51
binder 10085:10085 <> j:52
R10132:10134 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10090:10099 compcert.lib.Integers Ptrofs sub def
R10118:10128 compcert.lib.Integers Ptrofs repr def
R10130:10130 VST.floyd.coqlib3 <> j:52 var
R10102:10112 compcert.lib.Integers Ptrofs repr def
R10114:10114 VST.floyd.coqlib3 <> i:51 var
R10135:10145 compcert.lib.Integers Ptrofs repr def
R10149:10149 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R10148:10148 VST.floyd.coqlib3 <> i:51 var
R10150:10150 VST.floyd.coqlib3 <> j:52 var
R10179:10188 compcert.lib.Integers Ptrofs sub def
R10198:10216 compcert.lib.Integers Ptrofs eqm_samerepr thm
R10198:10216 compcert.lib.Integers Ptrofs eqm_samerepr thm
R10227:10236 compcert.lib.Integers Ptrofs eqm def
R10246:10259 compcert.lib.Integers Ptrofs eqm_sub thm
R10268:10281 compcert.lib.Integers Ptrofs eqm_sym thm
R10290:10313 compcert.lib.Integers Ptrofs eqm_unsigned_repr thm
R10246:10259 compcert.lib.Integers Ptrofs eqm_sub thm
R10268:10281 compcert.lib.Integers Ptrofs eqm_sym thm
R10268:10281 compcert.lib.Integers Ptrofs eqm_sym thm
R10290:10313 compcert.lib.Integers Ptrofs eqm_unsigned_repr thm
R10290:10313 compcert.lib.Integers Ptrofs eqm_unsigned_repr thm
prf 10328:10338 <> Zland_two_p
binder 10349:10349 <> i:53
binder 10351:10351 <> n:54
R10364:10367 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10387:10389 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10368:10373 Coq.ZArith.BinInt Z land def
R10378:10383 Coq.ZArith.BinInt Z ones def
R10385:10385 VST.floyd.coqlib3 <> n:54 var
R10375:10375 VST.floyd.coqlib3 <> i:53 var
R10391:10396 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R10402:10402 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R10390:10390 VST.floyd.coqlib3 <> i:53 var
R10398:10400 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R10401:10401 VST.floyd.coqlib3 <> n:54 var
R10356:10359 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R10360:10360 VST.floyd.coqlib3 <> n:54 var
R10428:10438 Coq.ZArith.BinInt Z land_ones thm
R10428:10438 Coq.ZArith.BinInt Z land_ones thm
R10428:10438 Coq.ZArith.BinInt Z land_ones thm
prf 10474:10481 <> and_repr
R10503:10503 Coq.Numbers.BinNums <> Z ind
binder 10497:10497 <> i:55
binder 10499:10499 <> j:56
R10539:10541 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10506:10512 compcert.lib.Integers Int and def
R10528:10535 compcert.lib.Integers Int repr def
R10537:10537 VST.floyd.coqlib3 <> j:56 var
R10515:10522 compcert.lib.Integers Int repr def
R10524:10524 VST.floyd.coqlib3 <> i:55 var
R10542:10549 compcert.lib.Integers Int repr def
R10552:10557 Coq.ZArith.BinInt Z land def
R10561:10561 VST.floyd.coqlib3 <> j:56 var
R10559:10559 VST.floyd.coqlib3 <> i:55 var
R10591:10597 compcert.lib.Integers Int and def
R10614:10630 compcert.lib.Integers Int repr_unsigned thm
R10633:10640 compcert.lib.Integers Int repr def
R10643:10648 Coq.ZArith.BinInt Z land def
R10614:10630 compcert.lib.Integers Int repr_unsigned thm
R10633:10640 compcert.lib.Integers Int repr def
R10643:10648 Coq.ZArith.BinInt Z land def
R10614:10630 compcert.lib.Integers Int repr_unsigned thm
R10633:10640 compcert.lib.Integers Int repr def
R10643:10648 Coq.ZArith.BinInt Z land def
R10669:10688 compcert.lib.Integers Int unsigned_repr_eq thm
R10669:10688 compcert.lib.Integers Int unsigned_repr_eq thm
R10669:10688 compcert.lib.Integers Int unsigned_repr_eq thm
R10669:10688 compcert.lib.Integers Int unsigned_repr_eq thm
R10669:10688 compcert.lib.Integers Int unsigned_repr_eq thm
R10669:10688 compcert.lib.Integers Int unsigned_repr_eq thm
R10700:10710 compcert.lib.Integers Int modulus def
R10719:10721 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R10700:10710 compcert.lib.Integers Int modulus def
R10719:10721 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R10719:10721 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R10719:10721 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R10741:10751 VST.floyd.coqlib3 <> Zland_two_p thm
R10741:10751 VST.floyd.coqlib3 <> Zland_two_p thm
R10741:10751 VST.floyd.coqlib3 <> Zland_two_p thm
R10741:10751 VST.floyd.coqlib3 <> Zland_two_p thm
R10741:10751 VST.floyd.coqlib3 <> Zland_two_p thm
R10741:10751 VST.floyd.coqlib3 <> Zland_two_p thm
R10786:10797 Coq.ZArith.BinInt Z land_assoc thm
R10786:10797 Coq.ZArith.BinInt Z land_assoc thm
R10786:10797 Coq.ZArith.BinInt Z land_assoc thm
R10786:10797 Coq.ZArith.BinInt Z land_assoc thm
R10786:10797 Coq.ZArith.BinInt Z land_assoc thm
R10822:10832 Coq.ZArith.BinInt Z land_comm thm
R10835:10840 Coq.ZArith.BinInt Z ones def
R10822:10832 Coq.ZArith.BinInt Z land_comm thm
R10835:10840 Coq.ZArith.BinInt Z ones def
R10822:10832 Coq.ZArith.BinInt Z land_comm thm
R10835:10840 Coq.ZArith.BinInt Z ones def
R10862:10873 Coq.ZArith.BinInt Z land_assoc thm
R10862:10873 Coq.ZArith.BinInt Z land_assoc thm
R10862:10873 Coq.ZArith.BinInt Z land_assoc thm
R10862:10873 Coq.ZArith.BinInt Z land_assoc thm
prf 10899:10905 <> or_repr
R10927:10927 Coq.Numbers.BinNums <> Z ind
binder 10921:10921 <> i:57
binder 10923:10923 <> j:58
R10962:10964 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10930:10935 compcert.lib.Integers Int or def
R10951:10958 compcert.lib.Integers Int repr def
R10960:10960 VST.floyd.coqlib3 <> j:58 var
R10938:10945 compcert.lib.Integers Int repr def
R10947:10947 VST.floyd.coqlib3 <> i:57 var
R10965:10972 compcert.lib.Integers Int repr def
R10975:10979 Coq.ZArith.BinInt Z lor def
R10983:10983 VST.floyd.coqlib3 <> j:58 var
R10981:10981 VST.floyd.coqlib3 <> i:57 var
R11013:11018 compcert.lib.Integers Int or def
R11035:11051 compcert.lib.Integers Int repr_unsigned thm
R11054:11061 compcert.lib.Integers Int repr def
R11064:11068 Coq.ZArith.BinInt Z lor def
R11035:11051 compcert.lib.Integers Int repr_unsigned thm
R11054:11061 compcert.lib.Integers Int repr def
R11064:11068 Coq.ZArith.BinInt Z lor def
R11035:11051 compcert.lib.Integers Int repr_unsigned thm
R11054:11061 compcert.lib.Integers Int repr def
R11064:11068 Coq.ZArith.BinInt Z lor def
R11089:11108 compcert.lib.Integers Int unsigned_repr_eq thm
R11089:11108 compcert.lib.Integers Int unsigned_repr_eq thm
R11089:11108 compcert.lib.Integers Int unsigned_repr_eq thm
R11089:11108 compcert.lib.Integers Int unsigned_repr_eq thm
R11089:11108 compcert.lib.Integers Int unsigned_repr_eq thm
R11089:11108 compcert.lib.Integers Int unsigned_repr_eq thm
R11120:11130 compcert.lib.Integers Int modulus def
R11139:11141 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R11120:11130 compcert.lib.Integers Int modulus def
R11139:11141 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R11139:11141 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R11139:11141 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R11161:11171 VST.floyd.coqlib3 <> Zland_two_p thm
R11161:11171 VST.floyd.coqlib3 <> Zland_two_p thm
R11161:11171 VST.floyd.coqlib3 <> Zland_two_p thm
R11161:11171 VST.floyd.coqlib3 <> Zland_two_p thm
R11161:11171 VST.floyd.coqlib3 <> Zland_two_p thm
R11161:11171 VST.floyd.coqlib3 <> Zland_two_p thm
R11205:11222 Coq.ZArith.BinInt Z land_lor_distr_l thm
R11205:11222 Coq.ZArith.BinInt Z land_lor_distr_l thm
R11205:11222 Coq.ZArith.BinInt Z land_lor_distr_l thm
prf 11252:11261 <> add64_repr
binder 11271:11271 <> i:59
binder 11273:11273 <> j:60
R11315:11317 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11276:11284 compcert.lib.Integers Int64 add def
R11302:11311 compcert.lib.Integers Int64 repr def
R11313:11313 VST.floyd.coqlib3 <> j:60 var
R11287:11296 compcert.lib.Integers Int64 repr def
R11298:11298 VST.floyd.coqlib3 <> i:59 var
R11318:11327 compcert.lib.Integers Int64 repr def
R11331:11331 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R11330:11330 VST.floyd.coqlib3 <> i:59 var
R11332:11332 VST.floyd.coqlib3 <> j:60 var
R11361:11378 compcert.lib.Integers Int64 add_unsigned thm
R11361:11378 compcert.lib.Integers Int64 add_unsigned thm
R11361:11378 compcert.lib.Integers Int64 add_unsigned thm
R11388:11405 compcert.lib.Integers Int64 eqm_samerepr thm
R11388:11405 compcert.lib.Integers Int64 eqm_samerepr thm
R11416:11424 compcert.lib.Integers Int64 eqm def
R11434:11446 compcert.lib.Integers Int64 eqm_add thm
R11455:11467 compcert.lib.Integers Int64 eqm_sym thm
R11476:11498 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R11434:11446 compcert.lib.Integers Int64 eqm_add thm
R11455:11467 compcert.lib.Integers Int64 eqm_sym thm
R11455:11467 compcert.lib.Integers Int64 eqm_sym thm
R11476:11498 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R11476:11498 compcert.lib.Integers Int64 eqm_unsigned_repr thm
prf 11513:11522 <> mul64_repr
binder 11533:11533 <> x:61
binder 11535:11535 <> y:62
R11577:11579 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11538:11546 compcert.lib.Integers Int64 mul def
R11564:11573 compcert.lib.Integers Int64 repr def
R11575:11575 VST.floyd.coqlib3 <> y:62 var
R11549:11558 compcert.lib.Integers Int64 repr def
R11560:11560 VST.floyd.coqlib3 <> x:61 var
R11580:11589 compcert.lib.Integers Int64 repr def
R11593:11595 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R11592:11592 VST.floyd.coqlib3 <> x:61 var
R11596:11596 VST.floyd.coqlib3 <> y:62 var
R11622:11630 compcert.lib.Integers Int64 mul def
R11639:11656 compcert.lib.Integers Int64 eqm_samerepr thm
R11639:11656 compcert.lib.Integers Int64 eqm_samerepr thm
R11674:11695 compcert.lib.Integers Int64 unsigned_repr_eq thm
R11674:11695 compcert.lib.Integers Int64 unsigned_repr_eq thm
R11674:11695 compcert.lib.Integers Int64 unsigned_repr_eq thm
R11674:11695 compcert.lib.Integers Int64 unsigned_repr_eq thm
R11674:11695 compcert.lib.Integers Int64 unsigned_repr_eq thm
R11674:11695 compcert.lib.Integers Int64 unsigned_repr_eq thm
R11704:11717 compcert.lib.Integers Int64 eqm_mult thm
R11727:11735 compcert.lib.Integers Int64 eqm def
R11744:11758 compcert.lib.Zbits <> eqmod_sym thm
R11767:11781 compcert.lib.Zbits <> eqmod_mod thm
R11704:11717 compcert.lib.Integers Int64 eqm_mult thm
R11744:11758 compcert.lib.Zbits <> eqmod_sym thm
R11744:11758 compcert.lib.Zbits <> eqmod_sym thm
R11767:11781 compcert.lib.Zbits <> eqmod_mod thm
R11767:11781 compcert.lib.Zbits <> eqmod_mod thm
prf 11817:11826 <> sub64_repr
binder 11836:11836 <> i:63
binder 11838:11838 <> j:64
R11882:11884 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11843:11851 compcert.lib.Integers Int64 sub def
R11869:11878 compcert.lib.Integers Int64 repr def
R11880:11880 VST.floyd.coqlib3 <> j:64 var
R11854:11863 compcert.lib.Integers Int64 repr def
R11865:11865 VST.floyd.coqlib3 <> i:63 var
R11885:11894 compcert.lib.Integers Int64 repr def
R11898:11898 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R11897:11897 VST.floyd.coqlib3 <> i:63 var
R11899:11899 VST.floyd.coqlib3 <> j:64 var
R11926:11934 compcert.lib.Integers Int64 sub def
R11944:11961 compcert.lib.Integers Int64 eqm_samerepr thm
R11944:11961 compcert.lib.Integers Int64 eqm_samerepr thm
R11972:11980 compcert.lib.Integers Int64 eqm def
R11990:12002 compcert.lib.Integers Int64 eqm_sub thm
R12011:12023 compcert.lib.Integers Int64 eqm_sym thm
R12032:12054 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R11990:12002 compcert.lib.Integers Int64 eqm_sub thm
R12011:12023 compcert.lib.Integers Int64 eqm_sym thm
R12011:12023 compcert.lib.Integers Int64 eqm_sym thm
R12032:12054 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R12032:12054 compcert.lib.Integers Int64 eqm_unsigned_repr thm
prf 12069:12078 <> and64_repr
R12100:12100 Coq.Numbers.BinNums <> Z ind
binder 12094:12094 <> i:65
binder 12096:12096 <> j:66
R12142:12144 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12103:12111 compcert.lib.Integers Int64 and def
R12129:12138 compcert.lib.Integers Int64 repr def
R12140:12140 VST.floyd.coqlib3 <> j:66 var
R12114:12123 compcert.lib.Integers Int64 repr def
R12125:12125 VST.floyd.coqlib3 <> i:65 var
R12145:12154 compcert.lib.Integers Int64 repr def
R12157:12162 Coq.ZArith.BinInt Z land def
R12166:12166 VST.floyd.coqlib3 <> j:66 var
R12164:12164 VST.floyd.coqlib3 <> i:65 var
R12196:12204 compcert.lib.Integers Int64 and def
R12221:12239 compcert.lib.Integers Int64 repr_unsigned thm
R12242:12251 compcert.lib.Integers Int64 repr def
R12254:12259 Coq.ZArith.BinInt Z land def
R12221:12239 compcert.lib.Integers Int64 repr_unsigned thm
R12242:12251 compcert.lib.Integers Int64 repr def
R12254:12259 Coq.ZArith.BinInt Z land def
R12221:12239 compcert.lib.Integers Int64 repr_unsigned thm
R12242:12251 compcert.lib.Integers Int64 repr def
R12254:12259 Coq.ZArith.BinInt Z land def
R12280:12301 compcert.lib.Integers Int64 unsigned_repr_eq thm
R12280:12301 compcert.lib.Integers Int64 unsigned_repr_eq thm
R12280:12301 compcert.lib.Integers Int64 unsigned_repr_eq thm
R12280:12301 compcert.lib.Integers Int64 unsigned_repr_eq thm
R12280:12301 compcert.lib.Integers Int64 unsigned_repr_eq thm
R12280:12301 compcert.lib.Integers Int64 unsigned_repr_eq thm
R12313:12325 compcert.lib.Integers Int64 modulus def
R12334:12336 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12313:12325 compcert.lib.Integers Int64 modulus def
R12334:12336 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12334:12336 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12334:12336 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12356:12366 VST.floyd.coqlib3 <> Zland_two_p thm
R12356:12366 VST.floyd.coqlib3 <> Zland_two_p thm
R12356:12366 VST.floyd.coqlib3 <> Zland_two_p thm
R12356:12366 VST.floyd.coqlib3 <> Zland_two_p thm
R12356:12366 VST.floyd.coqlib3 <> Zland_two_p thm
R12356:12366 VST.floyd.coqlib3 <> Zland_two_p thm
R12401:12412 Coq.ZArith.BinInt Z land_assoc thm
R12401:12412 Coq.ZArith.BinInt Z land_assoc thm
R12401:12412 Coq.ZArith.BinInt Z land_assoc thm
R12401:12412 Coq.ZArith.BinInt Z land_assoc thm
R12401:12412 Coq.ZArith.BinInt Z land_assoc thm
R12437:12447 Coq.ZArith.BinInt Z land_comm thm
R12450:12455 Coq.ZArith.BinInt Z ones def
R12437:12447 Coq.ZArith.BinInt Z land_comm thm
R12450:12455 Coq.ZArith.BinInt Z ones def
R12437:12447 Coq.ZArith.BinInt Z land_comm thm
R12450:12455 Coq.ZArith.BinInt Z ones def
R12477:12488 Coq.ZArith.BinInt Z land_assoc thm
R12477:12488 Coq.ZArith.BinInt Z land_assoc thm
R12477:12488 Coq.ZArith.BinInt Z land_assoc thm
R12477:12488 Coq.ZArith.BinInt Z land_assoc thm
prf 12514:12522 <> or64_repr
R12544:12544 Coq.Numbers.BinNums <> Z ind
binder 12538:12538 <> i:67
binder 12540:12540 <> j:68
R12585:12587 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12547:12554 compcert.lib.Integers Int64 or def
R12572:12581 compcert.lib.Integers Int64 repr def
R12583:12583 VST.floyd.coqlib3 <> j:68 var
R12557:12566 compcert.lib.Integers Int64 repr def
R12568:12568 VST.floyd.coqlib3 <> i:67 var
R12588:12597 compcert.lib.Integers Int64 repr def
R12600:12604 Coq.ZArith.BinInt Z lor def
R12608:12608 VST.floyd.coqlib3 <> j:68 var
R12606:12606 VST.floyd.coqlib3 <> i:67 var
R12638:12645 compcert.lib.Integers Int64 or def
R12662:12680 compcert.lib.Integers Int64 repr_unsigned thm
R12683:12692 compcert.lib.Integers Int64 repr def
R12695:12699 Coq.ZArith.BinInt Z lor def
R12662:12680 compcert.lib.Integers Int64 repr_unsigned thm
R12683:12692 compcert.lib.Integers Int64 repr def
R12695:12699 Coq.ZArith.BinInt Z lor def
R12662:12680 compcert.lib.Integers Int64 repr_unsigned thm
R12683:12692 compcert.lib.Integers Int64 repr def
R12695:12699 Coq.ZArith.BinInt Z lor def
R12720:12741 compcert.lib.Integers Int64 unsigned_repr_eq thm
R12720:12741 compcert.lib.Integers Int64 unsigned_repr_eq thm
R12720:12741 compcert.lib.Integers Int64 unsigned_repr_eq thm
R12720:12741 compcert.lib.Integers Int64 unsigned_repr_eq thm
R12720:12741 compcert.lib.Integers Int64 unsigned_repr_eq thm
R12720:12741 compcert.lib.Integers Int64 unsigned_repr_eq thm
R12753:12765 compcert.lib.Integers Int64 modulus def
R12774:12776 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12753:12765 compcert.lib.Integers Int64 modulus def
R12774:12776 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12774:12776 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12774:12776 Coq.ZArith.BinInt <> ::Z_scope:x_'^'_x not
R12796:12806 VST.floyd.coqlib3 <> Zland_two_p thm
R12796:12806 VST.floyd.coqlib3 <> Zland_two_p thm
R12796:12806 VST.floyd.coqlib3 <> Zland_two_p thm
R12796:12806 VST.floyd.coqlib3 <> Zland_two_p thm
R12796:12806 VST.floyd.coqlib3 <> Zland_two_p thm
R12796:12806 VST.floyd.coqlib3 <> Zland_two_p thm
R12840:12857 Coq.ZArith.BinInt Z land_lor_distr_l thm
R12840:12857 Coq.ZArith.BinInt Z land_lor_distr_l thm
R12840:12857 Coq.ZArith.BinInt Z land_lor_distr_l thm
prf 12887:12894 <> neg_repr
binder 12904:12904 <> i:69
R12927:12929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12907:12913 compcert.lib.Integers Int neg def
R12916:12923 compcert.lib.Integers Int repr def
R12925:12925 VST.floyd.coqlib3 <> i:69 var
R12930:12937 compcert.lib.Integers Int repr def
R12940:12940 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R12941:12941 VST.floyd.coqlib3 <> i:69 var
R12967:12973 compcert.lib.Integers Int neg def
R12982:12997 compcert.lib.Integers Int eqm_samerepr thm
R12982:12997 compcert.lib.Integers Int eqm_samerepr thm
R13006:13016 compcert.lib.Integers Int eqm_neg thm
R13006:13016 compcert.lib.Integers Int eqm_neg thm
R13025:13047 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R13025:13047 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R13056:13067 compcert.lib.Integers Int eqm_refl thm
R13056:13067 compcert.lib.Integers Int eqm_refl thm
prf 13082:13091 <> neg64_repr
binder 13101:13101 <> i:70
R13128:13130 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13104:13112 compcert.lib.Integers Int64 neg def
R13115:13124 compcert.lib.Integers Int64 repr def
R13126:13126 VST.floyd.coqlib3 <> i:70 var
R13131:13140 compcert.lib.Integers Int64 repr def
R13143:13143 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R13144:13144 VST.floyd.coqlib3 <> i:70 var
R13170:13178 compcert.lib.Integers Int64 neg def
R13187:13204 compcert.lib.Integers Int64 eqm_samerepr thm
R13187:13204 compcert.lib.Integers Int64 eqm_samerepr thm
R13213:13225 compcert.lib.Integers Int64 eqm_neg thm
R13213:13225 compcert.lib.Integers Int64 eqm_neg thm
R13234:13258 compcert.lib.Integers Int64 eqm_unsigned_repr_l thm
R13234:13258 compcert.lib.Integers Int64 eqm_unsigned_repr_l thm
R13267:13280 compcert.lib.Integers Int64 eqm_refl thm
R13267:13280 compcert.lib.Integers Int64 eqm_refl thm
R13299:13310 compcert.lib.Integers Int unsigned def
R13339:13353 compcert.lib.Integers Ptrofs unsigned def
R13382:13391 Coq.PArith.BinPos Pos to_nat def
prf 13407:13413 <> align_0
binder 13423:13423 <> z:71
R13435:13438 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13448:13450 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13439:13443 compcert.lib.Coqlib <> align def
R13447:13447 VST.floyd.coqlib3 <> z:71 var
R13431:13433 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R13430:13430 VST.floyd.coqlib3 <> z:71 var
R13468:13472 compcert.lib.Coqlib <> align def
R13491:13500 Coq.ZArith.Zdiv <> Zdiv_small thm
R13491:13500 Coq.ZArith.Zdiv <> Zdiv_small thm
R13491:13500 Coq.ZArith.Zdiv <> Zdiv_small thm
R13491:13500 Coq.ZArith.Zdiv <> Zdiv_small thm
R13526:13532 VST.floyd.coqlib3 <> align_0 thm
prf 13559:13565 <> align_1
binder 13575:13575 <> n:72
R13587:13589 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13578:13582 compcert.lib.Coqlib <> align def
R13584:13584 VST.floyd.coqlib3 <> n:72 var
R13590:13590 VST.floyd.coqlib3 <> n:72 var
R13616:13620 compcert.lib.Coqlib <> align def
R13631:13639 Coq.ZArith.BinInt Z div_1_r thm
R13631:13639 Coq.ZArith.BinInt Z div_1_r thm
R13631:13639 Coq.ZArith.BinInt Z div_1_r thm
R13650:13658 Coq.ZArith.BinInt Z mul_1_r thm
R13650:13658 Coq.ZArith.BinInt Z mul_1_r thm
R13650:13658 Coq.ZArith.BinInt Z mul_1_r thm
R13684:13690 VST.floyd.coqlib3 <> align_1 thm
prf 13717:13731 <> fold_right_andb
binder 13741:13742 <> bl:73
binder 13744:13744 <> b:74
R13774:13777 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 13785:13786 <> b0:75
R13797:13800 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13803:13805 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13801:13802 VST.floyd.coqlib3 <> b0:75 var
R13806:13809 Coq.Init.Datatypes <> true constr
R13789:13790 Coq.Lists.List <> In def
R13795:13796 VST.floyd.coqlib3 <> bl:73 var
R13792:13793 VST.floyd.coqlib3 <> b0:75 var
R13767:13769 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13747:13756 Coq.Lists.List <> fold_right def
R13765:13766 VST.floyd.coqlib3 <> bl:73 var
R13763:13763 VST.floyd.coqlib3 <> b:74 var
R13758:13761 Coq.Init.Datatypes <> andb def
R13770:13773 Coq.Init.Datatypes <> true constr
R13912:13924 Coq.Bool.Bool <> andb_true_iff thm
R13912:13924 Coq.Bool.Bool <> andb_true_iff thm
R13912:13924 Coq.Bool.Bool <> andb_true_iff thm
R13984:13996 Coq.Bool.Bool <> andb_true_iff thm
R13984:13996 Coq.Bool.Bool <> andb_true_iff thm
R13984:13996 Coq.Bool.Bool <> andb_true_iff thm
prf 14029:14039 <> Z2Nat_inj_0
binder 14049:14049 <> z:76
R14058:14061 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14080:14083 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14085:14087 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14084:14084 VST.floyd.coqlib3 <> z:76 var
R14072:14074 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14062:14069 Coq.ZArith.BinInt Z to_nat def
R14071:14071 VST.floyd.coqlib3 <> z:76 var
R14053:14056 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R14052:14052 VST.floyd.coqlib3 <> z:76 var
R14120:14122 compcert.lib.Coqlib <> zlt def
R14120:14122 compcert.lib.Coqlib <> zlt def
R14151:14154 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14160:14160 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14156:14158 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R14151:14154 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14160:14160 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14156:14158 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R14189:14201 Coq.ZArith.Znat Z2Nat inj_add thm
R14189:14201 Coq.ZArith.Znat Z2Nat inj_add thm
R14189:14201 Coq.ZArith.Znat Z2Nat inj_add thm
R14229:14236 Coq.ZArith.BinInt Z to_nat def
R14229:14236 Coq.ZArith.BinInt Z to_nat def
prf 14300:14308 <> Z2Nat_id'
binder 14318:14318 <> n:77
R14342:14344 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14321:14328 Coq.ZArith.BinInt Z of_nat def
R14331:14338 Coq.ZArith.BinInt Z to_nat def
R14340:14340 VST.floyd.coqlib3 <> n:77 var
R14345:14349 Coq.ZArith.BinInt Z max def
R14353:14353 VST.floyd.coqlib3 <> n:77 var
R14382:14384 compcert.lib.Coqlib <> zlt def
R14382:14384 compcert.lib.Coqlib <> zlt def
R14401:14409 VST.veric.coqlib4 <> Z2Nat_neg thm
R14401:14409 VST.veric.coqlib4 <> Z2Nat_neg thm
R14401:14409 VST.veric.coqlib4 <> Z2Nat_neg thm
R14428:14434 Coq.ZArith.BinInt Z max_l thm
R14428:14434 Coq.ZArith.BinInt Z max_l thm
R14428:14434 Coq.ZArith.BinInt Z max_l thm
R14466:14473 Coq.ZArith.Znat Z2Nat id thm
R14476:14482 Coq.ZArith.BinInt Z max_r thm
R14466:14473 Coq.ZArith.Znat Z2Nat id thm
R14466:14473 Coq.ZArith.Znat Z2Nat id thm
R14476:14482 Coq.ZArith.BinInt Z max_r thm
R14476:14482 Coq.ZArith.BinInt Z max_r thm
prf 14509:14522 <> nil_or_non_nil
binder 14533:14533 <> A:78
R14540:14543 Coq.Init.Datatypes <> list ind
R14545:14545 VST.floyd.coqlib3 <> A:78 var
binder 14537:14537 <> a:79
R14549:14549 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R14557:14561 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R14570:14570 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R14551:14553 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14550:14550 VST.floyd.coqlib3 <> a:79 var
R14554:14556 Coq.Init.Datatypes <> nil constr
R14563:14566 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R14562:14562 VST.floyd.coqlib3 <> a:79 var
R14567:14569 Coq.Init.Datatypes <> nil constr
prf 14644:14661 <> Permutation_concat
binder 14672:14672 <> A:80
R14681:14684 Coq.Init.Datatypes <> list ind
R14687:14690 Coq.Init.Datatypes <> list ind
R14692:14692 VST.floyd.coqlib3 <> A:80 var
binder 14676:14676 <> P:81
binder 14678:14678 <> Q:82
R14714:14719 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14720:14730 Coq.Sorting.Permutation <> Permutation ind
R14744:14749 Coq.Lists.List <> concat def
R14751:14751 VST.floyd.coqlib3 <> Q:82 var
R14733:14738 Coq.Lists.List <> concat def
R14740:14740 VST.floyd.coqlib3 <> P:81 var
R14699:14709 Coq.Sorting.Permutation <> Permutation ind
R14713:14713 VST.floyd.coqlib3 <> Q:82 var
R14711:14711 VST.floyd.coqlib3 <> P:81 var
R14797:14812 Coq.Sorting.Permutation <> Permutation_refl thm
R14797:14812 Coq.Sorting.Permutation <> Permutation_refl thm
R14836:14855 Coq.Sorting.Permutation <> Permutation_app_head thm
R14836:14855 Coq.Sorting.Permutation <> Permutation_app_head thm
R14888:14896 Coq.Lists.List <> app_assoc thm
R14888:14896 Coq.Lists.List <> app_assoc thm
R14888:14896 Coq.Lists.List <> app_assoc thm
R14888:14896 Coq.Lists.List <> app_assoc thm
R14888:14896 Coq.Lists.List <> app_assoc thm
R14909:14928 Coq.Sorting.Permutation <> Permutation_app_tail thm
R14909:14928 Coq.Sorting.Permutation <> Permutation_app_tail thm
R14941:14960 Coq.Sorting.Permutation <> Permutation_app_comm thm
R14941:14960 Coq.Sorting.Permutation <> Permutation_app_comm thm
R14974:14990 Coq.Sorting.Permutation <> Permutation_trans thm
R14974:14990 Coq.Sorting.Permutation <> Permutation_trans thm
prf 15012:15032 <> proj_sumbool_is_false
binder 15045:15045 <> P:83
R15058:15058 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R15060:15062 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R15065:15065 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R15059:15059 VST.floyd.coqlib3 <> P:83 var
R15063:15063 Coq.Init.Logic <> ::type_scope:'~'_x not
R15064:15064 VST.floyd.coqlib3 <> P:83 var
binder 15055:15055 <> a:84
R15071:15074 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15089:15091 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15075:15086 compcert.lib.Coqlib <> proj_sumbool def
R15088:15088 VST.floyd.coqlib3 <> a:84 var
R15092:15096 Coq.Init.Datatypes <> false constr
R15069:15069 Coq.Init.Logic <> ::type_scope:'~'_x not
R15070:15070 VST.floyd.coqlib3 <> P:83 var
R15165:15184 compcert.lib.Coqlib <> proj_sumbool_is_true thm
R15230:15250 VST.floyd.coqlib3 <> proj_sumbool_is_false thm
prf 15290:15307 <> ptrofs_to_int_repr
binder 15319:15319 <> x:85
R15322:15322 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15352:15355 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15323:15335 compcert.lib.Integers Ptrofs to_int def
R15338:15348 compcert.lib.Integers Ptrofs repr def
R15350:15350 VST.floyd.coqlib3 <> x:85 var
R15356:15363 compcert.lib.Integers Int repr def
R15365:15365 VST.floyd.coqlib3 <> x:85 var
R15392:15402 compcert.x86_32.Archi <> ptr64 def
R15392:15402 compcert.x86_32.Archi <> ptr64 def
R15421:15433 compcert.lib.Integers Ptrofs to_int def
R15443:15458 compcert.lib.Integers Int eqm_samerepr thm
R15443:15458 compcert.lib.Integers Int eqm_samerepr thm
R15468:15474 compcert.lib.Integers Int eqm def
R15485:15507 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R15485:15507 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R15485:15507 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R15517:15530 compcert.lib.Integers Ptrofs modulus def
R15540:15554 compcert.lib.Integers Ptrofs wordsize def
R15564:15587 compcert.lib.Integers Wordsize_Ptrofs wordsize def
R15609:15619 compcert.lib.Integers Int modulus def
R15629:15640 compcert.lib.Integers Int wordsize def
R15650:15669 compcert.lib.Integers Wordsize_32 wordsize def
R15704:15716 Coq.ZArith.Zpower <> two_power_nat def
R15678:15696 compcert.lib.Zbits <> eqmod_divides thm
R15704:15716 Coq.ZArith.Zpower <> two_power_nat def
R15678:15696 compcert.lib.Zbits <> eqmod_divides thm
R15729:15743 compcert.lib.Zbits <> eqmod_sym thm
R15729:15743 compcert.lib.Zbits <> eqmod_sym thm
R15752:15766 compcert.lib.Zbits <> eqmod_mod thm
R15752:15766 compcert.lib.Zbits <> eqmod_mod thm
R15792:15804 Coq.ZArith.Zpower <> two_power_nat def
R15792:15804 Coq.ZArith.Zpower <> two_power_nat def
R15835:15858 compcert.lib.Integers Ptrofs agree32_to_int_eq thm
R15835:15858 compcert.lib.Integers Ptrofs agree32_to_int_eq thm
R15835:15858 compcert.lib.Integers Ptrofs agree32_to_int_eq thm
R15835:15858 compcert.lib.Integers Ptrofs agree32_to_int_eq thm
R15880:15898 compcert.lib.Integers Ptrofs agree32_repr thm
R15880:15898 compcert.lib.Integers Ptrofs agree32_repr thm
prf 15919:15938 <> ptrofs_to_int64_repr
R15961:15965 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 15973:15973 <> x:86
R15976:15976 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16008:16011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15977:15991 compcert.lib.Integers Ptrofs to_int64 def
R15994:16004 compcert.lib.Integers Ptrofs repr def
R16006:16006 VST.floyd.coqlib3 <> x:86 var
R16012:16021 compcert.lib.Integers Int64 repr def
R16023:16023 VST.floyd.coqlib3 <> x:86 var
R15954:15956 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15943:15953 compcert.x86_32.Archi <> ptr64 def
R15957:15960 Coq.Init.Datatypes <> true constr
R16053:16067 compcert.lib.Integers Ptrofs to_int64 def
R16077:16094 compcert.lib.Integers Int64 eqm_samerepr thm
R16077:16094 compcert.lib.Integers Int64 eqm_samerepr thm
R16104:16112 compcert.lib.Integers Int64 eqm def
R16123:16145 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R16123:16145 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R16123:16145 compcert.lib.Integers Ptrofs unsigned_repr_eq thm
R16155:16168 compcert.lib.Integers Ptrofs modulus def
R16178:16192 compcert.lib.Integers Ptrofs wordsize def
R16202:16225 compcert.lib.Integers Wordsize_Ptrofs wordsize def
R16247:16259 compcert.lib.Integers Int64 modulus def
R16269:16282 compcert.lib.Integers Int64 wordsize def
R16292:16311 compcert.lib.Integers Wordsize_64 wordsize def
R16346:16358 Coq.ZArith.Zpower <> two_power_nat def
R16320:16338 compcert.lib.Zbits <> eqmod_divides thm
R16346:16358 Coq.ZArith.Zpower <> two_power_nat def
R16320:16338 compcert.lib.Zbits <> eqmod_divides thm
R16371:16385 compcert.lib.Zbits <> eqmod_sym thm
R16371:16385 compcert.lib.Zbits <> eqmod_sym thm
R16394:16408 compcert.lib.Zbits <> eqmod_mod thm
R16394:16408 compcert.lib.Zbits <> eqmod_mod thm
