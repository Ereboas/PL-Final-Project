DIGEST ae635e905e3b3d8d57ea55891afa0176
FVST.floyd.simpl_reptype
R15:29 VST.floyd.base2 <> <> lib
R47:71 VST.floyd.functional_base <> <> lib
R89:117 VST.floyd.nested_field_lemmas <> <> lib
R135:158 VST.floyd.reptype_lemmas <> <> lib
R176:204 VST.floyd.proj_reptype_lemmas <> <> lib
R222:260 VST.floyd.replace_refill_reptype_lemmas <> <> lib
R278:299 VST.floyd.simple_reify <> <> lib
R317:340 VST.floyd.aggregate_type <> <> lib
R358:381 VST.floyd.Zlength_solver <> <> lib
def 396:417 <> int_signed_or_unsigned
R423:426 compcert.cfrontend.Ctypes <> type ind
binder 420:420 <> t:1
R434:437 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R438:438 Coq.Numbers.BinNums <> Z ind
R431:433 compcert.lib.Integers <> int syndef
R451:458 compcert.cfrontend.Ctypes <> typeconv def
R460:460 VST.floyd.simpl_reptype <> t:1 var
R471:474 compcert.cfrontend.Ctypes <> Tint constr
R478:483 compcert.cfrontend.Ctypes <> Signed constr
R490:499 compcert.lib.Integers Int signed def
R505:508 compcert.cfrontend.Ctypes <> Tint constr
R512:519 compcert.cfrontend.Ctypes <> Unsigned constr
R526:537 compcert.lib.Integers Int unsigned def
sec 587:599 <> SIMPL_REPTYPE
R616:624 VST.veric.mpred <> compspecs class
binder 612:613 <> cs:2
def 694:711 <> is_effective_array
R717:720 compcert.cfrontend.Ctypes <> type ind
binder 714:714 <> t:3
R727:727 Coq.Numbers.BinNums <> Z ind
binder 724:724 <> n:4
R734:737 compcert.cfrontend.Ctypes <> attr rec
binder 731:731 <> a:5
R744:744 Coq.Numbers.BinNums <> Z ind
binder 741:741 <> i:6
R751:766 VST.floyd.simple_reify <> reptype_skeleton ind
binder 748:748 <> v:7
R771:776 Coq.Init.Datatypes <> option ind
R778:793 VST.floyd.simple_reify <> reptype_skeleton ind
R798:801 Coq.Init.Datatypes <> None constr
def 814:832 <> is_effective_struct
binder 834:834 <> i:8
R840:846 compcert.cfrontend.Ctypes <> members def
binder 837:837 <> m:9
R853:868 VST.floyd.simple_reify <> reptype_skeleton ind
binder 850:850 <> v:10
R873:878 Coq.Init.Datatypes <> option ind
R880:895 VST.floyd.simple_reify <> reptype_skeleton ind
R908:908 VST.floyd.simpl_reptype <> m:9 var
R919:921 Coq.Init.Datatypes <> nil constr
R926:929 Coq.Init.Datatypes <> None constr
R936:939 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R940:942 Coq.Init.Datatypes <> nil constr
R947:950 Coq.Init.Datatypes <> Some constr
R952:952 VST.floyd.simpl_reptype <> v:10 var
R965:968 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R958:958 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R961:962 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R964:964 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R985:985 VST.floyd.simpl_reptype <> v:10 var
R998:1004 VST.floyd.simple_reify <> RepPair constr
R1019:1026 compcert.common.AST <> ident_eq def
R1028:1028 VST.floyd.simpl_reptype <> i:8 var
R1052:1070 VST.floyd.simpl_reptype <> is_effective_struct:11 def
R1072:1072 VST.floyd.simpl_reptype <> i:8 var
R1039:1042 Coq.Init.Datatypes <> Some constr
R1091:1094 Coq.Init.Datatypes <> None constr
def 1121:1138 <> is_effective_union
binder 1140:1140 <> i:14
R1146:1152 compcert.cfrontend.Ctypes <> members def
binder 1143:1143 <> m:15
R1159:1174 VST.floyd.simple_reify <> reptype_skeleton ind
binder 1156:1156 <> v:16
R1179:1184 Coq.Init.Datatypes <> option ind
R1186:1201 VST.floyd.simple_reify <> reptype_skeleton ind
R1214:1214 VST.floyd.simpl_reptype <> m:15 var
R1225:1227 Coq.Init.Datatypes <> nil constr
R1232:1235 Coq.Init.Datatypes <> None constr
R1242:1245 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1246:1248 Coq.Init.Datatypes <> nil constr
R1253:1256 Coq.Init.Datatypes <> Some constr
R1258:1258 VST.floyd.simpl_reptype <> v:16 var
R1271:1274 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1264:1264 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1267:1268 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1270:1270 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1291:1291 VST.floyd.simpl_reptype <> v:16 var
R1304:1309 VST.floyd.simple_reify <> RepInl constr
R1321:1328 compcert.common.AST <> ident_eq def
R1330:1330 VST.floyd.simpl_reptype <> i:14 var
R1354:1357 Coq.Init.Datatypes <> None constr
R1341:1344 Coq.Init.Datatypes <> Some constr
R1365:1370 VST.floyd.simple_reify <> RepInr constr
R1382:1389 compcert.common.AST <> ident_eq def
R1391:1391 VST.floyd.simpl_reptype <> i:14 var
R1412:1429 VST.floyd.simpl_reptype <> is_effective_union:17 def
R1431:1431 VST.floyd.simpl_reptype <> i:14 var
R1402:1405 Coq.Init.Datatypes <> None constr
R1450:1453 Coq.Init.Datatypes <> None constr
def 1482:1493 <> is_effective
R1499:1502 compcert.cfrontend.Ctypes <> type ind
binder 1496:1496 <> t:20
R1510:1515 VST.floyd.nested_field_lemmas <> gfield ind
binder 1506:1507 <> gf:21
R1522:1537 VST.floyd.simple_reify <> reptype_skeleton ind
binder 1519:1519 <> v:22
R1542:1547 Coq.Init.Datatypes <> option ind
R1549:1564 VST.floyd.simple_reify <> reptype_skeleton ind
R1580:1581 VST.floyd.simpl_reptype <> gf:21 var
R1577:1577 VST.floyd.simpl_reptype <> t:20 var
R1592:1597 compcert.cfrontend.Ctypes <> Tarray constr
R1608:1617 VST.floyd.nested_field_lemmas <> ArraySubsc constr
R1624:1641 VST.floyd.simpl_reptype <> is_effective_array def
R1653:1653 VST.floyd.simpl_reptype <> v:22 var
R1659:1665 compcert.cfrontend.Ctypes <> Tstruct constr
R1673:1683 VST.floyd.nested_field_lemmas <> StructField constr
R1690:1708 VST.floyd.simpl_reptype <> is_effective_struct def
R1737:1737 VST.floyd.simpl_reptype <> v:22 var
R1713:1722 compcert.cfrontend.Ctypes <> co_members proj
R1725:1730 VST.floyd.base <> get_co def
R1743:1748 compcert.cfrontend.Ctypes <> Tunion constr
R1756:1765 VST.floyd.nested_field_lemmas <> UnionField constr
R1772:1789 VST.floyd.simpl_reptype <> is_effective_union def
R1818:1818 VST.floyd.simpl_reptype <> v:22 var
R1794:1803 compcert.cfrontend.Ctypes <> co_members proj
R1806:1811 VST.floyd.base <> get_co def
R1832:1835 Coq.Init.Datatypes <> None constr
def 2819:2831 <> effective_len
R2837:2840 compcert.cfrontend.Ctypes <> type ind
binder 2834:2834 <> t:25
R2849:2852 Coq.Init.Datatypes <> list ind
R2854:2859 VST.floyd.nested_field_lemmas <> gfield ind
binder 2844:2846 <> gfs:26
R2866:2881 VST.floyd.simple_reify <> reptype_skeleton ind
binder 2863:2863 <> v:27
R2886:2888 Coq.Init.Datatypes <> nat ind
R2895:2900 Coq.Lists.List <> length syndef
R2902:2904 VST.floyd.simpl_reptype <> gfs:26 var
R2912:2924 VST.floyd.simpl_reptype SIMPL_REPTYPE <> sec
R3005:3005 Coq.Init.Datatypes <> S constr
R3005:3005 Coq.Init.Datatypes <> S constr
R3045:3047 Coq.Init.Datatypes <> nil constr
R3045:3047 Coq.Init.Datatypes <> nil constr
R3089:3092 Coq.Init.Datatypes <> cons constr
R3089:3092 Coq.Init.Datatypes <> cons constr
R3147:3150 Coq.Init.Datatypes <> cons constr
R3064:3066 Coq.Init.Datatypes <> nil constr
R2992:2994 Coq.Init.Datatypes <> nil constr
R3258:3258 Coq.Init.Datatypes <> S constr
R3258:3258 Coq.Init.Datatypes <> S constr
R3298:3300 Coq.Init.Datatypes <> nil constr
R3298:3300 Coq.Init.Datatypes <> nil constr
R3342:3345 Coq.Init.Datatypes <> cons constr
R3342:3345 Coq.Init.Datatypes <> cons constr
R3317:3319 Coq.Init.Datatypes <> nil constr
R3491:3494 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3478:3487 VST.floyd.nested_field_lemmas <> ArraySubsc constr
R3491:3494 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3478:3487 VST.floyd.nested_field_lemmas <> ArraySubsc constr
R3539:3542 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3539:3542 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3574:3576 Coq.Init.Datatypes <> nil constr
R3574:3576 Coq.Init.Datatypes <> nil constr
R3755:3758 VST.floyd.jmeq_lemmas <> JMeq def
R3762:3773 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R3755:3758 VST.floyd.jmeq_lemmas <> JMeq def
R3762:3773 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R3888:3891 VST.floyd.jmeq_lemmas <> JMeq def
R3895:3906 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R3888:3891 VST.floyd.jmeq_lemmas <> JMeq def
R3895:3906 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R3982:3985 VST.floyd.jmeq_lemmas <> JMeq def
R3989:4000 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R3982:3985 VST.floyd.jmeq_lemmas <> JMeq def
R3989:4000 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R4119:4121 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R4109:4114 Coq.Lists.List <> length syndef
R4122:4134 VST.floyd.simpl_reptype <> effective_len def
R4304:4306 Coq.Init.Datatypes <> nil constr
R4304:4306 Coq.Init.Datatypes <> nil constr
R4687:4690 Coq.Init.Datatypes <> cons constr
R4687:4690 Coq.Init.Datatypes <> cons constr
R4844:4855 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R4858:4874 VST.floyd.nested_field_lemmas <> nested_field_type def
R5010:5021 VST.floyd.sublist <> Znth def
R5023:5030 compcert.lib.Integers Int repr def
R5085:5093 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R4461:4472 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R4475:4491 VST.floyd.nested_field_lemmas <> nested_field_type def
R4611:4622 VST.floyd.sublist <> Znth def
R4624:4631 compcert.lib.Integers Int repr def
R4670:4678 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R5555:5568 VST.floyd.functional_base <> Znth_map_Vbyte thm
R5592:5599 VST.floyd.sublist <> Znth_map thm
R5601:5603 compcert.lib.Integers <> int syndef
R5630:5637 VST.floyd.sublist <> Znth_map thm
R5639:5643 compcert.lib.Integers <> int64 syndef
R5670:5677 VST.floyd.sublist <> Znth_map thm
R5679:5681 compcert.common.Values <> val ind
R5708:5715 VST.floyd.sublist <> Znth_map thm
R5717:5717 Coq.Numbers.BinNums <> Z ind
R6013:6015 Coq.Init.Datatypes <> fst def
R6016:6016 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6019:6019 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6022:6022 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6013:6015 Coq.Init.Datatypes <> fst def
R6016:6016 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6019:6019 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6022:6022 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6079:6081 Coq.Init.Datatypes <> snd def
R6082:6082 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6085:6085 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6088:6088 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6079:6081 Coq.Init.Datatypes <> snd def
R6082:6082 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6085:6085 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6088:6088 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6102:6104 Coq.Init.Datatypes <> snd def
R6105:6105 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6107:6107 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6109:6109 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6102:6104 Coq.Init.Datatypes <> snd def
R6105:6105 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6107:6107 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6109:6109 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6036:6038 Coq.Init.Datatypes <> fst def
R6039:6039 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6041:6041 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6043:6043 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6036:6038 Coq.Init.Datatypes <> fst def
R6039:6039 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6041:6041 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6043:6043 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 6368:6372 <> myfst
binder 6375:6375 <> A:28
binder 6378:6378 <> B:29
R6386:6386 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6385:6385 VST.floyd.simpl_reptype <> A:28 var
R6387:6387 VST.floyd.simpl_reptype <> B:29 var
binder 6382:6382 <> x:30
R6392:6392 VST.floyd.simpl_reptype <> A:28 var
R6403:6403 VST.floyd.simpl_reptype <> x:30 var
R6410:6410 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6412:6412 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6414:6414 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 6437:6441 <> mysnd
binder 6444:6444 <> A:32
binder 6447:6447 <> B:33
R6455:6455 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6454:6454 VST.floyd.simpl_reptype <> A:32 var
R6456:6456 VST.floyd.simpl_reptype <> B:33 var
binder 6451:6451 <> x:34
R6461:6461 VST.floyd.simpl_reptype <> B:33 var
R6472:6472 VST.floyd.simpl_reptype <> x:34 var
R6479:6479 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6481:6481 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6483:6483 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 6507:6524 <> proj_compact_prod'
binder 6527:6527 <> A:36
R6541:6544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6540:6540 VST.floyd.simpl_reptype <> A:36 var
binder 6537:6537 <> F:37
R6555:6555 VST.floyd.simpl_reptype <> A:36 var
binder 6552:6552 <> a:38
R6562:6565 Coq.Init.Datatypes <> list ind
R6567:6567 VST.floyd.simpl_reptype <> A:36 var
binder 6559:6559 <> l:39
R6574:6585 VST.floyd.compact_prod_sum <> compact_prod def
R6588:6590 Coq.Lists.List <> map def
R6594:6594 VST.floyd.simpl_reptype <> l:39 var
R6592:6592 VST.floyd.simpl_reptype <> F:37 var
binder 6571:6571 <> v:40
R6608:6608 VST.floyd.simpl_reptype <> F:37 var
R6610:6610 VST.floyd.simpl_reptype <> a:38 var
binder 6599:6605 <> default:41
R6629:6629 VST.floyd.simpl_reptype <> A:36 var
binder 6624:6624 <> a:42
binder 6626:6626 <> b:43
R6632:6632 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6638:6642 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6649:6649 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6634:6636 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6633:6633 VST.floyd.simpl_reptype <> a:42 var
R6637:6637 VST.floyd.simpl_reptype <> b:43 var
R6644:6647 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R6643:6643 VST.floyd.simpl_reptype <> a:42 var
R6648:6648 VST.floyd.simpl_reptype <> b:43 var
binder 6614:6614 <> H:44
R6654:6654 VST.floyd.simpl_reptype <> F:37 var
R6656:6656 VST.floyd.simpl_reptype <> a:38 var
R6856:6860 VST.floyd.simpl_reptype <> myfst def
R6856:6860 VST.floyd.simpl_reptype <> myfst def
R6887:6891 VST.floyd.simpl_reptype <> mysnd def
R6887:6891 VST.floyd.simpl_reptype <> mysnd def
def 6919:6935 <> upd_compact_prod'
binder 6938:6938 <> A:45
binder 6942:6942 <> F:46
R6949:6952 Coq.Init.Datatypes <> list ind
R6954:6954 VST.floyd.simpl_reptype <> A:45 var
binder 6946:6946 <> l:47
R6961:6972 VST.floyd.compact_prod_sum <> compact_prod def
R6975:6977 Coq.Lists.List <> map def
R6981:6981 VST.floyd.simpl_reptype <> l:47 var
R6979:6979 VST.floyd.simpl_reptype <> F:46 var
binder 6958:6958 <> v:48
R6989:6989 VST.floyd.simpl_reptype <> A:45 var
binder 6986:6986 <> a:49
R6997:6997 VST.floyd.simpl_reptype <> F:46 var
R6999:6999 VST.floyd.simpl_reptype <> a:49 var
binder 6993:6994 <> v0:50
R7018:7018 VST.floyd.simpl_reptype <> A:45 var
binder 7013:7013 <> a:51
binder 7015:7015 <> b:52
R7021:7021 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7027:7031 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7038:7038 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7023:7025 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7022:7022 VST.floyd.simpl_reptype <> a:51 var
R7026:7026 VST.floyd.simpl_reptype <> b:52 var
R7033:7036 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R7032:7032 VST.floyd.simpl_reptype <> a:51 var
R7037:7037 VST.floyd.simpl_reptype <> b:52 var
binder 7003:7003 <> H:53
R7043:7054 VST.floyd.compact_prod_sum <> compact_prod def
R7057:7059 Coq.Lists.List <> map def
R7063:7063 VST.floyd.simpl_reptype <> l:47 var
R7061:7061 VST.floyd.simpl_reptype <> F:46 var
R7262:7262 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7265:7267 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7275:7276 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7268:7272 VST.floyd.simpl_reptype <> mysnd def
R7262:7262 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7265:7267 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7275:7276 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7268:7272 VST.floyd.simpl_reptype <> mysnd def
R7291:7292 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7300:7302 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7319:7319 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7293:7297 VST.floyd.simpl_reptype <> myfst def
R7311:7315 VST.floyd.simpl_reptype <> mysnd def
R7291:7292 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7300:7302 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7319:7319 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7293:7297 VST.floyd.simpl_reptype <> myfst def
R7311:7315 VST.floyd.simpl_reptype <> mysnd def
def 7343:7354 <> proj_struct'
R7361:7365 compcert.common.AST <> ident def
binder 7357:7357 <> i:54
R7373:7379 compcert.cfrontend.Ctypes <> members def
binder 7369:7369 <> m:55
R7398:7401 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7391:7393 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R7386:7390 compcert.common.AST <> ident def
R7394:7397 compcert.cfrontend.Ctypes <> type ind
binder 7383:7383 <> A:56
R7412:7423 VST.floyd.compact_prod_sum <> compact_prod def
R7426:7428 Coq.Lists.List <> map def
R7432:7432 VST.floyd.simpl_reptype <> m:55 var
R7430:7430 VST.floyd.simpl_reptype <> A:56 var
binder 7409:7409 <> v:57
R7440:7440 VST.floyd.simpl_reptype <> A:56 var
R7442:7442 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7444:7445 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7460:7460 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7443:7443 VST.floyd.simpl_reptype <> i:54 var
R7446:7455 VST.floyd.fieldlist <> field_type def
R7459:7459 VST.floyd.simpl_reptype <> m:55 var
R7457:7457 VST.floyd.simpl_reptype <> i:54 var
binder 7437:7437 <> d:58
R7464:7464 VST.floyd.simpl_reptype <> A:56 var
R7466:7466 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7468:7469 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7484:7484 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7467:7467 VST.floyd.simpl_reptype <> i:54 var
R7470:7479 VST.floyd.fieldlist <> field_type def
R7483:7483 VST.floyd.simpl_reptype <> m:55 var
R7481:7481 VST.floyd.simpl_reptype <> i:54 var
R7491:7508 VST.floyd.simpl_reptype <> proj_compact_prod' def
R7536:7545 VST.floyd.base <> member_dec def
R7534:7534 VST.floyd.simpl_reptype <> d:58 var
R7532:7532 VST.floyd.simpl_reptype <> v:57 var
R7530:7530 VST.floyd.simpl_reptype <> m:55 var
R7510:7510 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7512:7513 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7528:7528 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7511:7511 VST.floyd.simpl_reptype <> i:54 var
R7514:7523 VST.floyd.fieldlist <> field_type def
R7527:7527 VST.floyd.simpl_reptype <> m:55 var
R7525:7525 VST.floyd.simpl_reptype <> i:54 var
def 7560:7578 <> upd_gfield_reptype'
R7585:7593 VST.veric.mpred <> compspecs class
binder 7581:7582 <> cs:59
binder 7596:7596 <> t:60
binder 7598:7599 <> gf:61
R7605:7611 VST.floyd.reptype_lemmas <> reptype def
R7613:7613 VST.floyd.simpl_reptype <> t:60 var
binder 7602:7602 <> v:62
R7621:7627 VST.floyd.reptype_lemmas <> reptype def
R7630:7640 VST.floyd.nested_field_lemmas <> gfield_type def
R7644:7645 VST.floyd.simpl_reptype <> gf:61 var
R7642:7642 VST.floyd.simpl_reptype <> t:60 var
binder 7617:7618 <> v0:63
R7651:7657 VST.floyd.reptype_lemmas <> reptype def
R7659:7659 VST.floyd.simpl_reptype <> t:60 var
R7666:7677 VST.floyd.reptype_lemmas <> fold_reptype def
R7691:7692 VST.floyd.simpl_reptype <> gf:61 var
R7688:7688 VST.floyd.simpl_reptype <> t:60 var
R7711:7714 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7741:7744 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7745:7751 VST.floyd.reptype_lemmas <> REPTYPE syndef
R7753:7753 VST.floyd.simpl_reptype <> t:65 var
R7715:7721 VST.floyd.reptype_lemmas <> reptype def
R7724:7734 VST.floyd.nested_field_lemmas <> gfield_type def
R7738:7739 VST.floyd.simpl_reptype <> gf:64 var
R7736:7736 VST.floyd.simpl_reptype <> t:65 var
R7702:7708 VST.floyd.reptype_lemmas <> REPTYPE syndef
R7710:7710 VST.floyd.simpl_reptype <> t:65 var
R7767:7772 compcert.cfrontend.Ctypes <> Tarray constr
R7782:7791 VST.floyd.nested_field_lemmas <> ArraySubsc constr
R7798:7805 VST.floyd.sublist <> upd_Znth def
R7904:7910 compcert.cfrontend.Ctypes <> Tstruct constr
R7918:7928 VST.floyd.nested_field_lemmas <> StructField constr
binder 7945:7945 <> v:66
binder 7947:7948 <> v0:67
R7953:7969 VST.floyd.simpl_reptype <> upd_compact_prod' def
R8021:8030 VST.floyd.base <> member_dec def
R8018:8019 VST.floyd.simpl_reptype <> v0:67 var
R7975:7975 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7977:7978 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8016:8016 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7979:7988 VST.floyd.fieldlist <> field_type def
R7993:8002 compcert.cfrontend.Ctypes <> co_members proj
R8005:8010 VST.floyd.base <> get_co def
R7973:7973 VST.floyd.simpl_reptype <> v:66 var
R8036:8041 compcert.cfrontend.Ctypes <> Tunion constr
R8049:8058 VST.floyd.nested_field_lemmas <> UnionField constr
binder 8075:8075 <> v:68
binder 8077:8078 <> v0:69
R8083:8097 VST.floyd.compact_prod_sum <> upd_compact_sum def
R8149:8158 VST.floyd.base <> member_dec def
R8146:8147 VST.floyd.simpl_reptype <> v0:69 var
R8103:8103 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8105:8106 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8144:8144 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8107:8116 VST.floyd.fieldlist <> field_type def
R8121:8130 compcert.cfrontend.Ctypes <> co_members proj
R8133:8138 VST.floyd.base <> get_co def
R8101:8101 VST.floyd.simpl_reptype <> v:68 var
binder 8176:8176 <> v:70
R8183:8183 VST.floyd.simpl_reptype <> v:70 var
R8210:8211 VST.floyd.simpl_reptype <> v0:63 var
R8192:8205 VST.floyd.reptype_lemmas <> unfold_reptype def
R8207:8207 VST.floyd.simpl_reptype <> v:62 var
def 8227:8246 <> proj_gfield_reptype'
R8253:8261 VST.veric.mpred <> compspecs class
binder 8249:8250 <> cs:71
R8268:8271 compcert.cfrontend.Ctypes <> type ind
binder 8265:8265 <> t:72
R8279:8284 VST.floyd.nested_field_lemmas <> gfield ind
binder 8275:8276 <> gf:73
R8291:8297 VST.floyd.reptype_lemmas <> reptype def
R8299:8299 VST.floyd.simpl_reptype <> t:72 var
binder 8288:8288 <> v:74
R8303:8309 VST.floyd.reptype_lemmas <> reptype def
R8312:8322 VST.floyd.nested_field_lemmas <> gfield_type def
R8326:8327 VST.floyd.simpl_reptype <> gf:73 var
R8324:8324 VST.floyd.simpl_reptype <> t:72 var
R8344:8345 VST.floyd.simpl_reptype <> gf:73 var
R8341:8341 VST.floyd.simpl_reptype <> t:72 var
R8364:8367 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8368:8374 VST.floyd.reptype_lemmas <> reptype def
R8377:8387 VST.floyd.nested_field_lemmas <> gfield_type def
R8391:8392 VST.floyd.simpl_reptype <> gf:75 var
R8389:8389 VST.floyd.simpl_reptype <> t:76 var
R8355:8361 VST.floyd.reptype_lemmas <> REPTYPE syndef
R8363:8363 VST.floyd.simpl_reptype <> t:76 var
R8407:8412 compcert.cfrontend.Ctypes <> Tarray constr
R8423:8432 VST.floyd.nested_field_lemmas <> ArraySubsc constr
binder 8443:8443 <> v:77
R8449:8452 VST.floyd.sublist <> Znth def
R8474:8474 VST.floyd.simpl_reptype <> v:77 var
R8457:8467 VST.floyd.reptype_lemmas <> default_val def
R8480:8486 compcert.cfrontend.Ctypes <> Tstruct constr
R8494:8504 VST.floyd.nested_field_lemmas <> StructField constr
binder 8515:8515 <> v:78
R8520:8530 VST.floyd.aggregate_type <> proj_struct def
R8562:8572 VST.floyd.reptype_lemmas <> default_val def
R8559:8559 VST.floyd.simpl_reptype <> v:78 var
R8535:8544 compcert.cfrontend.Ctypes <> co_members proj
R8547:8552 VST.floyd.base <> get_co def
R8581:8586 compcert.cfrontend.Ctypes <> Tunion constr
R8594:8603 VST.floyd.nested_field_lemmas <> UnionField constr
binder 8614:8614 <> v:79
R8619:8628 VST.floyd.aggregate_type <> proj_union def
R8660:8670 VST.floyd.reptype_lemmas <> default_val def
R8657:8657 VST.floyd.simpl_reptype <> v:79 var
R8633:8642 compcert.cfrontend.Ctypes <> co_members proj
R8645:8650 VST.floyd.base <> get_co def
R8696:8706 VST.floyd.reptype_lemmas <> default_val def
R8717:8730 VST.floyd.reptype_lemmas <> unfold_reptype def
R8732:8732 VST.floyd.simpl_reptype <> v:74 var
sec 8745:8745 <> A
R8761:8769 VST.veric.mpred <> compspecs class
binder 8757:8758 <> cs:80
def 8782:8794 <> proj_reptype'
R8801:8804 compcert.cfrontend.Ctypes <> type ind
binder 8798:8798 <> t:81
R8813:8816 Coq.Init.Datatypes <> list ind
R8818:8823 VST.floyd.nested_field_lemmas <> gfield ind
binder 8808:8810 <> gfs:82
R8830:8836 VST.floyd.reptype_lemmas <> reptype def
R8838:8838 VST.floyd.simpl_reptype <> t:81 var
binder 8827:8827 <> v:83
R8843:8849 VST.floyd.reptype_lemmas <> reptype def
R8852:8868 VST.floyd.nested_field_lemmas <> nested_field_type def
R8872:8874 VST.floyd.simpl_reptype <> gfs:82 var
R8870:8870 VST.floyd.simpl_reptype <> t:81 var
R8901:8903 VST.floyd.simpl_reptype <> gfs:82 var
R8924:8930 VST.floyd.reptype_lemmas <> reptype def
R8939:8942 VST.floyd.simpl_reptype <> gfs':85 var
R8971:8973 Coq.Init.Datatypes <> nil constr
R8978:8978 VST.floyd.simpl_reptype <> t:81 var
R9004:9007 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9016:9026 VST.floyd.nested_field_lemmas <> gfield_type def
R9029:9045 VST.floyd.nested_field_lemmas <> nested_field_type def
R9047:9047 VST.floyd.simpl_reptype <> t:81 var
R9094:9096 Coq.Init.Datatypes <> nil constr
R9101:9101 VST.floyd.simpl_reptype <> v:83 var
R9109:9112 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9121:9140 VST.floyd.simpl_reptype <> proj_gfield_reptype' def
R9148:9160 VST.floyd.simpl_reptype <> proj_reptype':84 def
R9169:9169 VST.floyd.simpl_reptype <> v:83 var
R9162:9162 VST.floyd.simpl_reptype <> t:81 var
binder 8886:8888 <> res:87
R9183:9191 Coq.Init.Logic <> eq_rect_r def
R9206:9226 VST.floyd.nested_field_lemmas <> nested_field_type_ind thm
R9230:9232 VST.floyd.simpl_reptype <> gfs:82 var
R9228:9228 VST.floyd.simpl_reptype <> t:81 var
R9201:9203 VST.floyd.simpl_reptype <> res:87 var
R9193:9199 VST.floyd.reptype_lemmas <> reptype def
def 9246:9257 <> upd_reptype'
R9263:9266 compcert.cfrontend.Ctypes <> type ind
binder 9260:9260 <> t:88
R9275:9278 Coq.Init.Datatypes <> list ind
R9280:9285 VST.floyd.nested_field_lemmas <> gfield ind
binder 9270:9272 <> gfs:89
R9292:9298 VST.floyd.reptype_lemmas <> reptype def
R9300:9300 VST.floyd.simpl_reptype <> t:88 var
binder 9289:9289 <> v:90
R9308:9314 VST.floyd.reptype_lemmas <> reptype def
R9317:9333 VST.floyd.nested_field_lemmas <> nested_field_type def
R9337:9339 VST.floyd.simpl_reptype <> gfs:89 var
R9335:9335 VST.floyd.simpl_reptype <> t:88 var
binder 9304:9305 <> v0:91
R9344:9350 VST.floyd.reptype_lemmas <> reptype def
R9352:9352 VST.floyd.simpl_reptype <> t:88 var
R9365:9367 VST.floyd.simpl_reptype <> gfs:89 var
R9546:9549 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9550:9556 VST.floyd.reptype_lemmas <> reptype def
R9558:9558 VST.floyd.simpl_reptype <> t:88 var
R9388:9394 VST.floyd.reptype_lemmas <> reptype def
R9403:9406 VST.floyd.simpl_reptype <> gfs':93 var
R9435:9437 Coq.Init.Datatypes <> nil constr
R9442:9442 VST.floyd.simpl_reptype <> t:88 var
R9468:9471 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9480:9490 VST.floyd.nested_field_lemmas <> gfield_type def
R9493:9509 VST.floyd.nested_field_lemmas <> nested_field_type def
R9511:9511 VST.floyd.simpl_reptype <> t:88 var
R9571:9573 Coq.Init.Datatypes <> nil constr
binder 9582:9583 <> v0:95
R9588:9589 VST.floyd.simpl_reptype <> v0:95 var
R9597:9600 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
binder 9613:9614 <> v0:96
R9619:9630 VST.floyd.simpl_reptype <> upd_reptype':92 def
R9642:9660 VST.floyd.simpl_reptype <> upd_gfield_reptype' def
R9691:9692 VST.floyd.simpl_reptype <> v0:96 var
R9668:9679 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R9688:9688 VST.floyd.simpl_reptype <> v:90 var
R9681:9681 VST.floyd.simpl_reptype <> t:88 var
R9639:9639 VST.floyd.simpl_reptype <> v:90 var
R9632:9632 VST.floyd.simpl_reptype <> t:88 var
R9702:9710 Coq.Init.Logic <> eq_rect_r def
R9724:9729 Coq.Init.Logic <> eq_sym thm
R9732:9752 VST.floyd.nested_field_lemmas <> nested_field_type_ind thm
R9756:9758 VST.floyd.simpl_reptype <> gfs:89 var
R9754:9754 VST.floyd.simpl_reptype <> t:88 var
R9720:9721 VST.floyd.simpl_reptype <> v0:91 var
R9712:9718 VST.floyd.reptype_lemmas <> reptype def
R9768:9768 VST.floyd.simpl_reptype A <> sec
prf 9778:9801 <> test_equal_proj_reptype'
R9804:9808 Coq.Init.Logic <> False ind
R9818:9829 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R9832:9844 VST.floyd.simpl_reptype <> proj_reptype' def
R9818:9829 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R9832:9844 VST.floyd.simpl_reptype <> proj_reptype' def
R9854:9864 VST.floyd.replace_refill_reptype_lemmas <> upd_reptype def
R9867:9878 VST.floyd.simpl_reptype <> upd_reptype' def
R9854:9864 VST.floyd.replace_refill_reptype_lemmas <> upd_reptype def
R9867:9878 VST.floyd.simpl_reptype <> upd_reptype' def
R10025:10034 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R10176:10179 VST.floyd.jmeq_lemmas <> JMeq def
R10183:10194 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R10176:10179 VST.floyd.jmeq_lemmas <> JMeq def
R10183:10194 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R10278:10281 VST.floyd.jmeq_lemmas <> JMeq def
R10285:10296 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R10278:10281 VST.floyd.jmeq_lemmas <> JMeq def
R10285:10296 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R10422:10433 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R10422:10433 VST.floyd.proj_reptype_lemmas <> proj_reptype def
R10440:10452 VST.floyd.simpl_reptype <> proj_reptype' def
R10477:10488 VST.floyd.sublist <> Znth def
R10490:10497 compcert.lib.Integers Int repr def
R10499:10502 VST.floyd.jmeq_lemmas <> JMeq def
R10504:10508 VST.floyd.simpl_reptype <> myfst def
R10510:10514 VST.floyd.simpl_reptype <> mysnd def
R10540:10544 VST.floyd.simpl_reptype <> myfst def
R10540:10544 VST.floyd.simpl_reptype <> myfst def
R10552:10554 Coq.Init.Datatypes <> fst def
R10579:10583 VST.floyd.simpl_reptype <> mysnd def
R10579:10583 VST.floyd.simpl_reptype <> mysnd def
R10591:10593 Coq.Init.Datatypes <> snd def
R10699:10701 Coq.Init.Datatypes <> fst def
R10709:10709 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10712:10712 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10715:10715 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10699:10701 Coq.Init.Datatypes <> fst def
R10709:10709 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10712:10712 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10715:10715 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10901:10903 Coq.Init.Datatypes <> snd def
R10911:10911 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10914:10914 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10917:10917 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10901:10903 Coq.Init.Datatypes <> snd def
R10911:10911 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10914:10914 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10917:10917 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10977:10979 Coq.Init.Datatypes <> snd def
R10985:10985 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10987:10987 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10989:10989 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11047:11049 Coq.Init.Datatypes <> snd def
R11055:11055 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11057:11057 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11059:11059 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11047:11049 Coq.Init.Datatypes <> snd def
R11055:11055 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11057:11057 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11059:11059 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10774:10776 Coq.Init.Datatypes <> fst def
R10782:10782 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10784:10784 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10786:10786 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10843:10845 Coq.Init.Datatypes <> fst def
R10851:10851 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10853:10853 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10855:10855 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10843:10845 Coq.Init.Datatypes <> fst def
R10851:10851 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10853:10853 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10855:10855 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11128:11136 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R11167:11175 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R11229:11244 compcert.cfrontend.Cop <> cast_int_int def
R11247:11264 compcert.cfrontend.Cop <> cast_int_float def
R11266:11283 compcert.cfrontend.Cop <> cast_float_int def
R11286:11304 compcert.cfrontend.Cop <> cast_int_single def
R11306:11324 compcert.cfrontend.Cop <> cast_single_int def
R11344:11360 compcert.cfrontend.Cop <> cast_int_long def
R11362:11380 compcert.cfrontend.Cop <> cast_long_float def
R11382:11401 compcert.cfrontend.Cop <> cast_long_single def
R11403:11421 compcert.cfrontend.Cop <> cast_float_long def
R11423:11442 compcert.cfrontend.Cop <> cast_single_long def
R11513:11517 Coq.ZArith.Zpower <> two_p def
R11526:11528 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R11520:11523 Coq.Numbers.BinNums <> Zpos constr
R11575:11589 compcert.lib.Integers Int signed_repr thm
R11457:11472 VST.veric.val_lemmas <> sign_ext_inrange thm
prf 11621:11630 <> cons_congr
binder 11641:11641 <> A:97
R11651:11651 VST.floyd.simpl_reptype <> A:97 var
binder 11645:11645 <> a:98
binder 11647:11648 <> a':99
binder 11654:11655 <> bl:100
binder 11657:11659 <> bl':101
R11668:11671 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11678:11681 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11687:11689 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11683:11684 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11682:11682 VST.floyd.simpl_reptype <> a:98 var
R11685:11686 VST.floyd.simpl_reptype <> bl:100 var
R11692:11693 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11690:11691 VST.floyd.simpl_reptype <> a':99 var
R11694:11696 VST.floyd.simpl_reptype <> bl':101 var
R11674:11674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11672:11673 VST.floyd.simpl_reptype <> bl:100 var
R11675:11677 VST.floyd.simpl_reptype <> bl':101 var
R11665:11665 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11664:11664 VST.floyd.simpl_reptype <> a:98 var
R11666:11667 VST.floyd.simpl_reptype <> a':99 var
R11795:11798 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11782:11791 VST.floyd.nested_field_lemmas <> ArraySubsc constr
R11795:11798 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11782:11791 VST.floyd.nested_field_lemmas <> ArraySubsc constr
R11891:11894 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11891:11894 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11923:11925 Coq.Init.Datatypes <> nil constr
R11923:11925 Coq.Init.Datatypes <> nil constr
R11833:11835 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11833:11835 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12028:12030 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12001:12011 VST.floyd.replace_refill_reptype_lemmas <> upd_reptype def
R12028:12030 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12001:12011 VST.floyd.replace_refill_reptype_lemmas <> upd_reptype def
R12189:12195 VST.floyd.reptype_lemmas <> reptype def
R12197:12207 VST.floyd.reptype_lemmas <> reptype_gen def
R12358:12360 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12335:12345 VST.floyd.replace_refill_reptype_lemmas <> upd_reptype def
R12524:12534 VST.floyd.replace_refill_reptype_lemmas <> upd_reptype def
R12524:12534 VST.floyd.replace_refill_reptype_lemmas <> upd_reptype def
R12542:12553 VST.floyd.simpl_reptype <> upd_reptype' def
R12576:12579 VST.floyd.sublist <> Znth def
R12581:12588 VST.floyd.sublist <> upd_Znth def
R12590:12596 Coq.ZArith.Zcomplements <> Zlength def
R12598:12602 VST.floyd.simpl_reptype <> myfst def
R12604:12608 VST.floyd.simpl_reptype <> mysnd def
R12623:12627 VST.floyd.simpl_reptype <> myfst def
R12623:12627 VST.floyd.simpl_reptype <> myfst def
R12635:12637 Coq.Init.Datatypes <> fst def
R12651:12655 VST.floyd.simpl_reptype <> mysnd def
R12651:12655 VST.floyd.simpl_reptype <> mysnd def
R12663:12665 Coq.Init.Datatypes <> snd def
R12819:12821 Coq.Init.Datatypes <> fst def
R12825:12828 Coq.Init.Datatypes <> pair constr
R12819:12821 Coq.Init.Datatypes <> fst def
R12825:12828 Coq.Init.Datatypes <> pair constr
R12912:12914 Coq.Init.Datatypes <> snd def
R12917:12920 Coq.Init.Datatypes <> pair constr
R12912:12914 Coq.Init.Datatypes <> snd def
R12917:12920 Coq.Init.Datatypes <> pair constr
R13006:13009 Coq.Init.Datatypes <> pair constr
R13006:13009 Coq.Init.Datatypes <> pair constr
R12949:12951 Coq.Init.Datatypes <> snd def
R12954:12957 Coq.Init.Datatypes <> pair constr
R12949:12951 Coq.Init.Datatypes <> snd def
R12954:12957 Coq.Init.Datatypes <> pair constr
R12857:12859 Coq.Init.Datatypes <> fst def
R12862:12865 Coq.Init.Datatypes <> pair constr
R12857:12859 Coq.Init.Datatypes <> fst def
R12862:12865 Coq.Init.Datatypes <> pair constr
R13249:13255 Coq.Init.Logic <> eq_refl constr
