DIGEST 56a06ec2b92e5098547daca6b5de8ad4
FVST.floyd.library
R15:29 VST.floyd.base2 <> <> lib
R47:63 VST.floyd.sublist <> <> lib
R81:103 VST.floyd.client_lemmas <> <> lib
R121:143 VST.floyd.closed_lemmas <> <> lib
R161:184 VST.floyd.compare_lemmas <> <> lib
R202:224 VST.floyd.semax_tactics <> <> lib
R242:258 VST.floyd.forward <> <> lib
R276:296 VST.floyd.call_lemmas <> <> lib
R314:337 VST.floyd.forward_lemmas <> <> lib
R355:374 VST.floyd.for_lemmas <> <> lib
R392:419 VST.floyd.nested_pred_lemmas <> <> lib
R437:465 VST.floyd.nested_field_lemmas <> <> lib
R483:505 VST.floyd.efield_lemmas <> <> lib
R523:551 VST.floyd.mapsto_memory_block <> <> lib
R569:592 VST.floyd.aggregate_type <> <> lib
R603:626 VST.floyd.aggregate_pred <> <> lib
R692:715 VST.floyd.reptype_lemmas <> <> lib
R733:760 VST.floyd.data_at_rec_lemmas <> <> lib
R778:795 VST.floyd.field_at <> <> lib
R813:834 VST.floyd.field_compat <> <> lib
R852:869 VST.floyd.stronger <> <> lib
R887:912 VST.floyd.loadstore_mapsto <> <> lib
R930:957 VST.floyd.loadstore_field_at <> <> lib
R975:1000 VST.floyd.nested_loadstore <> <> lib
R1018:1045 VST.floyd.local2ptree_denote <> <> lib
R1063:1088 VST.floyd.local2ptree_eval <> <> lib
R1106:1134 VST.floyd.proj_reptype_lemmas <> <> lib
R1152:1190 VST.floyd.replace_refill_reptype_lemmas <> <> lib
R1208:1234 VST.floyd.sc_set_load_store <> <> lib
R1252:1269 VST.floyd.entailer <> <> lib
R1287:1310 VST.floyd.globals_lemmas <> <> lib
R1328:1346 VST.floyd.diagnosis <> <> lib
R1364:1380 VST.floyd.freezer <> <> lib
def 1432:1452 <> body_lemma_of_funspec
R1463:1472 VST.veric.juicy_extspec <> OracleKind class
binder 1456:1460 <> Espec:1
R1480:1496 compcert.common.AST <> external_function ind
binder 1476:1477 <> ef:2
R1503:1509 VST.veric.mpred <> funspec ind
binder 1500:1500 <> f:3
R1523:1523 VST.floyd.library <> f:3 var
R1530:1539 VST.veric.mpred <> mk_funspec constr
R1564:1577 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Def semax_external defax
R1579:1580 VST.floyd.library <> ef:2 var
def 1607:1614 <> try_spec
R1624:1629 Coq.Strings.String <> string ind
binder 1618:1621 <> name:5
R1639:1645 VST.veric.mpred <> funspec ind
binder 1633:1636 <> spec:6
R1695:1698 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1699:1702 Coq.Init.Datatypes <> list ind
R1710:1710 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R1705:1709 compcert.common.AST <> ident def
R1711:1717 VST.veric.mpred <> funspec ind
R1654:1657 Coq.Init.Datatypes <> list ind
R1665:1667 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R1660:1664 compcert.common.AST <> ident def
R1668:1674 compcert.common.AST <> globdef ind
R1690:1693 compcert.cfrontend.Ctypes <> type ind
R1676:1688 compcert.cfrontend.Clight <> fundef def
binder 1727:1730 <> defs:7
R1743:1756 VST.veric.SeparationLogic <> ext_link_prog' def
R1763:1766 VST.floyd.library <> name:5 var
R1758:1761 VST.floyd.library <> defs:7 var
R1776:1779 Coq.Init.Datatypes <> Some constr
R1787:1787 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1797:1797 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1788:1788 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1791:1791 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1796:1796 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1792:1795 VST.floyd.library <> spec:6 var
R1802:1805 Coq.Init.Datatypes <> None constr
R1810:1812 Coq.Init.Datatypes <> nil constr
R1830:1837 VST.floyd.library <> try_spec def
def 1870:1879 <> exit_spec'
R1885:1889 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1893:1894 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1896:1902 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1907:1911 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1954:1962 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1968:1973 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1903:1906 compcert.exportclight.Clightdefs <> tint def
R1963:1967 compcert.exportclight.Clightdefs <> tvoid def
R1895:1895 Coq.Numbers.BinNums <> Z ind
binder 1890:1892 <> arg:8
R1912:1919 VST.floyd.canon <> ::assert:'PROP'_'()'_x not
R1920:1927 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R1947:1948 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R1928:1931 compcert.common.Values <> Vint constr
R1934:1941 compcert.lib.Integers Int repr def
R1943:1945 VST.floyd.library <> arg:8 var
R1949:1953 VST.floyd.canon <> ::assert4:'SEP'_'()' not
binder 1890:1892 <> arg:9
R1974:1978 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1984:1985 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1979:1983 Coq.Init.Logic <> False ind
R1986:1994 VST.floyd.canon <> ::assert3:'RETURN'_'()'_x not
R1995:1999 VST.floyd.canon <> ::assert5:'SEP'_'()' not
def 2014:2022 <> exit_spec
R2027:2034 VST.floyd.library <> try_spec def
R2043:2052 VST.floyd.library <> exit_spec' def
ax 2066:2074 <> body_exit
R2093:2102 VST.veric.juicy_extspec <> OracleKind class
binder 2086:2090 <> Espec:10
R2108:2128 VST.floyd.library <> body_lemma_of_funspec def
R2243:2252 VST.floyd.library <> exit_spec' def
R2135:2145 compcert.common.AST <> EF_external constr
R2164:2171 compcert.common.AST <> sig_args proj
R2164:2171 compcert.common.AST <> sig_args proj
R2193:2199 compcert.common.AST <> sig_res proj
R2215:2220 compcert.common.AST <> sig_cc proj
R2225:2234 compcert.common.AST <> cc_default def
R2204:2212 compcert.common.AST <> Tvoid constr
R2184:2187 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2176:2183 compcert.common.AST <> Tint constr
R2188:2190 Coq.Init.Datatypes <> nil constr
ax 2266:2272 <> mem_mgr
R2282:2285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2286:2290 VST.veric.mpred <> mpred def
R2275:2281 VST.veric.SeparationLogic <> globals def
ax 2299:2312 <> create_mem_mgr
binder 2322:2323 <> gv:13
R2329:2333 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R2326:2328 VST.msl.seplog <> emp meth
R2334:2340 VST.floyd.library <> mem_mgr defax
R2342:2343 VST.floyd.library <> gv:13 var
ax 2357:2368 <> malloc_token
R2384:2392 VST.veric.mpred <> compspecs class
binder 2380:2381 <> cs:15
R2401:2404 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2409:2412 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2416:2419 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2420:2424 VST.veric.mpred <> mpred def
R2413:2415 compcert.common.Values <> val ind
R2405:2408 compcert.cfrontend.Ctypes <> type ind
R2396:2400 VST.msl.shares <> share def
ax 2437:2462 <> malloc_token_valid_pointer
R2479:2487 VST.veric.mpred <> compspecs class
binder 2475:2476 <> cs:17
binder 2490:2491 <> sh:18
binder 2493:2493 <> t:19
binder 2495:2495 <> p:20
R2517:2521 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R2498:2509 VST.floyd.library <> malloc_token defax
R2516:2516 VST.floyd.library <> p:20 var
R2514:2514 VST.floyd.library <> t:19 var
R2511:2512 VST.floyd.library <> sh:18 var
R2522:2534 VST.veric.expr <> valid_pointer def
R2536:2536 VST.floyd.library <> p:20 var
ax 2607:2630 <> malloc_token_local_facts
R2647:2655 VST.veric.mpred <> compspecs class
binder 2643:2644 <> cs:22
binder 2658:2659 <> sh:23
binder 2661:2661 <> t:24
binder 2663:2663 <> p:25
R2685:2689 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R2666:2677 VST.floyd.library <> malloc_token defax
R2684:2684 VST.floyd.library <> p:25 var
R2682:2682 VST.floyd.library <> t:24 var
R2679:2680 VST.floyd.library <> sh:23 var
R2690:2692 VST.msl.seplog <> ::logic:'!!'_x not
R2693:2709 VST.floyd.field_at <> malloc_compatible def
R2722:2722 VST.floyd.library <> p:25 var
R2712:2717 VST.veric.expr <> sizeof def
R2719:2719 VST.floyd.library <> t:24 var
ax 2791:2819 <> malloc_token_change_composite
binder 2830:2836 <> cs_from:27
binder 2838:2842 <> cs_to:28
R2852:2871 VST.veric.change_compspecs <> change_composite_env class
R2881:2885 VST.floyd.library <> cs_to:28 var
R2873:2879 VST.floyd.library <> cs_from:27 var
binder 2846:2848 <> CCE:29
binder 2888:2889 <> sh:30
binder 2891:2891 <> t:31
R2956:2961 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2988:2990 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2963:2974 VST.floyd.library <> malloc_token defax
R2987:2987 VST.floyd.library <> t:31 var
R2984:2985 VST.floyd.library <> sh:30 var
R2976:2982 VST.floyd.library <> cs_from:27 var
R2992:3003 VST.floyd.library <> malloc_token defax
R3014:3014 VST.floyd.library <> t:31 var
R3011:3012 VST.floyd.library <> sh:30 var
R3005:3009 VST.floyd.library <> cs_to:28 var
R2949:2951 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2896:2911 VST.veric.change_compspecs <> cs_preserve_type def
R2948:2948 VST.floyd.library <> t:31 var
R2928:2931 VST.veric.change_compspecs <> coeq meth
R2941:2945 VST.floyd.library <> cs_to:28 var
R2933:2939 VST.floyd.library <> cs_from:27 var
R2921:2925 VST.floyd.library <> cs_to:28 var
R2913:2919 VST.floyd.library <> cs_from:27 var
R2952:2955 Coq.Init.Datatypes <> true constr
R3086:3092 VST.floyd.field_at <> data_at def
R3086:3092 VST.floyd.field_at <> data_at def
R3216:3223 VST.floyd.field_at <> field_at def
R3216:3223 VST.floyd.field_at <> field_at def
R3357:3364 VST.floyd.field_at <> data_at_ def
R3357:3364 VST.floyd.field_at <> data_at_ def
R3467:3475 VST.floyd.field_at <> field_at_ def
R3467:3475 VST.floyd.field_at <> field_at_ def
R3588:3599 VST.floyd.library <> malloc_token defax
R3588:3599 VST.floyd.library <> malloc_token defax
R3627:3655 VST.floyd.library <> malloc_token_change_composite defax
R3508:3533 VST.floyd.field_at <> field_at__change_composite thm
R3392:3416 VST.floyd.field_at <> data_at__change_composite thm
R3260:3284 VST.floyd.field_at <> field_at_change_composite thm
R3315:3323 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R3124:3147 VST.floyd.field_at <> data_at_change_composite thm
R3174:3182 VST.floyd.jmeq_lemmas <> JMeq_refl thm
def 4826:4837 <> malloc_spec'
R4845:4853 VST.veric.mpred <> compspecs class
binder 4841:4842 <> cs:33
R4862:4866 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4868:4868 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4873:4874 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4877:4878 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4886:4895 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4902:4911 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R5152:5163 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R5174:5176 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4896:4901 VST.veric.Cop2 <> size_t def
R5164:5167 compcert.exportclight.Clightdefs <> tptr def
R5169:5173 compcert.exportclight.Clightdefs <> tvoid def
R4869:4872 compcert.cfrontend.Ctypes <> type ind
R4879:4885 VST.veric.SeparationLogic <> globals def
binder 4867:4867 <> t:34
binder 4875:4876 <> gv:35
R4912:4917 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4954:4971 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5005:5022 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5065:5073 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4919:4922 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R4931:4934 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R4923:4928 VST.veric.expr <> sizeof def
R4930:4930 VST.floyd.library <> t:34 var
R4923:4928 VST.veric.expr <> sizeof def
R4930:4930 VST.floyd.library <> t:34 var
R4935:4953 compcert.lib.Integers Ptrofs max_unsigned def
R4998:5000 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4972:4995 VST.veric.composite_compute <> complete_legal_cosu_type def
R4997:4997 VST.floyd.library <> t:34 var
R5001:5004 Coq.Init.Datatypes <> true constr
R5058:5060 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5023:5037 VST.floyd.field_at <> natural_aligned def
R5057:5057 VST.floyd.library <> t:34 var
R5039:5055 VST.floyd.field_at <> natural_alignment def
R5061:5064 Coq.Init.Datatypes <> true constr
R5074:5081 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R5114:5115 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R5082:5088 compcert.common.Values <> Vptrofs def
R5091:5101 compcert.lib.Integers Ptrofs repr def
R5104:5109 VST.veric.expr <> sizeof def
R5111:5111 VST.floyd.library <> t:34 var
R5116:5124 VST.floyd.canon <> ::assert4:'GLOBALS'_'('_x_';'_'..'_';'_x_')'_x not
R5127:5135 VST.floyd.canon <> ::assert4:'GLOBALS'_'('_x_';'_'..'_';'_x_')'_x not
R5125:5126 VST.floyd.library <> gv:35 var
R5136:5140 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R5151:5151 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R5141:5147 VST.floyd.library <> mem_mgr defax
R5149:5150 VST.floyd.library <> gv:35 var
binder 4867:4867 <> t:36
binder 4875:4876 <> gv:37
R5177:5179 VST.floyd.canon <> ::assert:'EX'_x_'..'_x_','_x not
R5183:5191 VST.floyd.canon <> ::assert:'EX'_x_'..'_x_','_x not
binder 5180:5180 <> p:38
R5192:5206 VST.floyd.canon <> ::assert:'PROP'_'()'_x not
R5207:5214 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R5216:5224 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R5215:5215 VST.floyd.library <> p:38 var
R5225:5229 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R5240:5254 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R5342:5342 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R5230:5236 VST.floyd.library <> mem_mgr defax
R5238:5239 VST.floyd.library <> gv:37 var
R5258:5263 VST.msl.eq_dec <> eq_dec def
R5267:5273 VST.veric.base <> nullval def
R5265:5265 VST.floyd.library <> p:38 var
R5322:5324 VST.msl.seplog <> ::logic:x_'*'_x not
R5302:5313 VST.floyd.library <> malloc_token defax
R5321:5321 VST.floyd.library <> p:38 var
R5319:5319 VST.floyd.library <> t:36 var
R5315:5317 VST.veric.shares <> Ews def
R5325:5332 VST.floyd.field_at <> data_at_ def
R5340:5340 VST.floyd.library <> p:38 var
R5338:5338 VST.floyd.library <> t:36 var
R5334:5336 VST.veric.shares <> Ews def
R5280:5282 VST.msl.seplog <> emp meth
ax 5356:5366 <> body_malloc
R5385:5394 VST.veric.juicy_extspec <> OracleKind class
binder 5378:5382 <> Espec:39
R5402:5410 VST.veric.mpred <> compspecs class
binder 5398:5399 <> cs:40
R5417:5437 VST.floyd.library <> body_lemma_of_funspec def
R5449:5460 VST.floyd.library <> malloc_spec' def
R5439:5447 compcert.common.AST <> EF_malloc constr
def 5855:5864 <> free_spec'
R5872:5880 VST.veric.mpred <> compspecs class
binder 5868:5869 <> cs:42
R5889:5893 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R5895:5896 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R5901:5902 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R5904:5904 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R5908:5909 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R5912:5913 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R5921:5930 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R5941:5950 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R6118:6129 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R6135:6144 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R5931:5934 compcert.exportclight.Clightdefs <> tptr def
R5936:5940 compcert.exportclight.Clightdefs <> tvoid def
R6130:6134 compcert.cfrontend.Ctypes <> Tvoid constr
R5897:5900 compcert.cfrontend.Ctypes <> type ind
R5905:5907 compcert.common.Values <> val ind
R5914:5920 VST.veric.SeparationLogic <> globals def
binder 5894:5894 <> t:43
binder 5903:5903 <> p:44
binder 5910:5911 <> gv:45
R5951:5965 VST.floyd.canon <> ::assert:'PROP'_'()'_x not
R5966:5973 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R5975:5976 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R5974:5974 VST.floyd.library <> p:44 var
R5977:5985 VST.floyd.canon <> ::assert4:'GLOBALS'_'('_x_';'_'..'_';'_x_')'_x not
R5988:5996 VST.floyd.canon <> ::assert4:'GLOBALS'_'('_x_';'_'..'_';'_x_')'_x not
R5986:5987 VST.floyd.library <> gv:45 var
R5997:6001 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R6012:6027 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R6117:6117 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R6002:6008 VST.floyd.library <> mem_mgr defax
R6010:6011 VST.floyd.library <> gv:45 var
R6031:6036 VST.msl.eq_dec <> eq_dec def
R6040:6046 VST.veric.base <> nullval def
R6038:6038 VST.floyd.library <> p:44 var
R6097:6099 VST.msl.seplog <> ::logic:x_'*'_x not
R6077:6088 VST.floyd.library <> malloc_token defax
R6096:6096 VST.floyd.library <> p:44 var
R6094:6094 VST.floyd.library <> t:43 var
R6090:6092 VST.veric.shares <> Ews def
R6100:6107 VST.floyd.field_at <> data_at_ def
R6115:6115 VST.floyd.library <> p:44 var
R6113:6113 VST.floyd.library <> t:43 var
R6109:6111 VST.veric.shares <> Ews def
R6053:6055 VST.msl.seplog <> emp meth
binder 5894:5894 <> t:46
binder 5903:5903 <> p:47
binder 5910:5911 <> gv:48
R6145:6159 VST.floyd.canon <> ::assert:'PROP'_'()'_x not
R6160:6176 VST.floyd.canon <> ::assert3:'RETURN'_'()'_x not
R6177:6181 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R6192:6192 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R6182:6188 VST.floyd.library <> mem_mgr defax
R6190:6191 VST.floyd.library <> gv:48 var
ax 6206:6214 <> body_free
R6233:6242 VST.veric.juicy_extspec <> OracleKind class
binder 6226:6230 <> Espec:49
R6250:6258 VST.veric.mpred <> compspecs class
binder 6246:6247 <> cs:50
R6265:6285 VST.floyd.library <> body_lemma_of_funspec def
R6295:6304 VST.floyd.library <> free_spec' def
R6287:6293 compcert.common.AST <> EF_free constr
def 6319:6327 <> library_G
R6335:6343 VST.veric.mpred <> compspecs class
binder 6331:6332 <> cs:52
binder 6346:6349 <> prog:53
R6367:6375 compcert.cfrontend.Ctypes <> prog_defs proj
R6377:6380 VST.floyd.library <> prog:53 var
binder 6359:6362 <> defs:54
R6419:6424 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6388:6395 VST.floyd.library <> try_spec def
R6415:6418 VST.floyd.library <> defs:54 var
R6404:6413 VST.floyd.library <> exit_spec' def
R6461:6466 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6425:6432 VST.floyd.library <> try_spec def
R6457:6460 VST.floyd.library <> defs:54 var
R6444:6455 VST.floyd.library <> malloc_spec' def
R6467:6474 VST.floyd.library <> try_spec def
R6495:6498 VST.floyd.library <> defs:54 var
R6484:6493 VST.floyd.library <> free_spec' def
R6602:6605 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6590:6598 VST.floyd.library <> library_G def
prf 6823:6848 <> semax_func_cons_malloc_aux
R6865:6873 VST.veric.mpred <> compspecs class
binder 6861:6862 <> cs:55
R6881:6887 VST.veric.SeparationLogic <> globals def
binder 6877:6878 <> gv:56
R6896:6903 VST.veric.mpred <> genviron def
binder 6891:6892 <> gx:57
R6910:6913 compcert.cfrontend.Ctypes <> type ind
binder 6907:6907 <> t:58
R6923:6928 Coq.Init.Datatypes <> option ind
R6930:6932 compcert.common.Values <> val ind
binder 6917:6919 <> ret:59
R7145:7149 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R6937:6939 VST.floyd.canon <> ::assert:'EX'_x_'..'_x_','_x not
R6947:6949 VST.floyd.canon <> ::assert:'EX'_x_'..'_x_','_x not
R6944:6946 compcert.common.Values <> val ind
binder 6940:6940 <> p:60
R6950:6959 VST.floyd.canon <> ::assert:'PROP'_'('_')'_x not
R6960:6967 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R6969:6971 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R6968:6968 VST.floyd.library <> p:60 var
R6972:6976 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R6987:6994 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R7080:7080 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R6977:6983 VST.floyd.library <> mem_mgr defax
R6985:6986 VST.floyd.library <> gv:56 var
R6998:7003 VST.msl.eq_dec <> eq_dec def
R7007:7013 VST.veric.base <> nullval def
R7005:7005 VST.floyd.library <> p:60 var
R7061:7063 VST.msl.seplog <> ::logic:x_'*'_x not
R7041:7052 VST.floyd.library <> malloc_token defax
R7060:7060 VST.floyd.library <> p:60 var
R7058:7058 VST.floyd.library <> t:58 var
R7054:7056 VST.veric.shares <> Ews def
R7064:7071 VST.floyd.field_at <> data_at_ def
R7079:7079 VST.floyd.library <> p:60 var
R7077:7077 VST.floyd.library <> t:58 var
R7073:7075 VST.veric.shares <> Ews def
R7026:7028 VST.msl.seplog <> emp meth
R7093:7105 VST.veric.SeparationLogic <> make_ext_rval def
R7141:7143 VST.floyd.library <> ret:59 var
R7111:7125 compcert.cfrontend.Ctypes <> rettype_of_type def
R7128:7131 compcert.exportclight.Clightdefs <> tptr def
R7133:7137 compcert.exportclight.Clightdefs <> tvoid def
R7107:7108 VST.floyd.library <> gx:57 var
R7150:7152 VST.msl.seplog <> ::logic:'!!'_x not
R7153:7170 VST.veric.val_lemmas <> is_pointer_or_null def
R7173:7181 VST.veric.val_lemmas <> force_val def
R7183:7185 VST.floyd.library <> ret:59 var
R7214:7223 VST.floyd.canon <> exp_unfold thm
R7214:7223 VST.floyd.canon <> exp_unfold thm
R7214:7223 VST.floyd.canon <> exp_unfold thm
R7248:7259 VST.floyd.canon <> insert_local thm
R7248:7259 VST.floyd.canon <> insert_local thm
R7248:7259 VST.floyd.canon <> insert_local thm
R7271:7280 VST.floyd.canon <> lower_andp thm
R7271:7280 VST.floyd.canon <> lower_andp thm
R7271:7280 VST.floyd.canon <> lower_andp thm
R7290:7309 VST.msl.log_normalize <> derives_extract_prop thm
R7290:7309 VST.msl.log_normalize <> derives_extract_prop thm
R7411:7417 VST.veric.mpred <> eval_id def
