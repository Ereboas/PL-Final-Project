DIGEST 28fb66b9dad713d8f7a77edf1eae4bf3
FVST.floyd.assert_lemmas
R29:38 compcert.exportclight.Clightdefs <> <> lib
R56:80 VST.veric.SeparationLogic <> <> lib
R98:119 VST.msl.Extensionality <> <> lib
R137:155 compcert.lib.Coqlib <> <> lib
R173:187 VST.msl.Coqlib2 <> <> lib
R189:205 VST.veric.coqlib4 <> <> lib
R207:223 VST.floyd.coqlib3 <> <> lib
R241:260 VST.floyd.val_lemmas <> <> lib
R408:428 VST.veric.seplog <> typecheck_var_environ def
R408:428 VST.veric.seplog <> typecheck_var_environ def
R551:567 VST.veric.seplog <> typecheck_environ def
R551:567 VST.veric.seplog <> typecheck_environ def
R706:715 VST.veric.SeparationLogic <> tc_environ def
R706:715 VST.veric.SeparationLogic <> tc_environ def
R746:815 VST.veric.expr <> WARNING___________you_should_use_tactic___destruct_var_types___instead thm
R822:826 Coq.Init.Logic <> proj1 thm
R829:833 Coq.Init.Logic <> proj2 thm
R598:667 VST.veric.expr <> WARNING___________you_should_use_tactic___destruct_var_types___instead thm
R674:678 Coq.Init.Logic <> proj1 thm
R681:685 Coq.Init.Logic <> proj2 thm
R459:528 VST.veric.expr <> WARNING___________you_should_use_tactic___destruct_var_types___instead thm
R944:946 Coq.Init.Logic <> ::type_scope:x_'='_x not
R947:950 Coq.Init.Datatypes <> Some constr
R944:946 Coq.Init.Logic <> ::type_scope:x_'='_x not
R947:950 Coq.Init.Datatypes <> Some constr
R1005:1007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R999:1002 Coq.Init.Datatypes <> Some constr
R1005:1007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R999:1002 Coq.Init.Datatypes <> Some constr
R1059:1061 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1062:1065 Coq.Init.Datatypes <> None constr
R1059:1061 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1062:1065 Coq.Init.Datatypes <> None constr
R1116:1118 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1112:1115 Coq.Init.Datatypes <> None constr
R1116:1118 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1112:1115 Coq.Init.Datatypes <> None constr
R1226:1232 Coq.Init.Logic <> eq_refl constr
R1382:1383 Coq.Init.Logic <> ex ind
R1382:1383 Coq.Init.Logic <> ex ind
R1583:1604 VST.veric.seplog <> typecheck_glob_environ def
R1583:1604 VST.veric.seplog <> typecheck_glob_environ def
R1728:1744 VST.veric.seplog <> typecheck_environ def
R1728:1744 VST.veric.seplog <> typecheck_environ def
R1884:1893 VST.veric.SeparationLogic <> tc_environ def
R1884:1893 VST.veric.SeparationLogic <> tc_environ def
R1924:1994 VST.veric.expr <> WARNING___________you_should_use_tactic___destruct_glob_types___instead thm
R2001:2005 Coq.Init.Logic <> proj2 thm
R2008:2012 Coq.Init.Logic <> proj2 thm
R1775:1845 VST.veric.expr <> WARNING___________you_should_use_tactic___destruct_glob_types___instead thm
R1852:1856 Coq.Init.Logic <> proj2 thm
R1859:1863 Coq.Init.Logic <> proj2 thm
R1635:1705 VST.veric.expr <> WARNING___________you_should_use_tactic___destruct_glob_types___instead thm
R2123:2125 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2126:2129 Coq.Init.Datatypes <> Some constr
R2123:2125 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2126:2129 Coq.Init.Datatypes <> Some constr
R2184:2186 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2178:2181 Coq.Init.Datatypes <> Some constr
R2184:2186 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2178:2181 Coq.Init.Datatypes <> Some constr
R2238:2240 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2241:2244 Coq.Init.Datatypes <> None constr
R2238:2240 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2241:2244 Coq.Init.Datatypes <> None constr
R2295:2297 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2291:2294 Coq.Init.Datatypes <> None constr
R2295:2297 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2291:2294 Coq.Init.Datatypes <> None constr
R2405:2411 Coq.Init.Logic <> eq_refl constr
R2561:2562 Coq.Init.Logic <> ex ind
R2561:2562 Coq.Init.Logic <> ex ind
R2711:2718 compcert.lib.Integers Int repr def
R2740:2750 compcert.lib.Integers Ptrofs repr def
def 2765:2781 <> loop1x_ret_assert
R2797:2800 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2801:2805 VST.veric.mpred <> mpred def
R2790:2796 VST.veric.mpred <> environ ind
binder 2784:2786 <> Inv:1
R2813:2822 VST.veric.tycontext <> ret_assert rec
binder 2809:2809 <> R:2
R2833:2841 VST.veric.tycontext <> RA_normal proj
R2833:2841 VST.veric.tycontext <> RA_normal proj
R2851:2858 VST.veric.tycontext <> RA_break proj
R2867:2877 VST.veric.tycontext <> RA_continue proj
R2887:2895 VST.veric.tycontext <> RA_return proj
R2903:2911 VST.veric.tycontext <> RA_return proj
R2900:2900 VST.floyd.assert_lemmas <> R:2 var
R2882:2884 VST.floyd.assert_lemmas <> Inv:1 var
R2863:2864 VST.msl.seplog <> FF meth
R2846:2848 VST.floyd.assert_lemmas <> Inv:1 var
prf 2925:2951 <> loop1x_ret_assert_EK_normal
binder 2962:2964 <> Inv:3
binder 2966:2966 <> R:4
R3004:3006 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2969:2977 VST.veric.tycontext <> RA_normal proj
R2980:2996 VST.floyd.assert_lemmas <> loop1x_ret_assert def
R3002:3002 VST.floyd.assert_lemmas <> R:4 var
R2998:3000 VST.floyd.assert_lemmas <> Inv:3 var
R3007:3009 VST.floyd.assert_lemmas <> Inv:3 var
R3050:3076 VST.floyd.assert_lemmas <> loop1x_ret_assert_EK_normal thm
def 3104:3120 <> loop1y_ret_assert
R3136:3139 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3140:3144 VST.veric.mpred <> mpred def
R3129:3135 VST.veric.mpred <> environ ind
binder 3123:3125 <> Inv:5
R3155:3163 VST.veric.tycontext <> RA_normal proj
R3155:3163 VST.veric.tycontext <> RA_normal proj
R3173:3180 VST.veric.tycontext <> RA_break proj
R3189:3199 VST.veric.tycontext <> RA_continue proj
R3209:3217 VST.veric.tycontext <> RA_return proj
R3222:3223 VST.msl.seplog <> FF meth
R3204:3206 VST.floyd.assert_lemmas <> Inv:5 var
R3185:3186 VST.msl.seplog <> FF meth
R3168:3170 VST.floyd.assert_lemmas <> Inv:5 var
def 3241:3254 <> for_ret_assert
R3267:3268 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3269:3273 VST.veric.mpred <> mpred def
R3260:3266 VST.veric.mpred <> environ ind
binder 3257:3257 <> I:6
R3283:3292 VST.veric.tycontext <> ret_assert rec
binder 3277:3280 <> Post:7
R3305:3308 VST.floyd.assert_lemmas <> Post:7 var
R3321:3329 VST.veric.tycontext <> RA_normal proj
R3321:3329 VST.veric.tycontext <> RA_normal proj
R3337:3344 VST.veric.tycontext <> RA_break proj
R3352:3362 VST.veric.tycontext <> RA_continue proj
R3370:3378 VST.veric.tycontext <> RA_return proj
R3396:3404 VST.veric.tycontext <> RA_normal proj
R3396:3404 VST.veric.tycontext <> RA_normal proj
R3412:3419 VST.veric.tycontext <> RA_break proj
R3428:3438 VST.veric.tycontext <> RA_continue proj
R3446:3454 VST.veric.tycontext <> RA_return proj
R3443:3443 VST.floyd.assert_lemmas <> I:6 var
R3424:3425 VST.msl.seplog <> FF meth
R3409:3409 VST.floyd.assert_lemmas <> I:6 var
R3791:3798 VST.veric.SeparationLogic <> bind_ret def
R3805:3809 compcert.exportclight.Clightdefs <> tvoid def
R3800:3803 Coq.Init.Datatypes <> None constr
R3791:3798 VST.veric.SeparationLogic <> bind_ret def
R3805:3809 compcert.exportclight.Clightdefs <> tvoid def
R3800:3803 Coq.Init.Datatypes <> None constr
prf 3830:3855 <> RA_normal_loop2_ret_assert
binder 3895:3897 <> Inv:9
binder 3899:3899 <> R:10
R3936:3938 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3902:3910 VST.veric.tycontext <> RA_normal proj
R3913:3928 VST.veric.SeparationLogic <> loop2_ret_assert def
R3934:3934 VST.floyd.assert_lemmas <> R:10 var
R3930:3932 VST.floyd.assert_lemmas <> Inv:9 var
R3939:3941 VST.floyd.assert_lemmas <> Inv:9 var
R3994:4019 VST.floyd.assert_lemmas <> RA_normal_loop2_ret_assert thm
prf 4042:4049 <> liftTrue
binder 4059:4061 <> rho:11
R4064:4064 VST.veric.lift LiftNotation :::'`'_x not
R4069:4072 VST.veric.lift LiftNotation :::'`'_x not
R4065:4068 Coq.Init.Logic <> True ind
R4070:4072 VST.floyd.assert_lemmas <> rho:11 var
R4108:4123 Coq.Init.Logic <> I constr
R4108:4123 Coq.Init.Logic <> I constr
prf 4168:4186 <> overridePost_normal
binder 4198:4198 <> P:12
binder 4200:4200 <> Q:13
R4239:4241 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4203:4214 VST.veric.SeparationLogic <> overridePost def
R4219:4235 VST.veric.SeparationLogic <> normal_ret_assert def
R4237:4237 VST.floyd.assert_lemmas <> Q:13 var
R4216:4216 VST.floyd.assert_lemmas <> P:12 var
R4242:4258 VST.veric.SeparationLogic <> normal_ret_assert def
R4260:4260 VST.floyd.assert_lemmas <> P:12 var
prf 4295:4306 <> frame_normal
binder 4318:4318 <> P:14
binder 4320:4320 <> F:15
R4366:4368 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4326:4341 VST.veric.SeparationLogic <> frame_ret_assert def
R4365:4365 VST.floyd.assert_lemmas <> F:15 var
R4344:4360 VST.veric.SeparationLogic <> normal_ret_assert def
R4362:4362 VST.floyd.assert_lemmas <> P:14 var
R4369:4385 VST.veric.SeparationLogic <> normal_ret_assert def
R4389:4391 VST.msl.seplog <> ::logic:x_'*'_x not
R4388:4388 VST.floyd.assert_lemmas <> P:14 var
R4392:4392 VST.floyd.assert_lemmas <> F:15 var
R4418:4434 VST.veric.SeparationLogic <> normal_ret_assert def
prf 4542:4551 <> frame_for1
binder 4563:4563 <> Q:16
binder 4565:4565 <> R:17
binder 4567:4567 <> F:18
R4614:4619 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4573:4588 VST.veric.SeparationLogic <> frame_ret_assert def
R4613:4613 VST.floyd.assert_lemmas <> F:18 var
R4591:4606 VST.veric.SeparationLogic <> loop1_ret_assert def
R4610:4610 VST.floyd.assert_lemmas <> R:17 var
R4608:4608 VST.floyd.assert_lemmas <> Q:16 var
R4620:4635 VST.veric.SeparationLogic <> loop1_ret_assert def
R4646:4661 VST.veric.SeparationLogic <> frame_ret_assert def
R4665:4665 VST.floyd.assert_lemmas <> F:18 var
R4663:4663 VST.floyd.assert_lemmas <> R:17 var
R4639:4641 VST.msl.seplog <> ::logic:x_'*'_x not
R4638:4638 VST.floyd.assert_lemmas <> Q:16 var
R4642:4642 VST.floyd.assert_lemmas <> F:18 var
prf 4726:4736 <> frame_loop1
binder 4748:4748 <> Q:19
binder 4750:4750 <> R:20
binder 4752:4752 <> F:21
R4799:4804 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4758:4773 VST.veric.SeparationLogic <> frame_ret_assert def
R4798:4798 VST.floyd.assert_lemmas <> F:21 var
R4776:4791 VST.veric.SeparationLogic <> loop2_ret_assert def
R4795:4795 VST.floyd.assert_lemmas <> R:20 var
R4793:4793 VST.floyd.assert_lemmas <> Q:19 var
R4805:4820 VST.veric.SeparationLogic <> loop2_ret_assert def
R4831:4846 VST.veric.SeparationLogic <> frame_ret_assert def
R4850:4850 VST.floyd.assert_lemmas <> F:21 var
R4848:4848 VST.floyd.assert_lemmas <> R:20 var
R4824:4826 VST.msl.seplog <> ::logic:x_'*'_x not
R4823:4823 VST.floyd.assert_lemmas <> Q:19 var
R4827:4827 VST.floyd.assert_lemmas <> F:21 var
R4960:4971 VST.floyd.assert_lemmas <> frame_normal thm
R4973:4982 VST.floyd.assert_lemmas <> frame_for1 thm
R4984:4994 VST.floyd.assert_lemmas <> frame_loop1 thm
R5013:5031 VST.floyd.assert_lemmas <> overridePost_normal thm
prf 5083:5107 <> overridePost_overridePost
binder 5118:5118 <> P:22
binder 5120:5120 <> Q:23
binder 5122:5122 <> R:24
R5158:5160 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5125:5136 VST.veric.SeparationLogic <> overridePost def
R5141:5152 VST.veric.SeparationLogic <> overridePost def
R5156:5156 VST.floyd.assert_lemmas <> R:24 var
R5154:5154 VST.floyd.assert_lemmas <> Q:23 var
R5138:5138 VST.floyd.assert_lemmas <> P:22 var
R5161:5172 VST.veric.SeparationLogic <> overridePost def
R5176:5176 VST.floyd.assert_lemmas <> R:24 var
R5174:5174 VST.floyd.assert_lemmas <> P:22 var
R5237:5261 VST.floyd.assert_lemmas <> overridePost_overridePost thm
prf 5284:5303 <> overridePost_normal'
binder 5315:5315 <> P:25
binder 5317:5317 <> R:26
R5348:5350 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5320:5328 VST.veric.tycontext <> RA_normal proj
R5331:5342 VST.veric.SeparationLogic <> overridePost def
R5346:5346 VST.floyd.assert_lemmas <> R:26 var
R5344:5344 VST.floyd.assert_lemmas <> P:25 var
R5351:5351 VST.floyd.assert_lemmas <> P:25 var
R5414:5433 VST.floyd.assert_lemmas <> overridePost_normal' thm
prf 5456:5463 <> liftx_id
binder 5478:5478 <> T:27
binder 5481:5481 <> e:28
R5532:5534 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5485:5489 VST.veric.lift <> liftx def
R5531:5531 VST.floyd.assert_lemmas <> e:28 var
binder 5523:5523 <> v:29
R5528:5528 VST.floyd.assert_lemmas <> v:29 var
R5492:5497 VST.veric.lift <> Tarrow canonstruc
R5502:5512 VST.veric.mpred <> LiftEnviron canonstruc
R5514:5514 VST.floyd.assert_lemmas <> T:27 var
R5499:5499 VST.floyd.assert_lemmas <> T:27 var
R5535:5535 VST.floyd.assert_lemmas <> e:28 var
R5606:5613 VST.floyd.assert_lemmas <> liftx_id thm
prf 5631:5643 <> liftx3_liftx2
binder 5655:5656 <> A1:30
binder 5658:5659 <> A2:31
binder 5661:5662 <> A3:32
binder 5664:5664 <> B:33
binder 5667:5667 <> f:34
R5673:5674 VST.floyd.assert_lemmas <> A1:30 var
binder 5670:5670 <> x:35
R5768:5772 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5681:5685 VST.veric.lift <> liftx def
R5743:5747 VST.veric.lift <> liftx def
R5766:5766 VST.floyd.assert_lemmas <> x:35 var
R5750:5760 VST.veric.mpred <> LiftEnviron canonstruc
R5762:5763 VST.floyd.assert_lemmas <> A1:30 var
R5739:5739 VST.floyd.assert_lemmas <> f:34 var
R5688:5693 VST.veric.lift <> Tarrow canonstruc
R5699:5704 VST.veric.lift <> Tarrow canonstruc
R5710:5715 VST.veric.lift <> Tarrow canonstruc
R5721:5731 VST.veric.mpred <> LiftEnviron canonstruc
R5733:5733 VST.floyd.assert_lemmas <> B:33 var
R5717:5718 VST.floyd.assert_lemmas <> A3:32 var
R5706:5707 VST.floyd.assert_lemmas <> A2:31 var
R5695:5696 VST.floyd.assert_lemmas <> A1:30 var
R5774:5778 VST.veric.lift <> liftx def
R5821:5821 VST.floyd.assert_lemmas <> f:34 var
R5823:5823 VST.floyd.assert_lemmas <> x:35 var
R5781:5786 VST.veric.lift <> Tarrow canonstruc
R5792:5797 VST.veric.lift <> Tarrow canonstruc
R5803:5813 VST.veric.mpred <> LiftEnviron canonstruc
R5815:5815 VST.floyd.assert_lemmas <> B:33 var
R5799:5800 VST.floyd.assert_lemmas <> A3:32 var
R5788:5789 VST.floyd.assert_lemmas <> A2:31 var
prf 5859:5871 <> liftx2_liftx1
binder 5883:5884 <> A1:36
binder 5886:5887 <> A2:37
binder 5889:5889 <> B:38
binder 5892:5892 <> f:39
R5898:5899 VST.floyd.assert_lemmas <> A1:36 var
binder 5895:5895 <> x:40
R5981:5985 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5906:5910 VST.veric.lift <> liftx def
R5956:5960 VST.veric.lift <> liftx def
R5979:5979 VST.floyd.assert_lemmas <> x:40 var
R5963:5973 VST.veric.mpred <> LiftEnviron canonstruc
R5975:5976 VST.floyd.assert_lemmas <> A1:36 var
R5952:5952 VST.floyd.assert_lemmas <> f:39 var
R5913:5918 VST.veric.lift <> Tarrow canonstruc
R5924:5929 VST.veric.lift <> Tarrow canonstruc
R5935:5945 VST.veric.mpred <> LiftEnviron canonstruc
R5947:5947 VST.floyd.assert_lemmas <> B:38 var
R5931:5932 VST.floyd.assert_lemmas <> A2:37 var
R5920:5921 VST.floyd.assert_lemmas <> A1:36 var
R5987:5991 VST.veric.lift <> liftx def
R6022:6022 VST.floyd.assert_lemmas <> f:39 var
R6024:6024 VST.floyd.assert_lemmas <> x:40 var
R5994:5999 VST.veric.lift <> Tarrow canonstruc
R6005:6015 VST.veric.mpred <> LiftEnviron canonstruc
R6017:6017 VST.floyd.assert_lemmas <> B:38 var
R6001:6002 VST.floyd.assert_lemmas <> A2:37 var
prf 6060:6072 <> liftx1_liftx0
binder 6085:6086 <> A1:41
binder 6088:6088 <> B:42
binder 6091:6091 <> f:43
R6097:6098 VST.floyd.assert_lemmas <> A1:41 var
binder 6094:6094 <> x:44
R6168:6172 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6105:6109 VST.veric.lift <> liftx def
R6143:6147 VST.veric.lift <> liftx def
R6166:6166 VST.floyd.assert_lemmas <> x:44 var
R6150:6160 VST.veric.mpred <> LiftEnviron canonstruc
R6162:6163 VST.floyd.assert_lemmas <> A1:41 var
R6139:6139 VST.floyd.assert_lemmas <> f:43 var
R6112:6117 VST.veric.lift <> Tarrow canonstruc
R6123:6133 VST.veric.mpred <> LiftEnviron canonstruc
R6135:6135 VST.floyd.assert_lemmas <> B:42 var
R6119:6120 VST.floyd.assert_lemmas <> A1:41 var
R6174:6178 VST.veric.lift <> liftx def
R6197:6197 VST.floyd.assert_lemmas <> f:43 var
R6199:6199 VST.floyd.assert_lemmas <> x:44 var
R6181:6191 VST.veric.mpred <> LiftEnviron canonstruc
R6193:6193 VST.floyd.assert_lemmas <> B:42 var
R6243:6255 VST.floyd.assert_lemmas <> liftx3_liftx2 thm
R6258:6270 VST.floyd.assert_lemmas <> liftx2_liftx1 thm
R6273:6285 VST.floyd.assert_lemmas <> liftx1_liftx0 thm
prf 6303:6313 <> lift1_lift0
binder 6325:6326 <> A1:45
binder 6328:6328 <> B:46
R6337:6340 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6341:6341 VST.floyd.assert_lemmas <> B:46 var
R6335:6336 VST.floyd.assert_lemmas <> A1:45 var
binder 6332:6332 <> f:47
R6348:6349 VST.floyd.assert_lemmas <> A1:45 var
binder 6345:6345 <> x:48
R6370:6372 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6353:6357 VST.veric.mpred <> lift1 def
R6362:6366 VST.veric.mpred <> lift0 def
R6368:6368 VST.floyd.assert_lemmas <> x:48 var
R6359:6359 VST.floyd.assert_lemmas <> f:47 var
R6373:6377 VST.veric.mpred <> lift0 def
R6380:6380 VST.floyd.assert_lemmas <> f:47 var
R6382:6382 VST.floyd.assert_lemmas <> x:48 var
R6453:6463 VST.floyd.assert_lemmas <> lift1_lift0 thm
prf 6481:6492 <> const_liftx0
binder 6504:6504 <> B:49
R6510:6510 VST.floyd.assert_lemmas <> B:49 var
binder 6507:6507 <> P:50
R6514:6514 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6535:6538 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6523:6529 VST.veric.mpred <> environ ind
R6534:6534 VST.floyd.assert_lemmas <> P:50 var
R6539:6539 VST.veric.lift LiftNotation :::'`'_x not
R6540:6540 VST.floyd.assert_lemmas <> P:50 var
R6581:6592 VST.floyd.assert_lemmas <> const_liftx0 thm
prf 6610:6622 <> lift_identity
binder 6634:6634 <> A:51
binder 6636:6636 <> f:52
R6657:6659 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6639:6640 VST.veric.lift LiftNotation :::'`('_x_')' not
R6654:6656 VST.veric.lift LiftNotation :::'`('_x_')' not
R6648:6648 VST.floyd.assert_lemmas <> A:51 var
binder 6645:6645 <> v:53
R6653:6653 VST.floyd.assert_lemmas <> v:53 var
R6656:6656 VST.floyd.assert_lemmas <> f:52 var
R6660:6660 VST.floyd.assert_lemmas <> f:52 var
R6709:6721 VST.floyd.assert_lemmas <> lift_identity thm
prf 6739:6755 <> tc_eval_gvar_zero
binder 6767:6771 <> Delta:54
binder 6773:6773 <> t:55
binder 6775:6775 <> i:56
binder 6777:6779 <> rho:57
R6802:6817 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6846:6861 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6893:6908 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6909:6915 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R6917:6918 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 6916:6916 <> b:58
R6935:6937 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6919:6926 VST.veric.expr <> eval_var def
R6932:6934 VST.floyd.assert_lemmas <> rho:57 var
R6930:6930 VST.floyd.assert_lemmas <> t:55 var
R6928:6928 VST.floyd.assert_lemmas <> i:56 var
R6938:6941 compcert.common.Values <> Vptr constr
R6945:6955 compcert.lib.Integers Ptrofs zero def
R6943:6943 VST.floyd.assert_lemmas <> b:58 var
R6884:6886 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6862:6862 compcert.lib.Maps <> :::x_'!'_x not
R6879:6882 compcert.lib.Maps <> :::x_'!'_x not
R6883:6883 VST.floyd.assert_lemmas <> i:56 var
R6863:6872 VST.veric.seplog <> glob_types def
R6874:6878 VST.floyd.assert_lemmas <> Delta:54 var
R6887:6890 Coq.Init.Datatypes <> Some constr
R6892:6892 VST.floyd.assert_lemmas <> t:55 var
R6839:6841 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6818:6818 compcert.lib.Maps <> :::x_'!'_x not
R6834:6837 compcert.lib.Maps <> :::x_'!'_x not
R6838:6838 VST.floyd.assert_lemmas <> i:56 var
R6819:6827 VST.veric.seplog <> var_types def
R6829:6833 VST.floyd.assert_lemmas <> Delta:54 var
R6842:6845 Coq.Init.Datatypes <> None constr
R6782:6791 VST.veric.SeparationLogic <> tc_environ def
R6799:6801 VST.floyd.assert_lemmas <> rho:57 var
R6793:6797 VST.floyd.assert_lemmas <> Delta:54 var
R6981:6988 VST.veric.expr <> eval_var def
prf 7088:7101 <> tc_eval_gvar_i
binder 7113:7117 <> Delta:59
binder 7119:7119 <> t:60
binder 7121:7121 <> i:61
binder 7123:7125 <> rho:62
R7148:7163 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7192:7207 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7239:7255 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7256:7261 VST.veric.Cop2 <> tc_val def
R7284:7291 VST.veric.expr <> eval_var def
R7297:7299 VST.floyd.assert_lemmas <> rho:62 var
R7295:7295 VST.floyd.assert_lemmas <> t:60 var
R7293:7293 VST.floyd.assert_lemmas <> i:61 var
R7264:7271 compcert.cfrontend.Ctypes <> Tpointer constr
R7275:7280 compcert.cfrontend.Ctypes <> noattr def
R7273:7273 VST.floyd.assert_lemmas <> t:60 var
R7230:7232 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7208:7208 compcert.lib.Maps <> :::x_'!'_x not
R7225:7228 compcert.lib.Maps <> :::x_'!'_x not
R7229:7229 VST.floyd.assert_lemmas <> i:61 var
R7209:7218 VST.veric.seplog <> glob_types def
R7220:7224 VST.floyd.assert_lemmas <> Delta:59 var
R7233:7236 Coq.Init.Datatypes <> Some constr
R7238:7238 VST.floyd.assert_lemmas <> t:60 var
R7185:7187 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7164:7164 compcert.lib.Maps <> :::x_'!'_x not
R7180:7183 compcert.lib.Maps <> :::x_'!'_x not
R7184:7184 VST.floyd.assert_lemmas <> i:61 var
R7165:7173 VST.veric.seplog <> var_types def
R7175:7179 VST.floyd.assert_lemmas <> Delta:59 var
R7188:7191 Coq.Init.Datatypes <> None constr
R7128:7137 VST.veric.SeparationLogic <> tc_environ def
R7145:7147 VST.floyd.assert_lemmas <> rho:62 var
R7139:7143 VST.floyd.assert_lemmas <> Delta:59 var
R7336:7352 VST.floyd.assert_lemmas <> tc_eval_gvar_zero thm
R7336:7352 VST.floyd.assert_lemmas <> tc_eval_gvar_zero thm
R7405:7412 VST.veric.Cop2 <> eqb_type def
R7426:7441 Coq.Init.Logic <> I constr
R7405:7412 VST.veric.Cop2 <> eqb_type def
R7426:7441 Coq.Init.Logic <> I constr
R7426:7441 Coq.Init.Logic <> I constr
prf 7456:7470 <> local_lift2_and
binder 7480:7480 <> P:63
binder 7482:7482 <> Q:64
R7501:7511 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7485:7489 VST.veric.SeparationLogic <> local def
R7492:7492 VST.veric.lift LiftNotation :::'`'_x not
R7496:7499 VST.veric.lift LiftNotation :::'`'_x not
R7493:7495 Coq.Init.Logic <> and ind
R7499:7499 VST.floyd.assert_lemmas <> Q:64 var
R7497:7497 VST.floyd.assert_lemmas <> P:63 var
R7519:7522 VST.msl.seplog <> ::logic:x_'&&'_x not
R7512:7516 VST.veric.SeparationLogic <> local def
R7518:7518 VST.floyd.assert_lemmas <> P:63 var
R7523:7527 VST.veric.SeparationLogic <> local def
R7529:7529 VST.floyd.assert_lemmas <> Q:64 var
R7574:7578 VST.veric.SeparationLogic <> local def
R7614:7621 VST.msl.seplog <> pred_ext meth
R7614:7621 VST.msl.seplog <> pred_ext meth
R7676:7690 VST.floyd.assert_lemmas <> local_lift2_and thm
prf 7708:7715 <> subst_TT
binder 7718:7718 <> A:65
R7725:7730 VST.msl.seplog <> NatDed class
R7732:7732 VST.floyd.assert_lemmas <> A:65 var
binder 7721:7722 <> NA:66
binder 7743:7743 <> i:67
binder 7745:7745 <> v:68
R7760:7762 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7748:7752 VST.veric.seplog <> subst def
R7758:7759 VST.msl.seplog <> TT meth
R7756:7756 VST.floyd.assert_lemmas <> v:68 var
R7754:7754 VST.floyd.assert_lemmas <> i:67 var
R7763:7764 VST.msl.seplog <> TT meth
prf 7827:7834 <> subst_FF
binder 7837:7837 <> A:69
R7844:7849 VST.msl.seplog <> NatDed class
R7851:7851 VST.floyd.assert_lemmas <> A:69 var
binder 7840:7841 <> NA:70
binder 7862:7862 <> i:71
binder 7864:7864 <> v:72
R7879:7881 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7867:7871 VST.veric.seplog <> subst def
R7877:7878 VST.msl.seplog <> FF meth
R7875:7875 VST.floyd.assert_lemmas <> v:72 var
R7873:7873 VST.floyd.assert_lemmas <> i:71 var
R7882:7883 VST.msl.seplog <> FF meth
R7953:7960 VST.floyd.assert_lemmas <> subst_TT thm
R7963:7970 VST.floyd.assert_lemmas <> subst_FF thm
R7995:8002 VST.floyd.assert_lemmas <> subst_TT thm
R8010:8015 VST.veric.SeparationLogic <> Nveric inst
R8004:8008 VST.veric.mpred <> mpred def
R8020:8027 VST.floyd.assert_lemmas <> subst_FF thm
R8035:8040 VST.veric.SeparationLogic <> Nveric inst
R8029:8033 VST.veric.mpred <> mpred def
prf 8058:8069 <> subst_sepcon
binder 8079:8079 <> i:73
binder 8081:8081 <> v:74
R8096:8097 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8098:8102 VST.veric.mpred <> mpred def
R8089:8095 VST.veric.mpred <> environ ind
binder 8084:8084 <> P:75
binder 8086:8086 <> Q:76
R8125:8128 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8154:8154 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8108:8112 VST.veric.seplog <> subst def
R8120:8122 VST.msl.seplog <> ::logic:x_'*'_x not
R8119:8119 VST.floyd.assert_lemmas <> P:75 var
R8123:8123 VST.floyd.assert_lemmas <> Q:76 var
R8116:8116 VST.floyd.assert_lemmas <> v:74 var
R8114:8114 VST.floyd.assert_lemmas <> i:73 var
R8140:8142 VST.msl.seplog <> ::logic:x_'*'_x not
R8129:8133 VST.veric.seplog <> subst def
R8139:8139 VST.floyd.assert_lemmas <> P:75 var
R8137:8137 VST.floyd.assert_lemmas <> v:74 var
R8135:8135 VST.floyd.assert_lemmas <> i:73 var
R8143:8147 VST.veric.seplog <> subst def
R8153:8153 VST.floyd.assert_lemmas <> Q:76 var
R8151:8151 VST.floyd.assert_lemmas <> v:74 var
R8149:8149 VST.floyd.assert_lemmas <> i:73 var
R8195:8206 VST.floyd.assert_lemmas <> subst_sepcon thm
prf 8224:8233 <> subst_wand
binder 8243:8243 <> i:77
binder 8245:8245 <> v:78
R8260:8261 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8262:8266 VST.veric.mpred <> mpred def
R8253:8259 VST.veric.mpred <> environ ind
binder 8248:8248 <> P:79
binder 8250:8250 <> Q:80
R8290:8293 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8320:8320 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8272:8276 VST.veric.seplog <> subst def
R8284:8287 VST.msl.seplog <> ::logic:x_'-*'_x not
R8283:8283 VST.floyd.assert_lemmas <> P:79 var
R8288:8288 VST.floyd.assert_lemmas <> Q:80 var
R8280:8280 VST.floyd.assert_lemmas <> v:78 var
R8278:8278 VST.floyd.assert_lemmas <> i:77 var
R8305:8308 VST.msl.seplog <> ::logic:x_'-*'_x not
R8294:8298 VST.veric.seplog <> subst def
R8304:8304 VST.floyd.assert_lemmas <> P:79 var
R8302:8302 VST.floyd.assert_lemmas <> v:78 var
R8300:8300 VST.floyd.assert_lemmas <> i:77 var
R8309:8313 VST.veric.seplog <> subst def
R8319:8319 VST.floyd.assert_lemmas <> Q:80 var
R8317:8317 VST.floyd.assert_lemmas <> v:78 var
R8315:8315 VST.floyd.assert_lemmas <> i:77 var
R8361:8370 VST.floyd.assert_lemmas <> subst_wand thm
prf 8388:8396 <> subst_exp
binder 8409:8409 <> A:81
binder 8411:8411 <> B:82
R8426:8431 VST.msl.seplog <> NatDed class
R8433:8433 VST.floyd.assert_lemmas <> A:81 var
binder 8421:8422 <> NA:83
R8441:8445 compcert.common.AST <> ident def
binder 8437:8437 <> a:84
R8460:8463 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8464:8466 compcert.common.Values <> val ind
R8453:8459 VST.veric.mpred <> environ ind
binder 8449:8449 <> v:85
R8474:8477 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8485:8488 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8489:8489 VST.floyd.assert_lemmas <> A:81 var
R8478:8484 VST.veric.mpred <> environ ind
R8473:8473 VST.floyd.assert_lemmas <> B:82 var
binder 8470:8470 <> P:86
R8521:8523 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8497:8501 VST.veric.seplog <> subst def
R8508:8510 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R8515:8516 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R8514:8514 VST.floyd.assert_lemmas <> B:82 var
binder 8511:8511 <> b:87
R8517:8517 VST.floyd.assert_lemmas <> P:86 var
R8519:8519 VST.floyd.assert_lemmas <> b:87 var
R8505:8505 VST.floyd.assert_lemmas <> v:85 var
R8503:8503 VST.floyd.assert_lemmas <> a:84 var
R8524:8526 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R8531:8532 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R8530:8530 VST.floyd.assert_lemmas <> B:82 var
binder 8527:8527 <> b:88
R8533:8537 VST.veric.seplog <> subst def
R8544:8544 VST.floyd.assert_lemmas <> P:86 var
R8546:8546 VST.floyd.assert_lemmas <> b:88 var
R8541:8541 VST.floyd.assert_lemmas <> v:85 var
R8539:8539 VST.floyd.assert_lemmas <> a:84 var
prf 8590:8604 <> env_set_env_set
binder 8614:8615 <> id:89
binder 8617:8618 <> v1:90
binder 8620:8621 <> v2:91
binder 8623:8625 <> rho:92
R8661:8663 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8628:8634 VST.veric.mpred <> env_set def
R8659:8660 VST.floyd.assert_lemmas <> v2:91 var
R8656:8657 VST.floyd.assert_lemmas <> id:89 var
R8637:8643 VST.veric.mpred <> env_set def
R8652:8653 VST.floyd.assert_lemmas <> v1:90 var
R8649:8650 VST.floyd.assert_lemmas <> id:89 var
R8645:8647 VST.floyd.assert_lemmas <> rho:92 var
R8664:8670 VST.veric.mpred <> env_set def
R8679:8680 VST.floyd.assert_lemmas <> v2:91 var
R8676:8677 VST.floyd.assert_lemmas <> id:89 var
R8672:8674 VST.floyd.assert_lemmas <> rho:92 var
R8709:8715 VST.veric.mpred <> env_set def
R8737:8743 VST.veric.mpred Map ext thm
R8737:8743 VST.veric.mpred Map ext thm
R8767:8772 VST.msl.eq_dec <> eq_dec def
R8767:8772 VST.msl.eq_dec <> eq_dec def
R8803:8809 VST.veric.mpred Map gss thm
R8803:8809 VST.veric.mpred Map gss thm
R8803:8809 VST.veric.mpred Map gss thm
R8803:8809 VST.veric.mpred Map gss thm
R8803:8809 VST.veric.mpred Map gss thm
R8803:8809 VST.veric.mpred Map gss thm
R8847:8853 VST.veric.mpred Map gso thm
R8847:8853 VST.veric.mpred Map gso thm
R8847:8853 VST.veric.mpred Map gso thm
R8847:8853 VST.veric.mpred Map gso thm
R8847:8853 VST.veric.mpred Map gso thm
R8847:8853 VST.veric.mpred Map gso thm
R8847:8853 VST.veric.mpred Map gso thm
R8847:8853 VST.veric.mpred Map gso thm
prf 8882:8896 <> env_set_eval_id
binder 8906:8907 <> id:93
binder 8909:8911 <> rho:94
binder 8913:8917 <> Delta:95
binder 8919:8919 <> t:96
R8944:8949 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8982:8987 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9019:9021 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8988:8994 VST.veric.mpred <> env_set def
R9004:9010 VST.veric.mpred <> eval_id def
R9015:9017 VST.floyd.assert_lemmas <> rho:94 var
R9012:9013 VST.floyd.assert_lemmas <> id:93 var
R9000:9001 VST.floyd.assert_lemmas <> id:93 var
R8996:8998 VST.floyd.assert_lemmas <> rho:94 var
R9022:9024 VST.floyd.assert_lemmas <> rho:94 var
R8973:8975 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8950:8950 compcert.lib.Maps <> :::x_'!'_x not
R8967:8970 compcert.lib.Maps <> :::x_'!'_x not
R8971:8972 VST.floyd.assert_lemmas <> id:93 var
R8951:8960 VST.veric.seplog <> temp_types def
R8962:8966 VST.floyd.assert_lemmas <> Delta:95 var
R8976:8979 Coq.Init.Datatypes <> Some constr
R8981:8981 VST.floyd.assert_lemmas <> t:96 var
R8924:8933 VST.veric.SeparationLogic <> tc_environ def
R8941:8943 VST.floyd.assert_lemmas <> rho:94 var
R8935:8939 VST.floyd.assert_lemmas <> Delta:95 var
R9128:9134 VST.veric.mpred <> eval_id def
R9137:9143 VST.veric.mpred <> env_set def
R9146:9154 VST.veric.val_lemmas <> force_val def
R9217:9223 VST.veric.mpred Map ext thm
R9217:9223 VST.veric.mpred Map ext thm
R9248:9257 Coq.PArith.BinPos Pos eq_dec thm
R9248:9257 Coq.PArith.BinPos Pos eq_dec thm
R9290:9296 VST.veric.mpred Map gss thm
R9290:9296 VST.veric.mpred Map gss thm
R9290:9296 VST.veric.mpred Map gss thm
R9317:9323 VST.veric.mpred Map gso thm
R9317:9323 VST.veric.mpred Map gso thm
R9317:9323 VST.veric.mpred Map gso thm
R9317:9323 VST.veric.mpred Map gso thm
prf 9344:9350 <> resubst
binder 9361:9361 <> A:97
binder 9364:9364 <> i:98
R9373:9375 compcert.common.Values <> val ind
binder 9367:9367 <> v:99
binder 9369:9370 <> v1:100
R9389:9392 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9393:9393 VST.floyd.assert_lemmas <> A:97 var
R9382:9388 VST.veric.mpred <> environ ind
binder 9379:9379 <> e:101
R9427:9429 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9397:9401 VST.veric.seplog <> subst def
R9412:9416 VST.veric.seplog <> subst def
R9425:9425 VST.floyd.assert_lemmas <> e:101 var
R9420:9421 VST.veric.lift LiftNotation :::'`('_x_')' not
R9423:9423 VST.veric.lift LiftNotation :::'`('_x_')' not
R9422:9422 VST.floyd.assert_lemmas <> v:99 var
R9418:9418 VST.floyd.assert_lemmas <> i:98 var
R9406:9406 VST.veric.lift LiftNotation :::'`'_x not
R9407:9408 VST.floyd.assert_lemmas <> v1:100 var
R9403:9403 VST.floyd.assert_lemmas <> i:98 var
R9430:9434 VST.veric.seplog <> subst def
R9443:9443 VST.floyd.assert_lemmas <> e:101 var
R9438:9439 VST.veric.lift LiftNotation :::'`('_x_')' not
R9441:9441 VST.veric.lift LiftNotation :::'`('_x_')' not
R9440:9440 VST.floyd.assert_lemmas <> v:99 var
R9436:9436 VST.floyd.assert_lemmas <> i:98 var
R9489:9493 VST.veric.seplog <> subst def
R9514:9520 VST.veric.mpred <> env_set def
R9540:9546 VST.veric.mpred Map ext thm
R9540:9546 VST.veric.mpred Map ext thm
R9569:9574 VST.msl.eq_dec <> eq_dec def
R9569:9574 VST.msl.eq_dec <> eq_dec def
R9604:9610 VST.veric.mpred Map gss thm
R9604:9610 VST.veric.mpred Map gss thm
R9604:9610 VST.veric.mpred Map gss thm
R9604:9610 VST.veric.mpred Map gss thm
R9604:9610 VST.veric.mpred Map gss thm
R9604:9610 VST.veric.mpred Map gss thm
R9646:9652 VST.veric.mpred Map gso thm
R9646:9652 VST.veric.mpred Map gso thm
R9646:9652 VST.veric.mpred Map gso thm
R9646:9652 VST.veric.mpred Map gso thm
R9646:9652 VST.veric.mpred Map gso thm
R9646:9652 VST.veric.mpred Map gso thm
R9646:9652 VST.veric.mpred Map gso thm
R9646:9652 VST.veric.mpred Map gso thm
R9689:9695 VST.floyd.assert_lemmas <> resubst thm
prf 9713:9724 <> resubst_full
binder 9735:9735 <> A:102
binder 9738:9738 <> i:103
R9751:9754 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9755:9757 compcert.common.Values <> val ind
R9744:9750 VST.veric.mpred <> environ ind
binder 9741:9741 <> v:104
binder 9760:9761 <> v1:105
R9774:9777 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9778:9778 VST.floyd.assert_lemmas <> A:102 var
R9767:9773 VST.veric.mpred <> environ ind
binder 9764:9764 <> e:106
R9806:9808 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9782:9786 VST.veric.seplog <> subst def
R9794:9798 VST.veric.seplog <> subst def
R9804:9804 VST.floyd.assert_lemmas <> e:106 var
R9802:9802 VST.floyd.assert_lemmas <> v:104 var
R9800:9800 VST.floyd.assert_lemmas <> i:103 var
R9790:9791 VST.floyd.assert_lemmas <> v1:105 var
R9788:9788 VST.floyd.assert_lemmas <> i:103 var
R9809:9813 VST.veric.seplog <> subst def
R9832:9832 VST.floyd.assert_lemmas <> e:106 var
R9818:9822 VST.veric.seplog <> subst def
R9829:9829 VST.floyd.assert_lemmas <> v:104 var
R9826:9827 VST.floyd.assert_lemmas <> v1:105 var
R9824:9824 VST.floyd.assert_lemmas <> i:103 var
R9815:9815 VST.floyd.assert_lemmas <> i:103 var
R9881:9885 VST.veric.seplog <> subst def
R9906:9912 VST.veric.mpred <> env_set def
R9932:9938 VST.veric.mpred Map ext thm
R9932:9938 VST.veric.mpred Map ext thm
R9961:9966 VST.msl.eq_dec <> eq_dec def
R9961:9966 VST.msl.eq_dec <> eq_dec def
R9996:10002 VST.veric.mpred Map gss thm
R9996:10002 VST.veric.mpred Map gss thm
R9996:10002 VST.veric.mpred Map gss thm
R9996:10002 VST.veric.mpred Map gss thm
R9996:10002 VST.veric.mpred Map gss thm
R9996:10002 VST.veric.mpred Map gss thm
R10038:10044 VST.veric.mpred Map gso thm
R10038:10044 VST.veric.mpred Map gso thm
R10038:10044 VST.veric.mpred Map gso thm
R10038:10044 VST.veric.mpred Map gso thm
R10038:10044 VST.veric.mpred Map gso thm
R10038:10044 VST.veric.mpred Map gso thm
R10038:10044 VST.veric.mpred Map gso thm
R10038:10044 VST.veric.mpred Map gso thm
prf 10073:10083 <> subst_ewand
binder 10093:10093 <> i:107
binder 10095:10095 <> v:108
R10110:10111 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10112:10116 VST.veric.mpred <> mpred def
R10103:10109 VST.veric.mpred <> environ ind
binder 10098:10098 <> P:109
binder 10100:10100 <> Q:110
R10143:10145 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10122:10126 VST.veric.seplog <> subst def
R10133:10137 VST.msl.seplog <> ewand meth
R10141:10141 VST.floyd.assert_lemmas <> Q:110 var
R10139:10139 VST.floyd.assert_lemmas <> P:109 var
R10130:10130 VST.floyd.assert_lemmas <> v:108 var
R10128:10128 VST.floyd.assert_lemmas <> i:107 var
R10146:10150 VST.msl.seplog <> ewand meth
R10167:10171 VST.veric.seplog <> subst def
R10177:10177 VST.floyd.assert_lemmas <> Q:110 var
R10175:10175 VST.floyd.assert_lemmas <> v:108 var
R10173:10173 VST.floyd.assert_lemmas <> i:107 var
R10153:10157 VST.veric.seplog <> subst def
R10163:10163 VST.floyd.assert_lemmas <> P:109 var
R10161:10161 VST.floyd.assert_lemmas <> v:108 var
R10159:10159 VST.floyd.assert_lemmas <> i:107 var
R10219:10229 VST.floyd.assert_lemmas <> subst_ewand thm
prf 10247:10256 <> subst_andp
binder 10259:10259 <> A:111
R10266:10271 VST.msl.seplog <> NatDed class
R10273:10273 VST.floyd.assert_lemmas <> A:111 var
binder 10262:10263 <> NA:112
binder 10286:10287 <> id:113
binder 10289:10289 <> v:114
R10304:10306 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10307:10307 VST.floyd.assert_lemmas <> A:111 var
R10297:10303 VST.veric.mpred <> environ ind
binder 10292:10292 <> P:115
binder 10294:10294 <> Q:116
R10330:10332 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10311:10315 VST.veric.seplog <> subst def
R10324:10327 VST.msl.seplog <> ::logic:x_'&&'_x not
R10323:10323 VST.floyd.assert_lemmas <> P:115 var
R10328:10328 VST.floyd.assert_lemmas <> Q:116 var
R10320:10320 VST.floyd.assert_lemmas <> v:114 var
R10317:10318 VST.floyd.assert_lemmas <> id:113 var
R10345:10348 VST.msl.seplog <> ::logic:x_'&&'_x not
R10333:10337 VST.veric.seplog <> subst def
R10344:10344 VST.floyd.assert_lemmas <> P:115 var
R10342:10342 VST.floyd.assert_lemmas <> v:114 var
R10339:10340 VST.floyd.assert_lemmas <> id:113 var
R10349:10353 VST.veric.seplog <> subst def
R10360:10360 VST.floyd.assert_lemmas <> Q:116 var
R10358:10358 VST.floyd.assert_lemmas <> v:114 var
R10355:10356 VST.floyd.assert_lemmas <> id:113 var
R10405:10409 VST.veric.seplog <> subst def
prf 10437:10446 <> subst_prop
binder 10449:10449 <> A:117
R10456:10461 VST.msl.seplog <> NatDed class
R10463:10463 VST.floyd.assert_lemmas <> A:117 var
binder 10452:10453 <> NA:118
binder 10474:10474 <> i:119
binder 10476:10476 <> v:120
binder 10478:10478 <> P:121
R10503:10505 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10485:10489 VST.veric.seplog <> subst def
R10496:10499 VST.msl.seplog <> prop meth
R10501:10501 VST.floyd.assert_lemmas <> P:121 var
R10493:10493 VST.floyd.assert_lemmas <> v:120 var
R10491:10491 VST.floyd.assert_lemmas <> i:119 var
R10506:10509 VST.msl.seplog <> prop meth
R10511:10511 VST.floyd.assert_lemmas <> P:121 var
R10561:10570 VST.floyd.assert_lemmas <> subst_andp thm
R10572:10581 VST.floyd.assert_lemmas <> subst_prop thm
prf 10599:10618 <> eval_expr_Econst_int
R10633:10641 VST.veric.mpred <> compspecs class
binder 10629:10630 <> cs:122
binder 10645:10645 <> i:123
binder 10647:10647 <> t:124
R10676:10678 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10650:10658 VST.veric.expr <> eval_expr def
R10661:10670 compcert.cfrontend.Clight <> Econst_int constr
R10674:10674 VST.floyd.assert_lemmas <> t:124 var
R10672:10672 VST.floyd.assert_lemmas <> i:123 var
R10679:10680 VST.veric.lift LiftNotation :::'`('_x_')' not
R10687:10687 VST.veric.lift LiftNotation :::'`('_x_')' not
R10681:10684 compcert.common.Values <> Vint constr
R10686:10686 VST.floyd.assert_lemmas <> i:123 var
R10729:10748 VST.floyd.assert_lemmas <> eval_expr_Econst_int thm
prf 10765:10778 <> subst_eval_var
binder 10790:10791 <> id:125
binder 10793:10793 <> v:126
binder 10795:10797 <> id':127
binder 10799:10799 <> t:128
R10829:10831 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10802:10806 VST.veric.seplog <> subst def
R10814:10821 VST.veric.expr <> eval_var def
R10827:10827 VST.floyd.assert_lemmas <> t:128 var
R10823:10825 VST.floyd.assert_lemmas <> id':127 var
R10811:10811 VST.floyd.assert_lemmas <> v:126 var
R10808:10809 VST.floyd.assert_lemmas <> id:125 var
R10832:10839 VST.veric.expr <> eval_var def
R10845:10845 VST.floyd.assert_lemmas <> t:128 var
R10841:10843 VST.floyd.assert_lemmas <> id':127 var
R10870:10874 VST.veric.seplog <> subst def
R10877:10884 VST.veric.expr <> eval_var def
R10938:10951 VST.floyd.assert_lemmas <> subst_eval_var thm
prf 10969:10979 <> subst_local
binder 10989:10990 <> id:129
binder 10992:10992 <> v:130
binder 10994:10994 <> P:131
R11019:11021 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10999:11003 VST.veric.seplog <> subst def
R11011:11015 VST.veric.SeparationLogic <> local def
R11017:11017 VST.floyd.assert_lemmas <> P:131 var
R11008:11008 VST.floyd.assert_lemmas <> v:130 var
R11005:11006 VST.floyd.assert_lemmas <> id:129 var
R11022:11026 VST.veric.SeparationLogic <> local def
R11029:11033 VST.veric.seplog <> subst def
R11040:11040 VST.floyd.assert_lemmas <> P:131 var
R11038:11038 VST.floyd.assert_lemmas <> v:130 var
R11035:11036 VST.floyd.assert_lemmas <> id:129 var
R11082:11092 VST.floyd.assert_lemmas <> subst_local thm
prf 11110:11127 <> eval_lvalue_Ederef
R11144:11152 VST.veric.mpred <> compspecs class
binder 11140:11141 <> cs:132
binder 11156:11156 <> e:133
binder 11158:11158 <> t:134
R11185:11187 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11161:11171 VST.veric.expr <> eval_lvalue def
R11174:11179 compcert.cfrontend.Clight <> Ederef constr
R11183:11183 VST.floyd.assert_lemmas <> t:134 var
R11181:11181 VST.floyd.assert_lemmas <> e:133 var
R11188:11196 VST.veric.expr <> eval_expr def
R11198:11198 VST.floyd.assert_lemmas <> e:133 var
R11240:11257 VST.floyd.assert_lemmas <> eval_lvalue_Ederef thm
prf 11274:11289 <> local_lift0_True
R11309:11311 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11296:11300 VST.veric.SeparationLogic <> local def
R11303:11303 VST.veric.lift LiftNotation :::'`'_x not
R11304:11307 Coq.Init.Logic <> True ind
R11312:11313 VST.msl.seplog <> TT meth
R11354:11369 VST.floyd.assert_lemmas <> local_lift0_True thm
prf 11387:11408 <> overridePost_EK_return
binder 11420:11420 <> Q:135
binder 11422:11422 <> P:136
R11453:11455 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11425:11433 VST.veric.tycontext <> RA_return proj
R11436:11447 VST.veric.SeparationLogic <> overridePost def
R11451:11451 VST.floyd.assert_lemmas <> P:136 var
R11449:11449 VST.floyd.assert_lemmas <> Q:135 var
R11456:11464 VST.veric.tycontext <> RA_return proj
R11466:11466 VST.floyd.assert_lemmas <> P:136 var
R11520:11541 VST.floyd.assert_lemmas <> overridePost_EK_return thm
prf 11564:11583 <> frame_ret_assert_emp
binder 11595:11595 <> P:137
R11620:11622 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11598:11613 VST.veric.SeparationLogic <> frame_ret_assert def
R11617:11619 VST.msl.seplog <> emp meth
R11615:11615 VST.floyd.assert_lemmas <> P:137 var
R11623:11623 VST.floyd.assert_lemmas <> P:137 var
prf 11782:11807 <> frame_ret_assert_EK_return
binder 11818:11818 <> P:138
binder 11820:11820 <> Q:139
binder 11822:11823 <> vl:140
R11861:11864 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11826:11834 VST.veric.tycontext <> RA_return proj
R11859:11860 VST.floyd.assert_lemmas <> vl:140 var
R11837:11852 VST.veric.SeparationLogic <> frame_ret_assert def
R11856:11856 VST.floyd.assert_lemmas <> Q:139 var
R11854:11854 VST.floyd.assert_lemmas <> P:138 var
R11879:11881 VST.msl.seplog <> ::logic:x_'*'_x not
R11865:11873 VST.veric.tycontext <> RA_return proj
R11877:11878 VST.floyd.assert_lemmas <> vl:140 var
R11875:11875 VST.floyd.assert_lemmas <> P:138 var
R11882:11882 VST.floyd.assert_lemmas <> Q:139 var
R11943:11968 VST.floyd.assert_lemmas <> frame_ret_assert_EK_return thm
prf 11991:12024 <> function_body_ret_assert_EK_return
binder 12036:12036 <> t:141
binder 12038:12038 <> P:142
binder 12040:12041 <> vl:143
R12087:12089 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12044:12052 VST.veric.tycontext <> RA_return proj
R12085:12086 VST.floyd.assert_lemmas <> vl:143 var
R12055:12078 VST.veric.SeparationLogic <> function_body_ret_assert def
R12082:12082 VST.floyd.assert_lemmas <> P:142 var
R12080:12080 VST.floyd.assert_lemmas <> t:141 var
R12090:12097 VST.veric.SeparationLogic <> bind_ret def
R12104:12104 VST.floyd.assert_lemmas <> P:142 var
R12102:12102 VST.floyd.assert_lemmas <> t:141 var
R12099:12100 VST.floyd.assert_lemmas <> vl:143 var
R12145:12178 VST.floyd.assert_lemmas <> function_body_ret_assert_EK_return thm
prf 12201:12216 <> bind_ret1_unfold
binder 12228:12228 <> v:144
binder 12230:12230 <> t:145
binder 12232:12232 <> Q:146
R12256:12258 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12235:12242 VST.veric.SeparationLogic <> bind_ret def
R12255:12255 VST.floyd.assert_lemmas <> Q:146 var
R12253:12253 VST.floyd.assert_lemmas <> t:145 var
R12245:12248 Coq.Init.Datatypes <> Some constr
R12250:12250 VST.floyd.assert_lemmas <> v:144 var
R12271:12274 VST.msl.seplog <> ::logic:x_'&&'_x not
R12259:12260 VST.msl.seplog <> ::logic:'!!'_x not
R12261:12266 VST.veric.Cop2 <> tc_val def
R12270:12270 VST.floyd.assert_lemmas <> v:144 var
R12268:12268 VST.floyd.assert_lemmas <> t:145 var
R12275:12275 VST.veric.lift LiftNotation :::'`'_x not
R12277:12314 VST.veric.lift LiftNotation :::'`'_x not
R12276:12276 VST.floyd.assert_lemmas <> Q:146 var
R12279:12287 VST.veric.SeparationLogic <> make_args def
R12308:12309 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12307:12307 VST.floyd.assert_lemmas <> v:144 var
R12310:12312 Coq.Init.Datatypes <> nil constr
R12298:12301 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12290:12297 VST.veric.SeparationLogic <> ret_temp def
R12302:12304 Coq.Init.Datatypes <> nil constr
R12355:12370 VST.floyd.assert_lemmas <> bind_ret1_unfold thm
prf 12388:12404 <> bind_ret1_unfold'
binder 12416:12416 <> v:147
binder 12418:12418 <> t:148
binder 12420:12420 <> Q:149
binder 12422:12424 <> rho:150
R12454:12456 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12429:12436 VST.veric.SeparationLogic <> bind_ret def
R12451:12453 VST.floyd.assert_lemmas <> rho:150 var
R12449:12449 VST.floyd.assert_lemmas <> Q:149 var
R12447:12447 VST.floyd.assert_lemmas <> t:148 var
R12439:12442 Coq.Init.Datatypes <> Some constr
R12444:12444 VST.floyd.assert_lemmas <> v:147 var
R12471:12474 VST.msl.seplog <> ::logic:x_'&&'_x not
R12457:12459 VST.msl.seplog <> ::logic:'!!'_x not
R12470:12470 VST.msl.seplog <> ::logic:'!!'_x not
R12460:12465 VST.veric.Cop2 <> tc_val def
R12469:12469 VST.floyd.assert_lemmas <> v:147 var
R12467:12467 VST.floyd.assert_lemmas <> t:148 var
R12475:12475 VST.floyd.assert_lemmas <> Q:149 var
R12478:12486 VST.veric.SeparationLogic <> make_args def
R12512:12514 VST.floyd.assert_lemmas <> rho:150 var
R12505:12506 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12504:12504 VST.floyd.assert_lemmas <> v:147 var
R12507:12509 Coq.Init.Datatypes <> nil constr
R12497:12498 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12489:12496 VST.veric.SeparationLogic <> ret_temp def
R12499:12501 Coq.Init.Datatypes <> nil constr
R12565:12581 VST.floyd.assert_lemmas <> bind_ret1_unfold' thm
prf 12666:12687 <> normal_ret_assert_elim
binder 12698:12698 <> P:151
R12732:12734 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12701:12709 VST.veric.tycontext <> RA_normal proj
R12712:12728 VST.veric.SeparationLogic <> normal_ret_assert def
R12730:12730 VST.floyd.assert_lemmas <> P:151 var
R12735:12735 VST.floyd.assert_lemmas <> P:151 var
prf 12770:12790 <> overridePost_EK_break
binder 12801:12801 <> P:152
binder 12803:12803 <> Q:153
R12833:12835 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12806:12813 VST.veric.tycontext <> RA_break proj
R12816:12827 VST.veric.SeparationLogic <> overridePost def
R12831:12831 VST.floyd.assert_lemmas <> Q:153 var
R12829:12829 VST.floyd.assert_lemmas <> P:152 var
R12836:12843 VST.veric.tycontext <> RA_break proj
R12845:12845 VST.floyd.assert_lemmas <> Q:153 var
prf 12892:12916 <> loop1_ret_assert_EK_break
binder 12927:12927 <> P:154
binder 12929:12929 <> Q:155
R12963:12965 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12932:12939 VST.veric.tycontext <> RA_break proj
R12942:12957 VST.veric.SeparationLogic <> loop1_ret_assert def
R12961:12961 VST.floyd.assert_lemmas <> Q:155 var
R12959:12959 VST.floyd.assert_lemmas <> P:154 var
R12966:12974 VST.veric.tycontext <> RA_normal proj
R12976:12976 VST.floyd.assert_lemmas <> Q:155 var
R13032:13052 VST.floyd.assert_lemmas <> overridePost_EK_break thm
R13054:13078 VST.floyd.assert_lemmas <> loop1_ret_assert_EK_break thm
R13082:13103 VST.floyd.assert_lemmas <> normal_ret_assert_elim thm
prf 13126:13148 <> loop1_ret_assert_normal
binder 13160:13160 <> P:156
binder 13162:13162 <> Q:157
R13197:13199 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13165:13173 VST.veric.tycontext <> RA_normal proj
R13176:13191 VST.veric.SeparationLogic <> loop1_ret_assert def
R13195:13195 VST.floyd.assert_lemmas <> Q:157 var
R13193:13193 VST.floyd.assert_lemmas <> P:156 var
R13200:13200 VST.floyd.assert_lemmas <> P:156 var
R13256:13278 VST.floyd.assert_lemmas <> loop1_ret_assert_normal thm
prf 13300:13316 <> unfold_make_args'
binder 13326:13329 <> fsig:158
binder 13331:13334 <> args:159
binder 13336:13338 <> rho:160
R13369:13371 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13345:13354 VST.veric.SeparationLogic <> make_args' def
R13366:13368 VST.floyd.assert_lemmas <> rho:160 var
R13361:13364 VST.floyd.assert_lemmas <> args:159 var
R13356:13359 VST.floyd.assert_lemmas <> fsig:158 var
R13372:13380 VST.veric.SeparationLogic <> make_args def
R13421:13423 VST.floyd.assert_lemmas <> rho:160 var
R13411:13414 VST.floyd.assert_lemmas <> args:159 var
R13416:13418 VST.floyd.assert_lemmas <> rho:160 var
R13383:13385 Coq.Lists.List <> map def
R13399:13401 Coq.Init.Datatypes <> fst def
R13403:13406 VST.floyd.assert_lemmas <> fsig:158 var
R13389:13391 Coq.Init.Datatypes <> fst def
R13464:13480 VST.floyd.assert_lemmas <> unfold_make_args' thm
prf 13497:13517 <> unfold_make_args_cons
binder 13527:13527 <> i:161
binder 13529:13530 <> il:162
binder 13532:13532 <> v:163
binder 13534:13535 <> vl:164
binder 13537:13539 <> rho:165
R13574:13576 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13545:13553 VST.veric.SeparationLogic <> make_args def
R13571:13573 VST.floyd.assert_lemmas <> rho:165 var
R13565:13566 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13564:13564 VST.floyd.assert_lemmas <> v:163 var
R13567:13568 VST.floyd.assert_lemmas <> vl:164 var
R13557:13558 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13556:13556 VST.floyd.assert_lemmas <> i:161 var
R13559:13560 VST.floyd.assert_lemmas <> il:162 var
R13577:13583 VST.veric.mpred <> env_set def
R13609:13609 VST.floyd.assert_lemmas <> v:163 var
R13607:13607 VST.floyd.assert_lemmas <> i:161 var
R13586:13594 VST.veric.SeparationLogic <> make_args def
R13602:13604 VST.floyd.assert_lemmas <> rho:165 var
R13599:13600 VST.floyd.assert_lemmas <> vl:164 var
R13596:13597 VST.floyd.assert_lemmas <> il:162 var
prf 13643:13662 <> unfold_make_args_nil
R13682:13684 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13665:13673 VST.veric.SeparationLogic <> make_args def
R13679:13681 Coq.Init.Datatypes <> nil constr
R13675:13677 Coq.Init.Datatypes <> nil constr
R13685:13696 VST.veric.SeparationLogic <> globals_only def
R13737:13757 VST.floyd.assert_lemmas <> unfold_make_args_cons thm
R13759:13778 VST.floyd.assert_lemmas <> unfold_make_args_nil thm
prf 13796:13805 <> clear_rhox
R13853:13857 VST.veric.mpred <> mpred def
binder 13850:13850 <> P:166
R13871:13874 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13875:13881 VST.veric.mpred <> environ ind
R13864:13870 VST.veric.mpred <> environ ind
binder 13861:13861 <> f:167
R13985:13994 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13890:13894 VST.veric.lift <> liftx def
R13984:13984 VST.floyd.assert_lemmas <> f:167 var
R13955:13959 VST.veric.lift <> liftx def
R13981:13981 VST.floyd.assert_lemmas <> P:166 var
R13962:13972 VST.veric.mpred <> LiftEnviron canonstruc
R13974:13978 VST.veric.mpred <> mpred def
R13897:13902 VST.veric.lift <> Tarrow canonstruc
R13913:13923 VST.veric.mpred <> LiftEnviron canonstruc
R13925:13929 VST.veric.mpred <> mpred def
R13904:13910 VST.veric.mpred <> environ ind
R13995:13995 VST.veric.lift LiftNotation :::'`'_x not
R13996:13996 VST.floyd.assert_lemmas <> P:166 var
R14045:14054 VST.floyd.assert_lemmas <> clear_rhox thm
prf 14071:14085 <> eval_make_args'
R14104:14107 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14101:14103 compcert.common.Values <> val ind
binder 14098:14098 <> Q:168
binder 14114:14114 <> i:169
binder 14116:14119 <> fsig:170
binder 14121:14124 <> args:171
R14258:14262 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14130:14134 VST.veric.lift <> liftx def
R14237:14246 VST.veric.SeparationLogic <> make_args' def
R14253:14256 VST.floyd.assert_lemmas <> args:171 var
R14248:14251 VST.floyd.assert_lemmas <> fsig:170 var
R14180:14184 VST.veric.lift <> liftx def
R14221:14227 VST.veric.mpred <> eval_id def
R14229:14229 VST.floyd.assert_lemmas <> i:169 var
R14218:14218 VST.floyd.assert_lemmas <> Q:168 var
R14187:14192 VST.veric.lift <> Tarrow canonstruc
R14199:14209 VST.veric.mpred <> LiftEnviron canonstruc
R14194:14196 compcert.common.Values <> val ind
R14137:14142 VST.veric.lift <> Tarrow canonstruc
R14153:14163 VST.veric.mpred <> LiftEnviron canonstruc
R14144:14150 VST.veric.mpred <> environ ind
R14263:14263 VST.veric.lift LiftNotation :::'`'_x not
R14265:14302 VST.veric.lift LiftNotation :::'`'_x not
R14264:14264 VST.floyd.assert_lemmas <> Q:168 var
R14267:14268 VST.veric.lift LiftNotation :::'`('_x_')' not
R14278:14301 VST.veric.lift LiftNotation :::'`('_x_')' not
R14269:14275 VST.veric.mpred <> eval_id def
R14277:14277 VST.floyd.assert_lemmas <> i:169 var
R14281:14290 VST.veric.SeparationLogic <> make_args' def
R14297:14300 VST.floyd.assert_lemmas <> args:171 var
R14292:14295 VST.floyd.assert_lemmas <> fsig:170 var
R14343:14357 VST.floyd.assert_lemmas <> eval_make_args' thm
prf 14375:14393 <> eval_make_args_same
R14409:14417 VST.veric.mpred <> compspecs class
binder 14405:14406 <> cs:172
binder 14421:14421 <> i:173
binder 14423:14423 <> t:174
binder 14425:14428 <> fsig:175
binder 14430:14431 <> t0:176
binder 14433:14434 <> tl:177
R14440:14443 compcert.cfrontend.Clight <> expr ind
binder 14437:14437 <> e:178
binder 14446:14447 <> el:179
R14526:14531 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14451:14452 VST.veric.lift LiftNotation :::'`('_x_')' not
R14462:14525 VST.veric.lift LiftNotation :::'`('_x_')' not
R14453:14459 VST.veric.mpred <> eval_id def
R14461:14461 VST.floyd.assert_lemmas <> i:173 var
R14465:14474 VST.veric.SeparationLogic <> make_args' def
R14495:14507 VST.veric.expr <> eval_exprlist def
R14519:14520 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14518:14518 VST.floyd.assert_lemmas <> e:178 var
R14521:14522 VST.floyd.assert_lemmas <> el:179 var
R14511:14512 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14510:14510 VST.floyd.assert_lemmas <> t:174 var
R14513:14514 VST.floyd.assert_lemmas <> tl:177 var
R14476:14476 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14488:14489 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14492:14492 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14482:14483 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14477:14477 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14479:14479 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14481:14481 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14478:14478 VST.floyd.assert_lemmas <> i:173 var
R14480:14480 VST.floyd.assert_lemmas <> t:174 var
R14484:14487 VST.floyd.assert_lemmas <> fsig:175 var
R14490:14491 VST.floyd.assert_lemmas <> t0:176 var
R14532:14532 VST.veric.lift LiftNotation :::'`'_x not
R14542:14582 VST.veric.lift LiftNotation :::'`'_x not
R14533:14541 VST.veric.val_lemmas <> force_val def
R14544:14545 VST.veric.lift LiftNotation :::'`('_x_')' not
R14567:14581 VST.veric.lift LiftNotation :::'`('_x_')' not
R14546:14553 VST.veric.Clight_Cop2 <> sem_cast def
R14566:14566 VST.floyd.assert_lemmas <> t:174 var
R14556:14561 compcert.cfrontend.Clight <> typeof def
R14563:14563 VST.floyd.assert_lemmas <> e:178 var
R14570:14578 VST.veric.expr <> eval_expr def
R14580:14580 VST.floyd.assert_lemmas <> e:178 var
R14627:14636 VST.veric.SeparationLogic <> make_args' def
R14666:14672 VST.veric.mpred <> eval_id def
R14690:14696 VST.veric.mpred Map gss thm
R14690:14696 VST.veric.mpred Map gss thm
R14690:14696 VST.veric.mpred Map gss thm
prf 14744:14763 <> eval_make_args_other
R14779:14787 VST.veric.mpred <> compspecs class
binder 14775:14776 <> cs:180
binder 14791:14791 <> i:181
binder 14793:14793 <> j:182
binder 14795:14798 <> fsig:183
binder 14800:14801 <> t0:184
binder 14803:14803 <> t:185
binder 14805:14806 <> t':186
binder 14808:14809 <> tl:187
R14815:14818 compcert.cfrontend.Clight <> expr ind
binder 14812:14812 <> e:188
binder 14821:14822 <> el:189
R14832:14837 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14914:14919 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14838:14839 VST.veric.lift LiftNotation :::'`('_x_')' not
R14849:14913 VST.veric.lift LiftNotation :::'`('_x_')' not
R14840:14846 VST.veric.mpred <> eval_id def
R14848:14848 VST.floyd.assert_lemmas <> i:181 var
R14852:14861 VST.veric.SeparationLogic <> make_args' def
R14882:14894 VST.veric.expr <> eval_exprlist def
R14907:14908 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14906:14906 VST.floyd.assert_lemmas <> e:188 var
R14909:14910 VST.floyd.assert_lemmas <> el:189 var
R14899:14900 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14897:14898 VST.floyd.assert_lemmas <> t':186 var
R14901:14902 VST.floyd.assert_lemmas <> tl:187 var
R14863:14863 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14875:14876 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14879:14879 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14869:14870 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14864:14864 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14866:14866 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14868:14868 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14865:14865 VST.floyd.assert_lemmas <> j:182 var
R14867:14867 VST.floyd.assert_lemmas <> t:185 var
R14871:14874 VST.floyd.assert_lemmas <> fsig:183 var
R14877:14878 VST.floyd.assert_lemmas <> t0:184 var
R14920:14921 VST.veric.lift LiftNotation :::'`('_x_')' not
R14931:14977 VST.veric.lift LiftNotation :::'`('_x_')' not
R14922:14928 VST.veric.mpred <> eval_id def
R14930:14930 VST.floyd.assert_lemmas <> i:181 var
R14934:14943 VST.veric.SeparationLogic <> make_args' def
R14957:14969 VST.veric.expr <> eval_exprlist def
R14974:14975 VST.floyd.assert_lemmas <> el:189 var
R14971:14972 VST.floyd.assert_lemmas <> tl:187 var
R14945:14945 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14950:14951 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14954:14954 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14946:14949 VST.floyd.assert_lemmas <> fsig:183 var
R14952:14953 VST.floyd.assert_lemmas <> t0:184 var
R14829:14830 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R14828:14828 VST.floyd.assert_lemmas <> i:181 var
R14831:14831 VST.floyd.assert_lemmas <> j:182 var
R15022:15031 VST.veric.SeparationLogic <> make_args' def
R15061:15067 VST.veric.mpred <> eval_id def
R15085:15091 VST.veric.mpred Map gso thm
R15085:15091 VST.veric.mpred Map gso thm
R15085:15091 VST.veric.mpred Map gso thm
R15085:15091 VST.veric.mpred Map gso thm
R15120:15138 VST.floyd.assert_lemmas <> eval_make_args_same thm
R15163:15182 VST.floyd.assert_lemmas <> eval_make_args_other thm
R15253:15266 Coq.Program.Basics <> compose def
not 15245:15245 <> :::x_'oo'_x
R15314:15327 Coq.Program.Basics <> compose def
R15314:15327 Coq.Program.Basics <> compose def
prf 15354:15369 <> compose_backtick
binder 15381:15381 <> A:190
binder 15383:15383 <> B:191
binder 15385:15385 <> C:192
R15392:15395 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15396:15396 VST.floyd.assert_lemmas <> C:192 var
R15391:15391 VST.floyd.assert_lemmas <> B:191 var
binder 15388:15388 <> F:193
R15404:15407 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15408:15408 VST.floyd.assert_lemmas <> B:191 var
R15403:15403 VST.floyd.assert_lemmas <> A:190 var
binder 15400:15400 <> G:194
R15422:15425 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15426:15426 VST.floyd.assert_lemmas <> A:190 var
R15415:15421 VST.veric.mpred <> environ ind
binder 15412:15412 <> J:195
R15443:15445 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15433:15433 VST.veric.lift LiftNotation :::'`'_x not
R15435:15442 VST.veric.lift LiftNotation :::'`'_x not
R15434:15434 VST.floyd.assert_lemmas <> F:193 var
R15437:15437 VST.veric.lift LiftNotation :::'`'_x not
R15439:15441 VST.veric.lift LiftNotation :::'`'_x not
R15438:15438 VST.floyd.assert_lemmas <> G:194 var
R15441:15441 VST.floyd.assert_lemmas <> J:195 var
R15446:15447 VST.veric.lift LiftNotation :::'`('_x_')' not
R15466:15468 VST.veric.lift LiftNotation :::'`('_x_')' not
R15448:15461 Coq.Program.Basics <> compose def
R15465:15465 VST.floyd.assert_lemmas <> G:194 var
R15463:15463 VST.floyd.assert_lemmas <> F:193 var
R15468:15468 VST.floyd.assert_lemmas <> J:195 var
R15509:15524 VST.floyd.assert_lemmas <> compose_backtick thm
prf 15541:15567 <> compose_eval_make_args_same
R15584:15592 VST.veric.mpred <> compspecs class
binder 15580:15581 <> cs:196
R15603:15606 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15600:15602 compcert.common.Values <> val ind
binder 15597:15597 <> Q:197
binder 15613:15613 <> i:198
binder 15615:15615 <> t:199
binder 15617:15620 <> fsig:200
binder 15622:15623 <> t0:201
binder 15625:15626 <> tl:202
binder 15628:15628 <> e:203
binder 15630:15631 <> el:204
R15765:15769 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15637:15641 VST.veric.lift <> liftx def
R15705:15714 VST.veric.SeparationLogic <> make_args' def
R15734:15746 VST.veric.expr <> eval_exprlist def
R15758:15759 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15757:15757 VST.floyd.assert_lemmas <> e:203 var
R15760:15761 VST.floyd.assert_lemmas <> el:204 var
R15750:15751 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15749:15749 VST.floyd.assert_lemmas <> t:199 var
R15752:15753 VST.floyd.assert_lemmas <> tl:202 var
R15716:15716 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15728:15728 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15731:15731 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15722:15723 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R15717:15717 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15719:15719 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15721:15721 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15718:15718 VST.floyd.assert_lemmas <> i:198 var
R15720:15720 VST.floyd.assert_lemmas <> t:199 var
R15724:15727 VST.floyd.assert_lemmas <> fsig:200 var
R15729:15730 VST.floyd.assert_lemmas <> t0:201 var
R15687:15691 VST.floyd.assert_lemmas <> :::x_'oo'_x not
R15701:15701 VST.floyd.assert_lemmas <> :::x_'oo'_x not
R15686:15686 VST.floyd.assert_lemmas <> Q:197 var
R15692:15698 VST.veric.mpred <> eval_id def
R15700:15700 VST.floyd.assert_lemmas <> i:198 var
R15644:15649 VST.veric.lift <> Tarrow canonstruc
R15660:15670 VST.veric.mpred <> LiftEnviron canonstruc
R15651:15657 VST.veric.mpred <> environ ind
R15770:15770 VST.veric.lift LiftNotation :::'`'_x not
R15772:15825 VST.veric.lift LiftNotation :::'`'_x not
R15771:15771 VST.floyd.assert_lemmas <> Q:197 var
R15774:15774 VST.veric.lift LiftNotation :::'`'_x not
R15784:15824 VST.veric.lift LiftNotation :::'`'_x not
R15775:15783 VST.veric.val_lemmas <> force_val def
R15786:15787 VST.veric.lift LiftNotation :::'`('_x_')' not
R15809:15823 VST.veric.lift LiftNotation :::'`('_x_')' not
R15788:15795 VST.veric.Clight_Cop2 <> sem_cast def
R15808:15808 VST.floyd.assert_lemmas <> t:199 var
R15798:15803 compcert.cfrontend.Clight <> typeof def
R15805:15805 VST.floyd.assert_lemmas <> e:203 var
R15812:15820 VST.veric.expr <> eval_expr def
R15822:15822 VST.floyd.assert_lemmas <> e:203 var
R15858:15873 VST.floyd.assert_lemmas <> compose_backtick thm
R15858:15873 VST.floyd.assert_lemmas <> compose_backtick thm
R15858:15873 VST.floyd.assert_lemmas <> compose_backtick thm
R15893:15911 VST.floyd.assert_lemmas <> eval_make_args_same thm
R15893:15911 VST.floyd.assert_lemmas <> eval_make_args_same thm
prf 15926:15953 <> compose_eval_make_args_other
R15970:15978 VST.veric.mpred <> compspecs class
binder 15966:15967 <> cs:205
binder 15982:15982 <> Q:206
binder 15984:15984 <> i:207
binder 15986:15986 <> j:208
binder 15988:15991 <> fsig:209
binder 15993:15994 <> t0:210
binder 15996:15996 <> t:211
binder 15998:15999 <> t':212
binder 16001:16002 <> tl:213
R16008:16011 compcert.cfrontend.Clight <> expr ind
binder 16005:16005 <> e:214
binder 16014:16015 <> el:215
R16025:16032 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16163:16170 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16034:16038 VST.veric.lift <> liftx def
R16101:16110 VST.veric.SeparationLogic <> make_args' def
R16131:16143 VST.veric.expr <> eval_exprlist def
R16156:16157 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R16155:16155 VST.floyd.assert_lemmas <> e:214 var
R16158:16159 VST.floyd.assert_lemmas <> el:215 var
R16148:16149 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R16146:16147 VST.floyd.assert_lemmas <> t':212 var
R16150:16151 VST.floyd.assert_lemmas <> tl:213 var
R16112:16112 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16124:16125 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16128:16128 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16118:16119 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R16113:16113 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16115:16115 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16117:16117 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16114:16114 VST.floyd.assert_lemmas <> j:208 var
R16116:16116 VST.floyd.assert_lemmas <> t:211 var
R16120:16123 VST.floyd.assert_lemmas <> fsig:209 var
R16126:16127 VST.floyd.assert_lemmas <> t0:210 var
R16083:16087 VST.floyd.assert_lemmas <> :::x_'oo'_x not
R16097:16097 VST.floyd.assert_lemmas <> :::x_'oo'_x not
R16082:16082 VST.floyd.assert_lemmas <> Q:206 var
R16088:16094 VST.veric.mpred <> eval_id def
R16096:16096 VST.floyd.assert_lemmas <> i:207 var
R16041:16046 VST.veric.lift <> Tarrow canonstruc
R16057:16067 VST.veric.mpred <> LiftEnviron canonstruc
R16048:16054 VST.veric.mpred <> environ ind
R16171:16171 VST.veric.lift LiftNotation :::'`'_x not
R16173:16233 VST.veric.lift LiftNotation :::'`'_x not
R16172:16172 VST.floyd.assert_lemmas <> Q:206 var
R16175:16176 VST.veric.lift LiftNotation :::'`('_x_')' not
R16186:16232 VST.veric.lift LiftNotation :::'`('_x_')' not
R16177:16183 VST.veric.mpred <> eval_id def
R16185:16185 VST.floyd.assert_lemmas <> i:207 var
R16189:16198 VST.veric.SeparationLogic <> make_args' def
R16212:16224 VST.veric.expr <> eval_exprlist def
R16229:16230 VST.floyd.assert_lemmas <> el:215 var
R16226:16227 VST.floyd.assert_lemmas <> tl:213 var
R16200:16200 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16205:16206 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16209:16209 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16201:16204 VST.floyd.assert_lemmas <> fsig:209 var
R16207:16208 VST.floyd.assert_lemmas <> t0:210 var
R16022:16023 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R16021:16021 VST.floyd.assert_lemmas <> i:207 var
R16024:16024 VST.floyd.assert_lemmas <> j:208 var
R16266:16281 VST.floyd.assert_lemmas <> compose_backtick thm
R16266:16281 VST.floyd.assert_lemmas <> compose_backtick thm
R16266:16281 VST.floyd.assert_lemmas <> compose_backtick thm
R16301:16320 VST.floyd.assert_lemmas <> eval_make_args_other thm
R16301:16320 VST.floyd.assert_lemmas <> eval_make_args_other thm
R16349:16375 VST.floyd.assert_lemmas <> compose_eval_make_args_same thm
R16399:16426 VST.floyd.assert_lemmas <> compose_eval_make_args_other thm
prf 16489:16503 <> substopt_unfold
binder 16506:16506 <> A:216
binder 16517:16518 <> id:217
binder 16520:16520 <> v:218
R16546:16548 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16524:16531 VST.veric.SeparationLogic <> substopt def
R16545:16545 VST.floyd.assert_lemmas <> v:218 var
R16536:16539 Coq.Init.Datatypes <> Some constr
R16541:16542 VST.floyd.assert_lemmas <> id:217 var
R16533:16533 VST.floyd.assert_lemmas <> A:216 var
R16550:16554 VST.veric.seplog <> subst def
R16561:16561 VST.floyd.assert_lemmas <> v:218 var
R16558:16559 VST.floyd.assert_lemmas <> id:217 var
R16556:16556 VST.floyd.assert_lemmas <> A:216 var
prf 16595:16613 <> substopt_unfold_nil
binder 16616:16616 <> A:219
binder 16627:16627 <> v:220
R16641:16644 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16645:16645 VST.floyd.assert_lemmas <> A:219 var
R16634:16640 VST.veric.mpred <> environ ind
binder 16630:16630 <> P:221
R16666:16668 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16649:16656 VST.veric.SeparationLogic <> substopt def
R16665:16665 VST.floyd.assert_lemmas <> P:221 var
R16663:16663 VST.floyd.assert_lemmas <> v:220 var
R16658:16661 Coq.Init.Datatypes <> None constr
R16669:16669 VST.floyd.assert_lemmas <> P:221 var
R16711:16725 VST.floyd.assert_lemmas <> substopt_unfold thm
R16728:16746 VST.floyd.assert_lemmas <> substopt_unfold_nil thm
prf 16764:16780 <> get_result_unfold
binder 16790:16791 <> id:222
R16814:16816 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16794:16803 VST.veric.SeparationLogic <> get_result def
R16806:16809 Coq.Init.Datatypes <> Some constr
R16811:16812 VST.floyd.assert_lemmas <> id:222 var
R16817:16827 VST.veric.SeparationLogic <> get_result1 def
R16829:16830 VST.floyd.assert_lemmas <> id:222 var
prf 16864:16878 <> get_result_None
R16896:16898 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16881:16890 VST.veric.SeparationLogic <> get_result def
R16892:16895 Coq.Init.Datatypes <> None constr
R16899:16910 VST.veric.SeparationLogic <> globals_only def
R16951:16967 VST.floyd.assert_lemmas <> get_result_unfold thm
R16969:16983 VST.floyd.assert_lemmas <> get_result_None thm
prf 17000:17016 <> elim_globals_only
binder 17028:17032 <> Delta:223
binder 17034:17034 <> g:224
binder 17036:17036 <> i:225
binder 17038:17038 <> t:226
binder 17040:17042 <> rho:227
R17134:17139 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17171:17173 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17140:17147 VST.veric.expr <> eval_var def
R17154:17165 VST.veric.SeparationLogic <> globals_only def
R17167:17169 VST.floyd.assert_lemmas <> rho:227 var
R17151:17151 VST.floyd.assert_lemmas <> t:226 var
R17149:17149 VST.floyd.assert_lemmas <> i:225 var
R17174:17181 VST.veric.expr <> eval_var def
R17187:17189 VST.floyd.assert_lemmas <> rho:227 var
R17185:17185 VST.floyd.assert_lemmas <> t:226 var
R17183:17183 VST.floyd.assert_lemmas <> i:225 var
R17067:17070 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17047:17056 VST.veric.SeparationLogic <> tc_environ def
R17064:17066 VST.floyd.assert_lemmas <> rho:227 var
R17058:17062 VST.floyd.assert_lemmas <> Delta:223 var
R17099:17102 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17092:17094 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17071:17071 compcert.lib.Maps <> :::x_'!'_x not
R17087:17090 compcert.lib.Maps <> :::x_'!'_x not
R17091:17091 VST.floyd.assert_lemmas <> i:225 var
R17072:17080 VST.veric.seplog <> var_types def
R17082:17086 VST.floyd.assert_lemmas <> Delta:223 var
R17095:17098 Coq.Init.Datatypes <> None constr
R17125:17127 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17103:17103 compcert.lib.Maps <> :::x_'!'_x not
R17120:17123 compcert.lib.Maps <> :::x_'!'_x not
R17124:17124 VST.floyd.assert_lemmas <> i:225 var
R17104:17113 VST.veric.seplog <> glob_types def
R17115:17119 VST.floyd.assert_lemmas <> Delta:223 var
R17128:17131 Coq.Init.Datatypes <> Some constr
R17133:17133 VST.floyd.assert_lemmas <> g:224 var
R17241:17248 VST.veric.expr <> eval_var def
R17251:17262 VST.veric.SeparationLogic <> globals_only def
R17363:17379 VST.floyd.assert_lemmas <> elim_globals_only thm
prf 17443:17460 <> elim_globals_only'
R17474:17478 VST.veric.mpred <> mpred def
binder 17471:17471 <> a:228
R17482:17482 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17544:17547 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17484:17488 VST.veric.lift <> liftx def
R17532:17543 VST.veric.SeparationLogic <> globals_only def
R17528:17528 VST.veric.lift LiftNotation :::'`'_x not
R17529:17529 VST.floyd.assert_lemmas <> a:228 var
R17491:17496 VST.veric.lift <> Tarrow canonstruc
R17507:17517 VST.veric.mpred <> LiftEnviron canonstruc
R17519:17523 VST.veric.mpred <> mpred def
R17498:17504 VST.veric.mpred <> environ ind
R17548:17548 VST.veric.lift LiftNotation :::'`'_x not
R17549:17549 VST.floyd.assert_lemmas <> a:228 var
R17590:17607 VST.floyd.assert_lemmas <> elim_globals_only' thm
prf 17624:17639 <> globvar_eval_var
binder 17651:17655 <> Delta:229
binder 17657:17659 <> rho:230
binder 17661:17662 <> id:231
binder 17664:17664 <> t:232
R17693:17701 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17731:17739 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17773:17781 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17782:17788 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R17790:17792 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 17789:17789 <> b:233
R17831:17846 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17810:17812 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17793:17800 VST.veric.expr <> eval_var def
R17807:17809 VST.floyd.assert_lemmas <> rho:230 var
R17805:17805 VST.floyd.assert_lemmas <> t:232 var
R17802:17803 VST.floyd.assert_lemmas <> id:231 var
R17813:17816 compcert.common.Values <> Vptr constr
R17820:17830 compcert.lib.Integers Ptrofs zero def
R17818:17818 VST.floyd.assert_lemmas <> b:233 var
R17869:17871 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17847:17853 VST.veric.mpred Map get def
R17867:17868 VST.floyd.assert_lemmas <> id:231 var
R17856:17860 VST.veric.mpred <> ge_of def
R17862:17864 VST.floyd.assert_lemmas <> rho:230 var
R17872:17875 Coq.Init.Datatypes <> Some constr
R17877:17877 VST.floyd.assert_lemmas <> b:233 var
R17763:17765 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17740:17740 compcert.lib.Maps <> :::x_'!'_x not
R17757:17760 compcert.lib.Maps <> :::x_'!'_x not
R17761:17762 VST.floyd.assert_lemmas <> id:231 var
R17741:17750 VST.veric.seplog <> glob_types def
R17752:17756 VST.floyd.assert_lemmas <> Delta:229 var
R17766:17769 Coq.Init.Datatypes <> Some constr
R17772:17772 VST.floyd.assert_lemmas <> t:232 var
R17724:17726 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17702:17702 compcert.lib.Maps <> :::x_'!'_x not
R17718:17721 compcert.lib.Maps <> :::x_'!'_x not
R17722:17723 VST.floyd.assert_lemmas <> id:231 var
R17703:17711 VST.veric.seplog <> var_types def
R17713:17717 VST.floyd.assert_lemmas <> Delta:229 var
R17727:17730 Coq.Init.Datatypes <> None constr
R17673:17682 VST.veric.SeparationLogic <> tc_environ def
R17690:17692 VST.floyd.assert_lemmas <> rho:230 var
R17684:17688 VST.floyd.assert_lemmas <> Delta:229 var
R17902:17909 VST.veric.expr <> eval_var def
prf 18007:18026 <> globvars2pred_unfold
binder 18036:18037 <> gv:234
binder 18039:18040 <> vl:235
binder 18042:18044 <> rho:236
R18074:18081 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18051:18063 VST.veric.SeparationLogic <> globvars2pred def
R18071:18073 VST.floyd.assert_lemmas <> rho:236 var
R18068:18069 VST.floyd.assert_lemmas <> vl:235 var
R18065:18066 VST.floyd.assert_lemmas <> gv:234 var
R18082:18085 VST.msl.seplog <> andp meth
R18127:18136 Coq.Lists.List <> fold_right def
R18150:18152 Coq.Lists.List <> map def
R18191:18192 VST.floyd.assert_lemmas <> vl:235 var
binder 18159:18161 <> idv:237
R18166:18177 VST.veric.SeparationLogic <> globvar2pred def
R18186:18188 VST.floyd.assert_lemmas <> rho:236 var
R18182:18184 VST.floyd.assert_lemmas <> idv:237 var
R18179:18180 VST.floyd.assert_lemmas <> gv:234 var
R18145:18147 VST.msl.seplog <> emp meth
R18138:18143 VST.msl.seplog <> sepcon meth
R18088:18091 VST.msl.seplog <> prop meth
R18096:18098 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18094:18095 VST.floyd.assert_lemmas <> gv:234 var
R18099:18112 VST.veric.SeparationLogic <> globals_of_env def
R18114:18116 VST.floyd.assert_lemmas <> rho:236 var
R18219:18231 VST.veric.SeparationLogic <> globvars2pred def
R18243:18247 VST.veric.mpred <> lift2 def
R18581:18600 VST.floyd.assert_lemmas <> globvars2pred_unfold thm
R18624:18634 VST.msl.log_normalize <> exp_trivial thm
prf 18651:18664 <> eval_var_isptr
binder 18676:18680 <> Delta:238
binder 18682:18682 <> t:239
binder 18684:18684 <> i:240
binder 18686:18688 <> rho:241
R18723:18738 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18739:18739 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18860:18876 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18877:18881 VST.veric.val_lemmas <> isptr def
R18884:18891 VST.veric.expr <> eval_var def
R18897:18899 VST.floyd.assert_lemmas <> rho:241 var
R18895:18895 VST.floyd.assert_lemmas <> t:239 var
R18893:18893 VST.floyd.assert_lemmas <> i:240 var
R18770:18786 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R18761:18763 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18740:18740 compcert.lib.Maps <> :::x_'!'_x not
R18756:18759 compcert.lib.Maps <> :::x_'!'_x not
R18760:18760 VST.floyd.assert_lemmas <> i:240 var
R18741:18749 VST.veric.seplog <> var_types def
R18751:18755 VST.floyd.assert_lemmas <> Delta:238 var
R18764:18767 Coq.Init.Datatypes <> Some constr
R18769:18769 VST.floyd.assert_lemmas <> t:239 var
R18813:18828 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R18806:18808 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18787:18787 compcert.lib.Maps <> :::x_'!'_x not
R18803:18804 compcert.lib.Maps <> :::x_'!'_x not
R18805:18805 VST.floyd.assert_lemmas <> i:240 var
R18788:18796 VST.veric.seplog <> var_types def
R18798:18802 VST.floyd.assert_lemmas <> Delta:238 var
R18809:18812 Coq.Init.Datatypes <> None constr
R18851:18853 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18829:18829 compcert.lib.Maps <> :::x_'!'_x not
R18846:18849 compcert.lib.Maps <> :::x_'!'_x not
R18850:18850 VST.floyd.assert_lemmas <> i:240 var
R18830:18839 VST.veric.seplog <> glob_types def
R18841:18845 VST.floyd.assert_lemmas <> Delta:238 var
R18854:18857 Coq.Init.Datatypes <> Some constr
R18859:18859 VST.floyd.assert_lemmas <> t:239 var
R18703:18712 VST.veric.SeparationLogic <> tc_environ def
R18720:18722 VST.floyd.assert_lemmas <> rho:241 var
R18714:18718 VST.floyd.assert_lemmas <> Delta:238 var
R18927:18931 VST.veric.val_lemmas <> isptr def
R18934:18941 VST.veric.expr <> eval_var def
R19034:19046 VST.veric.Cop2 <> eqb_type_refl thm
R19034:19046 VST.veric.Cop2 <> eqb_type_refl thm
R19034:19046 VST.veric.Cop2 <> eqb_type_refl thm
prf 19155:19166 <> ENTAIL_trans
binder 19178:19182 <> Delta:242
binder 19184:19184 <> P:243
binder 19186:19186 <> Q:244
binder 19188:19188 <> R:245
R19228:19233 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19269:19274 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19304:19308 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R19299:19302 VST.msl.seplog <> ::logic:x_'&&'_x not
R19275:19279 VST.veric.SeparationLogic <> local def
R19282:19291 VST.veric.SeparationLogic <> tc_environ def
R19293:19297 VST.floyd.assert_lemmas <> Delta:242 var
R19303:19303 VST.floyd.assert_lemmas <> P:243 var
R19309:19309 VST.floyd.assert_lemmas <> R:245 var
R19263:19267 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R19258:19261 VST.msl.seplog <> ::logic:x_'&&'_x not
R19234:19238 VST.veric.SeparationLogic <> local def
R19241:19250 VST.veric.SeparationLogic <> tc_environ def
R19252:19256 VST.floyd.assert_lemmas <> Delta:242 var
R19262:19262 VST.floyd.assert_lemmas <> Q:244 var
R19268:19268 VST.floyd.assert_lemmas <> R:245 var
R19222:19226 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R19217:19220 VST.msl.seplog <> ::logic:x_'&&'_x not
R19193:19197 VST.veric.SeparationLogic <> local def
R19200:19209 VST.veric.SeparationLogic <> tc_environ def
R19211:19215 VST.floyd.assert_lemmas <> Delta:242 var
R19221:19221 VST.floyd.assert_lemmas <> P:243 var
R19227:19227 VST.floyd.assert_lemmas <> Q:244 var
R19334:19346 VST.msl.seplog <> derives_trans meth
R19334:19346 VST.msl.seplog <> derives_trans meth
R19355:19364 VST.msl.seplog <> andp_right meth
R19355:19364 VST.msl.seplog <> andp_right meth
R19387:19396 VST.msl.seplog <> andp_left1 meth
R19405:19416 VST.msl.seplog <> derives_refl meth
R19387:19396 VST.msl.seplog <> andp_left1 meth
R19405:19416 VST.msl.seplog <> derives_refl meth
prf 19437:19447 <> ENTAIL_refl
binder 19459:19463 <> Delta:246
binder 19465:19465 <> P:247
R19499:19503 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R19494:19497 VST.msl.seplog <> ::logic:x_'&&'_x not
R19470:19474 VST.veric.SeparationLogic <> local def
R19477:19486 VST.veric.SeparationLogic <> tc_environ def
R19488:19492 VST.floyd.assert_lemmas <> Delta:246 var
R19498:19498 VST.floyd.assert_lemmas <> P:247 var
R19504:19504 VST.floyd.assert_lemmas <> P:247 var
R19528:19537 VST.msl.seplog <> andp_left2 meth
R19540:19551 VST.msl.seplog <> derives_refl meth
R19528:19537 VST.msl.seplog <> andp_left2 meth
R19540:19551 VST.msl.seplog <> derives_refl meth
prf 19566:19582 <> corable_andp_bupd
R19605:19608 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19609:19613 VST.veric.mpred <> mpred def
R19598:19604 VST.veric.mpred <> environ ind
binder 19593:19593 <> P:248
binder 19595:19595 <> Q:249
R19628:19633 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19634:19634 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R19646:19651 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R19636:19639 VST.msl.seplog <> ::logic:x_'&&'_x not
R19635:19635 VST.floyd.assert_lemmas <> P:248 var
R19640:19644 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R19645:19645 VST.floyd.assert_lemmas <> Q:249 var
R19652:19656 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R19658:19661 VST.msl.seplog <> ::logic:x_'&&'_x not
R19657:19657 VST.floyd.assert_lemmas <> P:248 var
R19662:19662 VST.floyd.assert_lemmas <> Q:249 var
R19619:19625 VST.msl.seplog <> corable meth
R19627:19627 VST.floyd.assert_lemmas <> P:248 var
R19694:19702 VST.msl.log_normalize <> andp_comm thm
R19694:19702 VST.msl.log_normalize <> andp_comm thm
R19694:19702 VST.msl.log_normalize <> andp_comm thm
R19694:19702 VST.msl.log_normalize <> andp_comm thm
R19694:19702 VST.msl.log_normalize <> andp_comm thm
R19716:19733 VST.msl.log_normalize <> bupd_andp2_corable thm
R19716:19733 VST.msl.log_normalize <> bupd_andp2_corable thm
prf 19754:19768 <> local_andp_bupd
binder 19778:19778 <> P:250
binder 19780:19780 <> Q:251
R19785:19785 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R19803:19808 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R19793:19796 VST.msl.seplog <> ::logic:x_'&&'_x not
R19786:19790 VST.veric.SeparationLogic <> local def
R19792:19792 VST.floyd.assert_lemmas <> P:250 var
R19797:19801 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R19802:19802 VST.floyd.assert_lemmas <> Q:251 var
R19809:19814 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R19827:19827 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R19822:19825 VST.msl.seplog <> ::logic:x_'&&'_x not
R19815:19819 VST.veric.SeparationLogic <> local def
R19821:19821 VST.floyd.assert_lemmas <> P:250 var
R19826:19826 VST.floyd.assert_lemmas <> Q:251 var
R19859:19867 VST.msl.log_normalize <> andp_comm thm
R19870:19874 VST.veric.SeparationLogic <> local def
R19859:19867 VST.msl.log_normalize <> andp_comm thm
R19870:19874 VST.veric.SeparationLogic <> local def
R19859:19867 VST.msl.log_normalize <> andp_comm thm
R19870:19874 VST.veric.SeparationLogic <> local def
R19859:19867 VST.msl.log_normalize <> andp_comm thm
R19870:19874 VST.veric.SeparationLogic <> local def
R19859:19867 VST.msl.log_normalize <> andp_comm thm
R19870:19874 VST.veric.SeparationLogic <> local def
R19889:19906 VST.msl.log_normalize <> bupd_andp2_corable thm
R19889:19906 VST.msl.log_normalize <> bupd_andp2_corable thm
R19924:19935 VST.msl.seplog <> corable_prop meth
R19924:19935 VST.msl.seplog <> corable_prop meth
prf 19950:19964 <> bupd_andp_local
binder 19974:19974 <> P:252
binder 19976:19976 <> Q:253
R20000:20004 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R19981:19981 VST.msl.seplog <> ::logic:x_'&&'_x not
R19988:19992 VST.msl.seplog <> ::logic:x_'&&'_x not
R19982:19986 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R19987:19987 VST.floyd.assert_lemmas <> P:252 var
R19993:19997 VST.veric.SeparationLogic <> local def
R19999:19999 VST.floyd.assert_lemmas <> Q:253 var
R20005:20010 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R20023:20023 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R20012:20015 VST.msl.seplog <> ::logic:x_'&&'_x not
R20011:20011 VST.floyd.assert_lemmas <> P:252 var
R20016:20020 VST.veric.SeparationLogic <> local def
R20022:20022 VST.floyd.assert_lemmas <> Q:253 var
R20051:20068 VST.msl.log_normalize <> bupd_andp2_corable thm
R20051:20068 VST.msl.log_normalize <> bupd_andp2_corable thm
R20086:20097 VST.msl.seplog <> corable_prop meth
R20086:20097 VST.msl.seplog <> corable_prop meth
prf 20112:20129 <> derives_bupd_trans
binder 20139:20140 <> TC:254
binder 20142:20142 <> P:255
binder 20144:20144 <> Q:256
binder 20146:20146 <> R:257
R20175:20180 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20205:20210 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20224:20228 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R20219:20222 VST.msl.seplog <> ::logic:x_'&&'_x not
R20211:20215 VST.veric.SeparationLogic <> local def
R20217:20218 VST.floyd.assert_lemmas <> TC:254 var
R20223:20223 VST.floyd.assert_lemmas <> P:255 var
R20229:20233 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R20234:20234 VST.floyd.assert_lemmas <> R:257 var
R20194:20198 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R20189:20192 VST.msl.seplog <> ::logic:x_'&&'_x not
R20181:20185 VST.veric.SeparationLogic <> local def
R20187:20188 VST.floyd.assert_lemmas <> TC:254 var
R20193:20193 VST.floyd.assert_lemmas <> Q:256 var
R20199:20203 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R20204:20204 VST.floyd.assert_lemmas <> R:257 var
R20164:20168 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R20159:20162 VST.msl.seplog <> ::logic:x_'&&'_x not
R20151:20155 VST.veric.SeparationLogic <> local def
R20157:20158 VST.floyd.assert_lemmas <> TC:254 var
R20163:20163 VST.floyd.assert_lemmas <> P:255 var
R20169:20173 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R20174:20174 VST.floyd.assert_lemmas <> Q:256 var
R20265:20272 VST.msl.log_normalize <> add_andp thm
R20265:20272 VST.msl.log_normalize <> add_andp thm
R20265:20272 VST.msl.log_normalize <> add_andp thm
R20293:20301 VST.msl.log_normalize <> andp_comm thm
R20309:20318 VST.msl.log_normalize <> andp_assoc thm
R20327:20336 VST.msl.seplog <> andp_left2 meth
R20293:20301 VST.msl.log_normalize <> andp_comm thm
R20293:20301 VST.msl.log_normalize <> andp_comm thm
R20309:20318 VST.msl.log_normalize <> andp_assoc thm
R20309:20318 VST.msl.log_normalize <> andp_assoc thm
R20327:20336 VST.msl.seplog <> andp_left2 meth
R20348:20360 VST.msl.seplog <> derives_trans meth
R20370:20384 VST.floyd.assert_lemmas <> local_andp_bupd thm
R20348:20360 VST.msl.seplog <> derives_trans meth
R20370:20384 VST.floyd.assert_lemmas <> local_andp_bupd thm
R20401:20408 VST.msl.log_normalize <> add_andp thm
R20401:20408 VST.msl.log_normalize <> add_andp thm
R20401:20408 VST.msl.log_normalize <> add_andp thm
R20430:20438 VST.msl.log_normalize <> andp_comm thm
R20446:20455 VST.msl.log_normalize <> andp_assoc thm
R20465:20477 VST.msl.seplog <> derives_trans meth
R20487:20495 VST.msl.ghost_seplog <> bupd_mono meth
R20498:20507 VST.msl.seplog <> andp_left2 meth
R20510:20521 VST.msl.seplog <> derives_refl meth
R20430:20438 VST.msl.log_normalize <> andp_comm thm
R20430:20438 VST.msl.log_normalize <> andp_comm thm
R20446:20455 VST.msl.log_normalize <> andp_assoc thm
R20446:20455 VST.msl.log_normalize <> andp_assoc thm
R20465:20477 VST.msl.seplog <> derives_trans meth
R20487:20495 VST.msl.ghost_seplog <> bupd_mono meth
R20498:20507 VST.msl.seplog <> andp_left2 meth
R20510:20521 VST.msl.seplog <> derives_refl meth
R20536:20548 VST.msl.seplog <> derives_trans meth
R20558:20566 VST.msl.ghost_seplog <> bupd_mono meth
R20568:20582 VST.floyd.assert_lemmas <> local_andp_bupd thm
R20536:20548 VST.msl.seplog <> derives_trans meth
R20558:20566 VST.msl.ghost_seplog <> bupd_mono meth
R20568:20582 VST.floyd.assert_lemmas <> local_andp_bupd thm
R20597:20609 VST.msl.seplog <> derives_trans meth
R20619:20628 VST.msl.ghost_seplog <> bupd_trans meth
R20597:20609 VST.msl.seplog <> derives_trans meth
R20619:20628 VST.msl.ghost_seplog <> bupd_trans meth
R20641:20649 VST.msl.ghost_seplog <> bupd_mono meth
R20641:20649 VST.msl.ghost_seplog <> bupd_mono meth
prf 20676:20692 <> derives_bupd_refl
binder 20702:20703 <> TC:258
binder 20705:20705 <> P:259
R20723:20727 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R20718:20721 VST.msl.seplog <> ::logic:x_'&&'_x not
R20710:20714 VST.veric.SeparationLogic <> local def
R20716:20717 VST.floyd.assert_lemmas <> TC:258 var
R20722:20722 VST.floyd.assert_lemmas <> P:259 var
R20728:20732 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R20733:20733 VST.floyd.assert_lemmas <> P:259 var
R20757:20766 VST.msl.seplog <> andp_left2 meth
R20769:20778 VST.msl.ghost_seplog <> bupd_intro meth
R20757:20766 VST.msl.seplog <> andp_left2 meth
R20769:20778 VST.msl.ghost_seplog <> bupd_intro meth
prf 20793:20810 <> derives_bupd0_refl
binder 20820:20821 <> TC:260
binder 20823:20823 <> P:261
R20841:20845 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R20836:20839 VST.msl.seplog <> ::logic:x_'&&'_x not
R20828:20832 VST.veric.SeparationLogic <> local def
R20834:20835 VST.floyd.assert_lemmas <> TC:260 var
R20840:20840 VST.floyd.assert_lemmas <> P:261 var
R20846:20851 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R20864:20864 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R20852:20852 VST.msl.seplog <> ::logic:x_'||'_x not
R20858:20862 VST.msl.seplog <> ::logic:x_'||'_x not
R20853:20855 VST.msl.seplog <> ::logic:'|>'_x not
R20856:20857 VST.msl.seplog <> FF meth
R20863:20863 VST.floyd.assert_lemmas <> P:261 var
R20889:20901 VST.msl.seplog <> derives_trans meth
R20910:20926 VST.floyd.assert_lemmas <> derives_bupd_refl thm
R20936:20944 VST.msl.ghost_seplog <> bupd_mono meth
R20947:20956 VST.msl.seplog <> orp_right2 meth
R20959:20970 VST.msl.seplog <> derives_refl meth
R20889:20901 VST.msl.seplog <> derives_trans meth
R20910:20926 VST.floyd.assert_lemmas <> derives_bupd_refl thm
R20936:20944 VST.msl.ghost_seplog <> bupd_mono meth
R20947:20956 VST.msl.seplog <> orp_right2 meth
R20959:20970 VST.msl.seplog <> derives_refl meth
prf 20985:21003 <> derives_bupd0_trans
binder 21013:21014 <> TC:262
binder 21016:21016 <> P:263
binder 21018:21018 <> Q:264
binder 21020:21020 <> R:265
R21062:21067 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21105:21110 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21124:21128 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R21119:21122 VST.msl.seplog <> ::logic:x_'&&'_x not
R21111:21115 VST.veric.SeparationLogic <> local def
R21117:21118 VST.floyd.assert_lemmas <> TC:262 var
R21123:21123 VST.floyd.assert_lemmas <> P:263 var
R21129:21134 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R21147:21147 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R21135:21135 VST.msl.seplog <> ::logic:x_'||'_x not
R21141:21145 VST.msl.seplog <> ::logic:x_'||'_x not
R21136:21138 VST.msl.seplog <> ::logic:'|>'_x not
R21139:21140 VST.msl.seplog <> FF meth
R21146:21146 VST.floyd.assert_lemmas <> R:265 var
R21081:21085 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R21076:21079 VST.msl.seplog <> ::logic:x_'&&'_x not
R21068:21072 VST.veric.SeparationLogic <> local def
R21074:21075 VST.floyd.assert_lemmas <> TC:262 var
R21080:21080 VST.floyd.assert_lemmas <> Q:264 var
R21086:21091 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R21104:21104 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R21092:21092 VST.msl.seplog <> ::logic:x_'||'_x not
R21098:21102 VST.msl.seplog <> ::logic:x_'||'_x not
R21093:21095 VST.msl.seplog <> ::logic:'|>'_x not
R21096:21097 VST.msl.seplog <> FF meth
R21103:21103 VST.floyd.assert_lemmas <> R:265 var
R21038:21042 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R21033:21036 VST.msl.seplog <> ::logic:x_'&&'_x not
R21025:21029 VST.veric.SeparationLogic <> local def
R21031:21032 VST.floyd.assert_lemmas <> TC:262 var
R21037:21037 VST.floyd.assert_lemmas <> P:263 var
R21043:21048 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R21061:21061 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R21049:21049 VST.msl.seplog <> ::logic:x_'||'_x not
R21055:21059 VST.msl.seplog <> ::logic:x_'||'_x not
R21050:21052 VST.msl.seplog <> ::logic:'|>'_x not
R21053:21054 VST.msl.seplog <> FF meth
R21060:21060 VST.floyd.assert_lemmas <> Q:264 var
R21176:21193 VST.floyd.assert_lemmas <> derives_bupd_trans thm
R21176:21193 VST.floyd.assert_lemmas <> derives_bupd_trans thm
R21219:21227 VST.msl.log_normalize <> andp_comm thm
R21230:21245 VST.msl.log_normalize <> distrib_orp_andp thm
R21250:21258 VST.msl.log_normalize <> andp_comm thm
R21263:21267 VST.veric.SeparationLogic <> local def
R21219:21227 VST.msl.log_normalize <> andp_comm thm
R21219:21227 VST.msl.log_normalize <> andp_comm thm
R21230:21245 VST.msl.log_normalize <> distrib_orp_andp thm
R21230:21245 VST.msl.log_normalize <> distrib_orp_andp thm
R21250:21258 VST.msl.log_normalize <> andp_comm thm
R21263:21267 VST.veric.SeparationLogic <> local def
R21250:21258 VST.msl.log_normalize <> andp_comm thm
R21263:21267 VST.veric.SeparationLogic <> local def
R21250:21258 VST.msl.log_normalize <> andp_comm thm
R21263:21267 VST.veric.SeparationLogic <> local def
R21250:21258 VST.msl.log_normalize <> andp_comm thm
R21263:21267 VST.veric.SeparationLogic <> local def
R21282:21289 VST.msl.seplog <> orp_left meth
R21282:21289 VST.msl.seplog <> orp_left meth
R21303:21315 VST.msl.seplog <> derives_trans meth
R21327:21336 VST.msl.ghost_seplog <> bupd_intro meth
R21303:21315 VST.msl.seplog <> derives_trans meth
R21327:21336 VST.msl.ghost_seplog <> bupd_intro meth
R21350:21359 VST.msl.seplog <> orp_right1 meth
R21362:21371 VST.msl.seplog <> andp_left2 meth
R21374:21385 VST.msl.seplog <> derives_refl meth
R21350:21359 VST.msl.seplog <> orp_right1 meth
R21362:21371 VST.msl.seplog <> andp_left2 meth
R21374:21385 VST.msl.seplog <> derives_refl meth
R21399:21416 VST.floyd.assert_lemmas <> derives_bupd_trans thm
R21399:21416 VST.floyd.assert_lemmas <> derives_bupd_trans thm
R21445:21453 VST.msl.log_normalize <> andp_comm thm
R21456:21471 VST.msl.log_normalize <> distrib_orp_andp thm
R21476:21484 VST.msl.log_normalize <> andp_comm thm
R21489:21493 VST.veric.SeparationLogic <> local def
R21445:21453 VST.msl.log_normalize <> andp_comm thm
R21445:21453 VST.msl.log_normalize <> andp_comm thm
R21456:21471 VST.msl.log_normalize <> distrib_orp_andp thm
R21456:21471 VST.msl.log_normalize <> distrib_orp_andp thm
R21476:21484 VST.msl.log_normalize <> andp_comm thm
R21489:21493 VST.veric.SeparationLogic <> local def
R21476:21484 VST.msl.log_normalize <> andp_comm thm
R21489:21493 VST.veric.SeparationLogic <> local def
R21476:21484 VST.msl.log_normalize <> andp_comm thm
R21489:21493 VST.veric.SeparationLogic <> local def
R21476:21484 VST.msl.log_normalize <> andp_comm thm
R21489:21493 VST.veric.SeparationLogic <> local def
R21510:21517 VST.msl.seplog <> orp_left meth
R21510:21517 VST.msl.seplog <> orp_left meth
R21533:21545 VST.msl.seplog <> derives_trans meth
R21557:21566 VST.msl.ghost_seplog <> bupd_intro meth
R21533:21545 VST.msl.seplog <> derives_trans meth
R21557:21566 VST.msl.ghost_seplog <> bupd_intro meth
R21582:21591 VST.msl.seplog <> orp_right1 meth
R21594:21603 VST.msl.seplog <> andp_left2 meth
R21606:21617 VST.msl.seplog <> derives_refl meth
R21582:21591 VST.msl.seplog <> orp_right1 meth
R21594:21603 VST.msl.seplog <> andp_left2 meth
R21606:21617 VST.msl.seplog <> derives_refl meth
R21632:21649 VST.floyd.assert_lemmas <> derives_bupd0_refl thm
R21632:21649 VST.floyd.assert_lemmas <> derives_bupd0_refl thm
prf 21664:21680 <> derives_full_refl
binder 21690:21694 <> Delta:266
binder 21696:21696 <> P:267
R21753:21757 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R21725:21729 VST.msl.seplog <> ::logic:x_'&&'_x not
R21752:21752 VST.msl.seplog <> ::logic:x_'&&'_x not
R21701:21705 VST.veric.SeparationLogic <> local def
R21708:21717 VST.veric.SeparationLogic <> tc_environ def
R21719:21723 VST.floyd.assert_lemmas <> Delta:266 var
R21747:21750 VST.msl.seplog <> ::logic:x_'&&'_x not
R21730:21740 VST.veric.SeparationLogic <> allp_fun_id def
R21742:21746 VST.floyd.assert_lemmas <> Delta:266 var
R21751:21751 VST.floyd.assert_lemmas <> P:267 var
R21758:21763 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R21776:21776 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R21764:21764 VST.msl.seplog <> ::logic:x_'||'_x not
R21770:21774 VST.msl.seplog <> ::logic:x_'||'_x not
R21765:21767 VST.msl.seplog <> ::logic:'|>'_x not
R21768:21769 VST.msl.seplog <> FF meth
R21775:21775 VST.floyd.assert_lemmas <> P:267 var
R21802:21814 VST.msl.seplog <> derives_trans meth
R21825:21842 VST.floyd.assert_lemmas <> derives_bupd0_refl thm
R21845:21854 VST.veric.SeparationLogic <> tc_environ def
R21802:21814 VST.msl.seplog <> derives_trans meth
R21825:21842 VST.floyd.assert_lemmas <> derives_bupd0_refl thm
R21845:21854 VST.veric.SeparationLogic <> tc_environ def
prf 21892:21909 <> derives_full_trans
binder 21919:21923 <> Delta:268
binder 21925:21925 <> P:269
binder 21927:21927 <> Q:270
binder 21929:21929 <> R:271
R22010:22015 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22092:22097 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22150:22154 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R22122:22126 VST.msl.seplog <> ::logic:x_'&&'_x not
R22149:22149 VST.msl.seplog <> ::logic:x_'&&'_x not
R22098:22102 VST.veric.SeparationLogic <> local def
R22105:22114 VST.veric.SeparationLogic <> tc_environ def
R22116:22120 VST.floyd.assert_lemmas <> Delta:268 var
R22144:22147 VST.msl.seplog <> ::logic:x_'&&'_x not
R22127:22137 VST.veric.SeparationLogic <> allp_fun_id def
R22139:22143 VST.floyd.assert_lemmas <> Delta:268 var
R22148:22148 VST.floyd.assert_lemmas <> P:269 var
R22155:22160 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R22173:22173 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R22161:22161 VST.msl.seplog <> ::logic:x_'||'_x not
R22167:22171 VST.msl.seplog <> ::logic:x_'||'_x not
R22162:22164 VST.msl.seplog <> ::logic:'|>'_x not
R22165:22166 VST.msl.seplog <> FF meth
R22172:22172 VST.floyd.assert_lemmas <> R:271 var
R22068:22072 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R22040:22044 VST.msl.seplog <> ::logic:x_'&&'_x not
R22067:22067 VST.msl.seplog <> ::logic:x_'&&'_x not
R22016:22020 VST.veric.SeparationLogic <> local def
R22023:22032 VST.veric.SeparationLogic <> tc_environ def
R22034:22038 VST.floyd.assert_lemmas <> Delta:268 var
R22062:22065 VST.msl.seplog <> ::logic:x_'&&'_x not
R22045:22055 VST.veric.SeparationLogic <> allp_fun_id def
R22057:22061 VST.floyd.assert_lemmas <> Delta:268 var
R22066:22066 VST.floyd.assert_lemmas <> Q:270 var
R22073:22078 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R22091:22091 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R22079:22079 VST.msl.seplog <> ::logic:x_'||'_x not
R22085:22089 VST.msl.seplog <> ::logic:x_'||'_x not
R22080:22082 VST.msl.seplog <> ::logic:'|>'_x not
R22083:22084 VST.msl.seplog <> FF meth
R22090:22090 VST.floyd.assert_lemmas <> R:271 var
R21986:21990 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R21958:21962 VST.msl.seplog <> ::logic:x_'&&'_x not
R21985:21985 VST.msl.seplog <> ::logic:x_'&&'_x not
R21934:21938 VST.veric.SeparationLogic <> local def
R21941:21950 VST.veric.SeparationLogic <> tc_environ def
R21952:21956 VST.floyd.assert_lemmas <> Delta:268 var
R21980:21983 VST.msl.seplog <> ::logic:x_'&&'_x not
R21963:21973 VST.veric.SeparationLogic <> allp_fun_id def
R21975:21979 VST.floyd.assert_lemmas <> Delta:268 var
R21984:21984 VST.floyd.assert_lemmas <> P:269 var
R21991:21996 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R22009:22009 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R21997:21997 VST.msl.seplog <> ::logic:x_'||'_x not
R22003:22007 VST.msl.seplog <> ::logic:x_'||'_x not
R21998:22000 VST.msl.seplog <> ::logic:'|>'_x not
R22001:22002 VST.msl.seplog <> FF meth
R22008:22008 VST.floyd.assert_lemmas <> Q:270 var
R22202:22220 VST.floyd.assert_lemmas <> derives_bupd0_trans thm
R22202:22220 VST.floyd.assert_lemmas <> derives_bupd0_trans thm
R22248:22255 VST.msl.log_normalize <> add_andp thm
R22248:22255 VST.msl.log_normalize <> add_andp thm
R22248:22255 VST.msl.log_normalize <> add_andp thm
R22293:22293 VST.msl.seplog <> ::logic:x_'&&'_x not
R22309:22313 VST.msl.seplog <> ::logic:x_'&&'_x not
R22294:22298 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R22304:22307 VST.msl.seplog <> ::logic:x_'||'_x not
R22299:22301 VST.msl.seplog <> ::logic:'|>'_x not
R22302:22303 VST.msl.seplog <> FF meth
R22314:22324 VST.veric.SeparationLogic <> allp_fun_id def
R22273:22285 VST.msl.seplog <> derives_trans meth
R22293:22293 VST.msl.seplog <> ::logic:x_'&&'_x not
R22309:22313 VST.msl.seplog <> ::logic:x_'&&'_x not
R22294:22298 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R22304:22307 VST.msl.seplog <> ::logic:x_'||'_x not
R22299:22301 VST.msl.seplog <> ::logic:'|>'_x not
R22302:22303 VST.msl.seplog <> FF meth
R22314:22324 VST.veric.SeparationLogic <> allp_fun_id def
R22273:22285 VST.msl.seplog <> derives_trans meth
R22359:22371 VST.msl.seplog <> derives_trans meth
R22381:22398 VST.msl.log_normalize <> bupd_andp2_corable thm
R22414:22432 VST.veric.SeparationLogic <> corable_allp_fun_id thm
R22359:22371 VST.msl.seplog <> derives_trans meth
R22381:22398 VST.msl.log_normalize <> bupd_andp2_corable thm
R22414:22432 VST.veric.SeparationLogic <> corable_allp_fun_id thm
R22446:22454 VST.msl.ghost_seplog <> bupd_mono meth
R22446:22454 VST.msl.ghost_seplog <> bupd_mono meth
R22467:22482 VST.msl.log_normalize <> distrib_orp_andp thm
R22467:22482 VST.msl.log_normalize <> distrib_orp_andp thm
R22467:22482 VST.msl.log_normalize <> distrib_orp_andp thm
R22493:22503 VST.msl.log_normalize <> orp_derives thm
R22493:22503 VST.msl.log_normalize <> orp_derives thm
prf 22530:22543 <> derives_ENTAIL
binder 22553:22554 <> TC:272
binder 22556:22556 <> P:273
binder 22558:22558 <> Q:274
R22570:22575 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22589:22593 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R22584:22587 VST.msl.seplog <> ::logic:x_'&&'_x not
R22576:22580 VST.veric.SeparationLogic <> local def
R22582:22583 VST.floyd.assert_lemmas <> TC:272 var
R22588:22588 VST.floyd.assert_lemmas <> P:273 var
R22594:22594 VST.floyd.assert_lemmas <> Q:274 var
R22564:22568 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R22563:22563 VST.floyd.assert_lemmas <> P:273 var
R22569:22569 VST.floyd.assert_lemmas <> Q:274 var
R22618:22627 VST.msl.seplog <> andp_left2 meth
R22618:22627 VST.msl.seplog <> andp_left2 meth
prf 22645:22663 <> ENTAIL_derives_bupd
binder 22673:22674 <> TC:275
binder 22676:22676 <> P:276
binder 22678:22678 <> Q:277
R22702:22707 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22721:22725 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R22716:22719 VST.msl.seplog <> ::logic:x_'&&'_x not
R22708:22712 VST.veric.SeparationLogic <> local def
R22714:22715 VST.floyd.assert_lemmas <> TC:275 var
R22720:22720 VST.floyd.assert_lemmas <> P:276 var
R22726:22730 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R22731:22731 VST.floyd.assert_lemmas <> Q:277 var
R22696:22700 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R22691:22694 VST.msl.seplog <> ::logic:x_'&&'_x not
R22683:22687 VST.veric.SeparationLogic <> local def
R22689:22690 VST.floyd.assert_lemmas <> TC:275 var
R22695:22695 VST.floyd.assert_lemmas <> P:276 var
R22701:22701 VST.floyd.assert_lemmas <> Q:277 var
R22756:22768 VST.msl.seplog <> derives_trans meth
R22780:22789 VST.msl.ghost_seplog <> bupd_intro meth
R22756:22768 VST.msl.seplog <> derives_trans meth
R22780:22789 VST.msl.ghost_seplog <> bupd_intro meth
prf 22804:22829 <> derives_bupd_derives_bupd0
binder 22839:22840 <> TC:278
binder 22842:22842 <> P:279
binder 22844:22844 <> Q:280
R22873:22878 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22892:22896 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R22887:22890 VST.msl.seplog <> ::logic:x_'&&'_x not
R22879:22883 VST.veric.SeparationLogic <> local def
R22885:22886 VST.floyd.assert_lemmas <> TC:278 var
R22891:22891 VST.floyd.assert_lemmas <> P:279 var
R22897:22902 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R22915:22915 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R22903:22903 VST.msl.seplog <> ::logic:x_'||'_x not
R22909:22913 VST.msl.seplog <> ::logic:x_'||'_x not
R22904:22906 VST.msl.seplog <> ::logic:'|>'_x not
R22907:22908 VST.msl.seplog <> FF meth
R22914:22914 VST.floyd.assert_lemmas <> Q:280 var
R22862:22866 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R22857:22860 VST.msl.seplog <> ::logic:x_'&&'_x not
R22849:22853 VST.veric.SeparationLogic <> local def
R22855:22856 VST.floyd.assert_lemmas <> TC:278 var
R22861:22861 VST.floyd.assert_lemmas <> P:279 var
R22867:22871 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R22872:22872 VST.floyd.assert_lemmas <> Q:280 var
R22940:22952 VST.msl.seplog <> derives_trans meth
R22964:22972 VST.msl.ghost_seplog <> bupd_mono meth
R22975:22984 VST.msl.seplog <> orp_right2 meth
R22987:22998 VST.msl.seplog <> derives_refl meth
R22940:22952 VST.msl.seplog <> derives_trans meth
R22964:22972 VST.msl.ghost_seplog <> bupd_mono meth
R22975:22984 VST.msl.seplog <> orp_right2 meth
R22987:22998 VST.msl.seplog <> derives_refl meth
prf 23013:23038 <> derives_bupd0_derives_full
binder 23048:23052 <> Delta:281
binder 23054:23054 <> P:282
binder 23056:23056 <> Q:283
R23114:23119 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23172:23176 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R23144:23148 VST.msl.seplog <> ::logic:x_'&&'_x not
R23171:23171 VST.msl.seplog <> ::logic:x_'&&'_x not
R23120:23124 VST.veric.SeparationLogic <> local def
R23127:23136 VST.veric.SeparationLogic <> tc_environ def
R23138:23142 VST.floyd.assert_lemmas <> Delta:281 var
R23166:23169 VST.msl.seplog <> ::logic:x_'&&'_x not
R23149:23159 VST.veric.SeparationLogic <> allp_fun_id def
R23161:23165 VST.floyd.assert_lemmas <> Delta:281 var
R23170:23170 VST.floyd.assert_lemmas <> P:282 var
R23177:23182 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R23195:23195 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R23183:23183 VST.msl.seplog <> ::logic:x_'||'_x not
R23189:23193 VST.msl.seplog <> ::logic:x_'||'_x not
R23184:23186 VST.msl.seplog <> ::logic:'|>'_x not
R23187:23188 VST.msl.seplog <> FF meth
R23194:23194 VST.floyd.assert_lemmas <> Q:283 var
R23090:23094 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R23085:23088 VST.msl.seplog <> ::logic:x_'&&'_x not
R23061:23065 VST.veric.SeparationLogic <> local def
R23068:23077 VST.veric.SeparationLogic <> tc_environ def
R23079:23083 VST.floyd.assert_lemmas <> Delta:281 var
R23089:23089 VST.floyd.assert_lemmas <> P:282 var
R23095:23100 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R23113:23113 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R23101:23101 VST.msl.seplog <> ::logic:x_'||'_x not
R23107:23111 VST.msl.seplog <> ::logic:x_'||'_x not
R23102:23104 VST.msl.seplog <> ::logic:'|>'_x not
R23105:23106 VST.msl.seplog <> FF meth
R23112:23112 VST.floyd.assert_lemmas <> Q:283 var
R23221:23233 VST.msl.seplog <> derives_trans meth
R23221:23233 VST.msl.seplog <> derives_trans meth
prf 23271:23281 <> andp_ENTAIL
binder 23291:23292 <> TC:284
binder 23294:23294 <> P:285
binder 23296:23297 <> P':286
binder 23299:23299 <> Q:287
binder 23301:23302 <> Q':288
R23327:23332 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23353:23358 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23379:23383 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R23367:23371 VST.msl.seplog <> ::logic:x_'&&'_x not
R23378:23378 VST.msl.seplog <> ::logic:x_'&&'_x not
R23359:23363 VST.veric.SeparationLogic <> local def
R23365:23366 VST.floyd.assert_lemmas <> TC:284 var
R23373:23376 VST.msl.seplog <> ::logic:x_'&&'_x not
R23372:23372 VST.floyd.assert_lemmas <> P:285 var
R23377:23377 VST.floyd.assert_lemmas <> Q:287 var
R23386:23389 VST.msl.seplog <> ::logic:x_'&&'_x not
R23384:23385 VST.floyd.assert_lemmas <> P':286 var
R23390:23391 VST.floyd.assert_lemmas <> Q':288 var
R23346:23350 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R23341:23344 VST.msl.seplog <> ::logic:x_'&&'_x not
R23333:23337 VST.veric.SeparationLogic <> local def
R23339:23340 VST.floyd.assert_lemmas <> TC:284 var
R23345:23345 VST.floyd.assert_lemmas <> Q:287 var
R23351:23352 VST.floyd.assert_lemmas <> Q':288 var
R23320:23324 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R23315:23318 VST.msl.seplog <> ::logic:x_'&&'_x not
R23307:23311 VST.veric.SeparationLogic <> local def
R23313:23314 VST.floyd.assert_lemmas <> TC:284 var
R23319:23319 VST.floyd.assert_lemmas <> P:285 var
R23325:23326 VST.floyd.assert_lemmas <> P':286 var
R23420:23432 VST.msl.seplog <> derives_trans meth
R23444:23455 VST.msl.log_normalize <> andp_derives thm
R23420:23432 VST.msl.seplog <> derives_trans meth
R23444:23455 VST.msl.log_normalize <> andp_derives thm
prf 23507:23516 <> orp_ENTAIL
binder 23526:23527 <> TC:289
binder 23529:23529 <> P:290
binder 23531:23532 <> P':291
binder 23534:23534 <> Q:292
binder 23536:23537 <> Q':293
R23562:23567 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23588:23593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23614:23618 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R23602:23606 VST.msl.seplog <> ::logic:x_'&&'_x not
R23613:23613 VST.msl.seplog <> ::logic:x_'&&'_x not
R23594:23598 VST.veric.SeparationLogic <> local def
R23600:23601 VST.floyd.assert_lemmas <> TC:289 var
R23608:23611 VST.msl.seplog <> ::logic:x_'||'_x not
R23607:23607 VST.floyd.assert_lemmas <> P:290 var
R23612:23612 VST.floyd.assert_lemmas <> Q:292 var
R23621:23624 VST.msl.seplog <> ::logic:x_'||'_x not
R23619:23620 VST.floyd.assert_lemmas <> P':291 var
R23625:23626 VST.floyd.assert_lemmas <> Q':293 var
R23581:23585 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R23576:23579 VST.msl.seplog <> ::logic:x_'&&'_x not
R23568:23572 VST.veric.SeparationLogic <> local def
R23574:23575 VST.floyd.assert_lemmas <> TC:289 var
R23580:23580 VST.floyd.assert_lemmas <> Q:292 var
R23586:23587 VST.floyd.assert_lemmas <> Q':293 var
R23555:23559 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R23550:23553 VST.msl.seplog <> ::logic:x_'&&'_x not
R23542:23546 VST.veric.SeparationLogic <> local def
R23548:23549 VST.floyd.assert_lemmas <> TC:289 var
R23554:23554 VST.floyd.assert_lemmas <> P:290 var
R23560:23561 VST.floyd.assert_lemmas <> P':291 var
R23656:23664 VST.msl.log_normalize <> andp_comm thm
R23667:23682 VST.msl.log_normalize <> distrib_orp_andp thm
R23656:23664 VST.msl.log_normalize <> andp_comm thm
R23656:23664 VST.msl.log_normalize <> andp_comm thm
R23667:23682 VST.msl.log_normalize <> distrib_orp_andp thm
R23667:23682 VST.msl.log_normalize <> distrib_orp_andp thm
R23693:23703 VST.msl.log_normalize <> orp_derives thm
R23714:23722 VST.msl.log_normalize <> andp_comm thm
R23693:23703 VST.msl.log_normalize <> orp_derives thm
R23714:23722 VST.msl.log_normalize <> andp_comm thm
R23714:23722 VST.msl.log_normalize <> andp_comm thm
R23714:23722 VST.msl.log_normalize <> andp_comm thm
R23714:23722 VST.msl.log_normalize <> andp_comm thm
prf 23743:23755 <> sepcon_ENTAIL
binder 23765:23766 <> TC:294
binder 23768:23768 <> P:295
binder 23770:23771 <> P':296
binder 23773:23773 <> Q:297
binder 23775:23776 <> Q':298
R23801:23806 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23827:23832 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23852:23856 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R23841:23845 VST.msl.seplog <> ::logic:x_'&&'_x not
R23851:23851 VST.msl.seplog <> ::logic:x_'&&'_x not
R23833:23837 VST.veric.SeparationLogic <> local def
R23839:23840 VST.floyd.assert_lemmas <> TC:294 var
R23847:23849 VST.msl.seplog <> ::logic:x_'*'_x not
R23846:23846 VST.floyd.assert_lemmas <> P:295 var
R23850:23850 VST.floyd.assert_lemmas <> Q:297 var
R23859:23861 VST.msl.seplog <> ::logic:x_'*'_x not
R23857:23858 VST.floyd.assert_lemmas <> P':296 var
R23862:23863 VST.floyd.assert_lemmas <> Q':298 var
R23820:23824 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R23815:23818 VST.msl.seplog <> ::logic:x_'&&'_x not
R23807:23811 VST.veric.SeparationLogic <> local def
R23813:23814 VST.floyd.assert_lemmas <> TC:294 var
R23819:23819 VST.floyd.assert_lemmas <> Q:297 var
R23825:23826 VST.floyd.assert_lemmas <> Q':298 var
R23794:23798 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R23789:23792 VST.msl.seplog <> ::logic:x_'&&'_x not
R23781:23785 VST.veric.SeparationLogic <> local def
R23787:23788 VST.floyd.assert_lemmas <> TC:294 var
R23793:23793 VST.floyd.assert_lemmas <> P:295 var
R23799:23800 VST.floyd.assert_lemmas <> P':296 var
R23892:23904 VST.msl.seplog <> derives_trans meth
R23916:23929 VST.msl.seplog <> sepcon_derives meth
R23892:23904 VST.msl.seplog <> derives_trans meth
R23916:23929 VST.msl.seplog <> sepcon_derives meth
R24025:24036 VST.msl.seplog <> corable_prop meth
R23965:23984 VST.msl.seplog <> corable_andp_sepcon1 meth
R23987:24006 VST.msl.log_normalize <> corable_sepcon_andp1 thm
R23965:23984 VST.msl.seplog <> corable_andp_sepcon1 meth
R24025:24036 VST.msl.seplog <> corable_prop meth
R23965:23984 VST.msl.seplog <> corable_andp_sepcon1 meth
R23987:24006 VST.msl.log_normalize <> corable_sepcon_andp1 thm
R24025:24036 VST.msl.seplog <> corable_prop meth
R23987:24006 VST.msl.log_normalize <> corable_sepcon_andp1 thm
prf 24066:24076 <> wand_ENTAIL
binder 24086:24087 <> TC:299
binder 24089:24089 <> P:300
binder 24091:24092 <> P':301
binder 24094:24094 <> Q:302
binder 24096:24097 <> Q':303
R24122:24127 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24148:24153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24174:24178 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R24162:24166 VST.msl.seplog <> ::logic:x_'&&'_x not
R24173:24173 VST.msl.seplog <> ::logic:x_'&&'_x not
R24154:24158 VST.veric.SeparationLogic <> local def
R24160:24161 VST.floyd.assert_lemmas <> TC:299 var
R24168:24171 VST.msl.seplog <> ::logic:x_'-*'_x not
R24167:24167 VST.floyd.assert_lemmas <> P:300 var
R24172:24172 VST.floyd.assert_lemmas <> Q:302 var
R24181:24184 VST.msl.seplog <> ::logic:x_'-*'_x not
R24179:24180 VST.floyd.assert_lemmas <> P':301 var
R24185:24186 VST.floyd.assert_lemmas <> Q':303 var
R24141:24145 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R24136:24139 VST.msl.seplog <> ::logic:x_'&&'_x not
R24128:24132 VST.veric.SeparationLogic <> local def
R24134:24135 VST.floyd.assert_lemmas <> TC:299 var
R24140:24140 VST.floyd.assert_lemmas <> Q:302 var
R24146:24147 VST.floyd.assert_lemmas <> Q':303 var
R24116:24120 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R24110:24113 VST.msl.seplog <> ::logic:x_'&&'_x not
R24102:24106 VST.veric.SeparationLogic <> local def
R24108:24109 VST.floyd.assert_lemmas <> TC:299 var
R24114:24115 VST.floyd.assert_lemmas <> P':301 var
R24121:24121 VST.floyd.assert_lemmas <> P:300 var
R24219:24237 VST.msl.seplog <> wand_sepcon_adjoint meth
R24219:24237 VST.msl.seplog <> wand_sepcon_adjoint meth
R24219:24237 VST.msl.seplog <> wand_sepcon_adjoint meth
R24249:24261 VST.msl.seplog <> derives_trans meth
R24249:24261 VST.msl.seplog <> derives_trans meth
R24326:24337 VST.msl.seplog <> corable_prop meth
R24288:24307 VST.msl.seplog <> corable_andp_sepcon1 meth
R24288:24307 VST.msl.seplog <> corable_andp_sepcon1 meth
R24326:24337 VST.msl.seplog <> corable_prop meth
R24288:24307 VST.msl.seplog <> corable_andp_sepcon1 meth
R24349:24358 VST.msl.seplog <> andp_right meth
R24368:24377 VST.msl.seplog <> andp_left1 meth
R24380:24391 VST.msl.seplog <> derives_refl meth
R24349:24358 VST.msl.seplog <> andp_right meth
R24368:24377 VST.msl.seplog <> andp_left1 meth
R24380:24391 VST.msl.seplog <> derives_refl meth
R24448:24459 VST.msl.seplog <> corable_prop meth
R24410:24429 VST.msl.log_normalize <> corable_sepcon_andp1 thm
R24410:24429 VST.msl.log_normalize <> corable_sepcon_andp1 thm
R24448:24459 VST.msl.seplog <> corable_prop meth
R24410:24429 VST.msl.log_normalize <> corable_sepcon_andp1 thm
R24473:24483 VST.msl.seplog <> sepcon_comm meth
R24486:24504 VST.msl.seplog <> wand_sepcon_adjoint meth
R24473:24483 VST.msl.seplog <> sepcon_comm meth
R24473:24483 VST.msl.seplog <> sepcon_comm meth
R24486:24504 VST.msl.seplog <> wand_sepcon_adjoint meth
R24486:24504 VST.msl.seplog <> wand_sepcon_adjoint meth
R24516:24528 VST.msl.seplog <> derives_trans meth
R24516:24528 VST.msl.seplog <> derives_trans meth
R24557:24575 VST.msl.seplog <> wand_sepcon_adjoint meth
R24557:24575 VST.msl.seplog <> wand_sepcon_adjoint meth
R24557:24575 VST.msl.seplog <> wand_sepcon_adjoint meth
R24586:24602 VST.msl.log_normalize <> modus_ponens_wand thm
R24586:24602 VST.msl.log_normalize <> modus_ponens_wand thm
prf 24617:24626 <> exp_ENTAIL
binder 24636:24640 <> Delta:304
binder 24642:24642 <> B:305
R24651:24654 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24662:24665 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24666:24670 VST.veric.mpred <> mpred def
R24655:24661 VST.veric.mpred <> environ ind
R24650:24650 VST.floyd.assert_lemmas <> B:305 var
binder 24645:24645 <> P:306
binder 24647:24647 <> Q:307
R24676:24676 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24729:24735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24769:24773 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R24760:24763 VST.msl.seplog <> ::logic:x_'&&'_x not
R24736:24740 VST.veric.SeparationLogic <> local def
R24743:24752 VST.veric.SeparationLogic <> tc_environ def
R24754:24758 VST.floyd.assert_lemmas <> Delta:304 var
R24764:24766 VST.msl.seplog <> exp meth
R24768:24768 VST.floyd.assert_lemmas <> P:306 var
R24774:24776 VST.msl.seplog <> exp meth
R24778:24778 VST.floyd.assert_lemmas <> Q:307 var
R24687:24687 VST.floyd.assert_lemmas <> B:305 var
binder 24684:24684 <> x:308
R24721:24725 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R24714:24717 VST.msl.seplog <> ::logic:x_'&&'_x not
R24690:24694 VST.veric.SeparationLogic <> local def
R24697:24706 VST.veric.SeparationLogic <> tc_environ def
R24708:24712 VST.floyd.assert_lemmas <> Delta:304 var
R24718:24718 VST.floyd.assert_lemmas <> P:306 var
R24720:24720 VST.floyd.assert_lemmas <> x:308 var
R24726:24726 VST.floyd.assert_lemmas <> Q:307 var
R24728:24728 VST.floyd.assert_lemmas <> x:308 var
R24808:24816 VST.msl.log_normalize <> exp_andp2 thm
R24808:24816 VST.msl.log_normalize <> exp_andp2 thm
R24808:24816 VST.msl.log_normalize <> exp_andp2 thm
R24827:24837 VST.msl.log_normalize <> exp_derives thm
R24827:24837 VST.msl.log_normalize <> exp_derives thm
prf 24858:24868 <> allp_ENTAIL
binder 24878:24882 <> Delta:309
binder 24884:24884 <> B:310
R24893:24896 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24904:24907 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24908:24912 VST.veric.mpred <> mpred def
R24897:24903 VST.veric.mpred <> environ ind
R24892:24892 VST.floyd.assert_lemmas <> B:310 var
binder 24887:24887 <> P:311
binder 24889:24889 <> Q:312
R24918:24918 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24971:24977 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25012:25016 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R25002:25005 VST.msl.seplog <> ::logic:x_'&&'_x not
R24978:24982 VST.veric.SeparationLogic <> local def
R24985:24994 VST.veric.SeparationLogic <> tc_environ def
R24996:25000 VST.floyd.assert_lemmas <> Delta:309 var
R25006:25009 VST.msl.seplog <> allp meth
R25011:25011 VST.floyd.assert_lemmas <> P:311 var
R25017:25020 VST.msl.seplog <> allp meth
R25022:25022 VST.floyd.assert_lemmas <> Q:312 var
R24929:24929 VST.floyd.assert_lemmas <> B:310 var
binder 24926:24926 <> x:313
R24963:24967 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R24956:24959 VST.msl.seplog <> ::logic:x_'&&'_x not
R24932:24936 VST.veric.SeparationLogic <> local def
R24939:24948 VST.veric.SeparationLogic <> tc_environ def
R24950:24954 VST.floyd.assert_lemmas <> Delta:309 var
R24960:24960 VST.floyd.assert_lemmas <> P:311 var
R24962:24962 VST.floyd.assert_lemmas <> x:313 var
R24968:24968 VST.floyd.assert_lemmas <> Q:312 var
R24970:24970 VST.floyd.assert_lemmas <> x:313 var
R25050:25059 VST.msl.seplog <> allp_right meth
R25050:25059 VST.msl.seplog <> allp_right meth
R25081:25089 VST.msl.log_normalize <> andp_comm thm
R25081:25089 VST.msl.log_normalize <> andp_comm thm
R25081:25089 VST.msl.log_normalize <> andp_comm thm
R25100:25115 VST.msl.seplog <> imp_andp_adjoint meth
R25100:25115 VST.msl.seplog <> imp_andp_adjoint meth
R25126:25134 VST.msl.seplog <> allp_left meth
R25126:25134 VST.msl.seplog <> allp_left meth
R25152:25167 VST.msl.seplog <> imp_andp_adjoint meth
R25152:25167 VST.msl.seplog <> imp_andp_adjoint meth
R25180:25188 VST.msl.log_normalize <> andp_comm thm
R25180:25188 VST.msl.log_normalize <> andp_comm thm
R25180:25188 VST.msl.log_normalize <> andp_comm thm
prf 25214:25225 <> later_ENTAIL
binder 25235:25239 <> Delta:314
binder 25241:25241 <> P:315
binder 25243:25243 <> Q:316
R25283:25288 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25321:25325 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R25313:25316 VST.msl.seplog <> ::logic:x_'&&'_x not
R25289:25293 VST.veric.SeparationLogic <> local def
R25296:25305 VST.veric.SeparationLogic <> tc_environ def
R25307:25311 VST.floyd.assert_lemmas <> Delta:314 var
R25317:25319 VST.msl.seplog <> ::logic:'|>'_x not
R25320:25320 VST.floyd.assert_lemmas <> P:315 var
R25326:25328 VST.msl.seplog <> ::logic:'|>'_x not
R25329:25329 VST.floyd.assert_lemmas <> Q:316 var
R25277:25281 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R25272:25275 VST.msl.seplog <> ::logic:x_'&&'_x not
R25248:25252 VST.veric.SeparationLogic <> local def
R25255:25264 VST.veric.SeparationLogic <> tc_environ def
R25266:25270 VST.floyd.assert_lemmas <> Delta:314 var
R25276:25276 VST.floyd.assert_lemmas <> P:315 var
R25282:25282 VST.floyd.assert_lemmas <> Q:316 var
R25357:25367 VST.msl.log_normalize <> later_left2 thm
R25357:25367 VST.msl.log_normalize <> later_left2 thm
prf 25385:25396 <> andp_ENTAILL
binder 25406:25410 <> Delta:317
binder 25412:25412 <> P:318
binder 25414:25415 <> P':319
binder 25417:25417 <> Q:320
binder 25419:25420 <> Q':321
R25484:25489 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25549:25554 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25614:25618 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R25579:25583 VST.msl.seplog <> ::logic:x_'&&'_x not
R25613:25613 VST.msl.seplog <> ::logic:x_'&&'_x not
R25555:25559 VST.veric.SeparationLogic <> local def
R25562:25571 VST.veric.SeparationLogic <> tc_environ def
R25573:25577 VST.floyd.assert_lemmas <> Delta:317 var
R25601:25605 VST.msl.seplog <> ::logic:x_'&&'_x not
R25612:25612 VST.msl.seplog <> ::logic:x_'&&'_x not
R25584:25594 VST.veric.SeparationLogic <> allp_fun_id def
R25596:25600 VST.floyd.assert_lemmas <> Delta:317 var
R25607:25610 VST.msl.seplog <> ::logic:x_'&&'_x not
R25606:25606 VST.floyd.assert_lemmas <> P:318 var
R25611:25611 VST.floyd.assert_lemmas <> Q:320 var
R25621:25624 VST.msl.seplog <> ::logic:x_'&&'_x not
R25619:25620 VST.floyd.assert_lemmas <> P':319 var
R25625:25626 VST.floyd.assert_lemmas <> Q':321 var
R25542:25546 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R25514:25518 VST.msl.seplog <> ::logic:x_'&&'_x not
R25541:25541 VST.msl.seplog <> ::logic:x_'&&'_x not
R25490:25494 VST.veric.SeparationLogic <> local def
R25497:25506 VST.veric.SeparationLogic <> tc_environ def
R25508:25512 VST.floyd.assert_lemmas <> Delta:317 var
R25536:25539 VST.msl.seplog <> ::logic:x_'&&'_x not
R25519:25529 VST.veric.SeparationLogic <> allp_fun_id def
R25531:25535 VST.floyd.assert_lemmas <> Delta:317 var
R25540:25540 VST.floyd.assert_lemmas <> Q:320 var
R25547:25548 VST.floyd.assert_lemmas <> Q':321 var
R25477:25481 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R25449:25453 VST.msl.seplog <> ::logic:x_'&&'_x not
R25476:25476 VST.msl.seplog <> ::logic:x_'&&'_x not
R25425:25429 VST.veric.SeparationLogic <> local def
R25432:25441 VST.veric.SeparationLogic <> tc_environ def
R25443:25447 VST.floyd.assert_lemmas <> Delta:317 var
R25471:25474 VST.msl.seplog <> ::logic:x_'&&'_x not
R25454:25464 VST.veric.SeparationLogic <> allp_fun_id def
R25466:25470 VST.floyd.assert_lemmas <> Delta:317 var
R25475:25475 VST.floyd.assert_lemmas <> P:318 var
R25482:25483 VST.floyd.assert_lemmas <> P':319 var
R25655:25667 VST.msl.seplog <> derives_trans meth
R25679:25690 VST.msl.log_normalize <> andp_derives thm
R25655:25667 VST.msl.seplog <> derives_trans meth
R25679:25690 VST.msl.log_normalize <> andp_derives thm
prf 25742:25752 <> orp_ENTAILL
binder 25762:25766 <> Delta:322
binder 25768:25768 <> P:323
binder 25770:25771 <> P':324
binder 25773:25773 <> Q:325
binder 25775:25776 <> Q':326
R25840:25845 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25905:25910 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25970:25974 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R25935:25939 VST.msl.seplog <> ::logic:x_'&&'_x not
R25969:25969 VST.msl.seplog <> ::logic:x_'&&'_x not
R25911:25915 VST.veric.SeparationLogic <> local def
R25918:25927 VST.veric.SeparationLogic <> tc_environ def
R25929:25933 VST.floyd.assert_lemmas <> Delta:322 var
R25957:25961 VST.msl.seplog <> ::logic:x_'&&'_x not
R25968:25968 VST.msl.seplog <> ::logic:x_'&&'_x not
R25940:25950 VST.veric.SeparationLogic <> allp_fun_id def
R25952:25956 VST.floyd.assert_lemmas <> Delta:322 var
R25963:25966 VST.msl.seplog <> ::logic:x_'||'_x not
R25962:25962 VST.floyd.assert_lemmas <> P:323 var
R25967:25967 VST.floyd.assert_lemmas <> Q:325 var
R25977:25980 VST.msl.seplog <> ::logic:x_'||'_x not
R25975:25976 VST.floyd.assert_lemmas <> P':324 var
R25981:25982 VST.floyd.assert_lemmas <> Q':326 var
R25898:25902 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R25870:25874 VST.msl.seplog <> ::logic:x_'&&'_x not
R25897:25897 VST.msl.seplog <> ::logic:x_'&&'_x not
R25846:25850 VST.veric.SeparationLogic <> local def
R25853:25862 VST.veric.SeparationLogic <> tc_environ def
R25864:25868 VST.floyd.assert_lemmas <> Delta:322 var
R25892:25895 VST.msl.seplog <> ::logic:x_'&&'_x not
R25875:25885 VST.veric.SeparationLogic <> allp_fun_id def
R25887:25891 VST.floyd.assert_lemmas <> Delta:322 var
R25896:25896 VST.floyd.assert_lemmas <> Q:325 var
R25903:25904 VST.floyd.assert_lemmas <> Q':326 var
R25833:25837 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R25805:25809 VST.msl.seplog <> ::logic:x_'&&'_x not
R25832:25832 VST.msl.seplog <> ::logic:x_'&&'_x not
R25781:25785 VST.veric.SeparationLogic <> local def
R25788:25797 VST.veric.SeparationLogic <> tc_environ def
R25799:25803 VST.floyd.assert_lemmas <> Delta:322 var
R25827:25830 VST.msl.seplog <> ::logic:x_'&&'_x not
R25810:25820 VST.veric.SeparationLogic <> allp_fun_id def
R25822:25826 VST.floyd.assert_lemmas <> Delta:322 var
R25831:25831 VST.floyd.assert_lemmas <> P:323 var
R25838:25839 VST.floyd.assert_lemmas <> P':324 var
R26015:26024 VST.msl.log_normalize <> andp_assoc thm
R26015:26024 VST.msl.log_normalize <> andp_assoc thm
R26015:26024 VST.msl.log_normalize <> andp_assoc thm
R26042:26050 VST.msl.log_normalize <> andp_comm thm
R26053:26068 VST.msl.log_normalize <> distrib_orp_andp thm
R26042:26050 VST.msl.log_normalize <> andp_comm thm
R26042:26050 VST.msl.log_normalize <> andp_comm thm
R26053:26068 VST.msl.log_normalize <> distrib_orp_andp thm
R26053:26068 VST.msl.log_normalize <> distrib_orp_andp thm
R26079:26089 VST.msl.log_normalize <> orp_derives thm
R26100:26108 VST.msl.log_normalize <> andp_comm thm
R26079:26089 VST.msl.log_normalize <> orp_derives thm
R26100:26108 VST.msl.log_normalize <> andp_comm thm
R26100:26108 VST.msl.log_normalize <> andp_comm thm
R26100:26108 VST.msl.log_normalize <> andp_comm thm
R26100:26108 VST.msl.log_normalize <> andp_comm thm
prf 26129:26139 <> imp_ENTAILL
binder 26149:26153 <> Delta:327
binder 26155:26155 <> P:328
binder 26157:26158 <> P':329
binder 26160:26160 <> Q:330
binder 26162:26163 <> Q':331
R26227:26232 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26292:26297 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26357:26361 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R26322:26326 VST.msl.seplog <> ::logic:x_'&&'_x not
R26356:26356 VST.msl.seplog <> ::logic:x_'&&'_x not
R26298:26302 VST.veric.SeparationLogic <> local def
R26305:26314 VST.veric.SeparationLogic <> tc_environ def
R26316:26320 VST.floyd.assert_lemmas <> Delta:327 var
R26344:26348 VST.msl.seplog <> ::logic:x_'&&'_x not
R26355:26355 VST.msl.seplog <> ::logic:x_'&&'_x not
R26327:26337 VST.veric.SeparationLogic <> allp_fun_id def
R26339:26343 VST.floyd.assert_lemmas <> Delta:327 var
R26350:26353 VST.msl.seplog <> ::logic:x_'-->'_x not
R26349:26349 VST.floyd.assert_lemmas <> P:328 var
R26354:26354 VST.floyd.assert_lemmas <> Q:330 var
R26364:26368 VST.msl.seplog <> ::logic:x_'-->'_x not
R26362:26363 VST.floyd.assert_lemmas <> P':329 var
R26369:26370 VST.floyd.assert_lemmas <> Q':331 var
R26285:26289 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R26257:26261 VST.msl.seplog <> ::logic:x_'&&'_x not
R26284:26284 VST.msl.seplog <> ::logic:x_'&&'_x not
R26233:26237 VST.veric.SeparationLogic <> local def
R26240:26249 VST.veric.SeparationLogic <> tc_environ def
R26251:26255 VST.floyd.assert_lemmas <> Delta:327 var
R26279:26282 VST.msl.seplog <> ::logic:x_'&&'_x not
R26262:26272 VST.veric.SeparationLogic <> allp_fun_id def
R26274:26278 VST.floyd.assert_lemmas <> Delta:327 var
R26283:26283 VST.floyd.assert_lemmas <> Q:330 var
R26290:26291 VST.floyd.assert_lemmas <> Q':331 var
R26221:26225 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R26192:26196 VST.msl.seplog <> ::logic:x_'&&'_x not
R26220:26220 VST.msl.seplog <> ::logic:x_'&&'_x not
R26168:26172 VST.veric.SeparationLogic <> local def
R26175:26184 VST.veric.SeparationLogic <> tc_environ def
R26186:26190 VST.floyd.assert_lemmas <> Delta:327 var
R26214:26217 VST.msl.seplog <> ::logic:x_'&&'_x not
R26197:26207 VST.veric.SeparationLogic <> allp_fun_id def
R26209:26213 VST.floyd.assert_lemmas <> Delta:327 var
R26218:26219 VST.floyd.assert_lemmas <> P':329 var
R26226:26226 VST.floyd.assert_lemmas <> P:328 var
R26403:26412 VST.msl.log_normalize <> andp_assoc thm
R26403:26412 VST.msl.log_normalize <> andp_assoc thm
R26403:26412 VST.msl.log_normalize <> andp_assoc thm
R26433:26448 VST.msl.seplog <> imp_andp_adjoint meth
R26433:26448 VST.msl.seplog <> imp_andp_adjoint meth
R26433:26448 VST.msl.seplog <> imp_andp_adjoint meth
R26460:26472 VST.msl.seplog <> derives_trans meth
R26460:26472 VST.msl.seplog <> derives_trans meth
R26497:26506 VST.msl.seplog <> andp_right meth
R26516:26525 VST.msl.seplog <> andp_left1 meth
R26528:26537 VST.msl.seplog <> andp_left1 meth
R26540:26551 VST.msl.seplog <> derives_refl meth
R26497:26506 VST.msl.seplog <> andp_right meth
R26516:26525 VST.msl.seplog <> andp_left1 meth
R26528:26537 VST.msl.seplog <> andp_left1 meth
R26540:26551 VST.msl.seplog <> derives_refl meth
R26568:26577 VST.msl.log_normalize <> andp_assoc thm
R26581:26589 VST.msl.log_normalize <> andp_comm thm
R26602:26611 VST.msl.log_normalize <> andp_assoc thm
R26568:26577 VST.msl.log_normalize <> andp_assoc thm
R26568:26577 VST.msl.log_normalize <> andp_assoc thm
R26568:26577 VST.msl.log_normalize <> andp_assoc thm
R26568:26577 VST.msl.log_normalize <> andp_assoc thm
R26581:26589 VST.msl.log_normalize <> andp_comm thm
R26581:26589 VST.msl.log_normalize <> andp_comm thm
R26602:26611 VST.msl.log_normalize <> andp_assoc thm
R26602:26611 VST.msl.log_normalize <> andp_assoc thm
R26602:26611 VST.msl.log_normalize <> andp_assoc thm
R26602:26611 VST.msl.log_normalize <> andp_assoc thm
R26622:26637 VST.msl.seplog <> imp_andp_adjoint meth
R26622:26637 VST.msl.seplog <> imp_andp_adjoint meth
R26649:26661 VST.msl.seplog <> derives_trans meth
R26649:26661 VST.msl.seplog <> derives_trans meth
R26685:26700 VST.msl.seplog <> imp_andp_adjoint meth
R26685:26700 VST.msl.seplog <> imp_andp_adjoint meth
R26711:26722 VST.msl.log_normalize <> modus_ponens thm
R26711:26722 VST.msl.log_normalize <> modus_ponens thm
prf 26737:26750 <> sepcon_ENTAILL
binder 26760:26764 <> Delta:332
binder 26766:26766 <> P:333
binder 26768:26769 <> P':334
binder 26771:26771 <> Q:335
binder 26773:26774 <> Q':336
R26838:26843 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26903:26908 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26967:26971 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R26933:26937 VST.msl.seplog <> ::logic:x_'&&'_x not
R26966:26966 VST.msl.seplog <> ::logic:x_'&&'_x not
R26909:26913 VST.veric.SeparationLogic <> local def
R26916:26925 VST.veric.SeparationLogic <> tc_environ def
R26927:26931 VST.floyd.assert_lemmas <> Delta:332 var
R26955:26959 VST.msl.seplog <> ::logic:x_'&&'_x not
R26965:26965 VST.msl.seplog <> ::logic:x_'&&'_x not
R26938:26948 VST.veric.SeparationLogic <> allp_fun_id def
R26950:26954 VST.floyd.assert_lemmas <> Delta:332 var
R26961:26963 VST.msl.seplog <> ::logic:x_'*'_x not
R26960:26960 VST.floyd.assert_lemmas <> P:333 var
R26964:26964 VST.floyd.assert_lemmas <> Q:335 var
R26974:26976 VST.msl.seplog <> ::logic:x_'*'_x not
R26972:26973 VST.floyd.assert_lemmas <> P':334 var
R26977:26978 VST.floyd.assert_lemmas <> Q':336 var
R26896:26900 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R26868:26872 VST.msl.seplog <> ::logic:x_'&&'_x not
R26895:26895 VST.msl.seplog <> ::logic:x_'&&'_x not
R26844:26848 VST.veric.SeparationLogic <> local def
R26851:26860 VST.veric.SeparationLogic <> tc_environ def
R26862:26866 VST.floyd.assert_lemmas <> Delta:332 var
R26890:26893 VST.msl.seplog <> ::logic:x_'&&'_x not
R26873:26883 VST.veric.SeparationLogic <> allp_fun_id def
R26885:26889 VST.floyd.assert_lemmas <> Delta:332 var
R26894:26894 VST.floyd.assert_lemmas <> Q:335 var
R26901:26902 VST.floyd.assert_lemmas <> Q':336 var
R26831:26835 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R26803:26807 VST.msl.seplog <> ::logic:x_'&&'_x not
R26830:26830 VST.msl.seplog <> ::logic:x_'&&'_x not
R26779:26783 VST.veric.SeparationLogic <> local def
R26786:26795 VST.veric.SeparationLogic <> tc_environ def
R26797:26801 VST.floyd.assert_lemmas <> Delta:332 var
R26825:26828 VST.msl.seplog <> ::logic:x_'&&'_x not
R26808:26818 VST.veric.SeparationLogic <> allp_fun_id def
R26820:26824 VST.floyd.assert_lemmas <> Delta:332 var
R26829:26829 VST.floyd.assert_lemmas <> P:333 var
R26836:26837 VST.floyd.assert_lemmas <> P':334 var
R27011:27020 VST.msl.log_normalize <> andp_assoc thm
R27011:27020 VST.msl.log_normalize <> andp_assoc thm
R27011:27020 VST.msl.log_normalize <> andp_assoc thm
R27037:27049 VST.msl.seplog <> derives_trans meth
R27061:27074 VST.msl.seplog <> sepcon_derives meth
R27037:27049 VST.msl.seplog <> derives_trans meth
R27061:27074 VST.msl.seplog <> sepcon_derives meth
R27177:27188 VST.msl.seplog <> corable_andp meth
R27198:27209 VST.msl.seplog <> corable_prop meth
R27219:27237 VST.veric.SeparationLogic <> corable_allp_fun_id thm
R27110:27129 VST.msl.seplog <> corable_andp_sepcon1 meth
R27132:27151 VST.msl.log_normalize <> corable_sepcon_andp1 thm
R27110:27129 VST.msl.seplog <> corable_andp_sepcon1 meth
R27177:27188 VST.msl.seplog <> corable_andp meth
R27198:27209 VST.msl.seplog <> corable_prop meth
R27219:27237 VST.veric.SeparationLogic <> corable_allp_fun_id thm
R27110:27129 VST.msl.seplog <> corable_andp_sepcon1 meth
R27132:27151 VST.msl.log_normalize <> corable_sepcon_andp1 thm
R27177:27188 VST.msl.seplog <> corable_andp meth
R27198:27209 VST.msl.seplog <> corable_prop meth
R27219:27237 VST.veric.SeparationLogic <> corable_allp_fun_id thm
R27132:27151 VST.msl.log_normalize <> corable_sepcon_andp1 thm
prf 27268:27279 <> wand_ENTAILL
binder 27289:27293 <> Delta:337
binder 27295:27295 <> P:338
binder 27297:27298 <> P':339
binder 27300:27300 <> Q:340
binder 27302:27303 <> Q':341
R27367:27372 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27432:27437 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27497:27501 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R27462:27466 VST.msl.seplog <> ::logic:x_'&&'_x not
R27496:27496 VST.msl.seplog <> ::logic:x_'&&'_x not
R27438:27442 VST.veric.SeparationLogic <> local def
R27445:27454 VST.veric.SeparationLogic <> tc_environ def
R27456:27460 VST.floyd.assert_lemmas <> Delta:337 var
R27484:27488 VST.msl.seplog <> ::logic:x_'&&'_x not
R27495:27495 VST.msl.seplog <> ::logic:x_'&&'_x not
R27467:27477 VST.veric.SeparationLogic <> allp_fun_id def
R27479:27483 VST.floyd.assert_lemmas <> Delta:337 var
R27490:27493 VST.msl.seplog <> ::logic:x_'-*'_x not
R27489:27489 VST.floyd.assert_lemmas <> P:338 var
R27494:27494 VST.floyd.assert_lemmas <> Q:340 var
R27504:27507 VST.msl.seplog <> ::logic:x_'-*'_x not
R27502:27503 VST.floyd.assert_lemmas <> P':339 var
R27508:27509 VST.floyd.assert_lemmas <> Q':341 var
R27425:27429 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R27397:27401 VST.msl.seplog <> ::logic:x_'&&'_x not
R27424:27424 VST.msl.seplog <> ::logic:x_'&&'_x not
R27373:27377 VST.veric.SeparationLogic <> local def
R27380:27389 VST.veric.SeparationLogic <> tc_environ def
R27391:27395 VST.floyd.assert_lemmas <> Delta:337 var
R27419:27422 VST.msl.seplog <> ::logic:x_'&&'_x not
R27402:27412 VST.veric.SeparationLogic <> allp_fun_id def
R27414:27418 VST.floyd.assert_lemmas <> Delta:337 var
R27423:27423 VST.floyd.assert_lemmas <> Q:340 var
R27430:27431 VST.floyd.assert_lemmas <> Q':341 var
R27361:27365 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R27332:27336 VST.msl.seplog <> ::logic:x_'&&'_x not
R27360:27360 VST.msl.seplog <> ::logic:x_'&&'_x not
R27308:27312 VST.veric.SeparationLogic <> local def
R27315:27324 VST.veric.SeparationLogic <> tc_environ def
R27326:27330 VST.floyd.assert_lemmas <> Delta:337 var
R27354:27357 VST.msl.seplog <> ::logic:x_'&&'_x not
R27337:27347 VST.veric.SeparationLogic <> allp_fun_id def
R27349:27353 VST.floyd.assert_lemmas <> Delta:337 var
R27358:27359 VST.floyd.assert_lemmas <> P':339 var
R27366:27366 VST.floyd.assert_lemmas <> P:338 var
R27542:27551 VST.msl.log_normalize <> andp_assoc thm
R27542:27551 VST.msl.log_normalize <> andp_assoc thm
R27542:27551 VST.msl.log_normalize <> andp_assoc thm
R27572:27590 VST.msl.seplog <> wand_sepcon_adjoint meth
R27572:27590 VST.msl.seplog <> wand_sepcon_adjoint meth
R27572:27590 VST.msl.seplog <> wand_sepcon_adjoint meth
R27602:27614 VST.msl.seplog <> derives_trans meth
R27602:27614 VST.msl.seplog <> derives_trans meth
R27686:27697 VST.msl.seplog <> corable_andp meth
R27707:27718 VST.msl.seplog <> corable_prop meth
R27728:27746 VST.veric.SeparationLogic <> corable_allp_fun_id thm
R27641:27660 VST.msl.seplog <> corable_andp_sepcon1 meth
R27641:27660 VST.msl.seplog <> corable_andp_sepcon1 meth
R27686:27697 VST.msl.seplog <> corable_andp meth
R27707:27718 VST.msl.seplog <> corable_prop meth
R27728:27746 VST.veric.SeparationLogic <> corable_allp_fun_id thm
R27641:27660 VST.msl.seplog <> corable_andp_sepcon1 meth
R27759:27768 VST.msl.seplog <> andp_right meth
R27778:27787 VST.msl.seplog <> andp_left1 meth
R27790:27801 VST.msl.seplog <> derives_refl meth
R27759:27768 VST.msl.seplog <> andp_right meth
R27778:27787 VST.msl.seplog <> andp_left1 meth
R27790:27801 VST.msl.seplog <> derives_refl meth
R27865:27876 VST.msl.seplog <> corable_andp meth
R27886:27897 VST.msl.seplog <> corable_prop meth
R27907:27925 VST.veric.SeparationLogic <> corable_allp_fun_id thm
R27820:27839 VST.msl.log_normalize <> corable_sepcon_andp1 thm
R27820:27839 VST.msl.log_normalize <> corable_sepcon_andp1 thm
R27865:27876 VST.msl.seplog <> corable_andp meth
R27886:27897 VST.msl.seplog <> corable_prop meth
R27907:27925 VST.veric.SeparationLogic <> corable_allp_fun_id thm
R27820:27839 VST.msl.log_normalize <> corable_sepcon_andp1 thm
R27940:27950 VST.msl.seplog <> sepcon_comm meth
R27953:27971 VST.msl.seplog <> wand_sepcon_adjoint meth
R27940:27950 VST.msl.seplog <> sepcon_comm meth
R27940:27950 VST.msl.seplog <> sepcon_comm meth
R27953:27971 VST.msl.seplog <> wand_sepcon_adjoint meth
R27953:27971 VST.msl.seplog <> wand_sepcon_adjoint meth
R27983:27995 VST.msl.seplog <> derives_trans meth
R27983:27995 VST.msl.seplog <> derives_trans meth
R28024:28042 VST.msl.seplog <> wand_sepcon_adjoint meth
R28024:28042 VST.msl.seplog <> wand_sepcon_adjoint meth
R28024:28042 VST.msl.seplog <> wand_sepcon_adjoint meth
R28053:28069 VST.msl.log_normalize <> modus_ponens_wand thm
R28053:28069 VST.msl.log_normalize <> modus_ponens_wand thm
prf 28084:28094 <> exp_ENTAILL
binder 28104:28108 <> Delta:342
binder 28110:28110 <> B:343
R28119:28122 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28130:28133 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28134:28138 VST.veric.mpred <> mpred def
R28123:28129 VST.veric.mpred <> environ ind
R28118:28118 VST.floyd.assert_lemmas <> B:343 var
binder 28113:28113 <> P:344
binder 28115:28115 <> Q:345
R28144:28144 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28220:28226 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28283:28287 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R28251:28255 VST.msl.seplog <> ::logic:x_'&&'_x not
R28282:28282 VST.msl.seplog <> ::logic:x_'&&'_x not
R28227:28231 VST.veric.SeparationLogic <> local def
R28234:28243 VST.veric.SeparationLogic <> tc_environ def
R28245:28249 VST.floyd.assert_lemmas <> Delta:342 var
R28273:28276 VST.msl.seplog <> ::logic:x_'&&'_x not
R28256:28266 VST.veric.SeparationLogic <> allp_fun_id def
R28268:28272 VST.floyd.assert_lemmas <> Delta:342 var
R28277:28279 VST.msl.seplog <> exp meth
R28281:28281 VST.floyd.assert_lemmas <> P:344 var
R28288:28290 VST.msl.seplog <> exp meth
R28292:28292 VST.floyd.assert_lemmas <> Q:345 var
R28155:28155 VST.floyd.assert_lemmas <> B:343 var
binder 28152:28152 <> x:346
R28212:28216 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R28182:28186 VST.msl.seplog <> ::logic:x_'&&'_x not
R28211:28211 VST.msl.seplog <> ::logic:x_'&&'_x not
R28158:28162 VST.veric.SeparationLogic <> local def
R28165:28174 VST.veric.SeparationLogic <> tc_environ def
R28176:28180 VST.floyd.assert_lemmas <> Delta:342 var
R28204:28207 VST.msl.seplog <> ::logic:x_'&&'_x not
R28187:28197 VST.veric.SeparationLogic <> allp_fun_id def
R28199:28203 VST.floyd.assert_lemmas <> Delta:342 var
R28208:28208 VST.floyd.assert_lemmas <> P:344 var
R28210:28210 VST.floyd.assert_lemmas <> x:346 var
R28217:28217 VST.floyd.assert_lemmas <> Q:345 var
R28219:28219 VST.floyd.assert_lemmas <> x:346 var
R28323:28331 VST.msl.log_normalize <> exp_andp2 thm
R28323:28331 VST.msl.log_normalize <> exp_andp2 thm
R28323:28331 VST.msl.log_normalize <> exp_andp2 thm
R28323:28331 VST.msl.log_normalize <> exp_andp2 thm
R28323:28331 VST.msl.log_normalize <> exp_andp2 thm
R28342:28352 VST.msl.log_normalize <> exp_derives thm
R28342:28352 VST.msl.log_normalize <> exp_derives thm
prf 28373:28384 <> allp_ENTAILL
binder 28394:28398 <> Delta:347
binder 28400:28400 <> B:348
R28409:28412 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28420:28423 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28424:28428 VST.veric.mpred <> mpred def
R28413:28419 VST.veric.mpred <> environ ind
R28408:28408 VST.floyd.assert_lemmas <> B:348 var
binder 28403:28403 <> P:349
binder 28405:28405 <> Q:350
R28434:28434 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28510:28516 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28574:28578 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R28541:28545 VST.msl.seplog <> ::logic:x_'&&'_x not
R28573:28573 VST.msl.seplog <> ::logic:x_'&&'_x not
R28517:28521 VST.veric.SeparationLogic <> local def
R28524:28533 VST.veric.SeparationLogic <> tc_environ def
R28535:28539 VST.floyd.assert_lemmas <> Delta:347 var
R28563:28566 VST.msl.seplog <> ::logic:x_'&&'_x not
R28546:28556 VST.veric.SeparationLogic <> allp_fun_id def
R28558:28562 VST.floyd.assert_lemmas <> Delta:347 var
R28567:28570 VST.msl.seplog <> allp meth
R28572:28572 VST.floyd.assert_lemmas <> P:349 var
R28579:28582 VST.msl.seplog <> allp meth
R28584:28584 VST.floyd.assert_lemmas <> Q:350 var
R28445:28445 VST.floyd.assert_lemmas <> B:348 var
binder 28442:28442 <> x:351
R28502:28506 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R28472:28476 VST.msl.seplog <> ::logic:x_'&&'_x not
R28501:28501 VST.msl.seplog <> ::logic:x_'&&'_x not
R28448:28452 VST.veric.SeparationLogic <> local def
R28455:28464 VST.veric.SeparationLogic <> tc_environ def
R28466:28470 VST.floyd.assert_lemmas <> Delta:347 var
R28494:28497 VST.msl.seplog <> ::logic:x_'&&'_x not
R28477:28487 VST.veric.SeparationLogic <> allp_fun_id def
R28489:28493 VST.floyd.assert_lemmas <> Delta:347 var
R28498:28498 VST.floyd.assert_lemmas <> P:349 var
R28500:28500 VST.floyd.assert_lemmas <> x:351 var
R28507:28507 VST.floyd.assert_lemmas <> Q:350 var
R28509:28509 VST.floyd.assert_lemmas <> x:351 var
R28612:28621 VST.msl.seplog <> allp_right meth
R28612:28621 VST.msl.seplog <> allp_right meth
R28646:28655 VST.msl.log_normalize <> andp_assoc thm
R28658:28666 VST.msl.log_normalize <> andp_comm thm
R28646:28655 VST.msl.log_normalize <> andp_assoc thm
R28646:28655 VST.msl.log_normalize <> andp_assoc thm
R28658:28666 VST.msl.log_normalize <> andp_comm thm
R28658:28666 VST.msl.log_normalize <> andp_comm thm
R28677:28692 VST.msl.seplog <> imp_andp_adjoint meth
R28677:28692 VST.msl.seplog <> imp_andp_adjoint meth
R28703:28711 VST.msl.seplog <> allp_left meth
R28703:28711 VST.msl.seplog <> allp_left meth
R28729:28744 VST.msl.seplog <> imp_andp_adjoint meth
R28729:28744 VST.msl.seplog <> imp_andp_adjoint meth
R28757:28765 VST.msl.log_normalize <> andp_comm thm
R28768:28777 VST.msl.log_normalize <> andp_assoc thm
R28757:28765 VST.msl.log_normalize <> andp_comm thm
R28757:28765 VST.msl.log_normalize <> andp_comm thm
R28768:28777 VST.msl.log_normalize <> andp_assoc thm
R28768:28777 VST.msl.log_normalize <> andp_assoc thm
prf 28803:28815 <> later_ENTAILL
binder 28825:28829 <> Delta:352
binder 28831:28831 <> P:353
binder 28833:28833 <> Q:354
R28896:28901 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28957:28961 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R28926:28930 VST.msl.seplog <> ::logic:x_'&&'_x not
R28956:28956 VST.msl.seplog <> ::logic:x_'&&'_x not
R28902:28906 VST.veric.SeparationLogic <> local def
R28909:28918 VST.veric.SeparationLogic <> tc_environ def
R28920:28924 VST.floyd.assert_lemmas <> Delta:352 var
R28948:28951 VST.msl.seplog <> ::logic:x_'&&'_x not
R28931:28941 VST.veric.SeparationLogic <> allp_fun_id def
R28943:28947 VST.floyd.assert_lemmas <> Delta:352 var
R28952:28954 VST.msl.seplog <> ::logic:'|>'_x not
R28955:28955 VST.floyd.assert_lemmas <> P:353 var
R28962:28964 VST.msl.seplog <> ::logic:'|>'_x not
R28965:28965 VST.floyd.assert_lemmas <> Q:354 var
R28890:28894 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R28862:28866 VST.msl.seplog <> ::logic:x_'&&'_x not
R28889:28889 VST.msl.seplog <> ::logic:x_'&&'_x not
R28838:28842 VST.veric.SeparationLogic <> local def
R28845:28854 VST.veric.SeparationLogic <> tc_environ def
R28856:28860 VST.floyd.assert_lemmas <> Delta:352 var
R28884:28887 VST.msl.seplog <> ::logic:x_'&&'_x not
R28867:28877 VST.veric.SeparationLogic <> allp_fun_id def
R28879:28883 VST.floyd.assert_lemmas <> Delta:352 var
R28888:28888 VST.floyd.assert_lemmas <> P:353 var
R28895:28895 VST.floyd.assert_lemmas <> Q:354 var
R28998:29007 VST.msl.log_normalize <> andp_assoc thm
R28998:29007 VST.msl.log_normalize <> andp_assoc thm
R28998:29007 VST.msl.log_normalize <> andp_assoc thm
R29023:29033 VST.msl.log_normalize <> later_left2 thm
R29023:29033 VST.msl.log_normalize <> later_left2 thm
prf 29051:29068 <> andp_subst_ENTAILL
binder 29078:29082 <> Delta:355
binder 29084:29084 <> P:356
binder 29086:29087 <> P':357
binder 29089:29089 <> Q:358
binder 29091:29092 <> Q':359
binder 29094:29094 <> i:360
binder 29096:29096 <> v:361
binder 29098:29098 <> t:362
R29134:29139 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29220:29225 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29286:29291 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29350:29355 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29426:29430 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R29380:29384 VST.msl.seplog <> ::logic:x_'&&'_x not
R29425:29425 VST.msl.seplog <> ::logic:x_'&&'_x not
R29356:29360 VST.veric.SeparationLogic <> local def
R29363:29372 VST.veric.SeparationLogic <> tc_environ def
R29374:29378 VST.floyd.assert_lemmas <> Delta:355 var
R29402:29406 VST.msl.seplog <> ::logic:x_'&&'_x not
R29424:29424 VST.msl.seplog <> ::logic:x_'&&'_x not
R29385:29395 VST.veric.SeparationLogic <> allp_fun_id def
R29397:29401 VST.floyd.assert_lemmas <> Delta:355 var
R29409:29412 VST.msl.seplog <> ::logic:x_'&&'_x not
R29407:29408 VST.floyd.assert_lemmas <> P':357 var
R29413:29417 VST.veric.seplog <> subst def
R29423:29423 VST.floyd.assert_lemmas <> P:356 var
R29421:29421 VST.floyd.assert_lemmas <> v:361 var
R29419:29419 VST.floyd.assert_lemmas <> i:360 var
R29433:29436 VST.msl.seplog <> ::logic:x_'&&'_x not
R29431:29432 VST.floyd.assert_lemmas <> Q':359 var
R29437:29441 VST.veric.seplog <> subst def
R29447:29447 VST.floyd.assert_lemmas <> Q:358 var
R29445:29445 VST.floyd.assert_lemmas <> v:361 var
R29443:29443 VST.floyd.assert_lemmas <> i:360 var
R29344:29348 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R29316:29320 VST.msl.seplog <> ::logic:x_'&&'_x not
R29343:29343 VST.msl.seplog <> ::logic:x_'&&'_x not
R29292:29296 VST.veric.SeparationLogic <> local def
R29299:29308 VST.veric.SeparationLogic <> tc_environ def
R29310:29314 VST.floyd.assert_lemmas <> Delta:355 var
R29338:29341 VST.msl.seplog <> ::logic:x_'&&'_x not
R29321:29331 VST.veric.SeparationLogic <> allp_fun_id def
R29333:29337 VST.floyd.assert_lemmas <> Delta:355 var
R29342:29342 VST.floyd.assert_lemmas <> P:356 var
R29349:29349 VST.floyd.assert_lemmas <> Q:358 var
R29279:29283 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R29250:29254 VST.msl.seplog <> ::logic:x_'&&'_x not
R29278:29278 VST.msl.seplog <> ::logic:x_'&&'_x not
R29226:29230 VST.veric.SeparationLogic <> local def
R29233:29242 VST.veric.SeparationLogic <> tc_environ def
R29244:29248 VST.floyd.assert_lemmas <> Delta:355 var
R29272:29275 VST.msl.seplog <> ::logic:x_'&&'_x not
R29255:29265 VST.veric.SeparationLogic <> allp_fun_id def
R29267:29271 VST.floyd.assert_lemmas <> Delta:355 var
R29276:29277 VST.floyd.assert_lemmas <> P':357 var
R29284:29285 VST.floyd.assert_lemmas <> Q':359 var
R29193:29197 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R29164:29168 VST.msl.seplog <> ::logic:x_'&&'_x not
R29192:29192 VST.msl.seplog <> ::logic:x_'&&'_x not
R29140:29144 VST.veric.SeparationLogic <> local def
R29147:29156 VST.veric.SeparationLogic <> tc_environ def
R29158:29162 VST.floyd.assert_lemmas <> Delta:355 var
R29186:29189 VST.msl.seplog <> ::logic:x_'&&'_x not
R29169:29179 VST.veric.SeparationLogic <> allp_fun_id def
R29181:29185 VST.floyd.assert_lemmas <> Delta:355 var
R29190:29191 VST.floyd.assert_lemmas <> P':357 var
R29198:29202 VST.veric.SeparationLogic <> local def
R29205:29206 VST.veric.lift LiftNotation :::'`('_x_')' not
R29216:29218 VST.veric.lift LiftNotation :::'`('_x_')' not
R29207:29213 VST.veric.Cop2 <> tc_val' def
R29215:29215 VST.floyd.assert_lemmas <> t:362 var
R29218:29218 VST.floyd.assert_lemmas <> v:361 var
R29125:29127 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29103:29103 compcert.lib.Maps <> :::x_'!'_x not
R29120:29123 compcert.lib.Maps <> :::x_'!'_x not
R29124:29124 VST.floyd.assert_lemmas <> i:360 var
R29104:29113 VST.veric.seplog <> temp_types def
R29115:29119 VST.floyd.assert_lemmas <> Delta:355 var
R29128:29131 Coq.Init.Datatypes <> Some constr
R29133:29133 VST.floyd.assert_lemmas <> t:362 var
R29476:29488 VST.veric.SeparationLogic <> subst_derives thm
R29476:29488 VST.veric.SeparationLogic <> subst_derives thm
R29543:29555 VST.msl.seplog <> derives_trans meth
R29567:29578 VST.msl.log_normalize <> andp_derives thm
R29543:29555 VST.msl.seplog <> derives_trans meth
R29567:29578 VST.msl.log_normalize <> andp_derives thm
R29610:29619 VST.msl.seplog <> andp_right meth
R29610:29619 VST.msl.seplog <> andp_right meth
R29610:29619 VST.msl.seplog <> andp_right meth
R29610:29619 VST.msl.seplog <> andp_right meth
R29610:29619 VST.msl.seplog <> andp_right meth
R29610:29619 VST.msl.seplog <> andp_right meth
R29610:29619 VST.msl.seplog <> andp_right meth
R29610:29619 VST.msl.seplog <> andp_right meth
R29610:29619 VST.msl.seplog <> andp_right meth
R29610:29619 VST.msl.seplog <> andp_right meth
R29610:29619 VST.msl.seplog <> andp_right meth
R29610:29619 VST.msl.seplog <> andp_right meth
R29652:29661 VST.msl.log_normalize <> andp_assoc thm
R29670:29679 VST.msl.seplog <> andp_left1 meth
R29690:29699 VST.msl.log_normalize <> andp_assoc thm
R29652:29661 VST.msl.log_normalize <> andp_assoc thm
R29652:29661 VST.msl.log_normalize <> andp_assoc thm
R29652:29661 VST.msl.log_normalize <> andp_assoc thm
R29652:29661 VST.msl.log_normalize <> andp_assoc thm
R29670:29679 VST.msl.seplog <> andp_left1 meth
R29690:29699 VST.msl.log_normalize <> andp_assoc thm
R29690:29699 VST.msl.log_normalize <> andp_assoc thm
R29713:29720 VST.msl.log_normalize <> add_andp thm
R29713:29720 VST.msl.log_normalize <> add_andp thm
R29713:29720 VST.msl.log_normalize <> add_andp thm
R29740:29744 VST.veric.SeparationLogic <> local def
R29747:29751 VST.veric.mpred <> lift1 def
R29822:29831 VST.msl.seplog <> prop_right meth
R29822:29831 VST.msl.seplog <> prop_right meth
R29843:29847 VST.veric.seplog <> subst def
R29850:29856 VST.veric.mpred <> env_set def
R30020:30029 Coq.PArith.BinPos Pos eq_dec thm
R30020:30029 Coq.PArith.BinPos Pos eq_dec thm
R30061:30067 VST.veric.mpred Map gss thm
R30061:30067 VST.veric.mpred Map gss thm
R30061:30067 VST.veric.mpred Map gss thm
R30085:30093 VST.veric.mpred <> mkEnviron constr
R30085:30093 VST.veric.mpred <> mkEnviron constr
R30189:30195 VST.veric.mpred Map gso thm
R30189:30195 VST.veric.mpred Map gso thm
R30189:30195 VST.veric.mpred Map gso thm
prf 30228:30249 <> derives_bupd_bupd_left
binder 30259:30260 <> TC:363
binder 30262:30262 <> P:364
binder 30264:30264 <> Q:365
R30293:30298 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30299:30299 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R30318:30323 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R30308:30311 VST.msl.seplog <> ::logic:x_'&&'_x not
R30300:30304 VST.veric.SeparationLogic <> local def
R30306:30307 VST.floyd.assert_lemmas <> TC:363 var
R30312:30316 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R30317:30317 VST.floyd.assert_lemmas <> P:364 var
R30324:30328 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R30329:30329 VST.floyd.assert_lemmas <> Q:365 var
R30282:30286 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R30277:30280 VST.msl.seplog <> ::logic:x_'&&'_x not
R30269:30273 VST.veric.SeparationLogic <> local def
R30275:30276 VST.floyd.assert_lemmas <> TC:363 var
R30281:30281 VST.floyd.assert_lemmas <> P:364 var
R30287:30291 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R30292:30292 VST.floyd.assert_lemmas <> Q:365 var
R30358:30370 VST.msl.seplog <> derives_trans meth
R30380:30394 VST.floyd.assert_lemmas <> local_andp_bupd thm
R30358:30370 VST.msl.seplog <> derives_trans meth
R30380:30394 VST.floyd.assert_lemmas <> local_andp_bupd thm
R30409:30421 VST.msl.seplog <> derives_trans meth
R30431:30439 VST.msl.ghost_seplog <> bupd_mono meth
R30409:30421 VST.msl.seplog <> derives_trans meth
R30431:30439 VST.msl.ghost_seplog <> bupd_mono meth
R30456:30465 VST.msl.ghost_seplog <> bupd_trans meth
R30456:30465 VST.msl.ghost_seplog <> bupd_trans meth
prf 30480:30503 <> derives_bupd0_bupd0_left
binder 30513:30514 <> TC:366
binder 30516:30516 <> P:367
binder 30518:30518 <> Q:368
R30556:30561 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30562:30562 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R30590:30595 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R30571:30574 VST.msl.seplog <> ::logic:x_'&&'_x not
R30563:30567 VST.veric.SeparationLogic <> local def
R30569:30570 VST.floyd.assert_lemmas <> TC:366 var
R30575:30579 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R30585:30588 VST.msl.seplog <> ::logic:x_'||'_x not
R30580:30582 VST.msl.seplog <> ::logic:'|>'_x not
R30583:30584 VST.msl.seplog <> FF meth
R30589:30589 VST.floyd.assert_lemmas <> P:367 var
R30596:30600 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R30606:30609 VST.msl.seplog <> ::logic:x_'||'_x not
R30601:30603 VST.msl.seplog <> ::logic:'|>'_x not
R30604:30605 VST.msl.seplog <> FF meth
R30610:30610 VST.floyd.assert_lemmas <> Q:368 var
R30536:30540 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R30531:30534 VST.msl.seplog <> ::logic:x_'&&'_x not
R30523:30527 VST.veric.SeparationLogic <> local def
R30529:30530 VST.floyd.assert_lemmas <> TC:366 var
R30535:30535 VST.floyd.assert_lemmas <> P:367 var
R30541:30545 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R30551:30554 VST.msl.seplog <> ::logic:x_'||'_x not
R30546:30548 VST.msl.seplog <> ::logic:'|>'_x not
R30549:30550 VST.msl.seplog <> FF meth
R30555:30555 VST.floyd.assert_lemmas <> Q:368 var
R30638:30659 VST.floyd.assert_lemmas <> derives_bupd_bupd_left thm
R30638:30659 VST.floyd.assert_lemmas <> derives_bupd_bupd_left thm
R30672:30680 VST.msl.log_normalize <> andp_comm thm
R30683:30698 VST.msl.log_normalize <> distrib_orp_andp thm
R30703:30711 VST.msl.log_normalize <> andp_comm thm
R30716:30720 VST.veric.SeparationLogic <> local def
R30672:30680 VST.msl.log_normalize <> andp_comm thm
R30672:30680 VST.msl.log_normalize <> andp_comm thm
R30683:30698 VST.msl.log_normalize <> distrib_orp_andp thm
R30683:30698 VST.msl.log_normalize <> distrib_orp_andp thm
R30703:30711 VST.msl.log_normalize <> andp_comm thm
R30716:30720 VST.veric.SeparationLogic <> local def
R30703:30711 VST.msl.log_normalize <> andp_comm thm
R30716:30720 VST.veric.SeparationLogic <> local def
R30703:30711 VST.msl.log_normalize <> andp_comm thm
R30716:30720 VST.veric.SeparationLogic <> local def
R30703:30711 VST.msl.log_normalize <> andp_comm thm
R30716:30720 VST.veric.SeparationLogic <> local def
R30735:30742 VST.msl.seplog <> orp_left meth
R30735:30742 VST.msl.seplog <> orp_left meth
R30755:30764 VST.msl.seplog <> andp_left2 meth
R30755:30764 VST.msl.seplog <> andp_left2 meth
R30778:30790 VST.msl.seplog <> derives_trans meth
R30802:30811 VST.msl.ghost_seplog <> bupd_intro meth
R30778:30790 VST.msl.seplog <> derives_trans meth
R30802:30811 VST.msl.ghost_seplog <> bupd_intro meth
R30825:30834 VST.msl.seplog <> orp_right1 meth
R30825:30834 VST.msl.seplog <> orp_right1 meth
prf 30865:30887 <> derives_full_bupd0_left
binder 30897:30901 <> Delta:369
binder 30903:30903 <> P:370
binder 30905:30905 <> Q:371
R30982:30987 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31054:31058 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R31012:31016 VST.msl.seplog <> ::logic:x_'&&'_x not
R31053:31053 VST.msl.seplog <> ::logic:x_'&&'_x not
R30988:30992 VST.veric.SeparationLogic <> local def
R30995:31004 VST.veric.SeparationLogic <> tc_environ def
R31006:31010 VST.floyd.assert_lemmas <> Delta:369 var
R31034:31037 VST.msl.seplog <> ::logic:x_'&&'_x not
R31017:31027 VST.veric.SeparationLogic <> allp_fun_id def
R31029:31033 VST.floyd.assert_lemmas <> Delta:369 var
R31038:31042 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R31048:31051 VST.msl.seplog <> ::logic:x_'||'_x not
R31043:31045 VST.msl.seplog <> ::logic:'|>'_x not
R31046:31047 VST.msl.seplog <> FF meth
R31052:31052 VST.floyd.assert_lemmas <> P:370 var
R31059:31063 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R31069:31072 VST.msl.seplog <> ::logic:x_'||'_x not
R31064:31066 VST.msl.seplog <> ::logic:'|>'_x not
R31067:31068 VST.msl.seplog <> FF meth
R31073:31073 VST.floyd.assert_lemmas <> Q:371 var
R30962:30966 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R30934:30938 VST.msl.seplog <> ::logic:x_'&&'_x not
R30961:30961 VST.msl.seplog <> ::logic:x_'&&'_x not
R30910:30914 VST.veric.SeparationLogic <> local def
R30917:30926 VST.veric.SeparationLogic <> tc_environ def
R30928:30932 VST.floyd.assert_lemmas <> Delta:369 var
R30956:30959 VST.msl.seplog <> ::logic:x_'&&'_x not
R30939:30949 VST.veric.SeparationLogic <> allp_fun_id def
R30951:30955 VST.floyd.assert_lemmas <> Delta:369 var
R30960:30960 VST.floyd.assert_lemmas <> P:370 var
R30967:30971 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R30977:30980 VST.msl.seplog <> ::logic:x_'||'_x not
R30972:30974 VST.msl.seplog <> ::logic:'|>'_x not
R30975:30976 VST.msl.seplog <> FF meth
R30981:30981 VST.floyd.assert_lemmas <> Q:371 var
R31106:31115 VST.msl.log_normalize <> andp_assoc thm
R31106:31115 VST.msl.log_normalize <> andp_assoc thm
R31106:31115 VST.msl.log_normalize <> andp_assoc thm
R31137:31149 VST.msl.seplog <> derives_trans meth
R31159:31175 VST.floyd.assert_lemmas <> corable_andp_bupd thm
R31198:31209 VST.msl.seplog <> corable_andp meth
R31219:31230 VST.msl.seplog <> corable_prop meth
R31240:31258 VST.veric.SeparationLogic <> corable_allp_fun_id thm
R31137:31149 VST.msl.seplog <> derives_trans meth
R31159:31175 VST.floyd.assert_lemmas <> corable_andp_bupd thm
R31198:31209 VST.msl.seplog <> corable_andp meth
R31219:31230 VST.msl.seplog <> corable_prop meth
R31240:31258 VST.veric.SeparationLogic <> corable_allp_fun_id thm
R31274:31286 VST.msl.seplog <> derives_trans meth
R31296:31304 VST.msl.ghost_seplog <> bupd_mono meth
R31314:31323 VST.msl.ghost_seplog <> bupd_trans meth
R31274:31286 VST.msl.seplog <> derives_trans meth
R31296:31304 VST.msl.ghost_seplog <> bupd_mono meth
R31314:31323 VST.msl.ghost_seplog <> bupd_trans meth
R31337:31345 VST.msl.log_normalize <> andp_comm thm
R31348:31363 VST.msl.log_normalize <> distrib_orp_andp thm
R31368:31376 VST.msl.log_normalize <> andp_comm thm
R31382:31385 VST.msl.seplog <> ::logic:x_'&&'_x not
R31337:31345 VST.msl.log_normalize <> andp_comm thm
R31337:31345 VST.msl.log_normalize <> andp_comm thm
R31348:31363 VST.msl.log_normalize <> distrib_orp_andp thm
R31348:31363 VST.msl.log_normalize <> distrib_orp_andp thm
R31368:31376 VST.msl.log_normalize <> andp_comm thm
R31382:31385 VST.msl.seplog <> ::logic:x_'&&'_x not
R31368:31376 VST.msl.log_normalize <> andp_comm thm
R31382:31385 VST.msl.seplog <> ::logic:x_'&&'_x not
R31368:31376 VST.msl.log_normalize <> andp_comm thm
R31382:31385 VST.msl.seplog <> ::logic:x_'&&'_x not
R31368:31376 VST.msl.log_normalize <> andp_comm thm
R31382:31385 VST.msl.seplog <> ::logic:x_'&&'_x not
R31399:31406 VST.msl.seplog <> orp_left meth
R31399:31406 VST.msl.seplog <> orp_left meth
R31419:31428 VST.msl.seplog <> andp_left2 meth
R31419:31428 VST.msl.seplog <> andp_left2 meth
R31442:31454 VST.msl.seplog <> derives_trans meth
R31466:31475 VST.msl.ghost_seplog <> bupd_intro meth
R31442:31454 VST.msl.seplog <> derives_trans meth
R31466:31475 VST.msl.ghost_seplog <> bupd_intro meth
R31489:31498 VST.msl.seplog <> orp_right1 meth
R31489:31498 VST.msl.seplog <> orp_right1 meth
R31561:31572 VST.floyd.assert_lemmas <> ENTAIL_trans thm
R31638:31644 VST.msl.seplog <> derives meth
R31688:31691 VST.msl.seplog <> ::logic:x_'&&'_x not
R31668:31672 VST.veric.SeparationLogic <> local def
R31675:31684 VST.veric.SeparationLogic <> tc_environ def
R31654:31657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31658:31662 VST.veric.mpred <> mpred def
R31647:31653 VST.veric.mpred <> environ ind
R31638:31644 VST.msl.seplog <> derives meth
R31688:31691 VST.msl.seplog <> ::logic:x_'&&'_x not
R31668:31672 VST.veric.SeparationLogic <> local def
R31675:31684 VST.veric.SeparationLogic <> tc_environ def
R31654:31657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31658:31662 VST.veric.mpred <> mpred def
R31647:31653 VST.veric.mpred <> environ ind
R31761:31772 VST.floyd.assert_lemmas <> ENTAIL_trans thm
R31782:31795 VST.floyd.assert_lemmas <> derives_ENTAIL thm
R31713:31724 VST.floyd.assert_lemmas <> ENTAIL_trans thm
R31866:31872 VST.msl.seplog <> derives meth
R31924:31928 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R31916:31919 VST.msl.seplog <> ::logic:x_'&&'_x not
R31896:31900 VST.veric.SeparationLogic <> local def
R31903:31912 VST.veric.SeparationLogic <> tc_environ def
R31882:31885 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31886:31890 VST.veric.mpred <> mpred def
R31875:31881 VST.veric.mpred <> environ ind
R31866:31872 VST.msl.seplog <> derives meth
R31924:31928 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R31916:31919 VST.msl.seplog <> ::logic:x_'&&'_x not
R31896:31900 VST.veric.SeparationLogic <> local def
R31903:31912 VST.veric.SeparationLogic <> tc_environ def
R31882:31885 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31886:31890 VST.veric.mpred <> mpred def
R31875:31881 VST.veric.mpred <> environ ind
R31985:31991 VST.msl.seplog <> derives meth
R32035:32038 VST.msl.seplog <> ::logic:x_'&&'_x not
R32015:32019 VST.veric.SeparationLogic <> local def
R32022:32031 VST.veric.SeparationLogic <> tc_environ def
R32001:32004 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32005:32009 VST.veric.mpred <> mpred def
R31994:32000 VST.veric.mpred <> environ ind
R31985:31991 VST.msl.seplog <> derives meth
R32035:32038 VST.msl.seplog <> ::logic:x_'&&'_x not
R32015:32019 VST.veric.SeparationLogic <> local def
R32022:32031 VST.veric.SeparationLogic <> tc_environ def
R32001:32004 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32005:32009 VST.veric.mpred <> mpred def
R31994:32000 VST.veric.mpred <> environ ind
R32135:32152 VST.floyd.assert_lemmas <> derives_bupd_trans thm
R32162:32180 VST.floyd.assert_lemmas <> ENTAIL_derives_bupd thm
R32183:32196 VST.floyd.assert_lemmas <> derives_ENTAIL thm
R32060:32077 VST.floyd.assert_lemmas <> derives_bupd_trans thm
R32087:32105 VST.floyd.assert_lemmas <> ENTAIL_derives_bupd thm
R31948:31965 VST.floyd.assert_lemmas <> derives_bupd_trans thm
R32268:32274 VST.msl.seplog <> derives meth
R32326:32330 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R32336:32339 VST.msl.seplog <> ::logic:x_'||'_x not
R32331:32333 VST.msl.seplog <> ::logic:'|>'_x not
R32334:32335 VST.msl.seplog <> FF meth
R32318:32321 VST.msl.seplog <> ::logic:x_'&&'_x not
R32298:32302 VST.veric.SeparationLogic <> local def
R32305:32314 VST.veric.SeparationLogic <> tc_environ def
R32284:32287 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32288:32292 VST.veric.mpred <> mpred def
R32277:32283 VST.veric.mpred <> environ ind
R32268:32274 VST.msl.seplog <> derives meth
R32326:32330 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R32336:32339 VST.msl.seplog <> ::logic:x_'||'_x not
R32331:32333 VST.msl.seplog <> ::logic:'|>'_x not
R32334:32335 VST.msl.seplog <> FF meth
R32318:32321 VST.msl.seplog <> ::logic:x_'&&'_x not
R32298:32302 VST.veric.SeparationLogic <> local def
R32305:32314 VST.veric.SeparationLogic <> tc_environ def
R32284:32287 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32288:32292 VST.veric.mpred <> mpred def
R32277:32283 VST.veric.mpred <> environ ind
R32397:32403 VST.msl.seplog <> derives meth
R32455:32459 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R32447:32450 VST.msl.seplog <> ::logic:x_'&&'_x not
R32427:32431 VST.veric.SeparationLogic <> local def
R32434:32443 VST.veric.SeparationLogic <> tc_environ def
R32413:32416 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32417:32421 VST.veric.mpred <> mpred def
R32406:32412 VST.veric.mpred <> environ ind
R32397:32403 VST.msl.seplog <> derives meth
R32455:32459 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R32447:32450 VST.msl.seplog <> ::logic:x_'&&'_x not
R32427:32431 VST.veric.SeparationLogic <> local def
R32434:32443 VST.veric.SeparationLogic <> tc_environ def
R32413:32416 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32417:32421 VST.veric.mpred <> mpred def
R32406:32412 VST.veric.mpred <> environ ind
R32545:32551 VST.msl.seplog <> derives meth
R32595:32598 VST.msl.seplog <> ::logic:x_'&&'_x not
R32575:32579 VST.veric.SeparationLogic <> local def
R32582:32591 VST.veric.SeparationLogic <> tc_environ def
R32561:32564 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32565:32569 VST.veric.mpred <> mpred def
R32554:32560 VST.veric.mpred <> environ ind
R32545:32551 VST.msl.seplog <> derives meth
R32595:32598 VST.msl.seplog <> ::logic:x_'&&'_x not
R32575:32579 VST.veric.SeparationLogic <> local def
R32582:32591 VST.veric.SeparationLogic <> tc_environ def
R32561:32564 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32565:32569 VST.veric.mpred <> mpred def
R32554:32560 VST.veric.mpred <> environ ind
R32724:32742 VST.floyd.assert_lemmas <> derives_bupd0_trans thm
R32752:32777 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R32780:32798 VST.floyd.assert_lemmas <> ENTAIL_derives_bupd thm
R32801:32814 VST.floyd.assert_lemmas <> derives_ENTAIL thm
R32620:32638 VST.floyd.assert_lemmas <> derives_bupd0_trans thm
R32648:32673 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R32676:32694 VST.floyd.assert_lemmas <> ENTAIL_derives_bupd thm
R32479:32497 VST.floyd.assert_lemmas <> derives_bupd0_trans thm
R32507:32532 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R32359:32377 VST.floyd.assert_lemmas <> derives_bupd0_trans thm
R32885:32891 VST.msl.seplog <> derives meth
R32972:32976 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R32982:32985 VST.msl.seplog <> ::logic:x_'||'_x not
R32977:32979 VST.msl.seplog <> ::logic:'|>'_x not
R32980:32981 VST.msl.seplog <> FF meth
R32940:32944 VST.msl.seplog <> ::logic:x_'&&'_x not
R32968:32968 VST.msl.seplog <> ::logic:x_'&&'_x not
R32915:32919 VST.veric.SeparationLogic <> local def
R32922:32931 VST.veric.SeparationLogic <> tc_environ def
R32963:32966 VST.msl.seplog <> ::logic:x_'&&'_x not
R32945:32955 VST.veric.SeparationLogic <> allp_fun_id def
R32901:32904 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32905:32909 VST.veric.mpred <> mpred def
R32894:32900 VST.veric.mpred <> environ ind
R32885:32891 VST.msl.seplog <> derives meth
R32972:32976 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R32982:32985 VST.msl.seplog <> ::logic:x_'||'_x not
R32977:32979 VST.msl.seplog <> ::logic:'|>'_x not
R32980:32981 VST.msl.seplog <> FF meth
R32940:32944 VST.msl.seplog <> ::logic:x_'&&'_x not
R32968:32968 VST.msl.seplog <> ::logic:x_'&&'_x not
R32915:32919 VST.veric.SeparationLogic <> local def
R32922:32931 VST.veric.SeparationLogic <> tc_environ def
R32963:32966 VST.msl.seplog <> ::logic:x_'&&'_x not
R32945:32955 VST.veric.SeparationLogic <> allp_fun_id def
R32901:32904 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32905:32909 VST.veric.mpred <> mpred def
R32894:32900 VST.veric.mpred <> environ ind
R33042:33048 VST.msl.seplog <> derives meth
R33100:33104 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R33110:33113 VST.msl.seplog <> ::logic:x_'||'_x not
R33105:33107 VST.msl.seplog <> ::logic:'|>'_x not
R33108:33109 VST.msl.seplog <> FF meth
R33092:33095 VST.msl.seplog <> ::logic:x_'&&'_x not
R33072:33076 VST.veric.SeparationLogic <> local def
R33079:33088 VST.veric.SeparationLogic <> tc_environ def
R33058:33061 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33062:33066 VST.veric.mpred <> mpred def
R33051:33057 VST.veric.mpred <> environ ind
R33042:33048 VST.msl.seplog <> derives meth
R33100:33104 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R33110:33113 VST.msl.seplog <> ::logic:x_'||'_x not
R33105:33107 VST.msl.seplog <> ::logic:'|>'_x not
R33108:33109 VST.msl.seplog <> FF meth
R33092:33095 VST.msl.seplog <> ::logic:x_'&&'_x not
R33072:33076 VST.veric.SeparationLogic <> local def
R33079:33088 VST.veric.SeparationLogic <> tc_environ def
R33058:33061 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33062:33066 VST.veric.mpred <> mpred def
R33051:33057 VST.veric.mpred <> environ ind
R33198:33204 VST.msl.seplog <> derives meth
R33256:33260 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R33248:33251 VST.msl.seplog <> ::logic:x_'&&'_x not
R33228:33232 VST.veric.SeparationLogic <> local def
R33235:33244 VST.veric.SeparationLogic <> tc_environ def
R33214:33217 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33218:33222 VST.veric.mpred <> mpred def
R33207:33213 VST.veric.mpred <> environ ind
R33198:33204 VST.msl.seplog <> derives meth
R33256:33260 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R33248:33251 VST.msl.seplog <> ::logic:x_'&&'_x not
R33228:33232 VST.veric.SeparationLogic <> local def
R33235:33244 VST.veric.SeparationLogic <> tc_environ def
R33214:33217 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33218:33222 VST.veric.mpred <> mpred def
R33207:33213 VST.veric.mpred <> environ ind
R33373:33379 VST.msl.seplog <> derives meth
R33423:33426 VST.msl.seplog <> ::logic:x_'&&'_x not
R33403:33407 VST.veric.SeparationLogic <> local def
R33410:33419 VST.veric.SeparationLogic <> tc_environ def
R33389:33392 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33393:33397 VST.veric.mpred <> mpred def
R33382:33388 VST.veric.mpred <> environ ind
R33373:33379 VST.msl.seplog <> derives meth
R33423:33426 VST.msl.seplog <> ::logic:x_'&&'_x not
R33403:33407 VST.veric.SeparationLogic <> local def
R33410:33419 VST.veric.SeparationLogic <> tc_environ def
R33389:33392 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33393:33397 VST.veric.mpred <> mpred def
R33382:33388 VST.veric.mpred <> environ ind
R33579:33596 VST.floyd.assert_lemmas <> derives_full_trans thm
R33606:33631 VST.floyd.assert_lemmas <> derives_bupd0_derives_full thm
R33634:33659 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R33662:33680 VST.floyd.assert_lemmas <> ENTAIL_derives_bupd thm
R33683:33696 VST.floyd.assert_lemmas <> derives_ENTAIL thm
R33448:33465 VST.floyd.assert_lemmas <> derives_full_trans thm
R33475:33500 VST.floyd.assert_lemmas <> derives_bupd0_derives_full thm
R33503:33528 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R33531:33549 VST.floyd.assert_lemmas <> ENTAIL_derives_bupd thm
R33280:33297 VST.floyd.assert_lemmas <> derives_full_trans thm
R33307:33332 VST.floyd.assert_lemmas <> derives_bupd0_derives_full thm
R33335:33360 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R33133:33150 VST.floyd.assert_lemmas <> derives_full_trans thm
R33160:33185 VST.floyd.assert_lemmas <> derives_bupd0_derives_full thm
R33005:33022 VST.floyd.assert_lemmas <> derives_full_trans thm
R33790:33796 VST.msl.seplog <> derives meth
R33877:33881 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R33887:33890 VST.msl.seplog <> ::logic:x_'||'_x not
R33882:33884 VST.msl.seplog <> ::logic:'|>'_x not
R33885:33886 VST.msl.seplog <> FF meth
R33845:33849 VST.msl.seplog <> ::logic:x_'&&'_x not
R33873:33873 VST.msl.seplog <> ::logic:x_'&&'_x not
R33820:33824 VST.veric.SeparationLogic <> local def
R33827:33836 VST.veric.SeparationLogic <> tc_environ def
R33868:33871 VST.msl.seplog <> ::logic:x_'&&'_x not
R33850:33860 VST.veric.SeparationLogic <> allp_fun_id def
R33806:33809 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33810:33814 VST.veric.mpred <> mpred def
R33799:33805 VST.veric.mpred <> environ ind
R33790:33796 VST.msl.seplog <> derives meth
R33877:33881 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R33887:33890 VST.msl.seplog <> ::logic:x_'||'_x not
R33882:33884 VST.msl.seplog <> ::logic:'|>'_x not
R33885:33886 VST.msl.seplog <> FF meth
R33845:33849 VST.msl.seplog <> ::logic:x_'&&'_x not
R33873:33873 VST.msl.seplog <> ::logic:x_'&&'_x not
R33820:33824 VST.veric.SeparationLogic <> local def
R33827:33836 VST.veric.SeparationLogic <> tc_environ def
R33868:33871 VST.msl.seplog <> ::logic:x_'&&'_x not
R33850:33860 VST.veric.SeparationLogic <> allp_fun_id def
R33806:33809 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33810:33814 VST.veric.mpred <> mpred def
R33799:33805 VST.veric.mpred <> environ ind
R33933:33939 VST.msl.seplog <> derives meth
R33991:33995 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R34001:34004 VST.msl.seplog <> ::logic:x_'||'_x not
R33996:33998 VST.msl.seplog <> ::logic:'|>'_x not
R33999:34000 VST.msl.seplog <> FF meth
R33983:33986 VST.msl.seplog <> ::logic:x_'&&'_x not
R33963:33967 VST.veric.SeparationLogic <> local def
R33970:33979 VST.veric.SeparationLogic <> tc_environ def
R33949:33952 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33953:33957 VST.veric.mpred <> mpred def
R33942:33948 VST.veric.mpred <> environ ind
R33933:33939 VST.msl.seplog <> derives meth
R33991:33995 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R34001:34004 VST.msl.seplog <> ::logic:x_'||'_x not
R33996:33998 VST.msl.seplog <> ::logic:'|>'_x not
R33999:34000 VST.msl.seplog <> FF meth
R33983:33986 VST.msl.seplog <> ::logic:x_'&&'_x not
R33963:33967 VST.veric.SeparationLogic <> local def
R33970:33979 VST.veric.SeparationLogic <> tc_environ def
R33949:33952 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33953:33957 VST.veric.mpred <> mpred def
R33942:33948 VST.veric.mpred <> environ ind
R34048:34054 VST.msl.seplog <> derives meth
R34106:34110 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R34098:34101 VST.msl.seplog <> ::logic:x_'&&'_x not
R34078:34082 VST.veric.SeparationLogic <> local def
R34085:34094 VST.veric.SeparationLogic <> tc_environ def
R34064:34067 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34068:34072 VST.veric.mpred <> mpred def
R34057:34063 VST.veric.mpred <> environ ind
R34048:34054 VST.msl.seplog <> derives meth
R34106:34110 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R34098:34101 VST.msl.seplog <> ::logic:x_'&&'_x not
R34078:34082 VST.veric.SeparationLogic <> local def
R34085:34094 VST.veric.SeparationLogic <> tc_environ def
R34064:34067 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34068:34072 VST.veric.mpred <> mpred def
R34057:34063 VST.veric.mpred <> environ ind
R34153:34159 VST.msl.seplog <> derives meth
R34203:34206 VST.msl.seplog <> ::logic:x_'&&'_x not
R34183:34187 VST.veric.SeparationLogic <> local def
R34190:34199 VST.veric.SeparationLogic <> tc_environ def
R34169:34172 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34173:34177 VST.veric.mpred <> mpred def
R34162:34168 VST.veric.mpred <> environ ind
R34153:34159 VST.msl.seplog <> derives meth
R34203:34206 VST.msl.seplog <> ::logic:x_'&&'_x not
R34183:34187 VST.veric.SeparationLogic <> local def
R34190:34199 VST.veric.SeparationLogic <> tc_environ def
R34169:34172 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34173:34177 VST.veric.mpred <> mpred def
R34162:34168 VST.veric.mpred <> environ ind
R34325:34337 VST.msl.seplog <> derives_trans meth
R34403:34409 VST.msl.seplog <> derives meth
R34453:34456 VST.msl.seplog <> ::logic:x_'&&'_x not
R34433:34437 VST.veric.SeparationLogic <> local def
R34440:34449 VST.veric.SeparationLogic <> tc_environ def
R34419:34422 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34423:34427 VST.veric.mpred <> mpred def
R34412:34418 VST.veric.mpred <> environ ind
R34403:34409 VST.msl.seplog <> derives meth
R34453:34456 VST.msl.seplog <> ::logic:x_'&&'_x not
R34433:34437 VST.veric.SeparationLogic <> local def
R34440:34449 VST.veric.SeparationLogic <> tc_environ def
R34419:34422 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34423:34427 VST.veric.mpred <> mpred def
R34412:34418 VST.veric.mpred <> environ ind
R34526:34537 VST.floyd.assert_lemmas <> ENTAIL_trans thm
R34549:34562 VST.floyd.assert_lemmas <> derives_ENTAIL thm
R34478:34489 VST.floyd.assert_lemmas <> ENTAIL_trans thm
R34631:34637 VST.msl.seplog <> derives meth
R34689:34693 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R34681:34684 VST.msl.seplog <> ::logic:x_'&&'_x not
R34661:34665 VST.veric.SeparationLogic <> local def
R34668:34677 VST.veric.SeparationLogic <> tc_environ def
R34647:34650 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34651:34655 VST.veric.mpred <> mpred def
R34640:34646 VST.veric.mpred <> environ ind
R34631:34637 VST.msl.seplog <> derives meth
R34689:34693 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R34681:34684 VST.msl.seplog <> ::logic:x_'&&'_x not
R34661:34665 VST.veric.SeparationLogic <> local def
R34668:34677 VST.veric.SeparationLogic <> tc_environ def
R34647:34650 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34651:34655 VST.veric.mpred <> mpred def
R34640:34646 VST.veric.mpred <> environ ind
R34750:34756 VST.msl.seplog <> derives meth
R34800:34803 VST.msl.seplog <> ::logic:x_'&&'_x not
R34780:34784 VST.veric.SeparationLogic <> local def
R34787:34796 VST.veric.SeparationLogic <> tc_environ def
R34766:34769 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34770:34774 VST.veric.mpred <> mpred def
R34759:34765 VST.veric.mpred <> environ ind
R34750:34756 VST.msl.seplog <> derives meth
R34800:34803 VST.msl.seplog <> ::logic:x_'&&'_x not
R34780:34784 VST.veric.SeparationLogic <> local def
R34787:34796 VST.veric.SeparationLogic <> tc_environ def
R34766:34769 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34770:34774 VST.veric.mpred <> mpred def
R34759:34765 VST.veric.mpred <> environ ind
R34900:34917 VST.floyd.assert_lemmas <> derives_bupd_trans thm
R34929:34947 VST.floyd.assert_lemmas <> ENTAIL_derives_bupd thm
R34950:34963 VST.floyd.assert_lemmas <> derives_ENTAIL thm
R34825:34842 VST.floyd.assert_lemmas <> derives_bupd_trans thm
R34854:34872 VST.floyd.assert_lemmas <> ENTAIL_derives_bupd thm
R34713:34730 VST.floyd.assert_lemmas <> derives_bupd_trans thm
R35033:35039 VST.msl.seplog <> derives meth
R35091:35095 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R35101:35104 VST.msl.seplog <> ::logic:x_'||'_x not
R35096:35098 VST.msl.seplog <> ::logic:'|>'_x not
R35099:35100 VST.msl.seplog <> FF meth
R35083:35086 VST.msl.seplog <> ::logic:x_'&&'_x not
R35063:35067 VST.veric.SeparationLogic <> local def
R35070:35079 VST.veric.SeparationLogic <> tc_environ def
R35049:35052 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35053:35057 VST.veric.mpred <> mpred def
R35042:35048 VST.veric.mpred <> environ ind
R35033:35039 VST.msl.seplog <> derives meth
R35091:35095 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R35101:35104 VST.msl.seplog <> ::logic:x_'||'_x not
R35096:35098 VST.msl.seplog <> ::logic:'|>'_x not
R35099:35100 VST.msl.seplog <> FF meth
R35083:35086 VST.msl.seplog <> ::logic:x_'&&'_x not
R35063:35067 VST.veric.SeparationLogic <> local def
R35070:35079 VST.veric.SeparationLogic <> tc_environ def
R35049:35052 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35053:35057 VST.veric.mpred <> mpred def
R35042:35048 VST.veric.mpred <> environ ind
R35162:35168 VST.msl.seplog <> derives meth
R35220:35224 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R35212:35215 VST.msl.seplog <> ::logic:x_'&&'_x not
R35192:35196 VST.veric.SeparationLogic <> local def
R35199:35208 VST.veric.SeparationLogic <> tc_environ def
R35178:35181 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35182:35186 VST.veric.mpred <> mpred def
R35171:35177 VST.veric.mpred <> environ ind
R35162:35168 VST.msl.seplog <> derives meth
R35220:35224 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R35212:35215 VST.msl.seplog <> ::logic:x_'&&'_x not
R35192:35196 VST.veric.SeparationLogic <> local def
R35199:35208 VST.veric.SeparationLogic <> tc_environ def
R35178:35181 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35182:35186 VST.veric.mpred <> mpred def
R35171:35177 VST.veric.mpred <> environ ind
R35310:35316 VST.msl.seplog <> derives meth
R35360:35363 VST.msl.seplog <> ::logic:x_'&&'_x not
R35340:35344 VST.veric.SeparationLogic <> local def
R35347:35356 VST.veric.SeparationLogic <> tc_environ def
R35326:35329 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35330:35334 VST.veric.mpred <> mpred def
R35319:35325 VST.veric.mpred <> environ ind
R35310:35316 VST.msl.seplog <> derives meth
R35360:35363 VST.msl.seplog <> ::logic:x_'&&'_x not
R35340:35344 VST.veric.SeparationLogic <> local def
R35347:35356 VST.veric.SeparationLogic <> tc_environ def
R35326:35329 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35330:35334 VST.veric.mpred <> mpred def
R35319:35325 VST.veric.mpred <> environ ind
R35489:35507 VST.floyd.assert_lemmas <> derives_bupd0_trans thm
R35519:35544 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R35547:35565 VST.floyd.assert_lemmas <> ENTAIL_derives_bupd thm
R35568:35581 VST.floyd.assert_lemmas <> derives_ENTAIL thm
R35385:35403 VST.floyd.assert_lemmas <> derives_bupd0_trans thm
R35415:35440 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R35443:35461 VST.floyd.assert_lemmas <> ENTAIL_derives_bupd thm
R35244:35262 VST.floyd.assert_lemmas <> derives_bupd0_trans thm
R35274:35299 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R35124:35142 VST.floyd.assert_lemmas <> derives_bupd0_trans thm
R35650:35656 VST.msl.seplog <> derives meth
R35737:35741 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R35747:35750 VST.msl.seplog <> ::logic:x_'||'_x not
R35742:35744 VST.msl.seplog <> ::logic:'|>'_x not
R35745:35746 VST.msl.seplog <> FF meth
R35705:35709 VST.msl.seplog <> ::logic:x_'&&'_x not
R35733:35733 VST.msl.seplog <> ::logic:x_'&&'_x not
R35680:35684 VST.veric.SeparationLogic <> local def
R35687:35696 VST.veric.SeparationLogic <> tc_environ def
R35728:35731 VST.msl.seplog <> ::logic:x_'&&'_x not
R35710:35720 VST.veric.SeparationLogic <> allp_fun_id def
R35666:35669 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35670:35674 VST.veric.mpred <> mpred def
R35659:35665 VST.veric.mpred <> environ ind
R35650:35656 VST.msl.seplog <> derives meth
R35737:35741 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R35747:35750 VST.msl.seplog <> ::logic:x_'||'_x not
R35742:35744 VST.msl.seplog <> ::logic:'|>'_x not
R35745:35746 VST.msl.seplog <> FF meth
R35705:35709 VST.msl.seplog <> ::logic:x_'&&'_x not
R35733:35733 VST.msl.seplog <> ::logic:x_'&&'_x not
R35680:35684 VST.veric.SeparationLogic <> local def
R35687:35696 VST.veric.SeparationLogic <> tc_environ def
R35728:35731 VST.msl.seplog <> ::logic:x_'&&'_x not
R35710:35720 VST.veric.SeparationLogic <> allp_fun_id def
R35666:35669 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35670:35674 VST.veric.mpred <> mpred def
R35659:35665 VST.veric.mpred <> environ ind
R35808:35814 VST.msl.seplog <> derives meth
R35866:35870 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R35876:35879 VST.msl.seplog <> ::logic:x_'||'_x not
R35871:35873 VST.msl.seplog <> ::logic:'|>'_x not
R35874:35875 VST.msl.seplog <> FF meth
R35858:35861 VST.msl.seplog <> ::logic:x_'&&'_x not
R35838:35842 VST.veric.SeparationLogic <> local def
R35845:35854 VST.veric.SeparationLogic <> tc_environ def
R35824:35827 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35828:35832 VST.veric.mpred <> mpred def
R35817:35823 VST.veric.mpred <> environ ind
R35808:35814 VST.msl.seplog <> derives meth
R35866:35870 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R35876:35879 VST.msl.seplog <> ::logic:x_'||'_x not
R35871:35873 VST.msl.seplog <> ::logic:'|>'_x not
R35874:35875 VST.msl.seplog <> FF meth
R35858:35861 VST.msl.seplog <> ::logic:x_'&&'_x not
R35838:35842 VST.veric.SeparationLogic <> local def
R35845:35854 VST.veric.SeparationLogic <> tc_environ def
R35824:35827 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35828:35832 VST.veric.mpred <> mpred def
R35817:35823 VST.veric.mpred <> environ ind
R35965:35971 VST.msl.seplog <> derives meth
R36023:36027 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R36015:36018 VST.msl.seplog <> ::logic:x_'&&'_x not
R35995:35999 VST.veric.SeparationLogic <> local def
R36002:36011 VST.veric.SeparationLogic <> tc_environ def
R35981:35984 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35985:35989 VST.veric.mpred <> mpred def
R35974:35980 VST.veric.mpred <> environ ind
R35965:35971 VST.msl.seplog <> derives meth
R36023:36027 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R36015:36018 VST.msl.seplog <> ::logic:x_'&&'_x not
R35995:35999 VST.veric.SeparationLogic <> local def
R36002:36011 VST.veric.SeparationLogic <> tc_environ def
R35981:35984 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35985:35989 VST.veric.mpred <> mpred def
R35974:35980 VST.veric.mpred <> environ ind
R36141:36147 VST.msl.seplog <> derives meth
R36191:36194 VST.msl.seplog <> ::logic:x_'&&'_x not
R36171:36175 VST.veric.SeparationLogic <> local def
R36178:36187 VST.veric.SeparationLogic <> tc_environ def
R36157:36160 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36161:36165 VST.veric.mpred <> mpred def
R36150:36156 VST.veric.mpred <> environ ind
R36141:36147 VST.msl.seplog <> derives meth
R36191:36194 VST.msl.seplog <> ::logic:x_'&&'_x not
R36171:36175 VST.veric.SeparationLogic <> local def
R36178:36187 VST.veric.SeparationLogic <> tc_environ def
R36157:36160 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36161:36165 VST.veric.mpred <> mpred def
R36150:36156 VST.veric.mpred <> environ ind
R36348:36366 VST.floyd.assert_lemmas <> derives_bupd0_trans thm
R36378:36403 VST.floyd.assert_lemmas <> derives_bupd0_derives_full thm
R36406:36431 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R36434:36452 VST.floyd.assert_lemmas <> ENTAIL_derives_bupd thm
R36455:36468 VST.floyd.assert_lemmas <> derives_ENTAIL thm
R36216:36234 VST.floyd.assert_lemmas <> derives_bupd0_trans thm
R36246:36271 VST.floyd.assert_lemmas <> derives_bupd0_derives_full thm
R36274:36299 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R36302:36320 VST.floyd.assert_lemmas <> ENTAIL_derives_bupd thm
R36047:36065 VST.floyd.assert_lemmas <> derives_bupd0_trans thm
R36077:36102 VST.floyd.assert_lemmas <> derives_bupd0_derives_full thm
R36105:36130 VST.floyd.assert_lemmas <> derives_bupd_derives_bupd0 thm
R35899:35917 VST.floyd.assert_lemmas <> derives_bupd0_trans thm
R35929:35954 VST.floyd.assert_lemmas <> derives_bupd0_derives_full thm
R35770:35788 VST.floyd.assert_lemmas <> derives_bupd0_trans thm
R36560:36566 VST.msl.seplog <> derives meth
R36618:36622 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R36628:36631 VST.msl.seplog <> ::logic:x_'||'_x not
R36623:36625 VST.msl.seplog <> ::logic:'|>'_x not
R36626:36627 VST.msl.seplog <> FF meth
R36610:36613 VST.msl.seplog <> ::logic:x_'&&'_x not
R36590:36594 VST.veric.SeparationLogic <> local def
R36597:36606 VST.veric.SeparationLogic <> tc_environ def
R36576:36579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36580:36584 VST.veric.mpred <> mpred def
R36569:36575 VST.veric.mpred <> environ ind
R36560:36566 VST.msl.seplog <> derives meth
R36618:36622 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R36628:36631 VST.msl.seplog <> ::logic:x_'||'_x not
R36623:36625 VST.msl.seplog <> ::logic:'|>'_x not
R36626:36627 VST.msl.seplog <> FF meth
R36610:36613 VST.msl.seplog <> ::logic:x_'&&'_x not
R36590:36594 VST.veric.SeparationLogic <> local def
R36597:36606 VST.veric.SeparationLogic <> tc_environ def
R36576:36579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36580:36584 VST.veric.mpred <> mpred def
R36569:36575 VST.veric.mpred <> environ ind
R36675:36681 VST.msl.seplog <> derives meth
R36733:36737 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R36725:36728 VST.msl.seplog <> ::logic:x_'&&'_x not
R36705:36709 VST.veric.SeparationLogic <> local def
R36712:36721 VST.veric.SeparationLogic <> tc_environ def
R36691:36694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36695:36699 VST.veric.mpred <> mpred def
R36684:36690 VST.veric.mpred <> environ ind
R36675:36681 VST.msl.seplog <> derives meth
R36733:36737 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R36725:36728 VST.msl.seplog <> ::logic:x_'&&'_x not
R36705:36709 VST.veric.SeparationLogic <> local def
R36712:36721 VST.veric.SeparationLogic <> tc_environ def
R36691:36694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36695:36699 VST.veric.mpred <> mpred def
R36684:36690 VST.veric.mpred <> environ ind
R36780:36786 VST.msl.seplog <> derives meth
R36830:36833 VST.msl.seplog <> ::logic:x_'&&'_x not
R36810:36814 VST.veric.SeparationLogic <> local def
R36817:36826 VST.veric.SeparationLogic <> tc_environ def
R36796:36799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36800:36804 VST.veric.mpred <> mpred def
R36789:36795 VST.veric.mpred <> environ ind
R36780:36786 VST.msl.seplog <> derives meth
R36830:36833 VST.msl.seplog <> ::logic:x_'&&'_x not
R36810:36814 VST.veric.SeparationLogic <> local def
R36817:36826 VST.veric.SeparationLogic <> tc_environ def
R36796:36799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36800:36804 VST.veric.mpred <> mpred def
R36789:36795 VST.veric.mpred <> environ ind
R36964:36980 VST.floyd.assert_lemmas <> derives_full_refl thm
R36991:37008 VST.floyd.assert_lemmas <> derives_full_trans thm
prf 37056:37067 <> aux1_reduceR
R37089:37092 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37093:37097 VST.veric.mpred <> mpred def
R37082:37088 VST.veric.mpred <> environ ind
binder 37077:37077 <> P:372
binder 37079:37079 <> Q:373
R37114:37119 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37121:37125 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R37120:37120 VST.floyd.assert_lemmas <> P:372 var
R37126:37130 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R37136:37139 VST.msl.seplog <> ::logic:x_'||'_x not
R37131:37133 VST.msl.seplog <> ::logic:'|>'_x not
R37134:37135 VST.msl.seplog <> FF meth
R37140:37140 VST.floyd.assert_lemmas <> Q:373 var
R37103:37107 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R37102:37102 VST.floyd.assert_lemmas <> P:372 var
R37108:37112 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R37113:37113 VST.floyd.assert_lemmas <> Q:373 var
R37169:37181 VST.msl.seplog <> derives_trans meth
R37169:37181 VST.msl.seplog <> derives_trans meth
R37205:37213 VST.msl.ghost_seplog <> bupd_mono meth
R37205:37213 VST.msl.ghost_seplog <> bupd_mono meth
R37224:37233 VST.msl.seplog <> orp_right2 meth
R37224:37233 VST.msl.seplog <> orp_right2 meth
prf 37254:37265 <> aux2_reduceR
R37287:37290 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37291:37295 VST.veric.mpred <> mpred def
R37280:37286 VST.veric.mpred <> environ ind
binder 37275:37275 <> P:374
binder 37277:37277 <> Q:375
R37307:37312 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37314:37318 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R37313:37313 VST.floyd.assert_lemmas <> P:374 var
R37319:37323 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R37324:37324 VST.floyd.assert_lemmas <> Q:375 var
R37301:37305 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R37300:37300 VST.floyd.assert_lemmas <> P:374 var
R37306:37306 VST.floyd.assert_lemmas <> Q:375 var
R37353:37365 VST.msl.seplog <> derives_trans meth
R37353:37365 VST.msl.seplog <> derives_trans meth
R37389:37398 VST.msl.ghost_seplog <> bupd_intro meth
R37389:37398 VST.msl.ghost_seplog <> bupd_intro meth
R37449:37453 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R37454:37458 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R37464:37467 VST.msl.seplog <> ::logic:x_'||'_x not
R37459:37461 VST.msl.seplog <> ::logic:'|>'_x not
R37462:37463 VST.msl.seplog <> FF meth
R37449:37453 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R37454:37458 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R37464:37467 VST.msl.seplog <> ::logic:x_'||'_x not
R37459:37461 VST.msl.seplog <> ::logic:'|>'_x not
R37462:37463 VST.msl.seplog <> FF meth
R37479:37490 VST.floyd.assert_lemmas <> aux1_reduceR thm
R37540:37544 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R37545:37549 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R37540:37544 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R37545:37549 VST.msl.ghost_seplog <> ::logic:'|==>'_x not
R37561:37572 VST.floyd.assert_lemmas <> aux2_reduceR thm
prf 37603:37613 <> aux_reduceL
R37639:37642 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37643:37647 VST.veric.mpred <> mpred def
R37632:37638 VST.veric.mpred <> environ ind
binder 37623:37623 <> P:376
binder 37625:37625 <> Q:377
binder 37627:37627 <> R:378
binder 37629:37629 <> S:379
R37664:37669 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37683:37687 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R37671:37675 VST.msl.seplog <> ::logic:x_'&&'_x not
R37682:37682 VST.msl.seplog <> ::logic:x_'&&'_x not
R37670:37670 VST.floyd.assert_lemmas <> P:376 var
R37677:37680 VST.msl.seplog <> ::logic:x_'&&'_x not
R37676:37676 VST.floyd.assert_lemmas <> Q:377 var
R37681:37681 VST.floyd.assert_lemmas <> R:378 var
R37688:37688 VST.floyd.assert_lemmas <> S:379 var
R37658:37662 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R37653:37656 VST.msl.seplog <> ::logic:x_'&&'_x not
R37652:37652 VST.floyd.assert_lemmas <> P:376 var
R37657:37657 VST.floyd.assert_lemmas <> R:378 var
R37663:37663 VST.floyd.assert_lemmas <> S:379 var
R37717:37729 VST.msl.seplog <> derives_trans meth
R37717:37729 VST.msl.seplog <> derives_trans meth
R37861:37865 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R37832:37836 VST.msl.seplog <> ::logic:x_'&&'_x not
R37860:37860 VST.msl.seplog <> ::logic:x_'&&'_x not
R37807:37811 VST.veric.SeparationLogic <> local def
R37814:37823 VST.veric.SeparationLogic <> tc_environ def
R37855:37858 VST.msl.seplog <> ::logic:x_'&&'_x not
R37837:37847 VST.veric.SeparationLogic <> allp_fun_id def
R37861:37865 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R37832:37836 VST.msl.seplog <> ::logic:x_'&&'_x not
R37860:37860 VST.msl.seplog <> ::logic:x_'&&'_x not
R37807:37811 VST.veric.SeparationLogic <> local def
R37814:37823 VST.veric.SeparationLogic <> tc_environ def
R37855:37858 VST.msl.seplog <> ::logic:x_'&&'_x not
R37837:37847 VST.veric.SeparationLogic <> allp_fun_id def
R37877:37887 VST.floyd.assert_lemmas <> aux_reduceL thm
R38007:38011 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R37978:37982 VST.msl.seplog <> ::logic:x_'&&'_x not
R38006:38006 VST.msl.seplog <> ::logic:x_'&&'_x not
R37953:37957 VST.veric.SeparationLogic <> local def
R37960:37969 VST.veric.SeparationLogic <> tc_environ def
R38001:38004 VST.msl.seplog <> ::logic:x_'&&'_x not
R37983:37993 VST.veric.SeparationLogic <> allp_fun_id def
R38007:38011 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R37978:37982 VST.msl.seplog <> ::logic:x_'&&'_x not
R38006:38006 VST.msl.seplog <> ::logic:x_'&&'_x not
R37953:37957 VST.veric.SeparationLogic <> local def
R37960:37969 VST.veric.SeparationLogic <> tc_environ def
R38001:38004 VST.msl.seplog <> ::logic:x_'&&'_x not
R37983:37993 VST.veric.SeparationLogic <> allp_fun_id def
R38023:38033 VST.floyd.assert_lemmas <> aux_reduceL thm
R38107:38111 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R38102:38105 VST.msl.seplog <> ::logic:x_'&&'_x not
R38082:38086 VST.veric.SeparationLogic <> local def
R38089:38098 VST.veric.SeparationLogic <> tc_environ def
R38107:38111 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R38102:38105 VST.msl.seplog <> ::logic:x_'&&'_x not
R38082:38086 VST.veric.SeparationLogic <> local def
R38089:38098 VST.veric.SeparationLogic <> tc_environ def
R38123:38136 VST.floyd.assert_lemmas <> derives_ENTAIL thm
