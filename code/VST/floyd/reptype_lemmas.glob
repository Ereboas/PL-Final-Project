DIGEST 585a64318a1ab8acabedeb77b0820065
FVST.floyd.reptype_lemmas
R15:29 VST.floyd.base2 <> <> lib
R47:70 VST.floyd.type_induction <> <> lib
R88:113 VST.floyd.compact_prod_sum <> <> lib
R131:149 VST.floyd.fieldlist <> <> lib
R167:183 VST.floyd.sublist <> <> lib
def 198:204 <> map_map
binder 215:215 <> A:1
binder 217:217 <> B:2
binder 219:219 <> C:3
R235:238 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R239:239 VST.floyd.reptype_lemmas <> B:2 var
R234:234 VST.floyd.reptype_lemmas <> A:1 var
binder 230:230 <> f:4
R248:251 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R252:252 VST.floyd.reptype_lemmas <> C:3 var
R247:247 VST.floyd.reptype_lemmas <> B:2 var
binder 243:243 <> g:5
R260:263 Coq.Init.Datatypes <> list ind
R265:265 VST.floyd.reptype_lemmas <> A:1 var
binder 256:256 <> l:6
R291:293 Coq.Init.Logic <> ::type_scope:x_'='_x not
R276:278 Coq.Lists.List <> map def
R283:285 Coq.Lists.List <> map def
R289:289 VST.floyd.reptype_lemmas <> l:6 var
R287:287 VST.floyd.reptype_lemmas <> f:4 var
R280:280 VST.floyd.reptype_lemmas <> g:5 var
R294:296 Coq.Lists.List <> map def
R321:321 VST.floyd.reptype_lemmas <> l:6 var
R307:307 VST.floyd.reptype_lemmas <> A:1 var
binder 303:303 <> x:7
R312:312 VST.floyd.reptype_lemmas <> g:5 var
R315:315 VST.floyd.reptype_lemmas <> f:4 var
R317:317 VST.floyd.reptype_lemmas <> x:7 var
binder 331:331 <> A:8
binder 333:333 <> B:9
binder 335:335 <> C:10
R351:354 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R355:355 VST.floyd.reptype_lemmas <> B:9 var
R350:350 VST.floyd.reptype_lemmas <> A:8 var
binder 346:346 <> f:11
R364:367 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R368:368 VST.floyd.reptype_lemmas <> C:10 var
R363:363 VST.floyd.reptype_lemmas <> B:9 var
binder 359:359 <> g:12
R376:379 Coq.Init.Datatypes <> list ind
R381:381 VST.floyd.reptype_lemmas <> A:8 var
binder 372:372 <> l:13
R387:394 Coq.Init.Datatypes <> list_ind scheme
R688:688 VST.floyd.reptype_lemmas <> l:13 var
R490:490 VST.floyd.reptype_lemmas <> A:8 var
binder 486:486 <> a:14
R499:502 Coq.Init.Datatypes <> list ind
R504:504 VST.floyd.reptype_lemmas <> A:8 var
binder 494:495 <> l0:15
R535:537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R519:521 Coq.Lists.List <> map def
R526:528 Coq.Lists.List <> map def
R532:533 VST.floyd.reptype_lemmas <> l0:15 var
R530:530 VST.floyd.reptype_lemmas <> f:11 var
R523:523 VST.floyd.reptype_lemmas <> g:12 var
R538:540 Coq.Lists.List <> map def
R565:566 VST.floyd.reptype_lemmas <> l0:15 var
R551:551 VST.floyd.reptype_lemmas <> A:8 var
binder 547:547 <> x:16
R556:556 VST.floyd.reptype_lemmas <> g:12 var
R559:559 VST.floyd.reptype_lemmas <> f:11 var
R561:561 VST.floyd.reptype_lemmas <> x:16 var
binder 513:515 <> IHl:17
R575:582 Coq.Init.Logic <> eq_ind_r def
R681:683 VST.floyd.reptype_lemmas <> IHl:17 var
R673:679 Coq.Init.Logic <> eq_refl constr
R599:602 Coq.Init.Datatypes <> list ind
R604:604 VST.floyd.reptype_lemmas <> C:10 var
binder 594:595 <> l1:18
R628:630 Coq.Init.Logic <> ::type_scope:x_'='_x not
R622:625 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R615:615 VST.floyd.reptype_lemmas <> g:12 var
R618:618 VST.floyd.reptype_lemmas <> f:11 var
R620:620 VST.floyd.reptype_lemmas <> a:14 var
R626:627 VST.floyd.reptype_lemmas <> l1:18 var
R638:641 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R631:631 VST.floyd.reptype_lemmas <> g:12 var
R634:634 VST.floyd.reptype_lemmas <> f:11 var
R636:636 VST.floyd.reptype_lemmas <> a:14 var
R642:644 Coq.Lists.List <> map def
R669:670 VST.floyd.reptype_lemmas <> l0:15 var
R655:655 VST.floyd.reptype_lemmas <> A:8 var
binder 651:651 <> x:19
R660:660 VST.floyd.reptype_lemmas <> g:12 var
R663:663 VST.floyd.reptype_lemmas <> f:11 var
R665:665 VST.floyd.reptype_lemmas <> x:19 var
R470:476 Coq.Init.Logic <> eq_refl constr
R408:411 Coq.Init.Datatypes <> list ind
R413:413 VST.floyd.reptype_lemmas <> A:8 var
binder 403:404 <> l0:20
R434:436 Coq.Init.Logic <> ::type_scope:x_'='_x not
R418:420 Coq.Lists.List <> map def
R425:427 Coq.Lists.List <> map def
R431:432 VST.floyd.reptype_lemmas <> l0:20 var
R429:429 VST.floyd.reptype_lemmas <> f:11 var
R422:422 VST.floyd.reptype_lemmas <> g:12 var
R437:439 Coq.Lists.List <> map def
R464:465 VST.floyd.reptype_lemmas <> l0:20 var
R450:450 VST.floyd.reptype_lemmas <> A:8 var
binder 446:446 <> x:21
R455:455 VST.floyd.reptype_lemmas <> g:12 var
R458:458 VST.floyd.reptype_lemmas <> f:11 var
R460:460 VST.floyd.reptype_lemmas <> x:21 var
syndef 815:819 <> sigTT
binder 831:832 <> tv:22
R843:844 VST.floyd.reptype_lemmas <> tv:22 var
R851:856 Coq.Init.Specif <> existT constr
def 887:908 <> compact_prod_sigT_type
binder 911:911 <> A:24
R919:922 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R918:918 VST.floyd.reptype_lemmas <> A:24 var
binder 915:915 <> P:25
R933:936 Coq.Init.Datatypes <> list ind
R939:942 Coq.Init.Specif <> sigT ind
R944:944 VST.floyd.reptype_lemmas <> P:25 var
binder 930:930 <> l:26
R959:970 VST.floyd.compact_prod_sum <> compact_prod def
R973:975 Coq.Lists.List <> map def
R987:987 VST.floyd.reptype_lemmas <> l:26 var
R978:982 VST.floyd.reptype_lemmas <> sigTT syndef
R984:984 VST.floyd.reptype_lemmas <> P:25 var
R1001:1022 VST.floyd.reptype_lemmas <> compact_prod_sigT_type def
R1001:1022 VST.floyd.reptype_lemmas <> compact_prod_sigT_type def
def 1050:1072 <> compact_prod_sigT_value
binder 1083:1083 <> A:27
R1091:1094 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1090:1090 VST.floyd.reptype_lemmas <> A:27 var
binder 1087:1087 <> P:28
R1105:1108 Coq.Init.Datatypes <> list ind
R1111:1114 Coq.Init.Specif <> sigT ind
R1116:1116 VST.floyd.reptype_lemmas <> P:28 var
binder 1102:1102 <> l:29
R1121:1132 VST.floyd.compact_prod_sum <> compact_prod def
R1135:1137 Coq.Lists.List <> map def
R1149:1149 VST.floyd.reptype_lemmas <> l:29 var
R1140:1144 VST.floyd.reptype_lemmas <> sigTT syndef
R1146:1146 VST.floyd.reptype_lemmas <> P:28 var
R1208:1209 Coq.Init.Datatypes <> tt constr
R1208:1209 Coq.Init.Datatypes <> tt constr
R1291:1291 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1294:1295 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1303:1303 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1291:1291 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1294:1295 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1303:1303 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 1327:1347 <> compact_sum_sigT_type
binder 1350:1350 <> A:30
R1358:1361 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1357:1357 VST.floyd.reptype_lemmas <> A:30 var
binder 1354:1354 <> P:31
R1372:1375 Coq.Init.Datatypes <> list ind
R1378:1381 Coq.Init.Specif <> sigT ind
R1383:1383 VST.floyd.reptype_lemmas <> P:31 var
binder 1369:1369 <> l:32
R1398:1408 VST.floyd.compact_prod_sum <> compact_sum def
R1411:1413 Coq.Lists.List <> map def
R1425:1425 VST.floyd.reptype_lemmas <> l:32 var
R1416:1420 VST.floyd.reptype_lemmas <> sigTT syndef
R1422:1422 VST.floyd.reptype_lemmas <> P:31 var
R1440:1460 VST.floyd.reptype_lemmas <> compact_sum_sigT_type def
R1440:1460 VST.floyd.reptype_lemmas <> compact_sum_sigT_type def
def 1488:1509 <> compact_sum_sigT_value
binder 1520:1520 <> A:33
R1528:1531 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1527:1527 VST.floyd.reptype_lemmas <> A:33 var
binder 1524:1524 <> P:34
R1542:1545 Coq.Init.Datatypes <> list ind
R1548:1551 Coq.Init.Specif <> sigT ind
R1553:1553 VST.floyd.reptype_lemmas <> P:34 var
binder 1539:1539 <> l:35
R1558:1568 VST.floyd.compact_prod_sum <> compact_sum def
R1571:1573 Coq.Lists.List <> map def
R1585:1585 VST.floyd.reptype_lemmas <> l:35 var
R1576:1580 VST.floyd.reptype_lemmas <> sigTT syndef
R1582:1582 VST.floyd.reptype_lemmas <> P:34 var
R1644:1645 Coq.Init.Datatypes <> tt constr
R1644:1645 Coq.Init.Datatypes <> tt constr
R1728:1730 Coq.Init.Datatypes <> inl constr
R1740:1750 VST.floyd.compact_prod_sum <> compact_sum def
R1756:1758 Coq.Lists.List <> map def
R1854:1857 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1840:1845 Coq.Init.Specif <> existT constr
R1789:1789 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
R1791:1793 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
R1795:1797 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
R1801:1801 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
binder 1790:1790 <> x:36
R1800:1800 VST.floyd.reptype_lemmas <> x:36 var
binder 1784:1785 <> tv:37
R1821:1822 VST.floyd.reptype_lemmas <> tv:37 var
binder 1811:1812 <> t1:38
R1829:1830 VST.floyd.reptype_lemmas <> t1:38 var
R1760:1760 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
R1762:1764 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
R1766:1768 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
R1772:1772 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
binder 1761:1761 <> x:39
R1771:1771 VST.floyd.reptype_lemmas <> x:39 var
R1728:1730 Coq.Init.Datatypes <> inl constr
R1740:1750 VST.floyd.compact_prod_sum <> compact_sum def
R1756:1758 Coq.Lists.List <> map def
R1854:1857 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1840:1845 Coq.Init.Specif <> existT constr
R1789:1789 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
R1791:1793 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
R1795:1797 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
R1801:1801 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
binder 1790:1790 <> x:40
R1800:1800 VST.floyd.reptype_lemmas <> x:40 var
binder 1784:1785 <> tv:41
R1821:1822 VST.floyd.reptype_lemmas <> tv:41 var
binder 1811:1812 <> t1:42
R1829:1830 VST.floyd.reptype_lemmas <> t1:42 var
R1760:1760 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
R1762:1764 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
R1766:1768 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
R1772:1772 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'&'_x_'}' not
binder 1761:1761 <> x:43
R1771:1771 VST.floyd.reptype_lemmas <> x:43 var
def 1889:1904 <> compact_prod_map
binder 1907:1907 <> X:44
R1924:1927 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1923:1923 VST.floyd.reptype_lemmas <> X:44 var
binder 1917:1917 <> F:45
binder 1919:1920 <> F0:46
R1938:1941 Coq.Init.Datatypes <> list ind
R1943:1943 VST.floyd.reptype_lemmas <> X:44 var
binder 1935:1935 <> l:47
R1952:1959 VST.floyd.type_induction <> ListType ind
R1962:1964 Coq.Lists.List <> map def
R1989:1989 VST.floyd.reptype_lemmas <> l:47 var
binder 1971:1971 <> x:48
R1979:1982 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1983:1984 VST.floyd.reptype_lemmas <> F0:46 var
R1986:1986 VST.floyd.reptype_lemmas <> x:48 var
R1976:1976 VST.floyd.reptype_lemmas <> F:45 var
R1978:1978 VST.floyd.reptype_lemmas <> x:48 var
binder 1949:1949 <> f:49
R2016:2019 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2020:2031 VST.floyd.compact_prod_sum <> compact_prod def
R2034:2036 Coq.Lists.List <> map def
R2041:2041 VST.floyd.reptype_lemmas <> l:47 var
R2038:2039 VST.floyd.reptype_lemmas <> F0:46 var
R1994:2005 VST.floyd.compact_prod_sum <> compact_prod def
R2008:2010 Coq.Lists.List <> map def
R2014:2014 VST.floyd.reptype_lemmas <> l:47 var
R2012:2012 VST.floyd.reptype_lemmas <> F:45 var
R2083:2084 Coq.Init.Datatypes <> tt constr
R2083:2084 Coq.Init.Datatypes <> tt constr
R2196:2196 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2208:2212 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2200:2203 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2213:2215 Coq.Lists.List <> map def
binder 2222:2223 <> x0:50
R2236:2239 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2243:2244 VST.floyd.reptype_lemmas <> x0:50 var
R2234:2235 VST.floyd.reptype_lemmas <> x0:50 var
R2196:2196 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2208:2212 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2200:2203 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2213:2215 Coq.Lists.List <> map def
binder 2222:2223 <> x0:51
R2236:2239 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2243:2244 VST.floyd.reptype_lemmas <> x0:51 var
R2234:2235 VST.floyd.reptype_lemmas <> x0:51 var
R2290:2290 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2302:2303 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2320:2320 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2295:2297 Coq.Init.Datatypes <> fst def
R2313:2315 Coq.Init.Datatypes <> snd def
R2290:2290 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2302:2303 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2320:2320 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2295:2297 Coq.Init.Datatypes <> fst def
R2313:2315 Coq.Init.Datatypes <> snd def
prf 2339:2358 <> compact_prod_map_nil
binder 2369:2369 <> X:52
R2386:2389 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2385:2385 VST.floyd.reptype_lemmas <> X:52 var
binder 2379:2379 <> F:53
binder 2381:2382 <> F0:54
R2434:2436 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2400:2415 VST.floyd.reptype_lemmas <> compact_prod_map def
R2432:2433 Coq.Init.Datatypes <> tt constr
R2428:2430 VST.floyd.type_induction <> Nil constr
R2424:2426 Coq.Init.Datatypes <> nil constr
R2421:2422 VST.floyd.reptype_lemmas <> F0:54 var
R2419:2419 VST.floyd.reptype_lemmas <> F:53 var
R2417:2417 VST.floyd.reptype_lemmas <> X:52 var
R2437:2438 Coq.Init.Datatypes <> tt constr
prf 2485:2507 <> compact_prod_map_single
binder 2518:2518 <> X:55
R2535:2538 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2534:2534 VST.floyd.reptype_lemmas <> X:55 var
binder 2528:2528 <> F:56
binder 2530:2531 <> F0:57
R2549:2549 VST.floyd.reptype_lemmas <> X:55 var
binder 2546:2546 <> x:58
R2561:2564 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2565:2566 VST.floyd.reptype_lemmas <> F0:57 var
R2568:2568 VST.floyd.reptype_lemmas <> x:58 var
R2558:2558 VST.floyd.reptype_lemmas <> F:56 var
R2560:2560 VST.floyd.reptype_lemmas <> x:58 var
binder 2555:2555 <> f:59
R2575:2575 VST.floyd.reptype_lemmas <> F:56 var
R2577:2577 VST.floyd.reptype_lemmas <> x:58 var
binder 2572:2572 <> v:60
R2625:2627 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2583:2598 VST.floyd.reptype_lemmas <> compact_prod_map def
R2624:2624 VST.floyd.reptype_lemmas <> v:60 var
R2612:2615 VST.floyd.type_induction <> Cons constr
R2619:2621 VST.floyd.type_induction <> Nil constr
R2617:2617 VST.floyd.reptype_lemmas <> f:59 var
R2602:2605 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2601:2601 VST.floyd.reptype_lemmas <> x:58 var
R2606:2608 Coq.Init.Datatypes <> nil constr
R2628:2628 VST.floyd.reptype_lemmas <> f:59 var
R2630:2630 VST.floyd.reptype_lemmas <> v:60 var
prf 2677:2697 <> compact_prod_map_cons
binder 2708:2708 <> X:61
R2725:2728 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2724:2724 VST.floyd.reptype_lemmas <> X:61 var
binder 2718:2718 <> F:62
binder 2720:2721 <> F0:63
R2742:2742 VST.floyd.reptype_lemmas <> X:61 var
binder 2736:2736 <> x:64
binder 2738:2739 <> x0:65
R2749:2752 Coq.Init.Datatypes <> list ind
R2754:2754 VST.floyd.reptype_lemmas <> X:61 var
binder 2746:2746 <> l:66
R2766:2769 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2770:2771 VST.floyd.reptype_lemmas <> F0:63 var
R2773:2773 VST.floyd.reptype_lemmas <> x:64 var
R2763:2763 VST.floyd.reptype_lemmas <> F:62 var
R2765:2765 VST.floyd.reptype_lemmas <> x:64 var
binder 2760:2760 <> f:67
R2781:2788 VST.floyd.type_induction <> ListType ind
R2791:2793 Coq.Lists.List <> map def
R2821:2824 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2819:2820 VST.floyd.reptype_lemmas <> x0:65 var
R2825:2825 VST.floyd.reptype_lemmas <> l:66 var
binder 2800:2800 <> x:68
R2808:2811 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2812:2813 VST.floyd.reptype_lemmas <> F0:63 var
R2815:2815 VST.floyd.reptype_lemmas <> x:68 var
R2805:2805 VST.floyd.reptype_lemmas <> F:62 var
R2807:2807 VST.floyd.reptype_lemmas <> x:68 var
binder 2777:2778 <> fl:69
R2836:2836 VST.floyd.reptype_lemmas <> F:62 var
R2838:2838 VST.floyd.reptype_lemmas <> x:64 var
binder 2833:2833 <> v:70
R2846:2857 VST.floyd.compact_prod_sum <> compact_prod def
R2860:2862 Coq.Lists.List <> map def
R2869:2872 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2867:2868 VST.floyd.reptype_lemmas <> x0:65 var
R2873:2873 VST.floyd.reptype_lemmas <> l:66 var
R2864:2864 VST.floyd.reptype_lemmas <> F:62 var
binder 2842:2843 <> vl:71
R2932:2934 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2881:2896 VST.floyd.reptype_lemmas <> compact_prod_map def
R2925:2925 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2927:2928 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2931:2931 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2926:2926 VST.floyd.reptype_lemmas <> v:70 var
R2929:2930 VST.floyd.reptype_lemmas <> vl:71 var
R2914:2917 VST.floyd.type_induction <> Cons constr
R2921:2922 VST.floyd.reptype_lemmas <> fl:69 var
R2919:2919 VST.floyd.reptype_lemmas <> f:67 var
R2900:2903 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2899:2899 VST.floyd.reptype_lemmas <> x:64 var
R2906:2909 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2904:2905 VST.floyd.reptype_lemmas <> x0:65 var
R2910:2910 VST.floyd.reptype_lemmas <> l:66 var
R2935:2935 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2939:2940 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2965:2965 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2936:2936 VST.floyd.reptype_lemmas <> f:67 var
R2938:2938 VST.floyd.reptype_lemmas <> v:70 var
R2941:2956 VST.floyd.reptype_lemmas <> compact_prod_map def
R2963:2964 VST.floyd.reptype_lemmas <> vl:71 var
R2960:2961 VST.floyd.reptype_lemmas <> fl:69 var
def 3017:3031 <> compact_sum_map
binder 3034:3034 <> X:72
R3051:3054 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3050:3050 VST.floyd.reptype_lemmas <> X:72 var
binder 3044:3044 <> F:73
binder 3046:3047 <> F0:74
R3065:3068 Coq.Init.Datatypes <> list ind
R3070:3070 VST.floyd.reptype_lemmas <> X:72 var
binder 3062:3062 <> l:75
R3079:3086 VST.floyd.type_induction <> ListType ind
R3089:3091 Coq.Lists.List <> map def
R3116:3116 VST.floyd.reptype_lemmas <> l:75 var
binder 3098:3098 <> x:76
R3106:3109 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3110:3111 VST.floyd.reptype_lemmas <> F0:74 var
R3113:3113 VST.floyd.reptype_lemmas <> x:76 var
R3103:3103 VST.floyd.reptype_lemmas <> F:73 var
R3105:3105 VST.floyd.reptype_lemmas <> x:76 var
binder 3076:3076 <> f:77
R3142:3145 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3146:3156 VST.floyd.compact_prod_sum <> compact_sum def
R3159:3161 Coq.Lists.List <> map def
R3166:3166 VST.floyd.reptype_lemmas <> l:75 var
R3163:3164 VST.floyd.reptype_lemmas <> F0:74 var
R3121:3131 VST.floyd.compact_prod_sum <> compact_sum def
R3134:3136 Coq.Lists.List <> map def
R3140:3140 VST.floyd.reptype_lemmas <> l:75 var
R3138:3138 VST.floyd.reptype_lemmas <> F:73 var
R3208:3209 Coq.Init.Datatypes <> tt constr
R3208:3209 Coq.Init.Datatypes <> tt constr
R3321:3321 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3333:3337 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3325:3328 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3338:3340 Coq.Lists.List <> map def
binder 3347:3348 <> x0:78
R3361:3364 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3368:3369 VST.floyd.reptype_lemmas <> x0:78 var
R3359:3360 VST.floyd.reptype_lemmas <> x0:78 var
R3321:3321 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3333:3337 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3325:3328 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3338:3340 Coq.Lists.List <> map def
binder 3347:3348 <> x0:79
R3361:3364 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3368:3369 VST.floyd.reptype_lemmas <> x0:79 var
R3359:3360 VST.floyd.reptype_lemmas <> x0:79 var
R3441:3443 Coq.Init.Datatypes <> inl constr
R3453:3455 Coq.Init.Datatypes <> inl constr
R3479:3481 Coq.Init.Datatypes <> inr constr
R3491:3493 Coq.Init.Datatypes <> inr constr
R3441:3443 Coq.Init.Datatypes <> inl constr
R3453:3455 Coq.Init.Datatypes <> inl constr
R3479:3481 Coq.Init.Datatypes <> inr constr
R3491:3493 Coq.Init.Datatypes <> inr constr
prf 3541:3559 <> compact_sum_map_nil
binder 3570:3570 <> X:82
R3587:3590 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3586:3586 VST.floyd.reptype_lemmas <> X:82 var
binder 3580:3580 <> F:83
binder 3582:3583 <> F0:84
R3634:3636 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3601:3615 VST.floyd.reptype_lemmas <> compact_sum_map def
R3632:3633 Coq.Init.Datatypes <> tt constr
R3628:3630 VST.floyd.type_induction <> Nil constr
R3624:3626 Coq.Init.Datatypes <> nil constr
R3621:3622 VST.floyd.reptype_lemmas <> F0:84 var
R3619:3619 VST.floyd.reptype_lemmas <> F:83 var
R3617:3617 VST.floyd.reptype_lemmas <> X:82 var
R3637:3638 Coq.Init.Datatypes <> tt constr
prf 3685:3706 <> compact_sum_map_single
binder 3717:3717 <> X:85
R3734:3737 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3733:3733 VST.floyd.reptype_lemmas <> X:85 var
binder 3727:3727 <> F:86
binder 3729:3730 <> F0:87
R3748:3748 VST.floyd.reptype_lemmas <> X:85 var
binder 3745:3745 <> x:88
R3760:3763 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3764:3765 VST.floyd.reptype_lemmas <> F0:87 var
R3767:3767 VST.floyd.reptype_lemmas <> x:88 var
R3757:3757 VST.floyd.reptype_lemmas <> F:86 var
R3759:3759 VST.floyd.reptype_lemmas <> x:88 var
binder 3754:3754 <> f:89
R3774:3774 VST.floyd.reptype_lemmas <> F:86 var
R3776:3776 VST.floyd.reptype_lemmas <> x:88 var
binder 3771:3771 <> v:90
R3823:3825 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3782:3796 VST.floyd.reptype_lemmas <> compact_sum_map def
R3822:3822 VST.floyd.reptype_lemmas <> v:90 var
R3810:3813 VST.floyd.type_induction <> Cons constr
R3817:3819 VST.floyd.type_induction <> Nil constr
R3815:3815 VST.floyd.reptype_lemmas <> f:89 var
R3800:3803 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3799:3799 VST.floyd.reptype_lemmas <> x:88 var
R3804:3806 Coq.Init.Datatypes <> nil constr
R3826:3826 VST.floyd.reptype_lemmas <> f:89 var
R3828:3828 VST.floyd.reptype_lemmas <> v:90 var
prf 3875:3898 <> compact_sum_map_cons_inl
binder 3909:3909 <> X:91
R3926:3929 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3925:3925 VST.floyd.reptype_lemmas <> X:91 var
binder 3919:3919 <> F:92
binder 3921:3922 <> F0:93
R3943:3943 VST.floyd.reptype_lemmas <> X:91 var
binder 3937:3937 <> x:94
binder 3939:3940 <> x0:95
R3950:3953 Coq.Init.Datatypes <> list ind
R3955:3955 VST.floyd.reptype_lemmas <> X:91 var
binder 3947:3947 <> l:96
R3967:3970 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3971:3972 VST.floyd.reptype_lemmas <> F0:93 var
R3974:3974 VST.floyd.reptype_lemmas <> x:94 var
R3964:3964 VST.floyd.reptype_lemmas <> F:92 var
R3966:3966 VST.floyd.reptype_lemmas <> x:94 var
binder 3961:3961 <> f:97
R3982:3989 VST.floyd.type_induction <> ListType ind
R3992:3994 Coq.Lists.List <> map def
R4022:4025 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4020:4021 VST.floyd.reptype_lemmas <> x0:95 var
R4026:4026 VST.floyd.reptype_lemmas <> l:96 var
binder 4001:4001 <> x:98
R4009:4012 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4013:4014 VST.floyd.reptype_lemmas <> F0:93 var
R4016:4016 VST.floyd.reptype_lemmas <> x:98 var
R4006:4006 VST.floyd.reptype_lemmas <> F:92 var
R4008:4008 VST.floyd.reptype_lemmas <> x:98 var
binder 3978:3979 <> fl:99
R4037:4037 VST.floyd.reptype_lemmas <> F:92 var
R4039:4039 VST.floyd.reptype_lemmas <> x:94 var
binder 4034:4034 <> v:100
R4095:4097 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4045:4059 VST.floyd.reptype_lemmas <> compact_sum_map def
R4089:4091 Coq.Init.Datatypes <> inl constr
R4093:4093 VST.floyd.reptype_lemmas <> v:100 var
R4077:4080 VST.floyd.type_induction <> Cons constr
R4084:4085 VST.floyd.reptype_lemmas <> fl:99 var
R4082:4082 VST.floyd.reptype_lemmas <> f:97 var
R4063:4066 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4062:4062 VST.floyd.reptype_lemmas <> x:94 var
R4069:4072 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4067:4068 VST.floyd.reptype_lemmas <> x0:95 var
R4073:4073 VST.floyd.reptype_lemmas <> l:96 var
R4098:4100 Coq.Init.Datatypes <> inl constr
R4103:4103 VST.floyd.reptype_lemmas <> f:97 var
R4105:4105 VST.floyd.reptype_lemmas <> v:100 var
prf 4153:4176 <> compact_sum_map_cons_inr
binder 4187:4187 <> X:101
R4204:4207 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4203:4203 VST.floyd.reptype_lemmas <> X:101 var
binder 4197:4197 <> F:102
binder 4199:4200 <> F0:103
R4221:4221 VST.floyd.reptype_lemmas <> X:101 var
binder 4215:4215 <> x:104
binder 4217:4218 <> x0:105
R4228:4231 Coq.Init.Datatypes <> list ind
R4233:4233 VST.floyd.reptype_lemmas <> X:101 var
binder 4225:4225 <> l:106
R4245:4248 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4249:4250 VST.floyd.reptype_lemmas <> F0:103 var
R4252:4252 VST.floyd.reptype_lemmas <> x:104 var
R4242:4242 VST.floyd.reptype_lemmas <> F:102 var
R4244:4244 VST.floyd.reptype_lemmas <> x:104 var
binder 4239:4239 <> f:107
R4260:4267 VST.floyd.type_induction <> ListType ind
R4270:4272 Coq.Lists.List <> map def
R4300:4303 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4298:4299 VST.floyd.reptype_lemmas <> x0:105 var
R4304:4304 VST.floyd.reptype_lemmas <> l:106 var
binder 4279:4279 <> x:108
R4287:4290 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4291:4292 VST.floyd.reptype_lemmas <> F0:103 var
R4294:4294 VST.floyd.reptype_lemmas <> x:108 var
R4284:4284 VST.floyd.reptype_lemmas <> F:102 var
R4286:4286 VST.floyd.reptype_lemmas <> x:108 var
binder 4256:4257 <> fl:109
R4316:4326 VST.floyd.compact_prod_sum <> compact_sum def
R4329:4331 Coq.Lists.List <> map def
R4338:4341 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4336:4337 VST.floyd.reptype_lemmas <> x0:105 var
R4342:4342 VST.floyd.reptype_lemmas <> l:106 var
R4333:4333 VST.floyd.reptype_lemmas <> F:102 var
binder 4312:4313 <> vl:110
R4401:4403 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4350:4364 VST.floyd.reptype_lemmas <> compact_sum_map def
R4394:4396 Coq.Init.Datatypes <> inr constr
R4398:4399 VST.floyd.reptype_lemmas <> vl:110 var
R4382:4385 VST.floyd.type_induction <> Cons constr
R4389:4390 VST.floyd.reptype_lemmas <> fl:109 var
R4387:4387 VST.floyd.reptype_lemmas <> f:107 var
R4368:4371 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4367:4367 VST.floyd.reptype_lemmas <> x:104 var
R4374:4377 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4372:4373 VST.floyd.reptype_lemmas <> x0:105 var
R4378:4378 VST.floyd.reptype_lemmas <> l:106 var
R4404:4406 Coq.Init.Datatypes <> inr constr
R4409:4423 VST.floyd.reptype_lemmas <> compact_sum_map def
R4430:4431 VST.floyd.reptype_lemmas <> vl:110 var
R4427:4428 VST.floyd.reptype_lemmas <> fl:109 var
def 4486:4496 <> reptype_gen
R4503:4511 VST.veric.mpred <> compspecs class
binder 4499:4500 <> cs:111
R4520:4524 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4542:4542 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4525:4528 Coq.Init.Specif <> sigT ind
binder 4535:4535 <> x:112
R4540:4540 VST.floyd.reptype_lemmas <> x:112 var
R4516:4519 compcert.cfrontend.Ctypes <> type ind
R4549:4557 VST.floyd.type_induction <> type_func def
binder 4931:4932 <> id:113
binder 4934:4934 <> a:114
binder 4936:4938 <> TVs:115
R4943:4948 Coq.Init.Specif <> existT constr
R5000:5021 VST.floyd.reptype_lemmas <> compact_sum_sigT_value def
R5024:5028 VST.floyd.type_induction <> decay def
R5030:5032 VST.floyd.reptype_lemmas <> TVs:115 var
R4964:4984 VST.floyd.reptype_lemmas <> compact_sum_sigT_type def
R4987:4991 VST.floyd.type_induction <> decay def
R4993:4995 VST.floyd.reptype_lemmas <> TVs:115 var
binder 4955:4955 <> x:116
R4960:4960 VST.floyd.reptype_lemmas <> x:116 var
binder 4816:4817 <> id:117
binder 4819:4819 <> a:118
binder 4821:4823 <> TVs:119
R4828:4833 Coq.Init.Specif <> existT constr
R4886:4908 VST.floyd.reptype_lemmas <> compact_prod_sigT_value def
R4911:4915 VST.floyd.type_induction <> decay def
R4917:4919 VST.floyd.reptype_lemmas <> TVs:119 var
R4849:4870 VST.floyd.reptype_lemmas <> compact_prod_sigT_type def
R4873:4877 VST.floyd.type_induction <> decay def
R4879:4881 VST.floyd.reptype_lemmas <> TVs:119 var
binder 4840:4840 <> x:120
R4845:4845 VST.floyd.reptype_lemmas <> x:120 var
binder 4718:4718 <> t:121
binder 4720:4720 <> n:122
binder 4722:4722 <> a:123
binder 4724:4725 <> TV:124
R4730:4735 Coq.Init.Specif <> existT constr
R4770:4780 compcert.lib.Coqlib <> list_repeat def
R4796:4801 Coq.Init.Specif <> projT2 def
R4803:4804 VST.floyd.reptype_lemmas <> TV:124 var
R4783:4790 Coq.ZArith.BinInt Z to_nat def
R4792:4792 VST.floyd.reptype_lemmas <> n:122 var
R4751:4754 Coq.Init.Datatypes <> list ind
R4757:4762 Coq.Init.Specif <> projT1 def
R4764:4765 VST.floyd.reptype_lemmas <> TV:124 var
binder 4742:4742 <> x:125
R4747:4747 VST.floyd.reptype_lemmas <> x:125 var
binder 4597:4597 <> t:126
R4611:4626 VST.veric.mpred <> type_is_by_value def
R4628:4628 VST.floyd.reptype_lemmas <> t:126 var
R4682:4687 Coq.Init.Specif <> existT constr
R4707:4708 Coq.Init.Datatypes <> tt constr
R4702:4705 Coq.Init.Datatypes <> unit ind
binder 4694:4694 <> x:127
R4699:4699 VST.floyd.reptype_lemmas <> x:127 var
R4641:4646 Coq.Init.Specif <> existT constr
R4665:4670 compcert.common.Values <> Vundef constr
R4661:4663 compcert.common.Values <> val ind
binder 4653:4653 <> x:128
R4658:4658 VST.floyd.reptype_lemmas <> x:128 var
R4570:4573 Coq.Init.Specif <> sigT ind
binder 4580:4580 <> x:129
R4585:4585 VST.floyd.reptype_lemmas <> x:129 var
def 5050:5056 <> reptype
R5063:5071 VST.veric.mpred <> compspecs class
binder 5059:5060 <> cs:130
binder 5074:5074 <> t:131
R5091:5101 VST.floyd.reptype_lemmas <> reptype_gen def
R5103:5103 VST.floyd.reptype_lemmas <> t:131 var
R5110:5115 Coq.Init.Specif <> existT constr
R5124:5124 VST.floyd.reptype_lemmas <> t:131 var
def 5143:5153 <> default_val
R5160:5168 VST.veric.mpred <> compspecs class
binder 5156:5157 <> cs:132
binder 5171:5171 <> t:133
R5174:5180 VST.floyd.reptype_lemmas <> reptype def
R5182:5182 VST.floyd.reptype_lemmas <> t:133 var
R5195:5205 VST.floyd.reptype_lemmas <> reptype_gen def
R5207:5207 VST.floyd.reptype_lemmas <> t:133 var
R5232:5233 VST.floyd.reptype_lemmas <> tv:134 var
R5240:5245 Coq.Init.Specif <> existT constr
R5254:5254 VST.floyd.reptype_lemmas <> t:133 var
R5267:5272 Coq.Init.Specif <> existT constr
inst 5298:5315 <> Inhabitant_reptype
R5322:5330 VST.veric.mpred <> compspecs class
binder 5318:5319 <> cs:136
R5337:5340 compcert.cfrontend.Ctypes <> type ind
binder 5334:5334 <> t:137
R5345:5354 VST.floyd.sublist <> Inhabitant class
R5357:5363 VST.floyd.reptype_lemmas <> reptype def
R5365:5365 VST.floyd.reptype_lemmas <> t:137 var
R5371:5381 VST.floyd.reptype_lemmas <> default_val def
sec 5395:5398 <> CENV
R5414:5422 VST.veric.mpred <> compspecs class
binder 5410:5411 <> cs:138
prf 5433:5446 <> reptype_gen_eq
binder 5456:5456 <> t:139
R5474:5478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5461:5471 VST.floyd.reptype_lemmas <> reptype_gen def
R5473:5473 VST.floyd.reptype_lemmas <> t:139 var
R5485:5485 VST.floyd.reptype_lemmas <> t:139 var
R5496:5501 compcert.cfrontend.Ctypes <> Tarray constr
R5513:5518 Coq.Init.Specif <> existT constr
R5567:5577 compcert.lib.Coqlib <> list_repeat def
R5593:5598 Coq.Init.Specif <> projT2 def
R5601:5611 VST.floyd.reptype_lemmas <> reptype_gen def
R5580:5587 Coq.ZArith.BinInt Z to_nat def
R5534:5537 Coq.Init.Datatypes <> list ind
R5540:5545 Coq.Init.Specif <> projT1 def
R5548:5558 VST.floyd.reptype_lemmas <> reptype_gen def
binder 5525:5525 <> x:141
R5530:5530 VST.floyd.reptype_lemmas <> x:141 var
R5623:5629 compcert.cfrontend.Ctypes <> Tstruct constr
R5639:5644 Coq.Init.Specif <> existT constr
R5833:5855 VST.floyd.reptype_lemmas <> compact_prod_sigT_value def
R5858:5860 Coq.Lists.List <> map def
R5875:5877 Coq.Lists.List <> map def
R5937:5946 compcert.cfrontend.Ctypes <> co_members proj
R5949:5954 VST.floyd.base <> get_co def
binder 5884:5885 <> it:142
R5890:5899 VST.floyd.fieldlist <> field_type def
R5911:5920 compcert.cfrontend.Ctypes <> co_members proj
R5923:5928 VST.floyd.base <> get_co def
R5902:5904 Coq.Init.Datatypes <> fst def
R5906:5907 VST.floyd.reptype_lemmas <> it:142 var
R5862:5872 VST.floyd.reptype_lemmas <> reptype_gen def
R5681:5702 VST.floyd.reptype_lemmas <> compact_prod_sigT_type def
R5705:5707 Coq.Lists.List <> map def
R5722:5724 Coq.Lists.List <> map def
R5784:5793 compcert.cfrontend.Ctypes <> co_members proj
R5796:5801 VST.floyd.base <> get_co def
binder 5731:5732 <> it:143
R5737:5746 VST.floyd.fieldlist <> field_type def
R5758:5767 compcert.cfrontend.Ctypes <> co_members proj
R5770:5775 VST.floyd.base <> get_co def
R5749:5751 Coq.Init.Datatypes <> fst def
R5753:5754 VST.floyd.reptype_lemmas <> it:143 var
R5709:5719 VST.floyd.reptype_lemmas <> reptype_gen def
binder 5651:5651 <> x:144
R5656:5656 VST.floyd.reptype_lemmas <> x:144 var
R5968:5973 compcert.cfrontend.Ctypes <> Tunion constr
R5983:5988 Coq.Init.Specif <> existT constr
R6176:6197 VST.floyd.reptype_lemmas <> compact_sum_sigT_value def
R6200:6202 Coq.Lists.List <> map def
R6217:6219 Coq.Lists.List <> map def
R6279:6288 compcert.cfrontend.Ctypes <> co_members proj
R6291:6296 VST.floyd.base <> get_co def
binder 6226:6227 <> it:145
R6232:6241 VST.floyd.fieldlist <> field_type def
R6253:6262 compcert.cfrontend.Ctypes <> co_members proj
R6265:6270 VST.floyd.base <> get_co def
R6244:6246 Coq.Init.Datatypes <> fst def
R6248:6249 VST.floyd.reptype_lemmas <> it:145 var
R6204:6214 VST.floyd.reptype_lemmas <> reptype_gen def
R6025:6045 VST.floyd.reptype_lemmas <> compact_sum_sigT_type def
R6048:6050 Coq.Lists.List <> map def
R6065:6067 Coq.Lists.List <> map def
R6127:6136 compcert.cfrontend.Ctypes <> co_members proj
R6139:6144 VST.floyd.base <> get_co def
binder 6074:6075 <> it:146
R6080:6089 VST.floyd.fieldlist <> field_type def
R6101:6110 compcert.cfrontend.Ctypes <> co_members proj
R6113:6118 VST.floyd.base <> get_co def
R6092:6094 Coq.Init.Datatypes <> fst def
R6096:6097 VST.floyd.reptype_lemmas <> it:146 var
R6052:6062 VST.floyd.reptype_lemmas <> reptype_gen def
binder 5995:5995 <> x:147
R6000:6000 VST.floyd.reptype_lemmas <> x:147 var
R6319:6334 VST.veric.mpred <> type_is_by_value def
R6336:6336 VST.floyd.reptype_lemmas <> t:139 var
R6398:6403 Coq.Init.Specif <> existT constr
R6423:6424 Coq.Init.Datatypes <> tt constr
R6418:6421 Coq.Init.Datatypes <> unit ind
binder 6410:6410 <> x:148
R6415:6415 VST.floyd.reptype_lemmas <> x:148 var
R6353:6358 Coq.Init.Specif <> existT constr
R6377:6382 compcert.common.Values <> Vundef constr
R6373:6375 compcert.common.Values <> val ind
binder 6365:6365 <> x:149
R6370:6370 VST.floyd.reptype_lemmas <> x:149 var
R6459:6469 VST.floyd.reptype_lemmas <> reptype_gen def
R6487:6498 VST.floyd.type_induction <> type_func_eq thm
R6487:6498 VST.floyd.type_induction <> type_func_eq thm
R6487:6498 VST.floyd.type_induction <> type_func_eq thm
R6533:6539 VST.floyd.type_induction <> FTI_aux def
R6550:6559 VST.floyd.type_induction <> decay_spec thm
R6550:6559 VST.floyd.type_induction <> decay_spec thm
R6550:6559 VST.floyd.type_induction <> decay_spec thm
R6574:6580 VST.floyd.reptype_lemmas <> map_map def
R6574:6580 VST.floyd.reptype_lemmas <> map_map def
R6574:6580 VST.floyd.reptype_lemmas <> map_map def
R6611:6617 VST.floyd.type_induction <> FTI_aux def
R6628:6637 VST.floyd.type_induction <> decay_spec thm
R6628:6637 VST.floyd.type_induction <> decay_spec thm
R6628:6637 VST.floyd.type_induction <> decay_spec thm
R6652:6658 VST.floyd.reptype_lemmas <> map_map def
R6652:6658 VST.floyd.reptype_lemmas <> map_map def
R6652:6658 VST.floyd.reptype_lemmas <> map_map def
def 6699:6716 <> reptype_structlist
R6722:6728 compcert.cfrontend.Ctypes <> members def
binder 6719:6719 <> m:150
R6734:6745 VST.floyd.compact_prod_sum <> compact_prod def
R6748:6750 Coq.Lists.List <> map def
R6796:6796 VST.floyd.reptype_lemmas <> m:150 var
binder 6757:6758 <> it:151
R6763:6769 VST.floyd.reptype_lemmas <> reptype def
R6772:6781 VST.floyd.fieldlist <> field_type def
R6792:6792 VST.floyd.reptype_lemmas <> m:150 var
R6784:6786 Coq.Init.Datatypes <> fst def
R6788:6789 VST.floyd.reptype_lemmas <> it:151 var
def 6811:6827 <> reptype_unionlist
R6833:6839 compcert.cfrontend.Ctypes <> members def
binder 6830:6830 <> m:152
R6845:6855 VST.floyd.compact_prod_sum <> compact_sum def
R6858:6860 Coq.Lists.List <> map def
R6906:6906 VST.floyd.reptype_lemmas <> m:152 var
binder 6867:6868 <> it:153
R6873:6879 VST.floyd.reptype_lemmas <> reptype def
R6882:6891 VST.floyd.fieldlist <> field_type def
R6902:6902 VST.floyd.reptype_lemmas <> m:152 var
R6894:6896 Coq.Init.Datatypes <> fst def
R6898:6899 VST.floyd.reptype_lemmas <> it:153 var
syndef 6920:6926 <> REPTYPE
R6964:6968 compcert.cfrontend.Ctypes <> Tvoid constr
R6974:6982 compcert.cfrontend.Ctypes <> Tfunction constr
R6993:6996 Coq.Init.Datatypes <> unit ind
R6993:6996 Coq.Init.Datatypes <> unit ind
R7002:7005 compcert.cfrontend.Ctypes <> Tint constr
R7017:7021 compcert.cfrontend.Ctypes <> Tlong constr
R7031:7036 compcert.cfrontend.Ctypes <> Tfloat constr
R7046:7053 compcert.cfrontend.Ctypes <> Tpointer constr
R7062:7064 compcert.common.Values <> val ind
R7062:7064 compcert.common.Values <> val ind
R7062:7064 compcert.common.Values <> val ind
R7062:7064 compcert.common.Values <> val ind
R7070:7075 compcert.cfrontend.Ctypes <> Tarray constr
R7087:7090 Coq.Init.Datatypes <> list ind
R7093:7099 VST.floyd.reptype_lemmas <> reptype def
R7109:7115 compcert.cfrontend.Ctypes <> Tstruct constr
R7125:7142 VST.floyd.reptype_lemmas <> reptype_structlist def
R7145:7154 compcert.cfrontend.Ctypes <> co_members proj
R7157:7162 VST.floyd.base <> get_co def
R7173:7178 compcert.cfrontend.Ctypes <> Tunion constr
R7188:7204 VST.floyd.reptype_lemmas <> reptype_unionlist def
R7207:7216 compcert.cfrontend.Ctypes <> co_members proj
R7219:7224 VST.floyd.base <> get_co def
prf 7245:7254 <> reptype_eq
binder 7264:7264 <> t:154
R7278:7280 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7269:7275 VST.floyd.reptype_lemmas <> reptype def
R7277:7277 VST.floyd.reptype_lemmas <> t:154 var
R7281:7287 VST.floyd.reptype_lemmas <> REPTYPE syndef
R7289:7289 VST.floyd.reptype_lemmas <> t:154 var
R7318:7324 VST.floyd.reptype_lemmas <> reptype def
R7337:7350 VST.floyd.reptype_lemmas <> reptype_gen_eq thm
R7337:7350 VST.floyd.reptype_lemmas <> reptype_gen_eq thm
R7337:7350 VST.floyd.reptype_lemmas <> reptype_gen_eq thm
R7415:7436 VST.floyd.reptype_lemmas <> compact_prod_sigT_type def
R7454:7480 VST.floyd.base <> get_co_members_no_replicate thm
R7454:7480 VST.floyd.base <> get_co_members_no_replicate thm
R7498:7507 compcert.cfrontend.Ctypes <> co_members proj
R7510:7515 VST.floyd.base <> get_co def
R7498:7507 compcert.cfrontend.Ctypes <> co_members proj
R7510:7515 VST.floyd.base <> get_co def
R7540:7546 VST.floyd.reptype_lemmas <> map_map def
R7540:7546 VST.floyd.reptype_lemmas <> map_map def
R7540:7546 VST.floyd.reptype_lemmas <> map_map def
R7561:7567 VST.floyd.reptype_lemmas <> map_map def
R7561:7567 VST.floyd.reptype_lemmas <> map_map def
R7561:7567 VST.floyd.reptype_lemmas <> map_map def
R7581:7598 VST.floyd.reptype_lemmas <> reptype_structlist def
R7625:7645 VST.floyd.reptype_lemmas <> compact_sum_sigT_type def
R7663:7689 VST.floyd.base <> get_co_members_no_replicate thm
R7663:7689 VST.floyd.base <> get_co_members_no_replicate thm
R7707:7716 compcert.cfrontend.Ctypes <> co_members proj
R7719:7724 VST.floyd.base <> get_co def
R7707:7716 compcert.cfrontend.Ctypes <> co_members proj
R7719:7724 VST.floyd.base <> get_co def
R7749:7755 VST.floyd.reptype_lemmas <> map_map def
R7749:7755 VST.floyd.reptype_lemmas <> map_map def
R7749:7755 VST.floyd.reptype_lemmas <> map_map def
R7770:7776 VST.floyd.reptype_lemmas <> map_map def
R7770:7776 VST.floyd.reptype_lemmas <> map_map def
R7770:7776 VST.floyd.reptype_lemmas <> map_map def
R7790:7806 VST.floyd.reptype_lemmas <> reptype_unionlist def
def 7843:7856 <> unfold_reptype
binder 7859:7859 <> t:155
R7866:7872 VST.floyd.reptype_lemmas <> reptype def
R7874:7874 VST.floyd.reptype_lemmas <> t:155 var
binder 7863:7863 <> v:156
R7878:7884 VST.floyd.reptype_lemmas <> REPTYPE syndef
R7886:7886 VST.floyd.reptype_lemmas <> t:155 var
R7894:7900 Coq.Init.Logic <> eq_rect scheme
R7953:7962 VST.floyd.reptype_lemmas <> reptype_eq thm
R7964:7964 VST.floyd.reptype_lemmas <> t:155 var
R7941:7947 VST.floyd.reptype_lemmas <> REPTYPE syndef
R7949:7949 VST.floyd.reptype_lemmas <> t:155 var
R7938:7938 VST.floyd.reptype_lemmas <> v:156 var
binder 7924:7924 <> x:157
R7935:7935 VST.floyd.reptype_lemmas <> x:157 var
R7908:7914 VST.floyd.reptype_lemmas <> reptype def
R7916:7916 VST.floyd.reptype_lemmas <> t:155 var
def 7980:7991 <> fold_reptype
binder 7994:7994 <> t:158
R8001:8007 VST.floyd.reptype_lemmas <> REPTYPE syndef
R8009:8009 VST.floyd.reptype_lemmas <> t:158 var
binder 7998:7998 <> v:159
R8013:8019 VST.floyd.reptype_lemmas <> reptype def
R8021:8021 VST.floyd.reptype_lemmas <> t:158 var
R8029:8037 Coq.Init.Logic <> eq_rect_r def
R8090:8099 VST.floyd.reptype_lemmas <> reptype_eq thm
R8101:8101 VST.floyd.reptype_lemmas <> t:158 var
R8078:8084 VST.floyd.reptype_lemmas <> reptype def
R8086:8086 VST.floyd.reptype_lemmas <> t:158 var
R8075:8075 VST.floyd.reptype_lemmas <> v:159 var
binder 8061:8061 <> x:160
R8072:8072 VST.floyd.reptype_lemmas <> x:160 var
R8045:8051 VST.floyd.reptype_lemmas <> REPTYPE syndef
R8053:8053 VST.floyd.reptype_lemmas <> t:158 var
prf 8112:8130 <> fold_unfold_reptype
binder 8140:8140 <> t:161
R8146:8152 VST.floyd.reptype_lemmas <> reptype def
R8154:8154 VST.floyd.reptype_lemmas <> t:161 var
binder 8143:8143 <> v:162
R8191:8193 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8160:8171 VST.floyd.reptype_lemmas <> fold_reptype def
R8174:8187 VST.floyd.reptype_lemmas <> unfold_reptype def
R8189:8189 VST.floyd.reptype_lemmas <> v:162 var
R8194:8194 VST.floyd.reptype_lemmas <> v:162 var
R8223:8234 VST.floyd.reptype_lemmas <> fold_reptype def
R8237:8250 VST.floyd.reptype_lemmas <> unfold_reptype def
R8261:8267 VST.floyd.jmeq_lemmas <> JMeq_eq thm
R8261:8267 VST.floyd.jmeq_lemmas <> JMeq_eq thm
R8295:8298 VST.floyd.jmeq_lemmas <> JMeq def
R8302:8310 Coq.Init.Logic <> eq_rect_r def
R8295:8298 VST.floyd.jmeq_lemmas <> JMeq def
R8302:8310 Coq.Init.Logic <> eq_rect_r def
R8348:8357 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R8368:8381 VST.floyd.jmeq_lemmas <> eq_rect_r_JMeq thm
R8348:8357 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R8368:8381 VST.floyd.jmeq_lemmas <> eq_rect_r_JMeq thm
R8431:8434 VST.floyd.jmeq_lemmas <> JMeq def
R8438:8444 Coq.Init.Logic <> eq_rect scheme
R8431:8434 VST.floyd.jmeq_lemmas <> JMeq def
R8438:8444 Coq.Init.Logic <> eq_rect scheme
R8481:8492 VST.floyd.jmeq_lemmas <> eq_rect_JMeq thm
R8481:8492 VST.floyd.jmeq_lemmas <> eq_rect_JMeq thm
prf 8530:8548 <> unfold_fold_reptype
binder 8558:8558 <> t:163
R8564:8570 VST.floyd.reptype_lemmas <> REPTYPE syndef
R8572:8572 VST.floyd.reptype_lemmas <> t:163 var
binder 8561:8561 <> v:164
R8609:8611 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8578:8591 VST.floyd.reptype_lemmas <> unfold_reptype def
R8594:8605 VST.floyd.reptype_lemmas <> fold_reptype def
R8607:8607 VST.floyd.reptype_lemmas <> v:164 var
R8612:8612 VST.floyd.reptype_lemmas <> v:164 var
R8641:8652 VST.floyd.reptype_lemmas <> fold_reptype def
R8655:8668 VST.floyd.reptype_lemmas <> unfold_reptype def
R8679:8685 VST.floyd.jmeq_lemmas <> JMeq_eq thm
R8679:8685 VST.floyd.jmeq_lemmas <> JMeq_eq thm
R8713:8716 VST.floyd.jmeq_lemmas <> JMeq def
R8720:8726 Coq.Init.Logic <> eq_rect scheme
R8713:8716 VST.floyd.jmeq_lemmas <> JMeq def
R8720:8726 Coq.Init.Logic <> eq_rect scheme
R8764:8773 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R8784:8795 VST.floyd.jmeq_lemmas <> eq_rect_JMeq thm
R8764:8773 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R8784:8795 VST.floyd.jmeq_lemmas <> eq_rect_JMeq thm
R8845:8848 VST.floyd.jmeq_lemmas <> JMeq def
R8852:8860 Coq.Init.Logic <> eq_rect_r def
R8845:8848 VST.floyd.jmeq_lemmas <> JMeq def
R8852:8860 Coq.Init.Logic <> eq_rect_r def
R8897:8910 VST.floyd.jmeq_lemmas <> eq_rect_r_JMeq thm
R8897:8910 VST.floyd.jmeq_lemmas <> eq_rect_r_JMeq thm
prf 8948:8966 <> unfold_reptype_JMeq
binder 8976:8976 <> t:165
R8982:8988 VST.floyd.reptype_lemmas <> reptype def
R8990:8990 VST.floyd.reptype_lemmas <> t:165 var
binder 8979:8979 <> v:166
R8996:8999 VST.floyd.jmeq_lemmas <> JMeq def
R9020:9020 VST.floyd.reptype_lemmas <> v:166 var
R9002:9015 VST.floyd.reptype_lemmas <> unfold_reptype def
R9017:9017 VST.floyd.reptype_lemmas <> v:166 var
R9049:9062 VST.floyd.reptype_lemmas <> unfold_reptype def
R9090:9093 VST.floyd.jmeq_lemmas <> JMeq def
R9097:9103 Coq.Init.Logic <> eq_rect scheme
R9090:9093 VST.floyd.jmeq_lemmas <> JMeq def
R9097:9103 Coq.Init.Logic <> eq_rect scheme
R9140:9151 VST.floyd.jmeq_lemmas <> eq_rect_JMeq thm
R9140:9151 VST.floyd.jmeq_lemmas <> eq_rect_JMeq thm
prf 9185:9201 <> fold_reptype_JMeq
binder 9211:9211 <> t:167
binder 9213:9213 <> v:168
R9218:9221 VST.floyd.jmeq_lemmas <> JMeq def
R9252:9252 VST.floyd.reptype_lemmas <> v:168 var
R9241:9247 VST.floyd.reptype_lemmas <> reptype def
R9249:9249 VST.floyd.reptype_lemmas <> t:167 var
R9224:9235 VST.floyd.reptype_lemmas <> fold_reptype def
R9237:9237 VST.floyd.reptype_lemmas <> v:168 var
R9281:9292 VST.floyd.reptype_lemmas <> fold_reptype def
R9320:9323 VST.floyd.jmeq_lemmas <> JMeq def
R9327:9335 Coq.Init.Logic <> eq_rect_r def
R9320:9323 VST.floyd.jmeq_lemmas <> JMeq def
R9327:9335 Coq.Init.Logic <> eq_rect_r def
R9372:9385 VST.floyd.jmeq_lemmas <> eq_rect_r_JMeq thm
R9372:9385 VST.floyd.jmeq_lemmas <> eq_rect_r_JMeq thm
def 9424:9443 <> union_default_filter
binder 9445:9445 <> m:169
R9458:9458 VST.floyd.reptype_lemmas <> m:169 var
R9469:9471 Coq.Init.Datatypes <> nil constr
R9485:9489 Coq.Init.Datatypes <> false constr
R9497:9500 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
binder 9510:9510 <> m:171
R9518:9527 VST.floyd.base <> member_dec def
R9532:9532 VST.floyd.reptype_lemmas <> m:171 var
R9549:9553 Coq.Init.Datatypes <> false constr
R9539:9542 Coq.Init.Datatypes <> true constr
def 9574:9590 <> is_default_filter
binder 9593:9593 <> A:172
binder 9596:9596 <> f:173
R9602:9605 Coq.Init.Datatypes <> list ind
R9607:9607 VST.floyd.reptype_lemmas <> A:172 var
binder 9599:9599 <> l:174
R9621:9621 VST.floyd.reptype_lemmas <> l:174 var
R9632:9634 Coq.Init.Datatypes <> nil constr
R9639:9642 Coq.Init.Logic <> True ind
R9650:9653 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9663:9665 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9659:9659 VST.floyd.reptype_lemmas <> f:173 var
R9666:9669 Coq.Init.Datatypes <> true constr
prf 9685:9722 <> union_default_filter_is_default_filter
binder 9732:9732 <> m:176
R9735:9751 VST.floyd.reptype_lemmas <> is_default_filter def
R9778:9778 VST.floyd.reptype_lemmas <> m:176 var
R9754:9773 VST.floyd.reptype_lemmas <> union_default_filter def
R9775:9775 VST.floyd.reptype_lemmas <> m:176 var
R9837:9846 VST.floyd.base <> member_dec def
R9837:9846 VST.floyd.base <> member_dec def
prf 9872:9899 <> const_true_is_default_filter
binder 9909:9909 <> m:177
R9912:9928 VST.floyd.reptype_lemmas <> is_default_filter def
R9960:9960 VST.floyd.reptype_lemmas <> m:177 var
R9943:9945 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R9938:9942 compcert.common.AST <> ident def
R9946:9949 compcert.cfrontend.Ctypes <> type ind
R9954:9957 Coq.Init.Datatypes <> true constr
def 10253:10270 <> struct_default_val
R10277:10283 compcert.cfrontend.Ctypes <> members def
binder 10273:10273 <> m:178
R10289:10304 VST.floyd.compact_prod_sum <> compact_prod_gen def
R10354:10354 VST.floyd.reptype_lemmas <> m:178 var
binder 10311:10312 <> it:179
R10317:10327 VST.floyd.reptype_lemmas <> default_val def
R10330:10339 VST.floyd.fieldlist <> field_type def
R10350:10350 VST.floyd.reptype_lemmas <> m:178 var
R10342:10344 Coq.Init.Datatypes <> fst def
R10346:10347 VST.floyd.reptype_lemmas <> it:179 var
def 10368:10384 <> union_default_val
R10391:10397 compcert.cfrontend.Ctypes <> members def
binder 10387:10387 <> m:180
R10403:10417 VST.floyd.compact_prod_sum <> compact_sum_gen def
R10484:10484 VST.floyd.reptype_lemmas <> m:180 var
binder 10441:10442 <> it:181
R10447:10457 VST.floyd.reptype_lemmas <> default_val def
R10460:10469 VST.floyd.fieldlist <> field_type def
R10480:10480 VST.floyd.reptype_lemmas <> m:180 var
R10472:10474 Coq.Init.Datatypes <> fst def
R10476:10477 VST.floyd.reptype_lemmas <> it:181 var
binder 10424:10425 <> it:182
R10430:10433 Coq.Init.Datatypes <> true constr
prf 10494:10527 <> compact_prod_sigT_compact_prod_gen
binder 10540:10540 <> A:183
binder 10542:10542 <> B:184
R10550:10553 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10549:10549 VST.floyd.reptype_lemmas <> A:183 var
binder 10546:10546 <> P:185
R10568:10571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10572:10572 VST.floyd.reptype_lemmas <> A:183 var
R10567:10567 VST.floyd.reptype_lemmas <> B:184 var
binder 10561:10564 <> genT:186
R10592:10592 VST.floyd.reptype_lemmas <> B:184 var
binder 10589:10589 <> b:187
R10595:10595 VST.floyd.reptype_lemmas <> P:185 var
R10598:10601 VST.floyd.reptype_lemmas <> genT:186 var
R10603:10603 VST.floyd.reptype_lemmas <> b:187 var
binder 10576:10579 <> genV:188
R10614:10617 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10618:10621 Coq.Init.Specif <> sigT ind
R10623:10623 VST.floyd.reptype_lemmas <> P:185 var
R10613:10613 VST.floyd.reptype_lemmas <> B:184 var
binder 10608:10610 <> gen:189
R10630:10633 Coq.Init.Datatypes <> list ind
R10635:10635 VST.floyd.reptype_lemmas <> B:184 var
binder 10627:10627 <> l:190
R10643:10643 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10688:10696 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10697:10700 VST.floyd.jmeq_lemmas <> JMeq def
R10741:10756 VST.floyd.compact_prod_sum <> compact_prod_gen def
R10763:10763 VST.floyd.reptype_lemmas <> l:190 var
R10758:10761 VST.floyd.reptype_lemmas <> genV:188 var
R10703:10725 VST.floyd.reptype_lemmas <> compact_prod_sigT_value def
R10728:10730 Coq.Lists.List <> map def
R10736:10736 VST.floyd.reptype_lemmas <> l:190 var
R10732:10734 VST.floyd.reptype_lemmas <> gen:189 var
binder 10651:10651 <> b:191
R10659:10661 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10654:10656 VST.floyd.reptype_lemmas <> gen:189 var
R10658:10658 VST.floyd.reptype_lemmas <> b:191 var
R10662:10667 Coq.Init.Specif <> existT constr
R10681:10684 VST.floyd.reptype_lemmas <> genV:188 var
R10686:10686 VST.floyd.reptype_lemmas <> b:191 var
R10672:10675 VST.floyd.reptype_lemmas <> genT:186 var
R10677:10677 VST.floyd.reptype_lemmas <> b:191 var
R10669:10669 VST.floyd.reptype_lemmas <> P:185 var
R10797:10799 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 10804:10804 <> b:192
R10809:10814 Coq.Init.Specif <> existT constr
R10833:10833 VST.floyd.reptype_lemmas <> b:192 var
R10824:10824 VST.floyd.reptype_lemmas <> b:192 var
R10797:10799 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 10804:10804 <> b:193
R10809:10814 Coq.Init.Specif <> existT constr
R10833:10833 VST.floyd.reptype_lemmas <> b:193 var
R10824:10824 VST.floyd.reptype_lemmas <> b:193 var
R10918:10926 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R10918:10926 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R10975:10983 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R10975:10983 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R11013:11028 VST.floyd.compact_prod_sum <> compact_prod_gen def
R11037:11040 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11042:11045 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11055:11055 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11062:11063 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11094:11094 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11064:11079 VST.floyd.compact_prod_sum <> compact_prod_gen def
R11088:11091 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11013:11028 VST.floyd.compact_prod_sum <> compact_prod_gen def
R11037:11040 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11042:11045 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11055:11055 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11062:11063 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11094:11094 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11064:11079 VST.floyd.compact_prod_sum <> compact_prod_gen def
R11088:11091 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11109:11131 VST.floyd.reptype_lemmas <> compact_prod_sigT_value def
R11168:11180 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11142:11147 Coq.Init.Specif <> existT constr
R11207:11222 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11181:11186 Coq.Init.Specif <> existT constr
R11223:11225 Coq.Lists.List <> map def
binder 11232:11233 <> b0:194
R11242:11247 Coq.Init.Specif <> existT constr
R11267:11268 VST.floyd.reptype_lemmas <> b0:194 var
R11257:11258 VST.floyd.reptype_lemmas <> b0:194 var
R11287:11287 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11294:11295 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11402:11402 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11296:11318 VST.floyd.reptype_lemmas <> compact_prod_sigT_value def
R11347:11350 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11321:11326 Coq.Init.Specif <> existT constr
R11351:11353 Coq.Lists.List <> map def
binder 11360:11361 <> b0:195
R11370:11375 Coq.Init.Specif <> existT constr
R11395:11396 VST.floyd.reptype_lemmas <> b0:195 var
R11385:11386 VST.floyd.reptype_lemmas <> b0:195 var
R11109:11131 VST.floyd.reptype_lemmas <> compact_prod_sigT_value def
R11168:11180 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11142:11147 Coq.Init.Specif <> existT constr
R11207:11222 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11181:11186 Coq.Init.Specif <> existT constr
R11223:11225 Coq.Lists.List <> map def
binder 11232:11233 <> b0:196
R11242:11247 Coq.Init.Specif <> existT constr
R11267:11268 VST.floyd.reptype_lemmas <> b0:196 var
R11257:11258 VST.floyd.reptype_lemmas <> b0:196 var
R11287:11287 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11294:11295 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11402:11402 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11296:11318 VST.floyd.reptype_lemmas <> compact_prod_sigT_value def
R11347:11350 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11321:11326 Coq.Init.Specif <> existT constr
R11351:11353 Coq.Lists.List <> map def
binder 11360:11361 <> b0:197
R11370:11375 Coq.Init.Specif <> existT constr
R11395:11396 VST.floyd.reptype_lemmas <> b0:197 var
R11385:11386 VST.floyd.reptype_lemmas <> b0:197 var
R11415:11423 VST.floyd.jmeq_lemmas <> JMeq_pair thm
R11415:11423 VST.floyd.jmeq_lemmas <> JMeq_pair thm
prf 11467:11498 <> compact_sum_sigT_compact_sum_gen
binder 11511:11511 <> A:198
binder 11513:11513 <> B:199
R11521:11524 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11520:11520 VST.floyd.reptype_lemmas <> A:198 var
binder 11517:11517 <> P:200
R11539:11542 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11543:11543 VST.floyd.reptype_lemmas <> A:198 var
R11538:11538 VST.floyd.reptype_lemmas <> B:199 var
binder 11532:11535 <> genT:201
R11563:11563 VST.floyd.reptype_lemmas <> B:199 var
binder 11560:11560 <> b:202
R11566:11566 VST.floyd.reptype_lemmas <> P:200 var
R11569:11572 VST.floyd.reptype_lemmas <> genT:201 var
R11574:11574 VST.floyd.reptype_lemmas <> b:202 var
binder 11547:11550 <> genV:203
R11588:11591 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11592:11595 Coq.Init.Datatypes <> bool ind
R11587:11587 VST.floyd.reptype_lemmas <> B:199 var
binder 11579:11584 <> filter:204
R11605:11608 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11609:11612 Coq.Init.Specif <> sigT ind
R11614:11614 VST.floyd.reptype_lemmas <> P:200 var
R11604:11604 VST.floyd.reptype_lemmas <> B:199 var
binder 11599:11601 <> gen:205
R11621:11624 Coq.Init.Datatypes <> list ind
R11626:11626 VST.floyd.reptype_lemmas <> B:199 var
binder 11618:11618 <> l:206
R11634:11634 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11679:11687 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11714:11721 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11722:11725 VST.floyd.jmeq_lemmas <> JMeq def
R11765:11779 VST.floyd.compact_prod_sum <> compact_sum_gen def
R11793:11793 VST.floyd.reptype_lemmas <> l:206 var
R11788:11791 VST.floyd.reptype_lemmas <> genV:203 var
R11781:11786 VST.floyd.reptype_lemmas <> filter:204 var
R11728:11749 VST.floyd.reptype_lemmas <> compact_sum_sigT_value def
R11752:11754 Coq.Lists.List <> map def
R11760:11760 VST.floyd.reptype_lemmas <> l:206 var
R11756:11758 VST.floyd.reptype_lemmas <> gen:205 var
R11688:11704 VST.floyd.reptype_lemmas <> is_default_filter def
R11713:11713 VST.floyd.reptype_lemmas <> l:206 var
R11706:11711 VST.floyd.reptype_lemmas <> filter:204 var
binder 11642:11642 <> b:207
R11650:11652 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11645:11647 VST.floyd.reptype_lemmas <> gen:205 var
R11649:11649 VST.floyd.reptype_lemmas <> b:207 var
R11653:11658 Coq.Init.Specif <> existT constr
R11672:11675 VST.floyd.reptype_lemmas <> genV:203 var
R11677:11677 VST.floyd.reptype_lemmas <> b:207 var
R11663:11666 VST.floyd.reptype_lemmas <> genT:201 var
R11668:11668 VST.floyd.reptype_lemmas <> b:207 var
R11660:11660 VST.floyd.reptype_lemmas <> P:200 var
R11827:11829 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 11834:11834 <> b:208
R11839:11844 Coq.Init.Specif <> existT constr
R11863:11863 VST.floyd.reptype_lemmas <> b:208 var
R11854:11854 VST.floyd.reptype_lemmas <> b:208 var
R11827:11829 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 11834:11834 <> b:209
R11839:11844 Coq.Init.Specif <> existT constr
R11863:11863 VST.floyd.reptype_lemmas <> b:209 var
R11854:11854 VST.floyd.reptype_lemmas <> b:209 var
R11948:11956 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R11948:11956 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R11986:11994 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R11986:11994 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R12009:12030 VST.floyd.reptype_lemmas <> compact_sum_sigT_value def
R12041:12043 Coq.Lists.List <> map def
R12092:12095 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12098:12101 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
binder 12050:12051 <> b1:210
R12060:12065 Coq.Init.Specif <> existT constr
R12085:12086 VST.floyd.reptype_lemmas <> b1:210 var
R12075:12076 VST.floyd.reptype_lemmas <> b1:210 var
R12116:12118 Coq.Init.Datatypes <> inl constr
R12134:12144 VST.floyd.compact_prod_sum <> compact_sum def
R12147:12149 Coq.Lists.List <> map def
R12200:12202 Coq.Lists.List <> map def
R12255:12258 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
binder 12209:12210 <> b1:211
R12220:12225 Coq.Init.Specif <> existT constr
R12247:12248 VST.floyd.reptype_lemmas <> b1:211 var
R12237:12238 VST.floyd.reptype_lemmas <> b1:211 var
binder 12156:12157 <> tv:212
R12168:12169 VST.floyd.reptype_lemmas <> tv:212 var
R12176:12181 Coq.Init.Specif <> existT constr
R12009:12030 VST.floyd.reptype_lemmas <> compact_sum_sigT_value def
R12041:12043 Coq.Lists.List <> map def
R12092:12095 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12098:12101 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
binder 12050:12051 <> b1:214
R12060:12065 Coq.Init.Specif <> existT constr
R12085:12086 VST.floyd.reptype_lemmas <> b1:214 var
R12075:12076 VST.floyd.reptype_lemmas <> b1:214 var
R12116:12118 Coq.Init.Datatypes <> inl constr
R12134:12144 VST.floyd.compact_prod_sum <> compact_sum def
R12147:12149 Coq.Lists.List <> map def
R12200:12202 Coq.Lists.List <> map def
R12255:12258 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
binder 12209:12210 <> b1:215
R12220:12225 Coq.Init.Specif <> existT constr
R12247:12248 VST.floyd.reptype_lemmas <> b1:215 var
R12237:12238 VST.floyd.reptype_lemmas <> b1:215 var
binder 12156:12157 <> tv:216
R12168:12169 VST.floyd.reptype_lemmas <> tv:216 var
R12176:12181 Coq.Init.Specif <> existT constr
R12288:12298 VST.floyd.compact_prod_sum <> compact_sum def
R12301:12303 Coq.Lists.List <> map def
R12353:12355 Coq.Lists.List <> map def
R12407:12410 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12413:12416 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
binder 12362:12363 <> b1:218
R12373:12378 Coq.Init.Specif <> existT constr
R12400:12401 VST.floyd.reptype_lemmas <> b1:218 var
R12390:12391 VST.floyd.reptype_lemmas <> b1:218 var
binder 12310:12311 <> tv:219
R12329:12334 Coq.Init.Specif <> existT constr
R12445:12447 Coq.Init.Datatypes <> ::type_scope:x_'+'_x not
R12448:12458 VST.floyd.compact_prod_sum <> compact_sum def
R12461:12463 Coq.Lists.List <> map def
R12514:12516 Coq.Lists.List <> map def
R12569:12572 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
binder 12523:12524 <> b1:220
R12534:12539 Coq.Init.Specif <> existT constr
R12561:12562 VST.floyd.reptype_lemmas <> b1:220 var
R12551:12552 VST.floyd.reptype_lemmas <> b1:220 var
binder 12470:12471 <> tv:221
R12482:12483 VST.floyd.reptype_lemmas <> tv:221 var
R12490:12495 Coq.Init.Specif <> existT constr
R12288:12298 VST.floyd.compact_prod_sum <> compact_sum def
R12301:12303 Coq.Lists.List <> map def
R12353:12355 Coq.Lists.List <> map def
R12407:12410 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12413:12416 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
binder 12362:12363 <> b1:223
R12373:12378 Coq.Init.Specif <> existT constr
R12400:12401 VST.floyd.reptype_lemmas <> b1:223 var
R12390:12391 VST.floyd.reptype_lemmas <> b1:223 var
binder 12310:12311 <> tv:224
R12329:12334 Coq.Init.Specif <> existT constr
R12445:12447 Coq.Init.Datatypes <> ::type_scope:x_'+'_x not
R12448:12458 VST.floyd.compact_prod_sum <> compact_sum def
R12461:12463 Coq.Lists.List <> map def
R12514:12516 Coq.Lists.List <> map def
R12569:12572 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
binder 12523:12524 <> b1:225
R12534:12539 Coq.Init.Specif <> existT constr
R12561:12562 VST.floyd.reptype_lemmas <> b1:225 var
R12551:12552 VST.floyd.reptype_lemmas <> b1:225 var
binder 12470:12471 <> tv:226
R12482:12483 VST.floyd.reptype_lemmas <> tv:226 var
R12490:12495 Coq.Init.Specif <> existT constr
R12598:12612 VST.floyd.compact_prod_sum <> compact_sum_gen def
R12628:12631 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12634:12637 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12655:12657 Coq.Init.Datatypes <> inl constr
R12673:12683 VST.floyd.compact_prod_sum <> compact_sum def
R12686:12688 Coq.Lists.List <> map def
R12721:12724 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
binder 12695:12696 <> b1:228
R12713:12714 VST.floyd.reptype_lemmas <> b1:228 var
R12598:12612 VST.floyd.compact_prod_sum <> compact_sum_gen def
R12628:12631 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12634:12637 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R12655:12657 Coq.Init.Datatypes <> inl constr
R12673:12683 VST.floyd.compact_prod_sum <> compact_sum def
R12686:12688 Coq.Lists.List <> map def
R12721:12724 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
binder 12695:12696 <> b1:229
R12713:12714 VST.floyd.reptype_lemmas <> b1:229 var
R12839:12842 VST.floyd.jmeq_lemmas <> JMeq def
R12864:12866 Coq.Init.Datatypes <> inl constr
R12848:12850 Coq.Init.Datatypes <> inl constr
R12839:12842 VST.floyd.jmeq_lemmas <> JMeq def
R12864:12866 Coq.Init.Datatypes <> inl constr
R12848:12850 Coq.Init.Datatypes <> inl constr
R12936:12942 VST.floyd.reptype_lemmas <> map_map def
R12936:12942 VST.floyd.reptype_lemmas <> map_map def
R12936:12942 VST.floyd.reptype_lemmas <> map_map def
prf 12970:12983 <> default_val_eq
binder 12993:12993 <> t:230
R13011:13015 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12998:13008 VST.floyd.reptype_lemmas <> default_val def
R13010:13010 VST.floyd.reptype_lemmas <> t:230 var
R13016:13027 VST.floyd.reptype_lemmas <> fold_reptype def
R13037:13037 VST.floyd.reptype_lemmas <> t:230 var
R13052:13058 VST.floyd.reptype_lemmas <> REPTYPE syndef
R13060:13061 VST.floyd.reptype_lemmas <> t':231 var
R13074:13078 compcert.cfrontend.Ctypes <> Tvoid constr
R13084:13092 compcert.cfrontend.Ctypes <> Tfunction constr
R13103:13104 Coq.Init.Datatypes <> tt constr
R13103:13104 Coq.Init.Datatypes <> tt constr
R13110:13113 compcert.cfrontend.Ctypes <> Tint constr
R13125:13129 compcert.cfrontend.Ctypes <> Tlong constr
R13139:13144 compcert.cfrontend.Ctypes <> Tfloat constr
R13154:13161 compcert.cfrontend.Ctypes <> Tpointer constr
R13170:13175 compcert.common.Values <> Vundef constr
R13170:13175 compcert.common.Values <> Vundef constr
R13170:13175 compcert.common.Values <> Vundef constr
R13170:13175 compcert.common.Values <> Vundef constr
R13181:13186 compcert.cfrontend.Ctypes <> Tarray constr
R13198:13208 compcert.lib.Coqlib <> list_repeat def
R13224:13234 VST.floyd.reptype_lemmas <> default_val def
R13211:13218 Coq.ZArith.BinInt Z to_nat def
R13244:13250 compcert.cfrontend.Ctypes <> Tstruct constr
R13260:13277 VST.floyd.reptype_lemmas <> struct_default_val def
R13280:13289 compcert.cfrontend.Ctypes <> co_members proj
R13292:13297 VST.floyd.base <> get_co def
R13308:13313 compcert.cfrontend.Ctypes <> Tunion constr
R13323:13339 VST.floyd.reptype_lemmas <> union_default_val def
R13342:13351 compcert.cfrontend.Ctypes <> co_members proj
R13354:13359 VST.floyd.base <> get_co def
R13399:13410 VST.floyd.reptype_lemmas <> fold_reptype def
R13421:13427 VST.floyd.jmeq_lemmas <> JMeq_eq thm
R13421:13427 VST.floyd.jmeq_lemmas <> JMeq_eq thm
R13455:13458 VST.floyd.jmeq_lemmas <> JMeq def
R13464:13472 Coq.Init.Logic <> eq_rect_r def
R13455:13458 VST.floyd.jmeq_lemmas <> JMeq def
R13464:13472 Coq.Init.Logic <> eq_rect_r def
R13507:13516 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R13529:13536 VST.floyd.jmeq_lemmas <> JMeq_sym thm
R13547:13560 VST.floyd.jmeq_lemmas <> eq_rect_r_JMeq thm
R13507:13516 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R13529:13536 VST.floyd.jmeq_lemmas <> JMeq_sym thm
R13547:13560 VST.floyd.jmeq_lemmas <> eq_rect_r_JMeq thm
R13592:13602 VST.floyd.reptype_lemmas <> default_val def
R13614:13620 VST.floyd.reptype_lemmas <> reptype def
R13638:13651 VST.floyd.reptype_lemmas <> reptype_gen_eq thm
R13638:13651 VST.floyd.reptype_lemmas <> reptype_gen_eq thm
R13638:13651 VST.floyd.reptype_lemmas <> reptype_gen_eq thm
R13685:13702 VST.floyd.reptype_lemmas <> struct_default_val def
R13717:13723 VST.floyd.reptype_lemmas <> map_map def
R13717:13723 VST.floyd.reptype_lemmas <> map_map def
R13717:13723 VST.floyd.reptype_lemmas <> map_map def
R13737:13770 VST.floyd.reptype_lemmas <> compact_prod_sigT_compact_prod_gen thm
binder 13931:13932 <> it:232
R13937:13947 VST.floyd.reptype_lemmas <> reptype_gen def
R13950:13959 VST.floyd.fieldlist <> field_type def
R13971:13980 compcert.cfrontend.Ctypes <> co_members proj
R13983:13988 VST.floyd.base <> get_co def
R13962:13964 Coq.Init.Datatypes <> fst def
R13966:13967 VST.floyd.reptype_lemmas <> it:232 var
binder 13855:13856 <> it:233
R13861:13871 VST.floyd.reptype_lemmas <> default_val def
R13874:13883 VST.floyd.fieldlist <> field_type def
R13895:13904 compcert.cfrontend.Ctypes <> co_members proj
R13907:13912 VST.floyd.base <> get_co def
R13886:13888 Coq.Init.Datatypes <> fst def
R13890:13891 VST.floyd.reptype_lemmas <> it:233 var
binder 13783:13784 <> it:234
R13789:13795 VST.floyd.reptype_lemmas <> reptype def
R13798:13807 VST.floyd.fieldlist <> field_type def
R13819:13828 compcert.cfrontend.Ctypes <> co_members proj
R13831:13836 VST.floyd.base <> get_co def
R13810:13812 Coq.Init.Datatypes <> fst def
R13814:13815 VST.floyd.reptype_lemmas <> it:234 var
R13737:13770 VST.floyd.reptype_lemmas <> compact_prod_sigT_compact_prod_gen thm
binder 13931:13932 <> it:235
R13937:13947 VST.floyd.reptype_lemmas <> reptype_gen def
R13950:13959 VST.floyd.fieldlist <> field_type def
R13971:13980 compcert.cfrontend.Ctypes <> co_members proj
R13983:13988 VST.floyd.base <> get_co def
R13962:13964 Coq.Init.Datatypes <> fst def
R13966:13967 VST.floyd.reptype_lemmas <> it:235 var
binder 13855:13856 <> it:236
R13861:13871 VST.floyd.reptype_lemmas <> default_val def
R13874:13883 VST.floyd.fieldlist <> field_type def
R13895:13904 compcert.cfrontend.Ctypes <> co_members proj
R13907:13912 VST.floyd.base <> get_co def
R13886:13888 Coq.Init.Datatypes <> fst def
R13890:13891 VST.floyd.reptype_lemmas <> it:236 var
binder 13783:13784 <> it:237
R13789:13795 VST.floyd.reptype_lemmas <> reptype def
R13798:13807 VST.floyd.fieldlist <> field_type def
R13819:13828 compcert.cfrontend.Ctypes <> co_members proj
R13831:13836 VST.floyd.base <> get_co def
R13810:13812 Coq.Init.Datatypes <> fst def
R13814:13815 VST.floyd.reptype_lemmas <> it:237 var
R14017:14023 VST.floyd.reptype_lemmas <> reptype def
R14026:14036 VST.floyd.reptype_lemmas <> default_val def
R14053:14063 VST.floyd.reptype_lemmas <> reptype_gen def
R14066:14075 VST.floyd.fieldlist <> field_type def
R14086:14095 compcert.cfrontend.Ctypes <> co_members proj
R14098:14103 VST.floyd.base <> get_co def
R14078:14080 Coq.Init.Datatypes <> fst def
R14053:14063 VST.floyd.reptype_lemmas <> reptype_gen def
R14066:14075 VST.floyd.fieldlist <> field_type def
R14086:14095 compcert.cfrontend.Ctypes <> co_members proj
R14098:14103 VST.floyd.base <> get_co def
R14078:14080 Coq.Init.Datatypes <> fst def
R14136:14152 VST.floyd.reptype_lemmas <> union_default_val def
R14167:14173 VST.floyd.reptype_lemmas <> map_map def
R14167:14173 VST.floyd.reptype_lemmas <> map_map def
R14167:14173 VST.floyd.reptype_lemmas <> map_map def
R14187:14218 VST.floyd.reptype_lemmas <> compact_sum_sigT_compact_sum_gen thm
binder 14387:14388 <> it:238
R14393:14403 VST.floyd.reptype_lemmas <> reptype_gen def
R14406:14415 VST.floyd.fieldlist <> field_type def
R14427:14436 compcert.cfrontend.Ctypes <> co_members proj
R14439:14444 VST.floyd.base <> get_co def
R14418:14420 Coq.Init.Datatypes <> fst def
R14422:14423 VST.floyd.reptype_lemmas <> it:238 var
binder 14303:14304 <> it:239
R14309:14319 VST.floyd.reptype_lemmas <> default_val def
R14322:14331 VST.floyd.fieldlist <> field_type def
R14343:14352 compcert.cfrontend.Ctypes <> co_members proj
R14355:14360 VST.floyd.base <> get_co def
R14334:14336 Coq.Init.Datatypes <> fst def
R14338:14339 VST.floyd.reptype_lemmas <> it:239 var
binder 14231:14232 <> it:240
R14237:14243 VST.floyd.reptype_lemmas <> reptype def
R14246:14255 VST.floyd.fieldlist <> field_type def
R14267:14276 compcert.cfrontend.Ctypes <> co_members proj
R14279:14284 VST.floyd.base <> get_co def
R14258:14260 Coq.Init.Datatypes <> fst def
R14262:14263 VST.floyd.reptype_lemmas <> it:240 var
R14187:14218 VST.floyd.reptype_lemmas <> compact_sum_sigT_compact_sum_gen thm
binder 14387:14388 <> it:241
R14393:14403 VST.floyd.reptype_lemmas <> reptype_gen def
R14406:14415 VST.floyd.fieldlist <> field_type def
R14427:14436 compcert.cfrontend.Ctypes <> co_members proj
R14439:14444 VST.floyd.base <> get_co def
R14418:14420 Coq.Init.Datatypes <> fst def
R14422:14423 VST.floyd.reptype_lemmas <> it:241 var
binder 14303:14304 <> it:242
R14309:14319 VST.floyd.reptype_lemmas <> default_val def
R14322:14331 VST.floyd.fieldlist <> field_type def
R14343:14352 compcert.cfrontend.Ctypes <> co_members proj
R14355:14360 VST.floyd.base <> get_co def
R14334:14336 Coq.Init.Datatypes <> fst def
R14338:14339 VST.floyd.reptype_lemmas <> it:242 var
binder 14231:14232 <> it:243
R14237:14243 VST.floyd.reptype_lemmas <> reptype def
R14246:14255 VST.floyd.fieldlist <> field_type def
R14267:14276 compcert.cfrontend.Ctypes <> co_members proj
R14279:14284 VST.floyd.base <> get_co def
R14258:14260 Coq.Init.Datatypes <> fst def
R14262:14263 VST.floyd.reptype_lemmas <> it:243 var
R14473:14479 VST.floyd.reptype_lemmas <> reptype def
R14482:14492 VST.floyd.reptype_lemmas <> default_val def
R14509:14519 VST.floyd.reptype_lemmas <> reptype_gen def
R14522:14531 VST.floyd.fieldlist <> field_type def
R14542:14551 compcert.cfrontend.Ctypes <> co_members proj
R14554:14559 VST.floyd.base <> get_co def
R14534:14536 Coq.Init.Datatypes <> fst def
R14509:14519 VST.floyd.reptype_lemmas <> reptype_gen def
R14522:14531 VST.floyd.fieldlist <> field_type def
R14542:14551 compcert.cfrontend.Ctypes <> co_members proj
R14554:14559 VST.floyd.base <> get_co def
R14534:14536 Coq.Init.Datatypes <> fst def
R14591:14618 VST.floyd.reptype_lemmas <> const_true_is_default_filter thm
R14591:14618 VST.floyd.reptype_lemmas <> const_true_is_default_filter thm
ind 14637:14647 <> pointer_val
constr 14663:14674 <> ValidPointer
constr 14716:14726 <> NullPointer
R14682:14685 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14696:14699 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14700:14710 VST.floyd.reptype_lemmas <> pointer_val:244 ind
R14686:14695 compcert.lib.Integers Ptrofs int rec
R14677:14681 compcert.common.Values <> block def
prf 14736:14744 <> PV_eq_dec
R14759:14769 VST.floyd.reptype_lemmas <> pointer_val ind
binder 14754:14754 <> x:246
binder 14756:14756 <> y:247
R14772:14772 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R14778:14782 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R14789:14789 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R14774:14776 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14773:14773 VST.floyd.reptype_lemmas <> x:246 var
R14777:14777 VST.floyd.reptype_lemmas <> y:247 var
R14784:14787 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R14783:14783 VST.floyd.reptype_lemmas <> x:246 var
R14788:14788 VST.floyd.reptype_lemmas <> y:247 var
R14878:14889 VST.veric.base <> block_eq_dec thm
R14899:14911 compcert.lib.Integers Ptrofs eq_dec thm
R14878:14889 VST.veric.base <> block_eq_dec thm
R14899:14911 compcert.lib.Integers Ptrofs eq_dec thm
R14899:14911 compcert.lib.Integers Ptrofs eq_dec thm
prf 14976:14988 <> zero_in_range
R14995:14997 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R14999:15001 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R15002:15012 compcert.lib.Integers Int modulus def
def 15060:15067 <> Int_zero
R15072:15080 compcert.lib.Integers Int mkint constr
R15084:15096 VST.floyd.reptype_lemmas <> zero_in_range thm
def 15111:15125 <> pointer_val_val
R15132:15142 VST.floyd.reptype_lemmas <> pointer_val ind
binder 15128:15129 <> pv:248
R15146:15148 compcert.common.Values <> val ind
R15161:15162 VST.floyd.reptype_lemmas <> pv:248 var
R15173:15184 VST.floyd.reptype_lemmas <> ValidPointer constr
R15193:15196 compcert.common.Values <> Vptr constr
R15206:15216 VST.floyd.reptype_lemmas <> NullPointer constr
R15221:15224 compcert.common.Values <> Vint constr
R15226:15233 compcert.lib.Integers Int zero def
def 15274:15281 <> reptype'
R15288:15291 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15284:15287 compcert.cfrontend.Ctypes <> type ind
R15302:15310 VST.floyd.type_induction <> type_func def
binder 15654:15655 <> id:250
binder 15657:15657 <> a:251
binder 15659:15659 <> T:252
R15664:15674 VST.floyd.compact_prod_sum <> compact_sum def
R15677:15681 VST.floyd.type_induction <> decay def
R15683:15683 VST.floyd.reptype_lemmas <> T:252 var
binder 15613:15614 <> id:253
binder 15616:15616 <> a:254
binder 15618:15618 <> T:255
R15623:15634 VST.floyd.compact_prod_sum <> compact_prod def
R15637:15641 VST.floyd.type_induction <> decay def
R15643:15643 VST.floyd.reptype_lemmas <> T:255 var
binder 15587:15587 <> t:256
binder 15589:15589 <> n:257
binder 15591:15591 <> a:258
binder 15593:15593 <> T:259
R15598:15601 Coq.Init.Datatypes <> list ind
R15603:15603 VST.floyd.reptype_lemmas <> T:259 var
binder 15335:15335 <> t:260
R15349:15364 VST.veric.mpred <> type_is_by_value def
R15366:15366 VST.floyd.reptype_lemmas <> t:260 var
R15574:15577 Coq.Init.Datatypes <> unit ind
R15385:15385 VST.floyd.reptype_lemmas <> t:260 var
R15404:15407 compcert.cfrontend.Ctypes <> Tint constr
R15418:15420 compcert.lib.Integers <> int syndef
R15434:15438 compcert.cfrontend.Ctypes <> Tlong constr
R15447:15455 compcert.lib.Integers Int64 int rec
R15469:15474 compcert.cfrontend.Ctypes <> Tfloat constr
R15483:15487 compcert.lib.Floats <> float def
R15501:15508 compcert.cfrontend.Ctypes <> Tpointer constr
R15517:15527 VST.floyd.reptype_lemmas <> pointer_val ind
R15546:15548 compcert.common.Values <> val ind
syndef 15698:15705 <> REPTYPE'
R15743:15747 compcert.cfrontend.Ctypes <> Tvoid constr
R15753:15761 compcert.cfrontend.Ctypes <> Tfunction constr
R15772:15775 Coq.Init.Datatypes <> unit ind
R15772:15775 Coq.Init.Datatypes <> unit ind
R15781:15784 compcert.cfrontend.Ctypes <> Tint constr
R15795:15797 compcert.lib.Integers <> int syndef
R15803:15807 compcert.cfrontend.Ctypes <> Tlong constr
R15816:15824 compcert.lib.Integers Int64 int rec
R15830:15835 compcert.cfrontend.Ctypes <> Tfloat constr
R15844:15848 compcert.lib.Floats <> float def
R15854:15861 compcert.cfrontend.Ctypes <> Tpointer constr
R15870:15880 VST.floyd.reptype_lemmas <> pointer_val ind
R15886:15891 compcert.cfrontend.Ctypes <> Tarray constr
R15903:15906 Coq.Init.Datatypes <> list ind
R15909:15916 VST.floyd.reptype_lemmas <> reptype' def
R15926:15932 compcert.cfrontend.Ctypes <> Tstruct constr
R15942:15953 VST.floyd.compact_prod_sum <> compact_prod def
R15956:15958 Coq.Lists.List <> map def
R16029:16038 compcert.cfrontend.Ctypes <> co_members proj
R16041:16046 VST.floyd.base <> get_co def
binder 15965:15966 <> it:262
R15971:15978 VST.floyd.reptype_lemmas <> reptype' def
R15981:15990 VST.floyd.fieldlist <> field_type def
R16002:16011 compcert.cfrontend.Ctypes <> co_members proj
R16014:16019 VST.floyd.base <> get_co def
R15993:15995 Coq.Init.Datatypes <> fst def
R15997:15998 VST.floyd.reptype_lemmas <> it:262 var
R16058:16063 compcert.cfrontend.Ctypes <> Tunion constr
R16073:16083 VST.floyd.compact_prod_sum <> compact_sum def
R16086:16088 Coq.Lists.List <> map def
R16159:16168 compcert.cfrontend.Ctypes <> co_members proj
R16171:16176 VST.floyd.base <> get_co def
binder 16095:16096 <> it:263
R16101:16108 VST.floyd.reptype_lemmas <> reptype' def
R16111:16120 VST.floyd.fieldlist <> field_type def
R16132:16141 compcert.cfrontend.Ctypes <> co_members proj
R16144:16149 VST.floyd.base <> get_co def
R16123:16125 Coq.Init.Datatypes <> fst def
R16127:16128 VST.floyd.reptype_lemmas <> it:263 var
prf 16198:16208 <> reptype'_eq
binder 16218:16218 <> t:264
R16233:16235 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16223:16230 VST.floyd.reptype_lemmas <> reptype' def
R16232:16232 VST.floyd.reptype_lemmas <> t:264 var
R16236:16243 VST.floyd.reptype_lemmas <> REPTYPE' syndef
R16245:16245 VST.floyd.reptype_lemmas <> t:264 var
R16273:16280 VST.floyd.reptype_lemmas <> reptype' def
R16307:16318 VST.floyd.type_induction <> type_func_eq thm
R16307:16318 VST.floyd.type_induction <> type_func_eq thm
R16393:16399 VST.floyd.type_induction <> FTI_aux def
R16410:16419 VST.floyd.type_induction <> decay_spec thm
R16410:16419 VST.floyd.type_induction <> decay_spec thm
R16410:16419 VST.floyd.type_induction <> decay_spec thm
R16463:16469 VST.floyd.type_induction <> FTI_aux def
R16480:16489 VST.floyd.type_induction <> decay_spec thm
R16480:16489 VST.floyd.type_induction <> decay_spec thm
R16480:16489 VST.floyd.type_induction <> decay_spec thm
def 16530:16544 <> unfold_reptype'
binder 16547:16547 <> t:265
R16554:16561 VST.floyd.reptype_lemmas <> reptype' def
R16563:16563 VST.floyd.reptype_lemmas <> t:265 var
binder 16551:16551 <> v:266
R16567:16574 VST.floyd.reptype_lemmas <> REPTYPE' syndef
R16576:16576 VST.floyd.reptype_lemmas <> t:265 var
R16584:16590 Coq.Init.Logic <> eq_rect scheme
R16645:16655 VST.floyd.reptype_lemmas <> reptype'_eq thm
R16657:16657 VST.floyd.reptype_lemmas <> t:265 var
R16632:16639 VST.floyd.reptype_lemmas <> REPTYPE' syndef
R16641:16641 VST.floyd.reptype_lemmas <> t:265 var
R16629:16629 VST.floyd.reptype_lemmas <> v:266 var
binder 16615:16615 <> x:267
R16626:16626 VST.floyd.reptype_lemmas <> x:267 var
R16598:16605 VST.floyd.reptype_lemmas <> reptype' def
R16607:16607 VST.floyd.reptype_lemmas <> t:265 var
def 16673:16685 <> fold_reptype'
binder 16688:16688 <> t:268
R16695:16702 VST.floyd.reptype_lemmas <> REPTYPE' syndef
R16704:16704 VST.floyd.reptype_lemmas <> t:268 var
binder 16692:16692 <> v:269
R16708:16715 VST.floyd.reptype_lemmas <> reptype' def
R16717:16717 VST.floyd.reptype_lemmas <> t:268 var
R16725:16733 Coq.Init.Logic <> eq_rect_r def
R16788:16798 VST.floyd.reptype_lemmas <> reptype'_eq thm
R16800:16800 VST.floyd.reptype_lemmas <> t:268 var
R16775:16782 VST.floyd.reptype_lemmas <> reptype' def
R16784:16784 VST.floyd.reptype_lemmas <> t:268 var
R16772:16772 VST.floyd.reptype_lemmas <> v:269 var
binder 16758:16758 <> x:270
R16769:16769 VST.floyd.reptype_lemmas <> x:270 var
R16741:16748 VST.floyd.reptype_lemmas <> REPTYPE' syndef
R16750:16750 VST.floyd.reptype_lemmas <> t:268 var
prf 16811:16830 <> fold_unfold_reptype'
binder 16840:16840 <> t:271
R16846:16853 VST.floyd.reptype_lemmas <> reptype' def
R16855:16855 VST.floyd.reptype_lemmas <> t:271 var
binder 16843:16843 <> v:272
R16894:16896 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16861:16873 VST.floyd.reptype_lemmas <> fold_reptype' def
R16876:16890 VST.floyd.reptype_lemmas <> unfold_reptype' def
R16892:16892 VST.floyd.reptype_lemmas <> v:272 var
R16897:16897 VST.floyd.reptype_lemmas <> v:272 var
R16926:16938 VST.floyd.reptype_lemmas <> fold_reptype' def
R16941:16955 VST.floyd.reptype_lemmas <> unfold_reptype' def
R16966:16972 VST.floyd.jmeq_lemmas <> JMeq_eq thm
R16966:16972 VST.floyd.jmeq_lemmas <> JMeq_eq thm
R17000:17003 VST.floyd.jmeq_lemmas <> JMeq def
R17007:17015 Coq.Init.Logic <> eq_rect_r def
R17000:17003 VST.floyd.jmeq_lemmas <> JMeq def
R17007:17015 Coq.Init.Logic <> eq_rect_r def
R17052:17061 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R17072:17085 VST.floyd.jmeq_lemmas <> eq_rect_r_JMeq thm
R17052:17061 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R17072:17085 VST.floyd.jmeq_lemmas <> eq_rect_r_JMeq thm
R17135:17138 VST.floyd.jmeq_lemmas <> JMeq def
R17142:17148 Coq.Init.Logic <> eq_rect scheme
R17135:17138 VST.floyd.jmeq_lemmas <> JMeq def
R17142:17148 Coq.Init.Logic <> eq_rect scheme
R17185:17196 VST.floyd.jmeq_lemmas <> eq_rect_JMeq thm
R17185:17196 VST.floyd.jmeq_lemmas <> eq_rect_JMeq thm
prf 17234:17253 <> unfold_fold_reptype'
binder 17263:17263 <> t:273
R17269:17276 VST.floyd.reptype_lemmas <> REPTYPE' syndef
R17278:17278 VST.floyd.reptype_lemmas <> t:273 var
binder 17266:17266 <> v:274
R17317:17319 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17284:17298 VST.floyd.reptype_lemmas <> unfold_reptype' def
R17301:17313 VST.floyd.reptype_lemmas <> fold_reptype' def
R17315:17315 VST.floyd.reptype_lemmas <> v:274 var
R17320:17320 VST.floyd.reptype_lemmas <> v:274 var
R17349:17361 VST.floyd.reptype_lemmas <> fold_reptype' def
R17364:17378 VST.floyd.reptype_lemmas <> unfold_reptype' def
R17389:17395 VST.floyd.jmeq_lemmas <> JMeq_eq thm
R17389:17395 VST.floyd.jmeq_lemmas <> JMeq_eq thm
R17423:17426 VST.floyd.jmeq_lemmas <> JMeq def
R17430:17436 Coq.Init.Logic <> eq_rect scheme
R17423:17426 VST.floyd.jmeq_lemmas <> JMeq def
R17430:17436 Coq.Init.Logic <> eq_rect scheme
R17473:17482 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R17493:17504 VST.floyd.jmeq_lemmas <> eq_rect_JMeq thm
R17473:17482 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R17493:17504 VST.floyd.jmeq_lemmas <> eq_rect_JMeq thm
R17554:17557 VST.floyd.jmeq_lemmas <> JMeq def
R17561:17569 Coq.Init.Logic <> eq_rect_r def
R17554:17557 VST.floyd.jmeq_lemmas <> JMeq def
R17561:17569 Coq.Init.Logic <> eq_rect_r def
R17606:17619 VST.floyd.jmeq_lemmas <> eq_rect_r_JMeq thm
R17606:17619 VST.floyd.jmeq_lemmas <> eq_rect_r_JMeq thm
def 17662:17670 <> repinj_bv
R17676:17679 compcert.cfrontend.Ctypes <> type ind
binder 17673:17673 <> t:275
R17693:17696 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17697:17703 VST.floyd.reptype_lemmas <> reptype def
R17705:17705 VST.floyd.reptype_lemmas <> t:275 var
R17683:17690 VST.floyd.reptype_lemmas <> reptype' def
R17692:17692 VST.floyd.reptype_lemmas <> t:275 var
binder 17716:17716 <> v:276
R17723:17734 VST.floyd.reptype_lemmas <> fold_reptype def
R17745:17745 VST.floyd.reptype_lemmas <> t:275 var
R17772:17775 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17776:17782 VST.floyd.reptype_lemmas <> REPTYPE syndef
R17784:17785 VST.floyd.reptype_lemmas <> t':277 var
R17761:17768 VST.floyd.reptype_lemmas <> REPTYPE' syndef
R17770:17771 VST.floyd.reptype_lemmas <> t':277 var
R17807:17811 compcert.cfrontend.Ctypes <> Tvoid constr
R17818:17826 compcert.cfrontend.Ctypes <> Tfunction constr
R17838:17839 Coq.Init.Datatypes <> id def
R17841:17844 Coq.Init.Datatypes <> unit ind
R17838:17839 Coq.Init.Datatypes <> id def
R17841:17844 Coq.Init.Datatypes <> unit ind
R17851:17854 compcert.cfrontend.Ctypes <> Tint constr
R17865:17868 compcert.common.Values <> Vint constr
R17875:17879 compcert.cfrontend.Ctypes <> Tlong constr
R17888:17892 compcert.common.Values <> Vlong constr
R17899:17904 compcert.cfrontend.Ctypes <> Tfloat constr
R17913:17918 compcert.common.Values <> Vfloat constr
R17925:17932 compcert.cfrontend.Ctypes <> Tpointer constr
R17941:17955 VST.floyd.reptype_lemmas <> pointer_val_val def
R17962:17967 compcert.cfrontend.Ctypes <> Tarray constr
R17988:17990 Coq.Init.Datatypes <> nil constr
R17997:18003 compcert.cfrontend.Ctypes <> Tstruct constr
R18022:18039 VST.floyd.reptype_lemmas <> struct_default_val def
R18048:18053 compcert.cfrontend.Ctypes <> Tunion constr
R18072:18088 VST.floyd.reptype_lemmas <> union_default_val def
R18100:18114 VST.floyd.reptype_lemmas <> unfold_reptype' def
R18116:18116 VST.floyd.reptype_lemmas <> v:276 var
def 18133:18144 <> repinj_aux_s
R18151:18155 compcert.common.AST <> ident def
binder 18147:18148 <> id:278
R18162:18165 compcert.cfrontend.Ctypes <> attr rec
binder 18159:18159 <> a:279
R18172:18179 VST.floyd.type_induction <> ListType ind
R18182:18184 Coq.Lists.List <> map def
R18313:18322 compcert.cfrontend.Ctypes <> co_members proj
R18325:18330 VST.floyd.base <> get_co def
R18332:18333 VST.floyd.reptype_lemmas <> id:278 var
binder 18191:18192 <> it:280
R18252:18255 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18256:18262 VST.floyd.reptype_lemmas <> reptype def
R18265:18274 VST.floyd.fieldlist <> field_type def
R18286:18295 compcert.cfrontend.Ctypes <> co_members proj
R18298:18303 VST.floyd.base <> get_co def
R18305:18306 VST.floyd.reptype_lemmas <> id:278 var
R18277:18279 Coq.Init.Datatypes <> fst def
R18281:18282 VST.floyd.reptype_lemmas <> it:280 var
R18197:18204 VST.floyd.reptype_lemmas <> reptype' def
R18207:18216 VST.floyd.fieldlist <> field_type def
R18228:18237 compcert.cfrontend.Ctypes <> co_members proj
R18240:18245 VST.floyd.base <> get_co def
R18247:18248 VST.floyd.reptype_lemmas <> id:278 var
R18219:18221 Coq.Init.Datatypes <> fst def
R18223:18224 VST.floyd.reptype_lemmas <> it:280 var
binder 18169:18169 <> F:281
R18363:18366 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18367:18373 VST.floyd.reptype_lemmas <> reptype def
R18376:18382 compcert.cfrontend.Ctypes <> Tstruct constr
R18387:18387 VST.floyd.reptype_lemmas <> a:279 var
R18384:18385 VST.floyd.reptype_lemmas <> id:278 var
R18340:18347 VST.floyd.reptype_lemmas <> reptype' def
R18350:18356 compcert.cfrontend.Ctypes <> Tstruct constr
R18361:18361 VST.floyd.reptype_lemmas <> a:279 var
R18358:18359 VST.floyd.reptype_lemmas <> id:278 var
binder 18399:18399 <> v:282
R18405:18416 VST.floyd.reptype_lemmas <> fold_reptype def
R18434:18449 VST.floyd.reptype_lemmas <> compact_prod_map def
R18456:18470 VST.floyd.reptype_lemmas <> unfold_reptype' def
R18472:18472 VST.floyd.reptype_lemmas <> v:282 var
R18453:18453 VST.floyd.reptype_lemmas <> F:281 var
R18419:18425 compcert.cfrontend.Ctypes <> Tstruct constr
R18430:18430 VST.floyd.reptype_lemmas <> a:279 var
R18427:18428 VST.floyd.reptype_lemmas <> id:278 var
def 18489:18500 <> repinj_aux_u
R18507:18511 compcert.common.AST <> ident def
binder 18503:18504 <> id:283
R18518:18521 compcert.cfrontend.Ctypes <> attr rec
binder 18515:18515 <> a:284
R18528:18535 VST.floyd.type_induction <> ListType ind
R18538:18540 Coq.Lists.List <> map def
R18669:18678 compcert.cfrontend.Ctypes <> co_members proj
R18681:18686 VST.floyd.base <> get_co def
R18688:18689 VST.floyd.reptype_lemmas <> id:283 var
binder 18547:18548 <> it:285
R18608:18611 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18612:18618 VST.floyd.reptype_lemmas <> reptype def
R18621:18630 VST.floyd.fieldlist <> field_type def
R18642:18651 compcert.cfrontend.Ctypes <> co_members proj
R18654:18659 VST.floyd.base <> get_co def
R18661:18662 VST.floyd.reptype_lemmas <> id:283 var
R18633:18635 Coq.Init.Datatypes <> fst def
R18637:18638 VST.floyd.reptype_lemmas <> it:285 var
R18553:18560 VST.floyd.reptype_lemmas <> reptype' def
R18563:18572 VST.floyd.fieldlist <> field_type def
R18584:18593 compcert.cfrontend.Ctypes <> co_members proj
R18596:18601 VST.floyd.base <> get_co def
R18603:18604 VST.floyd.reptype_lemmas <> id:283 var
R18575:18577 Coq.Init.Datatypes <> fst def
R18579:18580 VST.floyd.reptype_lemmas <> it:285 var
binder 18525:18525 <> F:286
R18718:18721 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18722:18728 VST.floyd.reptype_lemmas <> reptype def
R18731:18736 compcert.cfrontend.Ctypes <> Tunion constr
R18741:18741 VST.floyd.reptype_lemmas <> a:284 var
R18738:18739 VST.floyd.reptype_lemmas <> id:283 var
R18696:18703 VST.floyd.reptype_lemmas <> reptype' def
R18706:18711 compcert.cfrontend.Ctypes <> Tunion constr
R18716:18716 VST.floyd.reptype_lemmas <> a:284 var
R18713:18714 VST.floyd.reptype_lemmas <> id:283 var
binder 18753:18753 <> v:287
R18759:18770 VST.floyd.reptype_lemmas <> fold_reptype def
R18787:18801 VST.floyd.reptype_lemmas <> compact_sum_map def
R18808:18822 VST.floyd.reptype_lemmas <> unfold_reptype' def
R18824:18824 VST.floyd.reptype_lemmas <> v:287 var
R18805:18805 VST.floyd.reptype_lemmas <> F:286 var
R18773:18778 compcert.cfrontend.Ctypes <> Tunion constr
R18783:18783 VST.floyd.reptype_lemmas <> a:284 var
R18780:18781 VST.floyd.reptype_lemmas <> id:283 var
def 18841:18846 <> repinj
R18859:18862 compcert.cfrontend.Ctypes <> type ind
binder 18856:18856 <> t:288
R18875:18878 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18879:18885 VST.floyd.reptype_lemmas <> reptype def
R18887:18887 VST.floyd.reptype_lemmas <> t:288 var
R18865:18872 VST.floyd.reptype_lemmas <> reptype' def
R18874:18874 VST.floyd.reptype_lemmas <> t:288 var
R18894:18902 VST.floyd.type_induction <> type_func def
R19046:19057 VST.floyd.reptype_lemmas <> repinj_aux_u def
R19031:19042 VST.floyd.reptype_lemmas <> repinj_aux_s def
binder 18958:18958 <> t:289
binder 18960:18960 <> n:290
binder 18962:18962 <> a:291
binder 18964:18964 <> f:292
binder 18966:18966 <> v:293
R18972:18983 VST.floyd.reptype_lemmas <> fold_reptype def
R19001:19003 Coq.Lists.List <> map def
R19008:19022 VST.floyd.reptype_lemmas <> unfold_reptype' def
R19024:19024 VST.floyd.reptype_lemmas <> v:293 var
R19005:19005 VST.floyd.reptype_lemmas <> f:292 var
R18986:18991 compcert.cfrontend.Ctypes <> Tarray constr
R18997:18997 VST.floyd.reptype_lemmas <> a:291 var
R18995:18995 VST.floyd.reptype_lemmas <> n:290 var
R18993:18993 VST.floyd.reptype_lemmas <> t:289 var
R18941:18949 VST.floyd.reptype_lemmas <> repinj_bv def
binder 18909:18909 <> t:294
R18924:18927 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18928:18934 VST.floyd.reptype_lemmas <> reptype def
R18936:18936 VST.floyd.reptype_lemmas <> t:294 var
R18914:18921 VST.floyd.reptype_lemmas <> reptype' def
R18923:18923 VST.floyd.reptype_lemmas <> t:294 var
prf 19067:19075 <> repinj_eq
binder 19085:19085 <> t:295
binder 19087:19087 <> v:296
R19102:19106 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19092:19097 VST.floyd.reptype_lemmas <> repinj def
R19101:19101 VST.floyd.reptype_lemmas <> v:296 var
R19099:19099 VST.floyd.reptype_lemmas <> t:295 var
R19107:19118 VST.floyd.reptype_lemmas <> fold_reptype def
R19129:19129 VST.floyd.reptype_lemmas <> t:295 var
R19155:19158 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19159:19165 VST.floyd.reptype_lemmas <> REPTYPE syndef
R19167:19168 VST.floyd.reptype_lemmas <> t':297 var
R19144:19151 VST.floyd.reptype_lemmas <> REPTYPE' syndef
R19153:19154 VST.floyd.reptype_lemmas <> t':297 var
R19180:19184 compcert.cfrontend.Ctypes <> Tvoid constr
R19191:19199 compcert.cfrontend.Ctypes <> Tfunction constr
R19211:19212 Coq.Init.Datatypes <> id def
R19214:19217 Coq.Init.Datatypes <> unit ind
R19211:19212 Coq.Init.Datatypes <> id def
R19214:19217 Coq.Init.Datatypes <> unit ind
R19224:19227 compcert.cfrontend.Ctypes <> Tint constr
R19238:19241 compcert.common.Values <> Vint constr
R19248:19252 compcert.cfrontend.Ctypes <> Tlong constr
R19261:19265 compcert.common.Values <> Vlong constr
R19272:19277 compcert.cfrontend.Ctypes <> Tfloat constr
R19286:19291 compcert.common.Values <> Vfloat constr
R19298:19305 compcert.cfrontend.Ctypes <> Tpointer constr
R19314:19328 VST.floyd.reptype_lemmas <> pointer_val_val def
R19335:19340 compcert.cfrontend.Ctypes <> Tarray constr
R19352:19354 Coq.Lists.List <> map def
R19357:19362 VST.floyd.reptype_lemmas <> repinj def
R19373:19379 compcert.cfrontend.Ctypes <> Tstruct constr
R19389:19404 VST.floyd.reptype_lemmas <> compact_prod_map def
R19409:19419 VST.floyd.type_induction <> ListTypeGen def
R19614:19623 compcert.cfrontend.Ctypes <> co_members proj
R19626:19631 VST.floyd.base <> get_co def
binder 19552:19553 <> it:298
R19558:19563 VST.floyd.reptype_lemmas <> repinj def
R19566:19575 VST.floyd.fieldlist <> field_type def
R19587:19596 compcert.cfrontend.Ctypes <> co_members proj
R19599:19604 VST.floyd.base <> get_co def
R19578:19580 Coq.Init.Datatypes <> fst def
R19582:19583 VST.floyd.reptype_lemmas <> it:298 var
binder 19426:19427 <> it:299
R19487:19490 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19491:19497 VST.floyd.reptype_lemmas <> reptype def
R19500:19509 VST.floyd.fieldlist <> field_type def
R19521:19530 compcert.cfrontend.Ctypes <> co_members proj
R19533:19538 VST.floyd.base <> get_co def
R19512:19514 Coq.Init.Datatypes <> fst def
R19516:19517 VST.floyd.reptype_lemmas <> it:299 var
R19432:19439 VST.floyd.reptype_lemmas <> reptype' def
R19442:19451 VST.floyd.fieldlist <> field_type def
R19463:19472 compcert.cfrontend.Ctypes <> co_members proj
R19475:19480 VST.floyd.base <> get_co def
R19454:19456 Coq.Init.Datatypes <> fst def
R19458:19459 VST.floyd.reptype_lemmas <> it:299 var
R19644:19649 compcert.cfrontend.Ctypes <> Tunion constr
R19659:19673 VST.floyd.reptype_lemmas <> compact_sum_map def
R19678:19688 VST.floyd.type_induction <> ListTypeGen def
R19883:19892 compcert.cfrontend.Ctypes <> co_members proj
R19895:19900 VST.floyd.base <> get_co def
binder 19821:19822 <> it:300
R19827:19832 VST.floyd.reptype_lemmas <> repinj def
R19835:19844 VST.floyd.fieldlist <> field_type def
R19856:19865 compcert.cfrontend.Ctypes <> co_members proj
R19868:19873 VST.floyd.base <> get_co def
R19847:19849 Coq.Init.Datatypes <> fst def
R19851:19852 VST.floyd.reptype_lemmas <> it:300 var
binder 19695:19696 <> it:301
R19756:19759 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19760:19766 VST.floyd.reptype_lemmas <> reptype def
R19769:19778 VST.floyd.fieldlist <> field_type def
R19790:19799 compcert.cfrontend.Ctypes <> co_members proj
R19802:19807 VST.floyd.base <> get_co def
R19781:19783 Coq.Init.Datatypes <> fst def
R19785:19786 VST.floyd.reptype_lemmas <> it:301 var
R19701:19708 VST.floyd.reptype_lemmas <> reptype' def
R19711:19720 VST.floyd.fieldlist <> field_type def
R19732:19741 compcert.cfrontend.Ctypes <> co_members proj
R19744:19749 VST.floyd.base <> get_co def
R19723:19725 Coq.Init.Datatypes <> fst def
R19727:19728 VST.floyd.reptype_lemmas <> it:301 var
R19916:19930 VST.floyd.reptype_lemmas <> unfold_reptype' def
R19932:19932 VST.floyd.reptype_lemmas <> v:296 var
R19963:19968 VST.floyd.reptype_lemmas <> repinj def
R19981:19992 VST.floyd.type_induction <> type_func_eq thm
R19981:19992 VST.floyd.type_induction <> type_func_eq thm
R19981:19992 VST.floyd.type_induction <> type_func_eq thm
prf 20031:20046 <> int_add_repr_0_l
binder 20056:20056 <> i:302
R20081:20083 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20059:20065 compcert.lib.Integers Int add def
R20080:20080 VST.floyd.reptype_lemmas <> i:302 var
R20068:20075 compcert.lib.Integers Int repr def
R20084:20084 VST.floyd.reptype_lemmas <> i:302 var
R20108:20121 compcert.lib.Integers Int add_zero_l thm
R20108:20121 compcert.lib.Integers Int add_zero_l thm
prf 20135:20150 <> int_add_repr_0_r
binder 20160:20160 <> i:303
R20185:20187 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20163:20169 compcert.lib.Integers Int add def
R20174:20181 compcert.lib.Integers Int repr def
R20171:20171 VST.floyd.reptype_lemmas <> i:303 var
R20188:20188 VST.floyd.reptype_lemmas <> i:303 var
R20212:20223 compcert.lib.Integers Int add_zero thm
R20212:20223 compcert.lib.Integers Int add_zero thm
R20244:20259 VST.floyd.reptype_lemmas <> int_add_repr_0_l thm
R20261:20276 VST.floyd.reptype_lemmas <> int_add_repr_0_r thm
prf 20293:20311 <> ptrofs_add_repr_0_l
binder 20321:20321 <> i:304
R20352:20354 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20324:20333 compcert.lib.Integers Ptrofs add def
R20351:20351 VST.floyd.reptype_lemmas <> i:304 var
R20336:20346 compcert.lib.Integers Ptrofs repr def
R20355:20355 VST.floyd.reptype_lemmas <> i:304 var
R20379:20395 compcert.lib.Integers Ptrofs add_zero_l thm
R20379:20395 compcert.lib.Integers Ptrofs add_zero_l thm
prf 20409:20427 <> ptrofs_add_repr_0_r
binder 20437:20437 <> i:305
R20468:20470 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20440:20449 compcert.lib.Integers Ptrofs add def
R20454:20464 compcert.lib.Integers Ptrofs repr def
R20451:20451 VST.floyd.reptype_lemmas <> i:305 var
R20471:20471 VST.floyd.reptype_lemmas <> i:305 var
R20495:20509 compcert.lib.Integers Ptrofs add_zero thm
R20495:20509 compcert.lib.Integers Ptrofs add_zero thm
R20530:20548 VST.floyd.reptype_lemmas <> ptrofs_add_repr_0_l thm
R20550:20568 VST.floyd.reptype_lemmas <> ptrofs_add_repr_0_r thm
def 20590:20598 <> repinject
R20604:20607 compcert.cfrontend.Ctypes <> type ind
binder 20601:20601 <> t:306
R20621:20624 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20625:20627 compcert.common.Values <> val ind
R20612:20618 VST.floyd.reptype_lemmas <> reptype def
R20620:20620 VST.floyd.reptype_lemmas <> t:306 var
R20640:20640 VST.floyd.reptype_lemmas <> t:306 var
R20665:20668 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20669:20671 compcert.common.Values <> val ind
R20655:20661 VST.floyd.reptype_lemmas <> reptype def
R20663:20664 VST.floyd.reptype_lemmas <> t0:307 var
R20682:20685 compcert.cfrontend.Ctypes <> Tint constr
binder 20700:20700 <> v:308
R20705:20705 VST.floyd.reptype_lemmas <> v:308 var
R20711:20715 compcert.cfrontend.Ctypes <> Tlong constr
binder 20728:20728 <> v:309
R20733:20733 VST.floyd.reptype_lemmas <> v:309 var
R20739:20744 compcert.cfrontend.Ctypes <> Tfloat constr
binder 20757:20757 <> v:310
R20762:20762 VST.floyd.reptype_lemmas <> v:310 var
R20768:20775 compcert.cfrontend.Ctypes <> Tpointer constr
binder 20788:20788 <> v:311
R20793:20793 VST.floyd.reptype_lemmas <> v:311 var
R20813:20818 compcert.common.Values <> Vundef constr
def 20838:20846 <> valinject
R20852:20855 compcert.cfrontend.Ctypes <> type ind
binder 20849:20849 <> t:312
R20863:20866 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20867:20873 VST.floyd.reptype_lemmas <> reptype def
R20875:20875 VST.floyd.reptype_lemmas <> t:312 var
R20860:20862 compcert.common.Values <> val ind
R20888:20888 VST.floyd.reptype_lemmas <> t:312 var
R20906:20909 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20910:20916 VST.floyd.reptype_lemmas <> reptype def
R20918:20919 VST.floyd.reptype_lemmas <> t0:313 var
R20903:20905 compcert.common.Values <> val ind
R20930:20933 compcert.cfrontend.Ctypes <> Tint constr
binder 20948:20948 <> v:314
R20953:20953 VST.floyd.reptype_lemmas <> v:314 var
R20959:20963 compcert.cfrontend.Ctypes <> Tlong constr
binder 20976:20976 <> v:315
R20981:20981 VST.floyd.reptype_lemmas <> v:315 var
R20987:20992 compcert.cfrontend.Ctypes <> Tfloat constr
binder 21005:21005 <> v:316
R21010:21010 VST.floyd.reptype_lemmas <> v:316 var
R21016:21023 compcert.cfrontend.Ctypes <> Tpointer constr
binder 21036:21036 <> v:317
R21041:21041 VST.floyd.reptype_lemmas <> v:317 var
R21061:21071 VST.floyd.reptype_lemmas <> default_val def
R21073:21073 VST.floyd.reptype_lemmas <> t:312 var
prf 21088:21101 <> valinject_JMeq
binder 21111:21111 <> t:318
binder 21113:21113 <> v:319
R21141:21144 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21145:21148 VST.floyd.jmeq_lemmas <> JMeq def
R21166:21166 VST.floyd.reptype_lemmas <> v:319 var
R21151:21159 VST.floyd.reptype_lemmas <> valinject def
R21163:21163 VST.floyd.reptype_lemmas <> v:319 var
R21161:21161 VST.floyd.reptype_lemmas <> t:318 var
R21134:21136 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21116:21131 VST.veric.mpred <> type_is_by_value def
R21133:21133 VST.floyd.reptype_lemmas <> t:318 var
R21137:21140 Coq.Init.Datatypes <> true constr
R21245:21253 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R21245:21253 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R21245:21253 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R21245:21253 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R21245:21253 VST.floyd.jmeq_lemmas <> JMeq_refl thm
prf 21268:21281 <> repinject_JMeq
binder 21291:21291 <> t:320
binder 21293:21293 <> v:321
R21321:21324 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21325:21328 VST.floyd.jmeq_lemmas <> JMeq def
R21346:21346 VST.floyd.reptype_lemmas <> v:321 var
R21331:21339 VST.floyd.reptype_lemmas <> repinject def
R21343:21343 VST.floyd.reptype_lemmas <> v:321 var
R21341:21341 VST.floyd.reptype_lemmas <> t:320 var
R21314:21316 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21296:21311 VST.veric.mpred <> type_is_by_value def
R21313:21313 VST.floyd.reptype_lemmas <> t:320 var
R21317:21320 Coq.Init.Datatypes <> true constr
R21425:21433 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R21425:21433 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R21425:21433 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R21425:21433 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R21425:21433 VST.floyd.jmeq_lemmas <> JMeq_refl thm
prf 21448:21471 <> repinject_unfold_reptype
binder 21481:21481 <> t:322
binder 21483:21483 <> v:323
R21494:21494 VST.floyd.reptype_lemmas <> t:322 var
R21519:21522 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21509:21515 VST.floyd.reptype_lemmas <> REPTYPE syndef
R21517:21518 VST.floyd.reptype_lemmas <> t':324 var
R21537:21540 compcert.cfrontend.Ctypes <> Tint constr
R21552:21557 compcert.cfrontend.Ctypes <> Tfloat constr
R21567:21571 compcert.cfrontend.Ctypes <> Tlong constr
R21581:21588 compcert.cfrontend.Ctypes <> Tpointer constr
binder 21601:21602 <> vv:325
R21620:21622 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21607:21615 VST.floyd.reptype_lemmas <> repinject def
R21619:21619 VST.floyd.reptype_lemmas <> v:323 var
R21617:21617 VST.floyd.reptype_lemmas <> t:322 var
R21623:21624 VST.floyd.reptype_lemmas <> vv:325 var
binder 21601:21602 <> vv:326
R21620:21622 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21607:21615 VST.floyd.reptype_lemmas <> repinject def
R21619:21619 VST.floyd.reptype_lemmas <> v:323 var
R21617:21617 VST.floyd.reptype_lemmas <> t:322 var
R21623:21624 VST.floyd.reptype_lemmas <> vv:326 var
binder 21601:21602 <> vv:327
R21620:21622 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21607:21615 VST.floyd.reptype_lemmas <> repinject def
R21619:21619 VST.floyd.reptype_lemmas <> v:323 var
R21617:21617 VST.floyd.reptype_lemmas <> t:322 var
R21623:21624 VST.floyd.reptype_lemmas <> vv:327 var
binder 21601:21602 <> vv:328
R21620:21622 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21607:21615 VST.floyd.reptype_lemmas <> repinject def
R21619:21619 VST.floyd.reptype_lemmas <> v:323 var
R21617:21617 VST.floyd.reptype_lemmas <> t:322 var
R21623:21624 VST.floyd.reptype_lemmas <> vv:328 var
R21644:21647 Coq.Init.Logic <> True ind
R21656:21669 VST.floyd.reptype_lemmas <> unfold_reptype def
R21671:21671 VST.floyd.reptype_lemmas <> v:323 var
R21719:21727 VST.floyd.reptype_lemmas <> repinject def
R21739:21752 VST.floyd.reptype_lemmas <> unfold_reptype def
R21768:21777 VST.msl.Extensionality EqdepTh eq_rect_eq thm
prf 21798:21816 <> repinject_valinject
binder 21828:21828 <> t:329
binder 21830:21830 <> v:330
R21862:21865 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21893:21895 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21866:21874 VST.floyd.reptype_lemmas <> repinject def
R21879:21887 VST.floyd.reptype_lemmas <> valinject def
R21891:21891 VST.floyd.reptype_lemmas <> v:330 var
R21889:21889 VST.floyd.reptype_lemmas <> t:329 var
R21876:21876 VST.floyd.reptype_lemmas <> t:329 var
R21896:21896 VST.floyd.reptype_lemmas <> v:330 var
R21855:21857 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21837:21852 VST.veric.mpred <> type_is_by_value def
R21854:21854 VST.floyd.reptype_lemmas <> t:329 var
R21858:21861 Coq.Init.Datatypes <> true constr
prf 21972:21990 <> valinject_repinject
binder 22000:22000 <> t:331
binder 22002:22002 <> v:332
R22032:22037 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22038:22038 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22066:22069 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22039:22047 VST.floyd.reptype_lemmas <> valinject def
R22052:22060 VST.floyd.reptype_lemmas <> repinject def
R22064:22064 VST.floyd.reptype_lemmas <> v:332 var
R22062:22062 VST.floyd.reptype_lemmas <> t:331 var
R22049:22049 VST.floyd.reptype_lemmas <> t:331 var
R22070:22070 VST.floyd.reptype_lemmas <> v:332 var
R22025:22027 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22007:22022 VST.veric.mpred <> type_is_by_value def
R22024:22024 VST.floyd.reptype_lemmas <> t:331 var
R22028:22031 Coq.Init.Datatypes <> true constr
prf 22142:22162 <> repinject_default_val
binder 22173:22173 <> t:333
R22203:22205 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22176:22184 VST.floyd.reptype_lemmas <> repinject def
R22189:22199 VST.floyd.reptype_lemmas <> default_val def
R22201:22201 VST.floyd.reptype_lemmas <> t:333 var
R22186:22186 VST.floyd.reptype_lemmas <> t:333 var
R22206:22211 compcert.common.Values <> Vundef constr
R22256:22259 VST.floyd.reptype_lemmas CENV <> sec
R22273:22280 VST.floyd.reptype_lemmas <> reptype' def
R22273:22280 VST.floyd.reptype_lemmas <> reptype' def
syndef 22310:22316 <> REPTYPE
R22354:22358 compcert.cfrontend.Ctypes <> Tvoid constr
R22364:22372 compcert.cfrontend.Ctypes <> Tfunction constr
R22383:22386 Coq.Init.Datatypes <> unit ind
R22383:22386 Coq.Init.Datatypes <> unit ind
R22392:22395 compcert.cfrontend.Ctypes <> Tint constr
R22407:22411 compcert.cfrontend.Ctypes <> Tlong constr
R22421:22426 compcert.cfrontend.Ctypes <> Tfloat constr
R22436:22443 compcert.cfrontend.Ctypes <> Tpointer constr
R22452:22454 compcert.common.Values <> val ind
R22452:22454 compcert.common.Values <> val ind
R22452:22454 compcert.common.Values <> val ind
R22452:22454 compcert.common.Values <> val ind
R22460:22465 compcert.cfrontend.Ctypes <> Tarray constr
R22477:22480 Coq.Init.Datatypes <> list ind
R22483:22489 VST.floyd.reptype_lemmas <> reptype def
R22499:22505 compcert.cfrontend.Ctypes <> Tstruct constr
R22515:22532 VST.floyd.reptype_lemmas <> reptype_structlist def
R22535:22544 compcert.cfrontend.Ctypes <> co_members proj
R22547:22552 VST.floyd.base <> get_co def
R22563:22568 compcert.cfrontend.Ctypes <> Tunion constr
R22578:22594 VST.floyd.reptype_lemmas <> reptype_unionlist def
R22597:22606 compcert.cfrontend.Ctypes <> co_members proj
R22609:22614 VST.floyd.base <> get_co def
R22699:22704 VST.floyd.reptype_lemmas <> repinj def
R22699:22704 VST.floyd.reptype_lemmas <> repinj def
R22746:22751 VST.floyd.reptype_lemmas <> repinj def
R22891:22896 VST.floyd.reptype_lemmas <> repinj def
R22891:22896 VST.floyd.reptype_lemmas <> repinj def
R22937:22942 VST.floyd.reptype_lemmas <> repinj def
prf 23186:23209 <> reptype_change_composite
binder 23212:23218 <> cs_from:334
binder 23220:23224 <> cs_to:335
R23233:23252 VST.veric.change_compspecs <> change_composite_env class
R23262:23266 VST.floyd.reptype_lemmas <> cs_to:335 var
R23254:23260 VST.floyd.reptype_lemmas <> cs_from:334 var
binder 23228:23230 <> CCE:336
R23281:23284 compcert.cfrontend.Ctypes <> type ind
binder 23278:23278 <> t:337
R23340:23345 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23364:23366 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23347:23353 VST.floyd.reptype_lemmas <> reptype def
R23363:23363 VST.floyd.reptype_lemmas <> t:337 var
R23355:23361 VST.floyd.reptype_lemmas <> cs_from:334 var
R23368:23374 VST.floyd.reptype_lemmas <> reptype def
R23382:23382 VST.floyd.reptype_lemmas <> t:337 var
R23376:23380 VST.floyd.reptype_lemmas <> cs_to:335 var
R23333:23335 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23290:23305 VST.veric.change_compspecs <> cs_preserve_type def
R23332:23332 VST.floyd.reptype_lemmas <> t:337 var
R23322:23325 VST.veric.change_compspecs <> coeq meth
R23315:23319 VST.floyd.reptype_lemmas <> cs_to:335 var
R23307:23313 VST.floyd.reptype_lemmas <> cs_from:334 var
R23336:23339 Coq.Init.Datatypes <> true constr
R23445:23454 VST.floyd.reptype_lemmas <> reptype_eq thm
R23445:23454 VST.floyd.reptype_lemmas <> reptype_eq thm
R23445:23454 VST.floyd.reptype_lemmas <> reptype_eq thm
R23445:23454 VST.floyd.reptype_lemmas <> reptype_eq thm
R23445:23454 VST.floyd.reptype_lemmas <> reptype_eq thm
R23487:23496 VST.floyd.reptype_lemmas <> reptype_eq thm
R23487:23496 VST.floyd.reptype_lemmas <> reptype_eq thm
R23487:23496 VST.floyd.reptype_lemmas <> reptype_eq thm
R23487:23496 VST.floyd.reptype_lemmas <> reptype_eq thm
R23487:23496 VST.floyd.reptype_lemmas <> reptype_eq thm
R23529:23538 VST.floyd.reptype_lemmas <> reptype_eq thm
R23529:23538 VST.floyd.reptype_lemmas <> reptype_eq thm
R23529:23538 VST.floyd.reptype_lemmas <> reptype_eq thm
R23529:23538 VST.floyd.reptype_lemmas <> reptype_eq thm
R23529:23538 VST.floyd.reptype_lemmas <> reptype_eq thm
R23571:23580 VST.floyd.reptype_lemmas <> reptype_eq thm
R23571:23580 VST.floyd.reptype_lemmas <> reptype_eq thm
R23571:23580 VST.floyd.reptype_lemmas <> reptype_eq thm
R23571:23580 VST.floyd.reptype_lemmas <> reptype_eq thm
R23571:23580 VST.floyd.reptype_lemmas <> reptype_eq thm
R23613:23622 VST.floyd.reptype_lemmas <> reptype_eq thm
R23613:23622 VST.floyd.reptype_lemmas <> reptype_eq thm
R23613:23622 VST.floyd.reptype_lemmas <> reptype_eq thm
R23613:23622 VST.floyd.reptype_lemmas <> reptype_eq thm
R23613:23622 VST.floyd.reptype_lemmas <> reptype_eq thm
R23656:23665 VST.floyd.reptype_lemmas <> reptype_eq thm
R23679:23688 VST.floyd.reptype_lemmas <> reptype_eq thm
R23656:23665 VST.floyd.reptype_lemmas <> reptype_eq thm
R23656:23665 VST.floyd.reptype_lemmas <> reptype_eq thm
R23679:23688 VST.floyd.reptype_lemmas <> reptype_eq thm
R23679:23688 VST.floyd.reptype_lemmas <> reptype_eq thm
R23733:23742 VST.floyd.reptype_lemmas <> reptype_eq thm
R23733:23742 VST.floyd.reptype_lemmas <> reptype_eq thm
R23733:23742 VST.floyd.reptype_lemmas <> reptype_eq thm
R23733:23742 VST.floyd.reptype_lemmas <> reptype_eq thm
R23733:23742 VST.floyd.reptype_lemmas <> reptype_eq thm
R23776:23785 VST.floyd.reptype_lemmas <> reptype_eq thm
R23799:23808 VST.floyd.reptype_lemmas <> reptype_eq thm
R23776:23785 VST.floyd.reptype_lemmas <> reptype_eq thm
R23776:23785 VST.floyd.reptype_lemmas <> reptype_eq thm
R23799:23808 VST.floyd.reptype_lemmas <> reptype_eq thm
R23799:23808 VST.floyd.reptype_lemmas <> reptype_eq thm
R23846:23879 VST.floyd.base <> co_members_get_co_change_composite thm
R23846:23879 VST.floyd.base <> co_members_get_co_change_composite thm
R23846:23879 VST.floyd.base <> co_members_get_co_change_composite thm
R23900:23928 VST.floyd.fieldlist <> members_spec_change_composite thm
R23900:23928 VST.floyd.fieldlist <> members_spec_change_composite thm
R23984:24001 VST.floyd.reptype_lemmas <> reptype_structlist def
R24020:24029 compcert.cfrontend.Ctypes <> co_members proj
R24032:24037 VST.floyd.base <> get_co def
R24020:24029 compcert.cfrontend.Ctypes <> co_members proj
R24032:24037 VST.floyd.base <> get_co def
R24146:24155 VST.floyd.fieldlist <> field_type def
R24177:24186 VST.floyd.fieldlist <> field_type def
R24237:24246 VST.floyd.reptype_lemmas <> reptype_eq thm
R24260:24269 VST.floyd.reptype_lemmas <> reptype_eq thm
R24237:24246 VST.floyd.reptype_lemmas <> reptype_eq thm
R24237:24246 VST.floyd.reptype_lemmas <> reptype_eq thm
R24260:24269 VST.floyd.reptype_lemmas <> reptype_eq thm
R24260:24269 VST.floyd.reptype_lemmas <> reptype_eq thm
R24307:24340 VST.floyd.base <> co_members_get_co_change_composite thm
R24307:24340 VST.floyd.base <> co_members_get_co_change_composite thm
R24307:24340 VST.floyd.base <> co_members_get_co_change_composite thm
R24361:24389 VST.floyd.fieldlist <> members_spec_change_composite thm
R24361:24389 VST.floyd.fieldlist <> members_spec_change_composite thm
R24445:24461 VST.floyd.reptype_lemmas <> reptype_unionlist def
R24480:24489 compcert.cfrontend.Ctypes <> co_members proj
R24492:24497 VST.floyd.base <> get_co def
R24480:24489 compcert.cfrontend.Ctypes <> co_members proj
R24492:24497 VST.floyd.base <> get_co def
R24606:24615 VST.floyd.fieldlist <> field_type def
R24637:24646 VST.floyd.fieldlist <> field_type def
R24146:24155 VST.floyd.fieldlist <> field_type def
R24177:24186 VST.floyd.fieldlist <> field_type def
R24606:24615 VST.floyd.fieldlist <> field_type def
R24637:24646 VST.floyd.fieldlist <> field_type def
prf 24695:24722 <> default_val_change_composite
binder 24725:24731 <> cs_from:338
binder 24733:24737 <> cs_to:339
R24746:24765 VST.veric.change_compspecs <> change_composite_env class
R24775:24779 VST.floyd.reptype_lemmas <> cs_to:339 var
R24767:24773 VST.floyd.reptype_lemmas <> cs_from:338 var
binder 24741:24743 <> CCE:340
R24794:24797 compcert.cfrontend.Ctypes <> type ind
binder 24791:24791 <> t:341
R24853:24858 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24859:24862 VST.floyd.jmeq_lemmas <> JMeq def
R24891:24901 VST.floyd.reptype_lemmas <> default_val def
R24909:24909 VST.floyd.reptype_lemmas <> t:341 var
R24903:24907 VST.floyd.reptype_lemmas <> cs_to:339 var
R24866:24876 VST.floyd.reptype_lemmas <> default_val def
R24886:24886 VST.floyd.reptype_lemmas <> t:341 var
R24878:24884 VST.floyd.reptype_lemmas <> cs_from:338 var
R24846:24848 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24803:24818 VST.veric.change_compspecs <> cs_preserve_type def
R24845:24845 VST.floyd.reptype_lemmas <> t:341 var
R24835:24838 VST.veric.change_compspecs <> coeq meth
R24828:24832 VST.floyd.reptype_lemmas <> cs_to:339 var
R24820:24826 VST.floyd.reptype_lemmas <> cs_from:338 var
R24849:24852 Coq.Init.Datatypes <> true constr
R24973:24986 VST.floyd.reptype_lemmas <> default_val_eq thm
R24973:24986 VST.floyd.reptype_lemmas <> default_val_eq thm
R24973:24986 VST.floyd.reptype_lemmas <> default_val_eq thm
R24973:24986 VST.floyd.reptype_lemmas <> default_val_eq thm
R24973:24986 VST.floyd.reptype_lemmas <> default_val_eq thm
R24999:25007 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R24999:25007 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R25023:25036 VST.floyd.reptype_lemmas <> default_val_eq thm
R25023:25036 VST.floyd.reptype_lemmas <> default_val_eq thm
R25023:25036 VST.floyd.reptype_lemmas <> default_val_eq thm
R25023:25036 VST.floyd.reptype_lemmas <> default_val_eq thm
R25023:25036 VST.floyd.reptype_lemmas <> default_val_eq thm
R25049:25057 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R25049:25057 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R25073:25086 VST.floyd.reptype_lemmas <> default_val_eq thm
R25073:25086 VST.floyd.reptype_lemmas <> default_val_eq thm
R25073:25086 VST.floyd.reptype_lemmas <> default_val_eq thm
R25073:25086 VST.floyd.reptype_lemmas <> default_val_eq thm
R25073:25086 VST.floyd.reptype_lemmas <> default_val_eq thm
R25099:25107 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R25099:25107 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R25123:25136 VST.floyd.reptype_lemmas <> default_val_eq thm
R25123:25136 VST.floyd.reptype_lemmas <> default_val_eq thm
R25123:25136 VST.floyd.reptype_lemmas <> default_val_eq thm
R25123:25136 VST.floyd.reptype_lemmas <> default_val_eq thm
R25123:25136 VST.floyd.reptype_lemmas <> default_val_eq thm
R25149:25157 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R25149:25157 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R25173:25186 VST.floyd.reptype_lemmas <> default_val_eq thm
R25173:25186 VST.floyd.reptype_lemmas <> default_val_eq thm
R25173:25186 VST.floyd.reptype_lemmas <> default_val_eq thm
R25173:25186 VST.floyd.reptype_lemmas <> default_val_eq thm
R25173:25186 VST.floyd.reptype_lemmas <> default_val_eq thm
R25199:25207 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R25199:25207 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R25224:25237 VST.floyd.reptype_lemmas <> default_val_eq thm
R25251:25264 VST.floyd.reptype_lemmas <> default_val_eq thm
R25224:25237 VST.floyd.reptype_lemmas <> default_val_eq thm
R25224:25237 VST.floyd.reptype_lemmas <> default_val_eq thm
R25251:25264 VST.floyd.reptype_lemmas <> default_val_eq thm
R25251:25264 VST.floyd.reptype_lemmas <> default_val_eq thm
R25285:25294 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R25307:25316 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R25327:25343 VST.floyd.reptype_lemmas <> fold_reptype_JMeq thm
R25355:25362 VST.floyd.jmeq_lemmas <> JMeq_sym thm
R25365:25381 VST.floyd.reptype_lemmas <> fold_reptype_JMeq thm
R25285:25294 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R25307:25316 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R25327:25343 VST.floyd.reptype_lemmas <> fold_reptype_JMeq thm
R25355:25362 VST.floyd.jmeq_lemmas <> JMeq_sym thm
R25365:25381 VST.floyd.reptype_lemmas <> fold_reptype_JMeq thm
R25436:25446 VST.floyd.reptype_lemmas <> default_val def
R25462:25472 VST.floyd.reptype_lemmas <> default_val def
R25436:25446 VST.floyd.reptype_lemmas <> default_val def
R25462:25472 VST.floyd.reptype_lemmas <> default_val def
R25496:25519 VST.floyd.reptype_lemmas <> reptype_change_composite thm
R25496:25519 VST.floyd.reptype_lemmas <> reptype_change_composite thm
R25496:25519 VST.floyd.reptype_lemmas <> reptype_change_composite thm
R25552:25558 VST.floyd.jmeq_lemmas <> JMeq_eq thm
R25552:25558 VST.floyd.jmeq_lemmas <> JMeq_eq thm
R25584:25592 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R25584:25592 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R25608:25621 VST.floyd.reptype_lemmas <> default_val_eq thm
R25608:25621 VST.floyd.reptype_lemmas <> default_val_eq thm
R25608:25621 VST.floyd.reptype_lemmas <> default_val_eq thm
R25608:25621 VST.floyd.reptype_lemmas <> default_val_eq thm
R25608:25621 VST.floyd.reptype_lemmas <> default_val_eq thm
R25634:25642 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R25634:25642 VST.floyd.jmeq_lemmas <> JMeq_refl thm
R25659:25672 VST.floyd.reptype_lemmas <> default_val_eq thm
R25686:25699 VST.floyd.reptype_lemmas <> default_val_eq thm
R25659:25672 VST.floyd.reptype_lemmas <> default_val_eq thm
R25659:25672 VST.floyd.reptype_lemmas <> default_val_eq thm
R25686:25699 VST.floyd.reptype_lemmas <> default_val_eq thm
R25686:25699 VST.floyd.reptype_lemmas <> default_val_eq thm
R25720:25729 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R25742:25751 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R25762:25778 VST.floyd.reptype_lemmas <> fold_reptype_JMeq thm
R25790:25797 VST.floyd.jmeq_lemmas <> JMeq_sym thm
R25800:25816 VST.floyd.reptype_lemmas <> fold_reptype_JMeq thm
R25720:25729 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R25742:25751 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R25762:25778 VST.floyd.reptype_lemmas <> fold_reptype_JMeq thm
R25790:25797 VST.floyd.jmeq_lemmas <> JMeq_sym thm
R25800:25816 VST.floyd.reptype_lemmas <> fold_reptype_JMeq thm
R25848:25881 VST.floyd.base <> co_members_get_co_change_composite thm
R25848:25881 VST.floyd.base <> co_members_get_co_change_composite thm
R25848:25881 VST.floyd.base <> co_members_get_co_change_composite thm
R25902:25930 VST.floyd.fieldlist <> members_spec_change_composite thm
R25902:25930 VST.floyd.fieldlist <> members_spec_change_composite thm
R25969:25986 VST.floyd.reptype_lemmas <> struct_default_val def
R25999:26019 VST.floyd.compact_prod_sum <> compact_prod_gen_JMeq thm
R25999:26019 VST.floyd.compact_prod_sum <> compact_prod_gen_JMeq thm
R26037:26049 Coq.Lists.List <> Forall_forall thm
R26037:26049 Coq.Lists.List <> Forall_forall thm
R26037:26049 Coq.Lists.List <> Forall_forall thm
R26085:26094 compcert.cfrontend.Ctypes <> co_members proj
R26097:26102 VST.floyd.base <> get_co def
R26085:26094 compcert.cfrontend.Ctypes <> co_members proj
R26097:26102 VST.floyd.base <> get_co def
R26248:26261 VST.floyd.reptype_lemmas <> default_val_eq thm
R26275:26288 VST.floyd.reptype_lemmas <> default_val_eq thm
R26248:26261 VST.floyd.reptype_lemmas <> default_val_eq thm
R26248:26261 VST.floyd.reptype_lemmas <> default_val_eq thm
R26275:26288 VST.floyd.reptype_lemmas <> default_val_eq thm
R26275:26288 VST.floyd.reptype_lemmas <> default_val_eq thm
R26309:26318 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R26331:26340 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R26351:26367 VST.floyd.reptype_lemmas <> fold_reptype_JMeq thm
R26379:26386 VST.floyd.jmeq_lemmas <> JMeq_sym thm
R26389:26405 VST.floyd.reptype_lemmas <> fold_reptype_JMeq thm
R26309:26318 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R26331:26340 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R26351:26367 VST.floyd.reptype_lemmas <> fold_reptype_JMeq thm
R26379:26386 VST.floyd.jmeq_lemmas <> JMeq_sym thm
R26389:26405 VST.floyd.reptype_lemmas <> fold_reptype_JMeq thm
R26437:26470 VST.floyd.base <> co_members_get_co_change_composite thm
R26437:26470 VST.floyd.base <> co_members_get_co_change_composite thm
R26437:26470 VST.floyd.base <> co_members_get_co_change_composite thm
R26491:26519 VST.floyd.fieldlist <> members_spec_change_composite thm
R26491:26519 VST.floyd.fieldlist <> members_spec_change_composite thm
R26558:26574 VST.floyd.reptype_lemmas <> union_default_val def
R26587:26606 VST.floyd.compact_prod_sum <> compact_sum_gen_JMeq thm
R26587:26606 VST.floyd.compact_prod_sum <> compact_sum_gen_JMeq thm
R26624:26636 Coq.Lists.List <> Forall_forall thm
R26624:26636 Coq.Lists.List <> Forall_forall thm
R26624:26636 Coq.Lists.List <> Forall_forall thm
R26672:26681 compcert.cfrontend.Ctypes <> co_members proj
R26684:26689 VST.floyd.base <> get_co def
R26672:26681 compcert.cfrontend.Ctypes <> co_members proj
R26684:26689 VST.floyd.base <> get_co def
def 26836:26848 <> force_lengthn
binder 26851:26851 <> A:342
binder 26854:26854 <> n:343
R26861:26864 Coq.Init.Datatypes <> list ind
R26866:26866 VST.floyd.reptype_lemmas <> A:342 var
binder 26857:26858 <> xs:344
R26879:26879 VST.floyd.reptype_lemmas <> A:342 var
binder 26870:26876 <> default:345
R26896:26897 VST.floyd.reptype_lemmas <> xs:344 var
R26893:26893 VST.floyd.reptype_lemmas <> n:343 var
R26908:26908 Coq.Init.Datatypes <> O constr
R26916:26918 Coq.Init.Datatypes <> nil constr
R26924:26924 Coq.Init.Datatypes <> S constr
R26930:26932 Coq.Init.Datatypes <> nil constr
R26944:26947 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R26937:26943 VST.floyd.reptype_lemmas <> default:345 var
R26948:26960 VST.floyd.reptype_lemmas <> force_lengthn:346 def
R26969:26975 VST.floyd.reptype_lemmas <> default:345 var
R26965:26967 Coq.Init.Datatypes <> nil constr
R26981:26981 Coq.Init.Datatypes <> S constr
R26989:26992 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27001:27004 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R27005:27017 VST.floyd.reptype_lemmas <> force_lengthn:346 def
R27025:27031 VST.floyd.reptype_lemmas <> default:345 var
prf 27047:27068 <> force_lengthn_length_n
binder 27079:27079 <> A:349
binder 27082:27082 <> n:350
R27090:27093 Coq.Init.Datatypes <> list ind
R27095:27095 VST.floyd.reptype_lemmas <> A:349 var
binder 27085:27086 <> xs:351
R27108:27108 VST.floyd.reptype_lemmas <> A:349 var
binder 27099:27105 <> default:352
R27149:27151 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27114:27119 Coq.Lists.List <> length syndef
R27122:27134 VST.floyd.reptype_lemmas <> force_lengthn def
R27141:27147 VST.floyd.reptype_lemmas <> default:352 var
R27138:27139 VST.floyd.reptype_lemmas <> xs:351 var
R27136:27136 VST.floyd.reptype_lemmas <> n:350 var
R27152:27152 VST.floyd.reptype_lemmas <> n:350 var
prf 27296:27316 <> nth_force_lengthn_nil
binder 27327:27327 <> A:353
binder 27330:27330 <> n:354
binder 27332:27332 <> i:355
R27344:27344 VST.floyd.reptype_lemmas <> A:353 var
binder 27335:27341 <> default:356
R27393:27395 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27350:27352 Coq.Lists.List <> nth def
R27386:27392 VST.floyd.reptype_lemmas <> default:356 var
R27357:27369 VST.floyd.reptype_lemmas <> force_lengthn def
R27377:27383 VST.floyd.reptype_lemmas <> default:356 var
R27373:27375 Coq.Init.Datatypes <> nil constr
R27371:27371 VST.floyd.reptype_lemmas <> n:354 var
R27354:27354 VST.floyd.reptype_lemmas <> i:355 var
R27396:27402 VST.floyd.reptype_lemmas <> default:356 var
prf 27577:27593 <> nth_force_lengthn
binder 27604:27604 <> A:357
binder 27607:27607 <> n:358
binder 27609:27609 <> i:359
R27617:27620 Coq.Init.Datatypes <> list ind
R27622:27622 VST.floyd.reptype_lemmas <> A:357 var
binder 27612:27613 <> xs:360
R27635:27635 VST.floyd.reptype_lemmas <> A:357 var
binder 27626:27632 <> default:361
R27658:27663 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27706:27708 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27664:27666 Coq.Lists.List <> nth def
R27699:27705 VST.floyd.reptype_lemmas <> default:361 var
R27671:27683 VST.floyd.reptype_lemmas <> force_lengthn def
R27690:27696 VST.floyd.reptype_lemmas <> default:361 var
R27687:27688 VST.floyd.reptype_lemmas <> xs:360 var
R27685:27685 VST.floyd.reptype_lemmas <> n:358 var
R27668:27668 VST.floyd.reptype_lemmas <> i:359 var
R27709:27711 Coq.Lists.List <> nth def
R27718:27724 VST.floyd.reptype_lemmas <> default:361 var
R27715:27716 VST.floyd.reptype_lemmas <> xs:360 var
R27713:27713 VST.floyd.reptype_lemmas <> i:359 var
R27643:27646 Coq.Init.Peano <> ::nat_scope:x_'<='_x_'<'_x not
R27648:27650 Coq.Init.Peano <> ::nat_scope:x_'<='_x_'<'_x not
R27647:27647 VST.floyd.reptype_lemmas <> i:359 var
R27647:27647 VST.floyd.reptype_lemmas <> i:359 var
R27651:27651 VST.floyd.reptype_lemmas <> n:358 var
R27879:27899 VST.floyd.reptype_lemmas <> nth_force_lengthn_nil thm
R27879:27899 VST.floyd.reptype_lemmas <> nth_force_lengthn_nil thm
prf 27990:28005 <> force_lengthn_id
binder 28016:28016 <> A:362
binder 28019:28019 <> n:363
binder 28021:28022 <> ct:364
R28028:28028 VST.floyd.reptype_lemmas <> A:362 var
binder 28025:28025 <> d:365
R28045:28048 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28069:28071 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28049:28061 VST.floyd.reptype_lemmas <> force_lengthn def
R28068:28068 VST.floyd.reptype_lemmas <> d:365 var
R28065:28066 VST.floyd.reptype_lemmas <> ct:364 var
R28063:28063 VST.floyd.reptype_lemmas <> n:363 var
R28072:28073 VST.floyd.reptype_lemmas <> ct:364 var
R28041:28043 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28032:28037 Coq.Lists.List <> length syndef
R28039:28040 VST.floyd.reptype_lemmas <> ct:364 var
R28044:28044 VST.floyd.reptype_lemmas <> n:363 var
def 28386:28393 <> replist'
binder 28396:28396 <> A:366
R28409:28418 VST.floyd.sublist <> Inhabitant class
R28420:28420 VST.floyd.reptype_lemmas <> A:366 var
binder 28406:28406 <> d:367
R28428:28428 Coq.Numbers.BinNums <> Z ind
binder 28424:28425 <> lo:368
R28435:28437 Coq.Init.Datatypes <> nat ind
binder 28432:28432 <> n:369
R28445:28448 Coq.Init.Datatypes <> list ind
R28450:28450 VST.floyd.reptype_lemmas <> A:366 var
binder 28441:28442 <> al:370
R28463:28463 VST.floyd.reptype_lemmas <> n:369 var
R28473:28473 Coq.Init.Datatypes <> O constr
R28478:28480 Coq.Init.Datatypes <> nil constr
R28485:28485 Coq.Init.Datatypes <> S constr
R28504:28507 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28494:28497 VST.floyd.sublist <> Znth def
R28502:28503 VST.floyd.reptype_lemmas <> al:370 var
R28499:28500 VST.floyd.reptype_lemmas <> lo:368 var
R28508:28515 VST.floyd.reptype_lemmas <> replist':371 def
R28532:28533 VST.floyd.reptype_lemmas <> al:370 var
R28518:28523 Coq.ZArith.BinInt Z succ def
R28525:28526 VST.floyd.reptype_lemmas <> lo:368 var
def 28553:28559 <> replist
R28566:28574 VST.veric.mpred <> compspecs class
binder 28562:28563 <> cs:373
R28581:28584 compcert.cfrontend.Ctypes <> type ind
binder 28578:28578 <> t:374
R28596:28596 Coq.Numbers.BinNums <> Z ind
binder 28589:28590 <> lo:375
binder 28592:28593 <> hi:376
R28604:28607 Coq.Init.Datatypes <> list ind
R28610:28616 VST.floyd.reptype_lemmas <> reptype def
R28618:28618 VST.floyd.reptype_lemmas <> t:374 var
binder 28600:28601 <> al:377
R28627:28634 VST.floyd.reptype_lemmas <> replist' def
R28659:28660 VST.floyd.reptype_lemmas <> al:377 var
R28641:28648 Coq.ZArith.BinInt Z to_nat def
R28653:28653 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28651:28652 VST.floyd.reptype_lemmas <> hi:376 var
R28654:28655 VST.floyd.reptype_lemmas <> lo:375 var
R28637:28638 VST.floyd.reptype_lemmas <> lo:375 var
prf 28696:28710 <> replist_replist
R28717:28725 VST.veric.mpred <> compspecs class
binder 28713:28714 <> cs:378
binder 28737:28737 <> t:379
R28755:28755 Coq.Numbers.BinNums <> Z ind
binder 28740:28741 <> lo:380
binder 28743:28744 <> hi:381
binder 28746:28748 <> lo':382
binder 28750:28752 <> hi':383
binder 28758:28759 <> al:384
R28778:28784 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28800:28806 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28820:28825 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28864:28869 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28826:28832 VST.floyd.reptype_lemmas <> replist def
R28843:28849 VST.floyd.reptype_lemmas <> replist def
R28861:28862 VST.floyd.reptype_lemmas <> al:384 var
R28857:28859 VST.floyd.reptype_lemmas <> hi':383 var
R28853:28855 VST.floyd.reptype_lemmas <> lo':382 var
R28851:28851 VST.floyd.reptype_lemmas <> t:379 var
R28839:28840 VST.floyd.reptype_lemmas <> hi:381 var
R28836:28837 VST.floyd.reptype_lemmas <> lo:380 var
R28834:28834 VST.floyd.reptype_lemmas <> t:379 var
R28870:28876 VST.floyd.reptype_lemmas <> replist def
R28898:28899 VST.floyd.reptype_lemmas <> al:384 var
R28892:28892 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R28890:28891 VST.floyd.reptype_lemmas <> hi:381 var
R28893:28895 VST.floyd.reptype_lemmas <> lo':382 var
R28883:28883 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R28881:28882 VST.floyd.reptype_lemmas <> lo:380 var
R28884:28886 VST.floyd.reptype_lemmas <> lo':382 var
R28878:28878 VST.floyd.reptype_lemmas <> t:379 var
R28813:28816 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R28810:28810 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R28807:28809 VST.floyd.reptype_lemmas <> lo':382 var
R28811:28812 VST.floyd.reptype_lemmas <> hi:381 var
R28817:28819 VST.floyd.reptype_lemmas <> hi':383 var
R28786:28789 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R28793:28796 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R28790:28792 VST.floyd.reptype_lemmas <> lo':382 var
R28790:28792 VST.floyd.reptype_lemmas <> lo':382 var
R28797:28799 VST.floyd.reptype_lemmas <> hi':383 var
R28766:28769 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R28772:28775 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R28770:28771 VST.floyd.reptype_lemmas <> lo:380 var
R28770:28771 VST.floyd.reptype_lemmas <> lo:380 var
R28776:28777 VST.floyd.reptype_lemmas <> hi:381 var
R28925:28931 VST.floyd.reptype_lemmas <> replist def
R28943:28953 VST.floyd.reptype_lemmas <> default_val def
R28943:28953 VST.floyd.reptype_lemmas <> default_val def
R28982:28985 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28994:28994 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28976:28978 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R28988:28990 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29005:29005 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28982:28985 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28994:28994 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R28976:28978 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R28988:28990 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29005:29005 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R29029:29036 Coq.ZArith.BinInt Z to_nat def
R29041:29041 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R29029:29036 Coq.ZArith.BinInt Z to_nat def
R29041:29041 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R29064:29066 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29069:29071 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29072:29079 Coq.ZArith.BinInt Z of_nat def
R29064:29066 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29069:29071 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29072:29079 Coq.ZArith.BinInt Z of_nat def
R29104:29111 Coq.ZArith.Znat Z2Nat id thm
R29104:29111 Coq.ZArith.Znat Z2Nat id thm
R29104:29111 Coq.ZArith.Znat Z2Nat id thm
R29180:29190 Coq.ZArith.BinInt Z add_assoc thm
R29180:29190 Coq.ZArith.BinInt Z add_assoc thm
R29180:29190 Coq.ZArith.BinInt Z add_assoc thm
R29333:29340 Coq.ZArith.BinInt Z to_nat def
R29346:29346 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R29333:29340 Coq.ZArith.BinInt Z to_nat def
R29346:29346 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R29369:29373 Coq.ZArith.Znat <> inj_S syndef
R29369:29373 Coq.ZArith.Znat <> inj_S syndef
R29369:29373 Coq.ZArith.Znat <> inj_S syndef
R29405:29407 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29408:29415 Coq.ZArith.BinInt Z of_nat def
R29451:29458 Coq.ZArith.Znat Z2Nat id thm
R29405:29407 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29408:29415 Coq.ZArith.BinInt Z of_nat def
R29451:29458 Coq.ZArith.Znat Z2Nat id thm
R29451:29458 Coq.ZArith.Znat Z2Nat id thm
R29504:29506 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R29507:29514 Coq.ZArith.BinInt Z of_nat def
R29504:29506 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R29507:29514 Coq.ZArith.BinInt Z of_nat def
R29610:29617 VST.floyd.reptype_lemmas <> replist' def
R29626:29633 VST.floyd.reptype_lemmas <> replist' def
R29626:29633 VST.floyd.reptype_lemmas <> replist' def
R29646:29650 Coq.ZArith.Znat <> inj_S syndef
R29646:29650 Coq.ZArith.Znat <> inj_S syndef
R29646:29650 Coq.ZArith.Znat <> inj_S syndef
R29682:29685 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R29680:29680 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29687:29687 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R29682:29685 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R29680:29680 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29687:29687 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R29734:29737 VST.floyd.sublist <> Znth def
R29753:29760 VST.msl.Coqlib2 <> if_false thm
R29753:29760 VST.msl.Coqlib2 <> if_false thm
R29753:29760 VST.msl.Coqlib2 <> if_false thm
R29803:29806 VST.floyd.sublist <> Znth def
R29822:29829 VST.msl.Coqlib2 <> if_false thm
R29822:29829 VST.msl.Coqlib2 <> if_false thm
R29822:29829 VST.msl.Coqlib2 <> if_false thm
R29851:29858 Coq.ZArith.BinInt Z to_nat def
R29851:29858 Coq.ZArith.BinInt Z to_nat def
R29879:29890 Coq.ZArith.Znat Z2Nat inj_lt thm
R29879:29890 Coq.ZArith.Znat Z2Nat inj_lt thm
R29954:29959 Coq.ZArith.BinInt Z succ def
R29940:29947 Coq.ZArith.BinInt Z of_nat def
R29954:29959 Coq.ZArith.BinInt Z succ def
R29940:29947 Coq.ZArith.BinInt Z of_nat def
R29981:29981 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30004:30006 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29993:30000 Coq.ZArith.BinInt Z of_nat def
R30007:30012 Coq.ZArith.BinInt Z succ def
R29981:29981 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30004:30006 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R29993:30000 Coq.ZArith.BinInt Z of_nat def
R30007:30012 Coq.ZArith.BinInt Z succ def
R30033:30038 Coq.ZArith.BinInt Z succ def
R30072:30074 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30068:30070 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30057:30064 Coq.ZArith.BinInt Z of_nat def
R30072:30074 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30068:30070 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30057:30064 Coq.ZArith.BinInt Z of_nat def
R30160:30163 VST.floyd.sublist <> Znth def
R30174:30181 VST.msl.Coqlib2 <> if_false thm
R30174:30181 VST.msl.Coqlib2 <> if_false thm
R30174:30181 VST.msl.Coqlib2 <> if_false thm
R30199:30206 Coq.ZArith.Znat Nat2Z id thm
R30199:30206 Coq.ZArith.Znat Nat2Z id thm
R30199:30206 Coq.ZArith.Znat Nat2Z id thm
R30236:30241 Coq.ZArith.BinInt Z succ def
R30236:30241 Coq.ZArith.BinInt Z succ def
prf 30304:30316 <> replist'_succ
binder 30328:30328 <> A:385
R30334:30343 VST.floyd.sublist <> Inhabitant class
R30345:30345 VST.floyd.reptype_lemmas <> A:385 var
binder 30332:30332 <> d:386
binder 30348:30349 <> lo:387
binder 30351:30351 <> n:388
binder 30353:30353 <> r:389
binder 30355:30356 <> al:390
R30362:30362 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30368:30372 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30403:30405 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30373:30380 VST.floyd.reptype_lemmas <> replist' def
R30398:30399 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30397:30397 VST.floyd.reptype_lemmas <> r:389 var
R30400:30401 VST.floyd.reptype_lemmas <> al:390 var
R30394:30394 VST.floyd.reptype_lemmas <> n:388 var
R30383:30388 Coq.ZArith.BinInt Z succ def
R30390:30391 VST.floyd.reptype_lemmas <> lo:387 var
R30406:30413 VST.floyd.reptype_lemmas <> replist' def
R30420:30421 VST.floyd.reptype_lemmas <> al:390 var
R30418:30418 VST.floyd.reptype_lemmas <> n:388 var
R30415:30416 VST.floyd.reptype_lemmas <> lo:387 var
R30365:30366 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R30363:30364 VST.floyd.reptype_lemmas <> lo:387 var
R30505:30508 VST.floyd.sublist <> Znth def
R30525:30532 VST.msl.Coqlib2 <> if_false thm
R30525:30532 VST.msl.Coqlib2 <> if_false thm
R30525:30532 VST.msl.Coqlib2 <> if_false thm
R30525:30532 VST.msl.Coqlib2 <> if_false thm
R30525:30532 VST.msl.Coqlib2 <> if_false thm
R30552:30559 Coq.ZArith.BinInt Z to_nat def
R30562:30567 Coq.ZArith.BinInt Z succ def
R30580:30580 Coq.Init.Datatypes <> S constr
R30583:30590 Coq.ZArith.BinInt Z to_nat def
R30552:30559 Coq.ZArith.BinInt Z to_nat def
R30562:30567 Coq.ZArith.BinInt Z succ def
R30580:30580 Coq.Init.Datatypes <> S constr
R30583:30590 Coq.ZArith.BinInt Z to_nat def
R30619:30624 Coq.ZArith.BinInt Z succ def
R30635:30647 Coq.ZArith.Znat Z2Nat inj_add thm
R30635:30647 Coq.ZArith.Znat Z2Nat inj_add thm
R30635:30647 Coq.ZArith.Znat Z2Nat inj_add thm
R30666:30673 Coq.ZArith.BinInt Z to_nat def
R30666:30673 Coq.ZArith.BinInt Z to_nat def
prf 30724:30743 <> replist_firstn_skipn
R30750:30758 VST.veric.mpred <> compspecs class
binder 30746:30747 <> cs:391
binder 30770:30770 <> t:392
binder 30772:30773 <> lo:393
binder 30775:30776 <> hi:394
binder 30778:30779 <> al:395
R30811:30816 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30857:30859 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30817:30823 VST.floyd.reptype_lemmas <> replist def
R30855:30856 VST.floyd.reptype_lemmas <> al:395 var
R30842:30849 Coq.ZArith.BinInt Z of_nat def
R30851:30852 VST.floyd.reptype_lemmas <> hi:394 var
R30828:30835 Coq.ZArith.BinInt Z of_nat def
R30837:30838 VST.floyd.reptype_lemmas <> lo:393 var
R30825:30825 VST.floyd.reptype_lemmas <> t:392 var
R30860:30865 Coq.Lists.List <> firstn def
R30876:30880 Coq.Lists.List <> skipn def
R30885:30886 VST.floyd.reptype_lemmas <> al:395 var
R30882:30883 VST.floyd.reptype_lemmas <> lo:393 var
R30870:30870 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R30868:30869 VST.floyd.reptype_lemmas <> hi:394 var
R30871:30872 VST.floyd.reptype_lemmas <> lo:393 var
R30787:30790 Coq.Init.Peano <> ::nat_scope:x_'<='_x_'<='_x not
R30793:30796 Coq.Init.Peano <> ::nat_scope:x_'<='_x_'<='_x not
R30785:30786 VST.floyd.reptype_lemmas <> lo:393 var
R30791:30792 VST.floyd.reptype_lemmas <> hi:394 var
R30791:30792 VST.floyd.reptype_lemmas <> hi:394 var
R30797:30802 Coq.Lists.List <> length syndef
R30804:30805 VST.floyd.reptype_lemmas <> al:395 var
R30913:30919 VST.floyd.reptype_lemmas <> replist def
R30934:30946 Coq.ZArith.Znat Nat2Z inj_sub thm
R30934:30946 Coq.ZArith.Znat Nat2Z inj_sub thm
R30934:30946 Coq.ZArith.Znat Nat2Z inj_sub thm
R30965:30972 Coq.ZArith.Znat Nat2Z id thm
R30965:30972 Coq.ZArith.Znat Nat2Z id thm
R30965:30972 Coq.ZArith.Znat Nat2Z id thm
R30989:30992 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R30986:30986 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R31002:31004 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R30993:30998 Coq.Lists.List <> length syndef
R30989:30992 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R30986:30986 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R31002:31004 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R30993:30998 Coq.Lists.List <> length syndef
R31042:31042 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R31042:31042 Coq.Init.Peano <> ::nat_scope:x_'-'_x not
R31124:31127 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R31128:31133 Coq.Lists.List <> length syndef
R31124:31127 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R31128:31133 Coq.Lists.List <> length syndef
R31303:31315 VST.floyd.reptype_lemmas <> replist'_succ thm
R31303:31315 VST.floyd.reptype_lemmas <> replist'_succ thm
R31303:31315 VST.floyd.reptype_lemmas <> replist'_succ thm
R31358:31362 Coq.ZArith.Znat <> inj_S syndef
R31358:31362 Coq.ZArith.Znat <> inj_S syndef
R31358:31362 Coq.ZArith.Znat <> inj_S syndef
R31409:31409 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31409:31409 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31525:31537 VST.floyd.reptype_lemmas <> replist'_succ thm
R31525:31537 VST.floyd.reptype_lemmas <> replist'_succ thm
prf 31557:31563 <> skipn_0
binder 31574:31574 <> A:396
R31581:31584 Coq.Init.Datatypes <> list ind
R31586:31586 VST.floyd.reptype_lemmas <> A:396 var
binder 31577:31578 <> al:397
binder 31589:31589 <> n:398
R31603:31606 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31617:31619 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31607:31611 Coq.Lists.List <> skipn def
R31615:31616 VST.floyd.reptype_lemmas <> al:397 var
R31613:31613 VST.floyd.reptype_lemmas <> n:398 var
R31620:31621 VST.floyd.reptype_lemmas <> al:397 var
R31596:31596 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31595:31595 VST.floyd.reptype_lemmas <> n:398 var
prf 31671:31682 <> replist_elim
R31689:31697 VST.veric.mpred <> compspecs class
binder 31685:31686 <> cs:399
binder 31710:31710 <> t:400
binder 31712:31713 <> lo:401
binder 31715:31716 <> hi:402
binder 31718:31719 <> al:403
R31732:31735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31751:31758 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31777:31779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31759:31765 VST.floyd.reptype_lemmas <> replist def
R31775:31776 VST.floyd.reptype_lemmas <> al:403 var
R31772:31773 VST.floyd.reptype_lemmas <> hi:402 var
R31769:31770 VST.floyd.reptype_lemmas <> lo:401 var
R31767:31767 VST.floyd.reptype_lemmas <> t:400 var
R31780:31781 VST.floyd.reptype_lemmas <> al:403 var
R31738:31740 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31736:31737 VST.floyd.reptype_lemmas <> hi:402 var
R31741:31747 Coq.ZArith.Zcomplements <> Zlength def
R31749:31750 VST.floyd.reptype_lemmas <> al:403 var
R31728:31730 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31726:31727 VST.floyd.reptype_lemmas <> lo:401 var
R31821:31828 Coq.ZArith.BinInt Z of_nat def
R31821:31828 Coq.ZArith.BinInt Z of_nat def
R31842:31856 Coq.ZArith.Zcomplements <> Zlength_correct thm
R31842:31856 Coq.ZArith.Zcomplements <> Zlength_correct thm
R31842:31856 Coq.ZArith.Zcomplements <> Zlength_correct thm
R31867:31886 VST.floyd.reptype_lemmas <> replist_firstn_skipn thm
R31867:31886 VST.floyd.reptype_lemmas <> replist_firstn_skipn thm
R31867:31886 VST.floyd.reptype_lemmas <> replist_firstn_skipn thm
R31904:31910 VST.floyd.reptype_lemmas <> skipn_0 thm
R31904:31910 VST.floyd.reptype_lemmas <> skipn_0 thm
R31904:31910 VST.floyd.reptype_lemmas <> skipn_0 thm
R31929:31946 Coq.Numbers.Natural.Peano.NPeano Nat sub_0_r thm
R31929:31946 Coq.Numbers.Natural.Peano.NPeano Nat sub_0_r thm
R31929:31946 Coq.Numbers.Natural.Peano.NPeano Nat sub_0_r thm
R31955:31973 VST.floyd.sublist <> firstn_exact_length thm
R31955:31973 VST.floyd.sublist <> firstn_exact_length thm
prf 31988:32002 <> replist_Zlength
R32009:32017 VST.veric.mpred <> compspecs class
binder 32005:32006 <> cs:404
binder 32030:32030 <> t:405
binder 32032:32033 <> lo:406
binder 32035:32036 <> hi:407
binder 32038:32039 <> al:408
R32054:32060 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32089:32091 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32061:32067 Coq.ZArith.Zcomplements <> Zlength def
R32070:32076 VST.floyd.reptype_lemmas <> replist def
R32086:32087 VST.floyd.reptype_lemmas <> al:408 var
R32083:32084 VST.floyd.reptype_lemmas <> hi:407 var
R32080:32081 VST.floyd.reptype_lemmas <> lo:406 var
R32078:32078 VST.floyd.reptype_lemmas <> t:405 var
R32094:32094 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R32092:32093 VST.floyd.reptype_lemmas <> hi:407 var
R32095:32096 VST.floyd.reptype_lemmas <> lo:406 var
R32048:32051 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R32046:32047 VST.floyd.reptype_lemmas <> lo:406 var
R32052:32053 VST.floyd.reptype_lemmas <> hi:407 var
R32126:32133 Coq.ZArith.Znat Z2Nat id thm
R32138:32138 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R32126:32133 Coq.ZArith.Znat Z2Nat id thm
R32138:32138 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R32126:32133 Coq.ZArith.Znat Z2Nat id thm
R32138:32138 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R32159:32165 VST.floyd.reptype_lemmas <> replist def
R32185:32192 Coq.ZArith.BinInt Z to_nat def
R32197:32197 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R32185:32192 Coq.ZArith.BinInt Z to_nat def
R32197:32197 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R32266:32276 Coq.ZArith.Zcomplements <> Zlength_nil thm
R32266:32276 Coq.ZArith.Zcomplements <> Zlength_nil thm
R32266:32276 Coq.ZArith.Zcomplements <> Zlength_nil thm
R32293:32297 Coq.ZArith.Znat <> inj_S syndef
R32293:32297 Coq.ZArith.Znat <> inj_S syndef
R32293:32297 Coq.ZArith.Znat <> inj_S syndef
R32315:32326 Coq.ZArith.Zcomplements <> Zlength_cons thm
R32315:32326 Coq.ZArith.Zcomplements <> Zlength_cons thm
R32315:32326 Coq.ZArith.Zcomplements <> Zlength_cons thm
prf 32360:32373 <> replist_length
R32380:32388 VST.veric.mpred <> compspecs class
binder 32376:32377 <> cs:409
binder 32401:32401 <> t:410
binder 32403:32404 <> lo:411
binder 32406:32407 <> hi:412
binder 32409:32410 <> al:413
R32425:32431 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32459:32461 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32432:32437 Coq.Lists.List <> length syndef
R32440:32446 VST.floyd.reptype_lemmas <> replist def
R32456:32457 VST.floyd.reptype_lemmas <> al:413 var
R32453:32454 VST.floyd.reptype_lemmas <> hi:412 var
R32450:32451 VST.floyd.reptype_lemmas <> lo:411 var
R32448:32448 VST.floyd.reptype_lemmas <> t:410 var
R32462:32469 Coq.ZArith.BinInt Z to_nat def
R32474:32474 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R32472:32473 VST.floyd.reptype_lemmas <> hi:412 var
R32475:32476 VST.floyd.reptype_lemmas <> lo:411 var
R32419:32422 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R32417:32418 VST.floyd.reptype_lemmas <> lo:411 var
R32423:32424 VST.floyd.reptype_lemmas <> hi:412 var
R32507:32514 Coq.ZArith.Znat Nat2Z id thm
R32517:32522 Coq.Lists.List <> length syndef
R32507:32514 Coq.ZArith.Znat Nat2Z id thm
R32517:32522 Coq.Lists.List <> length syndef
R32507:32514 Coq.ZArith.Znat Nat2Z id thm
R32517:32522 Coq.Lists.List <> length syndef
R32549:32563 Coq.ZArith.Zcomplements <> Zlength_correct thm
R32549:32563 Coq.ZArith.Zcomplements <> Zlength_correct thm
R32549:32563 Coq.ZArith.Zcomplements <> Zlength_correct thm
R32572:32586 VST.floyd.reptype_lemmas <> replist_Zlength thm
R32572:32586 VST.floyd.reptype_lemmas <> replist_Zlength thm
prf 32661:32679 <> unfold_reptype_elim
binder 32691:32692 <> cs:414
binder 32694:32694 <> t:415
binder 32696:32696 <> v:416
binder 32698:32699 <> v':417
R32715:32721 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32744:32746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32723:32736 VST.floyd.reptype_lemmas <> unfold_reptype def
R32743:32743 VST.floyd.reptype_lemmas <> v:416 var
R32741:32741 VST.floyd.reptype_lemmas <> t:415 var
R32738:32739 VST.floyd.reptype_lemmas <> cs:414 var
R32747:32748 VST.floyd.reptype_lemmas <> v':417 var
R32706:32709 VST.floyd.jmeq_lemmas <> JMeq def
R32713:32714 VST.floyd.reptype_lemmas <> v':417 var
R32711:32711 VST.floyd.reptype_lemmas <> v:416 var
R32773:32786 VST.floyd.reptype_lemmas <> unfold_reptype def
R32853:32864 VST.floyd.jmeq_lemmas <> eq_rect_JMeq thm
R32906:32915 VST.floyd.reptype_lemmas <> reptype_eq thm
binder 32888:32888 <> x:418
R32900:32900 VST.floyd.reptype_lemmas <> x:418 var
R32869:32875 VST.floyd.reptype_lemmas <> reptype def
R32853:32864 VST.floyd.jmeq_lemmas <> eq_rect_JMeq thm
R32906:32915 VST.floyd.reptype_lemmas <> reptype_eq thm
binder 32888:32888 <> x:419
R32900:32900 VST.floyd.reptype_lemmas <> x:419 var
R32869:32875 VST.floyd.reptype_lemmas <> reptype def
R32928:32934 VST.floyd.jmeq_lemmas <> JMeq_eq thm
R32928:32934 VST.floyd.jmeq_lemmas <> JMeq_eq thm
R32961:32967 VST.floyd.reptype_lemmas <> reptype def
R32944:32953 VST.floyd.jmeq_lemmas <> JMeq_trans thm
R32961:32967 VST.floyd.reptype_lemmas <> reptype def
R32944:32953 VST.floyd.jmeq_lemmas <> JMeq_trans thm
prf 32994:33026 <> Zlength_default_val_Tarray_tuchar
binder 33029:33030 <> cs:420
binder 33033:33033 <> n:421
binder 33035:33035 <> a:422
R33041:33042 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R33043:33043 VST.floyd.reptype_lemmas <> n:421 var
binder 33038:33038 <> N:423
R33092:33094 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33047:33053 Coq.ZArith.Zcomplements <> Zlength def
R33057:33067 VST.floyd.reptype_lemmas <> default_val def
R33073:33078 compcert.cfrontend.Ctypes <> Tarray constr
R33089:33089 VST.floyd.reptype_lemmas <> a:422 var
R33087:33087 VST.floyd.reptype_lemmas <> n:421 var
R33080:33085 compcert.exportclight.Clightdefs <> tuchar def
R33069:33070 VST.floyd.reptype_lemmas <> cs:420 var
R33095:33095 VST.floyd.reptype_lemmas <> n:421 var
R33112:33122 VST.floyd.reptype_lemmas <> default_val def
R33140:33158 VST.floyd.sublist <> Zlength_list_repeat thm
R33140:33158 VST.floyd.sublist <> Zlength_list_repeat thm
R33140:33158 VST.floyd.sublist <> Zlength_list_repeat thm
R33140:33158 VST.floyd.sublist <> Zlength_list_repeat thm
